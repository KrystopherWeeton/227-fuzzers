; ModuleID = '../../third_party/skia/src/sksl/SkSLIRGenerator.cpp'
source_filename = "../../third_party/skia/src/sksl/SkSLIRGenerator.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.SkSL::IRGenerator" = type <{ %"class.SkSL::Context"*, %"struct.SkSL::Program::Inputs", [6 x i8], %"class.std::__1::unique_ptr.49", %"class.std::__1::shared_ptr", %"class.SkSL::IRIntrinsicMap"*, %"class.std::__1::unordered_set.86", i32, [4 x i8], %"class.std::__1::unordered_set.111", %"class.std::__1::vector.137"*, %"class.std::__1::vector.150"*, %"class.SkSL::Variable"*, %"class.SkSL::Variable"*, i32, i8, [3 x i8] }>
%"struct.SkSL::Program::Inputs" = type { i8, i8 }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"struct.SkSL::ASTFile"* }
%"struct.SkSL::ASTFile" = type <{ %"class.std::__1::vector.52", %"class.SkSL::ASTNode::ID", [4 x i8] }>
%"class.std::__1::vector.52" = type { %"class.std::__1::__vector_base.53" }
%"class.std::__1::__vector_base.53" = type { %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"*, %"class.std::__1::__compressed_pair.54" }
%"struct.SkSL::ASTNode" = type { %"class.std::__1::vector.52"*, %"struct.SkSL::ASTNode::NodeData", i32, i32, %"class.SkSL::ASTNode::ID", %"class.SkSL::ASTNode::ID", %"class.SkSL::ASTNode::ID" }
%"struct.SkSL::ASTNode::NodeData" = type { [128 x i8], i32 }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"struct.SkSL::ASTNode"* }
%"class.SkSL::ASTNode::ID" = type { i32 }
%"class.std::__1::shared_ptr" = type { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::SymbolTable" = type { %"class.std::__1::shared_ptr", %"class.std::__1::vector.163", i8, %"class.std::__1::vector.171", %"class.std::__1::forward_list", %class.SkTHashMap, %"class.SkSL::ErrorReporter"* }
%"class.std::__1::vector.163" = type { %"class.std::__1::__vector_base.164" }
%"class.std::__1::__vector_base.164" = type { %"class.std::__1::unique_ptr.165"*, %"class.std::__1::unique_ptr.165"*, %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.372" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.373" }
%"struct.std::__1::__compressed_pair_elem.373" = type { %"class.SkSL::Symbol"* }
%"class.SkSL::Symbol" = type { %"class.SkSL::IRNode", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%"struct.SkSL::StringFragment" = type { i8*, i64 }
%"class.SkSL::Type" = type { %"class.SkSL::Symbol", i8*, %"class.SkSL::String", i32, i32, i32, %"class.SkSL::Type"*, %"class.std::__1::vector", i32, i32, %"class.std::__1::vector.8", i32, i8, i8, i8, i8, i8, %"class.SkSL::Type"*, %"class.SkSL::Type"* }
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.0" }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.SkSL::Type"**, %"class.SkSL::Type"**, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.SkSL::Type"** }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"*, %"class.std::__1::__compressed_pair.10" }
%"struct.SkSL::Type::Field" = type { %"struct.SkSL::Modifiers", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::Modifiers" = type { %"struct.SkSL::Layout", i32, [4 x i8] }
%"struct.SkSL::Layout" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.SkSL::Type::Field"* }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.std::__1::unique_ptr.165"* }
%"class.std::__1::vector.171" = type { %"class.std::__1::__vector_base.172" }
%"class.std::__1::__vector_base.172" = type { %"class.std::__1::unique_ptr.173"*, %"class.std::__1::unique_ptr.173"*, %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.377" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.378" }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"class.SkSL::IRNode"* }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.std::__1::unique_ptr.173"* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type { %"struct.std::__1::__forward_begin_node", %"class.SkSL::String" }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.184" }
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair" = type { %"struct.std::__1::pair.382" }
%"struct.std::__1::pair.382" = type { %"struct.SkSL::SymbolTable::SymbolKey", %"class.SkSL::Symbol"* }
%"struct.SkSL::SymbolTable::SymbolKey" = type <{ %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.SkSL::ErrorReporter" = type { i32 (...)** }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.SkSL::IRIntrinsicMap" = type { %"class.std::__1::unordered_map", %"class.SkSL::IRIntrinsicMap"* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.62" }
%"class.std::__1::__hash_table.62" = type <{ %"class.std::__1::unique_ptr.63", %"class.std::__1::__compressed_pair.73", %"class.std::__1::__compressed_pair.78", %"class.std::__1::__compressed_pair.81", [4 x i8] }>
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65", %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"struct.std::__1::__hash_node_base.66"** }
%"struct.std::__1::__hash_node_base.66" = type { %"struct.std::__1::__hash_node_base.66"* }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.std::__1::__bucket_list_deallocator.68" }
%"class.std::__1::__bucket_list_deallocator.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { i64 }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"struct.std::__1::__hash_node_base.66" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { float }
%"class.std::__1::unordered_set.86" = type { %"class.std::__1::__hash_table.87" }
%"class.std::__1::__hash_table.87" = type <{ %"class.std::__1::unique_ptr.88", %"class.std::__1::__compressed_pair.98", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.106", [4 x i8] }>
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90", %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"struct.std::__1::__hash_node_base.91"** }
%"struct.std::__1::__hash_node_base.91" = type { %"struct.std::__1::__hash_node_base.91"* }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.std::__1::__bucket_list_deallocator.93" }
%"class.std::__1::__bucket_list_deallocator.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.std::__1::__hash_node_base.91" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::unordered_set.111" = type { %"class.std::__1::__hash_table.112" }
%"class.std::__1::__hash_table.112" = type <{ %"class.std::__1::unique_ptr.113", %"class.std::__1::__compressed_pair.123", %"class.std::__1::__compressed_pair.128", %"class.std::__1::__compressed_pair.132", [4 x i8] }>
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115", %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.std::__1::__hash_node_base.116"** }
%"struct.std::__1::__hash_node_base.116" = type { %"struct.std::__1::__hash_node_base.116"* }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.std::__1::__bucket_list_deallocator.118" }
%"class.std::__1::__bucket_list_deallocator.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.std::__1::__hash_node_base.116" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::vector.137" = type { %"class.std::__1::__vector_base.138" }
%"class.std::__1::__vector_base.138" = type { %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"*, %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.SkSL::ProgramElement"* }
%"class.SkSL::ProgramElement" = type { %"class.SkSL::IRNode" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.std::__1::unique_ptr.139"* }
%"class.std::__1::vector.150" = type { %"class.std::__1::__vector_base.151" }
%"class.std::__1::__vector_base.151" = type { %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"**, %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.SkSL::ProgramElement"** }
%"class.SkSL::Variable" = type <{ %"class.SkSL::Symbol", %"class.SkSL::VarDeclaration"*, %"struct.SkSL::Modifiers"*, i8, i8, [6 x i8] }>
%"class.SkSL::VarDeclaration" = type { %"class.SkSL::Statement", %"class.SkSL::Variable"*, %"class.SkSL::Type"*, i32, %"class.std::__1::unique_ptr.157" }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.SkSL::Expression"* }
%"class.SkSL::Expression" = type { %"class.SkSL::IRNode", %"class.SkSL::Type"* }
%"class.SkSL::Context" = type { %"class.SkSL::BuiltinTypes", %"class.SkSL::ErrorReporter"*, %class.GrShaderCaps*, %"class.SkSL::ModifiersPool"*, %"struct.SkSL::ProgramConfig"* }
%"class.SkSL::BuiltinTypes" = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.SkSL::Type"* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.SkSL::ModifiersPool" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.17", %"class.std::__1::__compressed_pair.26", %"class.std::__1::__compressed_pair.31", %"class.std::__1::__compressed_pair.33", [4 x i8] }>
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19", %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.SkSL::ProgramConfig" = type { i8, %"struct.SkSL::ProgramSettings" }
%"struct.SkSL::ProgramSettings" = type { i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.36"* }
%"class.std::__1::vector.36" = type { %"class.std::__1::__vector_base.37" }
%"class.std::__1::__vector_base.37" = type { %"class.std::__1::unique_ptr.38"*, %"class.std::__1::unique_ptr.38"*, %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.SkSL::ExternalFunction"* }
%"class.SkSL::ExternalFunction" = type { %"class.SkSL::Symbol" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.std::__1::unique_ptr.38"* }
%"class.std::__1::unique_ptr.190" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"class.SkSL::Statement"* }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.SkSL::Extension" = type { %"class.SkSL::ProgramElement", %"class.SkSL::String" }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [16 x i8] }
%class.SkTArray = type { %"class.std::__1::unique_ptr.190"*, i64 }
%"class.SkSL::Block" = type <{ %"class.SkSL::Statement", %class.SkSTArray, %"class.std::__1::shared_ptr", i8, [7 x i8] }>
%"class.SkSL::FunctionDeclaration" = type { %"class.SkSL::Symbol", %"class.SkSL::FunctionDefinition"*, %"struct.SkSL::Modifiers"*, %"class.std::__1::vector.208", %"class.SkSL::Type"*, i8, i8, i32 }
%"class.SkSL::FunctionDefinition" = type { %"class.SkSL::ProgramElement", %"class.SkSL::FunctionDeclaration"*, i8, %"class.std::__1::unique_ptr.190", %"class.std::__1::unordered_set.86", %"struct.SkSL::ASTNode"* }
%"class.std::__1::vector.208" = type { %"class.std::__1::__vector_base.209" }
%"class.std::__1::__vector_base.209" = type { %"class.SkSL::Variable"**, %"class.SkSL::Variable"**, %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"class.SkSL::Variable"** }
%class.SkSTArray.215 = type { %class.SkAlignedSTStorage.216, %class.SkTArray.217 }
%class.SkAlignedSTStorage.216 = type { [16 x i8] }
%class.SkTArray.217 = type { %"class.std::__1::unique_ptr.157"*, i64 }
%"class.SkSL::dsl::DSLStatement" = type { %"class.std::__1::unique_ptr.190" }
%"class.SkSL::dsl::DSLPossibleExpression" = type { %"class.std::__1::unique_ptr.157" }
%"class.SkSL::dsl::DSLExpression" = type { %"class.std::__1::unique_ptr.157" }
%"class.SkSL::InterfaceBlock" = type { %"class.SkSL::ProgramElement", %"class.SkSL::Variable"*, %"class.SkSL::String", %"class.SkSL::String", i32, %"class.std::__1::shared_ptr" }
%"class.SkSL::VariableReference" = type <{ %"class.SkSL::Expression", %"class.SkSL::Variable"*, i8, [7 x i8] }>
%class.anon.248 = type { i32*, i32*, %"class.SkSL::ErrorReporter"*, i32* }
%class.anon.249 = type { i32*, i32*, %"class.SkSL::ErrorReporter"*, i32* }
%"class.SkSL::ModifiersDeclaration" = type { %"class.SkSL::ProgramElement", %"struct.SkSL::Modifiers"* }
%"class.SkSL::dsl::DSLVar" = type <{ %"class.SkSL::dsl::DSLModifiers", %"class.SkSL::dsl::DSLType", i32, [4 x i8], %"class.std::__1::unique_ptr.190", %"class.SkSL::Variable"*, i8*, i8*, %"class.SkSL::dsl::DSLExpression", i8, i8, [6 x i8] }>
%"class.SkSL::dsl::DSLModifiers" = type { %"struct.SkSL::Modifiers" }
%"class.SkSL::dsl::DSLType" = type <{ %"class.SkSL::Type"*, i8, [7 x i8] }>
%"class.SkSL::dsl::DSLBlock" = type { %class.SkSTArray, %"class.std::__1::shared_ptr" }
%"class.SkSL::dsl::DSLFunction" = type { i32 (...)**, %"class.SkSL::FunctionDeclaration"* }
%class.SkTArray.242 = type { %"class.SkSL::dsl::DSLWrapper"*, i64 }
%"class.SkSL::dsl::DSLWrapper" = type { %"class.SkSL::dsl::DSLExpression" }
%"class.SkSL::dsl::PositionInfo" = type <{ i8*, i32, [4 x i8] }>
%"class.std::__1::vector.315" = type { %"class.std::__1::__vector_base.316" }
%"class.std::__1::__vector_base.316" = type { %"class.SkSL::FunctionDeclaration"**, %"class.SkSL::FunctionDeclaration"**, %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"class.SkSL::FunctionDeclaration"** }
%"class.std::__1::__vector_base_common" = type { i8 }
%class.Finalizer = type { %"class.SkSL::ProgramWriter", %"class.SkSL::IRGenerator"*, %"class.SkSL::FunctionDeclaration"*, i32, i32 }
%"class.SkSL::ProgramWriter" = type { %"class.SkSL::TProgramVisitor" }
%"class.SkSL::TProgramVisitor" = type { i32 (...)** }
%class.SkScopeExit = type { %"class.std::__1::function" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*)* }
%"class.std::__1::vector.251" = type { %"class.std::__1::__vector_base.252" }
%"class.std::__1::__vector_base.252" = type { %"class.std::__1::unique_ptr.218"*, %"class.std::__1::unique_ptr.218"*, %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.SkSL::Variable"* }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"class.std::__1::unique_ptr.218"* }
%"class.std::__1::unique_ptr.202" = type { %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"class.SkSL::Block"* }
%"class.SkSL::StructDefinition" = type { %"class.SkSL::ProgramElement", %"class.SkSL::Type"* }
%"class.SkSL::Section" = type { %"class.SkSL::ProgramElement", %"class.SkSL::String", %"class.SkSL::String", %"class.SkSL::String" }
%"struct.std::__1::__hash_node.453" = type { %"struct.std::__1::__hash_node_base.91", i64, %"class.SkSL::FunctionDeclaration"* }
%class.SkSTArray.352 = type { %class.SkAlignedSTStorage.353, %class.SkTArray.354 }
%class.SkAlignedSTStorage.353 = type { [64 x i8] }
%class.SkTArray.354 = type { %"class.SkSL::Type"**, i64 }
%class.SkSTArray.362 = type { %class.SkAlignedSTStorage.363, %class.SkTArray.364 }
%class.SkAlignedSTStorage.363 = type { [4 x i8] }
%class.SkTArray.364 = type { i8*, i64 }
%"class.SkSL::Enum" = type <{ %"class.SkSL::ProgramElement", %"struct.SkSL::StringFragment", %"class.std::__1::shared_ptr", i8, i8, [6 x i8] }>
%class.BuiltinVariableScanner = type <{ %"class.SkSL::ProgramVisitor", %"class.SkSL::IRGenerator"*, %"class.std::__1::vector.150", i8, [7 x i8] }>
%"class.SkSL::ProgramVisitor" = type { %"class.SkSL::TProgramVisitor.368" }
%"class.SkSL::TProgramVisitor.368" = type { i32 (...)** }
%"struct.SkSL::ParsedModule" = type { %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr.370" }
%"class.std::__1::shared_ptr.370" = type { %"class.SkSL::IRIntrinsicMap"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::__hash_node.419" = type { %"struct.std::__1::__hash_node_base.66", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair.418" }
%"struct.std::__1::pair.418" = type { %"class.SkSL::String", %"struct.SkSL::IRIntrinsicMap::Intrinsic" }
%"struct.SkSL::IRIntrinsicMap::Intrinsic" = type <{ %"class.std::__1::unique_ptr.139", i8, [7 x i8] }>
%"struct.SkSL::IRGenerator::IRBundle" = type <{ %"class.std::__1::vector.137", %"class.std::__1::vector.150", %"class.std::__1::shared_ptr", %"struct.SkSL::Program::Inputs", [6 x i8] }>
%class.FindIllegalExpressions = type { %"class.SkSL::ProgramVisitor", %"class.SkSL::IRGenerator"* }
%"class.SkSL::Parser" = type { %"struct.SkSL::StringFragment", %"class.SkSL::Lexer", i32, %"struct.SkSL::Token", %"class.SkSL::SymbolTable"*, %"class.SkSL::ErrorReporter"*, %"class.std::__1::unique_ptr.49" }
%"class.SkSL::Lexer" = type { i8*, i32, i32 }
%"struct.SkSL::Token" = type { i32, i32, i32 }
%"class.SkSL::ReturnStatement" = type { %"class.SkSL::Statement", %"class.std::__1::unique_ptr.157" }
%"class.SkSL::BreakStatement" = type { %"class.SkSL::Statement" }
%"class.SkSL::ContinueStatement" = type { %"class.SkSL::Statement" }
%"class.SkSL::DiscardStatement" = type { %"class.SkSL::Statement" }
%"struct.std::__1::__murmur2_or_cityhash" = type { i8 }
%"class.SkSL::Literal" = type { %"class.SkSL::Expression", i64 }
%"class.SkSL::Literal.304" = type <{ %"class.SkSL::Expression", i8, [7 x i8] }>
%"class.SkSL::Literal.311" = type <{ %"class.SkSL::Expression", float, [4 x i8] }>
%"class.SkSL::GlobalVarDeclaration" = type { %"class.SkSL::ProgramElement", %"class.std::__1::unique_ptr.190" }
%"struct.std::__1::__shared_ptr_emplace" = type { %"class.std::__1::__shared_weak_count", %"struct.std::__1::__shared_ptr_emplace<SkSL::SymbolTable, std::__1::allocator<SkSL::SymbolTable> >::_Storage" }
%"struct.std::__1::__shared_ptr_emplace<SkSL::SymbolTable, std::__1::allocator<SkSL::SymbolTable> >::_Storage" = type { [104 x i8] }
%class.SkTArray.467 = type { %"class.SkSL::dsl::DSLExpression"*, i64 }
%"class.SkSL::FunctionPrototype" = type <{ %"class.SkSL::ProgramElement", %"class.SkSL::FunctionDeclaration"*, i8, [7 x i8] }>
%"class.SkSL::Field" = type <{ %"class.SkSL::Symbol", %"class.SkSL::Variable"*, i32, [4 x i8] }>
%class.anon.497 = type { i8 }
%class.anon.502 = type { %class.anon.495* }
%class.anon.495 = type { %"class.std::__1::vector.488"* }
%"class.std::__1::vector.488" = type { %"class.std::__1::__vector_base.489" }
%"class.std::__1::__vector_base.489" = type { %struct.Enumerant*, %struct.Enumerant*, %"class.std::__1::__compressed_pair.490" }
%struct.Enumerant = type { %"struct.SkSL::StringFragment", i64 }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.491" }
%"struct.std::__1::__compressed_pair_elem.491" = type { %struct.Enumerant* }
%"class.SkSL::FunctionReference" = type { %"class.SkSL::Expression", %"class.std::__1::vector.315" }
%"class.SkSL::TypeReference" = type { %"class.SkSL::Expression", %"class.SkSL::Type"* }
%"class.SkSL::ExternalFunctionReference" = type { %"class.SkSL::Expression", %"class.SkSL::ExternalFunction"* }
%"class.SkSL::ExternalFunctionCall" = type { %"class.SkSL::Expression", %"class.SkSL::ExternalFunction"*, %class.SkSTArray.215 }

$_ZN4SkSL13ErrorReporter5errorEiPKc = comdat any

$_ZNK4SkSL6Layout11descriptionEv = comdat any

$_ZN4SkSL3dsl11DSLFunctionclIJEEENS0_13DSLExpressionEDpOT_ = comdat any

$_ZN4SkSL3dsl8DSLBlockC2IJNS0_13DSLExpressionENS0_21DSLPossibleExpressionEEEEDpT_ = comdat any

$_ZN4SkSL3dsl11DSLFunctionD2Ev = comdat any

$_ZNSt3__111make_uniqueIN4SkSL18FunctionDefinitionEJRKiRPKNS1_19FunctionDeclarationERbNS_10unique_ptrINS1_5BlockENS_14default_deleteISB_EEEENS_13unordered_setIS7_NS_4hashIS7_EENS_8equal_toIS7_EENS_9allocatorIS7_EEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__111make_uniqueIN4SkSL14InterfaceBlockEJRKiRPKNS1_8VariableERKNS1_14StringFragmentESB_RiRNS_10shared_ptrINS1_11SymbolTableEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__111make_uniqueIN4SkSL7SectionEJRKiRKNS1_14StringFragmentES7_S7_EEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__16vectorIPKN4SkSL14ProgramElementENS_9allocatorIS4_EEE6insertINS_11__wrap_iterIPS4_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISD_E9referenceEEE5valueESB_E4typeENS9_IPKS4_EESD_SD_ = comdat any

$_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEED2Ev = comdat any

$_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE6rehashEm = comdat any

$_ZNK4SkSL6LayouteqERKS0_ = comdat any

$_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE8__rehashEm = comdat any

$_ZN4SkSL15ReturnStatementD2Ev = comdat any

$_ZN4SkSL15ReturnStatementD0Ev = comdat any

$_ZNK4SkSL15ReturnStatement11descriptionEv = comdat any

$_ZNK4SkSL9Statement7isEmptyEv = comdat any

$_ZNK4SkSL15ReturnStatement5cloneEv = comdat any

$_ZN4SkSL14BreakStatementD0Ev = comdat any

$_ZNK4SkSL14BreakStatement11descriptionEv = comdat any

$_ZNK4SkSL14BreakStatement5cloneEv = comdat any

$_ZN4SkSL17ContinueStatementD0Ev = comdat any

$_ZNK4SkSL17ContinueStatement11descriptionEv = comdat any

$_ZNK4SkSL17ContinueStatement5cloneEv = comdat any

$_ZN4SkSL16DiscardStatementD0Ev = comdat any

$_ZNK4SkSL16DiscardStatement11descriptionEv = comdat any

$_ZNK4SkSL16DiscardStatement5cloneEv = comdat any

$_ZN4SkSL3dsl11DSLFunctionD0Ev = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_14IRIntrinsicMap9IntrinsicEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_ = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm = comdat any

$_ZN4SkSL13ProgramWriter18visitExpressionPtrERNSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEE = comdat any

$_ZN4SkSL13ProgramWriter17visitStatementPtrERNSt3__110unique_ptrINS_9StatementENS1_14default_deleteIS3_EEEE = comdat any

$_ZN4SkSL4TypeD2Ev = comdat any

$_ZN4SkSL4TypeD0Ev = comdat any

$_ZNK4SkSL4Type11descriptionEv = comdat any

$_ZN4SkSL7LiteralIlED0Ev = comdat any

$_ZNK4SkSL7LiteralIlE11descriptionEv = comdat any

$_ZNK4SkSL10Expression4typeEv = comdat any

$_ZNK4SkSL7LiteralIlE21isCompileTimeConstantEv = comdat any

$_ZNK4SkSL7LiteralIlE15compareConstantERKNS_10ExpressionE = comdat any

$_ZNK4SkSL10Expression19isConstantOrUniformEv = comdat any

$_ZNK4SkSL7LiteralIlE11hasPropertyENS_10Expression8PropertyE = comdat any

$_ZNK4SkSL7LiteralIlE12coercionCostERKNS_4TypeE = comdat any

$_ZNK4SkSL7LiteralIlE24getConstantSubexpressionEi = comdat any

$_ZNK4SkSL7LiteralIlE5cloneEv = comdat any

$_ZNK4SkSL10Expression21isCompileTimeConstantEv = comdat any

$_ZNK4SkSL10Expression15compareConstantERKS0_ = comdat any

$_ZNK4SkSL10Expression12coercionCostERKNS_4TypeE = comdat any

$_ZNK4SkSL10Expression24getConstantSubexpressionEi = comdat any

$_ZN4SkSL7LiteralIbED0Ev = comdat any

$_ZNK4SkSL7LiteralIbE11descriptionEv = comdat any

$_ZNK4SkSL7LiteralIbE21isCompileTimeConstantEv = comdat any

$_ZNK4SkSL7LiteralIbE15compareConstantERKNS_10ExpressionE = comdat any

$_ZNK4SkSL7LiteralIbE11hasPropertyENS_10Expression8PropertyE = comdat any

$_ZNK4SkSL7LiteralIbE24getConstantSubexpressionEi = comdat any

$_ZNK4SkSL7LiteralIbE5cloneEv = comdat any

$_ZN4SkSL7LiteralIfED0Ev = comdat any

$_ZNK4SkSL7LiteralIfE11descriptionEv = comdat any

$_ZNK4SkSL7LiteralIfE21isCompileTimeConstantEv = comdat any

$_ZNK4SkSL7LiteralIfE15compareConstantERKNS_10ExpressionE = comdat any

$_ZNK4SkSL7LiteralIfE11hasPropertyENS_10Expression8PropertyE = comdat any

$_ZNK4SkSL7LiteralIfE12coercionCostERKNS_4TypeE = comdat any

$_ZNK4SkSL7LiteralIfE24getConstantSubexpressionEi = comdat any

$_ZNK4SkSL7LiteralIfE5cloneEv = comdat any

$_ZN4SkSL14ProgramVisitor18visitExpressionPtrERKNSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEE = comdat any

$_ZN4SkSL14ProgramVisitor17visitStatementPtrERKNSt3__110unique_ptrINS_9StatementENS1_14default_deleteIS3_EEEE = comdat any

$_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EEaSEOS7_ = comdat any

$_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE = comdat any

$_ZN4SkSL20GlobalVarDeclarationD2Ev = comdat any

$_ZN4SkSL20GlobalVarDeclarationD0Ev = comdat any

$_ZNK4SkSL20GlobalVarDeclaration11descriptionEv = comdat any

$_ZNK4SkSL20GlobalVarDeclaration5cloneEv = comdat any

$_ZN4SkSL20ModifiersDeclarationD0Ev = comdat any

$_ZNK4SkSL20ModifiersDeclaration11descriptionEv = comdat any

$_ZNK4SkSL20ModifiersDeclaration5cloneEv = comdat any

$_ZNK4SkSL9Modifiers11descriptionEv = comdat any

$_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_ = comdat any

$_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE = comdat any

$_ZN8SkTArrayIaLb0EE12checkReallocEiNS0_11ReallocTypeE = comdat any

$_ZN4SkSL16StructDefinitionD0Ev = comdat any

$_ZNK4SkSL16StructDefinition11descriptionEv = comdat any

$_ZNK4SkSL16StructDefinition5cloneEv = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEED2Ev = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEED0Ev = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEE16__on_zero_sharedEv = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEE21__on_zero_shared_weakEv = comdat any

$_ZN4SkSL11SymbolTableD2Ev = comdat any

$_ZN4SkSL9ExtensionD2Ev = comdat any

$_ZN4SkSL9ExtensionD0Ev = comdat any

$_ZNK4SkSL9Extension11descriptionEv = comdat any

$_ZNK4SkSL9Extension5cloneEv = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_ = comdat any

$_ZN4SkSL18FunctionDefinitionD2Ev = comdat any

$_ZN4SkSL18FunctionDefinitionD0Ev = comdat any

$_ZNK4SkSL18FunctionDefinition11descriptionEv = comdat any

$_ZNK4SkSL18FunctionDefinition5cloneEv = comdat any

$_ZNSt3__111make_uniqueIN4SkSL18FunctionDefinitionEJRKiPKNS1_19FunctionDeclarationEbNS_10unique_ptrINS1_9StatementENS_14default_deleteIS9_EEEERKNS_13unordered_setIS7_NS_4hashIS7_EENS_8equal_toIS7_EENS_9allocatorIS7_EEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN4SkSL14ProgramElementENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZN8SkTArrayIN4SkSL3dsl10DSLWrapperINS1_13DSLExpressionEEELb0EEC2EOS5_ = comdat any

$_ZN4SkSL3dsl7DSLType9ConstructIJNS0_21DSLPossibleExpressionEiNS0_13DSLExpressionEEEES4_S1_DpOT_ = comdat any

$_ZN8SkTArrayIN4SkSL3dsl13DSLExpressionELb0EEC2EOS3_ = comdat any

$_ZN8SkTArrayIN4SkSL3dsl13DSLExpressionELb0EE12checkReallocEiNS3_11ReallocTypeE = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN4SkSL8VariableENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZN4SkSL17FunctionPrototypeD0Ev = comdat any

$_ZNK4SkSL17FunctionPrototype11descriptionEv = comdat any

$_ZNK4SkSL17FunctionPrototype5cloneEv = comdat any

$_ZNSt3__112__hash_tableIPKN4SkSL4TypeENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIPKN4SkSL4TypeENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIPKN4SkSL4TypeENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm = comdat any

$_ZN4SkSL5FieldD0Ev = comdat any

$_ZNK4SkSL5Field11descriptionEv = comdat any

$_ZNK4SkSL8Variable11descriptionEv = comdat any

$_ZN4SkSL14InterfaceBlockD2Ev = comdat any

$_ZN4SkSL14InterfaceBlockD0Ev = comdat any

$_ZNK4SkSL14InterfaceBlock11descriptionEv = comdat any

$_ZNK4SkSL14InterfaceBlock5cloneEv = comdat any

$_ZNK4SkSL4Type5Field11descriptionEv = comdat any

$_ZN4SkSL11SymbolTable13WrapIfBuiltinENSt3__110shared_ptrIS0_EE = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN4SkSL6IRNodeENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZN4SkSL4EnumD2Ev = comdat any

$_ZN4SkSL4EnumD0Ev = comdat any

$_ZNK4SkSL4Enum11descriptionEv = comdat any

$_ZNK4SkSL4Enum5cloneEv = comdat any

$_ZNK4SkSL4Enum4codeEv = comdat any

$_ZZNK4SkSL4Enum7foreachIZNKS0_4codeEvEUlNS_14StringFragmentElE_EEvOT_ENKUlS2_PKNS_6SymbolEE_clES2_S8_ = comdat any

$_ZNSt3__16__sortIRZNK4SkSL4Enum4codeEvEUlRKZNKS2_4codeEvE9EnumerantS5_E_PS3_EEvT0_S9_T_ = comdat any

$_ZNSt3__17__sort4IRZNK4SkSL4Enum4codeEvEUlRKZNKS2_4codeEvE9EnumerantS5_E_PS3_EEjT0_S9_S9_S9_T_ = comdat any

$_ZNSt3__118__insertion_sort_3IRZNK4SkSL4Enum4codeEvEUlRKZNKS2_4codeEvE9EnumerantS5_E_PS3_EEvT0_S9_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRZNK4SkSL4Enum4codeEvEUlRKZNKS2_4codeEvE9EnumerantS5_E_PS3_EEbT0_S9_T_ = comdat any

$_ZN4SkSL17FunctionReferenceD2Ev = comdat any

$_ZN4SkSL17FunctionReferenceD0Ev = comdat any

$_ZNK4SkSL17FunctionReference11descriptionEv = comdat any

$_ZNK4SkSL17FunctionReference11hasPropertyENS_10Expression8PropertyE = comdat any

$_ZNK4SkSL17FunctionReference5cloneEv = comdat any

$_ZN4SkSL13TypeReferenceD0Ev = comdat any

$_ZNK4SkSL13TypeReference11descriptionEv = comdat any

$_ZNK4SkSL13TypeReference11hasPropertyENS_10Expression8PropertyE = comdat any

$_ZNK4SkSL13TypeReference5cloneEv = comdat any

$_ZN4SkSL6IRNodeD2Ev = comdat any

$_ZN4SkSL25ExternalFunctionReferenceD0Ev = comdat any

$_ZNK4SkSL25ExternalFunctionReference11descriptionEv = comdat any

$_ZNK4SkSL25ExternalFunctionReference11hasPropertyENS_10Expression8PropertyE = comdat any

$_ZNK4SkSL25ExternalFunctionReference5cloneEv = comdat any

$_ZN4SkSL7SectionD2Ev = comdat any

$_ZN4SkSL7SectionD0Ev = comdat any

$_ZNK4SkSL7Section11descriptionEv = comdat any

$_ZNK4SkSL7Section5cloneEv = comdat any

$_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZN4SkSL20ExternalFunctionCallD2Ev = comdat any

$_ZN4SkSL20ExternalFunctionCallD0Ev = comdat any

$_ZNK4SkSL20ExternalFunctionCall11descriptionEv = comdat any

$_ZNK4SkSL20ExternalFunctionCall11hasPropertyENS_10Expression8PropertyE = comdat any

$_ZNK4SkSL20ExternalFunctionCall5cloneEv = comdat any

$_ZN4SkSL8Compiler14FRAGCOLOR_NAMEE = comdat any

$_ZN4SkSL8Compiler13RTADJUST_NAMEE = comdat any

$_ZN4SkSL8Compiler14PERVERTEX_NAMEE = comdat any

$_ZTVN4SkSL15ReturnStatementE = comdat any

$_ZTVN4SkSL14BreakStatementE = comdat any

$_ZTVN4SkSL17ContinueStatementE = comdat any

$_ZTVN4SkSL16DiscardStatementE = comdat any

$_ZTVN4SkSL3dsl11DSLFunctionE = comdat any

$_ZTVN4SkSL4TypeE = comdat any

$_ZTVN4SkSL7LiteralIlEE = comdat any

$_ZTVN4SkSL7LiteralIbEE = comdat any

$_ZTVN4SkSL7LiteralIfEE = comdat any

$_ZTVN4SkSL20GlobalVarDeclarationE = comdat any

$_ZTVN4SkSL20ModifiersDeclarationE = comdat any

$_ZTVN4SkSL16StructDefinitionE = comdat any

$_ZTVNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEEE = comdat any

$_ZTVN4SkSL9ExtensionE = comdat any

$_ZTVN4SkSL18FunctionDefinitionE = comdat any

$_ZTVN4SkSL17FunctionPrototypeE = comdat any

$_ZTVN4SkSL5FieldE = comdat any

$_ZTVN4SkSL14InterfaceBlockE = comdat any

$_ZTVN4SkSL4EnumE = comdat any

$_ZTVN4SkSL17FunctionReferenceE = comdat any

$_ZTVN4SkSL13TypeReferenceE = comdat any

$_ZTVN4SkSL25ExternalFunctionReferenceE = comdat any

$_ZTVN4SkSL7SectionE = comdat any

$_ZTVN4SkSL20ExternalFunctionCallE = comdat any

@.str = private unnamed_addr constant [11 x i8] c"variable '\00", align 1
@.str.1 = private unnamed_addr constant [29 x i8] c"' must be created in a scope\00", align 1
@.str.2 = private unnamed_addr constant [32 x i8] c"extensions are not allowed here\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"EmitVertex\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"array must have a size\00", align 1
@.str.5 = private unnamed_addr constant [40 x i8] c"type 'void' may not be used in an array\00", align 1
@.str.6 = private unnamed_addr constant [14 x i8] c"opaque type '\00", align 1
@.str.7 = private unnamed_addr constant [30 x i8] c"' may not be used in an array\00", align 1
@.str.8 = private unnamed_addr constant [30 x i8] c"array size must be an integer\00", align 1
@.str.9 = private unnamed_addr constant [28 x i8] c"array size must be positive\00", align 1
@.str.10 = private unnamed_addr constant [24 x i8] c"array size is too large\00", align 1
@.str.11 = private unnamed_addr constant [43 x i8] c"array size must appear after variable name\00", align 1
@.str.12 = private unnamed_addr constant [20 x i8] c"variables of type '\00", align 1
@.str.13 = private unnamed_addr constant [17 x i8] c"' must be global\00", align 1
@.str.14 = private unnamed_addr constant [40 x i8] c"'in' variables may not have matrix type\00", align 1
@.str.15 = private unnamed_addr constant [65 x i8] c"'in uniform' variables only permitted within fragment processors\00", align 1
@.str.16 = private unnamed_addr constant [52 x i8] c"'when' is only permitted within fragment processors\00", align 1
@.str.17 = private unnamed_addr constant [53 x i8] c"'ctype' is only permitted within fragment processors\00", align 1
@.str.18 = private unnamed_addr constant [51 x i8] c"'key' is only permitted within fragment processors\00", align 1
@.str.19 = private unnamed_addr constant [48 x i8] c"'in' variables not permitted in runtime effects\00", align 1
@.str.20 = private unnamed_addr constant [18 x i8] c"' must be uniform\00", align 1
@.str.21 = private unnamed_addr constant [46 x i8] c"'key' is not permitted on 'uniform' variables\00", align 1
@.str.22 = private unnamed_addr constant [53 x i8] c"'srgb_unpremul' is only permitted in runtime effects\00", align 1
@.str.23 = private unnamed_addr constant [57 x i8] c"'srgb_unpremul' is only permitted on 'uniform' variables\00", align 1
@.str.24 = private unnamed_addr constant [79 x i8] c"'srgb_unpremul' is only permitted on half3, half4, float3, or float4 variables\00", align 1
@_ZN4SkSL8Compiler14FRAGCOLOR_NAMEE = linkonce_odr hidden constant [13 x i8] c"sk_FragColor\00", comdat, align 1
@.str.25 = private unnamed_addr constant [53 x i8] c"out location=0, index=0 is reserved for sk_FragColor\00", align 1
@_ZN4SkSL8Compiler13RTADJUST_NAMEE = linkonce_odr hidden constant [12 x i8] c"sk_RTAdjust\00", comdat, align 1
@.str.26 = private unnamed_addr constant [38 x i8] c"duplicate definition of 'sk_RTAdjust'\00", align 1
@.str.27 = private unnamed_addr constant [36 x i8] c"sk_RTAdjust must have type 'float4'\00", align 1
@.str.28 = private unnamed_addr constant [39 x i8] c"layout qualifiers are not allowed here\00", align 1
@.str.29 = private unnamed_addr constant [48 x i8] c"'invocations' is only legal in geometry shaders\00", align 1
@.str.30 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.31 = private unnamed_addr constant [56 x i8] c"discard statement is only permitted in fragment shaders\00", align 1
@.str.32 = private unnamed_addr constant [8 x i8] c"_invoke\00", align 1
@.str.33 = private unnamed_addr constant [16 x i8] c"sk_InvocationID\00", align 1
@.str.34 = private unnamed_addr constant [13 x i8] c"EndPrimitive\00", align 1
@.str.35 = private unnamed_addr constant [52 x i8] c"../../third_party/skia/src/sksl/SkSLIRGenerator.cpp\00", align 1
@_ZN4SkSL8Compiler14PERVERTEX_NAMEE = linkonce_odr hidden local_unnamed_addr constant [13 x i8] c"sk_PerVertex\00", comdat, align 1
@.str.36 = private unnamed_addr constant [6 x i8] c"const\00", align 1
@.str.37 = private unnamed_addr constant [3 x i8] c"in\00", align 1
@.str.38 = private unnamed_addr constant [4 x i8] c"out\00", align 1
@.str.39 = private unnamed_addr constant [8 x i8] c"uniform\00", align 1
@.str.40 = private unnamed_addr constant [5 x i8] c"flat\00", align 1
@.str.41 = private unnamed_addr constant [14 x i8] c"noperspective\00", align 1
@.str.42 = private unnamed_addr constant [20 x i8] c"sk_has_side_effects\00", align 1
@.str.43 = private unnamed_addr constant [7 x i8] c"inline\00", align 1
@.str.44 = private unnamed_addr constant [9 x i8] c"noinline\00", align 1
@.str.45 = private unnamed_addr constant [18 x i8] c"origin_upper_left\00", align 1
@.str.46 = private unnamed_addr constant [14 x i8] c"push_constant\00", align 1
@.str.47 = private unnamed_addr constant [28 x i8] c"blend_support_all_equations\00", align 1
@.str.48 = private unnamed_addr constant [14 x i8] c"srgb_unpremul\00", align 1
@.str.49 = private unnamed_addr constant [4 x i8] c"key\00", align 1
@.str.50 = private unnamed_addr constant [9 x i8] c"location\00", align 1
@.str.51 = private unnamed_addr constant [7 x i8] c"offset\00", align 1
@.str.52 = private unnamed_addr constant [8 x i8] c"binding\00", align 1
@.str.53 = private unnamed_addr constant [6 x i8] c"index\00", align 1
@.str.54 = private unnamed_addr constant [4 x i8] c"set\00", align 1
@.str.55 = private unnamed_addr constant [8 x i8] c"builtin\00", align 1
@.str.56 = private unnamed_addr constant [23 x i8] c"input_attachment_index\00", align 1
@.str.57 = private unnamed_addr constant [15 x i8] c"primitive-type\00", align 1
@.str.58 = private unnamed_addr constant [13 x i8] c"max_vertices\00", align 1
@.str.59 = private unnamed_addr constant [12 x i8] c"invocations\00", align 1
@.str.60 = private unnamed_addr constant [5 x i8] c"when\00", align 1
@.str.61 = private unnamed_addr constant [6 x i8] c"ctype\00", align 1
@.str.62 = private unnamed_addr constant [11 x i8] c"function '\00", align 1
@.str.63 = private unnamed_addr constant [37 x i8] c"' can exit without returning a value\00", align 1
@.str.64 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@.str.65 = private unnamed_addr constant [32 x i8] c"expected a struct here, found '\00", align 1
@.str.66 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.67 = private unnamed_addr constant [36 x i8] c"interface block is not allowed here\00", align 1
@.str.68 = private unnamed_addr constant [41 x i8] c"' is not permitted in an interface block\00", align 1
@.str.69 = private unnamed_addr constant [57 x i8] c"initializers are not permitted on interface block fields\00", align 1
@.str.70 = private unnamed_addr constant [25 x i8] c"enum is not allowed here\00", align 1
@.str.71 = private unnamed_addr constant [38 x i8] c"enum value must be a constant integer\00", align 1
@.str.72 = private unnamed_addr constant [15 x i8] c"unknown type '\00", align 1
@.str.73 = private unnamed_addr constant [7 x i8] c"type '\00", align 1
@.str.74 = private unnamed_addr constant [30 x i8] c"' not allowed in this context\00", align 1
@.str.75 = private unnamed_addr constant [13 x i8] c"' is private\00", align 1
@.str.76 = private unnamed_addr constant [21 x i8] c"unknown identifier '\00", align 1
@.str.77 = private unnamed_addr constant [8 x i8] c"setData\00", align 1
@.str.78 = private unnamed_addr constant [101 x i8] c"'in' variable must be either 'uniform' or 'layout(key)', or there must be a custom @setData function\00", align 1
@.str.79 = private unnamed_addr constant [28 x i8] c"unsupported symbol type %d\0A\00", align 1
@.str.80 = private unnamed_addr constant [13 x i8] c"syntax error\00", align 1
@.str.81 = private unnamed_addr constant [28 x i8] c"external function expected \00", align 1
@.str.82 = private unnamed_addr constant [23 x i8] c" arguments, but found \00", align 1
@.str.83 = private unnamed_addr constant [14 x i8] c"no match for \00", align 1
@.str.84 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.86 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.87 = private unnamed_addr constant [15 x i8] c"not a function\00", align 1
@.str.88 = private unnamed_addr constant [31 x i8] c"cannot swizzle value of type '\00", align 1
@.str.89 = private unnamed_addr constant [38 x i8] c"too many components in swizzle mask '\00", align 1
@.str.90 = private unnamed_addr constant [31 x i8] c"invalid swizzle component '%c'\00", align 1
@.str.91 = private unnamed_addr constant [38 x i8] c"swizzle must refer to base expression\00", align 1
@.str.92 = private unnamed_addr constant [22 x i8] c"' is not a known enum\00", align 1
@.str.93 = private unnamed_addr constant [32 x i8] c"' does not contain enumerator '\00", align 1
@.str.94 = private unnamed_addr constant [22 x i8] c"missing index in '[]'\00", align 1
@.str.95 = private unnamed_addr constant [29 x i8] c"'::' must follow a type name\00", align 1
@.str.96 = private unnamed_addr constant [17 x i8] c"' is not defined\00", align 1
@.str.97 = private unnamed_addr constant [19 x i8] c"invalid expression\00", align 1
@.str.98 = private unnamed_addr constant [13 x i8] c"sk_Clockwise\00", align 1
@.str.99 = private unnamed_addr constant [7 x i8] c"mat2x2\00", align 1
@.str.100 = private unnamed_addr constant [7 x i8] c"mat2x3\00", align 1
@.str.101 = private unnamed_addr constant [7 x i8] c"mat2x4\00", align 1
@.str.102 = private unnamed_addr constant [7 x i8] c"mat3x2\00", align 1
@.str.103 = private unnamed_addr constant [7 x i8] c"mat3x3\00", align 1
@.str.104 = private unnamed_addr constant [7 x i8] c"mat3x4\00", align 1
@.str.105 = private unnamed_addr constant [7 x i8] c"mat4x2\00", align 1
@.str.106 = private unnamed_addr constant [7 x i8] c"mat4x3\00", align 1
@.str.107 = private unnamed_addr constant [7 x i8] c"mat4x4\00", align 1
@.str.108 = private unnamed_addr constant [9 x i8] c"float2x3\00", align 1
@.str.109 = private unnamed_addr constant [9 x i8] c"float2x4\00", align 1
@.str.110 = private unnamed_addr constant [9 x i8] c"float3x2\00", align 1
@.str.111 = private unnamed_addr constant [9 x i8] c"float3x4\00", align 1
@.str.112 = private unnamed_addr constant [9 x i8] c"float4x2\00", align 1
@.str.113 = private unnamed_addr constant [9 x i8] c"float4x3\00", align 1
@.str.114 = private unnamed_addr constant [8 x i8] c"half2x3\00", align 1
@.str.115 = private unnamed_addr constant [8 x i8] c"half2x4\00", align 1
@.str.116 = private unnamed_addr constant [8 x i8] c"half3x2\00", align 1
@.str.117 = private unnamed_addr constant [8 x i8] c"half3x4\00", align 1
@.str.118 = private unnamed_addr constant [8 x i8] c"half4x2\00", align 1
@.str.119 = private unnamed_addr constant [8 x i8] c"half4x3\00", align 1
@.str.120 = private unnamed_addr constant [5 x i8] c"uint\00", align 1
@.str.121 = private unnamed_addr constant [6 x i8] c"uint2\00", align 1
@.str.122 = private unnamed_addr constant [6 x i8] c"uint3\00", align 1
@.str.123 = private unnamed_addr constant [6 x i8] c"uint4\00", align 1
@.str.125 = private unnamed_addr constant [12 x i8] c"location = \00", align 1
@.str.126 = private unnamed_addr constant [10 x i8] c"offset = \00", align 1
@.str.127 = private unnamed_addr constant [11 x i8] c"binding = \00", align 1
@.str.128 = private unnamed_addr constant [9 x i8] c"index = \00", align 1
@.str.129 = private unnamed_addr constant [7 x i8] c"set = \00", align 1
@.str.130 = private unnamed_addr constant [11 x i8] c"builtin = \00", align 1
@.str.131 = private unnamed_addr constant [26 x i8] c"input_attachment_index = \00", align 1
@.str.132 = private unnamed_addr constant [7 x i8] c"points\00", align 1
@.str.133 = private unnamed_addr constant [6 x i8] c"lines\00", align 1
@.str.134 = private unnamed_addr constant [11 x i8] c"line_strip\00", align 1
@.str.135 = private unnamed_addr constant [16 x i8] c"lines_adjacency\00", align 1
@.str.136 = private unnamed_addr constant [10 x i8] c"triangles\00", align 1
@.str.137 = private unnamed_addr constant [15 x i8] c"triangle_strip\00", align 1
@.str.138 = private unnamed_addr constant [20 x i8] c"triangles_adjacency\00", align 1
@.str.139 = private unnamed_addr constant [16 x i8] c"max_vertices = \00", align 1
@.str.140 = private unnamed_addr constant [15 x i8] c"invocations = \00", align 1
@.str.141 = private unnamed_addr constant [8 x i8] c"when = \00", align 1
@.str.142 = private unnamed_addr constant [9 x i8] c"layout (\00", align 1
@.str.143 = private unnamed_addr constant [16 x i8] c"/* key */ const\00", align 1
@_ZTVN4SkSL15ReturnStatementE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::ReturnStatement"*)* @_ZN4SkSL15ReturnStatementD2Ev to i8*), i8* bitcast (void (%"class.SkSL::ReturnStatement"*)* @_ZN4SkSL15ReturnStatementD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::ReturnStatement"*)* @_ZNK4SkSL15ReturnStatement11descriptionEv to i8*), i8* bitcast (i1 (%"class.SkSL::Statement"*)* @_ZNK4SkSL9Statement7isEmptyEv to i8*), i8* bitcast (%"class.SkSL::Statement"* (%"class.SkSL::ReturnStatement"*)* @_ZNK4SkSL15ReturnStatement5cloneEv to i8*)] }, comdat, align 8
@.str.144 = private unnamed_addr constant [8 x i8] c"return \00", align 1
@.str.145 = private unnamed_addr constant [2 x i8] c";\00", align 1
@.str.146 = private unnamed_addr constant [8 x i8] c"return;\00", align 1
@_ZTVN4SkSL14BreakStatementE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::IRNode"*)* @_ZN4SkSL6IRNodeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::BreakStatement"*)* @_ZN4SkSL14BreakStatementD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::BreakStatement"*)* @_ZNK4SkSL14BreakStatement11descriptionEv to i8*), i8* bitcast (i1 (%"class.SkSL::Statement"*)* @_ZNK4SkSL9Statement7isEmptyEv to i8*), i8* bitcast (%"class.SkSL::Statement"* (%"class.SkSL::BreakStatement"*)* @_ZNK4SkSL14BreakStatement5cloneEv to i8*)] }, comdat, align 8
@.str.147 = private unnamed_addr constant [7 x i8] c"break;\00", align 1
@_ZTVN4SkSL17ContinueStatementE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::IRNode"*)* @_ZN4SkSL6IRNodeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::ContinueStatement"*)* @_ZN4SkSL17ContinueStatementD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::ContinueStatement"*)* @_ZNK4SkSL17ContinueStatement11descriptionEv to i8*), i8* bitcast (i1 (%"class.SkSL::Statement"*)* @_ZNK4SkSL9Statement7isEmptyEv to i8*), i8* bitcast (%"class.SkSL::Statement"* (%"class.SkSL::ContinueStatement"*)* @_ZNK4SkSL17ContinueStatement5cloneEv to i8*)] }, comdat, align 8
@.str.148 = private unnamed_addr constant [10 x i8] c"continue;\00", align 1
@_ZTVN4SkSL16DiscardStatementE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::IRNode"*)* @_ZN4SkSL6IRNodeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::DiscardStatement"*)* @_ZN4SkSL16DiscardStatementD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::DiscardStatement"*)* @_ZNK4SkSL16DiscardStatement11descriptionEv to i8*), i8* bitcast (i1 (%"class.SkSL::Statement"*)* @_ZNK4SkSL9Statement7isEmptyEv to i8*), i8* bitcast (%"class.SkSL::Statement"* (%"class.SkSL::DiscardStatement"*)* @_ZNK4SkSL16DiscardStatement5cloneEv to i8*)] }, comdat, align 8
@_ZTVN4SkSL3dsl11DSLFunctionE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::dsl::DSLFunction"*)* @_ZN4SkSL3dsl11DSLFunctionD2Ev to i8*), i8* bitcast (void (%"class.SkSL::dsl::DSLFunction"*)* @_ZN4SkSL3dsl11DSLFunctionD0Ev to i8*)] }, comdat, align 8
@.str.150 = private unnamed_addr constant [24 x i8] c"' is not permitted here\00", align 1
@.str.151 = private unnamed_addr constant [19 x i8] c"layout qualifier '\00", align 1
@_ZTVZN4SkSL11IRGenerator16finalizeFunctionERKNS_19FunctionDeclarationEPNS_9StatementEE9Finalizer = internal unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.Finalizer*)* @_ZZN4SkSL11IRGenerator16finalizeFunctionERKNS_19FunctionDeclarationEPNS_9StatementEEN9FinalizerD2Ev to i8*), i8* bitcast (void (%class.Finalizer*)* @_ZZN4SkSL11IRGenerator16finalizeFunctionERKNS_19FunctionDeclarationEPNS_9StatementEEN9FinalizerD0Ev to i8*), i8* bitcast (i1 (%class.Finalizer*, %"class.SkSL::Expression"*)* @_ZZN4SkSL11IRGenerator16finalizeFunctionERKNS_19FunctionDeclarationEPNS_9StatementEEN9Finalizer15visitExpressionERNS_10ExpressionE to i8*), i8* bitcast (i1 (%class.Finalizer*, %"class.SkSL::Statement"*)* @_ZZN4SkSL11IRGenerator16finalizeFunctionERKNS_19FunctionDeclarationEPNS_9StatementEEN9Finalizer14visitStatementERS4_ to i8*), i8* bitcast (i1 (%"class.SkSL::TProgramVisitor"*, %"class.SkSL::ProgramElement"*)* @_ZN4SkSL15TProgramVisitorINS_18ProgramWriterTypesEE19visitProgramElementERNS_14ProgramElementE to i8*), i8* bitcast (i1 (%"class.SkSL::ProgramWriter"*, %"class.std::__1::unique_ptr.157"*)* @_ZN4SkSL13ProgramWriter18visitExpressionPtrERNSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEE to i8*), i8* bitcast (i1 (%"class.SkSL::ProgramWriter"*, %"class.std::__1::unique_ptr.190"*)* @_ZN4SkSL13ProgramWriter17visitStatementPtrERNSt3__110unique_ptrINS_9StatementENS1_14default_deleteIS3_EEEE to i8*)] }, align 8
@.str.152 = private unnamed_addr constant [44 x i8] c"may not return a value from a void function\00", align 1
@.str.153 = private unnamed_addr constant [30 x i8] c"expected function to return '\00", align 1
@.str.154 = private unnamed_addr constant [48 x i8] c"break statement must be inside a loop or switch\00", align 1
@.str.155 = private unnamed_addr constant [41 x i8] c"continue statement must be inside a loop\00", align 1
@_ZTVN4SkSL4TypeE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::Type"*)* @_ZN4SkSL4TypeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::Type"*)* @_ZN4SkSL4TypeD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::Type"*)* @_ZNK4SkSL4Type11descriptionEv to i8*)] }, comdat, align 8
@.str.156 = private unnamed_addr constant [2 x i8] c"S\00", align 1
@_ZTVN4SkSL7LiteralIlEE = linkonce_odr hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::IRNode"*)* @_ZN4SkSL6IRNodeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::Literal"*)* @_ZN4SkSL7LiteralIlED0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::Literal"*)* @_ZNK4SkSL7LiteralIlE11descriptionEv to i8*), i8* bitcast (%"class.SkSL::Type"* (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression4typeEv to i8*), i8* bitcast (i1 (%"class.SkSL::Literal"*)* @_ZNK4SkSL7LiteralIlE21isCompileTimeConstantEv to i8*), i8* bitcast (i32 (%"class.SkSL::Literal"*, %"class.SkSL::Expression"*)* @_ZNK4SkSL7LiteralIlE15compareConstantERKNS_10ExpressionE to i8*), i8* bitcast (i1 (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression19isConstantOrUniformEv to i8*), i8* bitcast (i1 (%"class.SkSL::Literal"*, i32)* @_ZNK4SkSL7LiteralIlE11hasPropertyENS_10Expression8PropertyE to i8*), i8* bitcast ({ i64, i8 } (%"class.SkSL::Literal"*, %"class.SkSL::Type"*)* @_ZNK4SkSL7LiteralIlE12coercionCostERKNS_4TypeE to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::Literal"*, i32)* @_ZNK4SkSL7LiteralIlE24getConstantSubexpressionEi to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::Literal"*)* @_ZNK4SkSL7LiteralIlE5cloneEv to i8*)] }, comdat, align 8
@.str.157 = private unnamed_addr constant [2 x i8] c"$\00", align 1
@_ZTVN4SkSL7LiteralIbEE = linkonce_odr hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::IRNode"*)* @_ZN4SkSL6IRNodeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::Literal.304"*)* @_ZN4SkSL7LiteralIbED0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::Literal.304"*)* @_ZNK4SkSL7LiteralIbE11descriptionEv to i8*), i8* bitcast (%"class.SkSL::Type"* (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression4typeEv to i8*), i8* bitcast (i1 (%"class.SkSL::Literal.304"*)* @_ZNK4SkSL7LiteralIbE21isCompileTimeConstantEv to i8*), i8* bitcast (i32 (%"class.SkSL::Literal.304"*, %"class.SkSL::Expression"*)* @_ZNK4SkSL7LiteralIbE15compareConstantERKNS_10ExpressionE to i8*), i8* bitcast (i1 (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression19isConstantOrUniformEv to i8*), i8* bitcast (i1 (%"class.SkSL::Literal.304"*, i32)* @_ZNK4SkSL7LiteralIbE11hasPropertyENS_10Expression8PropertyE to i8*), i8* bitcast ({ i64, i8 } (%"class.SkSL::Expression"*, %"class.SkSL::Type"*)* @_ZNK4SkSL10Expression12coercionCostERKNS_4TypeE to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::Literal.304"*, i32)* @_ZNK4SkSL7LiteralIbE24getConstantSubexpressionEi to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::Literal.304"*)* @_ZNK4SkSL7LiteralIbE5cloneEv to i8*)] }, comdat, align 8
@.str.158 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.159 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@_ZTVN4SkSL7LiteralIfEE = linkonce_odr hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::IRNode"*)* @_ZN4SkSL6IRNodeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::Literal.311"*)* @_ZN4SkSL7LiteralIfED0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::Literal.311"*)* @_ZNK4SkSL7LiteralIfE11descriptionEv to i8*), i8* bitcast (%"class.SkSL::Type"* (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression4typeEv to i8*), i8* bitcast (i1 (%"class.SkSL::Literal.311"*)* @_ZNK4SkSL7LiteralIfE21isCompileTimeConstantEv to i8*), i8* bitcast (i32 (%"class.SkSL::Literal.311"*, %"class.SkSL::Expression"*)* @_ZNK4SkSL7LiteralIfE15compareConstantERKNS_10ExpressionE to i8*), i8* bitcast (i1 (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression19isConstantOrUniformEv to i8*), i8* bitcast (i1 (%"class.SkSL::Literal.311"*, i32)* @_ZNK4SkSL7LiteralIfE11hasPropertyENS_10Expression8PropertyE to i8*), i8* bitcast ({ i64, i8 } (%"class.SkSL::Literal.311"*, %"class.SkSL::Type"*)* @_ZNK4SkSL7LiteralIfE12coercionCostERKNS_4TypeE to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::Literal.311"*, i32)* @_ZNK4SkSL7LiteralIfE24getConstantSubexpressionEi to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::Literal.311"*)* @_ZNK4SkSL7LiteralIfE5cloneEv to i8*)] }, comdat, align 8
@_ZTVZN4SkSL11IRGenerator30findAndDeclareBuiltinVariablesEvE22BuiltinVariableScanner = internal unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.BuiltinVariableScanner*)* @_ZZN4SkSL11IRGenerator30findAndDeclareBuiltinVariablesEvEN22BuiltinVariableScannerD2Ev to i8*), i8* bitcast (void (%class.BuiltinVariableScanner*)* @_ZZN4SkSL11IRGenerator30findAndDeclareBuiltinVariablesEvEN22BuiltinVariableScannerD0Ev to i8*), i8* bitcast (i1 (%class.BuiltinVariableScanner*, %"class.SkSL::Expression"*)* @_ZZN4SkSL11IRGenerator30findAndDeclareBuiltinVariablesEvEN22BuiltinVariableScanner15visitExpressionERKNS_10ExpressionE to i8*), i8* bitcast (i1 (%"class.SkSL::TProgramVisitor.368"*, %"class.SkSL::Statement"*)* @_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEE14visitStatementERKNS_9StatementE to i8*), i8* bitcast (i1 (%class.BuiltinVariableScanner*, %"class.SkSL::ProgramElement"*)* @_ZZN4SkSL11IRGenerator30findAndDeclareBuiltinVariablesEvEN22BuiltinVariableScanner19visitProgramElementERKNS_14ProgramElementE to i8*), i8* bitcast (i1 (%"class.SkSL::ProgramVisitor"*, %"class.std::__1::unique_ptr.157"*)* @_ZN4SkSL14ProgramVisitor18visitExpressionPtrERKNSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEE to i8*), i8* bitcast (i1 (%"class.SkSL::ProgramVisitor"*, %"class.std::__1::unique_ptr.190"*)* @_ZN4SkSL14ProgramVisitor17visitStatementPtrERKNSt3__110unique_ptrINS_9StatementENS1_14default_deleteIS3_EEEE to i8*)] }, align 8
@_ZTVZN4SkSL11IRGenerator6finishEvE22FindIllegalExpressions = internal unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::TProgramVisitor.368"*)* @_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEED2Ev to i8*), i8* bitcast (void (%class.FindIllegalExpressions*)* @_ZZN4SkSL11IRGenerator6finishEvEN22FindIllegalExpressionsD0Ev to i8*), i8* bitcast (i1 (%class.FindIllegalExpressions*, %"class.SkSL::Expression"*)* @_ZZN4SkSL11IRGenerator6finishEvEN22FindIllegalExpressions15visitExpressionERKNS_10ExpressionE to i8*), i8* bitcast (i1 (%"class.SkSL::TProgramVisitor.368"*, %"class.SkSL::Statement"*)* @_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEE14visitStatementERKNS_9StatementE to i8*), i8* bitcast (i1 (%"class.SkSL::TProgramVisitor.368"*, %"class.SkSL::ProgramElement"*)* @_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEE19visitProgramElementERKNS_14ProgramElementE to i8*), i8* bitcast (i1 (%"class.SkSL::ProgramVisitor"*, %"class.std::__1::unique_ptr.157"*)* @_ZN4SkSL14ProgramVisitor18visitExpressionPtrERKNSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEE to i8*), i8* bitcast (i1 (%"class.SkSL::ProgramVisitor"*, %"class.std::__1::unique_ptr.190"*)* @_ZN4SkSL14ProgramVisitor17visitStatementPtrERKNSt3__110unique_ptrINS_9StatementENS1_14default_deleteIS3_EEEE to i8*)] }, align 8
@_ZTVN4SkSL20GlobalVarDeclarationE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::GlobalVarDeclaration"*)* @_ZN4SkSL20GlobalVarDeclarationD2Ev to i8*), i8* bitcast (void (%"class.SkSL::GlobalVarDeclaration"*)* @_ZN4SkSL20GlobalVarDeclarationD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::GlobalVarDeclaration"*)* @_ZNK4SkSL20GlobalVarDeclaration11descriptionEv to i8*), i8* bitcast (%"class.SkSL::ProgramElement"* (%"class.SkSL::GlobalVarDeclaration"*)* @_ZNK4SkSL20GlobalVarDeclaration5cloneEv to i8*)] }, comdat, align 8
@_ZTVN4SkSL20ModifiersDeclarationE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::IRNode"*)* @_ZN4SkSL6IRNodeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::ModifiersDeclaration"*)* @_ZN4SkSL20ModifiersDeclarationD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::ModifiersDeclaration"*)* @_ZNK4SkSL20ModifiersDeclaration11descriptionEv to i8*), i8* bitcast (%"class.SkSL::ProgramElement"* (%"class.SkSL::ModifiersDeclaration"*)* @_ZNK4SkSL20ModifiersDeclaration5cloneEv to i8*)] }, comdat, align 8
@.str.160 = private unnamed_addr constant [9 x i8] c"uniform \00", align 1
@.str.161 = private unnamed_addr constant [7 x i8] c"const \00", align 1
@.str.162 = private unnamed_addr constant [6 x i8] c"flat \00", align 1
@.str.163 = private unnamed_addr constant [15 x i8] c"noperspective \00", align 1
@.str.164 = private unnamed_addr constant [21 x i8] c"sk_has_side_effects \00", align 1
@.str.165 = private unnamed_addr constant [10 x i8] c"noinline \00", align 1
@.str.166 = private unnamed_addr constant [7 x i8] c"inout \00", align 1
@.str.167 = private unnamed_addr constant [4 x i8] c"in \00", align 1
@.str.168 = private unnamed_addr constant [5 x i8] c"out \00", align 1
@_ZTVN4SkSL16StructDefinitionE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::IRNode"*)* @_ZN4SkSL6IRNodeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::StructDefinition"*)* @_ZN4SkSL16StructDefinitionD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::StructDefinition"*)* @_ZNK4SkSL16StructDefinition11descriptionEv to i8*), i8* bitcast (%"class.SkSL::ProgramElement"* (%"class.SkSL::StructDefinition"*)* @_ZNK4SkSL16StructDefinition5cloneEv to i8*)] }, comdat, align 8
@.str.169 = private unnamed_addr constant [8 x i8] c"struct \00", align 1
@.str.170 = private unnamed_addr constant [4 x i8] c" { \00", align 1
@.str.171 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.172 = private unnamed_addr constant [3 x i8] c"; \00", align 1
@.str.173 = private unnamed_addr constant [3 x i8] c"};\00", align 1
@_ZTVNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEED2Ev to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEED0Ev to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEE16__on_zero_sharedEv to i8*), i8* bitcast (i8* (%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"*)* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEE21__on_zero_shared_weakEv to i8*)] }, comdat, align 8
@_ZTVN4SkSL9ExtensionE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::Extension"*)* @_ZN4SkSL9ExtensionD2Ev to i8*), i8* bitcast (void (%"class.SkSL::Extension"*)* @_ZN4SkSL9ExtensionD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::Extension"*)* @_ZNK4SkSL9Extension11descriptionEv to i8*), i8* bitcast (%"class.SkSL::ProgramElement"* (%"class.SkSL::Extension"*)* @_ZNK4SkSL9Extension5cloneEv to i8*)] }, comdat, align 8
@.str.174 = private unnamed_addr constant [12 x i8] c"#extension \00", align 1
@.str.175 = private unnamed_addr constant [10 x i8] c" : enable\00", align 1
@_ZTVN4SkSL8VariableE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN4SkSL18FunctionDefinitionE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::FunctionDefinition"*)* @_ZN4SkSL18FunctionDefinitionD2Ev to i8*), i8* bitcast (void (%"class.SkSL::FunctionDefinition"*)* @_ZN4SkSL18FunctionDefinitionD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::FunctionDefinition"*)* @_ZNK4SkSL18FunctionDefinition11descriptionEv to i8*), i8* bitcast (%"class.SkSL::ProgramElement"* (%"class.SkSL::FunctionDefinition"*)* @_ZNK4SkSL18FunctionDefinition5cloneEv to i8*)] }, comdat, align 8
@.str.176 = private unnamed_addr constant [46 x i8] c"../../third_party/skia/include/sksl/DSLType.h\00", align 1
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN4SkSL11IRGenerator15convertFunctionERKNS4_7ASTNodeEE3$_5FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@_ZTVN4SkSL17FunctionPrototypeE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::IRNode"*)* @_ZN4SkSL6IRNodeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::FunctionPrototype"*)* @_ZN4SkSL17FunctionPrototypeD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::FunctionPrototype"*)* @_ZNK4SkSL17FunctionPrototype11descriptionEv to i8*), i8* bitcast (%"class.SkSL::ProgramElement"* (%"class.SkSL::FunctionPrototype"*)* @_ZNK4SkSL17FunctionPrototype5cloneEv to i8*)] }, comdat, align 8
@_ZTVN4SkSL5FieldE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::IRNode"*)* @_ZN4SkSL6IRNodeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::Field"*)* @_ZN4SkSL5FieldD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::Field"*)* @_ZNK4SkSL5Field11descriptionEv to i8*)] }, comdat, align 8
@.str.177 = private unnamed_addr constant [2 x i8] c".\00", align 1
@_ZTVN4SkSL14InterfaceBlockE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::InterfaceBlock"*)* @_ZN4SkSL14InterfaceBlockD2Ev to i8*), i8* bitcast (void (%"class.SkSL::InterfaceBlock"*)* @_ZN4SkSL14InterfaceBlockD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::InterfaceBlock"*)* @_ZNK4SkSL14InterfaceBlock11descriptionEv to i8*), i8* bitcast (%"class.SkSL::ProgramElement"* (%"class.SkSL::InterfaceBlock"*)* @_ZNK4SkSL14InterfaceBlock5cloneEv to i8*)] }, comdat, align 8
@.str.178 = private unnamed_addr constant [4 x i8] c" {\0A\00", align 1
@.str.179 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.180 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@.str.181 = private unnamed_addr constant [5 x i8] c"[%d]\00", align 1
@.str.182 = private unnamed_addr constant [3 x i8] c"[]\00", align 1
@_ZTVN4SkSL4EnumE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::Enum"*)* @_ZN4SkSL4EnumD2Ev to i8*), i8* bitcast (void (%"class.SkSL::Enum"*)* @_ZN4SkSL4EnumD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::Enum"*)* @_ZNK4SkSL4Enum11descriptionEv to i8*), i8* bitcast (%"class.SkSL::ProgramElement"* (%"class.SkSL::Enum"*)* @_ZNK4SkSL4Enum5cloneEv to i8*)] }, comdat, align 8
@.str.183 = private unnamed_addr constant [12 x i8] c"enum class \00", align 1
@.str.184 = private unnamed_addr constant [5 x i8] c"    \00", align 1
@.str.185 = private unnamed_addr constant [4 x i8] c" = \00", align 1
@.str.187 = private unnamed_addr constant [4 x i8] c"\0A};\00", align 1
@_ZTVN4SkSL17FunctionReferenceE = linkonce_odr hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::FunctionReference"*)* @_ZN4SkSL17FunctionReferenceD2Ev to i8*), i8* bitcast (void (%"class.SkSL::FunctionReference"*)* @_ZN4SkSL17FunctionReferenceD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::FunctionReference"*)* @_ZNK4SkSL17FunctionReference11descriptionEv to i8*), i8* bitcast (%"class.SkSL::Type"* (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression4typeEv to i8*), i8* bitcast (i1 (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression21isCompileTimeConstantEv to i8*), i8* bitcast (i32 (%"class.SkSL::Expression"*, %"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression15compareConstantERKS0_ to i8*), i8* bitcast (i1 (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression19isConstantOrUniformEv to i8*), i8* bitcast (i1 (%"class.SkSL::FunctionReference"*, i32)* @_ZNK4SkSL17FunctionReference11hasPropertyENS_10Expression8PropertyE to i8*), i8* bitcast ({ i64, i8 } (%"class.SkSL::Expression"*, %"class.SkSL::Type"*)* @_ZNK4SkSL10Expression12coercionCostERKNS_4TypeE to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::Expression"*, i32)* @_ZNK4SkSL10Expression24getConstantSubexpressionEi to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::FunctionReference"*)* @_ZNK4SkSL17FunctionReference5cloneEv to i8*)] }, comdat, align 8
@.str.188 = private unnamed_addr constant [11 x i8] c"<function>\00", align 1
@_ZTVN4SkSL13TypeReferenceE = linkonce_odr hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::IRNode"*)* @_ZN4SkSL6IRNodeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::TypeReference"*)* @_ZN4SkSL13TypeReferenceD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::TypeReference"*)* @_ZNK4SkSL13TypeReference11descriptionEv to i8*), i8* bitcast (%"class.SkSL::Type"* (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression4typeEv to i8*), i8* bitcast (i1 (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression21isCompileTimeConstantEv to i8*), i8* bitcast (i32 (%"class.SkSL::Expression"*, %"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression15compareConstantERKS0_ to i8*), i8* bitcast (i1 (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression19isConstantOrUniformEv to i8*), i8* bitcast (i1 (%"class.SkSL::TypeReference"*, i32)* @_ZNK4SkSL13TypeReference11hasPropertyENS_10Expression8PropertyE to i8*), i8* bitcast ({ i64, i8 } (%"class.SkSL::Expression"*, %"class.SkSL::Type"*)* @_ZNK4SkSL10Expression12coercionCostERKNS_4TypeE to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::Expression"*, i32)* @_ZNK4SkSL10Expression24getConstantSubexpressionEi to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::TypeReference"*)* @_ZNK4SkSL13TypeReference5cloneEv to i8*)] }, comdat, align 8
@_ZTVN4SkSL25ExternalFunctionReferenceE = linkonce_odr hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::IRNode"*)* @_ZN4SkSL6IRNodeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::ExternalFunctionReference"*)* @_ZN4SkSL25ExternalFunctionReferenceD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::ExternalFunctionReference"*)* @_ZNK4SkSL25ExternalFunctionReference11descriptionEv to i8*), i8* bitcast (%"class.SkSL::Type"* (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression4typeEv to i8*), i8* bitcast (i1 (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression21isCompileTimeConstantEv to i8*), i8* bitcast (i32 (%"class.SkSL::Expression"*, %"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression15compareConstantERKS0_ to i8*), i8* bitcast (i1 (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression19isConstantOrUniformEv to i8*), i8* bitcast (i1 (%"class.SkSL::ExternalFunctionReference"*, i32)* @_ZNK4SkSL25ExternalFunctionReference11hasPropertyENS_10Expression8PropertyE to i8*), i8* bitcast ({ i64, i8 } (%"class.SkSL::Expression"*, %"class.SkSL::Type"*)* @_ZNK4SkSL10Expression12coercionCostERKNS_4TypeE to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::Expression"*, i32)* @_ZNK4SkSL10Expression24getConstantSubexpressionEi to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::ExternalFunctionReference"*)* @_ZNK4SkSL25ExternalFunctionReference5cloneEv to i8*)] }, comdat, align 8
@_ZTVN4SkSL7SectionE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::Section"*)* @_ZN4SkSL7SectionD2Ev to i8*), i8* bitcast (void (%"class.SkSL::Section"*)* @_ZN4SkSL7SectionD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::Section"*)* @_ZNK4SkSL7Section11descriptionEv to i8*), i8* bitcast (%"class.SkSL::ProgramElement"* (%"class.SkSL::Section"*)* @_ZNK4SkSL7Section5cloneEv to i8*)] }, comdat, align 8
@.str.189 = private unnamed_addr constant [2 x i8] c"@\00", align 1
@.str.190 = private unnamed_addr constant [3 x i8] c" }\00", align 1
@_ZTVN4SkSL20ExternalFunctionCallE = linkonce_odr hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::ExternalFunctionCall"*)* @_ZN4SkSL20ExternalFunctionCallD2Ev to i8*), i8* bitcast (void (%"class.SkSL::ExternalFunctionCall"*)* @_ZN4SkSL20ExternalFunctionCallD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::ExternalFunctionCall"*)* @_ZNK4SkSL20ExternalFunctionCall11descriptionEv to i8*), i8* bitcast (%"class.SkSL::Type"* (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression4typeEv to i8*), i8* bitcast (i1 (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression21isCompileTimeConstantEv to i8*), i8* bitcast (i32 (%"class.SkSL::Expression"*, %"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression15compareConstantERKS0_ to i8*), i8* bitcast (i1 (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression19isConstantOrUniformEv to i8*), i8* bitcast (i1 (%"class.SkSL::ExternalFunctionCall"*, i32)* @_ZNK4SkSL20ExternalFunctionCall11hasPropertyENS_10Expression8PropertyE to i8*), i8* bitcast ({ i64, i8 } (%"class.SkSL::Expression"*, %"class.SkSL::Type"*)* @_ZNK4SkSL10Expression12coercionCostERKNS_4TypeE to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::Expression"*, i32)* @_ZNK4SkSL10Expression24getConstantSubexpressionEi to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::ExternalFunctionCall"*)* @_ZNK4SkSL20ExternalFunctionCall5cloneEv to i8*)] }, comdat, align 8

@_ZN4SkSL11IRGeneratorC1EPKNS_7ContextE = hidden unnamed_addr alias void (%"class.SkSL::IRGenerator"*, %"class.SkSL::Context"*), void (%"class.SkSL::IRGenerator"*, %"class.SkSL::Context"*)* @_ZN4SkSL11IRGeneratorC2EPKNS_7ContextE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL11IRGeneratorC2EPKNS_7ContextE(%"class.SkSL::IRGenerator"* nocapture, %"class.SkSL::Context"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  store %"class.SkSL::Context"* %1, %"class.SkSL::Context"** %3, align 8
  %4 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 6, i32 0, i32 3
  %6 = bitcast %"class.std::__1::__compressed_pair.106"* %5 to i32*
  %7 = bitcast %"class.std::__1::unique_ptr.49"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 64, i1 false)
  store i32 1065353216, i32* %6, align 4
  %8 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 9
  %9 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 9, i32 0, i32 3
  %10 = bitcast %"class.std::__1::__compressed_pair.132"* %9 to i32*
  %11 = bitcast %"class.std::__1::unordered_set.111"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false) #14
  store i32 1065353216, i32* %10, align 4
  %12 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 10
  %13 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 15
  store i8 0, i8* %13, align 4
  %14 = bitcast %"class.std::__1::vector.137"** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 32, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL11IRGenerator15pushSymbolTableEv(%"class.SkSL::IRGenerator"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 15
  %4 = tail call i8* @_Znwm(i64 128) #15
  %5 = bitcast i8* %4 to i32 (...)***
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %7 = getelementptr inbounds i8, i8* %4, i64 24
  %8 = bitcast %"class.std::__1::shared_ptr"* %2 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 4, i32 1
  %11 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %10, align 8
  %12 = bitcast %"class.std::__1::shared_ptr"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #14
  %13 = load i8, i8* %3, align 1, !range !2
  %14 = inttoptr i64 %9 to %"class.SkSL::SymbolTable"*
  %15 = bitcast i8* %7 to i64*
  store i64 %9, i64* %15, align 8
  %16 = getelementptr inbounds i8, i8* %4, i64 32
  %17 = bitcast i8* %16 to %"class.std::__1::__shared_weak_count"**
  store %"class.std::__1::__shared_weak_count"* %11, %"class.std::__1::__shared_weak_count"** %17, align 8
  %18 = icmp eq %"class.std::__1::__shared_weak_count"* %11, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %11, i64 0, i32 0, i32 1
  %21 = atomicrmw add i64* %20, i64 1 monotonic
  br label %22

22:                                               ; preds = %19, %1
  %23 = getelementptr inbounds i8, i8* %4, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false) #14
  %24 = getelementptr inbounds i8, i8* %4, i64 64
  store i8 %13, i8* %24, align 8
  %25 = getelementptr inbounds i8, i8* %4, i64 72
  %26 = getelementptr inbounds i8, i8* %4, i64 120
  %27 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %14, i64 0, i32 6
  %28 = bitcast %"class.SkSL::ErrorReporter"** %27 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 48, i1 false) #14
  %29 = load i64, i64* %28, align 8
  %30 = bitcast i8* %26 to i64*
  store i64 %29, i64* %30, align 8
  br i1 %18, label %41, label %31

31:                                               ; preds = %22
  %32 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %11, i64 0, i32 0, i32 1
  %33 = atomicrmw add i64* %32, i64 -1 acq_rel
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %11, i64 0, i32 0
  %37 = bitcast %"class.std::__1::__shared_weak_count"* %11 to void (%"class.std::__1::__shared_count"*)***
  %38 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %38, i64 2
  %40 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %39, align 8
  tail call void %40(%"class.std::__1::__shared_count"* %36) #14
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %11) #14
  br label %41

41:                                               ; preds = %22, %31, %35
  %42 = ptrtoint i8* %7 to i64
  %43 = ptrtoint i8* %4 to i64
  store i64 %42, i64* %8, align 8
  %44 = bitcast %"class.std::__1::__shared_weak_count"** %10 to i64*
  %45 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %10, align 8
  store i64 %43, i64* %44, align 8
  %46 = icmp eq %"class.std::__1::__shared_weak_count"* %45, null
  br i1 %46, label %57, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %45, i64 0, i32 0, i32 1
  %49 = atomicrmw add i64* %48, i64 -1 acq_rel
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %57

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %45, i64 0, i32 0
  %53 = bitcast %"class.std::__1::__shared_weak_count"* %45 to void (%"class.std::__1::__shared_count"*)***
  %54 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %54, i64 2
  %56 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %55, align 8
  tail call void %56(%"class.std::__1::__shared_count"* %52) #14
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %45) #14
  br label %57

57:                                               ; preds = %51, %47, %41
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL11IRGenerator14popSymbolTableEv(%"class.SkSL::IRGenerator"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %2, i64 0, i32 0
  %4 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %3, align 8
  %5 = bitcast %"class.SkSL::SymbolTable"* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %4, i64 0, i32 0, i32 1
  %8 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %7, align 8
  %9 = ptrtoint %"class.std::__1::__shared_weak_count"* %8 to i64
  %10 = icmp eq %"class.std::__1::__shared_weak_count"* %8, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %8, i64 0, i32 0, i32 1
  %13 = atomicrmw add i64* %12, i64 1 monotonic
  br label %14

14:                                               ; preds = %11, %1
  %15 = bitcast %"class.std::__1::shared_ptr"* %2 to i64*
  store i64 %6, i64* %15, align 8
  %16 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 4, i32 1
  %17 = bitcast %"class.std::__1::__shared_weak_count"** %16 to i64*
  %18 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %16, align 8
  store i64 %9, i64* %17, align 8
  %19 = icmp eq %"class.std::__1::__shared_weak_count"* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %18, i64 0, i32 0, i32 1
  %22 = atomicrmw add i64* %21, i64 -1 acq_rel
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %18, i64 0, i32 0
  %26 = bitcast %"class.std::__1::__shared_weak_count"* %18 to void (%"class.std::__1::__shared_count"*)***
  %27 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %27, i64 2
  %29 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %28, align 8
  tail call void %29(%"class.std::__1::__shared_count"* %25) #14
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %18) #14
  br label %30

30:                                               ; preds = %14, %20, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4SkSL11IRGenerator32detectVarDeclarationWithoutScopeERKNS_9StatementE(%"class.SkSL::IRGenerator"* nocapture readonly, %"class.SkSL::Statement"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  switch i32 %7, label %96 [
    i32 29, label %28
    i32 16, label %8
  ]

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 4
  %10 = bitcast %"class.SkSL::Statement"* %9 to i8*
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %96

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 2, i32 0, i32 1
  %15 = bitcast i32* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, 4294967294
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %96, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 2
  %21 = bitcast %"class.SkSL::Statement"* %20 to %"class.std::__1::unique_ptr.190"**
  %22 = load %"class.std::__1::unique_ptr.190"*, %"class.std::__1::unique_ptr.190"** %21, align 8
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %23, align 8
  %25 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %24, i64 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 29
  br i1 %27, label %28, label %96

28:                                               ; preds = %19, %2
  %29 = phi %"class.SkSL::Statement"* [ %1, %2 ], [ %24, %19 ]
  %30 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %29, i64 1
  %31 = bitcast %"class.SkSL::Statement"* %30 to %"class.SkSL::Variable"**
  %32 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %31, align 8
  %33 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %34 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %33, align 8
  %35 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %34, i64 0, i32 1
  %36 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %35, align 8
  %37 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 0, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #14
  %40 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #14
  %41 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %32, i64 0, i32 0, i32 1, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %32, i64 0, i32 0, i32 1, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = icmp ugt i64 %44, -17
  br i1 %45, label %46, label %48

46:                                               ; preds = %28
  %47 = bitcast %"class.SkSL::String"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %47) #16
  unreachable

48:                                               ; preds = %28
  %49 = icmp ult i64 %44, 23
  br i1 %49, label %58, label %50

50:                                               ; preds = %48
  %51 = add nuw i64 %44, 16
  %52 = and i64 %51, -16
  %53 = tail call i8* @_Znwm(i64 %52) #15
  %54 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %53, i8** %54, align 8
  %55 = or i64 %52, -9223372036854775808
  %56 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %44, i64* %57, align 8
  br label %63

58:                                               ; preds = %48
  %59 = trunc i64 %44 to i8
  %60 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  store i8 %59, i8* %61, align 1
  %62 = icmp eq i64 %44, 0
  br i1 %62, label %65, label %63

63:                                               ; preds = %58, %50
  %64 = phi i8* [ %53, %50 ], [ %40, %58 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %64, i8* align 1 %42, i64 %44, i1 false) #14
  br label %65

65:                                               ; preds = %58, %63
  %66 = phi i8* [ %40, %58 ], [ %64, %63 ]
  %67 = getelementptr inbounds i8, i8* %66, i64 %44
  store i8 0, i8* %67, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %5) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::String"* nonnull %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0)) #14
  %68 = bitcast %"class.SkSL::ErrorReporter"* %36 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %69 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %69, i64 2
  %71 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %70, align 8
  call void %71(%"class.SkSL::ErrorReporter"* %36, i32 %38, %"class.SkSL::String"* nonnull %3) #14
  %72 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  %74 = load i8, i8* %73, align 1
  %75 = icmp slt i8 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %65
  %77 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  call void @_ZdlPv(i8* %78) #15
  br label %79

79:                                               ; preds = %65, %76
  %80 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %84, label %87

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  call void @_ZdlPv(i8* %86) #15
  br label %87

87:                                               ; preds = %79, %84
  %88 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %89 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %88, i64 0, i32 1, i32 0
  %90 = load i8, i8* %89, align 1
  %91 = icmp slt i8 %90, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load i8*, i8** %93, align 8
  call void @_ZdlPv(i8* %94) #15
  br label %95

95:                                               ; preds = %87, %92
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #14
  br label %96

96:                                               ; preds = %8, %2, %19, %13, %95
  %97 = phi i1 [ true, %95 ], [ false, %13 ], [ false, %8 ], [ false, %19 ], [ false, %2 ]
  ret i1 %97
}

declare void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* sret, i8*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* sret, %"class.SkSL::String"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Extension"* @_ZN4SkSL11IRGenerator16convertExtensionEiNS_14StringFragmentE(%"class.SkSL::IRGenerator"* nocapture readonly, i32, i8*, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.SkSL::String", align 8
  %6 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %7 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %6, align 8
  %8 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %7, i64 0, i32 4
  %9 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %8, align 8
  %10 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %9, i64 0, i32 0
  %11 = load i8, i8* %10, align 8
  %12 = icmp ult i8 %11, 3
  br i1 %12, label %16, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %7, i64 0, i32 1
  %15 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %14, align 8
  tail call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %15, i32 %1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i64 0, i64 0))
  br label %49

16:                                               ; preds = %4
  %17 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17)
  %18 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 40) #14
  %19 = bitcast i8* %18 to %"class.SkSL::Extension"*
  %20 = icmp ugt i64 %3, -17
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  %22 = bitcast %"class.SkSL::String"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %22) #16
  unreachable

23:                                               ; preds = %16
  %24 = icmp ult i64 %3, 23
  br i1 %24, label %33, label %25

25:                                               ; preds = %23
  %26 = add nuw i64 %3, 16
  %27 = and i64 %26, -16
  %28 = tail call i8* @_Znwm(i64 %27) #15
  %29 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %28, i8** %29, align 8
  %30 = or i64 %27, -9223372036854775808
  %31 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %3, i64* %32, align 8
  br label %38

33:                                               ; preds = %23
  %34 = trunc i64 %3 to i8
  %35 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  store i8 %34, i8* %36, align 1
  %37 = icmp eq i64 %3, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %33, %25
  %39 = phi i8* [ %17, %33 ], [ %28, %25 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %39, i8* align 1 %2, i64 %3, i1 false) #14
  br label %40

40:                                               ; preds = %33, %38
  %41 = phi i8* [ %17, %33 ], [ %39, %38 ]
  %42 = getelementptr inbounds i8, i8* %41, i64 %3
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds i8, i8* %18, i64 8
  %44 = bitcast i8* %43 to i32*
  store i32 %1, i32* %44, align 8
  %45 = getelementptr inbounds i8, i8* %18, i64 12
  %46 = bitcast i8* %45 to i32*
  store i32 1, i32* %46, align 4
  %47 = bitcast i8* %18 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL9ExtensionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %47, align 8
  %48 = getelementptr inbounds i8, i8* %18, i64 16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* nonnull align 8 %17, i64 24, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17)
  br label %49

49:                                               ; preds = %40, %13
  %50 = phi %"class.SkSL::Extension"* [ %19, %40 ], [ null, %13 ]
  ret %"class.SkSL::Extension"* %50
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"*, i32, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.SkSL::String", align 8
  %5 = tail call i64 @strlen(i8* %2) #14
  %6 = icmp ugt i64 %5, -17
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = bitcast %"class.SkSL::String"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %8) #16
  unreachable

9:                                                ; preds = %3
  %10 = icmp ult i64 %5, 23
  br i1 %10, label %20, label %11

11:                                               ; preds = %9
  %12 = add nuw i64 %5, 16
  %13 = and i64 %12, -16
  %14 = tail call i8* @_Znwm(i64 %13) #15
  %15 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %14, i8** %15, align 8
  %16 = or i64 %13, -9223372036854775808
  %17 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %5, i64* %18, align 8
  %19 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %26

20:                                               ; preds = %9
  %21 = trunc i64 %5 to i8
  %22 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  store i8 %21, i8* %23, align 1
  %24 = bitcast %"class.SkSL::String"* %4 to i8*
  %25 = icmp eq i64 %5, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20, %11
  %27 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %22, %20 ], [ %19, %11 ]
  %28 = phi i8* [ %24, %20 ], [ %14, %11 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* align 1 %2, i64 %5, i1 false) #14
  br label %29

29:                                               ; preds = %20, %26
  %30 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %22, %20 ], [ %27, %26 ]
  %31 = phi i8* [ %24, %20 ], [ %28, %26 ]
  %32 = getelementptr inbounds i8, i8* %31, i64 %5
  store i8 0, i8* %32, align 1
  %33 = bitcast %"class.SkSL::ErrorReporter"* %0 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %34 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %34, i64 2
  %36 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %35, align 8
  call void %36(%"class.SkSL::ErrorReporter"* %0, i32 %1, %"class.SkSL::String"* nonnull %4) #14
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %42) #15
  br label %43

43:                                               ; preds = %29, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Statement"* @_ZN4SkSL11IRGenerator16convertStatementERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"*, %"struct.SkSL::ASTNode"* nocapture readonly dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"struct.SkSL::StringFragment"*
  %5 = alloca %class.SkSTArray, align 8
  %6 = alloca %class.SkSTArray, align 8
  %7 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  switch i32 %8, label %110 [
    i32 1, label %9
    i32 34, label %12
    i32 18, label %15
    i32 14, label %18
    i32 35, label %21
    i32 7, label %24
    i32 30, label %27
    i32 26, label %30
    i32 3, label %68
    i32 5, label %78
    i32 6, label %88
    i32 32, label %263
  ]

9:                                                ; preds = %2
  %10 = tail call %"class.SkSL::Block"* @_ZN4SkSL11IRGenerator12convertBlockERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %1)
  %11 = ptrtoint %"class.SkSL::Block"* %10 to i64
  br label %263

12:                                               ; preds = %2
  %13 = tail call %"class.SkSL::Statement"* @_ZN4SkSL11IRGenerator30convertVarDeclarationStatementERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %1)
  %14 = ptrtoint %"class.SkSL::Statement"* %13 to i64
  br label %263

15:                                               ; preds = %2
  %16 = tail call %"class.SkSL::Statement"* @_ZN4SkSL11IRGenerator9convertIfERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %1)
  %17 = ptrtoint %"class.SkSL::Statement"* %16 to i64
  br label %263

18:                                               ; preds = %2
  %19 = tail call %"class.SkSL::Statement"* @_ZN4SkSL11IRGenerator10convertForERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %1)
  %20 = ptrtoint %"class.SkSL::Statement"* %19 to i64
  br label %263

21:                                               ; preds = %2
  %22 = tail call %"class.SkSL::Statement"* @_ZN4SkSL11IRGenerator12convertWhileERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %1)
  %23 = ptrtoint %"class.SkSL::Statement"* %22 to i64
  br label %263

24:                                               ; preds = %2
  %25 = tail call %"class.SkSL::Statement"* @_ZN4SkSL11IRGenerator9convertDoERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %1)
  %26 = ptrtoint %"class.SkSL::Statement"* %25 to i64
  br label %263

27:                                               ; preds = %2
  %28 = tail call %"class.SkSL::Statement"* @_ZN4SkSL11IRGenerator13convertSwitchERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %1)
  %29 = ptrtoint %"class.SkSL::Statement"* %28 to i64
  br label %263

30:                                               ; preds = %2
  %31 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 4, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp sgt i32 %32, -1
  br i1 %33, label %34, label %56

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 0
  %36 = load %"class.std::__1::vector.52"*, %"class.std::__1::vector.52"** %35, align 8
  %37 = sext i32 %32 to i64
  %38 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %36, i64 0, i32 0, i32 0
  %39 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %38, align 8
  %40 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %39, i64 %37
  %41 = tail call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator17convertExpressionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %40) #14
  %42 = icmp eq %"class.SkSL::Expression"* %41, null
  br i1 %42, label %263, label %43

43:                                               ; preds = %34
  %44 = ptrtoint %"class.SkSL::Expression"* %41 to i64
  %45 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 24) #14
  %48 = getelementptr inbounds i8, i8* %47, i64 8
  %49 = bitcast i8* %48 to i32*
  store i32 %46, i32* %49, align 8
  %50 = getelementptr inbounds i8, i8* %47, i64 12
  %51 = bitcast i8* %50 to i32*
  store i32 26, i32* %51, align 4
  %52 = bitcast i8* %47 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL15ReturnStatementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %52, align 8
  %53 = getelementptr inbounds i8, i8* %47, i64 16
  %54 = bitcast i8* %53 to i64*
  store i64 %44, i64* %54, align 8
  %55 = ptrtoint i8* %47 to i64
  br label %263

56:                                               ; preds = %30
  %57 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 24) #14
  %60 = getelementptr inbounds i8, i8* %59, i64 8
  %61 = bitcast i8* %60 to i32*
  store i32 %58, i32* %61, align 8
  %62 = getelementptr inbounds i8, i8* %59, i64 12
  %63 = bitcast i8* %62 to i32*
  store i32 26, i32* %63, align 4
  %64 = bitcast i8* %59 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL15ReturnStatementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %64, align 8
  %65 = getelementptr inbounds i8, i8* %59, i64 16
  %66 = bitcast i8* %65 to i64*
  store i64 0, i64* %66, align 8
  %67 = ptrtoint i8* %59 to i64
  br label %263

68:                                               ; preds = %2
  %69 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 2
  %70 = load i32, i32* %69, align 4
  %71 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 16) #14
  %72 = getelementptr inbounds i8, i8* %71, i64 8
  %73 = bitcast i8* %72 to i32*
  store i32 %70, i32* %73, align 8
  %74 = getelementptr inbounds i8, i8* %71, i64 12
  %75 = bitcast i8* %74 to i32*
  store i32 17, i32* %75, align 4
  %76 = bitcast i8* %71 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL14BreakStatementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %76, align 8
  %77 = ptrtoint i8* %71 to i64
  br label %263

78:                                               ; preds = %2
  %79 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 2
  %80 = load i32, i32* %79, align 4
  %81 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 16) #14
  %82 = getelementptr inbounds i8, i8* %81, i64 8
  %83 = bitcast i8* %82 to i32*
  store i32 %80, i32* %83, align 8
  %84 = getelementptr inbounds i8, i8* %81, i64 12
  %85 = bitcast i8* %84 to i32*
  store i32 18, i32* %85, align 4
  %86 = bitcast i8* %81 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL17ContinueStatementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %86, align 8
  %87 = ptrtoint i8* %81 to i64
  br label %263

88:                                               ; preds = %2
  %89 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %90 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %89, align 8
  %91 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %90, i64 0, i32 4
  %92 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %91, align 8
  %93 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %92, i64 0, i32 0
  %94 = load i8, i8* %93, align 8
  switch i8 %94, label %95 [
    i8 0, label %100
    i8 3, label %100
  ]

95:                                               ; preds = %88
  %96 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %90, i64 0, i32 1
  %97 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %96, align 8
  %98 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 2
  %99 = load i32, i32* %98, align 4
  tail call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %97, i32 %99, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.31, i64 0, i64 0)) #14
  br label %263

100:                                              ; preds = %88, %88
  %101 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 2
  %102 = load i32, i32* %101, align 4
  %103 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 16) #14
  %104 = getelementptr inbounds i8, i8* %103, i64 8
  %105 = bitcast i8* %104 to i32*
  store i32 %102, i32* %105, align 8
  %106 = getelementptr inbounds i8, i8* %103, i64 12
  %107 = bitcast i8* %106 to i32*
  store i32 19, i32* %107, align 4
  %108 = bitcast i8* %103 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL16DiscardStatementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %108, align 8
  %109 = ptrtoint i8* %103 to i64
  br label %263

110:                                              ; preds = %2
  %111 = tail call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator17convertExpressionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %1) #14
  %112 = icmp eq %"class.SkSL::Expression"* %111, null
  br i1 %112, label %117, label %113

113:                                              ; preds = %110
  %114 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %115 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %114, align 8
  %116 = tail call %"class.SkSL::Statement"* @_ZN4SkSL19ExpressionStatement4MakeERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEE(%"class.SkSL::Context"* dereferenceable(744) %115, %"class.SkSL::Expression"* nonnull %111) #14
  br label %117

117:                                              ; preds = %110, %113
  %118 = phi %"class.SkSL::Statement"* [ %116, %113 ], [ null, %110 ]
  %119 = ptrtoint %"class.SkSL::Statement"* %118 to i64
  %120 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 12
  %121 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %120, align 8
  %122 = icmp eq %"class.SkSL::Variable"* %121, null
  br i1 %122, label %263, label %123

123:                                              ; preds = %117
  %124 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %125 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %124, align 8
  %126 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %125, i64 0, i32 4
  %127 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %126, align 8
  %128 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %127, i64 0, i32 0
  %129 = load i8, i8* %128, align 8
  %130 = icmp eq i8 %129, 2
  br i1 %130, label %131, label %263

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %118, i64 1
  %133 = bitcast %"class.SkSL::Statement"* %132 to %"class.SkSL::Expression"**
  %134 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %133, align 8
  %135 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %134, i64 0, i32 0, i32 2
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, 47
  br i1 %137, label %138, label %263

138:                                              ; preds = %131
  %139 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %134, i64 1
  %140 = bitcast %"class.SkSL::Expression"* %139 to %"class.SkSL::FunctionDeclaration"**
  %141 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %140, align 8
  %142 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %141, i64 0, i32 5
  %143 = load i8, i8* %142, align 8, !range !2
  %144 = icmp eq i8 %143, 0
  %145 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %145) #14
  br i1 %144, label %261, label %146

146:                                              ; preds = %138
  %147 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %141, i64 0, i32 0, i32 1, i32 0
  %148 = bitcast i8** %147 to <2 x i64>*
  %149 = load <2 x i64>, <2 x i64>* %148, align 8
  store <2 x i64> %149, <2 x i64>* %3, align 16
  %150 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqEPKc(%"struct.SkSL::StringFragment"* nonnull %4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0)) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %145) #14
  br i1 %150, label %151, label %263

151:                                              ; preds = %146
  %152 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %5, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %152) #14
  %153 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %5, i64 0, i32 0, i32 0, i64 16
  %154 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %5, i64 0, i32 0, i32 0, i64 24
  %155 = bitcast i8* %154 to i64*
  %156 = bitcast i8* %153 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %152, i8 -86, i64 16, i1 false)
  store i8* %152, i8** %156, align 8
  store i64 17179869184, i64* %155, align 8
  %157 = bitcast i8* %153 to %class.SkTArray*
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %157, i32 2, i32 0) #14
  %158 = load i64, i64* %155, align 8
  %159 = shl i64 %158, 32
  %160 = and i64 %159, 4294967296
  %161 = and i64 %158, -4294967297
  %162 = or i64 %160, %161
  store i64 %162, i64* %155, align 8
  %163 = call %"class.SkSL::Statement"* @_ZN4SkSL11IRGenerator26getNormalizeSkPositionCodeEv(%"class.SkSL::IRGenerator"* %0)
  %164 = ptrtoint %"class.SkSL::Statement"* %163 to i64
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %157, i32 1, i32 1) #14
  %165 = bitcast i8* %153 to %"class.std::__1::unique_ptr.190"**
  %166 = load %"class.std::__1::unique_ptr.190"*, %"class.std::__1::unique_ptr.190"** %165, align 8
  %167 = load i64, i64* %155, align 8
  %168 = lshr i64 %167, 1
  %169 = and i64 %168, 2147483647
  %170 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %166, i64 %169
  %171 = add i64 %167, 2
  %172 = and i64 %171, 4294967294
  %173 = and i64 %167, -4294967295
  %174 = or i64 %172, %173
  store i64 %174, i64* %155, align 8
  %175 = bitcast %"class.std::__1::unique_ptr.190"* %170 to i64*
  store i64 %164, i64* %175, align 8
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %157, i32 1, i32 1) #14
  %176 = load %"class.std::__1::unique_ptr.190"*, %"class.std::__1::unique_ptr.190"** %165, align 8
  %177 = load i64, i64* %155, align 8
  %178 = lshr i64 %177, 1
  %179 = and i64 %178, 2147483647
  %180 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %176, i64 %179
  %181 = add i64 %177, 2
  %182 = and i64 %181, 4294967294
  %183 = and i64 %177, -4294967295
  %184 = or i64 %182, %183
  store i64 %184, i64* %155, align 8
  %185 = bitcast %"class.std::__1::unique_ptr.190"* %180 to i64*
  store i64 %119, i64* %185, align 8
  %186 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 2
  %187 = load i32, i32* %186, align 4
  %188 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %6, i64 0, i32 0, i32 0, i64 16
  %189 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %6, i64 0, i32 0, i32 0, i64 0
  %190 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %6, i64 0, i32 0, i32 0, i64 24
  %191 = bitcast i8* %190 to i64*
  %192 = bitcast i8* %188 to i8**
  store i8* %189, i8** %192, align 8
  store i64 17179869184, i64* %191, align 8
  %193 = bitcast i8* %188 to %class.SkTArray*
  %194 = call dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray* %193, %class.SkTArray* dereferenceable(16) %157) #14
  %195 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 4, i32 0
  %196 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %195, align 8
  %197 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 4, i32 1
  %198 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %197, align 8
  %199 = icmp eq %"class.std::__1::__shared_weak_count"* %198, null
  br i1 %199, label %203, label %200

200:                                              ; preds = %151
  %201 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %198, i64 0, i32 0, i32 1
  %202 = atomicrmw add i64* %201, i64 1 monotonic
  br label %203

203:                                              ; preds = %200, %151
  %204 = call %"class.SkSL::Block"* @_ZN4SkSL5Block4MakeEi9SkSTArrayILi2ENSt3__110unique_ptrINS_9StatementENS2_14default_deleteIS4_EEEELb0EENS2_10shared_ptrINS_11SymbolTableEEEb(i32 %187, %class.SkSTArray* nonnull %6, %"class.SkSL::SymbolTable"* %196, %"class.std::__1::__shared_weak_count"* %198, i1 zeroext true) #14
  %205 = ptrtoint %"class.SkSL::Block"* %204 to i64
  %206 = load i64, i64* %191, align 8
  %207 = and i64 %206, 4294967294
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %211, label %209

209:                                              ; preds = %203
  %210 = bitcast i8* %188 to %"class.std::__1::unique_ptr.190"**
  br label %215

211:                                              ; preds = %226, %203
  %212 = phi i64 [ %206, %203 ], [ %228, %226 ]
  %213 = and i64 %212, 1
  %214 = icmp eq i64 %213, 0
  br i1 %214, label %234, label %232

215:                                              ; preds = %226, %209
  %216 = phi i64 [ 0, %209 ], [ %227, %226 ]
  %217 = load %"class.std::__1::unique_ptr.190"*, %"class.std::__1::unique_ptr.190"** %210, align 8
  %218 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %217, i64 %216, i32 0, i32 0, i32 0
  %219 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %218, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %218, align 8
  %220 = icmp eq %"class.SkSL::Statement"* %219, null
  br i1 %220, label %226, label %221

221:                                              ; preds = %215
  %222 = bitcast %"class.SkSL::Statement"* %219 to void (%"class.SkSL::Statement"*)***
  %223 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %222, align 8
  %224 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %223, i64 1
  %225 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %224, align 8
  call void %225(%"class.SkSL::Statement"* nonnull %219) #14
  br label %226

226:                                              ; preds = %221, %215
  %227 = add nuw nsw i64 %216, 1
  %228 = load i64, i64* %191, align 8
  %229 = lshr i64 %228, 1
  %230 = and i64 %229, 2147483647
  %231 = icmp ult i64 %227, %230
  br i1 %231, label %215, label %211

232:                                              ; preds = %211
  %233 = load i8*, i8** %192, align 8
  call void @_Z7sk_freePv(i8* %233) #14
  br label %234

234:                                              ; preds = %211, %232
  %235 = load i64, i64* %155, align 8
  %236 = and i64 %235, 4294967294
  %237 = icmp eq i64 %236, 0
  br i1 %237, label %238, label %242

238:                                              ; preds = %253, %234
  %239 = phi i64 [ %235, %234 ], [ %255, %253 ]
  %240 = and i64 %239, 1
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %262, label %259

242:                                              ; preds = %234, %253
  %243 = phi i64 [ %254, %253 ], [ 0, %234 ]
  %244 = load %"class.std::__1::unique_ptr.190"*, %"class.std::__1::unique_ptr.190"** %165, align 8
  %245 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %244, i64 %243, i32 0, i32 0, i32 0
  %246 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %245, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %245, align 8
  %247 = icmp eq %"class.SkSL::Statement"* %246, null
  br i1 %247, label %253, label %248

248:                                              ; preds = %242
  %249 = bitcast %"class.SkSL::Statement"* %246 to void (%"class.SkSL::Statement"*)***
  %250 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %249, align 8
  %251 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %250, i64 1
  %252 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %251, align 8
  call void %252(%"class.SkSL::Statement"* nonnull %246) #14
  br label %253

253:                                              ; preds = %248, %242
  %254 = add nuw nsw i64 %243, 1
  %255 = load i64, i64* %155, align 8
  %256 = lshr i64 %255, 1
  %257 = and i64 %256, 2147483647
  %258 = icmp ult i64 %254, %257
  br i1 %258, label %242, label %238

259:                                              ; preds = %238
  %260 = load i8*, i8** %156, align 8
  call void @_Z7sk_freePv(i8* %260) #14
  br label %262

261:                                              ; preds = %138
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %145) #14
  br label %263

262:                                              ; preds = %238, %259
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %152) #14
  br label %263

263:                                              ; preds = %123, %117, %262, %131, %261, %146, %100, %95, %56, %43, %34, %2, %78, %68, %27, %24, %21, %18, %15, %12, %9
  %264 = phi i64 [ %87, %78 ], [ %77, %68 ], [ %29, %27 ], [ %26, %24 ], [ %23, %21 ], [ %20, %18 ], [ %17, %15 ], [ %14, %12 ], [ %11, %9 ], [ 0, %2 ], [ %67, %56 ], [ %55, %43 ], [ 0, %34 ], [ %109, %100 ], [ 0, %95 ], [ %205, %262 ], [ %119, %117 ], [ %119, %123 ], [ %119, %131 ], [ %119, %261 ], [ %119, %146 ]
  %265 = inttoptr i64 %264 to %"class.SkSL::Statement"*
  ret %"class.SkSL::Statement"* %265
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Block"* @_ZN4SkSL11IRGenerator12convertBlockERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"*, %"struct.SkSL::ASTNode"* nocapture readonly dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkSTArray, align 8
  %4 = alloca %class.SkSTArray, align 8
  %5 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 4
  %6 = bitcast %"class.std::__1::shared_ptr"* %5 to i64*
  %7 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 4, i32 1
  %8 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %7, align 8
  %9 = icmp eq %"class.std::__1::__shared_weak_count"* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %8, i64 0, i32 0, i32 1
  %12 = atomicrmw add i64* %11, i64 1 monotonic
  br label %13

13:                                               ; preds = %2, %10
  tail call void @_ZN4SkSL11IRGenerator15pushSymbolTableEv(%"class.SkSL::IRGenerator"* %0) #14
  %14 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %3, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #14
  %15 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %3, i64 0, i32 0, i32 0, i64 16
  %16 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %3, i64 0, i32 0, i32 0, i64 24
  %17 = bitcast i8* %16 to i64*
  %18 = bitcast i8* %15 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false)
  store i8* %14, i8** %18, align 8
  store i64 17179869184, i64* %17, align 8
  %19 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 4, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp sgt i32 %20, -1
  br i1 %21, label %24, label %22

22:                                               ; preds = %13
  %23 = bitcast i8* %15 to %class.SkTArray*
  br label %54

24:                                               ; preds = %13
  %25 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 0
  %26 = load %"class.std::__1::vector.52"*, %"class.std::__1::vector.52"** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %26, i64 0, i32 0, i32 0
  %28 = bitcast i8* %15 to %class.SkTArray*
  %29 = bitcast i8* %15 to %"class.std::__1::unique_ptr.190"**
  %30 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %27, align 8
  br label %31

31:                                               ; preds = %24, %38
  %32 = phi %"struct.SkSL::ASTNode"* [ %30, %24 ], [ %50, %38 ]
  %33 = phi i32 [ %20, %24 ], [ %52, %38 ]
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %32, i64 %34
  %36 = call %"class.SkSL::Statement"* @_ZN4SkSL11IRGenerator16convertStatementERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %35)
  %37 = icmp eq %"class.SkSL::Statement"* %36, null
  br i1 %37, label %103, label %38

38:                                               ; preds = %31
  %39 = ptrtoint %"class.SkSL::Statement"* %36 to i64
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %28, i32 1, i32 1) #14
  %40 = load %"class.std::__1::unique_ptr.190"*, %"class.std::__1::unique_ptr.190"** %29, align 8
  %41 = load i64, i64* %17, align 8
  %42 = lshr i64 %41, 1
  %43 = and i64 %42, 2147483647
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %40, i64 %43
  %45 = add i64 %41, 2
  %46 = and i64 %45, 4294967294
  %47 = and i64 %41, -4294967295
  %48 = or i64 %46, %47
  store i64 %48, i64* %17, align 8
  %49 = bitcast %"class.std::__1::unique_ptr.190"* %44 to i64*
  store i64 %39, i64* %49, align 8
  %50 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %27, align 8
  %51 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %50, i64 %34, i32 6, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = icmp sgt i32 %52, -1
  br i1 %53, label %31, label %54

54:                                               ; preds = %38, %22
  %55 = phi %class.SkTArray* [ %23, %22 ], [ %28, %38 ]
  %56 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %4, i64 0, i32 0, i32 0, i64 16
  %59 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %4, i64 0, i32 0, i32 0, i64 0
  %60 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %4, i64 0, i32 0, i32 0, i64 24
  %61 = bitcast i8* %60 to i64*
  %62 = bitcast i8* %58 to i8**
  store i8* %59, i8** %62, align 8
  store i64 17179869184, i64* %61, align 8
  %63 = bitcast i8* %58 to %class.SkTArray*
  %64 = call dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray* %63, %class.SkTArray* dereferenceable(16) %55) #14
  %65 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %5, i64 0, i32 0
  %66 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %65, align 8
  %67 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %7, align 8
  %68 = icmp eq %"class.std::__1::__shared_weak_count"* %67, null
  br i1 %68, label %72, label %69

69:                                               ; preds = %54
  %70 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %67, i64 0, i32 0, i32 1
  %71 = atomicrmw add i64* %70, i64 1 monotonic
  br label %72

72:                                               ; preds = %54, %69
  %73 = call %"class.SkSL::Block"* @_ZN4SkSL5Block4MakeEi9SkSTArrayILi2ENSt3__110unique_ptrINS_9StatementENS2_14default_deleteIS4_EEEELb0EENS2_10shared_ptrINS_11SymbolTableEEEb(i32 %57, %class.SkSTArray* nonnull %4, %"class.SkSL::SymbolTable"* %66, %"class.std::__1::__shared_weak_count"* %67, i1 zeroext true) #14
  %74 = ptrtoint %"class.SkSL::Block"* %73 to i64
  %75 = load i64, i64* %61, align 8
  %76 = and i64 %75, 4294967294
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %80, label %78

78:                                               ; preds = %72
  %79 = bitcast i8* %58 to %"class.std::__1::unique_ptr.190"**
  br label %84

80:                                               ; preds = %95, %72
  %81 = phi i64 [ %75, %72 ], [ %97, %95 ]
  %82 = and i64 %81, 1
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %103, label %101

84:                                               ; preds = %95, %78
  %85 = phi i64 [ 0, %78 ], [ %96, %95 ]
  %86 = load %"class.std::__1::unique_ptr.190"*, %"class.std::__1::unique_ptr.190"** %79, align 8
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %86, i64 %85, i32 0, i32 0, i32 0
  %88 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %87, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %87, align 8
  %89 = icmp eq %"class.SkSL::Statement"* %88, null
  br i1 %89, label %95, label %90

90:                                               ; preds = %84
  %91 = bitcast %"class.SkSL::Statement"* %88 to void (%"class.SkSL::Statement"*)***
  %92 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %91, align 8
  %93 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %92, i64 1
  %94 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %93, align 8
  call void %94(%"class.SkSL::Statement"* nonnull %88) #14
  br label %95

95:                                               ; preds = %90, %84
  %96 = add nuw nsw i64 %85, 1
  %97 = load i64, i64* %61, align 8
  %98 = lshr i64 %97, 1
  %99 = and i64 %98, 2147483647
  %100 = icmp ult i64 %96, %99
  br i1 %100, label %84, label %80

101:                                              ; preds = %80
  %102 = load i8*, i8** %62, align 8
  call void @_Z7sk_freePv(i8* %102) #14
  br label %103

103:                                              ; preds = %31, %101, %80
  %104 = phi i64 [ %74, %80 ], [ %74, %101 ], [ 0, %31 ]
  %105 = load i64, i64* %17, align 8
  %106 = and i64 %105, 4294967294
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %110, label %108

108:                                              ; preds = %103
  %109 = bitcast i8* %15 to %"class.std::__1::unique_ptr.190"**
  br label %114

110:                                              ; preds = %125, %103
  %111 = phi i64 [ %105, %103 ], [ %127, %125 ]
  %112 = and i64 %111, 1
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %133, label %131

114:                                              ; preds = %125, %108
  %115 = phi i64 [ 0, %108 ], [ %126, %125 ]
  %116 = load %"class.std::__1::unique_ptr.190"*, %"class.std::__1::unique_ptr.190"** %109, align 8
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %116, i64 %115, i32 0, i32 0, i32 0
  %118 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %117, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %117, align 8
  %119 = icmp eq %"class.SkSL::Statement"* %118, null
  br i1 %119, label %125, label %120

120:                                              ; preds = %114
  %121 = bitcast %"class.SkSL::Statement"* %118 to void (%"class.SkSL::Statement"*)***
  %122 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %121, align 8
  %123 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %122, i64 1
  %124 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %123, align 8
  call void %124(%"class.SkSL::Statement"* nonnull %118) #14
  br label %125

125:                                              ; preds = %120, %114
  %126 = add nuw nsw i64 %115, 1
  %127 = load i64, i64* %17, align 8
  %128 = lshr i64 %127, 1
  %129 = and i64 %128, 2147483647
  %130 = icmp ult i64 %126, %129
  br i1 %130, label %114, label %110

131:                                              ; preds = %110
  %132 = load i8*, i8** %18, align 8
  call void @_Z7sk_freePv(i8* %132) #14
  br label %133

133:                                              ; preds = %110, %131
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #14
  %134 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %5, i64 0, i32 0
  %135 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %134, align 8
  %136 = bitcast %"class.SkSL::SymbolTable"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %135, i64 0, i32 0, i32 1
  %139 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %138, align 8
  %140 = ptrtoint %"class.std::__1::__shared_weak_count"* %139 to i64
  %141 = icmp eq %"class.std::__1::__shared_weak_count"* %139, null
  br i1 %141, label %145, label %142

142:                                              ; preds = %133
  %143 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %139, i64 0, i32 0, i32 1
  %144 = atomicrmw add i64* %143, i64 1 monotonic
  br label %145

145:                                              ; preds = %142, %133
  store i64 %137, i64* %6, align 8
  %146 = bitcast %"class.std::__1::__shared_weak_count"** %7 to i64*
  %147 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %7, align 8
  store i64 %140, i64* %146, align 8
  %148 = icmp eq %"class.std::__1::__shared_weak_count"* %147, null
  br i1 %148, label %159, label %149

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %147, i64 0, i32 0, i32 1
  %151 = atomicrmw add i64* %150, i64 -1 acq_rel
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %159

153:                                              ; preds = %149
  %154 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %147, i64 0, i32 0
  %155 = bitcast %"class.std::__1::__shared_weak_count"* %147 to void (%"class.std::__1::__shared_count"*)***
  %156 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %155, align 8
  %157 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %156, i64 2
  %158 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %157, align 8
  call void %158(%"class.std::__1::__shared_count"* %154) #14
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %147) #14
  br label %159

159:                                              ; preds = %153, %149, %145
  br i1 %9, label %170, label %160

160:                                              ; preds = %159
  %161 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %8, i64 0, i32 0, i32 1
  %162 = atomicrmw add i64* %161, i64 -1 acq_rel
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %164, label %170

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %8, i64 0, i32 0
  %166 = bitcast %"class.std::__1::__shared_weak_count"* %8 to void (%"class.std::__1::__shared_count"*)***
  %167 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %166, align 8
  %168 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %167, i64 2
  %169 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %168, align 8
  call void %169(%"class.std::__1::__shared_count"* %165) #14
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %8) #14
  br label %170

170:                                              ; preds = %159, %160, %164
  %171 = inttoptr i64 %104 to %"class.SkSL::Block"*
  ret %"class.SkSL::Block"* %171
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Statement"* @_ZN4SkSL11IRGenerator30convertVarDeclarationStatementERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"*, %"struct.SkSL::ASTNode"* nocapture readonly dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkSTArray, align 8
  %4 = alloca %class.SkSTArray, align 8
  %5 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %3, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 32, i1 false)
  call void @_ZN4SkSL11IRGenerator22convertVarDeclarationsERKNS_7ASTNodeENS_15VariableStorageE(%class.SkSTArray* nonnull sret %3, %"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %1, i8 signext 2)
  %6 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %3, i64 0, i32 0, i32 0, i64 16
  %7 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %3, i64 0, i32 0, i32 0, i64 24
  %8 = bitcast i8* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 4294967294
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %53, label %12

12:                                               ; preds = %2
  %13 = bitcast i8* %6 to %class.SkTArray*
  %14 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %4, i64 0, i32 0, i32 0, i64 16
  %17 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %4, i64 0, i32 0, i32 0, i64 0
  %18 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %4, i64 0, i32 0, i32 0, i64 24
  %19 = bitcast i8* %18 to i64*
  %20 = bitcast i8* %16 to i8**
  store i8* %17, i8** %20, align 8
  store i64 17179869184, i64* %19, align 8
  %21 = bitcast i8* %16 to %class.SkTArray*
  %22 = call dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray* %21, %class.SkTArray* dereferenceable(16) %13) #14
  %23 = call %"class.SkSL::Statement"* @_ZN4SkSL5Block12MakeUnscopedEi9SkSTArrayILi2ENSt3__110unique_ptrINS_9StatementENS2_14default_deleteIS4_EEEELb0EE(i32 %15, %class.SkSTArray* nonnull %4) #14
  %24 = ptrtoint %"class.SkSL::Statement"* %23 to i64
  %25 = load i64, i64* %19, align 8
  %26 = and i64 %25, 4294967294
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %12
  %29 = bitcast i8* %16 to %"class.std::__1::unique_ptr.190"**
  br label %34

30:                                               ; preds = %45, %12
  %31 = phi i64 [ %25, %12 ], [ %47, %45 ]
  %32 = and i64 %31, 1
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %53, label %51

34:                                               ; preds = %45, %28
  %35 = phi i64 [ 0, %28 ], [ %46, %45 ]
  %36 = load %"class.std::__1::unique_ptr.190"*, %"class.std::__1::unique_ptr.190"** %29, align 8
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %36, i64 %35, i32 0, i32 0, i32 0
  %38 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %37, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %37, align 8
  %39 = icmp eq %"class.SkSL::Statement"* %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %34
  %41 = bitcast %"class.SkSL::Statement"* %38 to void (%"class.SkSL::Statement"*)***
  %42 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %42, i64 1
  %44 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %43, align 8
  call void %44(%"class.SkSL::Statement"* nonnull %38) #14
  br label %45

45:                                               ; preds = %40, %34
  %46 = add nuw nsw i64 %35, 1
  %47 = load i64, i64* %19, align 8
  %48 = lshr i64 %47, 1
  %49 = and i64 %48, 2147483647
  %50 = icmp ult i64 %46, %49
  br i1 %50, label %34, label %30

51:                                               ; preds = %30
  %52 = load i8*, i8** %20, align 8
  call void @_Z7sk_freePv(i8* %52) #14
  br label %53

53:                                               ; preds = %51, %30, %2
  %54 = phi i64 [ 0, %2 ], [ %24, %30 ], [ %24, %51 ]
  %55 = load i64, i64* %8, align 8
  %56 = and i64 %55, 4294967294
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %60, label %58

58:                                               ; preds = %53
  %59 = bitcast i8* %6 to %"class.std::__1::unique_ptr.190"**
  br label %64

60:                                               ; preds = %75, %53
  %61 = phi i64 [ %55, %53 ], [ %77, %75 ]
  %62 = and i64 %61, 1
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %84, label %81

64:                                               ; preds = %75, %58
  %65 = phi i64 [ 0, %58 ], [ %76, %75 ]
  %66 = load %"class.std::__1::unique_ptr.190"*, %"class.std::__1::unique_ptr.190"** %59, align 8
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %66, i64 %65, i32 0, i32 0, i32 0
  %68 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %67, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %67, align 8
  %69 = icmp eq %"class.SkSL::Statement"* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %64
  %71 = bitcast %"class.SkSL::Statement"* %68 to void (%"class.SkSL::Statement"*)***
  %72 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %72, i64 1
  %74 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %73, align 8
  call void %74(%"class.SkSL::Statement"* nonnull %68) #14
  br label %75

75:                                               ; preds = %70, %64
  %76 = add nuw nsw i64 %65, 1
  %77 = load i64, i64* %8, align 8
  %78 = lshr i64 %77, 1
  %79 = and i64 %78, 2147483647
  %80 = icmp ult i64 %76, %79
  br i1 %80, label %64, label %60

81:                                               ; preds = %60
  %82 = bitcast i8* %6 to i8**
  %83 = load i8*, i8** %82, align 8
  call void @_Z7sk_freePv(i8* %83) #14
  br label %84

84:                                               ; preds = %60, %81
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #14
  %85 = inttoptr i64 %54 to %"class.SkSL::Statement"*
  ret %"class.SkSL::Statement"* %85
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Statement"* @_ZN4SkSL11IRGenerator9convertIfERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"*, %"struct.SkSL::ASTNode"* nocapture readonly dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 0
  %4 = load %"class.std::__1::vector.52"*, %"class.std::__1::vector.52"** %3, align 8
  %5 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 4, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %4, i64 0, i32 0, i32 0
  %9 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %8, align 8
  %10 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %9, i64 %7, i32 6, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %9, i64 %7
  %13 = tail call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator17convertExpressionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %12)
  %14 = icmp eq %"class.SkSL::Expression"* %13, null
  br i1 %14, label %62, label %15

15:                                               ; preds = %2
  %16 = sext i32 %11 to i64
  %17 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %8, align 8
  %18 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %17, i64 %16, i32 6, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %17, i64 %16
  %21 = tail call %"class.SkSL::Statement"* @_ZN4SkSL11IRGenerator16convertStatementERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %20)
  %22 = icmp eq %"class.SkSL::Statement"* %21, null
  br i1 %22, label %57, label %23

23:                                               ; preds = %15
  %24 = tail call zeroext i1 @_ZN4SkSL11IRGenerator32detectVarDeclarationWithoutScopeERKNS_9StatementE(%"class.SkSL::IRGenerator"* %0, %"class.SkSL::Statement"* nonnull dereferenceable(16) %21)
  br i1 %24, label %52, label %25

25:                                               ; preds = %23
  %26 = icmp sgt i32 %19, -1
  br i1 %26, label %27, label %36

27:                                               ; preds = %25
  %28 = sext i32 %19 to i64
  %29 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %8, align 8
  %30 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %29, i64 %28
  %31 = tail call %"class.SkSL::Statement"* @_ZN4SkSL11IRGenerator16convertStatementERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %30)
  %32 = icmp eq %"class.SkSL::Statement"* %31, null
  br i1 %32, label %52, label %33

33:                                               ; preds = %27
  %34 = ptrtoint %"class.SkSL::Statement"* %31 to i64
  %35 = tail call zeroext i1 @_ZN4SkSL11IRGenerator32detectVarDeclarationWithoutScopeERKNS_9StatementE(%"class.SkSL::IRGenerator"* %0, %"class.SkSL::Statement"* nonnull dereferenceable(16) %31)
  br i1 %35, label %47, label %36

36:                                               ; preds = %25, %33
  %37 = phi i64 [ %34, %33 ], [ 0, %25 ]
  %38 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 1, i32 0, i64 0
  %39 = load i8, i8* %38, align 8, !range !2
  %40 = icmp ne i8 %39, 0
  %41 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %42 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %41, align 8
  %43 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = inttoptr i64 %37 to %"class.SkSL::Statement"*
  %46 = tail call %"class.SkSL::Statement"* @_ZN4SkSL11IfStatement7ConvertERKNS_7ContextEibNSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEENS5_INS_9StatementENS7_ISA_EEEESC_(%"class.SkSL::Context"* dereferenceable(744) %42, i32 %44, i1 zeroext %40, %"class.SkSL::Expression"* nonnull %13, %"class.SkSL::Statement"* nonnull %21, %"class.SkSL::Statement"* %45) #14
  br label %62

47:                                               ; preds = %33
  %48 = bitcast %"class.SkSL::Statement"* %31 to void (%"class.SkSL::Statement"*)***
  %49 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %49, i64 1
  %51 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %50, align 8
  tail call void %51(%"class.SkSL::Statement"* nonnull %31) #14
  br label %52

52:                                               ; preds = %23, %47, %27
  %53 = bitcast %"class.SkSL::Statement"* %21 to void (%"class.SkSL::Statement"*)***
  %54 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %54, i64 1
  %56 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %55, align 8
  tail call void %56(%"class.SkSL::Statement"* nonnull %21) #14
  br label %57

57:                                               ; preds = %52, %15
  %58 = bitcast %"class.SkSL::Expression"* %13 to void (%"class.SkSL::Expression"*)***
  %59 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %59, i64 1
  %61 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %60, align 8
  tail call void %61(%"class.SkSL::Expression"* nonnull %13) #14
  br label %62

62:                                               ; preds = %2, %36, %57
  %63 = phi %"class.SkSL::Statement"* [ %46, %36 ], [ null, %57 ], [ null, %2 ]
  ret %"class.SkSL::Statement"* %63
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Statement"* @_ZN4SkSL11IRGenerator10convertForERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"*, %"struct.SkSL::ASTNode"* nocapture readonly dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::shared_ptr", align 8
  %4 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 4
  %5 = bitcast %"class.std::__1::shared_ptr"* %4 to i64*
  %6 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 4, i32 1
  %7 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %6, align 8
  %8 = icmp eq %"class.std::__1::__shared_weak_count"* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %7, i64 0, i32 0, i32 1
  %11 = atomicrmw add i64* %10, i64 1 monotonic
  br label %12

12:                                               ; preds = %2, %9
  tail call void @_ZN4SkSL11IRGenerator15pushSymbolTableEv(%"class.SkSL::IRGenerator"* %0) #14
  %13 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 0
  %14 = load %"class.std::__1::vector.52"*, %"class.std::__1::vector.52"** %13, align 8
  %15 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 4, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %14, i64 0, i32 0, i32 0
  %19 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %18, align 8
  %20 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %19, i64 %17, i32 3
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 22
  br i1 %22, label %30, label %23

23:                                               ; preds = %12
  %24 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %19, i64 %17
  %25 = tail call %"class.SkSL::Statement"* @_ZN4SkSL11IRGenerator16convertStatementERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %24)
  %26 = ptrtoint %"class.SkSL::Statement"* %25 to i64
  %27 = icmp eq %"class.SkSL::Statement"* %25, null
  br i1 %27, label %114, label %28

28:                                               ; preds = %23
  %29 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %18, align 8
  br label %30

30:                                               ; preds = %28, %12
  %31 = phi %"struct.SkSL::ASTNode"* [ %29, %28 ], [ %19, %12 ]
  %32 = phi i64 [ %26, %28 ], [ 0, %12 ]
  %33 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %31, i64 %17, i32 6, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %31, i64 %35, i32 3
  %37 = load i32, i32* %36, align 8
  %38 = icmp eq i32 %37, 22
  br i1 %38, label %46, label %39

39:                                               ; preds = %30
  %40 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %31, i64 %35
  %41 = tail call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator17convertExpressionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %40)
  %42 = ptrtoint %"class.SkSL::Expression"* %41 to i64
  %43 = icmp eq %"class.SkSL::Expression"* %41, null
  br i1 %43, label %105, label %44

44:                                               ; preds = %39
  %45 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %18, align 8
  br label %46

46:                                               ; preds = %44, %30
  %47 = phi %"struct.SkSL::ASTNode"* [ %45, %44 ], [ %31, %30 ]
  %48 = phi i64 [ %42, %44 ], [ 0, %30 ]
  %49 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %47, i64 %35, i32 6, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %47, i64 %51, i32 3
  %53 = load i32, i32* %52, align 8
  %54 = icmp eq i32 %53, 22
  br i1 %54, label %62, label %55

55:                                               ; preds = %46
  %56 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %47, i64 %51
  %57 = tail call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator17convertExpressionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %56)
  %58 = ptrtoint %"class.SkSL::Expression"* %57 to i64
  %59 = icmp eq %"class.SkSL::Expression"* %57, null
  br i1 %59, label %96, label %60

60:                                               ; preds = %55
  %61 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %18, align 8
  br label %62

62:                                               ; preds = %60, %46
  %63 = phi %"struct.SkSL::ASTNode"* [ %61, %60 ], [ %47, %46 ]
  %64 = phi i64 [ %58, %60 ], [ 0, %46 ]
  %65 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %63, i64 %51, i32 6, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %63, i64 %67
  %69 = tail call %"class.SkSL::Statement"* @_ZN4SkSL11IRGenerator16convertStatementERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %68)
  %70 = icmp eq %"class.SkSL::Statement"* %69, null
  br i1 %70, label %96, label %71

71:                                               ; preds = %62
  %72 = tail call zeroext i1 @_ZN4SkSL11IRGenerator32detectVarDeclarationWithoutScopeERKNS_9StatementE(%"class.SkSL::IRGenerator"* %0, %"class.SkSL::Statement"* nonnull dereferenceable(16) %69)
  br i1 %72, label %91, label %73

73:                                               ; preds = %71
  %74 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %75 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %74, align 8
  %76 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 2
  %77 = load i32, i32* %76, align 4
  %78 = load i64, i64* %5, align 8
  %79 = bitcast %"class.std::__1::shared_ptr"* %3 to i64*
  store i64 %78, i64* %79, align 8
  %80 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %3, i64 0, i32 1
  %81 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %6, align 8
  store %"class.std::__1::__shared_weak_count"* %81, %"class.std::__1::__shared_weak_count"** %80, align 8
  %82 = icmp eq %"class.std::__1::__shared_weak_count"* %81, null
  br i1 %82, label %86, label %83

83:                                               ; preds = %73
  %84 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %81, i64 0, i32 0, i32 1
  %85 = atomicrmw add i64* %84, i64 1 monotonic
  br label %86

86:                                               ; preds = %73, %83
  %87 = inttoptr i64 %32 to %"class.SkSL::Statement"*
  %88 = inttoptr i64 %48 to %"class.SkSL::Expression"*
  %89 = inttoptr i64 %64 to %"class.SkSL::Expression"*
  %90 = tail call %"class.SkSL::Statement"* @_ZN4SkSL12ForStatement7ConvertERKNS_7ContextEiNSt3__110unique_ptrINS_9StatementENS4_14default_deleteIS6_EEEENS5_INS_10ExpressionENS7_ISA_EEEESC_S9_NS4_10shared_ptrINS_11SymbolTableEEE(%"class.SkSL::Context"* dereferenceable(744) %75, i32 %77, %"class.SkSL::Statement"* %87, %"class.SkSL::Expression"* %88, %"class.SkSL::Expression"* %89, %"class.SkSL::Statement"* nonnull %69, %"class.std::__1::shared_ptr"* nonnull byval(%"class.std::__1::shared_ptr") align 8 %3) #14
  br label %123

91:                                               ; preds = %71
  %92 = bitcast %"class.SkSL::Statement"* %69 to void (%"class.SkSL::Statement"*)***
  %93 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %93, i64 1
  %95 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %94, align 8
  tail call void %95(%"class.SkSL::Statement"* nonnull %69) #14
  br label %96

96:                                               ; preds = %62, %55, %91
  %97 = phi i64 [ %58, %55 ], [ %64, %91 ], [ %64, %62 ]
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %105, label %99

99:                                               ; preds = %96
  %100 = inttoptr i64 %97 to %"class.SkSL::Expression"*
  %101 = inttoptr i64 %97 to void (%"class.SkSL::Expression"*)***
  %102 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %101, align 8
  %103 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %102, i64 1
  %104 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %103, align 8
  tail call void %104(%"class.SkSL::Expression"* nonnull %100) #14
  br label %105

105:                                              ; preds = %39, %99, %96
  %106 = phi i64 [ %42, %39 ], [ %48, %96 ], [ %48, %99 ]
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %114, label %108

108:                                              ; preds = %105
  %109 = inttoptr i64 %106 to %"class.SkSL::Expression"*
  %110 = inttoptr i64 %106 to void (%"class.SkSL::Expression"*)***
  %111 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %110, align 8
  %112 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %111, i64 1
  %113 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %112, align 8
  tail call void %113(%"class.SkSL::Expression"* nonnull %109) #14
  br label %114

114:                                              ; preds = %23, %108, %105
  %115 = phi i64 [ %26, %23 ], [ %32, %105 ], [ %32, %108 ]
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %123, label %117

117:                                              ; preds = %114
  %118 = inttoptr i64 %115 to %"class.SkSL::Statement"*
  %119 = inttoptr i64 %115 to void (%"class.SkSL::Statement"*)***
  %120 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %119, align 8
  %121 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %120, i64 1
  %122 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %121, align 8
  tail call void %122(%"class.SkSL::Statement"* nonnull %118) #14
  br label %123

123:                                              ; preds = %86, %114, %117
  %124 = phi %"class.SkSL::Statement"* [ %90, %86 ], [ null, %114 ], [ null, %117 ]
  %125 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %4, i64 0, i32 0
  %126 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %125, align 8
  %127 = bitcast %"class.SkSL::SymbolTable"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %126, i64 0, i32 0, i32 1
  %130 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %129, align 8
  %131 = ptrtoint %"class.std::__1::__shared_weak_count"* %130 to i64
  %132 = icmp eq %"class.std::__1::__shared_weak_count"* %130, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %130, i64 0, i32 0, i32 1
  %135 = atomicrmw add i64* %134, i64 1 monotonic
  br label %136

136:                                              ; preds = %133, %123
  store i64 %128, i64* %5, align 8
  %137 = bitcast %"class.std::__1::__shared_weak_count"** %6 to i64*
  %138 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %6, align 8
  store i64 %131, i64* %137, align 8
  %139 = icmp eq %"class.std::__1::__shared_weak_count"* %138, null
  br i1 %139, label %150, label %140

140:                                              ; preds = %136
  %141 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %138, i64 0, i32 0, i32 1
  %142 = atomicrmw add i64* %141, i64 -1 acq_rel
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %150

144:                                              ; preds = %140
  %145 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %138, i64 0, i32 0
  %146 = bitcast %"class.std::__1::__shared_weak_count"* %138 to void (%"class.std::__1::__shared_count"*)***
  %147 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %147, i64 2
  %149 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %148, align 8
  tail call void %149(%"class.std::__1::__shared_count"* %145) #14
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %138) #14
  br label %150

150:                                              ; preds = %144, %140, %136
  br i1 %8, label %161, label %151

151:                                              ; preds = %150
  %152 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %7, i64 0, i32 0, i32 1
  %153 = atomicrmw add i64* %152, i64 -1 acq_rel
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %161

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %7, i64 0, i32 0
  %157 = bitcast %"class.std::__1::__shared_weak_count"* %7 to void (%"class.std::__1::__shared_count"*)***
  %158 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %157, align 8
  %159 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %158, i64 2
  %160 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %159, align 8
  tail call void %160(%"class.std::__1::__shared_count"* %156) #14
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %7) #14
  br label %161

161:                                              ; preds = %150, %151, %155
  ret %"class.SkSL::Statement"* %124
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Statement"* @_ZN4SkSL11IRGenerator12convertWhileERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"*, %"struct.SkSL::ASTNode"* nocapture readonly dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 0
  %4 = load %"class.std::__1::vector.52"*, %"class.std::__1::vector.52"** %3, align 8
  %5 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 4, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %4, i64 0, i32 0, i32 0
  %9 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %8, align 8
  %10 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %9, i64 %7, i32 6, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %9, i64 %7
  %13 = tail call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator17convertExpressionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %12)
  %14 = icmp eq %"class.SkSL::Expression"* %13, null
  br i1 %14, label %48, label %15

15:                                               ; preds = %2
  %16 = sext i32 %11 to i64
  %17 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %8, align 8
  %18 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %17, i64 %16
  %19 = tail call %"class.SkSL::Statement"* @_ZN4SkSL11IRGenerator16convertStatementERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %18)
  %20 = icmp eq %"class.SkSL::Statement"* %19, null
  br i1 %20, label %43, label %21

21:                                               ; preds = %15
  %22 = tail call zeroext i1 @_ZN4SkSL11IRGenerator32detectVarDeclarationWithoutScopeERKNS_9StatementE(%"class.SkSL::IRGenerator"* %0, %"class.SkSL::Statement"* nonnull dereferenceable(16) %19)
  br i1 %22, label %38, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %25 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %24, align 8
  %26 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 4, i32 0
  %29 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %28, align 8
  %30 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 4, i32 1
  %31 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %30, align 8
  %32 = icmp eq %"class.std::__1::__shared_weak_count"* %31, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %23
  %34 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %31, i64 0, i32 0, i32 1
  %35 = atomicrmw add i64* %34, i64 1 monotonic
  br label %36

36:                                               ; preds = %23, %33
  %37 = tail call %"class.SkSL::Statement"* @_ZN4SkSL12ForStatement12ConvertWhileERKNS_7ContextEiNSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEENS5_INS_9StatementENS7_ISA_EEEENS4_10shared_ptrINS_11SymbolTableEEE(%"class.SkSL::Context"* dereferenceable(744) %25, i32 %27, %"class.SkSL::Expression"* nonnull %13, %"class.SkSL::Statement"* nonnull %19, %"class.SkSL::SymbolTable"* %29, %"class.std::__1::__shared_weak_count"* %31) #14
  br label %48

38:                                               ; preds = %21
  %39 = bitcast %"class.SkSL::Statement"* %19 to void (%"class.SkSL::Statement"*)***
  %40 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %40, i64 1
  %42 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %41, align 8
  tail call void %42(%"class.SkSL::Statement"* nonnull %19) #14
  br label %43

43:                                               ; preds = %38, %15
  %44 = bitcast %"class.SkSL::Expression"* %13 to void (%"class.SkSL::Expression"*)***
  %45 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %45, i64 1
  %47 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %46, align 8
  tail call void %47(%"class.SkSL::Expression"* nonnull %13) #14
  br label %48

48:                                               ; preds = %2, %36, %43
  %49 = phi %"class.SkSL::Statement"* [ %37, %36 ], [ null, %43 ], [ null, %2 ]
  ret %"class.SkSL::Statement"* %49
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Statement"* @_ZN4SkSL11IRGenerator9convertDoERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"*, %"struct.SkSL::ASTNode"* nocapture readonly dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 0
  %4 = load %"class.std::__1::vector.52"*, %"class.std::__1::vector.52"** %3, align 8
  %5 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 4, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %4, i64 0, i32 0, i32 0
  %9 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %8, align 8
  %10 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %9, i64 %7, i32 6, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %9, i64 %7
  %13 = tail call %"class.SkSL::Statement"* @_ZN4SkSL11IRGenerator16convertStatementERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %12)
  %14 = icmp eq %"class.SkSL::Statement"* %13, null
  br i1 %14, label %37, label %15

15:                                               ; preds = %2
  %16 = sext i32 %11 to i64
  %17 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %8, align 8
  %18 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %17, i64 %16
  %19 = tail call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator17convertExpressionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %18)
  %20 = icmp eq %"class.SkSL::Expression"* %19, null
  br i1 %20, label %32, label %21

21:                                               ; preds = %15
  %22 = tail call zeroext i1 @_ZN4SkSL11IRGenerator32detectVarDeclarationWithoutScopeERKNS_9StatementE(%"class.SkSL::IRGenerator"* %0, %"class.SkSL::Statement"* nonnull dereferenceable(16) %13)
  br i1 %22, label %27, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %25 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %24, align 8
  %26 = tail call %"class.SkSL::Statement"* @_ZN4SkSL11DoStatement7ConvertERKNS_7ContextENSt3__110unique_ptrINS_9StatementENS4_14default_deleteIS6_EEEENS5_INS_10ExpressionENS7_ISA_EEEE(%"class.SkSL::Context"* dereferenceable(744) %25, %"class.SkSL::Statement"* nonnull %13, %"class.SkSL::Expression"* nonnull %19) #14
  br label %37

27:                                               ; preds = %21
  %28 = bitcast %"class.SkSL::Expression"* %19 to void (%"class.SkSL::Expression"*)***
  %29 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %29, i64 1
  %31 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %30, align 8
  tail call void %31(%"class.SkSL::Expression"* nonnull %19) #14
  br label %32

32:                                               ; preds = %27, %15
  %33 = bitcast %"class.SkSL::Statement"* %13 to void (%"class.SkSL::Statement"*)***
  %34 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %34, i64 1
  %36 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %35, align 8
  tail call void %36(%"class.SkSL::Statement"* nonnull %13) #14
  br label %37

37:                                               ; preds = %2, %23, %32
  %38 = phi %"class.SkSL::Statement"* [ %26, %23 ], [ null, %32 ], [ null, %2 ]
  ret %"class.SkSL::Statement"* %38
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Statement"* @_ZN4SkSL11IRGenerator13convertSwitchERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"*, %"struct.SkSL::ASTNode"* nocapture readonly dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkSTArray.215, align 8
  %4 = alloca %class.SkSTArray, align 8
  %5 = alloca %class.SkSTArray, align 8
  %6 = alloca %class.SkSTArray, align 8
  %7 = alloca %class.SkSTArray.215, align 8
  %8 = alloca %class.SkSTArray, align 8
  %9 = alloca %"class.std::__1::shared_ptr", align 8
  %10 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 0
  %11 = load %"class.std::__1::vector.52"*, %"class.std::__1::vector.52"** %10, align 8
  %12 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 4, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %11, i64 0, i32 0, i32 0
  %16 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %15, align 8
  %17 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %16, i64 %14, i32 6, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %16, i64 %14
  %20 = tail call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator17convertExpressionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %19)
  %21 = ptrtoint %"class.SkSL::Expression"* %20 to i64
  %22 = icmp eq %"class.SkSL::Expression"* %20, null
  br i1 %22, label %403, label %23

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 4
  %25 = bitcast %"class.std::__1::shared_ptr"* %24 to i64*
  %26 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 4, i32 1
  %27 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %26, align 8
  %28 = icmp eq %"class.std::__1::__shared_weak_count"* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %27, i64 0, i32 0, i32 1
  %31 = atomicrmw add i64* %30, i64 1 monotonic
  br label %32

32:                                               ; preds = %23, %29
  tail call void @_ZN4SkSL11IRGenerator15pushSymbolTableEv(%"class.SkSL::IRGenerator"* %0) #14
  %33 = getelementptr inbounds %class.SkSTArray.215, %class.SkSTArray.215* %3, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %33) #14
  %34 = getelementptr inbounds %class.SkSTArray.215, %class.SkSTArray.215* %3, i64 0, i32 0, i32 0, i64 16
  %35 = getelementptr inbounds %class.SkSTArray.215, %class.SkSTArray.215* %3, i64 0, i32 0, i32 0, i64 24
  %36 = bitcast i8* %35 to i64*
  %37 = bitcast i8* %34 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 16, i1 false)
  store i8* %33, i8** %37, align 8
  store i64 17179869184, i64* %36, align 8
  %38 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %4, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %38) #14
  %39 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %4, i64 0, i32 0, i32 0, i64 16
  %40 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %4, i64 0, i32 0, i32 0, i64 24
  %41 = bitcast i8* %40 to i64*
  %42 = bitcast i8* %39 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 16, i1 false)
  store i8* %38, i8** %42, align 8
  store i64 17179869184, i64* %41, align 8
  %43 = icmp sgt i32 %18, -1
  %44 = bitcast i8* %34 to %class.SkTArray.217*
  br i1 %43, label %47, label %45

45:                                               ; preds = %32
  %46 = bitcast i8* %39 to %class.SkTArray*
  br label %215

47:                                               ; preds = %32
  %48 = bitcast i8* %34 to %"class.std::__1::unique_ptr.157"**
  %49 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %5, i64 0, i32 0, i32 0, i64 0
  %50 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %5, i64 0, i32 0, i32 0, i64 16
  %51 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %5, i64 0, i32 0, i32 0, i64 24
  %52 = bitcast i8* %51 to i64*
  %53 = bitcast i8* %50 to i8**
  %54 = bitcast i8* %50 to %class.SkTArray*
  %55 = bitcast i8* %50 to %"class.std::__1::unique_ptr.190"**
  %56 = bitcast i8* %39 to %class.SkTArray*
  %57 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %6, i64 0, i32 0, i32 0, i64 16
  %58 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %6, i64 0, i32 0, i32 0, i64 0
  %59 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %6, i64 0, i32 0, i32 0, i64 24
  %60 = bitcast i8* %59 to i64*
  %61 = bitcast i8* %57 to i8**
  %62 = bitcast i8* %57 to %class.SkTArray*
  %63 = bitcast i8* %39 to %"class.std::__1::unique_ptr.190"**
  %64 = bitcast i8* %57 to %"class.std::__1::unique_ptr.190"**
  %65 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %15, align 8
  br label %66

66:                                               ; preds = %47, %210
  %67 = phi %"struct.SkSL::ASTNode"* [ %65, %47 ], [ %211, %210 ]
  %68 = phi i32 [ %18, %47 ], [ %213, %210 ]
  %69 = sext i32 %68 to i64
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.217* %44, i32 1, i32 1) #14
  %70 = load %"class.std::__1::unique_ptr.157"*, %"class.std::__1::unique_ptr.157"** %48, align 8
  %71 = load i64, i64* %36, align 8
  %72 = lshr i64 %71, 1
  %73 = and i64 %72, 2147483647
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157"* %70, i64 %73
  %75 = add i64 %71, 2
  %76 = and i64 %75, 4294967294
  %77 = and i64 %71, -4294967295
  %78 = or i64 %76, %77
  store i64 %78, i64* %36, align 8
  %79 = bitcast %"class.std::__1::unique_ptr.157"* %74 to i64*
  store i64 0, i64* %79, align 8
  %80 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %67, i64 %69, i32 0
  %81 = load %"class.std::__1::vector.52"*, %"class.std::__1::vector.52"** %80, align 8
  %82 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %67, i64 %69, i32 4, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %81, i64 0, i32 0, i32 0
  %86 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %85, align 8
  %87 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %86, i64 %84, i32 3
  %88 = load i32, i32* %87, align 8
  %89 = icmp eq i32 %88, 22
  br i1 %89, label %108, label %90

90:                                               ; preds = %66
  %91 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %86, i64 %84
  %92 = call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator17convertExpressionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %91)
  %93 = ptrtoint %"class.SkSL::Expression"* %92 to i64
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157"* %74, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %94, align 8
  store i64 %93, i64* %79, align 8
  %96 = icmp eq %"class.SkSL::Expression"* %95, null
  br i1 %96, label %103, label %97

97:                                               ; preds = %90
  %98 = bitcast %"class.SkSL::Expression"* %95 to void (%"class.SkSL::Expression"*)***
  %99 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %98, align 8
  %100 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %99, i64 1
  %101 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %100, align 8
  call void %101(%"class.SkSL::Expression"* nonnull %95) #14
  %102 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %94, align 8
  br label %103

103:                                              ; preds = %97, %90
  %104 = phi %"class.SkSL::Expression"* [ %102, %97 ], [ %92, %90 ]
  %105 = icmp eq %"class.SkSL::Expression"* %104, null
  br i1 %105, label %306, label %106

106:                                              ; preds = %103
  %107 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %85, align 8
  br label %108

108:                                              ; preds = %106, %66
  %109 = phi %"struct.SkSL::ASTNode"* [ %107, %106 ], [ %86, %66 ]
  %110 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %109, i64 %84, i32 6, i32 0
  %111 = load i32, i32* %110, align 4
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %49) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 16, i1 false)
  store i8* %49, i8** %53, align 8
  store i64 17179869184, i64* %52, align 8
  %112 = icmp sgt i32 %111, -1
  br i1 %112, label %113, label %138

113:                                              ; preds = %108
  %114 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %85, align 8
  br label %115

115:                                              ; preds = %113, %122
  %116 = phi %"struct.SkSL::ASTNode"* [ %134, %122 ], [ %114, %113 ]
  %117 = phi i32 [ %136, %122 ], [ %111, %113 ]
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %116, i64 %118
  %120 = call %"class.SkSL::Statement"* @_ZN4SkSL11IRGenerator16convertStatementERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %119)
  %121 = icmp eq %"class.SkSL::Statement"* %120, null
  br i1 %121, label %180, label %122

122:                                              ; preds = %115
  %123 = ptrtoint %"class.SkSL::Statement"* %120 to i64
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %54, i32 1, i32 1) #14
  %124 = load %"class.std::__1::unique_ptr.190"*, %"class.std::__1::unique_ptr.190"** %55, align 8
  %125 = load i64, i64* %52, align 8
  %126 = lshr i64 %125, 1
  %127 = and i64 %126, 2147483647
  %128 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %124, i64 %127
  %129 = add i64 %125, 2
  %130 = and i64 %129, 4294967294
  %131 = and i64 %125, -4294967295
  %132 = or i64 %130, %131
  store i64 %132, i64* %52, align 8
  %133 = bitcast %"class.std::__1::unique_ptr.190"* %128 to i64*
  store i64 %123, i64* %133, align 8
  %134 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %85, align 8
  %135 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %134, i64 %118, i32 6, i32 0
  %136 = load i32, i32* %135, align 4
  %137 = icmp sgt i32 %136, -1
  br i1 %137, label %115, label %138

138:                                              ; preds = %122, %108
  %139 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %67, i64 %69, i32 2
  %140 = load i32, i32* %139, align 4
  store i8* %58, i8** %61, align 8
  store i64 17179869184, i64* %60, align 8
  %141 = call dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray* %62, %class.SkTArray* dereferenceable(16) %54) #14
  %142 = call %"class.SkSL::Statement"* @_ZN4SkSL5Block12MakeUnscopedEi9SkSTArrayILi2ENSt3__110unique_ptrINS_9StatementENS2_14default_deleteIS4_EEEELb0EE(i32 %140, %class.SkSTArray* nonnull %6) #14
  %143 = ptrtoint %"class.SkSL::Statement"* %142 to i64
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %56, i32 1, i32 1) #14
  %144 = load %"class.std::__1::unique_ptr.190"*, %"class.std::__1::unique_ptr.190"** %63, align 8
  %145 = load i64, i64* %41, align 8
  %146 = lshr i64 %145, 1
  %147 = and i64 %146, 2147483647
  %148 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %144, i64 %147
  %149 = add i64 %145, 2
  %150 = and i64 %149, 4294967294
  %151 = and i64 %145, -4294967295
  %152 = or i64 %150, %151
  store i64 %152, i64* %41, align 8
  %153 = bitcast %"class.std::__1::unique_ptr.190"* %148 to i64*
  store i64 %143, i64* %153, align 8
  %154 = load i64, i64* %60, align 8
  %155 = and i64 %154, 4294967294
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %157, label %161

157:                                              ; preds = %172, %138
  %158 = phi i64 [ %154, %138 ], [ %174, %172 ]
  %159 = and i64 %158, 1
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %180, label %178

161:                                              ; preds = %138, %172
  %162 = phi i64 [ %173, %172 ], [ 0, %138 ]
  %163 = load %"class.std::__1::unique_ptr.190"*, %"class.std::__1::unique_ptr.190"** %64, align 8
  %164 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %163, i64 %162, i32 0, i32 0, i32 0
  %165 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %164, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %164, align 8
  %166 = icmp eq %"class.SkSL::Statement"* %165, null
  br i1 %166, label %172, label %167

167:                                              ; preds = %161
  %168 = bitcast %"class.SkSL::Statement"* %165 to void (%"class.SkSL::Statement"*)***
  %169 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %168, align 8
  %170 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %169, i64 1
  %171 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %170, align 8
  call void %171(%"class.SkSL::Statement"* nonnull %165) #14
  br label %172

172:                                              ; preds = %167, %161
  %173 = add nuw nsw i64 %162, 1
  %174 = load i64, i64* %60, align 8
  %175 = lshr i64 %174, 1
  %176 = and i64 %175, 2147483647
  %177 = icmp ult i64 %173, %176
  br i1 %177, label %161, label %157

178:                                              ; preds = %157
  %179 = load i8*, i8** %61, align 8
  call void @_Z7sk_freePv(i8* %179) #14
  br label %180

180:                                              ; preds = %115, %178, %157
  %181 = phi i32 [ 0, %157 ], [ 0, %178 ], [ 1, %115 ]
  %182 = load i64, i64* %52, align 8
  %183 = and i64 %182, 4294967294
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %185, label %189

185:                                              ; preds = %200, %180
  %186 = phi i64 [ %182, %180 ], [ %202, %200 ]
  %187 = and i64 %186, 1
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %208, label %206

189:                                              ; preds = %180, %200
  %190 = phi i64 [ %201, %200 ], [ 0, %180 ]
  %191 = load %"class.std::__1::unique_ptr.190"*, %"class.std::__1::unique_ptr.190"** %55, align 8
  %192 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %191, i64 %190, i32 0, i32 0, i32 0
  %193 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %192, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %192, align 8
  %194 = icmp eq %"class.SkSL::Statement"* %193, null
  br i1 %194, label %200, label %195

195:                                              ; preds = %189
  %196 = bitcast %"class.SkSL::Statement"* %193 to void (%"class.SkSL::Statement"*)***
  %197 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %196, align 8
  %198 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %197, i64 1
  %199 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %198, align 8
  call void %199(%"class.SkSL::Statement"* nonnull %193) #14
  br label %200

200:                                              ; preds = %195, %189
  %201 = add nuw nsw i64 %190, 1
  %202 = load i64, i64* %52, align 8
  %203 = lshr i64 %202, 1
  %204 = and i64 %203, 2147483647
  %205 = icmp ult i64 %201, %204
  br i1 %205, label %189, label %185

206:                                              ; preds = %185
  %207 = load i8*, i8** %53, align 8
  call void @_Z7sk_freePv(i8* %207) #14
  br label %208

208:                                              ; preds = %206, %185
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %49) #14
  %209 = icmp eq i32 %181, 0
  br i1 %209, label %210, label %306

210:                                              ; preds = %208
  %211 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %15, align 8
  %212 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %211, i64 %69, i32 6, i32 0
  %213 = load i32, i32* %212, align 4
  %214 = icmp sgt i32 %213, -1
  br i1 %214, label %66, label %215

215:                                              ; preds = %210, %45
  %216 = phi %class.SkTArray* [ %46, %45 ], [ %56, %210 ]
  %217 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %218 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %217, align 8
  %219 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 2
  %220 = load i32, i32* %219, align 4
  %221 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 1, i32 0, i64 0
  %222 = load i8, i8* %221, align 8, !range !2
  %223 = icmp ne i8 %222, 0
  %224 = getelementptr inbounds %class.SkSTArray.215, %class.SkSTArray.215* %7, i64 0, i32 0, i32 0, i64 16
  %225 = getelementptr inbounds %class.SkSTArray.215, %class.SkSTArray.215* %7, i64 0, i32 0, i32 0, i64 0
  %226 = getelementptr inbounds %class.SkSTArray.215, %class.SkSTArray.215* %7, i64 0, i32 0, i32 0, i64 24
  %227 = bitcast i8* %226 to i64*
  %228 = bitcast i8* %224 to i8**
  store i8* %225, i8** %228, align 8
  store i64 17179869184, i64* %227, align 8
  %229 = bitcast i8* %224 to %class.SkTArray.217*
  %230 = call dereferenceable(16) %class.SkTArray.217* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray.217* %229, %class.SkTArray.217* dereferenceable(16) %44) #14
  %231 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %8, i64 0, i32 0, i32 0, i64 16
  %232 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %8, i64 0, i32 0, i32 0, i64 0
  %233 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %8, i64 0, i32 0, i32 0, i64 24
  %234 = bitcast i8* %233 to i64*
  %235 = bitcast i8* %231 to i8**
  store i8* %232, i8** %235, align 8
  store i64 17179869184, i64* %234, align 8
  %236 = bitcast i8* %231 to %class.SkTArray*
  %237 = call dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray* %236, %class.SkTArray* dereferenceable(16) %216) #14
  %238 = load i64, i64* %25, align 8
  %239 = bitcast %"class.std::__1::shared_ptr"* %9 to i64*
  store i64 %238, i64* %239, align 8
  %240 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %9, i64 0, i32 1
  %241 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %26, align 8
  store %"class.std::__1::__shared_weak_count"* %241, %"class.std::__1::__shared_weak_count"** %240, align 8
  %242 = icmp eq %"class.std::__1::__shared_weak_count"* %241, null
  br i1 %242, label %246, label %243

243:                                              ; preds = %215
  %244 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %241, i64 0, i32 0, i32 1
  %245 = atomicrmw add i64* %244, i64 1 monotonic
  br label %246

246:                                              ; preds = %215, %243
  %247 = call %"class.SkSL::Statement"* @_ZN4SkSL15SwitchStatement7ConvertERKNS_7ContextEibNSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEE9SkSTArrayILi2ES9_Lb0EESA_ILi2ENS5_INS_9StatementENS7_ISC_EEEELb0EENS4_10shared_ptrINS_11SymbolTableEEE(%"class.SkSL::Context"* dereferenceable(744) %218, i32 %220, i1 zeroext %223, %"class.SkSL::Expression"* nonnull %20, %class.SkSTArray.215* nonnull %7, %class.SkSTArray* nonnull %8, %"class.std::__1::shared_ptr"* nonnull byval(%"class.std::__1::shared_ptr") align 8 %9) #14
  %248 = ptrtoint %"class.SkSL::Statement"* %247 to i64
  %249 = load i64, i64* %234, align 8
  %250 = and i64 %249, 4294967294
  %251 = icmp eq i64 %250, 0
  br i1 %251, label %254, label %252

252:                                              ; preds = %246
  %253 = bitcast i8* %231 to %"class.std::__1::unique_ptr.190"**
  br label %258

254:                                              ; preds = %269, %246
  %255 = phi i64 [ %249, %246 ], [ %271, %269 ]
  %256 = and i64 %255, 1
  %257 = icmp eq i64 %256, 0
  br i1 %257, label %277, label %275

258:                                              ; preds = %269, %252
  %259 = phi i64 [ 0, %252 ], [ %270, %269 ]
  %260 = load %"class.std::__1::unique_ptr.190"*, %"class.std::__1::unique_ptr.190"** %253, align 8
  %261 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %260, i64 %259, i32 0, i32 0, i32 0
  %262 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %261, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %261, align 8
  %263 = icmp eq %"class.SkSL::Statement"* %262, null
  br i1 %263, label %269, label %264

264:                                              ; preds = %258
  %265 = bitcast %"class.SkSL::Statement"* %262 to void (%"class.SkSL::Statement"*)***
  %266 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %265, align 8
  %267 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %266, i64 1
  %268 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %267, align 8
  call void %268(%"class.SkSL::Statement"* nonnull %262) #14
  br label %269

269:                                              ; preds = %264, %258
  %270 = add nuw nsw i64 %259, 1
  %271 = load i64, i64* %234, align 8
  %272 = lshr i64 %271, 1
  %273 = and i64 %272, 2147483647
  %274 = icmp ult i64 %270, %273
  br i1 %274, label %258, label %254

275:                                              ; preds = %254
  %276 = load i8*, i8** %235, align 8
  call void @_Z7sk_freePv(i8* %276) #14
  br label %277

277:                                              ; preds = %254, %275
  %278 = load i64, i64* %227, align 8
  %279 = and i64 %278, 4294967294
  %280 = icmp eq i64 %279, 0
  br i1 %280, label %283, label %281

281:                                              ; preds = %277
  %282 = bitcast i8* %224 to %"class.std::__1::unique_ptr.157"**
  br label %287

283:                                              ; preds = %298, %277
  %284 = phi i64 [ %278, %277 ], [ %300, %298 ]
  %285 = and i64 %284, 1
  %286 = icmp eq i64 %285, 0
  br i1 %286, label %306, label %304

287:                                              ; preds = %298, %281
  %288 = phi i64 [ 0, %281 ], [ %299, %298 ]
  %289 = load %"class.std::__1::unique_ptr.157"*, %"class.std::__1::unique_ptr.157"** %282, align 8
  %290 = getelementptr inbounds %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157"* %289, i64 %288, i32 0, i32 0, i32 0
  %291 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %290, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %290, align 8
  %292 = icmp eq %"class.SkSL::Expression"* %291, null
  br i1 %292, label %298, label %293

293:                                              ; preds = %287
  %294 = bitcast %"class.SkSL::Expression"* %291 to void (%"class.SkSL::Expression"*)***
  %295 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %294, align 8
  %296 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %295, i64 1
  %297 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %296, align 8
  call void %297(%"class.SkSL::Expression"* nonnull %291) #14
  br label %298

298:                                              ; preds = %293, %287
  %299 = add nuw nsw i64 %288, 1
  %300 = load i64, i64* %227, align 8
  %301 = lshr i64 %300, 1
  %302 = and i64 %301, 2147483647
  %303 = icmp ult i64 %299, %302
  br i1 %303, label %287, label %283

304:                                              ; preds = %283
  %305 = load i8*, i8** %228, align 8
  call void @_Z7sk_freePv(i8* %305) #14
  br label %306

306:                                              ; preds = %103, %208, %304, %283
  %307 = phi i64 [ 0, %283 ], [ 0, %304 ], [ %21, %208 ], [ %21, %103 ]
  %308 = phi i64 [ %248, %283 ], [ %248, %304 ], [ 0, %208 ], [ 0, %103 ]
  %309 = load i64, i64* %41, align 8
  %310 = and i64 %309, 4294967294
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %314, label %312

312:                                              ; preds = %306
  %313 = bitcast i8* %39 to %"class.std::__1::unique_ptr.190"**
  br label %318

314:                                              ; preds = %329, %306
  %315 = phi i64 [ %309, %306 ], [ %331, %329 ]
  %316 = and i64 %315, 1
  %317 = icmp eq i64 %316, 0
  br i1 %317, label %337, label %335

318:                                              ; preds = %329, %312
  %319 = phi i64 [ 0, %312 ], [ %330, %329 ]
  %320 = load %"class.std::__1::unique_ptr.190"*, %"class.std::__1::unique_ptr.190"** %313, align 8
  %321 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %320, i64 %319, i32 0, i32 0, i32 0
  %322 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %321, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %321, align 8
  %323 = icmp eq %"class.SkSL::Statement"* %322, null
  br i1 %323, label %329, label %324

324:                                              ; preds = %318
  %325 = bitcast %"class.SkSL::Statement"* %322 to void (%"class.SkSL::Statement"*)***
  %326 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %325, align 8
  %327 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %326, i64 1
  %328 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %327, align 8
  call void %328(%"class.SkSL::Statement"* nonnull %322) #14
  br label %329

329:                                              ; preds = %324, %318
  %330 = add nuw nsw i64 %319, 1
  %331 = load i64, i64* %41, align 8
  %332 = lshr i64 %331, 1
  %333 = and i64 %332, 2147483647
  %334 = icmp ult i64 %330, %333
  br i1 %334, label %318, label %314

335:                                              ; preds = %314
  %336 = load i8*, i8** %42, align 8
  call void @_Z7sk_freePv(i8* %336) #14
  br label %337

337:                                              ; preds = %314, %335
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %38) #14
  %338 = load i64, i64* %36, align 8
  %339 = and i64 %338, 4294967294
  %340 = icmp eq i64 %339, 0
  br i1 %340, label %343, label %341

341:                                              ; preds = %337
  %342 = bitcast i8* %34 to %"class.std::__1::unique_ptr.157"**
  br label %347

343:                                              ; preds = %358, %337
  %344 = phi i64 [ %338, %337 ], [ %360, %358 ]
  %345 = and i64 %344, 1
  %346 = icmp eq i64 %345, 0
  br i1 %346, label %366, label %364

347:                                              ; preds = %358, %341
  %348 = phi i64 [ 0, %341 ], [ %359, %358 ]
  %349 = load %"class.std::__1::unique_ptr.157"*, %"class.std::__1::unique_ptr.157"** %342, align 8
  %350 = getelementptr inbounds %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157"* %349, i64 %348, i32 0, i32 0, i32 0
  %351 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %350, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %350, align 8
  %352 = icmp eq %"class.SkSL::Expression"* %351, null
  br i1 %352, label %358, label %353

353:                                              ; preds = %347
  %354 = bitcast %"class.SkSL::Expression"* %351 to void (%"class.SkSL::Expression"*)***
  %355 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %354, align 8
  %356 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %355, i64 1
  %357 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %356, align 8
  call void %357(%"class.SkSL::Expression"* nonnull %351) #14
  br label %358

358:                                              ; preds = %353, %347
  %359 = add nuw nsw i64 %348, 1
  %360 = load i64, i64* %36, align 8
  %361 = lshr i64 %360, 1
  %362 = and i64 %361, 2147483647
  %363 = icmp ult i64 %359, %362
  br i1 %363, label %347, label %343

364:                                              ; preds = %343
  %365 = load i8*, i8** %37, align 8
  call void @_Z7sk_freePv(i8* %365) #14
  br label %366

366:                                              ; preds = %343, %364
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #14
  %367 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %24, i64 0, i32 0
  %368 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %367, align 8
  %369 = bitcast %"class.SkSL::SymbolTable"* %368 to i64*
  %370 = load i64, i64* %369, align 8
  %371 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %368, i64 0, i32 0, i32 1
  %372 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %371, align 8
  %373 = ptrtoint %"class.std::__1::__shared_weak_count"* %372 to i64
  %374 = icmp eq %"class.std::__1::__shared_weak_count"* %372, null
  br i1 %374, label %378, label %375

375:                                              ; preds = %366
  %376 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %372, i64 0, i32 0, i32 1
  %377 = atomicrmw add i64* %376, i64 1 monotonic
  br label %378

378:                                              ; preds = %375, %366
  store i64 %370, i64* %25, align 8
  %379 = bitcast %"class.std::__1::__shared_weak_count"** %26 to i64*
  %380 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %26, align 8
  store i64 %373, i64* %379, align 8
  %381 = icmp eq %"class.std::__1::__shared_weak_count"* %380, null
  br i1 %381, label %392, label %382

382:                                              ; preds = %378
  %383 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %380, i64 0, i32 0, i32 1
  %384 = atomicrmw add i64* %383, i64 -1 acq_rel
  %385 = icmp eq i64 %384, 0
  br i1 %385, label %386, label %392

386:                                              ; preds = %382
  %387 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %380, i64 0, i32 0
  %388 = bitcast %"class.std::__1::__shared_weak_count"* %380 to void (%"class.std::__1::__shared_count"*)***
  %389 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %388, align 8
  %390 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %389, i64 2
  %391 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %390, align 8
  call void %391(%"class.std::__1::__shared_count"* %387) #14
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %380) #14
  br label %392

392:                                              ; preds = %386, %382, %378
  br i1 %28, label %403, label %393

393:                                              ; preds = %392
  %394 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %27, i64 0, i32 0, i32 1
  %395 = atomicrmw add i64* %394, i64 -1 acq_rel
  %396 = icmp eq i64 %395, 0
  br i1 %396, label %397, label %403

397:                                              ; preds = %393
  %398 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %27, i64 0, i32 0
  %399 = bitcast %"class.std::__1::__shared_weak_count"* %27 to void (%"class.std::__1::__shared_count"*)***
  %400 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %399, align 8
  %401 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %400, i64 2
  %402 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %401, align 8
  call void %402(%"class.std::__1::__shared_count"* %398) #14
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %27) #14
  br label %403

403:                                              ; preds = %2, %397, %393, %392
  %404 = phi i64 [ %21, %2 ], [ %307, %392 ], [ %307, %393 ], [ %307, %397 ]
  %405 = phi i64 [ 0, %2 ], [ %308, %392 ], [ %308, %393 ], [ %308, %397 ]
  %406 = icmp eq i64 %404, 0
  br i1 %406, label %413, label %407

407:                                              ; preds = %403
  %408 = inttoptr i64 %404 to %"class.SkSL::Expression"*
  %409 = inttoptr i64 %404 to void (%"class.SkSL::Expression"*)***
  %410 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %409, align 8
  %411 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %410, i64 1
  %412 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %411, align 8
  call void %412(%"class.SkSL::Expression"* nonnull %408) #14
  br label %413

413:                                              ; preds = %403, %407
  %414 = inttoptr i64 %405 to %"class.SkSL::Statement"*
  ret %"class.SkSL::Statement"* %414
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Statement"* @_ZN4SkSL11IRGenerator13convertReturnERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"*, %"struct.SkSL::ASTNode"* nocapture readonly dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 4, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, -1
  br i1 %5, label %6, label %17

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 0
  %8 = load %"class.std::__1::vector.52"*, %"class.std::__1::vector.52"** %7, align 8
  %9 = sext i32 %4 to i64
  %10 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %8, i64 0, i32 0, i32 0
  %11 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %10, align 8
  %12 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %11, i64 %9
  %13 = tail call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator17convertExpressionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %12)
  %14 = icmp eq %"class.SkSL::Expression"* %13, null
  br i1 %14, label %30, label %15

15:                                               ; preds = %6
  %16 = ptrtoint %"class.SkSL::Expression"* %13 to i64
  br label %17

17:                                               ; preds = %2, %15
  %18 = phi i64 [ %16, %15 ], [ 0, %2 ]
  %19 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 24) #14
  %22 = getelementptr inbounds i8, i8* %21, i64 8
  %23 = bitcast i8* %22 to i32*
  store i32 %20, i32* %23, align 8
  %24 = getelementptr inbounds i8, i8* %21, i64 12
  %25 = bitcast i8* %24 to i32*
  store i32 26, i32* %25, align 4
  %26 = bitcast i8* %21 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL15ReturnStatementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %27 = getelementptr inbounds i8, i8* %21, i64 16
  %28 = bitcast i8* %27 to i64*
  store i64 %18, i64* %28, align 8
  %29 = bitcast i8* %21 to %"class.SkSL::Statement"*
  br label %30

30:                                               ; preds = %17, %6
  %31 = phi %"class.SkSL::Statement"* [ null, %6 ], [ %29, %17 ]
  ret %"class.SkSL::Statement"* %31
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Statement"* @_ZN4SkSL11IRGenerator12convertBreakERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* nocapture readnone, %"struct.SkSL::ASTNode"* nocapture readonly dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 16) #14
  %6 = getelementptr inbounds i8, i8* %5, i64 8
  %7 = bitcast i8* %6 to i32*
  store i32 %4, i32* %7, align 8
  %8 = getelementptr inbounds i8, i8* %5, i64 12
  %9 = bitcast i8* %8 to i32*
  store i32 17, i32* %9, align 4
  %10 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL14BreakStatementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = bitcast i8* %5 to %"class.SkSL::Statement"*
  ret %"class.SkSL::Statement"* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Statement"* @_ZN4SkSL11IRGenerator15convertContinueERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* nocapture readnone, %"struct.SkSL::ASTNode"* nocapture readonly dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 16) #14
  %6 = getelementptr inbounds i8, i8* %5, i64 8
  %7 = bitcast i8* %6 to i32*
  store i32 %4, i32* %7, align 8
  %8 = getelementptr inbounds i8, i8* %5, i64 12
  %9 = bitcast i8* %8 to i32*
  store i32 18, i32* %9, align 4
  %10 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL17ContinueStatementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = bitcast i8* %5 to %"class.SkSL::Statement"*
  ret %"class.SkSL::Statement"* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Statement"* @_ZN4SkSL11IRGenerator14convertDiscardERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* nocapture readonly, %"struct.SkSL::ASTNode"* nocapture readonly dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %4 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %3, align 8
  %5 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %4, i64 0, i32 4
  %6 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %5, align 8
  %7 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %6, i64 0, i32 0
  %8 = load i8, i8* %7, align 8
  switch i8 %8, label %9 [
    i8 0, label %14
    i8 3, label %14
  ]

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %4, i64 0, i32 1
  %11 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %10, align 8
  %12 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  tail call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %11, i32 %13, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.31, i64 0, i64 0))
  br label %24

14:                                               ; preds = %2, %2
  %15 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 16) #14
  %18 = getelementptr inbounds i8, i8* %17, i64 8
  %19 = bitcast i8* %18 to i32*
  store i32 %16, i32* %19, align 8
  %20 = getelementptr inbounds i8, i8* %17, i64 12
  %21 = bitcast i8* %20 to i32*
  store i32 19, i32* %21, align 4
  %22 = bitcast i8* %17 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL16DiscardStatementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = bitcast i8* %17 to %"class.SkSL::Statement"*
  br label %24

24:                                               ; preds = %14, %9
  %25 = phi %"class.SkSL::Statement"* [ %23, %14 ], [ null, %9 ]
  ret %"class.SkSL::Statement"* %25
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Statement"* @_ZN4SkSL11IRGenerator26convertExpressionStatementERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"*, %"struct.SkSL::ASTNode"* nocapture readonly dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator17convertExpressionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %1)
  %4 = icmp eq %"class.SkSL::Expression"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %7 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %6, align 8
  %8 = tail call %"class.SkSL::Statement"* @_ZN4SkSL19ExpressionStatement4MakeERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEE(%"class.SkSL::Context"* dereferenceable(744) %7, %"class.SkSL::Expression"* nonnull %3) #14
  br label %9

9:                                                ; preds = %2, %5
  %10 = phi %"class.SkSL::Statement"* [ %8, %5 ], [ null, %2 ]
  ret %"class.SkSL::Statement"* %10
}

declare zeroext i1 @_ZNK4SkSL14StringFragmenteqEPKc(%"struct.SkSL::StringFragment"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Statement"* @_ZN4SkSL11IRGenerator26getNormalizeSkPositionCodeEv(%"class.SkSL::IRGenerator"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.SkSL::String", align 8
  %3 = alloca %"class.SkSL::dsl::DSLStatement", align 8
  %4 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %5 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %6 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %7 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %8 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %9 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %10 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %11 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %12 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %13 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %14 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %15 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %16 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %17 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %18 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %19 = alloca i32, align 4
  %20 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %21 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %22 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %23 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 5
  %24 = load %"class.SkSL::IRIntrinsicMap"*, %"class.SkSL::IRIntrinsicMap"** %23, align 8
  %25 = bitcast %"class.SkSL::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #14
  %26 = bitcast %"class.SkSL::String"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  store i8 12, i8* %27, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %25, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @_ZN4SkSL8Compiler14PERVERTEX_NAMEE, i64 0, i64 0), i64 12, i1 false) #14
  %28 = getelementptr inbounds i8, i8* %25, i64 12
  store i8 0, i8* %28, align 4
  br label %29

29:                                               ; preds = %34, %1
  %30 = phi %"class.SkSL::IRIntrinsicMap"* [ %24, %1 ], [ %36, %34 ]
  %31 = getelementptr inbounds %"class.SkSL::IRIntrinsicMap", %"class.SkSL::IRIntrinsicMap"* %30, i64 0, i32 0, i32 0
  %32 = call %"struct.std::__1::__hash_node_base.66"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_14IRIntrinsicMap9IntrinsicEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_(%"class.std::__1::__hash_table.62"* %31, %"class.SkSL::String"* nonnull dereferenceable(24) %2) #14
  %33 = icmp eq %"struct.std::__1::__hash_node_base.66"* %32, null
  br i1 %33, label %34, label %38

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.SkSL::IRIntrinsicMap", %"class.SkSL::IRIntrinsicMap"* %30, i64 0, i32 1
  %36 = load %"class.SkSL::IRIntrinsicMap"*, %"class.SkSL::IRIntrinsicMap"** %35, align 8
  %37 = icmp eq %"class.SkSL::IRIntrinsicMap"* %36, null
  br i1 %37, label %43, label %29

38:                                               ; preds = %29
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.66", %"struct.std::__1::__hash_node_base.66"* %32, i64 5
  %40 = bitcast %"struct.std::__1::__hash_node_base.66"* %39 to %"class.SkSL::ProgramElement"**
  %41 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %40, align 8
  %42 = bitcast %"class.SkSL::ProgramElement"* %41 to %"class.SkSL::InterfaceBlock"*
  br label %43

43:                                               ; preds = %34, %38
  %44 = phi %"class.SkSL::InterfaceBlock"* [ %42, %38 ], [ null, %34 ]
  %45 = phi %"class.SkSL::ProgramElement"* [ %41, %38 ], [ null, %34 ]
  %46 = load i8, i8* %27, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  call void @_ZdlPv(i8* %50) #15
  br label %51

51:                                               ; preds = %43, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #14
  %52 = icmp eq %"class.SkSL::ProgramElement"* %45, null
  br i1 %52, label %56, label %53

53:                                               ; preds = %51
  %54 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %44, i64 0, i32 1
  %55 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %54, align 8
  br label %56

56:                                               ; preds = %51, %53
  %57 = phi %"class.SkSL::Variable"* [ null, %51 ], [ %55, %53 ]
  %58 = bitcast %"class.SkSL::dsl::DSLStatement"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #14
  %59 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #14
  %60 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %61 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %60, align 8, !noalias !3
  %62 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 40) #14, !noalias !3
  %63 = bitcast i8* %62 to %"class.SkSL::VariableReference"*
  call void @_ZN4SkSL17VariableReferenceC1EiPKNS_8VariableENS_15VariableRefKindE(%"class.SkSL::VariableReference"* %63, i32 -1, %"class.SkSL::Variable"* %57, i8 signext 0) #14, !noalias !3
  %64 = bitcast i8* %62 to %"class.SkSL::Expression"*
  %65 = call %"class.SkSL::Expression"* @_ZN4SkSL11FieldAccess4MakeERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEEiNS_20FieldAccessOwnerKindE(%"class.SkSL::Context"* dereferenceable(744) %61, %"class.SkSL::Expression"* %64, i32 0, i8 signext 1) #14, !noalias !3
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nonnull %10, %"class.SkSL::Expression"* %65) #14
  call void @_ZN4SkSL3dsl7SwizzleENS0_13DSLExpressionENS_16SwizzleComponent4TypeES3_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nonnull sret %9, %"class.SkSL::dsl::DSLExpression"* nonnull %10, i8 signext 0, i8 signext 1, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.35, i64 0, i64 0), i32 734) #14
  %66 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 13
  %67 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %66, align 8, !noalias !6
  %68 = icmp eq %"class.SkSL::Variable"* %67, null
  br i1 %68, label %77, label %69

69:                                               ; preds = %56
  %70 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 14
  %71 = load i32, i32* %70, align 8
  %72 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %60, align 8
  %73 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 40) #14
  %74 = bitcast i8* %73 to %"class.SkSL::VariableReference"*
  call void @_ZN4SkSL17VariableReferenceC1EiPKNS_8VariableENS_15VariableRefKindE(%"class.SkSL::VariableReference"* %74, i32 -1, %"class.SkSL::Variable"* nonnull %67, i8 signext 0) #14
  %75 = bitcast i8* %73 to %"class.SkSL::Expression"*
  %76 = call %"class.SkSL::Expression"* @_ZN4SkSL11FieldAccess4MakeERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEEiNS_20FieldAccessOwnerKindE(%"class.SkSL::Context"* dereferenceable(744) %72, %"class.SkSL::Expression"* %75, i32 %71, i8 signext 1) #14
  br label %83

77:                                               ; preds = %56
  %78 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 12
  %79 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %78, align 8
  %80 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 40) #14
  %81 = bitcast i8* %80 to %"class.SkSL::VariableReference"*
  call void @_ZN4SkSL17VariableReferenceC1EiPKNS_8VariableENS_15VariableRefKindE(%"class.SkSL::VariableReference"* %81, i32 -1, %"class.SkSL::Variable"* %79, i8 signext 0) #14
  %82 = bitcast i8* %80 to %"class.SkSL::Expression"*
  br label %83

83:                                               ; preds = %69, %77
  %84 = phi %"class.SkSL::Expression"* [ %76, %69 ], [ %82, %77 ]
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nonnull %12, %"class.SkSL::Expression"* %84) #14
  call void @_ZN4SkSL3dsl7SwizzleENS0_13DSLExpressionENS_16SwizzleComponent4TypeES3_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nonnull sret %11, %"class.SkSL::dsl::DSLExpression"* nonnull %12, i8 signext 0, i8 signext 2, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.35, i64 0, i64 0), i32 734) #14
  call void @_ZN4SkSL3dslmlENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %8, %"class.SkSL::dsl::DSLExpression"* nonnull %9, %"class.SkSL::dsl::DSLExpression"* nonnull %11) #14
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nonnull %7, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %8, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.35, i64 0, i64 0), i32 734) #14
  %85 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %60, align 8, !noalias !9
  %86 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 40) #14, !noalias !9
  %87 = bitcast i8* %86 to %"class.SkSL::VariableReference"*
  call void @_ZN4SkSL17VariableReferenceC1EiPKNS_8VariableENS_15VariableRefKindE(%"class.SkSL::VariableReference"* %87, i32 -1, %"class.SkSL::Variable"* %57, i8 signext 0) #14, !noalias !9
  %88 = bitcast i8* %86 to %"class.SkSL::Expression"*
  %89 = call %"class.SkSL::Expression"* @_ZN4SkSL11FieldAccess4MakeERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEEiNS_20FieldAccessOwnerKindE(%"class.SkSL::Context"* dereferenceable(744) %85, %"class.SkSL::Expression"* %88, i32 0, i8 signext 1) #14, !noalias !9
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nonnull %16, %"class.SkSL::Expression"* %89) #14
  call void @_ZN4SkSL3dsl7SwizzleENS0_13DSLExpressionENS_16SwizzleComponent4TypeES3_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nonnull sret %15, %"class.SkSL::dsl::DSLExpression"* nonnull %16, i8 signext 3, i8 signext 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.35, i64 0, i64 0), i32 735) #14
  %90 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %66, align 8, !noalias !12
  %91 = icmp eq %"class.SkSL::Variable"* %90, null
  br i1 %91, label %100, label %92

92:                                               ; preds = %83
  %93 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 14
  %94 = load i32, i32* %93, align 8
  %95 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %60, align 8
  %96 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 40) #14
  %97 = bitcast i8* %96 to %"class.SkSL::VariableReference"*
  call void @_ZN4SkSL17VariableReferenceC1EiPKNS_8VariableENS_15VariableRefKindE(%"class.SkSL::VariableReference"* %97, i32 -1, %"class.SkSL::Variable"* nonnull %90, i8 signext 0) #14
  %98 = bitcast i8* %96 to %"class.SkSL::Expression"*
  %99 = call %"class.SkSL::Expression"* @_ZN4SkSL11FieldAccess4MakeERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEEiNS_20FieldAccessOwnerKindE(%"class.SkSL::Context"* dereferenceable(744) %95, %"class.SkSL::Expression"* %98, i32 %94, i8 signext 1) #14
  br label %106

100:                                              ; preds = %83
  %101 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 12
  %102 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %101, align 8
  %103 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 40) #14
  %104 = bitcast i8* %103 to %"class.SkSL::VariableReference"*
  call void @_ZN4SkSL17VariableReferenceC1EiPKNS_8VariableENS_15VariableRefKindE(%"class.SkSL::VariableReference"* %104, i32 -1, %"class.SkSL::Variable"* %102, i8 signext 0) #14
  %105 = bitcast i8* %103 to %"class.SkSL::Expression"*
  br label %106

106:                                              ; preds = %92, %100
  %107 = phi %"class.SkSL::Expression"* [ %99, %92 ], [ %105, %100 ]
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nonnull %18, %"class.SkSL::Expression"* %107) #14
  call void @_ZN4SkSL3dsl7SwizzleENS0_13DSLExpressionENS_16SwizzleComponent4TypeES3_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nonnull sret %17, %"class.SkSL::dsl::DSLExpression"* nonnull %18, i8 signext 1, i8 signext 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.35, i64 0, i64 0), i32 735) #14
  call void @_ZN4SkSL3dslmlENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %14, %"class.SkSL::dsl::DSLExpression"* nonnull %15, %"class.SkSL::dsl::DSLExpression"* nonnull %17) #14
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nonnull %13, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %14, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.35, i64 0, i64 0), i32 735) #14
  call void @_ZN4SkSL3dslplENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %6, %"class.SkSL::dsl::DSLExpression"* nonnull %7, %"class.SkSL::dsl::DSLExpression"* nonnull %13) #14
  %108 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %108) #14
  store i32 0, i32* %19, align 4
  %109 = bitcast %"class.SkSL::dsl::DSLExpression"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %109) #14
  %110 = bitcast %"class.SkSL::dsl::DSLExpression"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #14
  %111 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %60, align 8, !noalias !15
  %112 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 40) #14, !noalias !15
  %113 = bitcast i8* %112 to %"class.SkSL::VariableReference"*
  call void @_ZN4SkSL17VariableReferenceC1EiPKNS_8VariableENS_15VariableRefKindE(%"class.SkSL::VariableReference"* %113, i32 -1, %"class.SkSL::Variable"* %57, i8 signext 0) #14, !noalias !15
  %114 = bitcast i8* %112 to %"class.SkSL::Expression"*
  %115 = call %"class.SkSL::Expression"* @_ZN4SkSL11FieldAccess4MakeERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEEiNS_20FieldAccessOwnerKindE(%"class.SkSL::Context"* dereferenceable(744) %111, %"class.SkSL::Expression"* %114, i32 0, i8 signext 1) #14, !noalias !15
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nonnull %21, %"class.SkSL::Expression"* %115) #14
  call void @_ZN4SkSL3dsl13DSLExpression1wENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nonnull sret %20, %"class.SkSL::dsl::DSLExpression"* nonnull %21, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.35, i64 0, i64 0), i32 737) #14
  call void @_ZN4SkSL3dsl7DSLType9ConstructIJNS0_21DSLPossibleExpressionEiNS0_13DSLExpressionEEEES4_S1_DpOT_(%"class.SkSL::dsl::DSLExpression"* nonnull sret %5, %"class.SkSL::Type"* null, i8 20, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull dereferenceable(8) %6, i32* nonnull dereferenceable(4) %19, %"class.SkSL::dsl::DSLExpression"* nonnull dereferenceable(8) %20) #14
  %116 = bitcast %"class.SkSL::dsl::DSLExpression"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #14
  %117 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %60, align 8, !noalias !18
  %118 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 40) #14, !noalias !18
  %119 = bitcast i8* %118 to %"class.SkSL::VariableReference"*
  call void @_ZN4SkSL17VariableReferenceC1EiPKNS_8VariableENS_15VariableRefKindE(%"class.SkSL::VariableReference"* %119, i32 -1, %"class.SkSL::Variable"* %57, i8 signext 0) #14, !noalias !18
  %120 = bitcast i8* %118 to %"class.SkSL::Expression"*
  %121 = call %"class.SkSL::Expression"* @_ZN4SkSL11FieldAccess4MakeERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEEiNS_20FieldAccessOwnerKindE(%"class.SkSL::Context"* dereferenceable(744) %117, %"class.SkSL::Expression"* %120, i32 0, i8 signext 1) #14, !noalias !18
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nonnull %22, %"class.SkSL::Expression"* %121) #14
  call void @_ZN4SkSL3dsl13DSLExpressionaSES1_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %4, %"class.SkSL::dsl::DSLExpression"* nonnull %22, %"class.SkSL::dsl::DSLExpression"* nonnull %5) #14
  call void @_ZN4SkSL3dsl12DSLStatementC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLStatement"* nonnull %3, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %4, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.35, i64 0, i64 0), i32 733) #14
  %122 = getelementptr inbounds %"class.SkSL::dsl::DSLStatement", %"class.SkSL::dsl::DSLStatement"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %123 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %122, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %122, align 8
  call void @_ZN4SkSL3dsl12DSLStatementD1Ev(%"class.SkSL::dsl::DSLStatement"* nonnull %3) #14
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %4) #14
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %22) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #14
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %5) #14
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %20) #14
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %21) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %108) #14
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %6) #14
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %13) #14
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %14) #14
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %17) #14
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %18) #14
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %15) #14
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %16) #14
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %7) #14
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %8) #14
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %11) #14
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %12) #14
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %9) #14
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %10) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #14
  ret %"class.SkSL::Statement"* %123
}

declare %"class.SkSL::Block"* @_ZN4SkSL5Block4MakeEi9SkSTArrayILi2ENSt3__110unique_ptrINS_9StatementENS2_14default_deleteIS4_EEEELb0EENS2_10shared_ptrINS_11SymbolTableEEEb(i32, %class.SkSTArray*, %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL11IRGenerator22convertVarDeclarationsERKNS_7ASTNodeENS_15VariableStorageE(%class.SkSTArray* noalias sret, %"class.SkSL::IRGenerator"*, %"struct.SkSL::ASTNode"* nocapture readonly dereferenceable(160), i8 signext) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.SkSTArray, align 8
  %6 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %2, i64 0, i32 0
  %7 = load %"class.std::__1::vector.52"*, %"class.std::__1::vector.52"** %6, align 8
  %8 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %2, i64 0, i32 4, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %7, i64 0, i32 0, i32 0
  %12 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %11, align 8
  %13 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %12, i64 %10, i32 6, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %12, i64 %10, i32 1, i32 0, i64 0
  %16 = bitcast i8* %15 to %"struct.SkSL::Modifiers"*
  %17 = sext i32 %14 to i64
  %18 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %12, i64 %17, i32 6, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %12, i64 %17
  %21 = tail call %"class.SkSL::Type"* @_ZN4SkSL11IRGenerator11convertTypeERKNS_7ASTNodeEb(%"class.SkSL::IRGenerator"* %1, %"struct.SkSL::ASTNode"* dereferenceable(160) %20, i1 zeroext false)
  %22 = icmp eq %"class.SkSL::Type"* %21, null
  br i1 %22, label %23, label %29

23:                                               ; preds = %4
  %24 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %0, i64 0, i32 0, i32 0, i64 16
  %25 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %0, i64 0, i32 0, i32 0, i64 0
  %26 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %0, i64 0, i32 0, i32 0, i64 24
  %27 = bitcast i8* %26 to i64*
  %28 = bitcast i8* %24 to i8**
  store i8* %25, i8** %28, align 8
  store i64 17179869184, i64* %27, align 8
  br label %178

29:                                               ; preds = %4
  %30 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %2, i64 0, i32 2
  %31 = load i32, i32* %30, align 4
  tail call void @_ZN4SkSL11IRGenerator19checkVarDeclarationEiRKNS_9ModifiersEPKNS_4TypeENS_15VariableStorageE(%"class.SkSL::IRGenerator"* %1, i32 %31, %"struct.SkSL::Modifiers"* dereferenceable(80) %16, %"class.SkSL::Type"* nonnull %21, i8 signext %3)
  %32 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %5, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %32) #14
  %33 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %5, i64 0, i32 0, i32 0, i64 16
  %34 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %5, i64 0, i32 0, i32 0, i64 24
  %35 = bitcast i8* %34 to i64*
  %36 = bitcast i8* %33 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 16, i1 false)
  store i8* %32, i8** %36, align 8
  store i64 17179869184, i64* %35, align 8
  %37 = icmp sgt i32 %19, -1
  br i1 %37, label %40, label %38

38:                                               ; preds = %29
  %39 = bitcast i8* %33 to %class.SkTArray*
  br label %140

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %1, i64 0, i32 0
  %42 = bitcast i8* %33 to %class.SkTArray*
  %43 = bitcast i8* %33 to %"class.std::__1::unique_ptr.190"**
  %44 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %11, align 8
  br label %45

45:                                               ; preds = %40, %135
  %46 = phi %"struct.SkSL::ASTNode"* [ %44, %40 ], [ %136, %135 ]
  %47 = phi i32 [ %19, %40 ], [ %138, %135 ]
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %46, i64 %48, i32 1, i32 0, i64 0
  %50 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %46, i64 %48, i32 0
  %51 = load %"class.std::__1::vector.52"*, %"class.std::__1::vector.52"** %50, align 8
  %52 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %46, i64 %48, i32 4, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp sgt i32 %53, -1
  br i1 %54, label %55, label %88

55:                                               ; preds = %45
  %56 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %46, i64 %48, i32 1, i32 0, i64 16
  %57 = load i8, i8* %56, align 8, !range !2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %78, label %59

59:                                               ; preds = %55
  %60 = sext i32 %53 to i64
  %61 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %51, i64 0, i32 0, i32 0
  %62 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %61, align 8
  %63 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %62, i64 %60, i32 3
  %64 = load i32, i32* %63, align 8
  %65 = icmp eq i32 %64, 22
  br i1 %65, label %66, label %71

66:                                               ; preds = %59
  %67 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %41, align 8
  %68 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %67, i64 0, i32 1
  %69 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %68, align 8
  %70 = load i32, i32* %30, align 4
  call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %69, i32 %70, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0))
  br label %135

71:                                               ; preds = %59
  %72 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %62, i64 %60
  %73 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %62, i64 %60, i32 6, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator17convertExpressionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %1, %"struct.SkSL::ASTNode"* dereferenceable(160) %72)
  %76 = ptrtoint %"class.SkSL::Expression"* %75 to i64
  %77 = icmp sgt i32 %74, -1
  br i1 %77, label %78, label %88

78:                                               ; preds = %55, %71
  %79 = phi i64 [ %76, %71 ], [ 0, %55 ]
  %80 = phi i32 [ %74, %71 ], [ %53, %55 ]
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %51, i64 0, i32 0, i32 0
  %83 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %82, align 8
  %84 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %83, i64 %81
  %85 = call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator17convertExpressionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %1, %"struct.SkSL::ASTNode"* dereferenceable(160) %84)
  %86 = ptrtoint %"class.SkSL::Expression"* %85 to i64
  %87 = icmp eq %"class.SkSL::Expression"* %85, null
  br i1 %87, label %127, label %88

88:                                               ; preds = %45, %78, %71
  %89 = phi i64 [ %79, %78 ], [ %76, %71 ], [ 0, %45 ]
  %90 = phi i64 [ %86, %78 ], [ 0, %71 ], [ 0, %45 ]
  %91 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %46, i64 %48, i32 2
  %92 = load i32, i32* %91, align 4
  %93 = bitcast i8* %49 to i8**
  %94 = load i8*, i8** %93, align 8
  %95 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %46, i64 %48, i32 1, i32 0, i64 8
  %96 = bitcast i8* %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %46, i64 %48, i32 1, i32 0, i64 16
  %99 = load i8, i8* %98, align 8, !range !2
  %100 = icmp ne i8 %99, 0
  %101 = call %"class.SkSL::Variable"* @_ZN4SkSL11IRGenerator10convertVarEiRKNS_9ModifiersEPKNS_4TypeENS_14StringFragmentEbNSt3__110unique_ptrINS_10ExpressionENS8_14default_deleteISA_EEEENS_15VariableStorageE(%"class.SkSL::IRGenerator"* %1, i32 %92, %"struct.SkSL::Modifiers"* dereferenceable(80) %16, %"class.SkSL::Type"* nonnull %21, i8* %94, i64 %97, i1 zeroext %100, i64 %89, i8 signext %3) #14
  %102 = icmp eq %"class.SkSL::Variable"* %101, null
  br i1 %102, label %103, label %111

103:                                              ; preds = %88
  %104 = icmp eq i64 %90, 0
  br i1 %104, label %135, label %105

105:                                              ; preds = %103
  %106 = inttoptr i64 %90 to %"class.SkSL::Expression"*
  %107 = inttoptr i64 %90 to void (%"class.SkSL::Expression"*)***
  %108 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %107, align 8
  %109 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %108, i64 1
  %110 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %109, align 8
  call void %110(%"class.SkSL::Expression"* nonnull %106) #14
  br label %135

111:                                              ; preds = %88
  %112 = inttoptr i64 %90 to %"class.SkSL::Expression"*
  %113 = call %"class.SkSL::Statement"* @_ZN4SkSL11IRGenerator21convertVarDeclarationENSt3__110unique_ptrINS_8VariableENS1_14default_deleteIS3_EEEENS2_INS_10ExpressionENS4_IS7_EEEE(%"class.SkSL::IRGenerator"* %1, %"class.SkSL::Variable"* nonnull %101, %"class.SkSL::Expression"* %112) #14
  %114 = icmp eq %"class.SkSL::Statement"* %113, null
  br i1 %114, label %135, label %115

115:                                              ; preds = %111
  %116 = ptrtoint %"class.SkSL::Statement"* %113 to i64
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %42, i32 1, i32 1) #14
  %117 = load %"class.std::__1::unique_ptr.190"*, %"class.std::__1::unique_ptr.190"** %43, align 8
  %118 = load i64, i64* %35, align 8
  %119 = lshr i64 %118, 1
  %120 = and i64 %119, 2147483647
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %117, i64 %120
  %122 = add i64 %118, 2
  %123 = and i64 %122, 4294967294
  %124 = and i64 %118, -4294967295
  %125 = or i64 %123, %124
  store i64 %125, i64* %35, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.190"* %121 to i64*
  store i64 %116, i64* %126, align 8
  br label %135

127:                                              ; preds = %78
  %128 = icmp eq i64 %79, 0
  br i1 %128, label %135, label %129

129:                                              ; preds = %127
  %130 = inttoptr i64 %79 to %"class.SkSL::Expression"*
  %131 = inttoptr i64 %79 to void (%"class.SkSL::Expression"*)***
  %132 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %131, align 8
  %133 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %132, i64 1
  %134 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %133, align 8
  call void %134(%"class.SkSL::Expression"* nonnull %130) #14
  br label %135

135:                                              ; preds = %111, %66, %115, %103, %105, %127, %129
  %136 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %11, align 8
  %137 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %136, i64 %48, i32 6, i32 0
  %138 = load i32, i32* %137, align 4
  %139 = icmp sgt i32 %138, -1
  br i1 %139, label %45, label %140

140:                                              ; preds = %135, %38
  %141 = phi %class.SkTArray* [ %39, %38 ], [ %42, %135 ]
  %142 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %0, i64 0, i32 0, i32 0, i64 16
  %143 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %0, i64 0, i32 0, i32 0, i64 0
  %144 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %0, i64 0, i32 0, i32 0, i64 24
  %145 = bitcast i8* %144 to i64*
  %146 = bitcast i8* %142 to i8**
  store i8* %143, i8** %146, align 8
  store i64 17179869184, i64* %145, align 8
  %147 = bitcast i8* %142 to %class.SkTArray*
  %148 = call dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray* %147, %class.SkTArray* dereferenceable(16) %141) #14
  %149 = load i64, i64* %35, align 8
  %150 = and i64 %149, 4294967294
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %154, label %152

152:                                              ; preds = %140
  %153 = bitcast i8* %33 to %"class.std::__1::unique_ptr.190"**
  br label %158

154:                                              ; preds = %169, %140
  %155 = phi i64 [ %149, %140 ], [ %171, %169 ]
  %156 = and i64 %155, 1
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %177, label %175

158:                                              ; preds = %169, %152
  %159 = phi i64 [ 0, %152 ], [ %170, %169 ]
  %160 = load %"class.std::__1::unique_ptr.190"*, %"class.std::__1::unique_ptr.190"** %153, align 8
  %161 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %160, i64 %159, i32 0, i32 0, i32 0
  %162 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %161, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %161, align 8
  %163 = icmp eq %"class.SkSL::Statement"* %162, null
  br i1 %163, label %169, label %164

164:                                              ; preds = %158
  %165 = bitcast %"class.SkSL::Statement"* %162 to void (%"class.SkSL::Statement"*)***
  %166 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %165, align 8
  %167 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %166, i64 1
  %168 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %167, align 8
  call void %168(%"class.SkSL::Statement"* nonnull %162) #14
  br label %169

169:                                              ; preds = %164, %158
  %170 = add nuw nsw i64 %159, 1
  %171 = load i64, i64* %35, align 8
  %172 = lshr i64 %171, 1
  %173 = and i64 %172, 2147483647
  %174 = icmp ult i64 %170, %173
  br i1 %174, label %158, label %154

175:                                              ; preds = %154
  %176 = load i8*, i8** %36, align 8
  call void @_Z7sk_freePv(i8* %176) #14
  br label %177

177:                                              ; preds = %154, %175
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %32) #14
  br label %178

178:                                              ; preds = %177, %23
  ret void
}

declare %"class.SkSL::Statement"* @_ZN4SkSL5Block12MakeUnscopedEi9SkSTArrayILi2ENSt3__110unique_ptrINS_9StatementENS2_14default_deleteIS4_EEEELb0EE(i32, %class.SkSTArray*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL11IRGenerator16convertArraySizeERKNS_4TypeEiRKNS_7ASTNodeE(%"class.SkSL::IRGenerator"*, %"class.SkSL::Type"* nocapture readonly dereferenceable(184), i32, %"struct.SkSL::ASTNode"* nocapture readonly dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %3, i64 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 22
  br i1 %7, label %8, label %13

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %10 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %9, align 8
  %11 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %10, i64 0, i32 1
  %12 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %11, align 8
  tail call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %12, i32 %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0))
  br label %18

13:                                               ; preds = %4
  %14 = tail call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator17convertExpressionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %3)
  %15 = icmp eq %"class.SkSL::Expression"* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %13
  %17 = tail call i32 @_ZN4SkSL11IRGenerator16convertArraySizeERKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEE(%"class.SkSL::IRGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %1, %"class.SkSL::Expression"* nonnull %14)
  br label %18

18:                                               ; preds = %13, %16, %8
  %19 = phi i32 [ 0, %8 ], [ %17, %16 ], [ 0, %13 ]
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator17convertExpressionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"*, %"struct.SkSL::ASTNode"* nocapture readonly dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %104 [
    i32 0, label %5
    i32 2, label %8
    i32 4, label %28
    i32 11, label %31
    i32 13, label %34
    i32 16, label %56
    i32 17, label %67
    i32 19, label %70
    i32 24, label %92
    i32 25, label %95
    i32 27, label %98
    i32 31, label %101
  ]

5:                                                ; preds = %2
  %6 = tail call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator23convertBinaryExpressionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %1)
  %7 = ptrtoint %"class.SkSL::Expression"* %6 to i64
  br label %104

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %10 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %9, align 8
  %11 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 1, i32 0, i64 0
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %10, i64 0, i32 0, i32 24, i32 0, i32 0, i32 0
  %16 = bitcast %"class.SkSL::Type"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #14
  %19 = bitcast i8* %18 to i32 (...)***
  %20 = getelementptr inbounds i8, i8* %18, i64 8
  %21 = bitcast i8* %20 to i32*
  store i32 %12, i32* %21, align 8
  %22 = getelementptr inbounds i8, i8* %18, i64 12
  %23 = bitcast i8* %22 to i32*
  store i32 31, i32* %23, align 4
  %24 = getelementptr inbounds i8, i8* %18, i64 16
  %25 = bitcast i8* %24 to i64*
  store i64 %17, i64* %25, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %26 = getelementptr inbounds i8, i8* %18, i64 24
  store i8 %14, i8* %26, align 8
  %27 = ptrtoint i8* %18 to i64
  br label %104

28:                                               ; preds = %2
  %29 = tail call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator21convertCallExpressionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %1)
  %30 = ptrtoint %"class.SkSL::Expression"* %29 to i64
  br label %104

31:                                               ; preds = %2
  %32 = tail call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator22convertFieldExpressionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %1)
  %33 = ptrtoint %"class.SkSL::Expression"* %32 to i64
  br label %104

34:                                               ; preds = %2
  %35 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %36 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %35, align 8
  %37 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 1, i32 0, i64 0
  %40 = bitcast i8* %39 to i32*
  %41 = load i32, i32* %40, align 8
  %42 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %36, i64 0, i32 0, i32 30, i32 0, i32 0, i32 0
  %43 = bitcast %"class.SkSL::Type"** %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #14
  %46 = bitcast i8* %45 to i32 (...)***
  %47 = getelementptr inbounds i8, i8* %45, i64 8
  %48 = bitcast i8* %47 to i32*
  store i32 %38, i32* %48, align 8
  %49 = getelementptr inbounds i8, i8* %45, i64 12
  %50 = bitcast i8* %49 to i32*
  store i32 45, i32* %50, align 4
  %51 = getelementptr inbounds i8, i8* %45, i64 16
  %52 = bitcast i8* %51 to i64*
  store i64 %44, i64* %52, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIfEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  %53 = getelementptr inbounds i8, i8* %45, i64 24
  %54 = bitcast i8* %53 to i32*
  store i32 %41, i32* %54, align 8
  %55 = ptrtoint i8* %45 to i64
  br label %104

56:                                               ; preds = %2
  %57 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 1, i32 0, i64 0
  %60 = bitcast i8* %59 to i8**
  %61 = load i8*, i8** %60, align 8
  %62 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 1, i32 0, i64 8
  %63 = bitcast i8* %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = tail call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator17convertIdentifierEiNS_14StringFragmentE(%"class.SkSL::IRGenerator"* %0, i32 %58, i8* %61, i64 %64) #14
  %66 = ptrtoint %"class.SkSL::Expression"* %65 to i64
  br label %104

67:                                               ; preds = %2
  %68 = tail call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator22convertIndexExpressionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %1)
  %69 = ptrtoint %"class.SkSL::Expression"* %68 to i64
  br label %104

70:                                               ; preds = %2
  %71 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %72 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %71, align 8
  %73 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 2
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 1, i32 0, i64 0
  %76 = bitcast i8* %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %72, i64 0, i32 0, i32 31, i32 0, i32 0, i32 0
  %79 = bitcast %"class.SkSL::Type"** %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #14
  %82 = bitcast i8* %81 to i32 (...)***
  %83 = getelementptr inbounds i8, i8* %81, i64 8
  %84 = bitcast i8* %83 to i32*
  store i32 %74, i32* %84, align 8
  %85 = getelementptr inbounds i8, i8* %81, i64 12
  %86 = bitcast i8* %85 to i32*
  store i32 43, i32* %86, align 4
  %87 = getelementptr inbounds i8, i8* %81, i64 16
  %88 = bitcast i8* %87 to i64*
  store i64 %80, i64* %88, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIlEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %82, align 8
  %89 = getelementptr inbounds i8, i8* %81, i64 24
  %90 = bitcast i8* %89 to i64*
  store i64 %77, i64* %90, align 8
  %91 = ptrtoint i8* %81 to i64
  br label %104

92:                                               ; preds = %2
  %93 = tail call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator24convertPostfixExpressionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %1)
  %94 = ptrtoint %"class.SkSL::Expression"* %93 to i64
  br label %104

95:                                               ; preds = %2
  %96 = tail call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator23convertPrefixExpressionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %1)
  %97 = ptrtoint %"class.SkSL::Expression"* %96 to i64
  br label %104

98:                                               ; preds = %2
  %99 = tail call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator22convertScopeExpressionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %1)
  %100 = ptrtoint %"class.SkSL::Expression"* %99 to i64
  br label %104

101:                                              ; preds = %2
  %102 = tail call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator24convertTernaryExpressionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %1)
  %103 = ptrtoint %"class.SkSL::Expression"* %102 to i64
  br label %104

104:                                              ; preds = %2, %101, %98, %95, %92, %70, %67, %56, %34, %31, %28, %8, %5
  %105 = phi i64 [ %103, %101 ], [ %100, %98 ], [ %97, %95 ], [ %94, %92 ], [ %91, %70 ], [ %69, %67 ], [ %66, %56 ], [ %55, %34 ], [ %33, %31 ], [ %30, %28 ], [ %27, %8 ], [ %7, %5 ], [ 0, %2 ]
  %106 = inttoptr i64 %105 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %106
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4SkSL11IRGenerator16convertArraySizeERKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEE(%"class.SkSL::IRGenerator"* nocapture readonly, %"class.SkSL::Type"* nocapture readonly dereferenceable(184), %"class.SkSL::Expression"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %8 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %7, align 8
  %9 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %8, i64 0, i32 0, i32 8, i32 0, i32 0, i32 0
  %10 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %9, align 8
  %11 = tail call %"class.SkSL::Expression"* @_ZNK4SkSL4Type16coerceExpressionENSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEERKNS_7ContextE(%"class.SkSL::Type"* %10, %"class.SkSL::Expression"* %2, %"class.SkSL::Context"* dereferenceable(744) %8) #14
  %12 = icmp eq %"class.SkSL::Expression"* %11, null
  br i1 %12, label %122, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 3
  %15 = load i32, i32* %14, align 8
  switch i32 %15, label %85 [
    i32 12, label %16
    i32 13, label %22
    i32 2, label %22
    i32 5, label %22
    i32 6, label %22
    i32 7, label %22
    i32 14, label %22
    i32 10, label %22
  ]

16:                                               ; preds = %13
  %17 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %7, align 8
  %18 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %17, i64 0, i32 1
  %19 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %18, align 8
  %20 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %11, i64 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  tail call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %19, i32 %21, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5, i64 0, i64 0))
  br label %116

22:                                               ; preds = %13, %13, %13, %13, %13, %13, %13
  %23 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %7, align 8
  %24 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %23, i64 0, i32 1
  %25 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %24, align 8
  %26 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %11, i64 0, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #14
  %29 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #14
  %30 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 0, i32 1, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 0, i32 1, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = icmp ugt i64 %33, -17
  br i1 %34, label %35, label %37

35:                                               ; preds = %22
  %36 = bitcast %"class.SkSL::String"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %36) #16
  unreachable

37:                                               ; preds = %22
  %38 = icmp ult i64 %33, 23
  br i1 %38, label %47, label %39

39:                                               ; preds = %37
  %40 = add nuw i64 %33, 16
  %41 = and i64 %40, -16
  %42 = tail call i8* @_Znwm(i64 %41) #15
  %43 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %42, i8** %43, align 8
  %44 = or i64 %41, -9223372036854775808
  %45 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %33, i64* %46, align 8
  br label %52

47:                                               ; preds = %37
  %48 = trunc i64 %33 to i8
  %49 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  store i8 %48, i8* %50, align 1
  %51 = icmp eq i64 %33, 0
  br i1 %51, label %54, label %52

52:                                               ; preds = %47, %39
  %53 = phi i8* [ %42, %39 ], [ %29, %47 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %53, i8* align 1 %31, i64 %33, i1 false) #14
  br label %54

54:                                               ; preds = %47, %52
  %55 = phi i8* [ %29, %47 ], [ %53, %52 ]
  %56 = getelementptr inbounds i8, i8* %55, i64 %33
  store i8 0, i8* %56, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %5, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %6) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::String"* nonnull %5, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7, i64 0, i64 0)) #14
  %57 = bitcast %"class.SkSL::ErrorReporter"* %25 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %58 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %58, i64 2
  %60 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %59, align 8
  call void %60(%"class.SkSL::ErrorReporter"* %25, i32 %27, %"class.SkSL::String"* nonnull %4) #14
  %61 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %54
  %66 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  call void @_ZdlPv(i8* %67) #15
  br label %68

68:                                               ; preds = %54, %65
  %69 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  %71 = load i8, i8* %70, align 1
  %72 = icmp slt i8 %71, 0
  br i1 %72, label %73, label %76

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  call void @_ZdlPv(i8* %75) #15
  br label %76

76:                                               ; preds = %68, %73
  %77 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  %79 = load i8, i8* %78, align 1
  %80 = icmp slt i8 %79, 0
  br i1 %80, label %81, label %84

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  call void @_ZdlPv(i8* %83) #15
  br label %84

84:                                               ; preds = %76, %81
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #14
  br label %116

85:                                               ; preds = %13
  %86 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %11, i64 0, i32 0, i32 2
  %87 = load i32, i32* %86, align 4
  %88 = icmp eq i32 %87, 43
  br i1 %88, label %95, label %89

89:                                               ; preds = %85
  %90 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %7, align 8
  %91 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %90, i64 0, i32 1
  %92 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %91, align 8
  %93 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %11, i64 0, i32 0, i32 1
  %94 = load i32, i32* %93, align 8
  tail call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %92, i32 %94, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.8, i64 0, i64 0))
  br label %116

95:                                               ; preds = %85
  %96 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %11, i64 1
  %97 = bitcast %"class.SkSL::Expression"* %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = icmp slt i64 %98, 1
  br i1 %99, label %100, label %106

100:                                              ; preds = %95
  %101 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %7, align 8
  %102 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %101, i64 0, i32 1
  %103 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %102, align 8
  %104 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %11, i64 0, i32 0, i32 1
  %105 = load i32, i32* %104, align 8
  tail call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %103, i32 %105, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.9, i64 0, i64 0))
  br label %116

106:                                              ; preds = %95
  %107 = icmp ult i64 %98, 2147483648
  br i1 %107, label %114, label %108

108:                                              ; preds = %106
  %109 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %7, align 8
  %110 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %109, i64 0, i32 1
  %111 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %110, align 8
  %112 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %11, i64 0, i32 0, i32 1
  %113 = load i32, i32* %112, align 8
  tail call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %111, i32 %113, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.10, i64 0, i64 0))
  br label %116

114:                                              ; preds = %106
  %115 = trunc i64 %98 to i32
  br label %116

116:                                              ; preds = %100, %108, %114, %89, %84, %16
  %117 = phi i32 [ 0, %108 ], [ %115, %114 ], [ 0, %100 ], [ 0, %89 ], [ 0, %84 ], [ 0, %16 ]
  %118 = bitcast %"class.SkSL::Expression"* %11 to void (%"class.SkSL::Expression"*)***
  %119 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %118, align 8
  %120 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %119, i64 1
  %121 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %120, align 8
  call void %121(%"class.SkSL::Expression"* nonnull %11) #14
  br label %122

122:                                              ; preds = %3, %116
  %123 = phi i32 [ %117, %116 ], [ 0, %3 ]
  ret i32 %123
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator6coerceENSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEERKNS_4TypeE(%"class.SkSL::IRGenerator"* nocapture readonly, %"class.SkSL::Expression"*, %"class.SkSL::Type"* dereferenceable(184)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %5 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %4, align 8
  %6 = tail call %"class.SkSL::Expression"* @_ZNK4SkSL4Type16coerceExpressionENSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEERKNS_7ContextE(%"class.SkSL::Type"* %2, %"class.SkSL::Expression"* %1, %"class.SkSL::Context"* dereferenceable(744) %5) #14
  ret %"class.SkSL::Expression"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL11IRGenerator19checkVarDeclarationEiRKNS_9ModifiersEPKNS_4TypeENS_15VariableStorageE(%"class.SkSL::IRGenerator"* nocapture readonly, i32, %"struct.SkSL::Modifiers"* nocapture readonly dereferenceable(80), %"class.SkSL::Type"* nocapture readonly, i8 signext) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = alloca %"class.SkSL::String", align 8
  %10 = alloca %"class.SkSL::String", align 8
  %11 = alloca %"class.SkSL::String", align 8
  %12 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %13 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %12, align 8
  %14 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %13, i64 0, i32 4
  %15 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %14, align 8
  %16 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %15, i64 0, i32 1, i32 19
  %17 = load i8, i8* %16, align 1, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %31, label %19

19:                                               ; preds = %5
  %20 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %15, i64 0, i32 0
  %21 = load i8, i8* %20, align 8
  %22 = add i8 %21, -4
  %23 = icmp ult i8 %22, 3
  br i1 %23, label %24, label %31

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %3, i64 0, i32 3
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %13, i64 0, i32 1
  %30 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %29, align 8
  tail call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %30, i32 %1, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.11, i64 0, i64 0))
  br label %31

31:                                               ; preds = %5, %28, %24, %19
  %32 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %3, i64 0, i32 6
  %33 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %32, align 8
  %34 = icmp eq %"class.SkSL::Type"* %33, null
  %35 = select i1 %34, %"class.SkSL::Type"* %3, %"class.SkSL::Type"* %33
  %36 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %35, i64 0, i32 3
  %37 = load i32, i32* %36, align 8
  switch i32 %37, label %105 [
    i32 13, label %38
    i32 2, label %38
    i32 5, label %38
    i32 6, label %38
    i32 7, label %38
    i32 14, label %38
    i32 10, label %38
    i32 12, label %38
  ]

38:                                               ; preds = %31, %31, %31, %31, %31, %31, %31, %31
  %39 = icmp eq i8 %4, 0
  br i1 %39, label %105, label %40

40:                                               ; preds = %38
  %41 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %12, align 8
  %42 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %41, i64 0, i32 1
  %43 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %42, align 8
  %44 = bitcast %"class.SkSL::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #14
  %45 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #14
  %46 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %3, i64 0, i32 18
  %47 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %46, align 8, !noalias !21
  %48 = icmp eq %"class.SkSL::Type"* %47, null
  %49 = select i1 %48, %"class.SkSL::Type"* %3, %"class.SkSL::Type"* %47
  %50 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %49, i64 0, i32 0, i32 1, i32 0
  %51 = load i8*, i8** %50, align 8, !noalias !21
  %52 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %49, i64 0, i32 0, i32 1, i32 1
  %53 = load i64, i64* %52, align 8, !noalias !21
  %54 = icmp ugt i64 %53, -17
  br i1 %54, label %55, label %57

55:                                               ; preds = %40
  %56 = bitcast %"class.SkSL::String"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %56) #16
  unreachable

57:                                               ; preds = %40
  %58 = icmp ult i64 %53, 23
  br i1 %58, label %67, label %59

59:                                               ; preds = %57
  %60 = add nuw i64 %53, 16
  %61 = and i64 %60, -16
  %62 = tail call i8* @_Znwm(i64 %61) #15
  %63 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %62, i8** %63, align 8, !alias.scope !21
  %64 = or i64 %61, -9223372036854775808
  %65 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %64, i64* %65, align 8, !alias.scope !21
  %66 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %53, i64* %66, align 8, !alias.scope !21
  br label %72

67:                                               ; preds = %57
  %68 = trunc i64 %53 to i8
  %69 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  store i8 %68, i8* %70, align 1, !alias.scope !21
  %71 = icmp eq i64 %53, 0
  br i1 %71, label %74, label %72

72:                                               ; preds = %67, %59
  %73 = phi i8* [ %62, %59 ], [ %45, %67 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %73, i8* align 1 %51, i64 %53, i1 false) #14
  br label %74

74:                                               ; preds = %67, %72
  %75 = phi i8* [ %45, %67 ], [ %73, %72 ]
  %76 = getelementptr inbounds i8, i8* %75, i64 %53
  store i8 0, i8* %76, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %7, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %8) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %6, %"class.SkSL::String"* nonnull %7, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13, i64 0, i64 0)) #14
  %77 = bitcast %"class.SkSL::ErrorReporter"* %43 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %78 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %78, i64 2
  %80 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %79, align 8
  call void %80(%"class.SkSL::ErrorReporter"* %43, i32 %1, %"class.SkSL::String"* nonnull %6) #14
  %81 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %81, i64 0, i32 1, i32 0
  %83 = load i8, i8* %82, align 1
  %84 = icmp slt i8 %83, 0
  br i1 %84, label %85, label %88

85:                                               ; preds = %74
  %86 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load i8*, i8** %86, align 8
  call void @_ZdlPv(i8* %87) #15
  br label %88

88:                                               ; preds = %74, %85
  %89 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %89, i64 0, i32 1, i32 0
  %91 = load i8, i8* %90, align 1
  %92 = icmp slt i8 %91, 0
  br i1 %92, label %93, label %96

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8
  call void @_ZdlPv(i8* %95) #15
  br label %96

96:                                               ; preds = %88, %93
  %97 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %97, i64 0, i32 1, i32 0
  %99 = load i8, i8* %98, align 1
  %100 = icmp slt i8 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load i8*, i8** %102, align 8
  call void @_ZdlPv(i8* %103) #15
  br label %104

104:                                              ; preds = %96, %101
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #14
  br label %105

105:                                              ; preds = %38, %31, %104
  %106 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %12, align 8
  %107 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %106, i64 0, i32 4
  %108 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %107, align 8
  %109 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %108, i64 0, i32 0
  %110 = load i8, i8* %109, align 8
  %111 = icmp eq i8 %110, 3
  br i1 %111, label %158, label %112

112:                                              ; preds = %105
  %113 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %2, i64 0, i32 1
  %114 = load i32, i32* %113, align 8
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %125, label %117

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %3, i64 0, i32 3
  %119 = load i32, i32* %118, align 8
  %120 = icmp eq i32 %119, 4
  br i1 %120, label %121, label %125

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %106, i64 0, i32 1
  %123 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %122, align 8
  call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %123, i32 %1, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.14, i64 0, i64 0))
  %124 = load i32, i32* %113, align 8
  br label %125

125:                                              ; preds = %112, %121, %117
  %126 = phi i32 [ %114, %112 ], [ %124, %121 ], [ %114, %117 ]
  %127 = and i32 %126, 10
  %128 = icmp eq i32 %127, 10
  br i1 %128, label %129, label %133

129:                                              ; preds = %125
  %130 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %12, align 8
  %131 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %130, i64 0, i32 1
  %132 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %131, align 8
  call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %132, i32 %1, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.15, i64 0, i64 0))
  br label %133

133:                                              ; preds = %125, %129
  %134 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %2, i64 0, i32 0, i32 12, i32 1
  %135 = load i64, i64* %134, align 8
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %141, label %137

137:                                              ; preds = %133
  %138 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %12, align 8
  %139 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %138, i64 0, i32 1
  %140 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %139, align 8
  call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %140, i32 %1, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.16, i64 0, i64 0))
  br label %141

141:                                              ; preds = %133, %137
  %142 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %2, i64 0, i32 0, i32 13
  %143 = load i32, i32* %142, align 8
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %149, label %145

145:                                              ; preds = %141
  %146 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %12, align 8
  %147 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %146, i64 0, i32 1
  %148 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %147, align 8
  call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %148, i32 %1, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.17, i64 0, i64 0))
  br label %149

149:                                              ; preds = %141, %145
  %150 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %2, i64 0, i32 0, i32 0
  %151 = load i32, i32* %150, align 8
  %152 = and i32 %151, 16
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %158, label %154

154:                                              ; preds = %149
  %155 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %12, align 8
  %156 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %155, i64 0, i32 1
  %157 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %156, align 8
  call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %157, i32 %1, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.18, i64 0, i64 0))
  br label %158

158:                                              ; preds = %149, %105, %154
  %159 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %12, align 8
  %160 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %159, i64 0, i32 4
  %161 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %160, align 8
  %162 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %161, i64 0, i32 0
  %163 = load i8, i8* %162, align 8
  %164 = and i8 %163, -2
  %165 = icmp eq i8 %164, 4
  br i1 %165, label %166, label %174

166:                                              ; preds = %158
  %167 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %2, i64 0, i32 1
  %168 = load i32, i32* %167, align 8
  %169 = and i32 %168, 2
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %174, label %171

171:                                              ; preds = %166
  %172 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %159, i64 0, i32 1
  %173 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %172, align 8
  call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %173, i32 %1, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.19, i64 0, i64 0))
  br label %174

174:                                              ; preds = %158, %166, %171
  %175 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %3, i64 0, i32 3
  %176 = load i32, i32* %175, align 8
  %177 = add i32 %176, -13
  %178 = icmp ult i32 %177, 2
  br i1 %178, label %179, label %249

179:                                              ; preds = %174
  %180 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %2, i64 0, i32 1
  %181 = load i32, i32* %180, align 8
  %182 = and i32 %181, 8
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %249

184:                                              ; preds = %179
  %185 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %12, align 8
  %186 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %185, i64 0, i32 1
  %187 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %186, align 8
  %188 = bitcast %"class.SkSL::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %188) #14
  %189 = bitcast %"class.SkSL::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %189) #14
  %190 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %3, i64 0, i32 18
  %191 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %190, align 8, !noalias !24
  %192 = icmp eq %"class.SkSL::Type"* %191, null
  %193 = select i1 %192, %"class.SkSL::Type"* %3, %"class.SkSL::Type"* %191
  %194 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %193, i64 0, i32 0, i32 1, i32 0
  %195 = load i8*, i8** %194, align 8, !noalias !24
  %196 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %193, i64 0, i32 0, i32 1, i32 1
  %197 = load i64, i64* %196, align 8, !noalias !24
  %198 = icmp ugt i64 %197, -17
  br i1 %198, label %199, label %201

199:                                              ; preds = %184
  %200 = bitcast %"class.SkSL::String"* %11 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %200) #16
  unreachable

201:                                              ; preds = %184
  %202 = icmp ult i64 %197, 23
  br i1 %202, label %211, label %203

203:                                              ; preds = %201
  %204 = add nuw i64 %197, 16
  %205 = and i64 %204, -16
  %206 = call i8* @_Znwm(i64 %205) #15
  %207 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %206, i8** %207, align 8, !alias.scope !24
  %208 = or i64 %205, -9223372036854775808
  %209 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %208, i64* %209, align 8, !alias.scope !24
  %210 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %197, i64* %210, align 8, !alias.scope !24
  br label %216

211:                                              ; preds = %201
  %212 = trunc i64 %197 to i8
  %213 = bitcast %"class.SkSL::String"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %214 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %213, i64 0, i32 1, i32 0
  store i8 %212, i8* %214, align 1, !alias.scope !24
  %215 = icmp eq i64 %197, 0
  br i1 %215, label %218, label %216

216:                                              ; preds = %211, %203
  %217 = phi i8* [ %206, %203 ], [ %189, %211 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %217, i8* align 1 %195, i64 %197, i1 false) #14
  br label %218

218:                                              ; preds = %211, %216
  %219 = phi i8* [ %189, %211 ], [ %217, %216 ]
  %220 = getelementptr inbounds i8, i8* %219, i64 %197
  store i8 0, i8* %220, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %10, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %11) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %9, %"class.SkSL::String"* nonnull %10, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.20, i64 0, i64 0)) #14
  %221 = bitcast %"class.SkSL::ErrorReporter"* %187 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %222 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %221, align 8
  %223 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %222, i64 2
  %224 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %223, align 8
  call void %224(%"class.SkSL::ErrorReporter"* %187, i32 %1, %"class.SkSL::String"* nonnull %9) #14
  %225 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %226 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %225, i64 0, i32 1, i32 0
  %227 = load i8, i8* %226, align 1
  %228 = icmp slt i8 %227, 0
  br i1 %228, label %229, label %232

229:                                              ; preds = %218
  %230 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = load i8*, i8** %230, align 8
  call void @_ZdlPv(i8* %231) #15
  br label %232

232:                                              ; preds = %218, %229
  %233 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %234 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %233, i64 0, i32 1, i32 0
  %235 = load i8, i8* %234, align 1
  %236 = icmp slt i8 %235, 0
  br i1 %236, label %237, label %240

237:                                              ; preds = %232
  %238 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %239 = load i8*, i8** %238, align 8
  call void @_ZdlPv(i8* %239) #15
  br label %240

240:                                              ; preds = %232, %237
  %241 = bitcast %"class.SkSL::String"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %242 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %241, i64 0, i32 1, i32 0
  %243 = load i8, i8* %242, align 1
  %244 = icmp slt i8 %243, 0
  br i1 %244, label %245, label %248

245:                                              ; preds = %240
  %246 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %247 = load i8*, i8** %246, align 8
  call void @_ZdlPv(i8* %247) #15
  br label %248

248:                                              ; preds = %240, %245
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %189) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %188) #14
  br label %249

249:                                              ; preds = %179, %248, %174
  %250 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %2, i64 0, i32 0, i32 0
  %251 = load i32, i32* %250, align 8
  %252 = and i32 %251, 16
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %264, label %254

254:                                              ; preds = %249
  %255 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %2, i64 0, i32 1
  %256 = load i32, i32* %255, align 8
  %257 = and i32 %256, 8
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %264, label %259

259:                                              ; preds = %254
  %260 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %12, align 8
  %261 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %260, i64 0, i32 1
  %262 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %261, align 8
  call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %262, i32 %1, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.21, i64 0, i64 0))
  %263 = load i32, i32* %250, align 8
  br label %264

264:                                              ; preds = %254, %249, %259
  %265 = phi i32 [ %251, %254 ], [ %251, %249 ], [ %263, %259 ]
  %266 = and i32 %265, 8
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %326, label %268

268:                                              ; preds = %264
  %269 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %12, align 8
  %270 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %269, i64 0, i32 4
  %271 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %270, align 8
  %272 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %271, i64 0, i32 0
  %273 = load i8, i8* %272, align 8
  %274 = and i8 %273, -2
  %275 = icmp eq i8 %274, 4
  br i1 %275, label %279, label %276

276:                                              ; preds = %268
  %277 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %269, i64 0, i32 1
  %278 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %277, align 8
  call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %278, i32 %1, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.22, i64 0, i64 0))
  br label %279

279:                                              ; preds = %268, %276
  %280 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %2, i64 0, i32 1
  %281 = load i32, i32* %280, align 8
  %282 = and i32 %281, 8
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %284, label %288

284:                                              ; preds = %279
  %285 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %12, align 8
  %286 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %285, i64 0, i32 1
  %287 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %286, align 8
  call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %287, i32 %1, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.23, i64 0, i64 0))
  br label %288

288:                                              ; preds = %279, %284
  %289 = load i32, i32* %175, align 8
  switch i32 %289, label %322 [
    i32 11, label %290
    i32 0, label %302
  ]

290:                                              ; preds = %288
  %291 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %32, align 8
  %292 = icmp eq %"class.SkSL::Type"* %291, null
  %293 = select i1 %292, %"class.SkSL::Type"* %3, %"class.SkSL::Type"* %291
  %294 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %293, i64 0, i32 4
  %295 = load i32, i32* %294, align 4
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %297, label %322

297:                                              ; preds = %290
  %298 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %3, i64 0, i32 8
  %299 = load i32, i32* %298, align 8
  %300 = add i32 %299, -3
  %301 = icmp ult i32 %300, 2
  br i1 %301, label %326, label %322

302:                                              ; preds = %288
  %303 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %32, align 8
  %304 = icmp eq %"class.SkSL::Type"* %303, null
  %305 = select i1 %304, %"class.SkSL::Type"* %3, %"class.SkSL::Type"* %303
  %306 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %305, i64 0, i32 3
  %307 = load i32, i32* %306, align 8
  %308 = icmp eq i32 %307, 11
  br i1 %308, label %309, label %322

309:                                              ; preds = %302
  %310 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %305, i64 0, i32 6
  %311 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %310, align 8
  %312 = icmp eq %"class.SkSL::Type"* %311, null
  %313 = select i1 %312, %"class.SkSL::Type"* %305, %"class.SkSL::Type"* %311
  %314 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %313, i64 0, i32 4
  %315 = load i32, i32* %314, align 4
  %316 = icmp eq i32 %315, 0
  br i1 %316, label %317, label %322

317:                                              ; preds = %309
  %318 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %305, i64 0, i32 8
  %319 = load i32, i32* %318, align 8
  %320 = add i32 %319, -3
  %321 = icmp ult i32 %320, 2
  br i1 %321, label %326, label %322

322:                                              ; preds = %288, %302, %309, %297, %290, %317
  %323 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %12, align 8
  %324 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %323, i64 0, i32 1
  %325 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %324, align 8
  call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %325, i32 %1, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.24, i64 0, i64 0))
  br label %326

326:                                              ; preds = %297, %317, %322, %264
  %327 = icmp eq i8 %4, 0
  %328 = select i1 %327, i32 63, i32 1
  %329 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %12, align 8
  call void @_ZN4SkSL11IRGenerator14CheckModifiersERKNS_7ContextEiRKNS_9ModifiersEii(%"class.SkSL::Context"* dereferenceable(744) %329, i32 %1, %"struct.SkSL::Modifiers"* dereferenceable(80) %2, i32 %328, i32 -1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL11IRGenerator14CheckModifiersERKNS_7ContextEiRKNS_9ModifiersEii(%"class.SkSL::Context"* nocapture readonly dereferenceable(744), i32, %"struct.SkSL::Modifiers"* nocapture readonly dereferenceable(80), i32, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %class.anon.248, align 8
  %11 = alloca i32, align 4
  %12 = alloca %class.anon.249, align 8
  store i32 %1, i32* %6, align 4
  store i32 %3, i32* %7, align 4
  store i32 %4, i32* %8, align 4
  %13 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 1
  %14 = bitcast %"class.SkSL::ErrorReporter"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #14
  %17 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %2, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  store i32 %18, i32* %9, align 4
  %19 = bitcast %class.anon.248* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #14
  %20 = getelementptr inbounds %class.anon.248, %class.anon.248* %10, i64 0, i32 0
  %21 = getelementptr inbounds %class.anon.248, %class.anon.248* %10, i64 0, i32 1
  %22 = getelementptr inbounds %class.anon.248, %class.anon.248* %10, i64 0, i32 2
  %23 = getelementptr inbounds %class.anon.248, %class.anon.248* %10, i64 0, i32 3
  store i32* %9, i32** %20, align 8
  store i32* %7, i32** %21, align 8
  %24 = bitcast %"class.SkSL::ErrorReporter"** %22 to i64*
  store i64 %15, i64* %24, align 8
  store i32* %6, i32** %23, align 8
  call fastcc void @"_ZZN4SkSL11IRGenerator14CheckModifiersERKNS_7ContextEiRKNS_9ModifiersEiiENK3$_3clENS4_4FlagEPKc"(%class.anon.248* nonnull %10, i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.36, i64 0, i64 0))
  call fastcc void @"_ZZN4SkSL11IRGenerator14CheckModifiersERKNS_7ContextEiRKNS_9ModifiersEiiENK3$_3clENS4_4FlagEPKc"(%class.anon.248* nonnull %10, i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.37, i64 0, i64 0))
  call fastcc void @"_ZZN4SkSL11IRGenerator14CheckModifiersERKNS_7ContextEiRKNS_9ModifiersEiiENK3$_3clENS4_4FlagEPKc"(%class.anon.248* nonnull %10, i32 4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.38, i64 0, i64 0))
  call fastcc void @"_ZZN4SkSL11IRGenerator14CheckModifiersERKNS_7ContextEiRKNS_9ModifiersEiiENK3$_3clENS4_4FlagEPKc"(%class.anon.248* nonnull %10, i32 8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0))
  call fastcc void @"_ZZN4SkSL11IRGenerator14CheckModifiersERKNS_7ContextEiRKNS_9ModifiersEiiENK3$_3clENS4_4FlagEPKc"(%class.anon.248* nonnull %10, i32 16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.40, i64 0, i64 0))
  call fastcc void @"_ZZN4SkSL11IRGenerator14CheckModifiersERKNS_7ContextEiRKNS_9ModifiersEiiENK3$_3clENS4_4FlagEPKc"(%class.anon.248* nonnull %10, i32 32, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.41, i64 0, i64 0))
  call fastcc void @"_ZZN4SkSL11IRGenerator14CheckModifiersERKNS_7ContextEiRKNS_9ModifiersEiiENK3$_3clENS4_4FlagEPKc"(%class.anon.248* nonnull %10, i32 64, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.42, i64 0, i64 0))
  call fastcc void @"_ZZN4SkSL11IRGenerator14CheckModifiersERKNS_7ContextEiRKNS_9ModifiersEiiENK3$_3clENS4_4FlagEPKc"(%class.anon.248* nonnull %10, i32 256, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.43, i64 0, i64 0))
  call fastcc void @"_ZZN4SkSL11IRGenerator14CheckModifiersERKNS_7ContextEiRKNS_9ModifiersEiiENK3$_3clENS4_4FlagEPKc"(%class.anon.248* nonnull %10, i32 512, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.44, i64 0, i64 0))
  %25 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #14
  %26 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %2, i64 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 8
  store i32 %27, i32* %11, align 4
  %28 = bitcast %class.anon.249* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #14
  %29 = getelementptr inbounds %class.anon.249, %class.anon.249* %12, i64 0, i32 0
  %30 = getelementptr inbounds %class.anon.249, %class.anon.249* %12, i64 0, i32 1
  %31 = getelementptr inbounds %class.anon.249, %class.anon.249* %12, i64 0, i32 2
  %32 = getelementptr inbounds %class.anon.249, %class.anon.249* %12, i64 0, i32 3
  store i32* %11, i32** %29, align 8
  store i32* %8, i32** %30, align 8
  %33 = bitcast %"class.SkSL::ErrorReporter"** %31 to i64*
  store i64 %15, i64* %33, align 8
  store i32* %6, i32** %32, align 8
  call fastcc void @"_ZZN4SkSL11IRGenerator14CheckModifiersERKNS_7ContextEiRKNS_9ModifiersEiiENK3$_4clENS_6Layout4FlagEPKc"(%class.anon.249* nonnull %12, i32 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.45, i64 0, i64 0))
  call fastcc void @"_ZZN4SkSL11IRGenerator14CheckModifiersERKNS_7ContextEiRKNS_9ModifiersEiiENK3$_4clENS_6Layout4FlagEPKc"(%class.anon.249* nonnull %12, i32 2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.46, i64 0, i64 0))
  call fastcc void @"_ZZN4SkSL11IRGenerator14CheckModifiersERKNS_7ContextEiRKNS_9ModifiersEiiENK3$_4clENS_6Layout4FlagEPKc"(%class.anon.249* nonnull %12, i32 4, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.47, i64 0, i64 0))
  call fastcc void @"_ZZN4SkSL11IRGenerator14CheckModifiersERKNS_7ContextEiRKNS_9ModifiersEiiENK3$_4clENS_6Layout4FlagEPKc"(%class.anon.249* nonnull %12, i32 8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.48, i64 0, i64 0))
  call fastcc void @"_ZZN4SkSL11IRGenerator14CheckModifiersERKNS_7ContextEiRKNS_9ModifiersEiiENK3$_4clENS_6Layout4FlagEPKc"(%class.anon.249* nonnull %12, i32 16, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.49, i64 0, i64 0))
  call fastcc void @"_ZZN4SkSL11IRGenerator14CheckModifiersERKNS_7ContextEiRKNS_9ModifiersEiiENK3$_4clENS_6Layout4FlagEPKc"(%class.anon.249* nonnull %12, i32 32, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.50, i64 0, i64 0))
  call fastcc void @"_ZZN4SkSL11IRGenerator14CheckModifiersERKNS_7ContextEiRKNS_9ModifiersEiiENK3$_4clENS_6Layout4FlagEPKc"(%class.anon.249* nonnull %12, i32 64, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.51, i64 0, i64 0))
  call fastcc void @"_ZZN4SkSL11IRGenerator14CheckModifiersERKNS_7ContextEiRKNS_9ModifiersEiiENK3$_4clENS_6Layout4FlagEPKc"(%class.anon.249* nonnull %12, i32 128, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.52, i64 0, i64 0))
  call fastcc void @"_ZZN4SkSL11IRGenerator14CheckModifiersERKNS_7ContextEiRKNS_9ModifiersEiiENK3$_4clENS_6Layout4FlagEPKc"(%class.anon.249* nonnull %12, i32 256, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53, i64 0, i64 0))
  call fastcc void @"_ZZN4SkSL11IRGenerator14CheckModifiersERKNS_7ContextEiRKNS_9ModifiersEiiENK3$_4clENS_6Layout4FlagEPKc"(%class.anon.249* nonnull %12, i32 512, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0))
  call fastcc void @"_ZZN4SkSL11IRGenerator14CheckModifiersERKNS_7ContextEiRKNS_9ModifiersEiiENK3$_4clENS_6Layout4FlagEPKc"(%class.anon.249* nonnull %12, i32 1024, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.55, i64 0, i64 0))
  call fastcc void @"_ZZN4SkSL11IRGenerator14CheckModifiersERKNS_7ContextEiRKNS_9ModifiersEiiENK3$_4clENS_6Layout4FlagEPKc"(%class.anon.249* nonnull %12, i32 2048, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.56, i64 0, i64 0))
  call fastcc void @"_ZZN4SkSL11IRGenerator14CheckModifiersERKNS_7ContextEiRKNS_9ModifiersEiiENK3$_4clENS_6Layout4FlagEPKc"(%class.anon.249* nonnull %12, i32 4096, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.57, i64 0, i64 0))
  call fastcc void @"_ZZN4SkSL11IRGenerator14CheckModifiersERKNS_7ContextEiRKNS_9ModifiersEiiENK3$_4clENS_6Layout4FlagEPKc"(%class.anon.249* nonnull %12, i32 8192, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.58, i64 0, i64 0))
  call fastcc void @"_ZZN4SkSL11IRGenerator14CheckModifiersERKNS_7ContextEiRKNS_9ModifiersEiiENK3$_4clENS_6Layout4FlagEPKc"(%class.anon.249* nonnull %12, i32 16384, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.59, i64 0, i64 0))
  call fastcc void @"_ZZN4SkSL11IRGenerator14CheckModifiersERKNS_7ContextEiRKNS_9ModifiersEiiENK3$_4clENS_6Layout4FlagEPKc"(%class.anon.249* nonnull %12, i32 32768, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.60, i64 0, i64 0))
  call fastcc void @"_ZZN4SkSL11IRGenerator14CheckModifiersERKNS_7ContextEiRKNS_9ModifiersEiiENK3$_4clENS_6Layout4FlagEPKc"(%class.anon.249* nonnull %12, i32 65536, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.61, i64 0, i64 0))
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Variable"* @_ZN4SkSL11IRGenerator10convertVarEiRKNS_9ModifiersEPKNS_4TypeENS_14StringFragmentEbNSt3__110unique_ptrINS_10ExpressionENS8_14default_deleteISA_EEEENS_15VariableStorageE(%"class.SkSL::IRGenerator"* nocapture readonly, i32, %"struct.SkSL::Modifiers"* dereferenceable(80), %"class.SkSL::Type"*, i8*, i64, i1 zeroext, i64, i8 signext) local_unnamed_addr #0 align 2 {
  %10 = alloca <2 x i64>, align 16
  %11 = bitcast <2 x i64>* %10 to %"struct.SkSL::StringFragment"*
  %12 = bitcast <2 x i64>* %10 to i8**
  store i8* %4, i8** %12, align 16
  %13 = getelementptr inbounds %"struct.SkSL::StringFragment", %"struct.SkSL::StringFragment"* %11, i64 0, i32 1
  store i64 %5, i64* %13, align 8
  %14 = inttoptr i64 %7 to %"class.SkSL::Expression"*
  %15 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %2, i64 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %41

18:                                               ; preds = %9
  %19 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %2, i64 0, i32 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %41

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %2, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = and i32 %24, 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %41, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %29 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %28, align 8
  %30 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %29, i64 0, i32 4
  %31 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %30, align 8
  %32 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %31, i64 0, i32 0
  %33 = load i8, i8* %32, align 8
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %27
  %36 = call zeroext i1 @_ZNK4SkSL14StringFragmentneEPKc(%"struct.SkSL::StringFragment"* nonnull %11, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @_ZN4SkSL8Compiler14FRAGCOLOR_NAMEE, i64 0, i64 0)) #14
  br i1 %36, label %37, label %41

37:                                               ; preds = %35
  %38 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %28, align 8
  %39 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %38, i64 0, i32 1
  %40 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %39, align 8
  call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %40, i32 %1, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.25, i64 0, i64 0))
  br label %41

41:                                               ; preds = %22, %37, %35, %27, %18, %9
  br i1 %6, label %42, label %49

42:                                               ; preds = %41
  %43 = call i32 @_ZN4SkSL11IRGenerator16convertArraySizeERKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEE(%"class.SkSL::IRGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %3, %"class.SkSL::Expression"* %14)
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %89, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 4, i32 0
  %47 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %46, align 8
  %48 = call %"class.SkSL::Type"* @_ZN4SkSL11SymbolTable17addArrayDimensionEPKNS_4TypeEi(%"class.SkSL::SymbolTable"* %47, %"class.SkSL::Type"* %3, i32 %43) #14
  br label %49

49:                                               ; preds = %41, %45
  %50 = phi %"class.SkSL::Type"* [ %48, %45 ], [ %3, %41 ]
  %51 = phi i64 [ 0, %45 ], [ %7, %41 ]
  %52 = ptrtoint %"class.SkSL::Type"* %50 to i64
  %53 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %54 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %53, align 8
  %55 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %54, i64 0, i32 3
  %56 = load %"class.SkSL::ModifiersPool"*, %"class.SkSL::ModifiersPool"** %55, align 8
  %57 = getelementptr inbounds %"class.SkSL::ModifiersPool", %"class.SkSL::ModifiersPool"* %56, i64 0, i32 0, i32 0
  %58 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %57, %"struct.SkSL::Modifiers"* dereferenceable(80) %2, %"struct.SkSL::Modifiers"* dereferenceable(80) %2) #14
  %59 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %58, 0
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %59, i64 2
  %61 = ptrtoint %"struct.std::__1::__hash_node_base"* %60 to i64
  %62 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 15
  %63 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 64) #14
  %64 = load <2 x i64>, <2 x i64>* %10, align 16
  %65 = load i8, i8* %62, align 1, !range !2
  %66 = bitcast i8* %63 to i32 (...)***
  %67 = getelementptr inbounds i8, i8* %63, i64 8
  %68 = bitcast i8* %67 to i32*
  store i32 %1, i32* %68, align 8
  %69 = getelementptr inbounds i8, i8* %63, i64 12
  %70 = bitcast i8* %69 to i32*
  store i32 15, i32* %70, align 4
  %71 = getelementptr inbounds i8, i8* %63, i64 16
  %72 = bitcast i8* %71 to <2 x i64>*
  store <2 x i64> %64, <2 x i64>* %72, align 8
  %73 = getelementptr inbounds i8, i8* %63, i64 32
  %74 = bitcast i8* %73 to i64*
  store i64 %52, i64* %74, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL8VariableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %66, align 8
  %75 = getelementptr inbounds i8, i8* %63, i64 40
  %76 = bitcast i8* %75 to %"class.SkSL::VarDeclaration"**
  store %"class.SkSL::VarDeclaration"* null, %"class.SkSL::VarDeclaration"** %76, align 8
  %77 = getelementptr inbounds i8, i8* %63, i64 48
  %78 = bitcast i8* %77 to i64*
  store i64 %61, i64* %78, align 8
  %79 = getelementptr inbounds i8, i8* %63, i64 56
  store i8 %8, i8* %79, align 8
  %80 = getelementptr inbounds i8, i8* %63, i64 57
  store i8 %65, i8* %80, align 1
  %81 = ptrtoint i8* %63 to i64
  %82 = icmp eq i64 %51, 0
  br i1 %82, label %89, label %83

83:                                               ; preds = %49
  %84 = inttoptr i64 %51 to %"class.SkSL::Expression"*
  %85 = inttoptr i64 %51 to void (%"class.SkSL::Expression"*)***
  %86 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %85, align 8
  %87 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %86, i64 1
  %88 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %87, align 8
  call void %88(%"class.SkSL::Expression"* nonnull %84) #14
  br label %89

89:                                               ; preds = %42, %49, %83
  %90 = phi i64 [ %81, %49 ], [ %81, %83 ], [ 0, %42 ]
  %91 = inttoptr i64 %90 to %"class.SkSL::Variable"*
  ret %"class.SkSL::Variable"* %91
}

declare zeroext i1 @_ZNK4SkSL14StringFragmentneEPKc(%"struct.SkSL::StringFragment"*, i8*) local_unnamed_addr #2

declare %"class.SkSL::Type"* @_ZN4SkSL11SymbolTable17addArrayDimensionEPKNS_4TypeEi(%"class.SkSL::SymbolTable"*, %"class.SkSL::Type"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Statement"* @_ZN4SkSL11IRGenerator21convertVarDeclarationENSt3__110unique_ptrINS_8VariableENS1_14default_deleteIS3_EEEENS2_INS_10ExpressionENS4_IS7_EEEE(%"class.SkSL::IRGenerator"* nocapture, %"class.SkSL::Variable"*, %"class.SkSL::Expression"*) local_unnamed_addr #0 align 2 {
  %4 = alloca <2 x i64>, align 16
  %5 = bitcast <2 x i64>* %4 to %"struct.SkSL::StringFragment"*
  %6 = alloca %"class.std::__1::unique_ptr.165", align 8
  %7 = alloca <2 x i64>, align 16
  %8 = bitcast <2 x i64>* %7 to %"struct.SkSL::StringFragment"*
  %9 = alloca <2 x i64>, align 16
  %10 = bitcast <2 x i64>* %9 to %"struct.SkSL::StringFragment"*
  %11 = ptrtoint %"class.SkSL::Variable"* %1 to i64
  %12 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %13 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %12, align 8
  %14 = tail call %"class.SkSL::Statement"* @_ZN4SkSL14VarDeclaration7ConvertERKNS_7ContextEPNS_8VariableENSt3__110unique_ptrINS_10ExpressionENS6_14default_deleteIS8_EEEE(%"class.SkSL::Context"* dereferenceable(744) %13, %"class.SkSL::Variable"* %1, %"class.SkSL::Expression"* %2) #14
  %15 = icmp eq %"class.SkSL::Statement"* %14, null
  br i1 %15, label %108, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %1, i64 0, i32 3
  %18 = load i8, i8* %17, align 8
  %19 = icmp eq i8 %18, 0
  %20 = bitcast <2 x i64>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #14
  br i1 %19, label %21, label %36

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %1, i64 0, i32 0, i32 1, i32 0
  %23 = bitcast i8** %22 to <2 x i64>*
  %24 = load <2 x i64>, <2 x i64>* %23, align 8
  store <2 x i64> %24, <2 x i64>* %7, align 16
  %25 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqEPKc(%"struct.SkSL::StringFragment"* nonnull %8, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @_ZN4SkSL8Compiler14FRAGCOLOR_NAMEE, i64 0, i64 0)) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #14
  br i1 %25, label %28, label %26

26:                                               ; preds = %21
  %27 = load i8, i8* %17, align 8
  br label %37

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %1, i64 0, i32 0, i32 1, i32 1
  %30 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 4, i32 0
  %31 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %30, align 8
  %32 = load i8*, i8** %22, align 8
  %33 = load i64, i64* %29, align 8
  %34 = call %"class.SkSL::Symbol"* @_ZN4SkSL11SymbolTableixENS_14StringFragmentE(%"class.SkSL::SymbolTable"* %31, i8* %32, i64 %33) #14
  %35 = icmp eq %"class.SkSL::Symbol"* %34, null
  br i1 %35, label %67, label %103

36:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #14
  br label %37

37:                                               ; preds = %26, %36
  %38 = phi i8 [ %27, %26 ], [ %18, %36 ]
  %39 = bitcast <2 x i64>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #14
  %40 = icmp ult i8 %38, 2
  br i1 %40, label %41, label %66

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %1, i64 0, i32 0, i32 1, i32 0
  %43 = bitcast i8** %42 to <2 x i64>*
  %44 = load <2 x i64>, <2 x i64>* %43, align 8
  store <2 x i64> %44, <2 x i64>* %9, align 16
  %45 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqEPKc(%"struct.SkSL::StringFragment"* nonnull %10, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @_ZN4SkSL8Compiler13RTADJUST_NAMEE, i64 0, i64 0)) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #14
  br i1 %45, label %46, label %67

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 12
  %48 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %47, align 8
  %49 = icmp eq %"class.SkSL::Variable"* %48, null
  br i1 %49, label %50, label %96

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %1, i64 0, i32 0, i32 2
  %52 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %51, align 8
  %53 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %12, align 8
  %54 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %53, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %55 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %54, align 8
  %56 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %56) #14
  %57 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %52, i64 0, i32 0, i32 1, i32 0
  %58 = bitcast i8** %57 to <2 x i64>*
  %59 = load <2 x i64>, <2 x i64>* %58, align 8
  store <2 x i64> %59, <2 x i64>* %4, align 16
  %60 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %55, i64 0, i32 0, i32 1, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %55, i64 0, i32 0, i32 1, i32 1
  %63 = load i64, i64* %62, align 8
  %64 = call zeroext i1 @_ZNK4SkSL14StringFragmentneES0_(%"struct.SkSL::StringFragment"* nonnull %5, i8* %61, i64 %63) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %56) #14
  br i1 %64, label %96, label %65

65:                                               ; preds = %50
  store %"class.SkSL::Variable"* %1, %"class.SkSL::Variable"** %47, align 8
  br label %67

66:                                               ; preds = %37
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #14
  br label %67

67:                                               ; preds = %28, %41, %65, %66
  %68 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 4, i32 0
  %69 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %68, align 8
  %70 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %1, i64 0, i32 0
  call void @_ZN4SkSL11SymbolTable19addWithoutOwnershipEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %69, %"class.SkSL::Symbol"* %70) #14
  %71 = bitcast %"class.std::__1::unique_ptr.165"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #14
  %72 = bitcast %"class.std::__1::unique_ptr.165"* %6 to i64*
  store i64 %11, i64* %72, align 8
  %73 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %69, i64 0, i32 1, i32 0, i32 1
  %74 = load %"class.std::__1::unique_ptr.165"*, %"class.std::__1::unique_ptr.165"** %73, align 8
  %75 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %69, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %76 = load %"class.std::__1::unique_ptr.165"*, %"class.std::__1::unique_ptr.165"** %75, align 8
  %77 = icmp ult %"class.std::__1::unique_ptr.165"* %74, %76
  br i1 %77, label %78, label %84

78:                                               ; preds = %67
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %79, align 8
  %80 = bitcast %"class.std::__1::unique_ptr.165"* %74 to i64*
  store i64 %11, i64* %80, align 8
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %74, i64 1
  %82 = ptrtoint %"class.std::__1::unique_ptr.165"* %81 to i64
  %83 = bitcast %"class.std::__1::unique_ptr.165"** %73 to i64*
  store i64 %82, i64* %83, align 8
  br label %86

84:                                               ; preds = %67
  %85 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %69, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.163"* %85, %"class.std::__1::unique_ptr.165"* nonnull dereferenceable(8) %6) #14
  br label %86

86:                                               ; preds = %84, %78
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %6, i64 0, i32 0, i32 0, i32 0
  %88 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %87, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %87, align 8
  %89 = icmp eq %"class.SkSL::Symbol"* %88, null
  br i1 %89, label %95, label %90

90:                                               ; preds = %86
  %91 = bitcast %"class.SkSL::Symbol"* %88 to void (%"class.SkSL::Symbol"*)***
  %92 = load void (%"class.SkSL::Symbol"*)**, void (%"class.SkSL::Symbol"*)*** %91, align 8
  %93 = getelementptr inbounds void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %92, i64 1
  %94 = load void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %93, align 8
  call void %94(%"class.SkSL::Symbol"* nonnull %88) #14
  br label %95

95:                                               ; preds = %86, %90
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #14
  br label %115

96:                                               ; preds = %50, %46
  %97 = phi i8* [ getelementptr inbounds ([38 x i8], [38 x i8]* @.str.26, i64 0, i64 0), %46 ], [ getelementptr inbounds ([36 x i8], [36 x i8]* @.str.27, i64 0, i64 0), %50 ]
  %98 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %12, align 8
  %99 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %98, i64 0, i32 1
  %100 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %99, align 8
  %101 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %1, i64 0, i32 0, i32 0, i32 1
  %102 = load i32, i32* %101, align 8
  call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %100, i32 %102, i8* %97)
  br label %103

103:                                              ; preds = %96, %28
  %104 = bitcast %"class.SkSL::Statement"* %14 to void (%"class.SkSL::Statement"*)***
  %105 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %104, align 8
  %106 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %105, i64 1
  %107 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %106, align 8
  call void %107(%"class.SkSL::Statement"* nonnull %14) #14
  br label %108

108:                                              ; preds = %3, %103
  %109 = icmp eq %"class.SkSL::Variable"* %1, null
  br i1 %109, label %115, label %110

110:                                              ; preds = %108
  %111 = bitcast %"class.SkSL::Variable"* %1 to void (%"class.SkSL::Variable"*)***
  %112 = load void (%"class.SkSL::Variable"*)**, void (%"class.SkSL::Variable"*)*** %111, align 8
  %113 = getelementptr inbounds void (%"class.SkSL::Variable"*)*, void (%"class.SkSL::Variable"*)** %112, i64 1
  %114 = load void (%"class.SkSL::Variable"*)*, void (%"class.SkSL::Variable"*)** %113, align 8
  call void %114(%"class.SkSL::Variable"* nonnull %1) #14
  br label %115

115:                                              ; preds = %95, %108, %110
  %116 = phi %"class.SkSL::Statement"* [ %14, %95 ], [ null, %108 ], [ null, %110 ]
  ret %"class.SkSL::Statement"* %116
}

declare %"class.SkSL::Statement"* @_ZN4SkSL14VarDeclaration7ConvertERKNS_7ContextEPNS_8VariableENSt3__110unique_ptrINS_10ExpressionENS6_14default_deleteIS8_EEEE(%"class.SkSL::Context"* dereferenceable(744), %"class.SkSL::Variable"*, %"class.SkSL::Expression"*) local_unnamed_addr #2

declare %"class.SkSL::Symbol"* @_ZN4SkSL11SymbolTableixENS_14StringFragmentE(%"class.SkSL::SymbolTable"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Statement"* @_ZN4SkSL11IRGenerator21convertVarDeclarationEiRKNS_9ModifiersEPKNS_4TypeENS_14StringFragmentEbNSt3__110unique_ptrINS_10ExpressionENS8_14default_deleteISA_EEEESD_NS_15VariableStorageE(%"class.SkSL::IRGenerator"* nocapture, i32, %"struct.SkSL::Modifiers"* dereferenceable(80), %"class.SkSL::Type"*, i8*, i64, i1 zeroext, i64, i64, i8 signext) local_unnamed_addr #0 align 2 {
  %11 = tail call %"class.SkSL::Variable"* @_ZN4SkSL11IRGenerator10convertVarEiRKNS_9ModifiersEPKNS_4TypeENS_14StringFragmentEbNSt3__110unique_ptrINS_10ExpressionENS8_14default_deleteISA_EEEENS_15VariableStorageE(%"class.SkSL::IRGenerator"* %0, i32 %1, %"struct.SkSL::Modifiers"* dereferenceable(80) %2, %"class.SkSL::Type"* %3, i8* %4, i64 %5, i1 zeroext %6, i64 %7, i8 signext %9)
  %12 = icmp eq %"class.SkSL::Variable"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = inttoptr i64 %8 to %"class.SkSL::Expression"*
  %15 = tail call %"class.SkSL::Statement"* @_ZN4SkSL11IRGenerator21convertVarDeclarationENSt3__110unique_ptrINS_8VariableENS1_14default_deleteIS3_EEEENS2_INS_10ExpressionENS4_IS7_EEEE(%"class.SkSL::IRGenerator"* %0, %"class.SkSL::Variable"* nonnull %11, %"class.SkSL::Expression"* %14)
  br label %24

16:                                               ; preds = %10
  %17 = icmp eq i64 %8, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %16
  %19 = inttoptr i64 %8 to %"class.SkSL::Expression"*
  %20 = inttoptr i64 %8 to void (%"class.SkSL::Expression"*)***
  %21 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %21, i64 1
  %23 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %22, align 8
  tail call void %23(%"class.SkSL::Expression"* nonnull %19) #14
  br label %24

24:                                               ; preds = %18, %16, %13
  %25 = phi %"class.SkSL::Statement"* [ %15, %13 ], [ null, %16 ], [ null, %18 ]
  ret %"class.SkSL::Statement"* %25
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Type"* @_ZN4SkSL11IRGenerator11convertTypeERKNS_7ASTNodeEb(%"class.SkSL::IRGenerator"*, %"struct.SkSL::ASTNode"* nocapture readonly dereferenceable(160), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = alloca %"class.SkSL::String", align 8
  %10 = alloca %"class.SkSL::String", align 8
  %11 = alloca %"class.SkSL::String", align 8
  %12 = alloca %"class.SkSL::String", align 8
  %13 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 1, i32 0, i64 0
  %14 = bitcast i8* %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 1, i32 0, i64 8
  %17 = bitcast i8* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 4, i32 0
  %20 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %19, align 8
  %21 = tail call %"class.SkSL::Symbol"* @_ZN4SkSL11SymbolTableixENS_14StringFragmentE(%"class.SkSL::SymbolTable"* %20, i8* %15, i64 %18) #14
  %22 = icmp eq %"class.SkSL::Symbol"* %21, null
  br i1 %22, label %27, label %23

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %21, i64 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 13
  br i1 %26, label %87, label %27

27:                                               ; preds = %3, %23
  %28 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %29 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %28, align 8
  %30 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %29, i64 0, i32 1
  %31 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %30, align 8
  %32 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #14
  %35 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #14
  %36 = icmp ugt i64 %18, -17
  br i1 %36, label %37, label %39

37:                                               ; preds = %27
  %38 = bitcast %"class.SkSL::String"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %38) #16
  unreachable

39:                                               ; preds = %27
  %40 = icmp ult i64 %18, 23
  br i1 %40, label %49, label %41

41:                                               ; preds = %39
  %42 = add nuw i64 %18, 16
  %43 = and i64 %42, -16
  %44 = tail call i8* @_Znwm(i64 %43) #15
  %45 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %44, i8** %45, align 8
  %46 = or i64 %43, -9223372036854775808
  %47 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %18, i64* %48, align 8
  br label %54

49:                                               ; preds = %39
  %50 = trunc i64 %18 to i8
  %51 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  store i8 %50, i8* %52, align 1
  %53 = icmp eq i64 %18, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %49, %41
  %55 = phi i8* [ %44, %41 ], [ %35, %49 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %55, i8* align 1 %15, i64 %18, i1 false) #14
  br label %56

56:                                               ; preds = %49, %54
  %57 = phi i8* [ %35, %49 ], [ %55, %54 ]
  %58 = getelementptr inbounds i8, i8* %57, i64 %18
  store i8 0, i8* %58, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.72, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %6) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::String"* nonnull %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #14
  %59 = bitcast %"class.SkSL::ErrorReporter"* %31 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %60 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %60, i64 2
  %62 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %61, align 8
  call void %62(%"class.SkSL::ErrorReporter"* %31, i32 %33, %"class.SkSL::String"* nonnull %4) #14
  %63 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %56
  %68 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  call void @_ZdlPv(i8* %69) #15
  br label %70

70:                                               ; preds = %56, %67
  %71 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  call void @_ZdlPv(i8* %77) #15
  br label %78

78:                                               ; preds = %70, %75
  %79 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  call void @_ZdlPv(i8* %85) #15
  br label %86

86:                                               ; preds = %78, %83
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #14
  br label %251

87:                                               ; preds = %23
  %88 = bitcast %"class.SkSL::Symbol"* %21 to %"class.SkSL::Type"*
  %89 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 0
  %90 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 4, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = icmp sgt i32 %91, -1
  %93 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %21, i64 1, i32 2
  %94 = bitcast %"class.SkSL::Type"** %93 to i32*
  %95 = load i32, i32* %94, align 8
  %96 = icmp ne i32 %95, 12
  %97 = or i1 %96, %2
  br i1 %97, label %158, label %98

98:                                               ; preds = %87
  %99 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %100 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %99, align 8
  %101 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %100, i64 0, i32 1
  %102 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %101, align 8
  %103 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 2
  %104 = load i32, i32* %103, align 4
  %105 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %105) #14
  %106 = bitcast %"class.SkSL::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %106) #14
  %107 = icmp ugt i64 %18, -17
  br i1 %107, label %108, label %110

108:                                              ; preds = %98
  %109 = bitcast %"class.SkSL::String"* %9 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %109) #16
  unreachable

110:                                              ; preds = %98
  %111 = icmp ult i64 %18, 23
  br i1 %111, label %120, label %112

112:                                              ; preds = %110
  %113 = add nuw i64 %18, 16
  %114 = and i64 %113, -16
  %115 = tail call i8* @_Znwm(i64 %114) #15
  %116 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %115, i8** %116, align 8
  %117 = or i64 %114, -9223372036854775808
  %118 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %117, i64* %118, align 8
  %119 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %18, i64* %119, align 8
  br label %125

120:                                              ; preds = %110
  %121 = trunc i64 %18 to i8
  %122 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %123 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %122, i64 0, i32 1, i32 0
  store i8 %121, i8* %123, align 1
  %124 = icmp eq i64 %18, 0
  br i1 %124, label %127, label %125

125:                                              ; preds = %120, %112
  %126 = phi i8* [ %115, %112 ], [ %106, %120 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %126, i8* align 1 %15, i64 %18, i1 false) #14
  br label %127

127:                                              ; preds = %120, %125
  %128 = phi i8* [ %106, %120 ], [ %126, %125 ]
  %129 = getelementptr inbounds i8, i8* %128, i64 %18
  store i8 0, i8* %129, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.73, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %9) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %7, %"class.SkSL::String"* nonnull %8, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.74, i64 0, i64 0)) #14
  %130 = bitcast %"class.SkSL::ErrorReporter"* %102 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %131 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %130, align 8
  %132 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %131, i64 2
  %133 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %132, align 8
  call void %133(%"class.SkSL::ErrorReporter"* %102, i32 %104, %"class.SkSL::String"* nonnull %7) #14
  %134 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %135 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %134, i64 0, i32 1, i32 0
  %136 = load i8, i8* %135, align 1
  %137 = icmp slt i8 %136, 0
  br i1 %137, label %138, label %141

138:                                              ; preds = %127
  %139 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load i8*, i8** %139, align 8
  call void @_ZdlPv(i8* %140) #15
  br label %141

141:                                              ; preds = %127, %138
  %142 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %143 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %142, i64 0, i32 1, i32 0
  %144 = load i8, i8* %143, align 1
  %145 = icmp slt i8 %144, 0
  br i1 %145, label %146, label %149

146:                                              ; preds = %141
  %147 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = load i8*, i8** %147, align 8
  call void @_ZdlPv(i8* %148) #15
  br label %149

149:                                              ; preds = %141, %146
  %150 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %151 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %150, i64 0, i32 1, i32 0
  %152 = load i8, i8* %151, align 1
  %153 = icmp slt i8 %152, 0
  br i1 %153, label %154, label %157

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load i8*, i8** %155, align 8
  call void @_ZdlPv(i8* %156) #15
  br label %157

157:                                              ; preds = %149, %154
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %106) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %105) #14
  br label %251

158:                                              ; preds = %87
  %159 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 15
  %160 = load i8, i8* %159, align 4, !range !2
  %161 = icmp eq i8 %160, 0
  br i1 %161, label %162, label %224

162:                                              ; preds = %158
  %163 = tail call zeroext i1 @_ZN4SkSL11IRGenerator25typeContainsPrivateFieldsERKNS_4TypeE(%"class.SkSL::IRGenerator"* %0, %"class.SkSL::Type"* nonnull dereferenceable(184) %88)
  br i1 %163, label %164, label %224

164:                                              ; preds = %162
  %165 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %166 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %165, align 8
  %167 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %166, i64 0, i32 1
  %168 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %167, align 8
  %169 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 2
  %170 = load i32, i32* %169, align 4
  %171 = bitcast %"class.SkSL::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %171) #14
  %172 = bitcast %"class.SkSL::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %172) #14
  %173 = icmp ugt i64 %18, -17
  br i1 %173, label %174, label %176

174:                                              ; preds = %164
  %175 = bitcast %"class.SkSL::String"* %12 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %175) #16
  unreachable

176:                                              ; preds = %164
  %177 = icmp ult i64 %18, 23
  br i1 %177, label %186, label %178

178:                                              ; preds = %176
  %179 = add nuw i64 %18, 16
  %180 = and i64 %179, -16
  %181 = tail call i8* @_Znwm(i64 %180) #15
  %182 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %181, i8** %182, align 8
  %183 = or i64 %180, -9223372036854775808
  %184 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %183, i64* %184, align 8
  %185 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %18, i64* %185, align 8
  br label %191

186:                                              ; preds = %176
  %187 = trunc i64 %18 to i8
  %188 = bitcast %"class.SkSL::String"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %189 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %188, i64 0, i32 1, i32 0
  store i8 %187, i8* %189, align 1
  %190 = icmp eq i64 %18, 0
  br i1 %190, label %193, label %191

191:                                              ; preds = %186, %178
  %192 = phi i8* [ %181, %178 ], [ %172, %186 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %192, i8* align 1 %15, i64 %18, i1 false) #14
  br label %193

193:                                              ; preds = %186, %191
  %194 = phi i8* [ %172, %186 ], [ %192, %191 ]
  %195 = getelementptr inbounds i8, i8* %194, i64 %18
  store i8 0, i8* %195, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %11, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.73, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %12) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %10, %"class.SkSL::String"* nonnull %11, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.75, i64 0, i64 0)) #14
  %196 = bitcast %"class.SkSL::ErrorReporter"* %168 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %197 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %196, align 8
  %198 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %197, i64 2
  %199 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %198, align 8
  call void %199(%"class.SkSL::ErrorReporter"* %168, i32 %170, %"class.SkSL::String"* nonnull %10) #14
  %200 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %201 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %200, i64 0, i32 1, i32 0
  %202 = load i8, i8* %201, align 1
  %203 = icmp slt i8 %202, 0
  br i1 %203, label %204, label %207

204:                                              ; preds = %193
  %205 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %206 = load i8*, i8** %205, align 8
  call void @_ZdlPv(i8* %206) #15
  br label %207

207:                                              ; preds = %193, %204
  %208 = bitcast %"class.SkSL::String"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %209 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %208, i64 0, i32 1, i32 0
  %210 = load i8, i8* %209, align 1
  %211 = icmp slt i8 %210, 0
  br i1 %211, label %212, label %215

212:                                              ; preds = %207
  %213 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %214 = load i8*, i8** %213, align 8
  call void @_ZdlPv(i8* %214) #15
  br label %215

215:                                              ; preds = %207, %212
  %216 = bitcast %"class.SkSL::String"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %217 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %216, i64 0, i32 1, i32 0
  %218 = load i8, i8* %217, align 1
  %219 = icmp slt i8 %218, 0
  br i1 %219, label %220, label %223

220:                                              ; preds = %215
  %221 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %222 = load i8*, i8** %221, align 8
  call void @_ZdlPv(i8* %222) #15
  br label %223

223:                                              ; preds = %215, %220
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %172) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %171) #14
  br label %251

224:                                              ; preds = %158, %162
  br i1 %92, label %225, label %251

225:                                              ; preds = %224
  %226 = load %"class.std::__1::vector.52"*, %"class.std::__1::vector.52"** %89, align 8
  %227 = load i32, i32* %90, align 4
  %228 = sext i32 %227 to i64
  %229 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %226, i64 0, i32 0, i32 0
  %230 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %229, align 8
  %231 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %230, i64 %228, i32 3
  %232 = load i32, i32* %231, align 8
  %233 = icmp eq i32 %232, 22
  br i1 %233, label %234, label %241

234:                                              ; preds = %225
  %235 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 2
  %236 = load i32, i32* %235, align 4
  %237 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %238 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %237, align 8
  %239 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %238, i64 0, i32 1
  %240 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %239, align 8
  tail call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %240, i32 %236, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0)) #14
  br label %251

241:                                              ; preds = %225
  %242 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %230, i64 %228
  %243 = tail call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator17convertExpressionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %242) #14
  %244 = icmp eq %"class.SkSL::Expression"* %243, null
  br i1 %244, label %251, label %245

245:                                              ; preds = %241
  %246 = tail call i32 @_ZN4SkSL11IRGenerator16convertArraySizeERKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEE(%"class.SkSL::IRGenerator"* %0, %"class.SkSL::Type"* nonnull dereferenceable(184) %88, %"class.SkSL::Expression"* nonnull %243) #14
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %251, label %248

248:                                              ; preds = %245
  %249 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %19, align 8
  %250 = tail call %"class.SkSL::Type"* @_ZN4SkSL11SymbolTable17addArrayDimensionEPKNS_4TypeEi(%"class.SkSL::SymbolTable"* %249, %"class.SkSL::Type"* nonnull %88, i32 %246) #14
  br label %251

251:                                              ; preds = %241, %234, %245, %224, %248, %157, %223, %86
  %252 = phi %"class.SkSL::Type"* [ null, %86 ], [ null, %223 ], [ null, %157 ], [ %250, %248 ], [ %88, %224 ], [ null, %245 ], [ null, %234 ], [ null, %241 ]
  ret %"class.SkSL::Type"* %252
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::ModifiersDeclaration"* @_ZN4SkSL11IRGenerator27convertModifiersDeclarationERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* nocapture, %"struct.SkSL::ASTNode"* nocapture readonly dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.SkSL::Modifiers", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %6 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %5, align 8
  %7 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 4
  %8 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %7, align 8
  %9 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %8, i64 0, i32 0
  %10 = load i8, i8* %9, align 8
  %11 = icmp ult i8 %10, 3
  br i1 %11, label %17, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 1
  %14 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %13, align 8
  %15 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 2
  %16 = load i32, i32* %15, align 4
  tail call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %14, i32 %16, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.28, i64 0, i64 0))
  br label %91

17:                                               ; preds = %2
  %18 = bitcast %"struct.SkSL::Modifiers"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %18) #14
  %19 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 1, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 8 %19, i64 80, i1 false)
  %20 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %3, i64 0, i32 0
  %21 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %3, i64 0, i32 0, i32 10
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, -1
  br i1 %23, label %52, label %24

24:                                               ; preds = %17
  %25 = load i8, i8* %9, align 8
  %26 = icmp eq i8 %25, 2
  br i1 %26, label %32, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 1
  %29 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %28, align 8
  %30 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 2
  %31 = load i32, i32* %30, align 4
  tail call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %29, i32 %31, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.29, i64 0, i64 0))
  br label %89

32:                                               ; preds = %24
  %33 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 7
  store i32 %22, i32* %33, align 8
  %34 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %6, i64 0, i32 2
  %35 = load %class.GrShaderCaps*, %class.GrShaderCaps** %34, align 8
  %36 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %35, i64 0, i32 2
  %37 = bitcast i56* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = and i64 %38, 4
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %52

41:                                               ; preds = %32
  store i32 -1, i32* %21, align 8
  %42 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #14
  call void @_ZNK4SkSL6Layout11descriptionEv(%"class.SkSL::String"* nonnull sret %4, %"struct.SkSL::Layout"* nonnull %20)
  %43 = call zeroext i1 @_ZNK4SkSL6StringeqEPKc(%"class.SkSL::String"* nonnull %4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.30, i64 0, i64 0)) #14
  %44 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %41
  %49 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  call void @_ZdlPv(i8* %50) #15
  br label %51

51:                                               ; preds = %41, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #14
  br i1 %43, label %89, label %52

52:                                               ; preds = %32, %17, %51
  %53 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %3, i64 0, i32 0, i32 9
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, -1
  br i1 %55, label %71, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 7
  %58 = load i32, i32* %57, align 8
  %59 = icmp sgt i32 %58, 0
  br i1 %59, label %60, label %71

60:                                               ; preds = %56
  %61 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %5, align 8
  %62 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %61, i64 0, i32 2
  %63 = load %class.GrShaderCaps*, %class.GrShaderCaps** %62, align 8
  %64 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %63, i64 0, i32 2
  %65 = bitcast i56* %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = and i64 %66, 4
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %71

69:                                               ; preds = %60
  %70 = mul nsw i32 %58, %54
  store i32 %70, i32* %53, align 4
  br label %71

71:                                               ; preds = %60, %52, %69, %56
  %72 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %5, align 8
  %73 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %72, i64 0, i32 3
  %74 = load %"class.SkSL::ModifiersPool"*, %"class.SkSL::ModifiersPool"** %73, align 8
  %75 = getelementptr inbounds %"class.SkSL::ModifiersPool", %"class.SkSL::ModifiersPool"* %74, i64 0, i32 0, i32 0
  %76 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %75, %"struct.SkSL::Modifiers"* nonnull dereferenceable(80) %3, %"struct.SkSL::Modifiers"* nonnull dereferenceable(80) %3) #14
  %77 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %76, 0
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %77, i64 2
  %79 = ptrtoint %"struct.std::__1::__hash_node_base"* %78 to i64
  %80 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 24) #14
  %81 = getelementptr inbounds i8, i8* %80, i64 8
  %82 = bitcast i8* %81 to i32*
  store i32 -1, i32* %82, align 8
  %83 = getelementptr inbounds i8, i8* %80, i64 12
  %84 = bitcast i8* %83 to i32*
  store i32 6, i32* %84, align 4
  %85 = bitcast i8* %80 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL20ModifiersDeclarationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %85, align 8
  %86 = getelementptr inbounds i8, i8* %80, i64 16
  %87 = bitcast i8* %86 to i64*
  store i64 %79, i64* %87, align 8
  %88 = ptrtoint i8* %80 to i64
  br label %89

89:                                               ; preds = %51, %71, %27
  %90 = phi i64 [ %88, %71 ], [ 0, %27 ], [ 0, %51 ]
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %18) #14
  br label %91

91:                                               ; preds = %89, %12
  %92 = phi i64 [ %90, %89 ], [ 0, %12 ]
  %93 = inttoptr i64 %92 to %"class.SkSL::ModifiersDeclaration"*
  ret %"class.SkSL::ModifiersDeclaration"* %93
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL6Layout11descriptionEv(%"class.SkSL::String"* noalias sret, %"struct.SkSL::Layout"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = alloca %"class.SkSL::String", align 8
  %10 = alloca %"class.SkSL::String", align 8
  %11 = alloca %"class.SkSL::String", align 8
  %12 = alloca %"class.SkSL::String", align 8
  %13 = alloca %"class.SkSL::String", align 8
  %14 = alloca %"class.SkSL::String", align 8
  %15 = alloca %"class.SkSL::String", align 8
  %16 = alloca %"class.SkSL::String", align 8
  %17 = alloca %"class.SkSL::String", align 8
  %18 = alloca %"class.SkSL::String", align 8
  %19 = alloca %"class.SkSL::String", align 8
  %20 = alloca %"class.SkSL::String", align 8
  %21 = alloca %"class.SkSL::String", align 8
  %22 = alloca %"class.SkSL::String", align 8
  %23 = alloca %"class.SkSL::String", align 8
  %24 = alloca %"class.SkSL::String", align 8
  %25 = alloca %"class.SkSL::String", align 8
  %26 = alloca %"class.SkSL::String", align 8
  %27 = alloca %"class.SkSL::String", align 8
  %28 = alloca %"class.SkSL::String", align 8
  %29 = alloca %"class.SkSL::String", align 8
  %30 = alloca %"class.SkSL::String", align 8
  %31 = alloca %"class.SkSL::String", align 8
  %32 = alloca %"class.SkSL::String", align 8
  %33 = alloca %"class.SkSL::String", align 8
  %34 = alloca %"class.SkSL::String", align 8
  %35 = alloca %"class.SkSL::String", align 8
  %36 = alloca %"class.SkSL::String", align 8
  %37 = alloca %"class.SkSL::String", align 8
  %38 = alloca %"class.SkSL::String", align 8
  %39 = alloca %"class.SkSL::String", align 8
  %40 = alloca %"class.SkSL::String", align 8
  %41 = alloca %"class.SkSL::String", align 8
  %42 = alloca %"class.SkSL::String", align 8
  %43 = alloca %"class.SkSL::String", align 8
  %44 = alloca %"class.SkSL::String", align 8
  %45 = alloca %"class.SkSL::String", align 8
  %46 = alloca %"class.SkSL::String", align 8
  %47 = alloca %"class.SkSL::String", align 8
  %48 = alloca %"class.SkSL::String", align 8
  %49 = alloca %"class.SkSL::String", align 8
  %50 = alloca %"class.SkSL::String", align 8
  %51 = alloca %"class.SkSL::String", align 8
  %52 = alloca %"class.SkSL::String", align 8
  %53 = alloca %"class.SkSL::String", align 8
  %54 = alloca %"class.SkSL::String", align 8
  %55 = alloca %"class.SkSL::String", align 8
  %56 = alloca %"class.SkSL::String", align 8
  %57 = alloca %"class.SkSL::String", align 8
  %58 = alloca %"class.SkSL::String", align 8
  %59 = alloca %"class.SkSL::String", align 8
  %60 = alloca %"class.SkSL::String", align 8
  %61 = alloca %"class.SkSL::String", align 8
  %62 = alloca %"class.SkSL::String", align 8
  %63 = alloca %"class.SkSL::String", align 8
  %64 = alloca %"class.SkSL::String", align 8
  %65 = alloca %"class.SkSL::String", align 8
  %66 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = bitcast %"class.SkSL::String"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 24, i1 false) #14
  %69 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = icmp sgt i32 %70, -1
  br i1 %71, label %72, label %111

72:                                               ; preds = %2
  %73 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #14
  %74 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #14
  %75 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #14
  %76 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  store i8 0, i8* %77, align 1, !alias.scope !27
  store i8 0, i8* %75, align 8, !alias.scope !27
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::String"* nonnull %5, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.125, i64 0, i64 0)) #14
  %78 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %78) #14
  %79 = load i32, i32* %69, align 4
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %6, i32 %79) #14
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::String"* nonnull %4, %"class.SkSL::String"* nonnull dereferenceable(24) %6) #14
  %80 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %3) #14
  %81 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %81, i64 0, i32 1, i32 0
  %83 = load i8, i8* %82, align 1
  %84 = icmp slt i8 %83, 0
  br i1 %84, label %85, label %88

85:                                               ; preds = %72
  %86 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load i8*, i8** %86, align 8
  call void @_ZdlPv(i8* %87) #15
  br label %88

88:                                               ; preds = %72, %85
  %89 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %89, i64 0, i32 1, i32 0
  %91 = load i8, i8* %90, align 1
  %92 = icmp slt i8 %91, 0
  br i1 %92, label %93, label %96

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8
  call void @_ZdlPv(i8* %95) #15
  br label %96

96:                                               ; preds = %88, %93
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %78) #14
  %97 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %97, i64 0, i32 1, i32 0
  %99 = load i8, i8* %98, align 1
  %100 = icmp slt i8 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load i8*, i8** %102, align 8
  call void @_ZdlPv(i8* %103) #15
  br label %104

104:                                              ; preds = %96, %101
  %105 = load i8, i8* %77, align 1
  %106 = icmp slt i8 %105, 0
  br i1 %106, label %107, label %110

107:                                              ; preds = %104
  %108 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load i8*, i8** %108, align 8
  call void @_ZdlPv(i8* %109) #15
  br label %110

110:                                              ; preds = %104, %107
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #14
  br label %111

111:                                              ; preds = %110, %2
  %112 = phi i8 [ 0, %110 ], [ 1, %2 ]
  %113 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 2
  %114 = load i32, i32* %113, align 8
  %115 = icmp sgt i32 %114, -1
  br i1 %115, label %116, label %161

116:                                              ; preds = %111
  %117 = bitcast %"class.SkSL::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %117) #14
  %118 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %118) #14
  %119 = bitcast %"class.SkSL::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %119) #14
  %120 = icmp eq i8 %112, 0
  %121 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %122 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %121, i64 0, i32 1, i32 0
  br i1 %120, label %124, label %123

123:                                              ; preds = %116
  store i8 0, i8* %122, align 1, !alias.scope !30
  store i8 0, i8* %119, align 8, !alias.scope !30
  br label %127

124:                                              ; preds = %116
  store i8 2, i8* %122, align 1, !alias.scope !30
  %125 = bitcast %"class.SkSL::String"* %9 to i16*
  store i16 8236, i16* %125, align 8, !alias.scope !30
  %126 = getelementptr inbounds i8, i8* %119, i64 2
  store i8 0, i8* %126, align 2, !alias.scope !30
  br label %127

127:                                              ; preds = %123, %124
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %8, %"class.SkSL::String"* nonnull %9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.126, i64 0, i64 0)) #14
  %128 = bitcast %"class.SkSL::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %128) #14
  %129 = load i32, i32* %113, align 8
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %10, i32 %129) #14
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %7, %"class.SkSL::String"* nonnull %8, %"class.SkSL::String"* nonnull dereferenceable(24) %10) #14
  %130 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %7) #14
  %131 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %132 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %131, i64 0, i32 1, i32 0
  %133 = load i8, i8* %132, align 1
  %134 = icmp slt i8 %133, 0
  br i1 %134, label %135, label %138

135:                                              ; preds = %127
  %136 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load i8*, i8** %136, align 8
  call void @_ZdlPv(i8* %137) #15
  br label %138

138:                                              ; preds = %127, %135
  %139 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %140 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %139, i64 0, i32 1, i32 0
  %141 = load i8, i8* %140, align 1
  %142 = icmp slt i8 %141, 0
  br i1 %142, label %143, label %146

143:                                              ; preds = %138
  %144 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load i8*, i8** %144, align 8
  call void @_ZdlPv(i8* %145) #15
  br label %146

146:                                              ; preds = %138, %143
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %128) #14
  %147 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %148 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %147, i64 0, i32 1, i32 0
  %149 = load i8, i8* %148, align 1
  %150 = icmp slt i8 %149, 0
  br i1 %150, label %151, label %154

151:                                              ; preds = %146
  %152 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load i8*, i8** %152, align 8
  call void @_ZdlPv(i8* %153) #15
  br label %154

154:                                              ; preds = %146, %151
  %155 = load i8, i8* %122, align 1
  %156 = icmp slt i8 %155, 0
  br i1 %156, label %157, label %160

157:                                              ; preds = %154
  %158 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load i8*, i8** %158, align 8
  call void @_ZdlPv(i8* %159) #15
  br label %160

160:                                              ; preds = %154, %157
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %119) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %118) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %117) #14
  br label %161

161:                                              ; preds = %160, %111
  %162 = phi i8 [ 0, %160 ], [ %112, %111 ]
  %163 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 3
  %164 = load i32, i32* %163, align 4
  %165 = icmp sgt i32 %164, -1
  br i1 %165, label %166, label %211

166:                                              ; preds = %161
  %167 = bitcast %"class.SkSL::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %167) #14
  %168 = bitcast %"class.SkSL::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %168) #14
  %169 = bitcast %"class.SkSL::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %169) #14
  %170 = icmp eq i8 %162, 0
  %171 = bitcast %"class.SkSL::String"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %172 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %171, i64 0, i32 1, i32 0
  br i1 %170, label %174, label %173

173:                                              ; preds = %166
  store i8 0, i8* %172, align 1, !alias.scope !33
  store i8 0, i8* %169, align 8, !alias.scope !33
  br label %177

174:                                              ; preds = %166
  store i8 2, i8* %172, align 1, !alias.scope !33
  %175 = bitcast %"class.SkSL::String"* %13 to i16*
  store i16 8236, i16* %175, align 8, !alias.scope !33
  %176 = getelementptr inbounds i8, i8* %169, i64 2
  store i8 0, i8* %176, align 2, !alias.scope !33
  br label %177

177:                                              ; preds = %173, %174
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %12, %"class.SkSL::String"* nonnull %13, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.127, i64 0, i64 0)) #14
  %178 = bitcast %"class.SkSL::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %178) #14
  %179 = load i32, i32* %163, align 4
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %14, i32 %179) #14
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %11, %"class.SkSL::String"* nonnull %12, %"class.SkSL::String"* nonnull dereferenceable(24) %14) #14
  %180 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %11) #14
  %181 = bitcast %"class.SkSL::String"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %182 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %181, i64 0, i32 1, i32 0
  %183 = load i8, i8* %182, align 1
  %184 = icmp slt i8 %183, 0
  br i1 %184, label %185, label %188

185:                                              ; preds = %177
  %186 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = load i8*, i8** %186, align 8
  call void @_ZdlPv(i8* %187) #15
  br label %188

188:                                              ; preds = %177, %185
  %189 = bitcast %"class.SkSL::String"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %190 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %189, i64 0, i32 1, i32 0
  %191 = load i8, i8* %190, align 1
  %192 = icmp slt i8 %191, 0
  br i1 %192, label %193, label %196

193:                                              ; preds = %188
  %194 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %195 = load i8*, i8** %194, align 8
  call void @_ZdlPv(i8* %195) #15
  br label %196

196:                                              ; preds = %188, %193
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %178) #14
  %197 = bitcast %"class.SkSL::String"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %198 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %197, i64 0, i32 1, i32 0
  %199 = load i8, i8* %198, align 1
  %200 = icmp slt i8 %199, 0
  br i1 %200, label %201, label %204

201:                                              ; preds = %196
  %202 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = load i8*, i8** %202, align 8
  call void @_ZdlPv(i8* %203) #15
  br label %204

204:                                              ; preds = %196, %201
  %205 = load i8, i8* %172, align 1
  %206 = icmp slt i8 %205, 0
  br i1 %206, label %207, label %210

207:                                              ; preds = %204
  %208 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %209 = load i8*, i8** %208, align 8
  call void @_ZdlPv(i8* %209) #15
  br label %210

210:                                              ; preds = %204, %207
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %169) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %168) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %167) #14
  br label %211

211:                                              ; preds = %210, %161
  %212 = phi i8 [ 0, %210 ], [ %162, %161 ]
  %213 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 4
  %214 = load i32, i32* %213, align 8
  %215 = icmp sgt i32 %214, -1
  br i1 %215, label %216, label %261

216:                                              ; preds = %211
  %217 = bitcast %"class.SkSL::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %217) #14
  %218 = bitcast %"class.SkSL::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %218) #14
  %219 = bitcast %"class.SkSL::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %219) #14
  %220 = icmp eq i8 %212, 0
  %221 = bitcast %"class.SkSL::String"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %222 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %221, i64 0, i32 1, i32 0
  br i1 %220, label %224, label %223

223:                                              ; preds = %216
  store i8 0, i8* %222, align 1, !alias.scope !36
  store i8 0, i8* %219, align 8, !alias.scope !36
  br label %227

224:                                              ; preds = %216
  store i8 2, i8* %222, align 1, !alias.scope !36
  %225 = bitcast %"class.SkSL::String"* %17 to i16*
  store i16 8236, i16* %225, align 8, !alias.scope !36
  %226 = getelementptr inbounds i8, i8* %219, i64 2
  store i8 0, i8* %226, align 2, !alias.scope !36
  br label %227

227:                                              ; preds = %223, %224
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %16, %"class.SkSL::String"* nonnull %17, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.128, i64 0, i64 0)) #14
  %228 = bitcast %"class.SkSL::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %228) #14
  %229 = load i32, i32* %213, align 8
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %18, i32 %229) #14
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %15, %"class.SkSL::String"* nonnull %16, %"class.SkSL::String"* nonnull dereferenceable(24) %18) #14
  %230 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %15) #14
  %231 = bitcast %"class.SkSL::String"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %232 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %231, i64 0, i32 1, i32 0
  %233 = load i8, i8* %232, align 1
  %234 = icmp slt i8 %233, 0
  br i1 %234, label %235, label %238

235:                                              ; preds = %227
  %236 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %237 = load i8*, i8** %236, align 8
  call void @_ZdlPv(i8* %237) #15
  br label %238

238:                                              ; preds = %227, %235
  %239 = bitcast %"class.SkSL::String"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %240 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %239, i64 0, i32 1, i32 0
  %241 = load i8, i8* %240, align 1
  %242 = icmp slt i8 %241, 0
  br i1 %242, label %243, label %246

243:                                              ; preds = %238
  %244 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %245 = load i8*, i8** %244, align 8
  call void @_ZdlPv(i8* %245) #15
  br label %246

246:                                              ; preds = %238, %243
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %228) #14
  %247 = bitcast %"class.SkSL::String"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %248 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %247, i64 0, i32 1, i32 0
  %249 = load i8, i8* %248, align 1
  %250 = icmp slt i8 %249, 0
  br i1 %250, label %251, label %254

251:                                              ; preds = %246
  %252 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %253 = load i8*, i8** %252, align 8
  call void @_ZdlPv(i8* %253) #15
  br label %254

254:                                              ; preds = %246, %251
  %255 = load i8, i8* %222, align 1
  %256 = icmp slt i8 %255, 0
  br i1 %256, label %257, label %260

257:                                              ; preds = %254
  %258 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %259 = load i8*, i8** %258, align 8
  call void @_ZdlPv(i8* %259) #15
  br label %260

260:                                              ; preds = %254, %257
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %219) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %218) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %217) #14
  br label %261

261:                                              ; preds = %260, %211
  %262 = phi i8 [ 0, %260 ], [ %212, %211 ]
  %263 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 5
  %264 = load i32, i32* %263, align 4
  %265 = icmp sgt i32 %264, -1
  br i1 %265, label %266, label %311

266:                                              ; preds = %261
  %267 = bitcast %"class.SkSL::String"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %267) #14
  %268 = bitcast %"class.SkSL::String"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %268) #14
  %269 = bitcast %"class.SkSL::String"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %269) #14
  %270 = icmp eq i8 %262, 0
  %271 = bitcast %"class.SkSL::String"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %272 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %271, i64 0, i32 1, i32 0
  br i1 %270, label %274, label %273

273:                                              ; preds = %266
  store i8 0, i8* %272, align 1, !alias.scope !39
  store i8 0, i8* %269, align 8, !alias.scope !39
  br label %277

274:                                              ; preds = %266
  store i8 2, i8* %272, align 1, !alias.scope !39
  %275 = bitcast %"class.SkSL::String"* %21 to i16*
  store i16 8236, i16* %275, align 8, !alias.scope !39
  %276 = getelementptr inbounds i8, i8* %269, i64 2
  store i8 0, i8* %276, align 2, !alias.scope !39
  br label %277

277:                                              ; preds = %273, %274
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %20, %"class.SkSL::String"* nonnull %21, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.129, i64 0, i64 0)) #14
  %278 = bitcast %"class.SkSL::String"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %278) #14
  %279 = load i32, i32* %263, align 4
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %22, i32 %279) #14
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %19, %"class.SkSL::String"* nonnull %20, %"class.SkSL::String"* nonnull dereferenceable(24) %22) #14
  %280 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %19) #14
  %281 = bitcast %"class.SkSL::String"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %282 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %281, i64 0, i32 1, i32 0
  %283 = load i8, i8* %282, align 1
  %284 = icmp slt i8 %283, 0
  br i1 %284, label %285, label %288

285:                                              ; preds = %277
  %286 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %287 = load i8*, i8** %286, align 8
  call void @_ZdlPv(i8* %287) #15
  br label %288

288:                                              ; preds = %277, %285
  %289 = bitcast %"class.SkSL::String"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %290 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %289, i64 0, i32 1, i32 0
  %291 = load i8, i8* %290, align 1
  %292 = icmp slt i8 %291, 0
  br i1 %292, label %293, label %296

293:                                              ; preds = %288
  %294 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %295 = load i8*, i8** %294, align 8
  call void @_ZdlPv(i8* %295) #15
  br label %296

296:                                              ; preds = %288, %293
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %278) #14
  %297 = bitcast %"class.SkSL::String"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %298 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %297, i64 0, i32 1, i32 0
  %299 = load i8, i8* %298, align 1
  %300 = icmp slt i8 %299, 0
  br i1 %300, label %301, label %304

301:                                              ; preds = %296
  %302 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %303 = load i8*, i8** %302, align 8
  call void @_ZdlPv(i8* %303) #15
  br label %304

304:                                              ; preds = %296, %301
  %305 = load i8, i8* %272, align 1
  %306 = icmp slt i8 %305, 0
  br i1 %306, label %307, label %310

307:                                              ; preds = %304
  %308 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %309 = load i8*, i8** %308, align 8
  call void @_ZdlPv(i8* %309) #15
  br label %310

310:                                              ; preds = %304, %307
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %269) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %268) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %267) #14
  br label %311

311:                                              ; preds = %310, %261
  %312 = phi i8 [ 0, %310 ], [ %262, %261 ]
  %313 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 6
  %314 = load i32, i32* %313, align 8
  %315 = icmp sgt i32 %314, -1
  br i1 %315, label %316, label %361

316:                                              ; preds = %311
  %317 = bitcast %"class.SkSL::String"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %317) #14
  %318 = bitcast %"class.SkSL::String"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %318) #14
  %319 = bitcast %"class.SkSL::String"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %319) #14
  %320 = icmp eq i8 %312, 0
  %321 = bitcast %"class.SkSL::String"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %322 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %321, i64 0, i32 1, i32 0
  br i1 %320, label %324, label %323

323:                                              ; preds = %316
  store i8 0, i8* %322, align 1, !alias.scope !42
  store i8 0, i8* %319, align 8, !alias.scope !42
  br label %327

324:                                              ; preds = %316
  store i8 2, i8* %322, align 1, !alias.scope !42
  %325 = bitcast %"class.SkSL::String"* %25 to i16*
  store i16 8236, i16* %325, align 8, !alias.scope !42
  %326 = getelementptr inbounds i8, i8* %319, i64 2
  store i8 0, i8* %326, align 2, !alias.scope !42
  br label %327

327:                                              ; preds = %323, %324
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %24, %"class.SkSL::String"* nonnull %25, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.130, i64 0, i64 0)) #14
  %328 = bitcast %"class.SkSL::String"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %328) #14
  %329 = load i32, i32* %313, align 8
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %26, i32 %329) #14
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %23, %"class.SkSL::String"* nonnull %24, %"class.SkSL::String"* nonnull dereferenceable(24) %26) #14
  %330 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %23) #14
  %331 = bitcast %"class.SkSL::String"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %332 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %331, i64 0, i32 1, i32 0
  %333 = load i8, i8* %332, align 1
  %334 = icmp slt i8 %333, 0
  br i1 %334, label %335, label %338

335:                                              ; preds = %327
  %336 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %337 = load i8*, i8** %336, align 8
  call void @_ZdlPv(i8* %337) #15
  br label %338

338:                                              ; preds = %327, %335
  %339 = bitcast %"class.SkSL::String"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %340 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %339, i64 0, i32 1, i32 0
  %341 = load i8, i8* %340, align 1
  %342 = icmp slt i8 %341, 0
  br i1 %342, label %343, label %346

343:                                              ; preds = %338
  %344 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %345 = load i8*, i8** %344, align 8
  call void @_ZdlPv(i8* %345) #15
  br label %346

346:                                              ; preds = %338, %343
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %328) #14
  %347 = bitcast %"class.SkSL::String"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %348 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %347, i64 0, i32 1, i32 0
  %349 = load i8, i8* %348, align 1
  %350 = icmp slt i8 %349, 0
  br i1 %350, label %351, label %354

351:                                              ; preds = %346
  %352 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %353 = load i8*, i8** %352, align 8
  call void @_ZdlPv(i8* %353) #15
  br label %354

354:                                              ; preds = %346, %351
  %355 = load i8, i8* %322, align 1
  %356 = icmp slt i8 %355, 0
  br i1 %356, label %357, label %360

357:                                              ; preds = %354
  %358 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %359 = load i8*, i8** %358, align 8
  call void @_ZdlPv(i8* %359) #15
  br label %360

360:                                              ; preds = %354, %357
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %319) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %318) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %317) #14
  br label %361

361:                                              ; preds = %360, %311
  %362 = phi i8 [ 0, %360 ], [ %312, %311 ]
  %363 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 7
  %364 = load i32, i32* %363, align 4
  %365 = icmp sgt i32 %364, -1
  br i1 %365, label %366, label %411

366:                                              ; preds = %361
  %367 = bitcast %"class.SkSL::String"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %367) #14
  %368 = bitcast %"class.SkSL::String"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %368) #14
  %369 = bitcast %"class.SkSL::String"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %369) #14
  %370 = icmp eq i8 %362, 0
  %371 = bitcast %"class.SkSL::String"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %372 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %371, i64 0, i32 1, i32 0
  br i1 %370, label %374, label %373

373:                                              ; preds = %366
  store i8 0, i8* %372, align 1, !alias.scope !45
  store i8 0, i8* %369, align 8, !alias.scope !45
  br label %377

374:                                              ; preds = %366
  store i8 2, i8* %372, align 1, !alias.scope !45
  %375 = bitcast %"class.SkSL::String"* %29 to i16*
  store i16 8236, i16* %375, align 8, !alias.scope !45
  %376 = getelementptr inbounds i8, i8* %369, i64 2
  store i8 0, i8* %376, align 2, !alias.scope !45
  br label %377

377:                                              ; preds = %373, %374
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %28, %"class.SkSL::String"* nonnull %29, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.131, i64 0, i64 0)) #14
  %378 = bitcast %"class.SkSL::String"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %378) #14
  %379 = load i32, i32* %363, align 4
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %30, i32 %379) #14
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %27, %"class.SkSL::String"* nonnull %28, %"class.SkSL::String"* nonnull dereferenceable(24) %30) #14
  %380 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %27) #14
  %381 = bitcast %"class.SkSL::String"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %382 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %381, i64 0, i32 1, i32 0
  %383 = load i8, i8* %382, align 1
  %384 = icmp slt i8 %383, 0
  br i1 %384, label %385, label %388

385:                                              ; preds = %377
  %386 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %387 = load i8*, i8** %386, align 8
  call void @_ZdlPv(i8* %387) #15
  br label %388

388:                                              ; preds = %377, %385
  %389 = bitcast %"class.SkSL::String"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %390 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %389, i64 0, i32 1, i32 0
  %391 = load i8, i8* %390, align 1
  %392 = icmp slt i8 %391, 0
  br i1 %392, label %393, label %396

393:                                              ; preds = %388
  %394 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %395 = load i8*, i8** %394, align 8
  call void @_ZdlPv(i8* %395) #15
  br label %396

396:                                              ; preds = %388, %393
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %378) #14
  %397 = bitcast %"class.SkSL::String"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %398 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %397, i64 0, i32 1, i32 0
  %399 = load i8, i8* %398, align 1
  %400 = icmp slt i8 %399, 0
  br i1 %400, label %401, label %404

401:                                              ; preds = %396
  %402 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %403 = load i8*, i8** %402, align 8
  call void @_ZdlPv(i8* %403) #15
  br label %404

404:                                              ; preds = %396, %401
  %405 = load i8, i8* %372, align 1
  %406 = icmp slt i8 %405, 0
  br i1 %406, label %407, label %410

407:                                              ; preds = %404
  %408 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %409 = load i8*, i8** %408, align 8
  call void @_ZdlPv(i8* %409) #15
  br label %410

410:                                              ; preds = %404, %407
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %369) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %368) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %367) #14
  br label %411

411:                                              ; preds = %410, %361
  %412 = phi i8 [ 0, %410 ], [ %362, %361 ]
  %413 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 0
  %414 = load i32, i32* %413, align 8
  %415 = and i32 %414, 1
  %416 = icmp eq i32 %415, 0
  br i1 %416, label %444, label %417

417:                                              ; preds = %411
  %418 = bitcast %"class.SkSL::String"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %418) #14
  %419 = bitcast %"class.SkSL::String"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %419) #14
  %420 = icmp eq i8 %412, 0
  %421 = bitcast %"class.SkSL::String"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %422 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %421, i64 0, i32 1, i32 0
  br i1 %420, label %424, label %423

423:                                              ; preds = %417
  store i8 0, i8* %422, align 1, !alias.scope !48
  store i8 0, i8* %419, align 8, !alias.scope !48
  br label %427

424:                                              ; preds = %417
  store i8 2, i8* %422, align 1, !alias.scope !48
  %425 = bitcast %"class.SkSL::String"* %32 to i16*
  store i16 8236, i16* %425, align 8, !alias.scope !48
  %426 = getelementptr inbounds i8, i8* %419, i64 2
  store i8 0, i8* %426, align 2, !alias.scope !48
  br label %427

427:                                              ; preds = %423, %424
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %31, %"class.SkSL::String"* nonnull %32, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.45, i64 0, i64 0)) #14
  %428 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %31) #14
  %429 = bitcast %"class.SkSL::String"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %430 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %429, i64 0, i32 1, i32 0
  %431 = load i8, i8* %430, align 1
  %432 = icmp slt i8 %431, 0
  br i1 %432, label %433, label %436

433:                                              ; preds = %427
  %434 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %435 = load i8*, i8** %434, align 8
  call void @_ZdlPv(i8* %435) #15
  br label %436

436:                                              ; preds = %427, %433
  %437 = load i8, i8* %422, align 1
  %438 = icmp slt i8 %437, 0
  br i1 %438, label %439, label %442

439:                                              ; preds = %436
  %440 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %441 = load i8*, i8** %440, align 8
  call void @_ZdlPv(i8* %441) #15
  br label %442

442:                                              ; preds = %436, %439
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %419) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %418) #14
  %443 = load i32, i32* %413, align 8
  br label %444

444:                                              ; preds = %411, %442
  %445 = phi i32 [ %414, %411 ], [ %443, %442 ]
  %446 = phi i8 [ %412, %411 ], [ 0, %442 ]
  %447 = and i32 %445, 4
  %448 = icmp eq i32 %447, 0
  br i1 %448, label %476, label %449

449:                                              ; preds = %444
  %450 = bitcast %"class.SkSL::String"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %450) #14
  %451 = bitcast %"class.SkSL::String"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %451) #14
  %452 = icmp eq i8 %446, 0
  %453 = bitcast %"class.SkSL::String"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %454 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %453, i64 0, i32 1, i32 0
  br i1 %452, label %456, label %455

455:                                              ; preds = %449
  store i8 0, i8* %454, align 1, !alias.scope !51
  store i8 0, i8* %451, align 8, !alias.scope !51
  br label %459

456:                                              ; preds = %449
  store i8 2, i8* %454, align 1, !alias.scope !51
  %457 = bitcast %"class.SkSL::String"* %34 to i16*
  store i16 8236, i16* %457, align 8, !alias.scope !51
  %458 = getelementptr inbounds i8, i8* %451, i64 2
  store i8 0, i8* %458, align 2, !alias.scope !51
  br label %459

459:                                              ; preds = %455, %456
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %33, %"class.SkSL::String"* nonnull %34, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.47, i64 0, i64 0)) #14
  %460 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %33) #14
  %461 = bitcast %"class.SkSL::String"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %462 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %461, i64 0, i32 1, i32 0
  %463 = load i8, i8* %462, align 1
  %464 = icmp slt i8 %463, 0
  br i1 %464, label %465, label %468

465:                                              ; preds = %459
  %466 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %467 = load i8*, i8** %466, align 8
  call void @_ZdlPv(i8* %467) #15
  br label %468

468:                                              ; preds = %459, %465
  %469 = load i8, i8* %454, align 1
  %470 = icmp slt i8 %469, 0
  br i1 %470, label %471, label %474

471:                                              ; preds = %468
  %472 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %473 = load i8*, i8** %472, align 8
  call void @_ZdlPv(i8* %473) #15
  br label %474

474:                                              ; preds = %468, %471
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %451) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %450) #14
  %475 = load i32, i32* %413, align 8
  br label %476

476:                                              ; preds = %444, %474
  %477 = phi i32 [ %445, %444 ], [ %475, %474 ]
  %478 = phi i8 [ %446, %444 ], [ 0, %474 ]
  %479 = and i32 %477, 2
  %480 = icmp eq i32 %479, 0
  br i1 %480, label %508, label %481

481:                                              ; preds = %476
  %482 = bitcast %"class.SkSL::String"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %482) #14
  %483 = bitcast %"class.SkSL::String"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %483) #14
  %484 = icmp eq i8 %478, 0
  %485 = bitcast %"class.SkSL::String"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %486 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %485, i64 0, i32 1, i32 0
  br i1 %484, label %488, label %487

487:                                              ; preds = %481
  store i8 0, i8* %486, align 1, !alias.scope !54
  store i8 0, i8* %483, align 8, !alias.scope !54
  br label %491

488:                                              ; preds = %481
  store i8 2, i8* %486, align 1, !alias.scope !54
  %489 = bitcast %"class.SkSL::String"* %36 to i16*
  store i16 8236, i16* %489, align 8, !alias.scope !54
  %490 = getelementptr inbounds i8, i8* %483, i64 2
  store i8 0, i8* %490, align 2, !alias.scope !54
  br label %491

491:                                              ; preds = %487, %488
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %35, %"class.SkSL::String"* nonnull %36, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.46, i64 0, i64 0)) #14
  %492 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %35) #14
  %493 = bitcast %"class.SkSL::String"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %494 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %493, i64 0, i32 1, i32 0
  %495 = load i8, i8* %494, align 1
  %496 = icmp slt i8 %495, 0
  br i1 %496, label %497, label %500

497:                                              ; preds = %491
  %498 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %499 = load i8*, i8** %498, align 8
  call void @_ZdlPv(i8* %499) #15
  br label %500

500:                                              ; preds = %491, %497
  %501 = load i8, i8* %486, align 1
  %502 = icmp slt i8 %501, 0
  br i1 %502, label %503, label %506

503:                                              ; preds = %500
  %504 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %505 = load i8*, i8** %504, align 8
  call void @_ZdlPv(i8* %505) #15
  br label %506

506:                                              ; preds = %500, %503
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %483) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %482) #14
  %507 = load i32, i32* %413, align 8
  br label %508

508:                                              ; preds = %476, %506
  %509 = phi i32 [ %477, %476 ], [ %507, %506 ]
  %510 = phi i8 [ %478, %476 ], [ 0, %506 ]
  %511 = and i32 %509, 8
  %512 = icmp eq i32 %511, 0
  br i1 %512, label %539, label %513

513:                                              ; preds = %508
  %514 = bitcast %"class.SkSL::String"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %514) #14
  %515 = bitcast %"class.SkSL::String"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %515) #14
  %516 = icmp eq i8 %510, 0
  %517 = bitcast %"class.SkSL::String"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %518 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %517, i64 0, i32 1, i32 0
  br i1 %516, label %520, label %519

519:                                              ; preds = %513
  store i8 0, i8* %518, align 1, !alias.scope !57
  store i8 0, i8* %515, align 8, !alias.scope !57
  br label %523

520:                                              ; preds = %513
  store i8 2, i8* %518, align 1, !alias.scope !57
  %521 = bitcast %"class.SkSL::String"* %38 to i16*
  store i16 8236, i16* %521, align 8, !alias.scope !57
  %522 = getelementptr inbounds i8, i8* %515, i64 2
  store i8 0, i8* %522, align 2, !alias.scope !57
  br label %523

523:                                              ; preds = %519, %520
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %37, %"class.SkSL::String"* nonnull %38, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.48, i64 0, i64 0)) #14
  %524 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %37) #14
  %525 = bitcast %"class.SkSL::String"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %526 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %525, i64 0, i32 1, i32 0
  %527 = load i8, i8* %526, align 1
  %528 = icmp slt i8 %527, 0
  br i1 %528, label %529, label %532

529:                                              ; preds = %523
  %530 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %531 = load i8*, i8** %530, align 8
  call void @_ZdlPv(i8* %531) #15
  br label %532

532:                                              ; preds = %523, %529
  %533 = load i8, i8* %518, align 1
  %534 = icmp slt i8 %533, 0
  br i1 %534, label %535, label %538

535:                                              ; preds = %532
  %536 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %537 = load i8*, i8** %536, align 8
  call void @_ZdlPv(i8* %537) #15
  br label %538

538:                                              ; preds = %532, %535
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %515) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %514) #14
  br label %539

539:                                              ; preds = %508, %538
  %540 = phi i8 [ %510, %508 ], [ 0, %538 ]
  %541 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 8
  %542 = load i32, i32* %541, align 8
  switch i32 %542, label %721 [
    i32 0, label %543
    i32 1, label %568
    i32 2, label %593
    i32 3, label %618
    i32 4, label %643
    i32 5, label %668
    i32 6, label %693
  ]

543:                                              ; preds = %539
  %544 = bitcast %"class.SkSL::String"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %544) #14
  %545 = bitcast %"class.SkSL::String"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %545) #14
  %546 = icmp eq i8 %540, 0
  %547 = bitcast %"class.SkSL::String"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %548 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %547, i64 0, i32 1, i32 0
  br i1 %546, label %550, label %549

549:                                              ; preds = %543
  store i8 0, i8* %548, align 1, !alias.scope !60
  store i8 0, i8* %545, align 8, !alias.scope !60
  br label %553

550:                                              ; preds = %543
  store i8 2, i8* %548, align 1, !alias.scope !60
  %551 = bitcast %"class.SkSL::String"* %40 to i16*
  store i16 8236, i16* %551, align 8, !alias.scope !60
  %552 = getelementptr inbounds i8, i8* %545, i64 2
  store i8 0, i8* %552, align 2, !alias.scope !60
  br label %553

553:                                              ; preds = %549, %550
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %39, %"class.SkSL::String"* nonnull %40, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.132, i64 0, i64 0)) #14
  %554 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %39) #14
  %555 = bitcast %"class.SkSL::String"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %556 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %555, i64 0, i32 1, i32 0
  %557 = load i8, i8* %556, align 1
  %558 = icmp slt i8 %557, 0
  br i1 %558, label %559, label %562

559:                                              ; preds = %553
  %560 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %561 = load i8*, i8** %560, align 8
  call void @_ZdlPv(i8* %561) #15
  br label %562

562:                                              ; preds = %553, %559
  %563 = load i8, i8* %548, align 1
  %564 = icmp slt i8 %563, 0
  br i1 %564, label %565, label %718

565:                                              ; preds = %562
  %566 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %567 = load i8*, i8** %566, align 8
  call void @_ZdlPv(i8* %567) #15
  br label %718

568:                                              ; preds = %539
  %569 = bitcast %"class.SkSL::String"* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %569) #14
  %570 = bitcast %"class.SkSL::String"* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %570) #14
  %571 = icmp eq i8 %540, 0
  %572 = bitcast %"class.SkSL::String"* %42 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %573 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %572, i64 0, i32 1, i32 0
  br i1 %571, label %575, label %574

574:                                              ; preds = %568
  store i8 0, i8* %573, align 1, !alias.scope !63
  store i8 0, i8* %570, align 8, !alias.scope !63
  br label %578

575:                                              ; preds = %568
  store i8 2, i8* %573, align 1, !alias.scope !63
  %576 = bitcast %"class.SkSL::String"* %42 to i16*
  store i16 8236, i16* %576, align 8, !alias.scope !63
  %577 = getelementptr inbounds i8, i8* %570, i64 2
  store i8 0, i8* %577, align 2, !alias.scope !63
  br label %578

578:                                              ; preds = %574, %575
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %41, %"class.SkSL::String"* nonnull %42, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.133, i64 0, i64 0)) #14
  %579 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %41) #14
  %580 = bitcast %"class.SkSL::String"* %41 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %581 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %580, i64 0, i32 1, i32 0
  %582 = load i8, i8* %581, align 1
  %583 = icmp slt i8 %582, 0
  br i1 %583, label %584, label %587

584:                                              ; preds = %578
  %585 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %586 = load i8*, i8** %585, align 8
  call void @_ZdlPv(i8* %586) #15
  br label %587

587:                                              ; preds = %578, %584
  %588 = load i8, i8* %573, align 1
  %589 = icmp slt i8 %588, 0
  br i1 %589, label %590, label %718

590:                                              ; preds = %587
  %591 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %592 = load i8*, i8** %591, align 8
  call void @_ZdlPv(i8* %592) #15
  br label %718

593:                                              ; preds = %539
  %594 = bitcast %"class.SkSL::String"* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %594) #14
  %595 = bitcast %"class.SkSL::String"* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %595) #14
  %596 = icmp eq i8 %540, 0
  %597 = bitcast %"class.SkSL::String"* %44 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %598 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %597, i64 0, i32 1, i32 0
  br i1 %596, label %600, label %599

599:                                              ; preds = %593
  store i8 0, i8* %598, align 1, !alias.scope !66
  store i8 0, i8* %595, align 8, !alias.scope !66
  br label %603

600:                                              ; preds = %593
  store i8 2, i8* %598, align 1, !alias.scope !66
  %601 = bitcast %"class.SkSL::String"* %44 to i16*
  store i16 8236, i16* %601, align 8, !alias.scope !66
  %602 = getelementptr inbounds i8, i8* %595, i64 2
  store i8 0, i8* %602, align 2, !alias.scope !66
  br label %603

603:                                              ; preds = %599, %600
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %43, %"class.SkSL::String"* nonnull %44, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.134, i64 0, i64 0)) #14
  %604 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %43) #14
  %605 = bitcast %"class.SkSL::String"* %43 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %606 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %605, i64 0, i32 1, i32 0
  %607 = load i8, i8* %606, align 1
  %608 = icmp slt i8 %607, 0
  br i1 %608, label %609, label %612

609:                                              ; preds = %603
  %610 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %611 = load i8*, i8** %610, align 8
  call void @_ZdlPv(i8* %611) #15
  br label %612

612:                                              ; preds = %603, %609
  %613 = load i8, i8* %598, align 1
  %614 = icmp slt i8 %613, 0
  br i1 %614, label %615, label %718

615:                                              ; preds = %612
  %616 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %617 = load i8*, i8** %616, align 8
  call void @_ZdlPv(i8* %617) #15
  br label %718

618:                                              ; preds = %539
  %619 = bitcast %"class.SkSL::String"* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %619) #14
  %620 = bitcast %"class.SkSL::String"* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %620) #14
  %621 = icmp eq i8 %540, 0
  %622 = bitcast %"class.SkSL::String"* %46 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %623 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %622, i64 0, i32 1, i32 0
  br i1 %621, label %625, label %624

624:                                              ; preds = %618
  store i8 0, i8* %623, align 1, !alias.scope !69
  store i8 0, i8* %620, align 8, !alias.scope !69
  br label %628

625:                                              ; preds = %618
  store i8 2, i8* %623, align 1, !alias.scope !69
  %626 = bitcast %"class.SkSL::String"* %46 to i16*
  store i16 8236, i16* %626, align 8, !alias.scope !69
  %627 = getelementptr inbounds i8, i8* %620, i64 2
  store i8 0, i8* %627, align 2, !alias.scope !69
  br label %628

628:                                              ; preds = %624, %625
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %45, %"class.SkSL::String"* nonnull %46, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.135, i64 0, i64 0)) #14
  %629 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %45) #14
  %630 = bitcast %"class.SkSL::String"* %45 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %631 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %630, i64 0, i32 1, i32 0
  %632 = load i8, i8* %631, align 1
  %633 = icmp slt i8 %632, 0
  br i1 %633, label %634, label %637

634:                                              ; preds = %628
  %635 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %636 = load i8*, i8** %635, align 8
  call void @_ZdlPv(i8* %636) #15
  br label %637

637:                                              ; preds = %628, %634
  %638 = load i8, i8* %623, align 1
  %639 = icmp slt i8 %638, 0
  br i1 %639, label %640, label %718

640:                                              ; preds = %637
  %641 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %642 = load i8*, i8** %641, align 8
  call void @_ZdlPv(i8* %642) #15
  br label %718

643:                                              ; preds = %539
  %644 = bitcast %"class.SkSL::String"* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %644) #14
  %645 = bitcast %"class.SkSL::String"* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %645) #14
  %646 = icmp eq i8 %540, 0
  %647 = bitcast %"class.SkSL::String"* %48 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %648 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %647, i64 0, i32 1, i32 0
  br i1 %646, label %650, label %649

649:                                              ; preds = %643
  store i8 0, i8* %648, align 1, !alias.scope !72
  store i8 0, i8* %645, align 8, !alias.scope !72
  br label %653

650:                                              ; preds = %643
  store i8 2, i8* %648, align 1, !alias.scope !72
  %651 = bitcast %"class.SkSL::String"* %48 to i16*
  store i16 8236, i16* %651, align 8, !alias.scope !72
  %652 = getelementptr inbounds i8, i8* %645, i64 2
  store i8 0, i8* %652, align 2, !alias.scope !72
  br label %653

653:                                              ; preds = %649, %650
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %47, %"class.SkSL::String"* nonnull %48, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.136, i64 0, i64 0)) #14
  %654 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %47) #14
  %655 = bitcast %"class.SkSL::String"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %656 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %655, i64 0, i32 1, i32 0
  %657 = load i8, i8* %656, align 1
  %658 = icmp slt i8 %657, 0
  br i1 %658, label %659, label %662

659:                                              ; preds = %653
  %660 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %661 = load i8*, i8** %660, align 8
  call void @_ZdlPv(i8* %661) #15
  br label %662

662:                                              ; preds = %653, %659
  %663 = load i8, i8* %648, align 1
  %664 = icmp slt i8 %663, 0
  br i1 %664, label %665, label %718

665:                                              ; preds = %662
  %666 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %667 = load i8*, i8** %666, align 8
  call void @_ZdlPv(i8* %667) #15
  br label %718

668:                                              ; preds = %539
  %669 = bitcast %"class.SkSL::String"* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %669) #14
  %670 = bitcast %"class.SkSL::String"* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %670) #14
  %671 = icmp eq i8 %540, 0
  %672 = bitcast %"class.SkSL::String"* %50 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %673 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %672, i64 0, i32 1, i32 0
  br i1 %671, label %675, label %674

674:                                              ; preds = %668
  store i8 0, i8* %673, align 1, !alias.scope !75
  store i8 0, i8* %670, align 8, !alias.scope !75
  br label %678

675:                                              ; preds = %668
  store i8 2, i8* %673, align 1, !alias.scope !75
  %676 = bitcast %"class.SkSL::String"* %50 to i16*
  store i16 8236, i16* %676, align 8, !alias.scope !75
  %677 = getelementptr inbounds i8, i8* %670, i64 2
  store i8 0, i8* %677, align 2, !alias.scope !75
  br label %678

678:                                              ; preds = %674, %675
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %49, %"class.SkSL::String"* nonnull %50, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.137, i64 0, i64 0)) #14
  %679 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %49) #14
  %680 = bitcast %"class.SkSL::String"* %49 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %681 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %680, i64 0, i32 1, i32 0
  %682 = load i8, i8* %681, align 1
  %683 = icmp slt i8 %682, 0
  br i1 %683, label %684, label %687

684:                                              ; preds = %678
  %685 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %686 = load i8*, i8** %685, align 8
  call void @_ZdlPv(i8* %686) #15
  br label %687

687:                                              ; preds = %678, %684
  %688 = load i8, i8* %673, align 1
  %689 = icmp slt i8 %688, 0
  br i1 %689, label %690, label %718

690:                                              ; preds = %687
  %691 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %692 = load i8*, i8** %691, align 8
  call void @_ZdlPv(i8* %692) #15
  br label %718

693:                                              ; preds = %539
  %694 = bitcast %"class.SkSL::String"* %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %694) #14
  %695 = bitcast %"class.SkSL::String"* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %695) #14
  %696 = icmp eq i8 %540, 0
  %697 = bitcast %"class.SkSL::String"* %52 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %698 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %697, i64 0, i32 1, i32 0
  br i1 %696, label %700, label %699

699:                                              ; preds = %693
  store i8 0, i8* %698, align 1, !alias.scope !78
  store i8 0, i8* %695, align 8, !alias.scope !78
  br label %703

700:                                              ; preds = %693
  store i8 2, i8* %698, align 1, !alias.scope !78
  %701 = bitcast %"class.SkSL::String"* %52 to i16*
  store i16 8236, i16* %701, align 8, !alias.scope !78
  %702 = getelementptr inbounds i8, i8* %695, i64 2
  store i8 0, i8* %702, align 2, !alias.scope !78
  br label %703

703:                                              ; preds = %699, %700
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %51, %"class.SkSL::String"* nonnull %52, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.138, i64 0, i64 0)) #14
  %704 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %51) #14
  %705 = bitcast %"class.SkSL::String"* %51 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %706 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %705, i64 0, i32 1, i32 0
  %707 = load i8, i8* %706, align 1
  %708 = icmp slt i8 %707, 0
  br i1 %708, label %709, label %712

709:                                              ; preds = %703
  %710 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %711 = load i8*, i8** %710, align 8
  call void @_ZdlPv(i8* %711) #15
  br label %712

712:                                              ; preds = %703, %709
  %713 = load i8, i8* %698, align 1
  %714 = icmp slt i8 %713, 0
  br i1 %714, label %715, label %718

715:                                              ; preds = %712
  %716 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %717 = load i8*, i8** %716, align 8
  call void @_ZdlPv(i8* %717) #15
  br label %718

718:                                              ; preds = %715, %712, %690, %687, %665, %662, %640, %637, %615, %612, %590, %587, %565, %562
  %719 = phi i8* [ %545, %562 ], [ %545, %565 ], [ %570, %587 ], [ %570, %590 ], [ %595, %612 ], [ %595, %615 ], [ %620, %637 ], [ %620, %640 ], [ %645, %662 ], [ %645, %665 ], [ %670, %687 ], [ %670, %690 ], [ %695, %712 ], [ %695, %715 ]
  %720 = phi i8* [ %544, %562 ], [ %544, %565 ], [ %569, %587 ], [ %569, %590 ], [ %594, %612 ], [ %594, %615 ], [ %619, %637 ], [ %619, %640 ], [ %644, %662 ], [ %644, %665 ], [ %669, %687 ], [ %669, %690 ], [ %694, %712 ], [ %694, %715 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %719) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %720) #14
  br label %721

721:                                              ; preds = %718, %539
  %722 = phi i8 [ %540, %539 ], [ 0, %718 ]
  %723 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 9
  %724 = load i32, i32* %723, align 4
  %725 = icmp sgt i32 %724, -1
  br i1 %725, label %726, label %771

726:                                              ; preds = %721
  %727 = bitcast %"class.SkSL::String"* %53 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %727) #14
  %728 = bitcast %"class.SkSL::String"* %54 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %728) #14
  %729 = bitcast %"class.SkSL::String"* %55 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %729) #14
  %730 = icmp eq i8 %722, 0
  %731 = bitcast %"class.SkSL::String"* %55 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %732 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %731, i64 0, i32 1, i32 0
  br i1 %730, label %734, label %733

733:                                              ; preds = %726
  store i8 0, i8* %732, align 1, !alias.scope !81
  store i8 0, i8* %729, align 8, !alias.scope !81
  br label %737

734:                                              ; preds = %726
  store i8 2, i8* %732, align 1, !alias.scope !81
  %735 = bitcast %"class.SkSL::String"* %55 to i16*
  store i16 8236, i16* %735, align 8, !alias.scope !81
  %736 = getelementptr inbounds i8, i8* %729, i64 2
  store i8 0, i8* %736, align 2, !alias.scope !81
  br label %737

737:                                              ; preds = %733, %734
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %54, %"class.SkSL::String"* nonnull %55, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.139, i64 0, i64 0)) #14
  %738 = bitcast %"class.SkSL::String"* %56 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %738) #14
  %739 = load i32, i32* %723, align 4
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %56, i32 %739) #14
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %53, %"class.SkSL::String"* nonnull %54, %"class.SkSL::String"* nonnull dereferenceable(24) %56) #14
  %740 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %53) #14
  %741 = bitcast %"class.SkSL::String"* %53 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %742 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %741, i64 0, i32 1, i32 0
  %743 = load i8, i8* %742, align 1
  %744 = icmp slt i8 %743, 0
  br i1 %744, label %745, label %748

745:                                              ; preds = %737
  %746 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %747 = load i8*, i8** %746, align 8
  call void @_ZdlPv(i8* %747) #15
  br label %748

748:                                              ; preds = %737, %745
  %749 = bitcast %"class.SkSL::String"* %56 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %750 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %749, i64 0, i32 1, i32 0
  %751 = load i8, i8* %750, align 1
  %752 = icmp slt i8 %751, 0
  br i1 %752, label %753, label %756

753:                                              ; preds = %748
  %754 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %755 = load i8*, i8** %754, align 8
  call void @_ZdlPv(i8* %755) #15
  br label %756

756:                                              ; preds = %748, %753
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %738) #14
  %757 = bitcast %"class.SkSL::String"* %54 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %758 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %757, i64 0, i32 1, i32 0
  %759 = load i8, i8* %758, align 1
  %760 = icmp slt i8 %759, 0
  br i1 %760, label %761, label %764

761:                                              ; preds = %756
  %762 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %763 = load i8*, i8** %762, align 8
  call void @_ZdlPv(i8* %763) #15
  br label %764

764:                                              ; preds = %756, %761
  %765 = load i8, i8* %732, align 1
  %766 = icmp slt i8 %765, 0
  br i1 %766, label %767, label %770

767:                                              ; preds = %764
  %768 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %769 = load i8*, i8** %768, align 8
  call void @_ZdlPv(i8* %769) #15
  br label %770

770:                                              ; preds = %764, %767
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %729) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %728) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %727) #14
  br label %771

771:                                              ; preds = %770, %721
  %772 = phi i8 [ 0, %770 ], [ %722, %721 ]
  %773 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 10
  %774 = load i32, i32* %773, align 8
  %775 = icmp sgt i32 %774, -1
  br i1 %775, label %776, label %821

776:                                              ; preds = %771
  %777 = bitcast %"class.SkSL::String"* %57 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %777) #14
  %778 = bitcast %"class.SkSL::String"* %58 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %778) #14
  %779 = bitcast %"class.SkSL::String"* %59 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %779) #14
  %780 = icmp eq i8 %772, 0
  %781 = bitcast %"class.SkSL::String"* %59 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %782 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %781, i64 0, i32 1, i32 0
  br i1 %780, label %784, label %783

783:                                              ; preds = %776
  store i8 0, i8* %782, align 1, !alias.scope !84
  store i8 0, i8* %779, align 8, !alias.scope !84
  br label %787

784:                                              ; preds = %776
  store i8 2, i8* %782, align 1, !alias.scope !84
  %785 = bitcast %"class.SkSL::String"* %59 to i16*
  store i16 8236, i16* %785, align 8, !alias.scope !84
  %786 = getelementptr inbounds i8, i8* %779, i64 2
  store i8 0, i8* %786, align 2, !alias.scope !84
  br label %787

787:                                              ; preds = %783, %784
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %58, %"class.SkSL::String"* nonnull %59, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.140, i64 0, i64 0)) #14
  %788 = bitcast %"class.SkSL::String"* %60 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %788) #14
  %789 = load i32, i32* %773, align 8
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %60, i32 %789) #14
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %57, %"class.SkSL::String"* nonnull %58, %"class.SkSL::String"* nonnull dereferenceable(24) %60) #14
  %790 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %57) #14
  %791 = bitcast %"class.SkSL::String"* %57 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %792 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %791, i64 0, i32 1, i32 0
  %793 = load i8, i8* %792, align 1
  %794 = icmp slt i8 %793, 0
  br i1 %794, label %795, label %798

795:                                              ; preds = %787
  %796 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %797 = load i8*, i8** %796, align 8
  call void @_ZdlPv(i8* %797) #15
  br label %798

798:                                              ; preds = %787, %795
  %799 = bitcast %"class.SkSL::String"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %800 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %799, i64 0, i32 1, i32 0
  %801 = load i8, i8* %800, align 1
  %802 = icmp slt i8 %801, 0
  br i1 %802, label %803, label %806

803:                                              ; preds = %798
  %804 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %805 = load i8*, i8** %804, align 8
  call void @_ZdlPv(i8* %805) #15
  br label %806

806:                                              ; preds = %798, %803
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %788) #14
  %807 = bitcast %"class.SkSL::String"* %58 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %808 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %807, i64 0, i32 1, i32 0
  %809 = load i8, i8* %808, align 1
  %810 = icmp slt i8 %809, 0
  br i1 %810, label %811, label %814

811:                                              ; preds = %806
  %812 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %813 = load i8*, i8** %812, align 8
  call void @_ZdlPv(i8* %813) #15
  br label %814

814:                                              ; preds = %806, %811
  %815 = load i8, i8* %782, align 1
  %816 = icmp slt i8 %815, 0
  br i1 %816, label %817, label %820

817:                                              ; preds = %814
  %818 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %819 = load i8*, i8** %818, align 8
  call void @_ZdlPv(i8* %819) #15
  br label %820

820:                                              ; preds = %814, %817
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %779) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %778) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %777) #14
  br label %821

821:                                              ; preds = %820, %771
  %822 = phi i8 [ 0, %820 ], [ %772, %771 ]
  %823 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 12, i32 1
  %824 = load i64, i64* %823, align 8
  %825 = icmp eq i64 %824, 0
  br i1 %825, label %864, label %826

826:                                              ; preds = %821
  %827 = bitcast %"class.SkSL::String"* %61 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %827) #14
  %828 = bitcast %"class.SkSL::String"* %62 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %828) #14
  %829 = bitcast %"class.SkSL::String"* %63 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %829) #14
  %830 = icmp eq i8 %822, 0
  %831 = bitcast %"class.SkSL::String"* %63 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %832 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %831, i64 0, i32 1, i32 0
  br i1 %830, label %834, label %833

833:                                              ; preds = %826
  store i8 0, i8* %832, align 1, !alias.scope !87
  store i8 0, i8* %829, align 8, !alias.scope !87
  br label %837

834:                                              ; preds = %826
  store i8 2, i8* %832, align 1, !alias.scope !87
  %835 = bitcast %"class.SkSL::String"* %63 to i16*
  store i16 8236, i16* %835, align 8, !alias.scope !87
  %836 = getelementptr inbounds i8, i8* %829, i64 2
  store i8 0, i8* %836, align 2, !alias.scope !87
  br label %837

837:                                              ; preds = %833, %834
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %62, %"class.SkSL::String"* nonnull %63, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.141, i64 0, i64 0)) #14
  %838 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 12, i32 0
  %839 = load i8*, i8** %838, align 8
  %840 = load i64, i64* %823, align 8
  call void @_ZNK4SkSL6StringplENS_14StringFragmentE(%"class.SkSL::String"* nonnull sret %61, %"class.SkSL::String"* nonnull %62, i8* %839, i64 %840) #14
  %841 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %61) #14
  %842 = bitcast %"class.SkSL::String"* %61 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %843 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %842, i64 0, i32 1, i32 0
  %844 = load i8, i8* %843, align 1
  %845 = icmp slt i8 %844, 0
  br i1 %845, label %846, label %849

846:                                              ; preds = %837
  %847 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %848 = load i8*, i8** %847, align 8
  call void @_ZdlPv(i8* %848) #15
  br label %849

849:                                              ; preds = %837, %846
  %850 = bitcast %"class.SkSL::String"* %62 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %851 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %850, i64 0, i32 1, i32 0
  %852 = load i8, i8* %851, align 1
  %853 = icmp slt i8 %852, 0
  br i1 %853, label %854, label %857

854:                                              ; preds = %849
  %855 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %856 = load i8*, i8** %855, align 8
  call void @_ZdlPv(i8* %856) #15
  br label %857

857:                                              ; preds = %849, %854
  %858 = load i8, i8* %832, align 1
  %859 = icmp slt i8 %858, 0
  br i1 %859, label %860, label %863

860:                                              ; preds = %857
  %861 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %862 = load i8*, i8** %861, align 8
  call void @_ZdlPv(i8* %862) #15
  br label %863

863:                                              ; preds = %857, %860
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %829) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %828) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %827) #14
  br label %864

864:                                              ; preds = %821, %863
  %865 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %866 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %865, i64 0, i32 1, i32 0
  %867 = load i8, i8* %866, align 1
  %868 = icmp slt i8 %867, 0
  %869 = load i64, i64* %67, align 8
  %870 = zext i8 %867 to i64
  %871 = select i1 %868, i64 %869, i64 %870
  %872 = icmp eq i64 %871, 0
  br i1 %872, label %891, label %873

873:                                              ; preds = %864
  %874 = bitcast %"class.SkSL::String"* %64 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %874) #14
  %875 = bitcast %"class.SkSL::String"* %65 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %875) #14
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %65, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.142, i64 0, i64 0), %"class.SkSL::String"* dereferenceable(24) %0) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %64, %"class.SkSL::String"* nonnull %65, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86, i64 0, i64 0)) #14
  %876 = load i8, i8* %866, align 1
  %877 = icmp slt i8 %876, 0
  br i1 %877, label %878, label %880

878:                                              ; preds = %873
  %879 = load i8*, i8** %66, align 8
  call void @_ZdlPv(i8* %879) #15
  br label %880

880:                                              ; preds = %873, %878
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* nonnull align 8 %874, i64 24, i1 false) #14
  %881 = bitcast %"class.SkSL::String"* %64 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %882 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %881, i64 0, i32 1, i32 0
  store i8 0, i8* %882, align 1
  store i8 0, i8* %874, align 8
  %883 = bitcast %"class.SkSL::String"* %65 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %884 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %883, i64 0, i32 1, i32 0
  %885 = load i8, i8* %884, align 1
  %886 = icmp slt i8 %885, 0
  br i1 %886, label %887, label %890

887:                                              ; preds = %880
  %888 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %889 = load i8*, i8** %888, align 8
  call void @_ZdlPv(i8* %889) #15
  br label %890

890:                                              ; preds = %880, %887
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %875) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %874) #14
  br label %891

891:                                              ; preds = %864, %890
  %892 = load i32, i32* %413, align 8
  %893 = and i32 %892, 16
  %894 = icmp eq i32 %893, 0
  br i1 %894, label %897, label %895

895:                                              ; preds = %891
  %896 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.143, i64 0, i64 0)) #14
  br label %897

897:                                              ; preds = %891, %895
  ret void
}

declare zeroext i1 @_ZNK4SkSL6StringeqEPKc(%"class.SkSL::String"*, i8*) local_unnamed_addr #2

declare %"class.SkSL::Statement"* @_ZN4SkSL11IfStatement7ConvertERKNS_7ContextEibNSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEENS5_INS_9StatementENS7_ISA_EEEESC_(%"class.SkSL::Context"* dereferenceable(744), i32, i1 zeroext, %"class.SkSL::Expression"*, %"class.SkSL::Statement"*, %"class.SkSL::Statement"*) local_unnamed_addr #2

declare %"class.SkSL::Statement"* @_ZN4SkSL12ForStatement7ConvertERKNS_7ContextEiNSt3__110unique_ptrINS_9StatementENS4_14default_deleteIS6_EEEENS5_INS_10ExpressionENS7_ISA_EEEESC_S9_NS4_10shared_ptrINS_11SymbolTableEEE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Statement"*, %"class.SkSL::Expression"*, %"class.SkSL::Expression"*, %"class.SkSL::Statement"*, %"class.std::__1::shared_ptr"* byval(%"class.std::__1::shared_ptr") align 8) local_unnamed_addr #2

declare %"class.SkSL::Statement"* @_ZN4SkSL12ForStatement12ConvertWhileERKNS_7ContextEiNSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEENS5_INS_9StatementENS7_ISA_EEEENS4_10shared_ptrINS_11SymbolTableEEE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Expression"*, %"class.SkSL::Statement"*, %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"*) local_unnamed_addr #2

declare %"class.SkSL::Statement"* @_ZN4SkSL11DoStatement7ConvertERKNS_7ContextENSt3__110unique_ptrINS_9StatementENS4_14default_deleteIS6_EEEENS5_INS_10ExpressionENS7_ISA_EEEE(%"class.SkSL::Context"* dereferenceable(744), %"class.SkSL::Statement"*, %"class.SkSL::Expression"*) local_unnamed_addr #2

declare %"class.SkSL::Statement"* @_ZN4SkSL15SwitchStatement7ConvertERKNS_7ContextEibNSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEE9SkSTArrayILi2ES9_Lb0EESA_ILi2ENS5_INS_9StatementENS7_ISC_EEEELb0EENS4_10shared_ptrINS_11SymbolTableEEE(%"class.SkSL::Context"* dereferenceable(744), i32, i1 zeroext, %"class.SkSL::Expression"*, %class.SkSTArray.215*, %class.SkSTArray*, %"class.std::__1::shared_ptr"* byval(%"class.std::__1::shared_ptr") align 8) local_unnamed_addr #2

declare %"class.SkSL::Statement"* @_ZN4SkSL19ExpressionStatement4MakeERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEE(%"class.SkSL::Context"* dereferenceable(744), %"class.SkSL::Expression"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Statement"* @_ZN4SkSL11IRGenerator13convertReturnEiNSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEE(%"class.SkSL::IRGenerator"* nocapture readnone, i32, %"class.SkSL::Expression"*) local_unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.SkSL::Expression"* %2 to i64
  %5 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 24) #14
  %6 = getelementptr inbounds i8, i8* %5, i64 8
  %7 = bitcast i8* %6 to i32*
  store i32 %1, i32* %7, align 8
  %8 = getelementptr inbounds i8, i8* %5, i64 12
  %9 = bitcast i8* %8 to i32*
  store i32 26, i32* %9, align 4
  %10 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL15ReturnStatementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 16
  %12 = bitcast i8* %11 to i64*
  store i64 %4, i64* %12, align 8
  %13 = bitcast i8* %5 to %"class.SkSL::Statement"*
  ret %"class.SkSL::Statement"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Block"* @_ZN4SkSL11IRGenerator27applyInvocationIDWorkaroundENSt3__110unique_ptrINS_5BlockENS1_14default_deleteIS3_EEEE(%"class.SkSL::IRGenerator"* nocapture, %"class.SkSL::Block"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkSL::dsl::DSLStatement", align 8
  %4 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %5 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %6 = alloca %"class.std::__1::unique_ptr.165", align 8
  %7 = alloca %"class.std::__1::vector.208", align 8
  %8 = alloca %"struct.SkSL::Modifiers", align 8
  %9 = alloca %"class.std::__1::unique_ptr.139", align 8
  %10 = alloca %"class.SkSL::dsl::DSLVar", align 8
  %11 = alloca %"class.SkSL::dsl::DSLBlock", align 8
  %12 = alloca %"class.SkSL::dsl::DSLStatement", align 8
  %13 = alloca %"class.SkSL::dsl::DSLStatement", align 8
  %14 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %15 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %16 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %17 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %18 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %19 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %20 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %21 = alloca %"class.SkSL::dsl::DSLStatement", align 8
  %22 = alloca %"class.SkSL::dsl::DSLBlock", align 8
  %23 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %24 = alloca %"class.SkSL::dsl::DSLFunction", align 8
  %25 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %26 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %27 = alloca %class.SkTArray.242, align 8
  %28 = alloca %"class.SkSL::dsl::PositionInfo", align 8
  %29 = ptrtoint %"class.SkSL::Block"* %1 to i64
  %30 = bitcast %"struct.SkSL::Modifiers"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %30) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 80, i1 false)
  %31 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %8, i64 0, i32 0, i32 0
  store i32 0, i32* %31, align 8
  %32 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %8, i64 0, i32 0, i32 1
  %33 = bitcast i32* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %33, i8 -1, i64 40, i1 false)
  %34 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %8, i64 0, i32 0, i32 11
  %35 = bitcast [4 x i8]* %34 to i32*
  store i32 -1431655766, i32* %35, align 4
  %36 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %8, i64 0, i32 0, i32 12, i32 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.30, i64 0, i64 0), i8** %36, align 8
  %37 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %8, i64 0, i32 0, i32 12, i32 1
  store i64 0, i64* %37, align 8
  %38 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %8, i64 0, i32 0, i32 13
  store i32 0, i32* %38, align 8
  %39 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %8, i64 0, i32 0, i32 14
  %40 = bitcast [4 x i8]* %39 to i32*
  store i32 -1431655766, i32* %40, align 4
  %41 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %8, i64 0, i32 1
  store i32 64, i32* %41, align 8
  %42 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 4, i32 0
  %43 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %42, align 8
  %44 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %45 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %44, align 8
  %46 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %45, i64 0, i32 3
  %47 = load %"class.SkSL::ModifiersPool"*, %"class.SkSL::ModifiersPool"** %46, align 8
  %48 = getelementptr inbounds %"class.SkSL::ModifiersPool", %"class.SkSL::ModifiersPool"* %47, i64 0, i32 0, i32 0
  %49 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %48, %"struct.SkSL::Modifiers"* nonnull dereferenceable(80) %8, %"struct.SkSL::Modifiers"* nonnull dereferenceable(80) %8) #14
  %50 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %49, 0
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %50, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base"* %51 to %"struct.SkSL::Modifiers"*
  %53 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %44, align 8
  %54 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %53, i64 0, i32 0, i32 29, i32 0, i32 0, i32 0
  %55 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %54, align 8
  %56 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 15
  %57 = bitcast %"class.std::__1::vector.208"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57)
  %58 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 96) #14
  %59 = bitcast i8* %58 to %"class.SkSL::FunctionDeclaration"*
  %60 = bitcast %"class.std::__1::vector.208"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 0, i64 24, i1 false)
  %61 = load i8, i8* %56, align 1, !range !2
  %62 = icmp ne i8 %61, 0
  call void @_ZN4SkSL19FunctionDeclarationC1EiPKNS_9ModifiersENS_14StringFragmentENSt3__16vectorIPKNS_8VariableENS5_9allocatorIS9_EEEEPKNS_4TypeEb(%"class.SkSL::FunctionDeclaration"* %59, i32 -1, %"struct.SkSL::Modifiers"* %52, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.32, i64 0, i64 0), i64 7, %"class.std::__1::vector.208"* nonnull %7, %"class.SkSL::Type"* %55, i1 zeroext %62) #14
  %63 = getelementptr inbounds %"class.std::__1::vector.208", %"class.std::__1::vector.208"* %7, i64 0, i32 0, i32 0
  %64 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %63, align 8
  %65 = icmp eq %"class.SkSL::Variable"** %64, null
  br i1 %65, label %71, label %66

66:                                               ; preds = %2
  %67 = getelementptr inbounds %"class.std::__1::vector.208", %"class.std::__1::vector.208"* %7, i64 0, i32 0, i32 1
  %68 = bitcast %"class.SkSL::Variable"*** %67 to i64*
  %69 = ptrtoint %"class.SkSL::Variable"** %64 to i64
  store i64 %69, i64* %68, align 8
  %70 = bitcast %"class.SkSL::Variable"** %64 to i8*
  call void @_ZdlPv(i8* %70) #15
  br label %71

71:                                               ; preds = %2, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57)
  %72 = ptrtoint i8* %58 to i64
  %73 = bitcast i8* %58 to %"class.SkSL::Symbol"*
  call void @_ZN4SkSL11SymbolTable19addWithoutOwnershipEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %43, %"class.SkSL::Symbol"* %73) #14
  %74 = bitcast %"class.std::__1::unique_ptr.165"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #14
  %75 = bitcast %"class.std::__1::unique_ptr.165"* %6 to i64*
  store i64 %72, i64* %75, align 8
  %76 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %43, i64 0, i32 1, i32 0, i32 1
  %77 = load %"class.std::__1::unique_ptr.165"*, %"class.std::__1::unique_ptr.165"** %76, align 8
  %78 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %43, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %79 = load %"class.std::__1::unique_ptr.165"*, %"class.std::__1::unique_ptr.165"** %78, align 8
  %80 = icmp ult %"class.std::__1::unique_ptr.165"* %77, %79
  br i1 %80, label %81, label %87

81:                                               ; preds = %71
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %82, align 8
  %83 = bitcast %"class.std::__1::unique_ptr.165"* %77 to i64*
  store i64 %72, i64* %83, align 8
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %77, i64 1
  %85 = ptrtoint %"class.std::__1::unique_ptr.165"* %84 to i64
  %86 = bitcast %"class.std::__1::unique_ptr.165"** %76 to i64*
  store i64 %85, i64* %86, align 8
  br label %89

87:                                               ; preds = %71
  %88 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %43, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.163"* %88, %"class.std::__1::unique_ptr.165"* nonnull dereferenceable(8) %6) #14
  br label %89

89:                                               ; preds = %87, %81
  %90 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %6, i64 0, i32 0, i32 0, i32 0
  %91 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %90, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %90, align 8
  %92 = icmp eq %"class.SkSL::Symbol"* %91, null
  br i1 %92, label %98, label %93

93:                                               ; preds = %89
  %94 = bitcast %"class.SkSL::Symbol"* %91 to void (%"class.SkSL::Symbol"*)***
  %95 = load void (%"class.SkSL::Symbol"*)**, void (%"class.SkSL::Symbol"*)*** %94, align 8
  %96 = getelementptr inbounds void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %95, i64 1
  %97 = load void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %96, align 8
  call void %97(%"class.SkSL::Symbol"* nonnull %91) #14
  br label %98

98:                                               ; preds = %93, %89
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #14
  %99 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 88) #14
  %100 = load i8, i8* %56, align 1, !range !2
  %101 = getelementptr inbounds i8, i8* %99, i64 8
  %102 = bitcast i8* %101 to i32*
  store i32 -1, i32* %102, align 8
  %103 = getelementptr inbounds i8, i8* %99, i64 12
  %104 = bitcast i8* %103 to i32*
  store i32 2, i32* %104, align 4
  %105 = bitcast i8* %99 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL18FunctionDefinitionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %105, align 8
  %106 = getelementptr inbounds i8, i8* %99, i64 16
  %107 = bitcast i8* %106 to i64*
  store i64 %72, i64* %107, align 8
  %108 = getelementptr inbounds i8, i8* %99, i64 24
  store i8 %100, i8* %108, align 8
  %109 = getelementptr inbounds i8, i8* %99, i64 32
  %110 = bitcast i8* %109 to i64*
  store i64 %29, i64* %110, align 8
  %111 = getelementptr inbounds i8, i8* %99, i64 40
  %112 = getelementptr inbounds i8, i8* %99, i64 72
  %113 = bitcast i8* %112 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %111, i8 0, i64 32, i1 false) #14
  store i32 1065353216, i32* %113, align 8
  %114 = getelementptr inbounds i8, i8* %99, i64 80
  %115 = bitcast i8* %114 to %"struct.SkSL::ASTNode"**
  store %"struct.SkSL::ASTNode"* null, %"struct.SkSL::ASTNode"** %115, align 8
  %116 = ptrtoint i8* %99 to i64
  %117 = getelementptr inbounds i8, i8* %58, i64 40
  %118 = bitcast i8* %117 to i8**
  store i8* %99, i8** %118, align 8
  %119 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 10
  %120 = load %"class.std::__1::vector.137"*, %"class.std::__1::vector.137"** %119, align 8
  %121 = bitcast %"class.std::__1::unique_ptr.139"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121) #14
  %122 = bitcast %"class.std::__1::unique_ptr.139"* %9 to i64*
  store i64 %116, i64* %122, align 8
  %123 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %120, i64 0, i32 0, i32 1
  %124 = load %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %123, align 8
  %125 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %120, i64 0, i32 0, i32 2, i32 0, i32 0
  %126 = load %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %125, align 8
  %127 = icmp ult %"class.std::__1::unique_ptr.139"* %124, %126
  br i1 %127, label %128, label %134

128:                                              ; preds = %98
  %129 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %129, align 8
  %130 = bitcast %"class.std::__1::unique_ptr.139"* %124 to i64*
  store i64 %116, i64* %130, align 8
  %131 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %124, i64 1
  %132 = ptrtoint %"class.std::__1::unique_ptr.139"* %131 to i64
  %133 = bitcast %"class.std::__1::unique_ptr.139"** %123 to i64*
  store i64 %132, i64* %133, align 8
  br label %135

134:                                              ; preds = %98
  call void @_ZNSt3__16vectorINS_10unique_ptrIN4SkSL14ProgramElementENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.137"* %120, %"class.std::__1::unique_ptr.139"* nonnull dereferenceable(8) %9) #14
  br label %135

135:                                              ; preds = %128, %134
  %136 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %9, i64 0, i32 0, i32 0, i32 0
  %137 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %136, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %136, align 8
  %138 = icmp eq %"class.SkSL::ProgramElement"* %137, null
  br i1 %138, label %144, label %139

139:                                              ; preds = %135
  %140 = bitcast %"class.SkSL::ProgramElement"* %137 to void (%"class.SkSL::ProgramElement"*)***
  %141 = load void (%"class.SkSL::ProgramElement"*)**, void (%"class.SkSL::ProgramElement"*)*** %140, align 8
  %142 = getelementptr inbounds void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %141, i64 1
  %143 = load void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %142, align 8
  call void %143(%"class.SkSL::ProgramElement"* nonnull %137) #14
  br label %144

144:                                              ; preds = %135, %139
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121) #14
  %145 = bitcast %"class.SkSL::dsl::DSLVar"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %145) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %145, i8 -86, i64 152, i1 false)
  call void @_ZN4SkSL3dsl6DSLVarC1EPKc(%"class.SkSL::dsl::DSLVar"* nonnull %10, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.33, i64 0, i64 0)) #14
  %146 = call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator17convertIdentifierEiNS_14StringFragmentE(%"class.SkSL::IRGenerator"* %0, i32 -1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.34, i64 0, i64 0), i64 12)
  %147 = getelementptr inbounds %"class.SkSL::dsl::DSLBlock", %"class.SkSL::dsl::DSLBlock"* %11, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %147) #14
  %148 = bitcast %"class.SkSL::dsl::DSLExpression"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %148)
  call void @_ZN4SkSL3dsl13DSLExpressionC1Ei(%"class.SkSL::dsl::DSLExpression"* nonnull %5, i32 0) #14, !noalias !90
  call void @_ZN4SkSL3dsl6DSLVaraSENS0_13DSLExpressionE(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %14, %"class.SkSL::dsl::DSLVar"* nonnull %10, %"class.SkSL::dsl::DSLExpression"* nonnull %5) #14
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %148)
  call void @_ZN4SkSL3dsl12DSLStatementC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLStatement"* nonnull %13, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %14, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.35, i64 0, i64 0), i32 697) #14
  call void @_ZN4SkSL3dsl13DSLExpressionC1ERNS0_6DSLVarE(%"class.SkSL::dsl::DSLExpression"* nonnull %17, %"class.SkSL::dsl::DSLVar"* nonnull dereferenceable(152) %10) #14
  %149 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 7
  %150 = load i32, i32* %149, align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1Ei(%"class.SkSL::dsl::DSLExpression"* nonnull %18, i32 %150) #14
  call void @_ZN4SkSL3dslltENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %16, %"class.SkSL::dsl::DSLExpression"* nonnull %17, %"class.SkSL::dsl::DSLExpression"* nonnull %18) #14
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nonnull %15, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %16, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.35, i64 0, i64 0), i32 697) #14
  %151 = bitcast %"class.SkSL::dsl::DSLExpression"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %151)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ERNS0_6DSLVarE(%"class.SkSL::dsl::DSLExpression"* nonnull %4, %"class.SkSL::dsl::DSLVar"* nonnull dereferenceable(152) %10) #14, !noalias !93
  call void @_ZN4SkSL3dslppENS0_13DSLExpressionEi(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %20, %"class.SkSL::dsl::DSLExpression"* nonnull %4, i32 0) #14
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %151)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nonnull %19, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %20, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.35, i64 0, i64 0), i32 697) #14
  %152 = bitcast %"class.SkSL::dsl::DSLFunction"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %152) #14
  %153 = getelementptr inbounds %"class.SkSL::dsl::DSLFunction", %"class.SkSL::dsl::DSLFunction"* %24, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4SkSL3dsl11DSLFunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %153, align 8
  %154 = getelementptr inbounds %"class.SkSL::dsl::DSLFunction", %"class.SkSL::dsl::DSLFunction"* %24, i64 0, i32 1
  %155 = bitcast %"class.SkSL::FunctionDeclaration"** %154 to i8**
  store i8* %58, i8** %155, align 8
  call void @_ZN4SkSL3dsl11DSLFunctionclIJEEENS0_13DSLExpressionEDpOT_(%"class.SkSL::dsl::DSLExpression"* nonnull sret %23, %"class.SkSL::dsl::DSLFunction"* nonnull %24)
  %156 = bitcast %"class.SkSL::dsl::DSLExpression"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %156) #14
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"* nonnull %26, %"class.SkSL::Expression"* %146) #14
  %157 = getelementptr inbounds %class.SkTArray.242, %class.SkTArray.242* %27, i64 0, i32 1
  %158 = getelementptr inbounds %class.SkTArray.242, %class.SkTArray.242* %27, i64 0, i32 0
  store %"class.SkSL::dsl::DSLWrapper"* null, %"class.SkSL::dsl::DSLWrapper"** %158, align 8
  store i64 1, i64* %157, align 8
  call void @_ZN4SkSL3dsl13DSLExpressionclE8SkTArrayINS0_10DSLWrapperIS1_EELb0EE(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %25, %"class.SkSL::dsl::DSLExpression"* nonnull %26, %class.SkTArray.242* nonnull %27) #14
  call void @_ZN4SkSL3dsl8DSLBlockC2IJNS0_13DSLExpressionENS0_21DSLPossibleExpressionEEEEDpT_(%"class.SkSL::dsl::DSLBlock"* nonnull %22, %"class.SkSL::dsl::DSLExpression"* nonnull %23, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %25)
  call void @_ZN4SkSL3dsl12DSLStatementC1ENS0_8DSLBlockE(%"class.SkSL::dsl::DSLStatement"* nonnull %21, %"class.SkSL::dsl::DSLBlock"* nonnull %22) #14
  %159 = getelementptr inbounds %"class.SkSL::dsl::PositionInfo", %"class.SkSL::dsl::PositionInfo"* %28, i64 0, i32 0
  store i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.35, i64 0, i64 0), i8** %159, align 8
  %160 = getelementptr inbounds %"class.SkSL::dsl::PositionInfo", %"class.SkSL::dsl::PositionInfo"* %28, i64 0, i32 1
  store i32 697, i32* %160, align 8
  call void @_ZN4SkSL3dsl3ForENS0_12DSLStatementENS0_13DSLExpressionES2_S1_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLStatement"* nonnull sret %12, %"class.SkSL::dsl::DSLStatement"* nonnull %13, %"class.SkSL::dsl::DSLExpression"* nonnull %15, %"class.SkSL::dsl::DSLExpression"* nonnull %19, %"class.SkSL::dsl::DSLStatement"* nonnull %21, %"class.SkSL::dsl::PositionInfo"* nonnull byval(%"class.SkSL::dsl::PositionInfo") align 8 %28) #14
  %161 = getelementptr inbounds %"class.SkSL::dsl::DSLBlock", %"class.SkSL::dsl::DSLBlock"* %11, i64 0, i32 0, i32 0, i32 0, i64 16
  %162 = getelementptr inbounds %"class.SkSL::dsl::DSLBlock", %"class.SkSL::dsl::DSLBlock"* %11, i64 0, i32 0, i32 0, i32 0, i64 24
  %163 = bitcast i8* %162 to i64*
  %164 = bitcast i8* %161 to i8**
  store i8* %147, i8** %164, align 8
  store i64 17179869184, i64* %163, align 8
  %165 = getelementptr inbounds %"class.SkSL::dsl::DSLBlock", %"class.SkSL::dsl::DSLBlock"* %11, i64 0, i32 1
  %166 = bitcast %"class.std::__1::shared_ptr"* %165 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %166, i8 0, i64 16, i1 false) #14
  %167 = bitcast i8* %161 to %class.SkTArray*
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %167, i32 1, i32 0) #14
  %168 = load i64, i64* %163, align 8
  %169 = shl i64 %168, 32
  %170 = and i64 %169, 4294967296
  %171 = and i64 %168, -4294967297
  %172 = or i64 %170, %171
  store i64 %172, i64* %163, align 8
  %173 = bitcast %"class.SkSL::dsl::DSLStatement"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %173) #14
  %174 = getelementptr inbounds %"class.SkSL::dsl::DSLStatement", %"class.SkSL::dsl::DSLStatement"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %175 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %174, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %174, align 8
  call void @_ZN4SkSL3dsl12DSLStatementC1ENSt3__110unique_ptrINS_9StatementENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLStatement"* nonnull %3, %"class.SkSL::Statement"* %175) #14
  %176 = getelementptr inbounds %"class.SkSL::dsl::DSLStatement", %"class.SkSL::dsl::DSLStatement"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %177 = bitcast %"class.SkSL::dsl::DSLStatement"* %3 to i64*
  %178 = load i64, i64* %177, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %176, align 8
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %167, i32 1, i32 1) #14
  %179 = bitcast i8* %161 to %"class.std::__1::unique_ptr.190"**
  %180 = load %"class.std::__1::unique_ptr.190"*, %"class.std::__1::unique_ptr.190"** %179, align 8
  %181 = load i64, i64* %163, align 8
  %182 = lshr i64 %181, 1
  %183 = and i64 %182, 2147483647
  %184 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %180, i64 %183
  %185 = add i64 %181, 2
  %186 = and i64 %185, 4294967294
  %187 = and i64 %181, -4294967295
  %188 = or i64 %186, %187
  store i64 %188, i64* %163, align 8
  %189 = bitcast %"class.std::__1::unique_ptr.190"* %184 to i64*
  store i64 %178, i64* %189, align 8
  call void @_ZN4SkSL3dsl12DSLStatementD1Ev(%"class.SkSL::dsl::DSLStatement"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %173) #14
  %190 = call %"class.SkSL::Statement"* @_ZN4SkSL3dsl8DSLBlock7releaseEv(%"class.SkSL::dsl::DSLBlock"* nonnull %11) #14
  call void @_ZN4SkSL3dsl8DSLBlockD1Ev(%"class.SkSL::dsl::DSLBlock"* nonnull %11) #14
  call void @_ZN4SkSL3dsl12DSLStatementD1Ev(%"class.SkSL::dsl::DSLStatement"* nonnull %12) #14
  call void @_ZN4SkSL3dsl12DSLStatementD1Ev(%"class.SkSL::dsl::DSLStatement"* nonnull %21) #14
  call void @_ZN4SkSL3dsl8DSLBlockD1Ev(%"class.SkSL::dsl::DSLBlock"* nonnull %22) #14
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %25) #14
  %191 = load i64, i64* %157, align 8
  %192 = and i64 %191, 4294967294
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %194, label %198

194:                                              ; preds = %198, %144
  %195 = phi i64 [ %191, %144 ], [ %203, %198 ]
  %196 = and i64 %195, 1
  %197 = icmp eq i64 %196, 0
  br i1 %197, label %210, label %207

198:                                              ; preds = %144, %198
  %199 = phi i64 [ %202, %198 ], [ 0, %144 ]
  %200 = load %"class.SkSL::dsl::DSLWrapper"*, %"class.SkSL::dsl::DSLWrapper"** %158, align 8
  %201 = getelementptr inbounds %"class.SkSL::dsl::DSLWrapper", %"class.SkSL::dsl::DSLWrapper"* %200, i64 %199, i32 0
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* %201) #14
  %202 = add nuw nsw i64 %199, 1
  %203 = load i64, i64* %157, align 8
  %204 = lshr i64 %203, 1
  %205 = and i64 %204, 2147483647
  %206 = icmp ult i64 %202, %205
  br i1 %206, label %198, label %194

207:                                              ; preds = %194
  %208 = bitcast %class.SkTArray.242* %27 to i8**
  %209 = load i8*, i8** %208, align 8
  call void @_Z7sk_freePv(i8* %209) #14
  br label %210

210:                                              ; preds = %194, %207
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %26) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %156) #14
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %23) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %152) #14
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %19) #14
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %20) #14
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %15) #14
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %16) #14
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %18) #14
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %17) #14
  call void @_ZN4SkSL3dsl12DSLStatementD1Ev(%"class.SkSL::dsl::DSLStatement"* nonnull %13) #14
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %14) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %147) #14
  %211 = bitcast %"class.SkSL::Statement"* %190 to %"class.SkSL::Block"*
  call void @_ZN4SkSL3dsl6DSLVarD1Ev(%"class.SkSL::dsl::DSLVar"* nonnull %10) #14
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %145) #14
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %30) #14
  ret %"class.SkSL::Block"* %211
}

declare void @_ZN4SkSL3dsl6DSLVarC1EPKc(%"class.SkSL::dsl::DSLVar"*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator17convertIdentifierEiNS_14StringFragmentE(%"class.SkSL::IRGenerator"* nocapture, i32, i8*, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::vector.315", align 16
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 4, i32 0
  %10 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %9, align 8
  %11 = tail call %"class.SkSL::Symbol"* @_ZN4SkSL11SymbolTableixENS_14StringFragmentE(%"class.SkSL::SymbolTable"* %10, i8* %2, i64 %3) #14
  %12 = icmp eq %"class.SkSL::Symbol"* %11, null
  br i1 %12, label %13, label %71

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %15 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %14, align 8
  %16 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %15, i64 0, i32 1
  %17 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %16, align 8
  %18 = bitcast %"class.SkSL::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #14
  %19 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #14
  %20 = icmp ugt i64 %3, -17
  br i1 %20, label %21, label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.SkSL::String"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %22) #16
  unreachable

23:                                               ; preds = %13
  %24 = icmp ult i64 %3, 23
  br i1 %24, label %33, label %25

25:                                               ; preds = %23
  %26 = add nuw i64 %3, 16
  %27 = and i64 %26, -16
  %28 = tail call i8* @_Znwm(i64 %27) #15
  %29 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %28, i8** %29, align 8
  %30 = or i64 %27, -9223372036854775808
  %31 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %3, i64* %32, align 8
  br label %38

33:                                               ; preds = %23
  %34 = trunc i64 %3 to i8
  %35 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  store i8 %34, i8* %36, align 1
  %37 = icmp eq i64 %3, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %33, %25
  %39 = phi i8* [ %28, %25 ], [ %19, %33 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %39, i8* align 1 %2, i64 %3, i1 false) #14
  br label %40

40:                                               ; preds = %33, %38
  %41 = phi i8* [ %19, %33 ], [ %39, %38 ]
  %42 = getelementptr inbounds i8, i8* %41, i64 %3
  store i8 0, i8* %42, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %7, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.76, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %8) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %6, %"class.SkSL::String"* nonnull %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #14
  %43 = bitcast %"class.SkSL::ErrorReporter"* %17 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %44 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %44, i64 2
  %46 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %45, align 8
  call void %46(%"class.SkSL::ErrorReporter"* %17, i32 %1, %"class.SkSL::String"* nonnull %6) #14
  %47 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %40
  %52 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  call void @_ZdlPv(i8* %53) #15
  br label %54

54:                                               ; preds = %40, %51
  %55 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  call void @_ZdlPv(i8* %61) #15
  br label %62

62:                                               ; preds = %54, %59
  %63 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  call void @_ZdlPv(i8* %69) #15
  br label %70

70:                                               ; preds = %62, %67
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #14
  br label %301

71:                                               ; preds = %4
  %72 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %11, i64 0, i32 0, i32 2
  %73 = load i32, i32* %72, align 4
  switch i32 %73, label %300 [
    i32 11, label %74
    i32 14, label %101
    i32 15, label %158
    i32 10, label %254
    i32 13, label %267
    i32 9, label %285
  ]

74:                                               ; preds = %71
  %75 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %76 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %75, align 8
  %77 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 48) #14
  %78 = tail call i8* @_Znwm(i64 8) #15
  %79 = getelementptr inbounds i8, i8* %78, i64 8
  %80 = bitcast i8* %78 to i64*
  %81 = ptrtoint %"class.SkSL::Symbol"* %11 to i64
  store i64 %81, i64* %80, align 8
  %82 = ptrtoint i8* %79 to i64
  %83 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %76, i64 0, i32 0, i32 28, i32 0, i32 0, i32 0
  %84 = bitcast %"class.SkSL::Type"** %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast i8* %77 to i32 (...)***
  %87 = getelementptr inbounds i8, i8* %77, i64 8
  %88 = bitcast i8* %87 to i32*
  store i32 %1, i32* %88, align 8
  %89 = getelementptr inbounds i8, i8* %77, i64 12
  %90 = bitcast i8* %89 to i32*
  store i32 46, i32* %90, align 4
  %91 = getelementptr inbounds i8, i8* %77, i64 16
  %92 = bitcast i8* %91 to i64*
  store i64 %85, i64* %92, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL17FunctionReferenceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %86, align 8
  %93 = getelementptr inbounds i8, i8* %77, i64 24
  %94 = ptrtoint i8* %78 to i64
  %95 = bitcast i8* %93 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds i8, i8* %77, i64 32
  %97 = bitcast i8* %96 to i64*
  store i64 %82, i64* %97, align 8
  %98 = getelementptr inbounds i8, i8* %77, i64 40
  %99 = bitcast i8* %98 to i64*
  store i64 %82, i64* %99, align 8
  %100 = ptrtoint i8* %77 to i64
  br label %301

101:                                              ; preds = %71
  %102 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %103 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %102, align 8
  %104 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %11, i64 1
  %105 = bitcast %"class.std::__1::vector.315"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %105)
  %106 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 48) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %105, i8 0, i64 24, i1 false) #14
  %107 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %11, i64 1, i32 0, i32 1
  %108 = bitcast i32* %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.SkSL::Symbol"* %104 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = sub i64 %109, %111
  %113 = ashr exact i64 %112, 3
  %114 = icmp eq i64 %112, 0
  br i1 %114, label %137, label %115

115:                                              ; preds = %101
  %116 = icmp ugt i64 %113, 2305843009213693951
  br i1 %116, label %117, label %119

117:                                              ; preds = %115
  %118 = bitcast %"class.std::__1::vector.315"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %118) #16
  unreachable

119:                                              ; preds = %115
  %120 = tail call i8* @_Znwm(i64 %112) #15
  %121 = bitcast i8* %120 to %"class.SkSL::FunctionDeclaration"**
  %122 = getelementptr inbounds %"class.std::__1::vector.315", %"class.std::__1::vector.315"* %5, i64 0, i32 0, i32 1
  %123 = bitcast %"class.SkSL::FunctionDeclaration"*** %122 to i8**
  store i8* %120, i8** %123, align 8
  %124 = bitcast %"class.std::__1::vector.315"* %5 to i8**
  store i8* %120, i8** %124, align 16
  %125 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %121, i64 %113
  %126 = getelementptr inbounds %"class.std::__1::vector.315", %"class.std::__1::vector.315"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.SkSL::FunctionDeclaration"** %125, %"class.SkSL::FunctionDeclaration"*** %126, align 16
  %127 = bitcast %"class.SkSL::FunctionDeclaration"*** %122 to i64*
  %128 = ptrtoint i8* %120 to i64
  %129 = icmp sgt i64 %112, 0
  br i1 %129, label %130, label %135

130:                                              ; preds = %119
  %131 = lshr exact i64 %112, 3
  %132 = inttoptr i64 %111 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %120, i8* align 8 %132, i64 %112, i1 false) #14
  %133 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %121, i64 %131
  %134 = ptrtoint %"class.SkSL::FunctionDeclaration"** %133 to i64
  br label %135

135:                                              ; preds = %130, %119
  %136 = phi i64 [ %134, %130 ], [ %128, %119 ]
  store i64 %136, i64* %127, align 8
  br label %137

137:                                              ; preds = %101, %135
  %138 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %103, i64 0, i32 0, i32 28, i32 0, i32 0, i32 0
  %139 = bitcast %"class.SkSL::Type"** %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = bitcast i8* %106 to i32 (...)***
  %142 = getelementptr inbounds i8, i8* %106, i64 8
  %143 = bitcast i8* %142 to i32*
  store i32 %1, i32* %143, align 8
  %144 = getelementptr inbounds i8, i8* %106, i64 12
  %145 = bitcast i8* %144 to i32*
  store i32 46, i32* %145, align 4
  %146 = getelementptr inbounds i8, i8* %106, i64 16
  %147 = bitcast i8* %146 to i64*
  store i64 %140, i64* %147, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL17FunctionReferenceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %141, align 8
  %148 = getelementptr inbounds i8, i8* %106, i64 24
  %149 = bitcast %"class.std::__1::vector.315"* %5 to <2 x i64>*
  %150 = load <2 x i64>, <2 x i64>* %149, align 16
  %151 = bitcast i8* %148 to <2 x i64>*
  store <2 x i64> %150, <2 x i64>* %151, align 8
  %152 = getelementptr inbounds %"class.std::__1::vector.315", %"class.std::__1::vector.315"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %153 = bitcast %"class.SkSL::FunctionDeclaration"*** %152 to i64*
  %154 = load i64, i64* %153, align 16
  %155 = getelementptr inbounds i8, i8* %106, i64 40
  %156 = bitcast i8* %155 to i64*
  store i64 %154, i64* %156, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %105)
  %157 = ptrtoint i8* %106 to i64
  br label %301

158:                                              ; preds = %71
  %159 = bitcast %"class.SkSL::Symbol"* %11 to %"class.SkSL::Variable"*
  %160 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %11, i64 1, i32 0, i32 1
  %161 = bitcast i32* %160 to %"struct.SkSL::Modifiers"**
  %162 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %161, align 8
  %163 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %162, i64 0, i32 0, i32 6
  %164 = load i32, i32* %163, align 8
  %165 = icmp eq i32 %164, 15
  br i1 %165, label %169, label %166

166:                                              ; preds = %158
  %167 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %168 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %167, align 8
  br label %186

169:                                              ; preds = %158
  %170 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 1, i32 1
  store i8 1, i8* %170, align 1
  %171 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %172 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %171, align 8
  %173 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %172, i64 0, i32 4
  %174 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %173, align 8
  %175 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %174, i64 0, i32 1, i32 0
  %176 = load i8, i8* %175, align 8, !range !2
  %177 = icmp eq i8 %176, 0
  br i1 %177, label %186, label %178

178:                                              ; preds = %169
  %179 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %172, i64 0, i32 2
  %180 = load %class.GrShaderCaps*, %class.GrShaderCaps** %179, align 8
  %181 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %180, i64 0, i32 7
  %182 = load i8*, i8** %181, align 8
  %183 = icmp eq i8* %182, null
  br i1 %183, label %184, label %186

184:                                              ; preds = %178
  %185 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 1, i32 0
  store i8 1, i8* %185, align 8
  br label %186

186:                                              ; preds = %166, %178, %169, %184
  %187 = phi %"class.SkSL::Context"* [ %168, %166 ], [ %172, %178 ], [ %172, %169 ], [ %172, %184 ]
  %188 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %189 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %187, i64 0, i32 4
  %190 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %189, align 8
  %191 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %190, i64 0, i32 0
  %192 = load i8, i8* %191, align 8
  %193 = icmp eq i8 %192, 3
  br i1 %193, label %194, label %250

194:                                              ; preds = %186
  %195 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %162, i64 0, i32 1
  %196 = load i32, i32* %195, align 8
  %197 = and i32 %196, 10
  %198 = icmp eq i32 %197, 2
  br i1 %198, label %199, label %250

199:                                              ; preds = %194
  %200 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %162, i64 0, i32 0, i32 0
  %201 = load i32, i32* %200, align 8
  %202 = and i32 %201, 16
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %204, label %250

204:                                              ; preds = %199
  %205 = load i32, i32* %163, align 8
  %206 = icmp eq i32 %205, -1
  br i1 %206, label %207, label %250

207:                                              ; preds = %204
  %208 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %11, i64 0, i32 2
  %209 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %208, align 8
  %210 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %209, i64 0, i32 3
  %211 = load i32, i32* %210, align 8
  switch i32 %211, label %212 [
    i32 2, label %250
    i32 6, label %250
  ]

212:                                              ; preds = %207
  %213 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %214 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %213, align 8
  %215 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %214, i64 0, i32 1, i32 0
  %216 = load i32, i32* %215, align 8
  %217 = sext i32 %216 to i64
  %218 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %214, i64 0, i32 0, i32 0, i32 0
  %219 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %218, align 8
  %220 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %219, i64 %217, i32 4, i32 0
  %221 = load i32, i32* %220, align 4
  %222 = icmp sgt i32 %221, -1
  br i1 %222, label %223, label %246

223:                                              ; preds = %212
  %224 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %219, i64 %217, i32 0
  %225 = load %"class.std::__1::vector.52"*, %"class.std::__1::vector.52"** %224, align 8
  %226 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %225, i64 0, i32 0, i32 0
  %227 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %226, align 8
  br label %228

228:                                              ; preds = %223, %241
  %229 = phi %"struct.SkSL::ASTNode"* [ %227, %223 ], [ %242, %241 ]
  %230 = phi i32 [ %221, %223 ], [ %244, %241 ]
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %229, i64 %231, i32 3
  %233 = load i32, i32* %232, align 8
  %234 = icmp eq i32 %233, 28
  br i1 %234, label %235, label %241

235:                                              ; preds = %228
  %236 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %229, i64 %231, i32 1, i32 0, i64 0
  %237 = bitcast i8* %236 to %"struct.SkSL::StringFragment"*
  %238 = tail call zeroext i1 @_ZNK4SkSL14StringFragmenteqEPKc(%"struct.SkSL::StringFragment"* %237, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.77, i64 0, i64 0)) #14
  br i1 %238, label %250, label %239

239:                                              ; preds = %235
  %240 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %226, align 8
  br label %241

241:                                              ; preds = %239, %228
  %242 = phi %"struct.SkSL::ASTNode"* [ %240, %239 ], [ %229, %228 ]
  %243 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %242, i64 %231, i32 6, i32 0
  %244 = load i32, i32* %243, align 4
  %245 = icmp sgt i32 %244, -1
  br i1 %245, label %228, label %246

246:                                              ; preds = %241, %212
  %247 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %188, align 8
  %248 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %247, i64 0, i32 1
  %249 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %248, align 8
  tail call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %249, i32 %1, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @.str.78, i64 0, i64 0))
  br label %250

250:                                              ; preds = %235, %207, %207, %246, %194, %199, %204, %186
  %251 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 40) #14
  %252 = bitcast i8* %251 to %"class.SkSL::VariableReference"*
  tail call void @_ZN4SkSL17VariableReferenceC1EiPKNS_8VariableENS_15VariableRefKindE(%"class.SkSL::VariableReference"* %252, i32 %1, %"class.SkSL::Variable"* nonnull %159, i8 signext 0) #14
  %253 = ptrtoint i8* %251 to i64
  br label %301

254:                                              ; preds = %71
  %255 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %11, i64 1
  %256 = bitcast %"class.SkSL::Symbol"* %255 to %"class.SkSL::Variable"**
  %257 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %256, align 8
  %258 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 40) #14
  %259 = bitcast i8* %258 to %"class.SkSL::VariableReference"*
  tail call void @_ZN4SkSL17VariableReferenceC1EiPKNS_8VariableENS_15VariableRefKindE(%"class.SkSL::VariableReference"* %259, i32 %1, %"class.SkSL::Variable"* %257, i8 signext 0) #14
  %260 = bitcast i8* %258 to %"class.SkSL::Expression"*
  %261 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %262 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %261, align 8
  %263 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %11, i64 1, i32 0, i32 1
  %264 = load i32, i32* %263, align 8
  %265 = tail call %"class.SkSL::Expression"* @_ZN4SkSL11FieldAccess4MakeERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEEiNS_20FieldAccessOwnerKindE(%"class.SkSL::Context"* dereferenceable(744) %262, %"class.SkSL::Expression"* %260, i32 %264, i8 signext 1) #14
  %266 = ptrtoint %"class.SkSL::Expression"* %265 to i64
  br label %301

267:                                              ; preds = %71
  %268 = ptrtoint %"class.SkSL::Symbol"* %11 to i64
  %269 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %270 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %269, align 8
  %271 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #14
  %272 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %270, i64 0, i32 0, i32 28, i32 0, i32 0, i32 0
  %273 = bitcast %"class.SkSL::Type"** %272 to i64*
  %274 = load i64, i64* %273, align 8
  %275 = bitcast i8* %271 to i32 (...)***
  %276 = getelementptr inbounds i8, i8* %271, i64 8
  %277 = bitcast i8* %276 to i32*
  store i32 %1, i32* %277, align 8
  %278 = getelementptr inbounds i8, i8* %271, i64 12
  %279 = bitcast i8* %278 to i32*
  store i32 54, i32* %279, align 4
  %280 = getelementptr inbounds i8, i8* %271, i64 16
  %281 = bitcast i8* %280 to i64*
  store i64 %274, i64* %281, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL13TypeReferenceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %275, align 8
  %282 = getelementptr inbounds i8, i8* %271, i64 24
  %283 = bitcast i8* %282 to i64*
  store i64 %268, i64* %283, align 8
  %284 = ptrtoint i8* %271 to i64
  br label %301

285:                                              ; preds = %71
  %286 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #14
  %287 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %11, i64 0, i32 2
  %288 = bitcast %"class.SkSL::Type"** %287 to i64*
  %289 = load i64, i64* %288, align 8
  %290 = bitcast i8* %286 to i32 (...)***
  %291 = getelementptr inbounds i8, i8* %286, i64 8
  %292 = bitcast i8* %291 to i32*
  store i32 %1, i32* %292, align 8
  %293 = getelementptr inbounds i8, i8* %286, i64 12
  %294 = bitcast i8* %293 to i32*
  store i32 42, i32* %294, align 4
  %295 = getelementptr inbounds i8, i8* %286, i64 16
  %296 = bitcast i8* %295 to i64*
  store i64 %289, i64* %296, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL25ExternalFunctionReferenceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %290, align 8
  %297 = getelementptr inbounds i8, i8* %286, i64 24
  %298 = bitcast i8* %297 to %"class.SkSL::Symbol"**
  store %"class.SkSL::Symbol"* %11, %"class.SkSL::Symbol"** %298, align 8
  %299 = ptrtoint i8* %286 to i64
  br label %301

300:                                              ; preds = %71
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.35, i64 0, i64 0), i32 1322, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.79, i64 0, i64 0), i32 %73) #16
  unreachable

301:                                              ; preds = %285, %267, %254, %250, %137, %74, %70
  %302 = phi i64 [ 0, %70 ], [ %299, %285 ], [ %284, %267 ], [ %266, %254 ], [ %253, %250 ], [ %157, %137 ], [ %100, %74 ]
  %303 = inttoptr i64 %302 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %303
}

declare void @_ZN4SkSL3dsl3ForENS0_12DSLStatementENS0_13DSLExpressionES2_S1_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLStatement"* sret, %"class.SkSL::dsl::DSLStatement"*, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLStatement"*, %"class.SkSL::dsl::PositionInfo"* byval(%"class.SkSL::dsl::PositionInfo") align 8) local_unnamed_addr #2

declare void @_ZN4SkSL3dsl12DSLStatementC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLStatement"*, %"class.SkSL::dsl::DSLPossibleExpression"*, i8*, i32) unnamed_addr #2

declare void @_ZN4SkSL3dslltENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* sret, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*) local_unnamed_addr #2

declare void @_ZN4SkSL3dsl13DSLExpressionC1ERNS0_6DSLVarE(%"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLVar"* dereferenceable(152)) unnamed_addr #2

declare void @_ZN4SkSL3dsl13DSLExpressionC1Ei(%"class.SkSL::dsl::DSLExpression"*, i32) unnamed_addr #2

declare void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLPossibleExpression"*, i8*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL3dsl11DSLFunctionclIJEEENS0_13DSLExpressionEDpOT_(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLFunction"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.SkTArray.242, align 8
  %4 = alloca %class.SkTArray.242, align 8
  %5 = bitcast %class.SkTArray.242* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #14
  %6 = getelementptr inbounds %class.SkTArray.242, %class.SkTArray.242* %3, i64 0, i32 0
  %7 = getelementptr inbounds %class.SkTArray.242, %class.SkTArray.242* %3, i64 0, i32 1
  store %"class.SkSL::dsl::DSLWrapper"* null, %"class.SkSL::dsl::DSLWrapper"** %6, align 8
  store i64 1, i64* %7, align 8
  call void @_ZN8SkTArrayIN4SkSL3dsl10DSLWrapperINS1_13DSLExpressionEEELb0EEC2EOS5_(%class.SkTArray.242* nonnull %4, %class.SkTArray.242* nonnull dereferenceable(16) %3)
  call void @_ZN4SkSL3dsl11DSLFunction4callE8SkTArrayINS0_10DSLWrapperINS0_13DSLExpressionEEELb0EE(%"class.SkSL::dsl::DSLExpression"* sret %0, %"class.SkSL::dsl::DSLFunction"* %1, %class.SkTArray.242* nonnull %4) #14
  %8 = getelementptr inbounds %class.SkTArray.242, %class.SkTArray.242* %4, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 4294967294
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.SkTArray.242, %class.SkTArray.242* %4, i64 0, i32 0
  br label %18

14:                                               ; preds = %18, %2
  %15 = phi i64 [ %9, %2 ], [ %23, %18 ]
  %16 = and i64 %15, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %30, label %27

18:                                               ; preds = %18, %12
  %19 = phi i64 [ 0, %12 ], [ %22, %18 ]
  %20 = load %"class.SkSL::dsl::DSLWrapper"*, %"class.SkSL::dsl::DSLWrapper"** %13, align 8
  %21 = getelementptr inbounds %"class.SkSL::dsl::DSLWrapper", %"class.SkSL::dsl::DSLWrapper"* %20, i64 %19, i32 0
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* %21) #14
  %22 = add nuw nsw i64 %19, 1
  %23 = load i64, i64* %8, align 8
  %24 = lshr i64 %23, 1
  %25 = and i64 %24, 2147483647
  %26 = icmp ult i64 %22, %25
  br i1 %26, label %18, label %14

27:                                               ; preds = %14
  %28 = bitcast %class.SkTArray.242* %4 to i8**
  %29 = load i8*, i8** %28, align 8
  call void @_Z7sk_freePv(i8* %29) #14
  br label %30

30:                                               ; preds = %14, %27
  %31 = load i64, i64* %7, align 8
  %32 = and i64 %31, 4294967294
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %38

34:                                               ; preds = %38, %30
  %35 = phi i64 [ %31, %30 ], [ %43, %38 ]
  %36 = and i64 %35, 1
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %50, label %47

38:                                               ; preds = %30, %38
  %39 = phi i64 [ %42, %38 ], [ 0, %30 ]
  %40 = load %"class.SkSL::dsl::DSLWrapper"*, %"class.SkSL::dsl::DSLWrapper"** %6, align 8
  %41 = getelementptr inbounds %"class.SkSL::dsl::DSLWrapper", %"class.SkSL::dsl::DSLWrapper"* %40, i64 %39, i32 0
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* %41) #14
  %42 = add nuw nsw i64 %39, 1
  %43 = load i64, i64* %7, align 8
  %44 = lshr i64 %43, 1
  %45 = and i64 %44, 2147483647
  %46 = icmp ult i64 %42, %45
  br i1 %46, label %38, label %34

47:                                               ; preds = %34
  %48 = bitcast %class.SkTArray.242* %3 to i8**
  %49 = load i8*, i8** %48, align 8
  call void @_Z7sk_freePv(i8* %49) #14
  br label %50

50:                                               ; preds = %34, %47
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #14
  ret void
}

declare void @_ZN4SkSL3dsl13DSLExpressionC1ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::Expression"*) unnamed_addr #2

declare void @_ZN4SkSL3dsl13DSLExpressionclE8SkTArrayINS0_10DSLWrapperIS1_EELb0EE(%"class.SkSL::dsl::DSLPossibleExpression"* sret, %"class.SkSL::dsl::DSLExpression"*, %class.SkTArray.242*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL3dsl8DSLBlockC2IJNS0_13DSLExpressionENS0_21DSLPossibleExpressionEEEEDpT_(%"class.SkSL::dsl::DSLBlock"*, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLPossibleExpression"*) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.SkSL::dsl::DSLStatement", align 8
  %5 = alloca %"class.SkSL::dsl::DSLStatement", align 8
  %6 = getelementptr inbounds %"class.SkSL::dsl::DSLBlock", %"class.SkSL::dsl::DSLBlock"* %0, i64 0, i32 0, i32 0, i32 0, i64 16
  %7 = getelementptr inbounds %"class.SkSL::dsl::DSLBlock", %"class.SkSL::dsl::DSLBlock"* %0, i64 0, i32 0, i32 0, i32 0, i64 0
  %8 = getelementptr inbounds %"class.SkSL::dsl::DSLBlock", %"class.SkSL::dsl::DSLBlock"* %0, i64 0, i32 0, i32 0, i32 0, i64 24
  %9 = bitcast i8* %8 to i64*
  %10 = bitcast i8* %6 to i8**
  store i8* %7, i8** %10, align 8
  store i64 17179869184, i64* %9, align 8
  %11 = getelementptr inbounds %"class.SkSL::dsl::DSLBlock", %"class.SkSL::dsl::DSLBlock"* %0, i64 0, i32 1
  %12 = bitcast %"class.std::__1::shared_ptr"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #14
  %13 = bitcast i8* %6 to %class.SkTArray*
  tail call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %13, i32 2, i32 0) #14
  %14 = load i64, i64* %9, align 8
  %15 = shl i64 %14, 32
  %16 = and i64 %15, 4294967296
  %17 = and i64 %14, -4294967297
  %18 = or i64 %16, %17
  store i64 %18, i64* %9, align 8
  %19 = bitcast %"class.SkSL::dsl::DSLStatement"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #14
  %20 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl13DSLExpression7releaseEv(%"class.SkSL::dsl::DSLExpression"* %1) #14
  call void @_ZN4SkSL3dsl12DSLStatementC1ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLStatement"* nonnull %4, %"class.SkSL::Expression"* %20) #14
  %21 = getelementptr inbounds %"class.SkSL::dsl::DSLStatement", %"class.SkSL::dsl::DSLStatement"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = bitcast %"class.SkSL::dsl::DSLStatement"* %4 to i64*
  %23 = load i64, i64* %22, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %21, align 8
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %13, i32 1, i32 1) #14
  %24 = bitcast i8* %6 to %"class.std::__1::unique_ptr.190"**
  %25 = load %"class.std::__1::unique_ptr.190"*, %"class.std::__1::unique_ptr.190"** %24, align 8
  %26 = load i64, i64* %9, align 8
  %27 = lshr i64 %26, 1
  %28 = and i64 %27, 2147483647
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %25, i64 %28
  %30 = add i64 %26, 2
  %31 = and i64 %30, 4294967294
  %32 = and i64 %26, -4294967295
  %33 = or i64 %31, %32
  store i64 %33, i64* %9, align 8
  %34 = bitcast %"class.std::__1::unique_ptr.190"* %29 to i64*
  store i64 %23, i64* %34, align 8
  %35 = bitcast %"class.SkSL::dsl::DSLStatement"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #14
  %36 = call %"class.SkSL::Expression"* @_ZN4SkSL3dsl21DSLPossibleExpression7releaseEv(%"class.SkSL::dsl::DSLPossibleExpression"* %2) #14
  call void @_ZN4SkSL3dsl12DSLStatementC1ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLStatement"* nonnull %5, %"class.SkSL::Expression"* %36) #14
  %37 = getelementptr inbounds %"class.SkSL::dsl::DSLStatement", %"class.SkSL::dsl::DSLStatement"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = bitcast %"class.SkSL::dsl::DSLStatement"* %5 to i64*
  %39 = load i64, i64* %38, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %37, align 8
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %13, i32 1, i32 1) #14
  %40 = load %"class.std::__1::unique_ptr.190"*, %"class.std::__1::unique_ptr.190"** %24, align 8
  %41 = load i64, i64* %9, align 8
  %42 = lshr i64 %41, 1
  %43 = and i64 %42, 2147483647
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %40, i64 %43
  %45 = add i64 %41, 2
  %46 = and i64 %45, 4294967294
  %47 = and i64 %41, -4294967295
  %48 = or i64 %46, %47
  store i64 %48, i64* %9, align 8
  %49 = bitcast %"class.std::__1::unique_ptr.190"* %44 to i64*
  store i64 %39, i64* %49, align 8
  call void @_ZN4SkSL3dsl12DSLStatementD1Ev(%"class.SkSL::dsl::DSLStatement"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #14
  call void @_ZN4SkSL3dsl12DSLStatementD1Ev(%"class.SkSL::dsl::DSLStatement"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #14
  ret void
}

declare void @_ZN4SkSL3dsl12DSLStatementC1ENS0_8DSLBlockE(%"class.SkSL::dsl::DSLStatement"*, %"class.SkSL::dsl::DSLBlock"*) unnamed_addr #2

declare %"class.SkSL::Statement"* @_ZN4SkSL3dsl8DSLBlock7releaseEv(%"class.SkSL::dsl::DSLBlock"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4SkSL3dsl8DSLBlockD1Ev(%"class.SkSL::dsl::DSLBlock"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4SkSL3dsl12DSLStatementD1Ev(%"class.SkSL::dsl::DSLStatement"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL3dsl11DSLFunctionD2Ev(%"class.SkSL::dsl::DSLFunction"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4SkSL3dsl6DSLVarD1Ev(%"class.SkSL::dsl::DSLVar"*) unnamed_addr #3

declare void @_ZN4SkSL3dslplENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* sret, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*) local_unnamed_addr #2

declare void @_ZN4SkSL3dslmlENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* sret, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*) local_unnamed_addr #2

declare void @_ZN4SkSL3dsl7SwizzleENS0_13DSLExpressionENS_16SwizzleComponent4TypeES3_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* sret, %"class.SkSL::dsl::DSLExpression"*, i8 signext, i8 signext, i8*, i32) local_unnamed_addr #2

declare void @_ZN4SkSL3dsl13DSLExpression1wENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* sret, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #2

declare void @_ZN4SkSL3dsl13DSLExpressionaSES1_(%"class.SkSL::dsl::DSLPossibleExpression"* sret, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @"_ZZN4SkSL11IRGenerator14CheckModifiersERKNS_7ContextEiRKNS_9ModifiersEiiENK3$_3clENS4_4FlagEPKc"(%class.anon.248* nocapture readonly, i32, i8* nocapture readonly) unnamed_addr #4 align 2 {
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = getelementptr inbounds %class.anon.248, %class.anon.248* %0, i64 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, %1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %85, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %class.anon.248, %class.anon.248* %0, i64 0, i32 1
  %14 = load i32*, i32** %13, align 8
  %15 = load i32, i32* %14, align 4
  %16 = and i32 %15, %1
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %80

18:                                               ; preds = %12
  %19 = getelementptr inbounds %class.anon.248, %class.anon.248* %0, i64 0, i32 2
  %20 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %19, align 8
  %21 = getelementptr inbounds %class.anon.248, %class.anon.248* %0, i64 0, i32 3
  %22 = load i32*, i32** %21, align 8
  %23 = load i32, i32* %22, align 4
  %24 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #14
  %25 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #14
  %26 = tail call i64 @strlen(i8* %2) #14
  %27 = icmp ugt i64 %26, -17
  br i1 %27, label %28, label %30

28:                                               ; preds = %18
  %29 = bitcast %"class.SkSL::String"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %29) #16
  unreachable

30:                                               ; preds = %18
  %31 = icmp ult i64 %26, 23
  br i1 %31, label %40, label %32

32:                                               ; preds = %30
  %33 = add nuw i64 %26, 16
  %34 = and i64 %33, -16
  %35 = tail call i8* @_Znwm(i64 %34) #15
  %36 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %35, i8** %36, align 8
  %37 = or i64 %34, -9223372036854775808
  %38 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %26, i64* %39, align 8
  br label %45

40:                                               ; preds = %30
  %41 = trunc i64 %26 to i8
  %42 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  store i8 %41, i8* %43, align 1
  %44 = icmp eq i64 %26, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %40, %32
  %46 = phi i8* [ %35, %32 ], [ %25, %40 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %46, i8* align 1 %2, i64 %26, i1 false) #14
  br label %47

47:                                               ; preds = %40, %45
  %48 = phi i8* [ %25, %40 ], [ %46, %45 ]
  %49 = getelementptr inbounds i8, i8* %48, i64 %26
  store i8 0, i8* %49, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %6) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::String"* nonnull %5, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.150, i64 0, i64 0)) #14
  %50 = bitcast %"class.SkSL::ErrorReporter"* %20 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %51 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %51, i64 2
  %53 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %52, align 8
  call void %53(%"class.SkSL::ErrorReporter"* %20, i32 %23, %"class.SkSL::String"* nonnull %4) #14
  %54 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %47
  %59 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  call void @_ZdlPv(i8* %60) #15
  br label %61

61:                                               ; preds = %47, %58
  %62 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  call void @_ZdlPv(i8* %68) #15
  br label %69

69:                                               ; preds = %61, %66
  %70 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load i8*, i8** %75, align 8
  call void @_ZdlPv(i8* %76) #15
  br label %77

77:                                               ; preds = %69, %74
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #14
  %78 = load i32*, i32** %7, align 8
  %79 = load i32, i32* %78, align 4
  br label %80

80:                                               ; preds = %12, %77
  %81 = phi i32 [ %9, %12 ], [ %79, %77 ]
  %82 = phi i32* [ %8, %12 ], [ %78, %77 ]
  %83 = xor i32 %1, -1
  %84 = and i32 %81, %83
  store i32 %84, i32* %82, align 4
  br label %85

85:                                               ; preds = %3, %80
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @"_ZZN4SkSL11IRGenerator14CheckModifiersERKNS_7ContextEiRKNS_9ModifiersEiiENK3$_4clENS_6Layout4FlagEPKc"(%class.anon.249* nocapture readonly, i32, i8* nocapture readonly) unnamed_addr #4 align 2 {
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = getelementptr inbounds %class.anon.249, %class.anon.249* %0, i64 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, %1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %85, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %class.anon.249, %class.anon.249* %0, i64 0, i32 1
  %14 = load i32*, i32** %13, align 8
  %15 = load i32, i32* %14, align 4
  %16 = and i32 %15, %1
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %80

18:                                               ; preds = %12
  %19 = getelementptr inbounds %class.anon.249, %class.anon.249* %0, i64 0, i32 2
  %20 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %19, align 8
  %21 = getelementptr inbounds %class.anon.249, %class.anon.249* %0, i64 0, i32 3
  %22 = load i32*, i32** %21, align 8
  %23 = load i32, i32* %22, align 4
  %24 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #14
  %25 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #14
  %26 = tail call i64 @strlen(i8* %2) #14
  %27 = icmp ugt i64 %26, -17
  br i1 %27, label %28, label %30

28:                                               ; preds = %18
  %29 = bitcast %"class.SkSL::String"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %29) #16
  unreachable

30:                                               ; preds = %18
  %31 = icmp ult i64 %26, 23
  br i1 %31, label %40, label %32

32:                                               ; preds = %30
  %33 = add nuw i64 %26, 16
  %34 = and i64 %33, -16
  %35 = tail call i8* @_Znwm(i64 %34) #15
  %36 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %35, i8** %36, align 8
  %37 = or i64 %34, -9223372036854775808
  %38 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %26, i64* %39, align 8
  br label %45

40:                                               ; preds = %30
  %41 = trunc i64 %26 to i8
  %42 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  store i8 %41, i8* %43, align 1
  %44 = icmp eq i64 %26, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %40, %32
  %46 = phi i8* [ %35, %32 ], [ %25, %40 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %46, i8* align 1 %2, i64 %26, i1 false) #14
  br label %47

47:                                               ; preds = %40, %45
  %48 = phi i8* [ %25, %40 ], [ %46, %45 ]
  %49 = getelementptr inbounds i8, i8* %48, i64 %26
  store i8 0, i8* %49, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %5, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.151, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %6) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::String"* nonnull %5, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.150, i64 0, i64 0)) #14
  %50 = bitcast %"class.SkSL::ErrorReporter"* %20 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %51 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %51, i64 2
  %53 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %52, align 8
  call void %53(%"class.SkSL::ErrorReporter"* %20, i32 %23, %"class.SkSL::String"* nonnull %4) #14
  %54 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %47
  %59 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  call void @_ZdlPv(i8* %60) #15
  br label %61

61:                                               ; preds = %47, %58
  %62 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  call void @_ZdlPv(i8* %68) #15
  br label %69

69:                                               ; preds = %61, %66
  %70 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load i8*, i8** %75, align 8
  call void @_ZdlPv(i8* %76) #15
  br label %77

77:                                               ; preds = %69, %74
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #14
  %78 = load i32*, i32** %7, align 8
  %79 = load i32, i32* %78, align 4
  br label %80

80:                                               ; preds = %12, %77
  %81 = phi i32 [ %9, %12 ], [ %79, %77 ]
  %82 = phi i32* [ %8, %12 ], [ %78, %77 ]
  %83 = xor i32 %1, -1
  %84 = and i32 %81, %83
  store i32 %84, i32* %82, align 4
  br label %85

85:                                               ; preds = %3, %80
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL11IRGenerator16finalizeFunctionERKNS_19FunctionDeclarationEPNS_9StatementE(%"class.SkSL::IRGenerator"*, %"class.SkSL::FunctionDeclaration"* dereferenceable(96), %"class.SkSL::Statement"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.Finalizer, align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = bitcast %class.Finalizer* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #14
  %9 = getelementptr inbounds %class.Finalizer, %class.Finalizer* %4, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %class.Finalizer, %class.Finalizer* %4, i64 0, i32 1
  %11 = getelementptr inbounds %class.Finalizer, %class.Finalizer* %4, i64 0, i32 2
  %12 = getelementptr inbounds %class.Finalizer, %class.Finalizer* %4, i64 0, i32 3
  %13 = getelementptr inbounds %class.Finalizer, %class.Finalizer* %4, i64 0, i32 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVZN4SkSL11IRGenerator16finalizeFunctionERKNS_19FunctionDeclarationEPNS_9StatementEE9Finalizer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  store %"class.SkSL::IRGenerator"* %0, %"class.SkSL::IRGenerator"** %10, align 8
  store %"class.SkSL::FunctionDeclaration"* %1, %"class.SkSL::FunctionDeclaration"** %11, align 8
  store i32 0, i32* %12, align 8
  store i32 0, i32* %13, align 4
  %14 = call zeroext i1 @_ZZN4SkSL11IRGenerator16finalizeFunctionERKNS_19FunctionDeclarationEPNS_9StatementEEN9Finalizer14visitStatementERS4_(%class.Finalizer* nonnull %4, %"class.SkSL::Statement"* dereferenceable(16) %2)
  %15 = call zeroext i1 @_ZN4SkSL8Analysis28CanExitWithoutReturningValueERKNS_19FunctionDeclarationERKNS_9StatementE(%"class.SkSL::FunctionDeclaration"* dereferenceable(96) %1, %"class.SkSL::Statement"* dereferenceable(16) %2) #14
  br i1 %15, label %16, label %80

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %18 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %17, align 8
  %19 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %18, i64 0, i32 1
  %20 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %19, align 8
  %21 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %1, i64 0, i32 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #14
  %24 = bitcast %"class.SkSL::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #14
  %25 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %1, i64 0, i32 0, i32 1, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %1, i64 0, i32 0, i32 1, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = icmp ugt i64 %28, -17
  br i1 %29, label %30, label %32

30:                                               ; preds = %16
  %31 = bitcast %"class.SkSL::String"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %31) #16
  unreachable

32:                                               ; preds = %16
  %33 = icmp ult i64 %28, 23
  br i1 %33, label %42, label %34

34:                                               ; preds = %32
  %35 = add nuw i64 %28, 16
  %36 = and i64 %35, -16
  %37 = call i8* @_Znwm(i64 %36) #15
  %38 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %37, i8** %38, align 8
  %39 = or i64 %36, -9223372036854775808
  %40 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %28, i64* %41, align 8
  br label %47

42:                                               ; preds = %32
  %43 = trunc i64 %28 to i8
  %44 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  store i8 %43, i8* %45, align 1
  %46 = icmp eq i64 %28, 0
  br i1 %46, label %49, label %47

47:                                               ; preds = %42, %34
  %48 = phi i8* [ %37, %34 ], [ %24, %42 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %48, i8* align 1 %26, i64 %28, i1 false) #14
  br label %49

49:                                               ; preds = %42, %47
  %50 = phi i8* [ %24, %42 ], [ %48, %47 ]
  %51 = getelementptr inbounds i8, i8* %50, i64 %28
  store i8 0, i8* %51, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %6, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.62, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %7) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %5, %"class.SkSL::String"* nonnull %6, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.63, i64 0, i64 0)) #14
  %52 = bitcast %"class.SkSL::ErrorReporter"* %20 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %53 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %53, i64 2
  %55 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %54, align 8
  call void %55(%"class.SkSL::ErrorReporter"* %20, i32 %22, %"class.SkSL::String"* nonnull %5) #14
  %56 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %49
  %61 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  call void @_ZdlPv(i8* %62) #15
  br label %63

63:                                               ; preds = %49, %60
  %64 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %64, i64 0, i32 1, i32 0
  %66 = load i8, i8* %65, align 1
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %68, label %71

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  call void @_ZdlPv(i8* %70) #15
  br label %71

71:                                               ; preds = %63, %68
  %72 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  %74 = load i8, i8* %73, align 1
  %75 = icmp slt i8 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  call void @_ZdlPv(i8* %78) #15
  br label %79

79:                                               ; preds = %71, %76
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #14
  br label %80

80:                                               ; preds = %79, %3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZZN4SkSL11IRGenerator16finalizeFunctionERKNS_19FunctionDeclarationEPNS_9StatementEEN9Finalizer14visitStatementERS4_(%class.Finalizer*, %"class.SkSL::Statement"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  switch i32 %7, label %161 [
    i32 26, label %8
    i32 20, label %114
    i32 22, label %114
    i32 27, label %127
    i32 17, label %135
    i32 18, label %148
  ]

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.Finalizer, %class.Finalizer* %0, i64 0, i32 2
  %10 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %9, align 8
  %11 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %10, i64 0, i32 4
  %12 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %11, align 8
  %13 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 1
  %14 = bitcast %"class.SkSL::Statement"* %13 to %"class.SkSL::Expression"**
  %15 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %14, align 8
  %16 = icmp eq %"class.SkSL::Expression"* %15, null
  %17 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %12, i64 0, i32 3
  %18 = load i32, i32* %17, align 8
  %19 = icmp ne i32 %18, 12
  br i1 %16, label %43, label %20

20:                                               ; preds = %8
  %21 = getelementptr inbounds %class.Finalizer, %class.Finalizer* %0, i64 0, i32 1
  %22 = load %"class.SkSL::IRGenerator"*, %"class.SkSL::IRGenerator"** %21, align 8
  br i1 %19, label %23, label %36

23:                                               ; preds = %20
  %24 = bitcast %"class.SkSL::Statement"* %13 to i64*
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %14, align 8
  %25 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %22, i64 0, i32 0
  %26 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %25, align 8
  %27 = tail call %"class.SkSL::Expression"* @_ZNK4SkSL4Type16coerceExpressionENSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEERKNS_7ContextE(%"class.SkSL::Type"* %12, %"class.SkSL::Expression"* nonnull %15, %"class.SkSL::Context"* dereferenceable(744) %26) #14
  %28 = ptrtoint %"class.SkSL::Expression"* %27 to i64
  %29 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %14, align 8
  store i64 %28, i64* %24, align 8
  %30 = icmp eq %"class.SkSL::Expression"* %29, null
  br i1 %30, label %161, label %31

31:                                               ; preds = %23
  %32 = bitcast %"class.SkSL::Expression"* %29 to void (%"class.SkSL::Expression"*)***
  %33 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %33, i64 1
  %35 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %34, align 8
  tail call void %35(%"class.SkSL::Expression"* nonnull %29) #14
  br label %161

36:                                               ; preds = %20
  %37 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %22, i64 0, i32 0
  %38 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %37, align 8
  %39 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %38, i64 0, i32 1
  %40 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %39, align 8
  %41 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 0, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  tail call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %40, i32 %42, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.152, i64 0, i64 0))
  br label %161

43:                                               ; preds = %8
  br i1 %19, label %44, label %161

44:                                               ; preds = %43
  %45 = getelementptr inbounds %class.Finalizer, %class.Finalizer* %0, i64 0, i32 1
  %46 = load %"class.SkSL::IRGenerator"*, %"class.SkSL::IRGenerator"** %45, align 8
  %47 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %46, i64 0, i32 0
  %48 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %47, align 8
  %49 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %48, i64 0, i32 1
  %50 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %49, align 8
  %51 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 0, i32 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #14
  %54 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #14
  %55 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %12, i64 0, i32 18
  %56 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %55, align 8, !noalias !96
  %57 = icmp eq %"class.SkSL::Type"* %56, null
  %58 = select i1 %57, %"class.SkSL::Type"* %12, %"class.SkSL::Type"* %56
  %59 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %58, i64 0, i32 0, i32 1, i32 0
  %60 = load i8*, i8** %59, align 8, !noalias !96
  %61 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %58, i64 0, i32 0, i32 1, i32 1
  %62 = load i64, i64* %61, align 8, !noalias !96
  %63 = icmp ugt i64 %62, -17
  br i1 %63, label %64, label %66

64:                                               ; preds = %44
  %65 = bitcast %"class.SkSL::String"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %65) #16
  unreachable

66:                                               ; preds = %44
  %67 = icmp ult i64 %62, 23
  br i1 %67, label %76, label %68

68:                                               ; preds = %66
  %69 = add nuw i64 %62, 16
  %70 = and i64 %69, -16
  %71 = tail call i8* @_Znwm(i64 %70) #15
  %72 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %71, i8** %72, align 8, !alias.scope !96
  %73 = or i64 %70, -9223372036854775808
  %74 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %73, i64* %74, align 8, !alias.scope !96
  %75 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %62, i64* %75, align 8, !alias.scope !96
  br label %81

76:                                               ; preds = %66
  %77 = trunc i64 %62 to i8
  %78 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  store i8 %77, i8* %79, align 1, !alias.scope !96
  %80 = icmp eq i64 %62, 0
  br i1 %80, label %83, label %81

81:                                               ; preds = %76, %68
  %82 = phi i8* [ %71, %68 ], [ %54, %76 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %82, i8* align 1 %60, i64 %62, i1 false) #14
  br label %83

83:                                               ; preds = %76, %81
  %84 = phi i8* [ %54, %76 ], [ %82, %81 ]
  %85 = getelementptr inbounds i8, i8* %84, i64 %62
  store i8 0, i8* %85, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %4, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.153, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %5) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::String"* nonnull %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #14
  %86 = bitcast %"class.SkSL::ErrorReporter"* %50 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %87 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %86, align 8
  %88 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %87, i64 2
  %89 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %88, align 8
  call void %89(%"class.SkSL::ErrorReporter"* %50, i32 %52, %"class.SkSL::String"* nonnull %3) #14
  %90 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %90, i64 0, i32 1, i32 0
  %92 = load i8, i8* %91, align 1
  %93 = icmp slt i8 %92, 0
  br i1 %93, label %94, label %97

94:                                               ; preds = %83
  %95 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load i8*, i8** %95, align 8
  call void @_ZdlPv(i8* %96) #15
  br label %97

97:                                               ; preds = %83, %94
  %98 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %98, i64 0, i32 1, i32 0
  %100 = load i8, i8* %99, align 1
  %101 = icmp slt i8 %100, 0
  br i1 %101, label %102, label %105

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load i8*, i8** %103, align 8
  call void @_ZdlPv(i8* %104) #15
  br label %105

105:                                              ; preds = %97, %102
  %106 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  br i1 %109, label %110, label %113

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load i8*, i8** %111, align 8
  call void @_ZdlPv(i8* %112) #15
  br label %113

113:                                              ; preds = %105, %110
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #14
  br label %161

114:                                              ; preds = %2, %2
  %115 = getelementptr inbounds %class.Finalizer, %class.Finalizer* %0, i64 0, i32 3
  %116 = load i32, i32* %115, align 8
  %117 = add nsw i32 %116, 1
  store i32 %117, i32* %115, align 8
  %118 = getelementptr inbounds %class.Finalizer, %class.Finalizer* %0, i64 0, i32 4
  %119 = load i32, i32* %118, align 4
  %120 = add nsw i32 %119, 1
  store i32 %120, i32* %118, align 4
  %121 = getelementptr inbounds %class.Finalizer, %class.Finalizer* %0, i64 0, i32 0, i32 0
  %122 = tail call zeroext i1 @_ZN4SkSL15TProgramVisitorINS_18ProgramWriterTypesEE14visitStatementERNS_9StatementE(%"class.SkSL::TProgramVisitor"* %121, %"class.SkSL::Statement"* dereferenceable(16) %1) #14
  %123 = load i32, i32* %118, align 4
  %124 = add nsw i32 %123, -1
  store i32 %124, i32* %118, align 4
  %125 = load i32, i32* %115, align 8
  %126 = add nsw i32 %125, -1
  store i32 %126, i32* %115, align 8
  br label %164

127:                                              ; preds = %2
  %128 = getelementptr inbounds %class.Finalizer, %class.Finalizer* %0, i64 0, i32 3
  %129 = load i32, i32* %128, align 8
  %130 = add nsw i32 %129, 1
  store i32 %130, i32* %128, align 8
  %131 = getelementptr inbounds %class.Finalizer, %class.Finalizer* %0, i64 0, i32 0, i32 0
  %132 = tail call zeroext i1 @_ZN4SkSL15TProgramVisitorINS_18ProgramWriterTypesEE14visitStatementERNS_9StatementE(%"class.SkSL::TProgramVisitor"* %131, %"class.SkSL::Statement"* dereferenceable(16) %1) #14
  %133 = load i32, i32* %128, align 8
  %134 = add nsw i32 %133, -1
  store i32 %134, i32* %128, align 8
  br label %164

135:                                              ; preds = %2
  %136 = getelementptr inbounds %class.Finalizer, %class.Finalizer* %0, i64 0, i32 3
  %137 = load i32, i32* %136, align 8
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %161

139:                                              ; preds = %135
  %140 = getelementptr inbounds %class.Finalizer, %class.Finalizer* %0, i64 0, i32 1
  %141 = load %"class.SkSL::IRGenerator"*, %"class.SkSL::IRGenerator"** %140, align 8
  %142 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %141, i64 0, i32 0
  %143 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %142, align 8
  %144 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %143, i64 0, i32 1
  %145 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %144, align 8
  %146 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 0, i32 0, i32 1
  %147 = load i32, i32* %146, align 8
  tail call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %145, i32 %147, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.154, i64 0, i64 0))
  br label %161

148:                                              ; preds = %2
  %149 = getelementptr inbounds %class.Finalizer, %class.Finalizer* %0, i64 0, i32 4
  %150 = load i32, i32* %149, align 4
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %161

152:                                              ; preds = %148
  %153 = getelementptr inbounds %class.Finalizer, %class.Finalizer* %0, i64 0, i32 1
  %154 = load %"class.SkSL::IRGenerator"*, %"class.SkSL::IRGenerator"** %153, align 8
  %155 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %154, i64 0, i32 0
  %156 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %155, align 8
  %157 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %156, i64 0, i32 1
  %158 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %157, align 8
  %159 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %1, i64 0, i32 0, i32 1
  %160 = load i32, i32* %159, align 8
  tail call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %158, i32 %160, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.155, i64 0, i64 0))
  br label %161

161:                                              ; preds = %31, %23, %36, %113, %43, %135, %148, %2, %152, %139
  %162 = getelementptr inbounds %class.Finalizer, %class.Finalizer* %0, i64 0, i32 0, i32 0
  %163 = call zeroext i1 @_ZN4SkSL15TProgramVisitorINS_18ProgramWriterTypesEE14visitStatementERNS_9StatementE(%"class.SkSL::TProgramVisitor"* %162, %"class.SkSL::Statement"* dereferenceable(16) %1) #14
  br label %164

164:                                              ; preds = %161, %127, %114
  %165 = phi i1 [ %163, %161 ], [ %132, %127 ], [ %122, %114 ]
  ret i1 %165
}

declare zeroext i1 @_ZN4SkSL8Analysis28CanExitWithoutReturningValueERKNS_19FunctionDeclarationERKNS_9StatementE(%"class.SkSL::FunctionDeclaration"* dereferenceable(96), %"class.SkSL::Statement"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal void @_ZZN4SkSL11IRGenerator16finalizeFunctionERKNS_19FunctionDeclarationEPNS_9StatementEEN9FinalizerD2Ev(%class.Finalizer* nocapture) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.Finalizer, %class.Finalizer* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVZN4SkSL11IRGenerator16finalizeFunctionERKNS_19FunctionDeclarationEPNS_9StatementEE9Finalizer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL11IRGenerator15convertFunctionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"*, %"struct.SkSL::ASTNode"* dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkScopeExit, align 8
  %4 = alloca %"class.std::__1::vector.251", align 16
  %5 = alloca %"class.std::__1::unique_ptr.218", align 8
  %6 = alloca %"struct.SkSL::Modifiers", align 8
  %7 = alloca %"class.SkSL::FunctionDeclaration"*, align 8
  %8 = alloca %"class.std::__1::vector.251", align 16
  %9 = alloca %"class.std::__1::unique_ptr.139", align 8
  %10 = alloca %"class.std::__1::unique_ptr.202", align 8
  %11 = alloca %"class.std::__1::unique_ptr.139", align 8
  %12 = bitcast %class.SkScopeExit* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #14
  %13 = getelementptr inbounds %class.SkScopeExit, %class.SkScopeExit* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %class.SkScopeExit, %class.SkScopeExit* %3, i64 0, i32 0, i32 0, i32 1, i32 0
  %15 = getelementptr inbounds %class.SkScopeExit, %class.SkScopeExit* %3, i64 0, i32 0, i32 0, i32 2
  %16 = ptrtoint %"class.SkSL::IRGenerator"* %0 to i64
  %17 = bitcast %class.SkScopeExit* %3 to i64*
  %18 = getelementptr inbounds %class.SkScopeExit, %class.SkScopeExit* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i64 0
  store i64 %16, i64* %17, align 8
  %19 = bitcast i8* %18 to <2 x i64>*
  store <2 x i64> <i64 -6148914691236517206, i64 ptrtoint (void (%"union.std::__1::__function::__policy_storage"*)* @"_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN4SkSL11IRGenerator15convertFunctionERKNS6_7ASTNodeEE3$_5S2_EEEEvPKNS0_16__policy_storageE" to i64)>, <2 x i64>* %19, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN4SkSL11IRGenerator15convertFunctionERKNS4_7ASTNodeEE3$_5FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %15, align 8
  %20 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 0
  %21 = load %"class.std::__1::vector.52"*, %"class.std::__1::vector.52"** %20, align 8
  %22 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 4, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %21, i64 0, i32 0, i32 0
  %26 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %25, align 8
  %27 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %26, i64 %24, i32 6, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %26, i64 %24
  %30 = tail call %"class.SkSL::Type"* @_ZN4SkSL11IRGenerator11convertTypeERKNS_7ASTNodeEb(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %29, i1 zeroext true)
  %31 = icmp eq %"class.SkSL::Type"* %30, null
  br i1 %31, label %519, label %32

32:                                               ; preds = %2
  %33 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 1, i32 0, i64 0
  %34 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 1, i32 0, i64 80
  %35 = bitcast i8* %34 to %"struct.SkSL::StringFragment"*
  %36 = tail call zeroext i1 @_ZNK4SkSL14StringFragmenteqEPKc(%"struct.SkSL::StringFragment"* %35, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.64, i64 0, i64 0)) #14
  %37 = bitcast %"class.std::__1::vector.251"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #14
  %38 = getelementptr inbounds %"class.std::__1::vector.251", %"class.std::__1::vector.251"* %4, i64 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.std::__1::vector.251", %"class.std::__1::vector.251"* %4, i64 0, i32 0, i32 1
  %40 = getelementptr inbounds %"class.std::__1::vector.251", %"class.std::__1::vector.251"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %37, i8 0, i64 24, i1 false) #14
  %41 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 1, i32 0, i64 96
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.std::__1::unique_ptr.218"** %40 to i64*
  %45 = bitcast %"class.std::__1::vector.251"* %4 to i64*
  %46 = icmp eq i64 %43, 0
  br i1 %46, label %166, label %47

47:                                               ; preds = %32
  %48 = icmp ugt i64 %43, 2305843009213693951
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #16
  unreachable

50:                                               ; preds = %47
  %51 = bitcast %"class.std::__1::unique_ptr.218"** %39 to i64*
  %52 = shl i64 %43, 3
  %53 = tail call i8* @_Znwm(i64 %52) #15
  %54 = ptrtoint i8* %53 to i64
  %55 = bitcast i8* %53 to %"class.std::__1::unique_ptr.218"*
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218"* %55, i64 %43
  %57 = ptrtoint %"class.std::__1::unique_ptr.218"* %56 to i64
  store i64 %54, i64* %45, align 16
  store i64 %54, i64* %51, align 8
  store i64 %57, i64* %44, align 16
  %58 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 4, i32 0
  %59 = bitcast %"class.std::__1::unique_ptr.218"* %5 to i8*
  %60 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %61 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 15
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218"* %5, i64 0, i32 0, i32 0, i32 0
  %63 = bitcast %"class.std::__1::unique_ptr.218"* %5 to i8**
  %64 = bitcast %"class.std::__1::unique_ptr.218"** %39 to i64*
  br label %65

65:                                               ; preds = %50, %162
  %66 = phi i64 [ 0, %50 ], [ %163, %162 ]
  %67 = phi i32 [ %28, %50 ], [ %71, %162 ]
  %68 = sext i32 %67 to i64
  %69 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %25, align 8
  %70 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %69, i64 %68, i32 6, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %69, i64 %68, i32 1, i32 0, i64 0
  %73 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %69, i64 %68, i32 0
  %74 = load %"class.std::__1::vector.52"*, %"class.std::__1::vector.52"** %73, align 8
  %75 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %69, i64 %68, i32 4, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %74, i64 0, i32 0, i32 0
  %79 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %78, align 8
  %80 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %79, i64 %77, i32 6, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %79, i64 %77
  %83 = call %"class.SkSL::Type"* @_ZN4SkSL11IRGenerator11convertTypeERKNS_7ASTNodeEb(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %82, i1 zeroext false)
  %84 = icmp eq %"class.SkSL::Type"* %83, null
  br i1 %84, label %492, label %85

85:                                               ; preds = %65
  %86 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %69, i64 %68, i32 1, i32 0, i64 96
  %87 = load i8, i8* %86, align 8, !range !2
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %111, label %89

89:                                               ; preds = %85
  %90 = sext i32 %81 to i64
  %91 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %78, align 8
  %92 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %91, i64 %90, i32 3
  %93 = load i32, i32* %92, align 8
  %94 = icmp eq i32 %93, 22
  br i1 %94, label %95, label %101

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %69, i64 %68, i32 2
  %97 = load i32, i32* %96, align 4
  %98 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %60, align 8
  %99 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %98, i64 0, i32 1
  %100 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %99, align 8
  call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %100, i32 %97, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0)) #14
  br label %492

101:                                              ; preds = %89
  %102 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %91, i64 %90
  %103 = call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator17convertExpressionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %102) #14
  %104 = icmp eq %"class.SkSL::Expression"* %103, null
  br i1 %104, label %492, label %105

105:                                              ; preds = %101
  %106 = call i32 @_ZN4SkSL11IRGenerator16convertArraySizeERKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEE(%"class.SkSL::IRGenerator"* %0, %"class.SkSL::Type"* nonnull dereferenceable(184) %83, %"class.SkSL::Expression"* nonnull %103) #14
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %492, label %108

108:                                              ; preds = %105
  %109 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %58, align 8
  %110 = call %"class.SkSL::Type"* @_ZN4SkSL11SymbolTable17addArrayDimensionEPKNS_4TypeEi(%"class.SkSL::SymbolTable"* %109, %"class.SkSL::Type"* nonnull %83, i32 %106) #14
  br label %111

111:                                              ; preds = %108, %85
  %112 = phi %"class.SkSL::Type"* [ %83, %85 ], [ %110, %108 ]
  %113 = ptrtoint %"class.SkSL::Type"* %112 to i64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #14
  %114 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %69, i64 %68, i32 2
  %115 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %60, align 8
  %116 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %115, i64 0, i32 3
  %117 = load %"class.SkSL::ModifiersPool"*, %"class.SkSL::ModifiersPool"** %116, align 8
  %118 = bitcast i8* %72 to %"struct.SkSL::Modifiers"*
  %119 = getelementptr inbounds %"class.SkSL::ModifiersPool", %"class.SkSL::ModifiersPool"* %117, i64 0, i32 0, i32 0
  %120 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %119, %"struct.SkSL::Modifiers"* dereferenceable(80) %118, %"struct.SkSL::Modifiers"* dereferenceable(80) %118) #14
  %121 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %120, 0
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %121, i64 2
  %123 = ptrtoint %"struct.std::__1::__hash_node_base"* %122 to i64
  %124 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %69, i64 %68, i32 1, i32 0, i64 80
  %125 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 64) #14
  %126 = load i32, i32* %114, align 4
  %127 = bitcast i8* %124 to <2 x i64>*
  %128 = load <2 x i64>, <2 x i64>* %127, align 8
  %129 = load i8, i8* %61, align 1, !range !2
  %130 = bitcast i8* %125 to i32 (...)***
  %131 = getelementptr inbounds i8, i8* %125, i64 8
  %132 = bitcast i8* %131 to i32*
  store i32 %126, i32* %132, align 8
  %133 = getelementptr inbounds i8, i8* %125, i64 12
  %134 = bitcast i8* %133 to i32*
  store i32 15, i32* %134, align 4
  %135 = getelementptr inbounds i8, i8* %125, i64 16
  %136 = bitcast i8* %135 to <2 x i64>*
  store <2 x i64> %128, <2 x i64>* %136, align 8
  %137 = getelementptr inbounds i8, i8* %125, i64 32
  %138 = bitcast i8* %137 to i64*
  store i64 %113, i64* %138, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL8VariableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %130, align 8
  %139 = getelementptr inbounds i8, i8* %125, i64 40
  %140 = bitcast i8* %139 to %"class.SkSL::VarDeclaration"**
  store %"class.SkSL::VarDeclaration"* null, %"class.SkSL::VarDeclaration"** %140, align 8
  %141 = getelementptr inbounds i8, i8* %125, i64 48
  %142 = bitcast i8* %141 to i64*
  store i64 %123, i64* %142, align 8
  %143 = getelementptr inbounds i8, i8* %125, i64 56
  store i8 3, i8* %143, align 8
  %144 = getelementptr inbounds i8, i8* %125, i64 57
  store i8 %129, i8* %144, align 1
  store i8* %125, i8** %63, align 8
  %145 = load %"class.std::__1::unique_ptr.218"*, %"class.std::__1::unique_ptr.218"** %39, align 8
  %146 = load %"class.std::__1::unique_ptr.218"*, %"class.std::__1::unique_ptr.218"** %40, align 16
  %147 = icmp ult %"class.std::__1::unique_ptr.218"* %145, %146
  br i1 %147, label %148, label %153

148:                                              ; preds = %111
  %149 = ptrtoint i8* %125 to i64
  store %"class.SkSL::Variable"* null, %"class.SkSL::Variable"** %62, align 8
  %150 = bitcast %"class.std::__1::unique_ptr.218"* %145 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218"* %145, i64 1
  %152 = ptrtoint %"class.std::__1::unique_ptr.218"* %151 to i64
  store i64 %152, i64* %64, align 8
  br label %154

153:                                              ; preds = %111
  call void @_ZNSt3__16vectorINS_10unique_ptrIN4SkSL8VariableENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.251"* nonnull %4, %"class.std::__1::unique_ptr.218"* nonnull dereferenceable(8) %5) #14
  br label %154

154:                                              ; preds = %148, %153
  %155 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %62, align 8
  store %"class.SkSL::Variable"* null, %"class.SkSL::Variable"** %62, align 8
  %156 = icmp eq %"class.SkSL::Variable"* %155, null
  br i1 %156, label %162, label %157

157:                                              ; preds = %154
  %158 = bitcast %"class.SkSL::Variable"* %155 to void (%"class.SkSL::Variable"*)***
  %159 = load void (%"class.SkSL::Variable"*)**, void (%"class.SkSL::Variable"*)*** %158, align 8
  %160 = getelementptr inbounds void (%"class.SkSL::Variable"*)*, void (%"class.SkSL::Variable"*)** %159, i64 1
  %161 = load void (%"class.SkSL::Variable"*)*, void (%"class.SkSL::Variable"*)** %160, align 8
  call void %161(%"class.SkSL::Variable"* nonnull %155) #14
  br label %162

162:                                              ; preds = %154, %157
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #14
  %163 = add nuw i64 %66, 1
  %164 = load i64, i64* %42, align 8
  %165 = icmp ult i64 %163, %164
  br i1 %165, label %65, label %166

166:                                              ; preds = %162, %32
  %167 = phi i32 [ %28, %32 ], [ %71, %162 ]
  %168 = bitcast %"struct.SkSL::Modifiers"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %168) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %168, i8* align 8 %33, i64 80, i1 false)
  %169 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 15
  %170 = load i8, i8* %169, align 4, !range !2
  %171 = icmp eq i8 %170, 0
  br i1 %171, label %172, label %176

172:                                              ; preds = %166
  %173 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %6, i64 0, i32 1
  %174 = load i32, i32* %173, align 8
  %175 = or i32 %174, 64
  store i32 %175, i32* %173, align 8
  br label %176

176:                                              ; preds = %166, %172
  %177 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %178 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %177, align 8
  %179 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %178, i64 0, i32 4
  %180 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %179, align 8
  %181 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %180, i64 0, i32 1, i32 14
  %182 = load i8, i8* %181, align 4, !range !2
  %183 = icmp eq i8 %182, 0
  br i1 %183, label %189, label %184

184:                                              ; preds = %176
  %185 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %6, i64 0, i32 1
  %186 = load i32, i32* %185, align 8
  %187 = and i32 %186, -769
  %188 = or i32 %187, 512
  store i32 %188, i32* %185, align 8
  br label %189

189:                                              ; preds = %176, %184
  %190 = bitcast %"class.SkSL::FunctionDeclaration"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %190) #14
  store %"class.SkSL::FunctionDeclaration"* inttoptr (i64 -6148914691236517206 to %"class.SkSL::FunctionDeclaration"*), %"class.SkSL::FunctionDeclaration"** %7, align 8
  %191 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 4
  %192 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %191, i64 0, i32 0
  %193 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %192, align 8
  %194 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 2
  %195 = load i32, i32* %194, align 4
  %196 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %178, i64 0, i32 3
  %197 = load %"class.SkSL::ModifiersPool"*, %"class.SkSL::ModifiersPool"** %196, align 8
  %198 = getelementptr inbounds %"class.SkSL::ModifiersPool", %"class.SkSL::ModifiersPool"* %197, i64 0, i32 0, i32 0
  %199 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %198, %"struct.SkSL::Modifiers"* nonnull dereferenceable(80) %6, %"struct.SkSL::Modifiers"* nonnull dereferenceable(80) %6) #14
  %200 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %199, 0
  %201 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %200, i64 2
  %202 = bitcast %"struct.std::__1::__hash_node_base"* %201 to %"struct.SkSL::Modifiers"*
  %203 = bitcast i8* %34 to i8**
  %204 = load i8*, i8** %203, align 8
  %205 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 1, i32 0, i64 88
  %206 = bitcast i8* %205 to i64*
  %207 = load i64, i64* %206, align 8
  %208 = bitcast %"class.std::__1::vector.251"* %4 to <2 x i64>*
  %209 = load <2 x i64>, <2 x i64>* %208, align 16
  %210 = getelementptr inbounds %"class.std::__1::vector.251", %"class.std::__1::vector.251"* %8, i64 0, i32 0, i32 1
  %211 = bitcast %"class.std::__1::vector.251"* %8 to <2 x i64>*
  store <2 x i64> %209, <2 x i64>* %211, align 16
  %212 = load i64, i64* %44, align 16
  %213 = getelementptr inbounds %"class.std::__1::vector.251", %"class.std::__1::vector.251"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %214 = bitcast %"class.std::__1::unique_ptr.218"** %213 to i64*
  store i64 %212, i64* %214, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %37, i8 0, i64 24, i1 false) #14
  %215 = load i8, i8* %169, align 4, !range !2
  %216 = icmp ne i8 %215, 0
  %217 = call %"class.SkSL::FunctionDeclaration"* @_ZN4SkSL19FunctionDeclaration7ConvertERKNS_7ContextERNS_11SymbolTableEiPKNS_9ModifiersENS_14StringFragmentENSt3__16vectorINSA_10unique_ptrINS_8VariableENSA_14default_deleteISD_EEEENSA_9allocatorISG_EEEEPKNS_4TypeEb(%"class.SkSL::Context"* dereferenceable(744) %178, %"class.SkSL::SymbolTable"* dereferenceable(104) %193, i32 %195, %"struct.SkSL::Modifiers"* %202, i8* %204, i64 %207, %"class.std::__1::vector.251"* nonnull %8, %"class.SkSL::Type"* nonnull %30, i1 zeroext %216) #14
  %218 = getelementptr inbounds %"class.std::__1::vector.251", %"class.std::__1::vector.251"* %8, i64 0, i32 0, i32 0
  %219 = load %"class.std::__1::unique_ptr.218"*, %"class.std::__1::unique_ptr.218"** %218, align 16
  %220 = icmp eq %"class.std::__1::unique_ptr.218"* %219, null
  br i1 %220, label %243, label %221

221:                                              ; preds = %189
  %222 = bitcast %"class.std::__1::unique_ptr.218"* %219 to i8*
  %223 = load %"class.std::__1::unique_ptr.218"*, %"class.std::__1::unique_ptr.218"** %210, align 8
  %224 = icmp eq %"class.std::__1::unique_ptr.218"* %223, %219
  br i1 %224, label %241, label %225

225:                                              ; preds = %221, %236
  %226 = phi %"class.std::__1::unique_ptr.218"* [ %227, %236 ], [ %223, %221 ]
  %227 = getelementptr inbounds %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218"* %226, i64 -1
  %228 = getelementptr inbounds %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218"* %227, i64 0, i32 0, i32 0, i32 0
  %229 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %228, align 8
  store %"class.SkSL::Variable"* null, %"class.SkSL::Variable"** %228, align 8
  %230 = icmp eq %"class.SkSL::Variable"* %229, null
  br i1 %230, label %236, label %231

231:                                              ; preds = %225
  %232 = bitcast %"class.SkSL::Variable"* %229 to void (%"class.SkSL::Variable"*)***
  %233 = load void (%"class.SkSL::Variable"*)**, void (%"class.SkSL::Variable"*)*** %232, align 8
  %234 = getelementptr inbounds void (%"class.SkSL::Variable"*)*, void (%"class.SkSL::Variable"*)** %233, i64 1
  %235 = load void (%"class.SkSL::Variable"*)*, void (%"class.SkSL::Variable"*)** %234, align 8
  call void %235(%"class.SkSL::Variable"* nonnull %229) #14
  br label %236

236:                                              ; preds = %231, %225
  %237 = icmp eq %"class.std::__1::unique_ptr.218"* %227, %219
  br i1 %237, label %238, label %225

238:                                              ; preds = %236
  %239 = bitcast %"class.std::__1::vector.251"* %8 to i8**
  %240 = load i8*, i8** %239, align 16
  br label %241

241:                                              ; preds = %238, %221
  %242 = phi i8* [ %240, %238 ], [ %222, %221 ]
  store %"class.std::__1::unique_ptr.218"* %219, %"class.std::__1::unique_ptr.218"** %210, align 8
  call void @_ZdlPv(i8* %242) #15
  br label %243

243:                                              ; preds = %189, %241
  store %"class.SkSL::FunctionDeclaration"* %217, %"class.SkSL::FunctionDeclaration"** %7, align 8
  %244 = icmp eq %"class.SkSL::FunctionDeclaration"* %217, null
  br i1 %244, label %491, label %245

245:                                              ; preds = %243
  %246 = icmp slt i32 %167, 0
  br i1 %246, label %247, label %288

247:                                              ; preds = %245
  %248 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 10
  %249 = load %"class.std::__1::vector.137"*, %"class.std::__1::vector.137"** %248, align 8
  %250 = bitcast %"class.std::__1::unique_ptr.139"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %250) #14
  %251 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #14
  %252 = load i32, i32* %194, align 4
  %253 = bitcast %"class.SkSL::FunctionDeclaration"** %7 to i64*
  %254 = load i64, i64* %253, align 8
  %255 = load i8, i8* %169, align 1, !range !2
  %256 = getelementptr inbounds i8, i8* %251, i64 8
  %257 = bitcast i8* %256 to i32*
  store i32 %252, i32* %257, align 8
  %258 = getelementptr inbounds i8, i8* %251, i64 12
  %259 = bitcast i8* %258 to i32*
  store i32 3, i32* %259, align 4
  %260 = bitcast i8* %251 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL17FunctionPrototypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %260, align 8
  %261 = getelementptr inbounds i8, i8* %251, i64 16
  %262 = bitcast i8* %261 to i64*
  store i64 %254, i64* %262, align 8
  %263 = getelementptr inbounds i8, i8* %251, i64 24
  store i8 %255, i8* %263, align 8
  %264 = ptrtoint i8* %251 to i64
  %265 = bitcast %"class.std::__1::unique_ptr.139"* %9 to i64*
  store i64 %264, i64* %265, align 8
  %266 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %249, i64 0, i32 0, i32 1
  %267 = load %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %266, align 8
  %268 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %249, i64 0, i32 0, i32 2, i32 0, i32 0
  %269 = load %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %268, align 8
  %270 = icmp ult %"class.std::__1::unique_ptr.139"* %267, %269
  br i1 %270, label %271, label %277

271:                                              ; preds = %247
  %272 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %272, align 8
  %273 = bitcast %"class.std::__1::unique_ptr.139"* %267 to i64*
  store i64 %264, i64* %273, align 8
  %274 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %267, i64 1
  %275 = ptrtoint %"class.std::__1::unique_ptr.139"* %274 to i64
  %276 = bitcast %"class.std::__1::unique_ptr.139"** %266 to i64*
  store i64 %275, i64* %276, align 8
  br label %278

277:                                              ; preds = %247
  call void @_ZNSt3__16vectorINS_10unique_ptrIN4SkSL14ProgramElementENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.137"* %249, %"class.std::__1::unique_ptr.139"* nonnull dereferenceable(8) %9) #14
  br label %278

278:                                              ; preds = %271, %277
  %279 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %9, i64 0, i32 0, i32 0, i32 0
  %280 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %279, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %279, align 8
  %281 = icmp eq %"class.SkSL::ProgramElement"* %280, null
  br i1 %281, label %287, label %282

282:                                              ; preds = %278
  %283 = bitcast %"class.SkSL::ProgramElement"* %280 to void (%"class.SkSL::ProgramElement"*)***
  %284 = load void (%"class.SkSL::ProgramElement"*)**, void (%"class.SkSL::ProgramElement"*)*** %283, align 8
  %285 = getelementptr inbounds void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %284, i64 1
  %286 = load void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %285, align 8
  call void %286(%"class.SkSL::ProgramElement"* nonnull %280) #14
  br label %287

287:                                              ; preds = %282, %278
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %250) #14
  br label %491

288:                                              ; preds = %245
  %289 = bitcast %"class.std::__1::shared_ptr"* %191 to i64*
  %290 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 4, i32 1
  %291 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %290, align 8
  %292 = icmp eq %"class.std::__1::__shared_weak_count"* %291, null
  br i1 %292, label %296, label %293

293:                                              ; preds = %288
  %294 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %291, i64 0, i32 0, i32 1
  %295 = atomicrmw add i64* %294, i64 1 monotonic
  br label %296

296:                                              ; preds = %288, %293
  call void @_ZN4SkSL11IRGenerator15pushSymbolTableEv(%"class.SkSL::IRGenerator"* %0) #14
  %297 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %217, i64 0, i32 3, i32 0, i32 0
  %298 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %297, align 8
  %299 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %217, i64 0, i32 3, i32 0, i32 1
  %300 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %299, align 8
  %301 = icmp eq %"class.SkSL::Variable"** %298, %300
  br i1 %301, label %302, label %308

302:                                              ; preds = %308, %296
  %303 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 7
  %304 = load i32, i32* %303, align 8
  %305 = icmp eq i32 %304, -1
  %306 = xor i1 %36, true
  %307 = or i1 %305, %306
  br i1 %307, label %324, label %315

308:                                              ; preds = %296, %308
  %309 = phi %"class.SkSL::Variable"** [ %313, %308 ], [ %298, %296 ]
  %310 = bitcast %"class.SkSL::Variable"** %309 to %"class.SkSL::Symbol"**
  %311 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %310, align 8
  %312 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %192, align 8
  call void @_ZN4SkSL11SymbolTable19addWithoutOwnershipEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %312, %"class.SkSL::Symbol"* %311) #14
  %313 = getelementptr inbounds %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %309, i64 1
  %314 = icmp eq %"class.SkSL::Variable"** %313, %300
  br i1 %314, label %302, label %308

315:                                              ; preds = %302
  %316 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %177, align 8
  %317 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %316, i64 0, i32 2
  %318 = load %class.GrShaderCaps*, %class.GrShaderCaps** %317, align 8
  %319 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %318, i64 0, i32 2
  %320 = bitcast i56* %319 to i64*
  %321 = load i64, i64* %320, align 8
  %322 = and i64 %321, 4
  %323 = icmp eq i64 %322, 0
  br label %324

324:                                              ; preds = %302, %315
  %325 = phi i1 [ false, %302 ], [ %323, %315 ]
  %326 = bitcast %"class.std::__1::unique_ptr.202"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %326) #14
  %327 = getelementptr inbounds %"class.std::__1::unique_ptr.202", %"class.std::__1::unique_ptr.202"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Block"* inttoptr (i64 -6148914691236517206 to %"class.SkSL::Block"*), %"class.SkSL::Block"** %327, align 8
  %328 = sext i32 %167 to i64
  %329 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %25, align 8
  %330 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %329, i64 %328
  %331 = call %"class.SkSL::Block"* @_ZN4SkSL11IRGenerator12convertBlockERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %330)
  store %"class.SkSL::Block"* %331, %"class.SkSL::Block"** %327, align 8
  %332 = icmp eq %"class.SkSL::Block"* %331, null
  br i1 %332, label %455, label %333

333:                                              ; preds = %324
  br i1 %325, label %334, label %345

334:                                              ; preds = %333
  %335 = bitcast %"class.std::__1::unique_ptr.202"* %10 to i64*
  store %"class.SkSL::Block"* null, %"class.SkSL::Block"** %327, align 8
  %336 = call %"class.SkSL::Block"* @_ZN4SkSL11IRGenerator27applyInvocationIDWorkaroundENSt3__110unique_ptrINS_5BlockENS1_14default_deleteIS3_EEEE(%"class.SkSL::IRGenerator"* %0, %"class.SkSL::Block"* nonnull %331)
  %337 = ptrtoint %"class.SkSL::Block"* %336 to i64
  %338 = load %"class.SkSL::Block"*, %"class.SkSL::Block"** %327, align 8
  store i64 %337, i64* %335, align 8
  %339 = icmp eq %"class.SkSL::Block"* %338, null
  br i1 %339, label %345, label %340

340:                                              ; preds = %334
  %341 = bitcast %"class.SkSL::Block"* %338 to void (%"class.SkSL::Block"*)***
  %342 = load void (%"class.SkSL::Block"*)**, void (%"class.SkSL::Block"*)*** %341, align 8
  %343 = getelementptr inbounds void (%"class.SkSL::Block"*)*, void (%"class.SkSL::Block"*)** %342, i64 1
  %344 = load void (%"class.SkSL::Block"*)*, void (%"class.SkSL::Block"*)** %343, align 8
  call void %344(%"class.SkSL::Block"* nonnull %338) #14
  br label %345

345:                                              ; preds = %334, %340, %333
  %346 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %177, align 8
  %347 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %346, i64 0, i32 4
  %348 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %347, align 8
  %349 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %348, i64 0, i32 0
  %350 = load i8, i8* %349, align 8
  %351 = icmp ne i8 %350, 1
  %352 = or i1 %351, %306
  br i1 %352, label %376, label %353

353:                                              ; preds = %345
  %354 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 12
  %355 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %354, align 8
  %356 = icmp eq %"class.SkSL::Variable"* %355, null
  br i1 %356, label %376, label %357

357:                                              ; preds = %353
  %358 = load %"class.SkSL::Block"*, %"class.SkSL::Block"** %327, align 8
  %359 = getelementptr inbounds %"class.SkSL::Block", %"class.SkSL::Block"* %358, i64 0, i32 1, i32 0, i32 0, i64 16
  %360 = bitcast i8* %359 to %class.SkTArray*
  %361 = call %"class.SkSL::Statement"* @_ZN4SkSL11IRGenerator26getNormalizeSkPositionCodeEv(%"class.SkSL::IRGenerator"* %0)
  %362 = ptrtoint %"class.SkSL::Statement"* %361 to i64
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %360, i32 1, i32 1) #14
  %363 = bitcast i8* %359 to %"class.std::__1::unique_ptr.190"**
  %364 = load %"class.std::__1::unique_ptr.190"*, %"class.std::__1::unique_ptr.190"** %363, align 8
  %365 = getelementptr inbounds %"class.SkSL::Block", %"class.SkSL::Block"* %358, i64 0, i32 1, i32 0, i32 0, i64 24
  %366 = bitcast i8* %365 to i64*
  %367 = load i64, i64* %366, align 8
  %368 = lshr i64 %367, 1
  %369 = and i64 %368, 2147483647
  %370 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %364, i64 %369
  %371 = add i64 %367, 2
  %372 = and i64 %371, 4294967294
  %373 = and i64 %367, -4294967295
  %374 = or i64 %372, %373
  store i64 %374, i64* %366, align 8
  %375 = bitcast %"class.std::__1::unique_ptr.190"* %370 to i64*
  store i64 %362, i64* %375, align 8
  br label %376

376:                                              ; preds = %345, %353, %357
  %377 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %7, align 8
  %378 = load %"class.SkSL::Block"*, %"class.SkSL::Block"** %327, align 8
  %379 = getelementptr inbounds %"class.SkSL::Block", %"class.SkSL::Block"* %378, i64 0, i32 0
  call void @_ZN4SkSL11IRGenerator16finalizeFunctionERKNS_19FunctionDeclarationEPNS_9StatementE(%"class.SkSL::IRGenerator"* %0, %"class.SkSL::FunctionDeclaration"* dereferenceable(96) %377, %"class.SkSL::Statement"* %379)
  %380 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 6
  %381 = call %"class.SkSL::FunctionDefinition"* @_ZNSt3__111make_uniqueIN4SkSL18FunctionDefinitionEJRKiRPKNS1_19FunctionDeclarationERbNS_10unique_ptrINS1_5BlockENS_14default_deleteISB_EEEENS_13unordered_setIS7_NS_4hashIS7_EENS_8equal_toIS7_EENS_9allocatorIS7_EEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(i32* dereferenceable(4) %194, %"class.SkSL::FunctionDeclaration"** nonnull dereferenceable(8) %7, i8* dereferenceable(1) %169, %"class.std::__1::unique_ptr.202"* nonnull dereferenceable(8) %10, %"class.std::__1::unordered_set.86"* dereferenceable(40) %380)
  %382 = ptrtoint %"class.SkSL::FunctionDefinition"* %381 to i64
  %383 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %7, align 8
  %384 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %383, i64 0, i32 1
  store %"class.SkSL::FunctionDefinition"* %381, %"class.SkSL::FunctionDefinition"** %384, align 8
  %385 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %381, i64 0, i32 5
  store %"struct.SkSL::ASTNode"* %1, %"struct.SkSL::ASTNode"** %385, align 8
  %386 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 10
  %387 = load %"class.std::__1::vector.137"*, %"class.std::__1::vector.137"** %386, align 8
  %388 = bitcast %"class.std::__1::unique_ptr.139"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %388) #14
  %389 = bitcast %"class.std::__1::unique_ptr.139"* %11 to i64*
  store i64 %382, i64* %389, align 8
  %390 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %387, i64 0, i32 0, i32 1
  %391 = load %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %390, align 8
  %392 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %387, i64 0, i32 0, i32 2, i32 0, i32 0
  %393 = load %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %392, align 8
  %394 = icmp ult %"class.std::__1::unique_ptr.139"* %391, %393
  br i1 %394, label %395, label %401

395:                                              ; preds = %376
  %396 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %11, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %396, align 8
  %397 = bitcast %"class.std::__1::unique_ptr.139"* %391 to i64*
  store i64 %382, i64* %397, align 8
  %398 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %391, i64 1
  %399 = ptrtoint %"class.std::__1::unique_ptr.139"* %398 to i64
  %400 = bitcast %"class.std::__1::unique_ptr.139"** %390 to i64*
  store i64 %399, i64* %400, align 8
  br label %402

401:                                              ; preds = %376
  call void @_ZNSt3__16vectorINS_10unique_ptrIN4SkSL14ProgramElementENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.137"* %387, %"class.std::__1::unique_ptr.139"* nonnull dereferenceable(8) %11) #14
  br label %402

402:                                              ; preds = %395, %401
  %403 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %11, i64 0, i32 0, i32 0, i32 0
  %404 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %403, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %403, align 8
  %405 = icmp eq %"class.SkSL::ProgramElement"* %404, null
  br i1 %405, label %411, label %406

406:                                              ; preds = %402
  %407 = bitcast %"class.SkSL::ProgramElement"* %404 to void (%"class.SkSL::ProgramElement"*)***
  %408 = load void (%"class.SkSL::ProgramElement"*)**, void (%"class.SkSL::ProgramElement"*)*** %407, align 8
  %409 = getelementptr inbounds void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %408, i64 1
  %410 = load void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %409, align 8
  call void %410(%"class.SkSL::ProgramElement"* nonnull %404) #14
  br label %411

411:                                              ; preds = %406, %402
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %388) #14
  %412 = load %"class.SkSL::Block"*, %"class.SkSL::Block"** %327, align 8
  store %"class.SkSL::Block"* null, %"class.SkSL::Block"** %327, align 8
  %413 = icmp eq %"class.SkSL::Block"* %412, null
  br i1 %413, label %419, label %414

414:                                              ; preds = %411
  %415 = bitcast %"class.SkSL::Block"* %412 to void (%"class.SkSL::Block"*)***
  %416 = load void (%"class.SkSL::Block"*)**, void (%"class.SkSL::Block"*)*** %415, align 8
  %417 = getelementptr inbounds void (%"class.SkSL::Block"*)*, void (%"class.SkSL::Block"*)** %416, i64 1
  %418 = load void (%"class.SkSL::Block"*)*, void (%"class.SkSL::Block"*)** %417, align 8
  call void %418(%"class.SkSL::Block"* nonnull %412) #14
  br label %419

419:                                              ; preds = %411, %414
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %326) #14
  %420 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %192, align 8
  %421 = bitcast %"class.SkSL::SymbolTable"* %420 to i64*
  %422 = load i64, i64* %421, align 8
  %423 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %420, i64 0, i32 0, i32 1
  %424 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %423, align 8
  %425 = ptrtoint %"class.std::__1::__shared_weak_count"* %424 to i64
  %426 = icmp eq %"class.std::__1::__shared_weak_count"* %424, null
  br i1 %426, label %430, label %427

427:                                              ; preds = %419
  %428 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %424, i64 0, i32 0, i32 1
  %429 = atomicrmw add i64* %428, i64 1 monotonic
  br label %430

430:                                              ; preds = %427, %419
  store i64 %422, i64* %289, align 8
  %431 = bitcast %"class.std::__1::__shared_weak_count"** %290 to i64*
  %432 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %290, align 8
  store i64 %425, i64* %431, align 8
  %433 = icmp eq %"class.std::__1::__shared_weak_count"* %432, null
  br i1 %433, label %444, label %434

434:                                              ; preds = %430
  %435 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %432, i64 0, i32 0, i32 1
  %436 = atomicrmw add i64* %435, i64 -1 acq_rel
  %437 = icmp eq i64 %436, 0
  br i1 %437, label %438, label %444

438:                                              ; preds = %434
  %439 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %432, i64 0, i32 0
  %440 = bitcast %"class.std::__1::__shared_weak_count"* %432 to void (%"class.std::__1::__shared_count"*)***
  %441 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %440, align 8
  %442 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %441, i64 2
  %443 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %442, align 8
  call void %443(%"class.std::__1::__shared_count"* %439) #14
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %432) #14
  br label %444

444:                                              ; preds = %438, %434, %430
  br i1 %292, label %491, label %445

445:                                              ; preds = %444
  %446 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %291, i64 0, i32 0, i32 1
  %447 = atomicrmw add i64* %446, i64 -1 acq_rel
  %448 = icmp eq i64 %447, 0
  br i1 %448, label %449, label %491

449:                                              ; preds = %445
  %450 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %291, i64 0, i32 0
  %451 = bitcast %"class.std::__1::__shared_weak_count"* %291 to void (%"class.std::__1::__shared_count"*)***
  %452 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %451, align 8
  %453 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %452, i64 2
  %454 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %453, align 8
  call void %454(%"class.std::__1::__shared_count"* %450) #14
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %291) #14
  br label %491

455:                                              ; preds = %324
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %326) #14
  %456 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %192, align 8
  %457 = bitcast %"class.SkSL::SymbolTable"* %456 to i64*
  %458 = load i64, i64* %457, align 8
  %459 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %456, i64 0, i32 0, i32 1
  %460 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %459, align 8
  %461 = ptrtoint %"class.std::__1::__shared_weak_count"* %460 to i64
  %462 = icmp eq %"class.std::__1::__shared_weak_count"* %460, null
  br i1 %462, label %466, label %463

463:                                              ; preds = %455
  %464 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %460, i64 0, i32 0, i32 1
  %465 = atomicrmw add i64* %464, i64 1 monotonic
  br label %466

466:                                              ; preds = %463, %455
  store i64 %458, i64* %289, align 8
  %467 = bitcast %"class.std::__1::__shared_weak_count"** %290 to i64*
  %468 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %290, align 8
  store i64 %461, i64* %467, align 8
  %469 = icmp eq %"class.std::__1::__shared_weak_count"* %468, null
  br i1 %469, label %480, label %470

470:                                              ; preds = %466
  %471 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %468, i64 0, i32 0, i32 1
  %472 = atomicrmw add i64* %471, i64 -1 acq_rel
  %473 = icmp eq i64 %472, 0
  br i1 %473, label %474, label %480

474:                                              ; preds = %470
  %475 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %468, i64 0, i32 0
  %476 = bitcast %"class.std::__1::__shared_weak_count"* %468 to void (%"class.std::__1::__shared_count"*)***
  %477 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %476, align 8
  %478 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %477, i64 2
  %479 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %478, align 8
  call void %479(%"class.std::__1::__shared_count"* %475) #14
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %468) #14
  br label %480

480:                                              ; preds = %474, %470, %466
  br i1 %292, label %491, label %481

481:                                              ; preds = %480
  %482 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %291, i64 0, i32 0, i32 1
  %483 = atomicrmw add i64* %482, i64 -1 acq_rel
  %484 = icmp eq i64 %483, 0
  br i1 %484, label %485, label %491

485:                                              ; preds = %481
  %486 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %291, i64 0, i32 0
  %487 = bitcast %"class.std::__1::__shared_weak_count"* %291 to void (%"class.std::__1::__shared_count"*)***
  %488 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %487, align 8
  %489 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %488, i64 2
  %490 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %489, align 8
  call void %490(%"class.std::__1::__shared_count"* %486) #14
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %291) #14
  br label %491

491:                                              ; preds = %485, %481, %480, %449, %445, %444, %287, %243
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %190) #14
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %168) #14
  br label %492

492:                                              ; preds = %101, %105, %65, %95, %491
  %493 = load %"class.std::__1::unique_ptr.218"*, %"class.std::__1::unique_ptr.218"** %38, align 16
  %494 = icmp eq %"class.std::__1::unique_ptr.218"* %493, null
  br i1 %494, label %517, label %495

495:                                              ; preds = %492
  %496 = bitcast %"class.std::__1::unique_ptr.218"* %493 to i8*
  %497 = load %"class.std::__1::unique_ptr.218"*, %"class.std::__1::unique_ptr.218"** %39, align 8
  %498 = icmp eq %"class.std::__1::unique_ptr.218"* %497, %493
  br i1 %498, label %515, label %499

499:                                              ; preds = %495, %510
  %500 = phi %"class.std::__1::unique_ptr.218"* [ %501, %510 ], [ %497, %495 ]
  %501 = getelementptr inbounds %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218"* %500, i64 -1
  %502 = getelementptr inbounds %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218"* %501, i64 0, i32 0, i32 0, i32 0
  %503 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %502, align 8
  store %"class.SkSL::Variable"* null, %"class.SkSL::Variable"** %502, align 8
  %504 = icmp eq %"class.SkSL::Variable"* %503, null
  br i1 %504, label %510, label %505

505:                                              ; preds = %499
  %506 = bitcast %"class.SkSL::Variable"* %503 to void (%"class.SkSL::Variable"*)***
  %507 = load void (%"class.SkSL::Variable"*)**, void (%"class.SkSL::Variable"*)*** %506, align 8
  %508 = getelementptr inbounds void (%"class.SkSL::Variable"*)*, void (%"class.SkSL::Variable"*)** %507, i64 1
  %509 = load void (%"class.SkSL::Variable"*)*, void (%"class.SkSL::Variable"*)** %508, align 8
  call void %509(%"class.SkSL::Variable"* nonnull %503) #14
  br label %510

510:                                              ; preds = %505, %499
  %511 = icmp eq %"class.std::__1::unique_ptr.218"* %501, %493
  br i1 %511, label %512, label %499

512:                                              ; preds = %510
  %513 = bitcast %"class.std::__1::vector.251"* %4 to i8**
  %514 = load i8*, i8** %513, align 16
  br label %515

515:                                              ; preds = %512, %495
  %516 = phi i8* [ %514, %512 ], [ %496, %495 ]
  store %"class.std::__1::unique_ptr.218"* %493, %"class.std::__1::unique_ptr.218"** %39, align 8
  call void @_ZdlPv(i8* %516) #15
  br label %517

517:                                              ; preds = %492, %515
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #14
  %518 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %15, align 8
  br label %519

519:                                              ; preds = %2, %517
  %520 = phi %"struct.std::__1::__function::__policy"* [ @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN4SkSL11IRGenerator15convertFunctionERKNS4_7ASTNodeEE3$_5FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %2 ], [ %518, %517 ]
  %521 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %520, i64 0, i32 2
  %522 = load i8, i8* %521, align 8, !range !2
  %523 = icmp eq i8 %522, 0
  br i1 %523, label %524, label %528

524:                                              ; preds = %519
  %525 = load void (%"union.std::__1::__function::__policy_storage"*)*, void (%"union.std::__1::__function::__policy_storage"*)** %14, align 8
  %526 = getelementptr inbounds %class.SkScopeExit, %class.SkScopeExit* %3, i64 0, i32 0, i32 0, i32 0
  call void %525(%"union.std::__1::__function::__policy_storage"* nonnull %526) #14
  %527 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %15, align 8
  br label %528

528:                                              ; preds = %524, %519
  %529 = phi %"struct.std::__1::__function::__policy"* [ %527, %524 ], [ %520, %519 ]
  %530 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %529, i64 0, i32 1
  %531 = load void (i8*)*, void (i8*)** %530, align 8
  %532 = icmp eq void (i8*)* %531, null
  br i1 %532, label %535, label %533

533:                                              ; preds = %528
  %534 = load i8*, i8** %13, align 8
  call void %531(i8* %534) #14
  br label %535

535:                                              ; preds = %528, %533
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #14
  ret void
}

declare %"class.SkSL::FunctionDeclaration"* @_ZN4SkSL19FunctionDeclaration7ConvertERKNS_7ContextERNS_11SymbolTableEiPKNS_9ModifiersENS_14StringFragmentENSt3__16vectorINSA_10unique_ptrINS_8VariableENSA_14default_deleteISD_EEEENSA_9allocatorISG_EEEEPKNS_4TypeEb(%"class.SkSL::Context"* dereferenceable(744), %"class.SkSL::SymbolTable"* dereferenceable(104), i32, %"struct.SkSL::Modifiers"*, i8*, i64, %"class.std::__1::vector.251"*, %"class.SkSL::Type"*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN4SkSL11SymbolTable19addWithoutOwnershipEPKNS_6SymbolE(%"class.SkSL::SymbolTable"*, %"class.SkSL::Symbol"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::FunctionDefinition"* @_ZNSt3__111make_uniqueIN4SkSL18FunctionDefinitionEJRKiRPKNS1_19FunctionDeclarationERbNS_10unique_ptrINS1_5BlockENS_14default_deleteISB_EEEENS_13unordered_setIS7_NS_4hashIS7_EENS_8equal_toIS7_EENS_9allocatorIS7_EEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(i32* dereferenceable(4), %"class.SkSL::FunctionDeclaration"** dereferenceable(8), i8* dereferenceable(1), %"class.std::__1::unique_ptr.202"* dereferenceable(8), %"class.std::__1::unordered_set.86"* dereferenceable(40)) local_unnamed_addr #4 comdat {
  %6 = alloca %"class.std::__1::unordered_set.86", align 8
  %7 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 88) #14
  %8 = bitcast i8* %7 to %"class.SkSL::FunctionDefinition"*
  %9 = load i32, i32* %0, align 4
  %10 = bitcast %"class.SkSL::FunctionDeclaration"** %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = load i8, i8* %2, align 1, !range !2
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.202", %"class.std::__1::unique_ptr.202"* %3, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.std::__1::unique_ptr.202"* %3 to i64*
  %15 = load i64, i64* %14, align 8
  store %"class.SkSL::Block"* null, %"class.SkSL::Block"** %13, align 8
  %16 = getelementptr inbounds %"class.std::__1::unordered_set.86", %"class.std::__1::unordered_set.86"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.std::__1::unordered_set.86"* %4 to i64*
  %18 = load i64, i64* %17, align 8
  store %"struct.std::__1::__hash_node_base.91"** null, %"struct.std::__1::__hash_node_base.91"*** %16, align 8
  %19 = bitcast %"class.std::__1::unordered_set.86"* %6 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.std::__1::unordered_set.86", %"class.std::__1::unordered_set.86"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::unordered_set.86", %"class.std::__1::unordered_set.86"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %20, align 8
  store i64 %22, i64* %21, align 8
  store i64 0, i64* %20, align 8
  %23 = getelementptr inbounds %"class.std::__1::unordered_set.86", %"class.std::__1::unordered_set.86"* %6, i64 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.std::__1::unordered_set.86", %"class.std::__1::unordered_set.86"* %4, i64 0, i32 0, i32 1
  %25 = bitcast %"class.std::__1::__compressed_pair.98"* %24 to i64*
  %26 = bitcast %"class.std::__1::__compressed_pair.98"* %23 to i64*
  %27 = load i64, i64* %25, align 8
  store i64 %27, i64* %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::unordered_set.86", %"class.std::__1::unordered_set.86"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %29 = getelementptr inbounds %"class.std::__1::unordered_set.86", %"class.std::__1::unordered_set.86"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %30 = load i64, i64* %28, align 8
  store i64 %30, i64* %29, align 8
  %31 = getelementptr inbounds %"class.std::__1::unordered_set.86", %"class.std::__1::unordered_set.86"* %6, i64 0, i32 0, i32 3
  %32 = getelementptr inbounds %"class.std::__1::unordered_set.86", %"class.std::__1::unordered_set.86"* %4, i64 0, i32 0, i32 3
  %33 = bitcast %"class.std::__1::__compressed_pair.106"* %32 to i32*
  %34 = bitcast %"class.std::__1::__compressed_pair.106"* %31 to i32*
  %35 = load i32, i32* %33, align 4
  store i32 %35, i32* %34, align 8
  %36 = icmp eq i64 %30, 0
  %37 = inttoptr i64 %18 to %"struct.std::__1::__hash_node_base.91"**
  br i1 %36, label %57, label %38

38:                                               ; preds = %5
  %39 = inttoptr i64 %27 to %"struct.std::__1::__hash_node_base.91"*
  %40 = getelementptr inbounds %"class.std::__1::__compressed_pair.98", %"class.std::__1::__compressed_pair.98"* %23, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91", %"struct.std::__1::__hash_node_base.91"* %39, i64 1
  %42 = bitcast %"struct.std::__1::__hash_node_base.91"* %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = tail call i64 @llvm.ctpop.i64(i64 %22) #14, !range !99
  %45 = icmp ugt i64 %44, 1
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = add i64 %22, -1
  %48 = and i64 %43, %47
  br label %53

49:                                               ; preds = %38
  %50 = icmp ult i64 %43, %22
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = urem i64 %43, %22
  br label %53

53:                                               ; preds = %51, %49, %46
  %54 = phi i64 [ %48, %46 ], [ %52, %51 ], [ %43, %49 ]
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %37, i64 %54
  store %"struct.std::__1::__hash_node_base.91"* %40, %"struct.std::__1::__hash_node_base.91"** %55, align 8
  %56 = bitcast %"class.std::__1::__compressed_pair.98"* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 16, i1 false) #14
  br label %57

57:                                               ; preds = %5, %53
  %58 = getelementptr inbounds i8, i8* %7, i64 8
  %59 = bitcast i8* %58 to i32*
  store i32 %9, i32* %59, align 8
  %60 = getelementptr inbounds i8, i8* %7, i64 12
  %61 = bitcast i8* %60 to i32*
  store i32 2, i32* %61, align 4
  %62 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL18FunctionDefinitionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %62, align 8
  %63 = getelementptr inbounds i8, i8* %7, i64 16
  %64 = bitcast i8* %63 to i64*
  store i64 %11, i64* %64, align 8
  %65 = getelementptr inbounds i8, i8* %7, i64 24
  store i8 %12, i8* %65, align 8
  %66 = getelementptr inbounds i8, i8* %7, i64 32
  %67 = bitcast i8* %66 to i64*
  store i64 %15, i64* %67, align 8
  %68 = getelementptr inbounds i8, i8* %7, i64 40
  %69 = getelementptr inbounds %"class.std::__1::unordered_set.86", %"class.std::__1::unordered_set.86"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i64, i64* %19, align 8
  store %"struct.std::__1::__hash_node_base.91"** null, %"struct.std::__1::__hash_node_base.91"*** %69, align 8
  %71 = bitcast i8* %68 to i64*
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds i8, i8* %7, i64 48
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %21, align 8
  store i64 %74, i64* %73, align 8
  store i64 0, i64* %21, align 8
  %75 = getelementptr inbounds i8, i8* %7, i64 56
  %76 = bitcast i8* %75 to i64*
  %77 = load i64, i64* %26, align 8
  store i64 %77, i64* %76, align 8
  %78 = getelementptr inbounds i8, i8* %7, i64 64
  %79 = bitcast i8* %78 to i64*
  %80 = load i64, i64* %29, align 8
  store i64 %80, i64* %79, align 8
  %81 = getelementptr inbounds i8, i8* %7, i64 72
  %82 = bitcast i8* %81 to i32*
  %83 = load i32, i32* %34, align 8
  store i32 %83, i32* %82, align 8
  %84 = icmp eq i64 %80, 0
  %85 = inttoptr i64 %70 to %"struct.std::__1::__hash_node_base.91"**
  %86 = inttoptr i64 %77 to %"struct.std::__1::__hash_node_base.91"*
  br i1 %84, label %107, label %87

87:                                               ; preds = %57
  %88 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91", %"struct.std::__1::__hash_node_base.91"* %86, i64 1
  %89 = bitcast %"struct.std::__1::__hash_node_base.91"* %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = call i64 @llvm.ctpop.i64(i64 %74) #14, !range !99
  %92 = icmp ugt i64 %91, 1
  br i1 %92, label %96, label %93

93:                                               ; preds = %87
  %94 = add i64 %74, -1
  %95 = and i64 %90, %94
  br label %100

96:                                               ; preds = %87
  %97 = icmp ult i64 %90, %74
  br i1 %97, label %100, label %98

98:                                               ; preds = %96
  %99 = urem i64 %90, %74
  br label %100

100:                                              ; preds = %93, %96, %98
  %101 = phi i64 [ %95, %93 ], [ %99, %98 ], [ %90, %96 ]
  %102 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %85, i64 %101
  %103 = bitcast %"struct.std::__1::__hash_node_base.91"** %102 to i8**
  store i8* %75, i8** %103, align 8
  %104 = bitcast %"class.std::__1::__compressed_pair.98"* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %104, i8 0, i64 16, i1 false) #14
  %105 = getelementptr inbounds i8, i8* %7, i64 80
  %106 = bitcast i8* %105 to %"struct.SkSL::ASTNode"**
  store %"struct.SkSL::ASTNode"* null, %"struct.SkSL::ASTNode"** %106, align 8
  br label %117

107:                                              ; preds = %57
  %108 = getelementptr inbounds i8, i8* %7, i64 80
  %109 = bitcast i8* %108 to %"struct.SkSL::ASTNode"**
  store %"struct.SkSL::ASTNode"* null, %"struct.SkSL::ASTNode"** %109, align 8
  %110 = icmp eq i64 %77, 0
  br i1 %110, label %117, label %111

111:                                              ; preds = %107, %111
  %112 = phi %"struct.std::__1::__hash_node_base.91"* [ %114, %111 ], [ %86, %107 ]
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91", %"struct.std::__1::__hash_node_base.91"* %112, i64 0, i32 0
  %114 = load %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %113, align 8
  %115 = bitcast %"struct.std::__1::__hash_node_base.91"* %112 to i8*
  call void @_ZdlPv(i8* %115) #15
  %116 = icmp eq %"struct.std::__1::__hash_node_base.91"* %114, null
  br i1 %116, label %117, label %111

117:                                              ; preds = %111, %100, %107
  %118 = load %"struct.std::__1::__hash_node_base.91"**, %"struct.std::__1::__hash_node_base.91"*** %69, align 8
  store %"struct.std::__1::__hash_node_base.91"** null, %"struct.std::__1::__hash_node_base.91"*** %69, align 8
  %119 = icmp eq %"struct.std::__1::__hash_node_base.91"** %118, null
  br i1 %119, label %122, label %120

120:                                              ; preds = %117
  %121 = bitcast %"struct.std::__1::__hash_node_base.91"** %118 to i8*
  call void @_ZdlPv(i8* %121) #15
  br label %122

122:                                              ; preds = %117, %120
  ret %"class.SkSL::FunctionDefinition"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::StructDefinition"* @_ZN4SkSL11IRGenerator23convertStructDefinitionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"*, %"struct.SkSL::ASTNode"* nocapture readonly dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkSL::Type"*, align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = bitcast %"class.SkSL::Type"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #14
  %8 = tail call %"class.SkSL::Type"* @_ZN4SkSL11IRGenerator11convertTypeERKNS_7ASTNodeEb(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %1, i1 zeroext false)
  store %"class.SkSL::Type"* %8, %"class.SkSL::Type"** %3, align 8
  %9 = icmp eq %"class.SkSL::Type"* %8, null
  br i1 %9, label %94, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %8, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 9
  br i1 %13, label %78, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %16 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %15, align 8
  %17 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %16, i64 0, i32 1
  %18 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %17, align 8
  %19 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #14
  %22 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #14
  %23 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %8, i64 0, i32 0, i32 1, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %8, i64 0, i32 0, i32 1, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = icmp ugt i64 %26, -17
  br i1 %27, label %28, label %30

28:                                               ; preds = %14
  %29 = bitcast %"class.SkSL::String"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %29) #16
  unreachable

30:                                               ; preds = %14
  %31 = icmp ult i64 %26, 23
  br i1 %31, label %40, label %32

32:                                               ; preds = %30
  %33 = add nuw i64 %26, 16
  %34 = and i64 %33, -16
  %35 = tail call i8* @_Znwm(i64 %34) #15
  %36 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %35, i8** %36, align 8
  %37 = or i64 %34, -9223372036854775808
  %38 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %26, i64* %39, align 8
  br label %45

40:                                               ; preds = %30
  %41 = trunc i64 %26 to i8
  %42 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  store i8 %41, i8* %43, align 1
  %44 = icmp eq i64 %26, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %40, %32
  %46 = phi i8* [ %35, %32 ], [ %22, %40 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %46, i8* align 1 %24, i64 %26, i1 false) #14
  br label %47

47:                                               ; preds = %40, %45
  %48 = phi i8* [ %22, %40 ], [ %46, %45 ]
  %49 = getelementptr inbounds i8, i8* %48, i64 %26
  store i8 0, i8* %49, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %5, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.65, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %6) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::String"* nonnull %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #14
  %50 = bitcast %"class.SkSL::ErrorReporter"* %18 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %51 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %51, i64 2
  %53 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %52, align 8
  call void %53(%"class.SkSL::ErrorReporter"* %18, i32 %20, %"class.SkSL::String"* nonnull %4) #14
  %54 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %47
  %59 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  call void @_ZdlPv(i8* %60) #15
  br label %61

61:                                               ; preds = %47, %58
  %62 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  call void @_ZdlPv(i8* %68) #15
  br label %69

69:                                               ; preds = %61, %66
  %70 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load i8*, i8** %75, align 8
  call void @_ZdlPv(i8* %76) #15
  br label %77

77:                                               ; preds = %69, %74
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #14
  br label %94

78:                                               ; preds = %10
  %79 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 9, i32 0
  %80 = call { %"struct.std::__1::__hash_node_base.116"*, i8 } @_ZNSt3__112__hash_tableIPKN4SkSL4TypeENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.112"* %79, %"class.SkSL::Type"** nonnull dereferenceable(8) %3, %"class.SkSL::Type"** nonnull dereferenceable(8) %3) #14
  %81 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 2
  %82 = bitcast %"class.SkSL::Type"** %3 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 24) #14
  %85 = bitcast i8* %84 to %"class.SkSL::StructDefinition"*
  %86 = load i32, i32* %81, align 4
  %87 = getelementptr inbounds i8, i8* %84, i64 8
  %88 = bitcast i8* %87 to i32*
  store i32 %86, i32* %88, align 8
  %89 = getelementptr inbounds i8, i8* %84, i64 12
  %90 = bitcast i8* %89 to i32*
  store i32 8, i32* %90, align 4
  %91 = bitcast i8* %84 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL16StructDefinitionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %91, align 8
  %92 = getelementptr inbounds i8, i8* %84, i64 16
  %93 = bitcast i8* %92 to i64*
  store i64 %83, i64* %93, align 8
  br label %94

94:                                               ; preds = %2, %78, %77
  %95 = phi %"class.SkSL::StructDefinition"* [ %85, %78 ], [ null, %77 ], [ null, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #14
  ret %"class.SkSL::StructDefinition"* %95
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::InterfaceBlock"* @_ZN4SkSL11IRGenerator21convertInterfaceBlockERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"*, %"struct.SkSL::ASTNode"* dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = alloca [15 x i8], align 8
  %4 = alloca %"class.std::__1::unique_ptr.165", align 8
  %5 = alloca %"class.std::__1::unique_ptr.165", align 8
  %6 = alloca %"class.std::__1::unique_ptr.165", align 8
  %7 = alloca %"class.std::__1::shared_ptr", align 8
  %8 = alloca %"class.std::__1::vector.8", align 8
  %9 = alloca %class.SkSTArray, align 8
  %10 = alloca %"class.SkSL::String", align 8
  %11 = alloca %"class.SkSL::String", align 8
  %12 = alloca %"class.SkSL::String", align 8
  %13 = alloca %"struct.SkSL::Modifiers", align 8
  %14 = alloca %"class.SkSL::String", align 8
  %15 = alloca %"class.std::__1::vector.8", align 16
  %16 = alloca i32, align 4
  %17 = alloca %"class.SkSL::Variable"*, align 8
  %18 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %19 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %18, align 8
  %20 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %19, i64 0, i32 4
  %21 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %20, align 8
  %22 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %21, i64 0, i32 0
  %23 = load i8, i8* %22, align 8
  %24 = icmp ult i8 %23, 3
  br i1 %24, label %30, label %25

25:                                               ; preds = %2
  %26 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %19, i64 0, i32 1
  %27 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %26, align 8
  %28 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 2
  %29 = load i32, i32* %28, align 4
  tail call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %27, i32 %29, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.67, i64 0, i64 0))
  br label %750

30:                                               ; preds = %2
  %31 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 1, i32 0, i64 0
  %32 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 4
  %33 = bitcast %"class.std::__1::shared_ptr"* %32 to i64*
  %34 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %32, i64 0, i32 0
  %35 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %34, align 8
  %36 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 4, i32 1
  %37 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %36, align 8
  %38 = icmp eq %"class.std::__1::__shared_weak_count"* %37, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %30
  %40 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %37, i64 0, i32 0, i32 1
  %41 = atomicrmw add i64* %40, i64 1 monotonic
  %42 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %36, align 8
  %43 = bitcast %"class.std::__1::__shared_weak_count"* %42 to void (%"class.std::__1::__shared_count"*)***
  br label %44

44:                                               ; preds = %30, %39
  %45 = phi void (%"class.std::__1::__shared_count"*)*** [ null, %30 ], [ %43, %39 ]
  %46 = phi %"class.std::__1::__shared_weak_count"* [ null, %30 ], [ %42, %39 ]
  %47 = bitcast %"class.std::__1::shared_ptr"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #14
  %48 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %7, i64 0, i32 0
  %49 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %7, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 0, i64 16, i1 false) #14
  %50 = bitcast %"class.std::__1::vector.8"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #14
  %51 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %8, i64 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %8, i64 0, i32 0, i32 1
  %53 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 0, i64 24, i1 false) #14
  %54 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 0
  %55 = load %"class.std::__1::vector.52"*, %"class.std::__1::vector.52"** %54, align 8
  %56 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 4, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq %"class.std::__1::__shared_weak_count"* %46, null
  br i1 %58, label %62, label %59

59:                                               ; preds = %44
  %60 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %46, i64 0, i32 0, i32 1
  %61 = atomicrmw add i64* %60, i64 1 monotonic
  br label %62

62:                                               ; preds = %44, %59
  tail call void @_ZN4SkSL11IRGenerator15pushSymbolTableEv(%"class.SkSL::IRGenerator"* %0) #14
  %63 = load i64, i64* %33, align 8
  %64 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %36, align 8
  %65 = ptrtoint %"class.std::__1::__shared_weak_count"* %64 to i64
  %66 = icmp eq %"class.std::__1::__shared_weak_count"* %64, null
  br i1 %66, label %70, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %64, i64 0, i32 0, i32 1
  %69 = atomicrmw add i64* %68, i64 1 monotonic
  br label %70

70:                                               ; preds = %67, %62
  %71 = bitcast %"class.std::__1::shared_ptr"* %7 to i64*
  store i64 %63, i64* %71, align 8
  %72 = bitcast %"class.std::__1::__shared_weak_count"** %49 to i64*
  %73 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %49, align 8
  store i64 %65, i64* %72, align 8
  %74 = icmp eq %"class.std::__1::__shared_weak_count"* %73, null
  br i1 %74, label %85, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %73, i64 0, i32 0, i32 1
  %77 = atomicrmw add i64* %76, i64 -1 acq_rel
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %79, label %85

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %73, i64 0, i32 0
  %81 = bitcast %"class.std::__1::__shared_weak_count"* %73 to void (%"class.std::__1::__shared_count"*)***
  %82 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %81, align 8
  %83 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %82, i64 2
  %84 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %83, align 8
  tail call void %84(%"class.std::__1::__shared_count"* %80) #14
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %73) #14
  br label %85

85:                                               ; preds = %70, %75, %79
  %86 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 1, i32 0, i64 96
  %87 = bitcast i8* %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %342, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %9, i64 0, i32 0, i32 0, i64 0
  %92 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %55, i64 0, i32 0, i32 0
  %93 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %9, i64 0, i32 0, i32 0, i64 16
  %94 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %9, i64 0, i32 0, i32 0, i64 24
  %95 = bitcast i8* %94 to i64*
  %96 = bitcast i8* %93 to %"class.std::__1::unique_ptr.190"**
  %97 = bitcast %"class.SkSL::String"* %11 to i8*
  %98 = bitcast %"class.SkSL::String"* %12 to i8*
  %99 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %101 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %102 = bitcast %"class.SkSL::String"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %103 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %102, i64 0, i32 1, i32 0
  %104 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %105 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %104, i64 0, i32 1, i32 0
  %106 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = bitcast %"class.SkSL::String"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %108 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %107, i64 0, i32 1, i32 0
  %109 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 12
  %111 = bitcast %"struct.SkSL::Type::Field"** %52 to i64*
  %112 = bitcast %"class.std::__1::vector.8"* %8 to i64*
  %113 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 14
  %114 = bitcast %"struct.SkSL::Modifiers"* %13 to i8*
  %115 = bitcast %"struct.SkSL::Type::Field"** %53 to i64*
  %116 = bitcast i8* %93 to i8**
  %117 = bitcast %"struct.SkSL::Modifiers"* %13 to i8*
  br label %121

118:                                              ; preds = %339
  %119 = load i64, i64* %87, align 8
  %120 = icmp ult i64 %341, %119
  br i1 %120, label %121, label %342

121:                                              ; preds = %90, %118
  %122 = phi i8 [ 0, %90 ], [ %315, %118 ]
  %123 = phi i64 [ 0, %90 ], [ %341, %118 ]
  %124 = phi i32 [ %57, %90 ], [ %128, %118 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %91) #14
  %125 = sext i32 %124 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %91, i8 -86, i64 32, i1 false)
  %126 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %92, align 8
  %127 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %126, i64 %125, i32 6, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %126, i64 %125
  call void @_ZN4SkSL11IRGenerator22convertVarDeclarationsERKNS_7ASTNodeENS_15VariableStorageE(%class.SkSTArray* nonnull sret %9, %"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %129, i8 signext 1)
  %130 = load i64, i64* %95, align 8
  %131 = and i64 %130, 4294967294
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %314, label %133

133:                                              ; preds = %121
  %134 = load %"class.std::__1::unique_ptr.190"*, %"class.std::__1::unique_ptr.190"** %96, align 8
  %135 = icmp eq %"class.std::__1::unique_ptr.190"* %134, null
  %136 = lshr i64 %130, 1
  %137 = and i64 %136, 2147483647
  %138 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %134, i64 %137
  %139 = select i1 %135, %"class.std::__1::unique_ptr.190"* null, %"class.std::__1::unique_ptr.190"* %138
  %140 = icmp eq %"class.std::__1::unique_ptr.190"* %134, %139
  br i1 %140, label %312, label %141

141:                                              ; preds = %133, %305
  %142 = phi i8 [ %220, %305 ], [ %122, %133 ]
  %143 = phi %"class.std::__1::unique_ptr.190"* [ %306, %305 ], [ %134, %133 ]
  %144 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %143, i64 0, i32 0, i32 0, i32 0
  %145 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %144, align 8
  %146 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %145, i64 1
  %147 = bitcast %"class.SkSL::Statement"* %146 to %"class.SkSL::Variable"**
  %148 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %147, align 8
  %149 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %148, i64 0, i32 0, i32 2
  %150 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %149, align 8
  %151 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %150, i64 0, i32 3
  %152 = load i32, i32* %151, align 8
  switch i32 %152, label %201 [
    i32 13, label %153
    i32 2, label %153
    i32 5, label %153
    i32 6, label %153
    i32 7, label %153
    i32 14, label %153
    i32 10, label %153
    i32 12, label %153
  ]

153:                                              ; preds = %141, %141, %141, %141, %141, %141, %141, %141
  %154 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %18, align 8
  %155 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %154, i64 0, i32 1
  %156 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %155, align 8
  %157 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %145, i64 0, i32 0, i32 1
  %158 = load i32, i32* %157, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %98) #14
  %159 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %150, i64 0, i32 0, i32 1, i32 0
  %160 = load i8*, i8** %159, align 8
  %161 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %150, i64 0, i32 0, i32 1, i32 1
  %162 = load i64, i64* %161, align 8
  %163 = icmp ugt i64 %162, -17
  br i1 %163, label %164, label %166

164:                                              ; preds = %153
  %165 = bitcast %"class.SkSL::String"* %12 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %165) #16
  unreachable

166:                                              ; preds = %153
  %167 = icmp ult i64 %162, 23
  br i1 %167, label %173, label %168

168:                                              ; preds = %166
  %169 = add nuw i64 %162, 16
  %170 = and i64 %169, -16
  %171 = call i8* @_Znwm(i64 %170) #15
  store i8* %171, i8** %99, align 8
  %172 = or i64 %170, -9223372036854775808
  store i64 %172, i64* %100, align 8
  store i64 %162, i64* %101, align 8
  br label %176

173:                                              ; preds = %166
  %174 = trunc i64 %162 to i8
  store i8 %174, i8* %103, align 1
  %175 = icmp eq i64 %162, 0
  br i1 %175, label %178, label %176

176:                                              ; preds = %173, %168
  %177 = phi i8* [ %171, %168 ], [ %98, %173 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %177, i8* align 1 %160, i64 %162, i1 false) #14
  br label %178

178:                                              ; preds = %173, %176
  %179 = phi i8* [ %98, %173 ], [ %177, %176 ]
  %180 = getelementptr inbounds i8, i8* %179, i64 %162
  store i8 0, i8* %180, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %11, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %12) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %10, %"class.SkSL::String"* nonnull %11, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.68, i64 0, i64 0)) #14
  %181 = bitcast %"class.SkSL::ErrorReporter"* %156 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %182 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %181, align 8
  %183 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %182, i64 2
  %184 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %183, align 8
  call void %184(%"class.SkSL::ErrorReporter"* %156, i32 %158, %"class.SkSL::String"* nonnull %10) #14
  %185 = load i8, i8* %105, align 1
  %186 = icmp slt i8 %185, 0
  br i1 %186, label %187, label %189

187:                                              ; preds = %178
  %188 = load i8*, i8** %106, align 8
  call void @_ZdlPv(i8* %188) #15
  br label %189

189:                                              ; preds = %178, %187
  %190 = load i8, i8* %108, align 1
  %191 = icmp slt i8 %190, 0
  br i1 %191, label %192, label %194

192:                                              ; preds = %189
  %193 = load i8*, i8** %109, align 8
  call void @_ZdlPv(i8* %193) #15
  br label %194

194:                                              ; preds = %189, %192
  %195 = load i8, i8* %103, align 1
  %196 = icmp slt i8 %195, 0
  br i1 %196, label %197, label %199

197:                                              ; preds = %194
  %198 = load i8*, i8** %99, align 8
  call void @_ZdlPv(i8* %198) #15
  br label %199

199:                                              ; preds = %194, %197
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97) #14
  %200 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %147, align 8
  br label %201

201:                                              ; preds = %141, %199
  %202 = phi %"class.SkSL::Variable"* [ %148, %141 ], [ %200, %199 ]
  %203 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %110, align 8
  %204 = icmp eq %"class.SkSL::Variable"* %202, %203
  br i1 %204, label %208, label %205

205:                                              ; preds = %201
  %206 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %52, align 8
  %207 = ptrtoint %"struct.SkSL::Type::Field"* %206 to i64
  br label %216

208:                                              ; preds = %201
  %209 = load i64, i64* %111, align 8
  %210 = load i64, i64* %112, align 8
  %211 = sub i64 %209, %210
  %212 = sdiv exact i64 %211, 104
  %213 = trunc i64 %212 to i32
  store i32 %213, i32* %113, align 8
  %214 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %147, align 8
  %215 = inttoptr i64 %209 to %"struct.SkSL::Type::Field"*
  br label %216

216:                                              ; preds = %205, %208
  %217 = phi i64 [ %209, %208 ], [ %207, %205 ]
  %218 = phi %"struct.SkSL::Type::Field"* [ %215, %208 ], [ %206, %205 ]
  %219 = phi %"class.SkSL::Variable"* [ %214, %208 ], [ %202, %205 ]
  %220 = phi i8 [ 1, %208 ], [ %142, %205 ]
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %114)
  %221 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %219, i64 0, i32 2
  %222 = bitcast %"struct.SkSL::Modifiers"** %221 to i8**
  %223 = load i8*, i8** %222, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %117, i8* align 8 %223, i64 80, i1 false)
  %224 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %219, i64 0, i32 0, i32 1, i32 0
  %225 = bitcast i8** %224 to i64*
  %226 = load i64, i64* %225, align 8
  %227 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %219, i64 0, i32 0, i32 1, i32 1
  %228 = load i64, i64* %227, align 8
  %229 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %219, i64 0, i32 0, i32 2
  %230 = bitcast %"class.SkSL::Type"** %229 to i64*
  %231 = load i64, i64* %230, align 8
  %232 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %53, align 8
  %233 = icmp ult %"struct.SkSL::Type::Field"* %218, %232
  %234 = ptrtoint %"struct.SkSL::Type::Field"* %232 to i64
  br i1 %233, label %235, label %244

235:                                              ; preds = %216
  %236 = bitcast %"struct.SkSL::Type::Field"* %218 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %236, i8* nonnull align 8 %114, i64 80, i1 false)
  %237 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %218, i64 0, i32 1, i32 0
  %238 = bitcast i8** %237 to i64*
  store i64 %226, i64* %238, align 8
  %239 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %218, i64 0, i32 1, i32 1
  store i64 %228, i64* %239, align 8
  %240 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %218, i64 0, i32 2
  %241 = bitcast %"class.SkSL::Type"** %240 to i64*
  store i64 %231, i64* %241, align 8
  %242 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %218, i64 1
  %243 = ptrtoint %"struct.SkSL::Type::Field"* %242 to i64
  store i64 %243, i64* %111, align 8
  br label %293

244:                                              ; preds = %216
  %245 = ptrtoint %"struct.SkSL::Type::Field"* %218 to i64
  %246 = load i64, i64* %112, align 8
  %247 = sub i64 %245, %246
  %248 = sdiv exact i64 %247, 104
  %249 = add nsw i64 %248, 1
  %250 = icmp ugt i64 %249, 177372539170284150
  br i1 %250, label %251, label %253

251:                                              ; preds = %244
  %252 = bitcast %"class.std::__1::vector.8"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %252) #16
  unreachable

253:                                              ; preds = %244
  %254 = sub i64 %234, %246
  %255 = sdiv exact i64 %254, 104
  %256 = icmp ult i64 %255, 88686269585142075
  br i1 %256, label %257, label %262

257:                                              ; preds = %253
  %258 = shl nsw i64 %255, 1
  %259 = icmp ult i64 %258, %249
  %260 = select i1 %259, i64 %249, i64 %258
  %261 = icmp eq i64 %260, 0
  br i1 %261, label %267, label %262

262:                                              ; preds = %257, %253
  %263 = phi i64 [ %260, %257 ], [ 177372539170284150, %253 ]
  %264 = mul i64 %263, 104
  %265 = call i8* @_Znwm(i64 %264) #15
  %266 = bitcast i8* %265 to %"struct.SkSL::Type::Field"*
  br label %267

267:                                              ; preds = %262, %257
  %268 = phi i64 [ %263, %262 ], [ 0, %257 ]
  %269 = phi %"struct.SkSL::Type::Field"* [ %266, %262 ], [ null, %257 ]
  %270 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %269, i64 %248
  %271 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %269, i64 %268
  %272 = ptrtoint %"struct.SkSL::Type::Field"* %271 to i64
  %273 = bitcast %"struct.SkSL::Type::Field"* %270 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %273, i8* nonnull align 8 %114, i64 80, i1 false)
  %274 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %269, i64 %248, i32 1, i32 0
  %275 = bitcast i8** %274 to i64*
  store i64 %226, i64* %275, align 8
  %276 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %269, i64 %248, i32 1, i32 1
  store i64 %228, i64* %276, align 8
  %277 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %269, i64 %248, i32 2
  %278 = bitcast %"class.SkSL::Type"** %277 to i64*
  store i64 %231, i64* %278, align 8
  %279 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %270, i64 1
  %280 = ptrtoint %"struct.SkSL::Type::Field"* %279 to i64
  %281 = sub i64 %217, %246
  %282 = sdiv exact i64 %281, -104
  %283 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %270, i64 %282
  %284 = ptrtoint %"struct.SkSL::Type::Field"* %283 to i64
  %285 = icmp sgt i64 %281, 0
  br i1 %285, label %286, label %289

286:                                              ; preds = %267
  %287 = bitcast %"struct.SkSL::Type::Field"* %283 to i8*
  %288 = inttoptr i64 %246 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %287, i8* align 8 %288, i64 %281, i1 false) #14
  br label %289

289:                                              ; preds = %286, %267
  store i64 %284, i64* %112, align 8
  store i64 %280, i64* %111, align 8
  store i64 %272, i64* %115, align 8
  %290 = icmp eq i64 %246, 0
  br i1 %290, label %293, label %291

291:                                              ; preds = %289
  %292 = inttoptr i64 %246 to i8*
  call void @_ZdlPv(i8* %292) #15
  br label %293

293:                                              ; preds = %235, %289, %291
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %114)
  %294 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %145, i64 2, i32 0, i32 1
  %295 = bitcast i32* %294 to %"class.SkSL::Expression"**
  %296 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %295, align 8
  %297 = icmp eq %"class.SkSL::Expression"* %296, null
  br i1 %297, label %305, label %298

298:                                              ; preds = %293
  %299 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %18, align 8
  %300 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %299, i64 0, i32 1
  %301 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %300, align 8
  %302 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %144, align 8
  %303 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %302, i64 0, i32 0, i32 1
  %304 = load i32, i32* %303, align 8
  call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %301, i32 %304, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.69, i64 0, i64 0))
  br label %305

305:                                              ; preds = %293, %298
  %306 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %143, i64 1
  %307 = icmp eq %"class.std::__1::unique_ptr.190"* %306, %139
  br i1 %307, label %308, label %141

308:                                              ; preds = %305
  %309 = load i64, i64* %95, align 8
  %310 = and i64 %309, 4294967294
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %314, label %312

312:                                              ; preds = %133, %308
  %313 = phi i8 [ %220, %308 ], [ %122, %133 ]
  br label %320

314:                                              ; preds = %331, %121, %308
  %315 = phi i8 [ %220, %308 ], [ %122, %121 ], [ %313, %331 ]
  %316 = phi i32 [ 0, %308 ], [ 1, %121 ], [ 0, %331 ]
  %317 = phi i64 [ %309, %308 ], [ %130, %121 ], [ %333, %331 ]
  %318 = and i64 %317, 1
  %319 = icmp eq i64 %318, 0
  br i1 %319, label %339, label %337

320:                                              ; preds = %312, %331
  %321 = phi i64 [ %332, %331 ], [ 0, %312 ]
  %322 = load %"class.std::__1::unique_ptr.190"*, %"class.std::__1::unique_ptr.190"** %96, align 8
  %323 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %322, i64 %321, i32 0, i32 0, i32 0
  %324 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %323, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %323, align 8
  %325 = icmp eq %"class.SkSL::Statement"* %324, null
  br i1 %325, label %331, label %326

326:                                              ; preds = %320
  %327 = bitcast %"class.SkSL::Statement"* %324 to void (%"class.SkSL::Statement"*)***
  %328 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %327, align 8
  %329 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %328, i64 1
  %330 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %329, align 8
  call void %330(%"class.SkSL::Statement"* nonnull %324) #14
  br label %331

331:                                              ; preds = %326, %320
  %332 = add nuw nsw i64 %321, 1
  %333 = load i64, i64* %95, align 8
  %334 = lshr i64 %333, 1
  %335 = and i64 %334, 2147483647
  %336 = icmp ult i64 %332, %335
  br i1 %336, label %320, label %314

337:                                              ; preds = %314
  %338 = load i8*, i8** %116, align 8
  call void @_Z7sk_freePv(i8* %338) #14
  br label %339

339:                                              ; preds = %314, %337
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %91) #14
  %340 = icmp eq i32 %316, 0
  %341 = add nuw i64 %123, 1
  br i1 %340, label %118, label %342

342:                                              ; preds = %339, %118, %85
  %343 = phi i8 [ 0, %85 ], [ %315, %118 ], [ %315, %339 ]
  %344 = phi i32 [ %57, %85 ], [ %128, %118 ], [ %128, %339 ]
  %345 = phi i32 [ 0, %85 ], [ %316, %339 ], [ 0, %118 ]
  %346 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %34, align 8
  %347 = bitcast %"class.SkSL::SymbolTable"* %346 to i64*
  %348 = load i64, i64* %347, align 8
  %349 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %346, i64 0, i32 0, i32 1
  %350 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %349, align 8
  %351 = ptrtoint %"class.std::__1::__shared_weak_count"* %350 to i64
  %352 = icmp eq %"class.std::__1::__shared_weak_count"* %350, null
  br i1 %352, label %356, label %353

353:                                              ; preds = %342
  %354 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %350, i64 0, i32 0, i32 1
  %355 = atomicrmw add i64* %354, i64 1 monotonic
  br label %356

356:                                              ; preds = %353, %342
  store i64 %348, i64* %33, align 8
  %357 = bitcast %"class.std::__1::__shared_weak_count"** %36 to i64*
  %358 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %36, align 8
  store i64 %351, i64* %357, align 8
  %359 = icmp eq %"class.std::__1::__shared_weak_count"* %358, null
  br i1 %359, label %370, label %360

360:                                              ; preds = %356
  %361 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %358, i64 0, i32 0, i32 1
  %362 = atomicrmw add i64* %361, i64 -1 acq_rel
  %363 = icmp eq i64 %362, 0
  br i1 %363, label %364, label %370

364:                                              ; preds = %360
  %365 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %358, i64 0, i32 0
  %366 = bitcast %"class.std::__1::__shared_weak_count"* %358 to void (%"class.std::__1::__shared_count"*)***
  %367 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %366, align 8
  %368 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %367, i64 2
  %369 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %368, align 8
  call void %369(%"class.std::__1::__shared_count"* %365) #14
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %358) #14
  br label %370

370:                                              ; preds = %364, %360, %356
  br i1 %58, label %380, label %371

371:                                              ; preds = %370
  %372 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %46, i64 0, i32 0, i32 1
  %373 = atomicrmw add i64* %372, i64 -1 acq_rel
  %374 = icmp eq i64 %373, 0
  br i1 %374, label %375, label %380

375:                                              ; preds = %371
  %376 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %46, i64 0, i32 0
  %377 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %45, align 8
  %378 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %377, i64 2
  %379 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %378, align 8
  call void %379(%"class.std::__1::__shared_count"* %376) #14
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %46) #14
  br label %380

380:                                              ; preds = %370, %371, %375
  %381 = icmp eq i32 %345, 0
  br i1 %381, label %382, label %718

382:                                              ; preds = %380
  %383 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 2
  %384 = load i32, i32* %383, align 4
  %385 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 1, i32 0, i64 80
  %386 = bitcast i8* %385 to i8**
  %387 = load i8*, i8** %386, align 8
  %388 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 1, i32 0, i64 88
  %389 = bitcast i8* %388 to i64*
  %390 = load i64, i64* %389, align 8
  %391 = icmp ugt i64 %390, -17
  br i1 %391, label %392, label %394

392:                                              ; preds = %382
  %393 = bitcast %"class.SkSL::String"* %14 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %393) #16
  unreachable

394:                                              ; preds = %382
  %395 = icmp ult i64 %390, 23
  br i1 %395, label %404, label %396

396:                                              ; preds = %394
  %397 = add nuw i64 %390, 16
  %398 = and i64 %397, -16
  %399 = call i8* @_Znwm(i64 %398) #15
  %400 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %399, i8** %400, align 8
  %401 = or i64 %398, -9223372036854775808
  %402 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %401, i64* %402, align 8
  %403 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %390, i64* %403, align 8
  br label %410

404:                                              ; preds = %394
  %405 = trunc i64 %390 to i8
  %406 = bitcast %"class.SkSL::String"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %407 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %406, i64 0, i32 1, i32 0
  store i8 %405, i8* %407, align 1
  %408 = bitcast %"class.SkSL::String"* %14 to i8*
  %409 = icmp eq i64 %390, 0
  br i1 %409, label %412, label %410

410:                                              ; preds = %404, %396
  %411 = phi i8* [ %399, %396 ], [ %408, %404 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %411, i8* align 1 %387, i64 %390, i1 false) #14
  br label %412

412:                                              ; preds = %404, %410
  %413 = phi i8* [ %408, %404 ], [ %411, %410 ]
  %414 = getelementptr inbounds i8, i8* %413, i64 %390
  store i8 0, i8* %414, align 1
  %415 = bitcast %"class.std::__1::vector.8"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %415, i8 0, i64 24, i1 false) #14
  %416 = bitcast %"struct.SkSL::Type::Field"** %52 to i64*
  %417 = load i64, i64* %416, align 8
  %418 = bitcast %"class.std::__1::vector.8"* %8 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = sub i64 %417, %419
  %421 = sdiv exact i64 %420, 104
  %422 = icmp eq i64 %420, 0
  br i1 %422, label %445, label %423

423:                                              ; preds = %412
  %424 = icmp ugt i64 %421, 177372539170284150
  br i1 %424, label %425, label %427

425:                                              ; preds = %423
  %426 = bitcast %"class.std::__1::vector.8"* %15 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %426) #16
  unreachable

427:                                              ; preds = %423
  %428 = call i8* @_Znwm(i64 %420) #15
  %429 = bitcast i8* %428 to %"struct.SkSL::Type::Field"*
  %430 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %15, i64 0, i32 0, i32 1
  %431 = bitcast %"struct.SkSL::Type::Field"** %430 to i8**
  store i8* %428, i8** %431, align 8
  %432 = bitcast %"class.std::__1::vector.8"* %15 to i8**
  store i8* %428, i8** %432, align 16
  %433 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %429, i64 %421
  %434 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %15, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.SkSL::Type::Field"* %433, %"struct.SkSL::Type::Field"** %434, align 16
  %435 = bitcast %"struct.SkSL::Type::Field"** %430 to i64*
  %436 = ptrtoint i8* %428 to i64
  %437 = icmp sgt i64 %420, 0
  br i1 %437, label %438, label %443

438:                                              ; preds = %427
  %439 = udiv exact i64 %420, 104
  %440 = inttoptr i64 %419 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %428, i8* align 8 %440, i64 %420, i1 false) #14
  %441 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %429, i64 %439
  %442 = ptrtoint %"struct.SkSL::Type::Field"* %441 to i64
  br label %443

443:                                              ; preds = %438, %427
  %444 = phi i64 [ %442, %438 ], [ %436, %427 ]
  store i64 %444, i64* %435, align 8
  br label %445

445:                                              ; preds = %412, %443
  %446 = getelementptr inbounds [15 x i8], [15 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %446)
  %447 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 184) #14
  %448 = bitcast i8* %447 to %"class.SkSL::Type"*
  %449 = bitcast %"class.SkSL::String"* %14 to i8*
  %450 = bitcast %"class.SkSL::String"* %14 to i64*
  %451 = load i64, i64* %450, align 8
  %452 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %453 = bitcast i64* %452 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %446, i8* align 8 %453, i64 15, i1 false) #14
  %454 = getelementptr inbounds i8, i8* %449, i64 23
  %455 = load i8, i8* %454, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %449, i8 0, i64 24, i1 false) #14
  %456 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %15, i64 0, i32 0, i32 1
  %457 = bitcast %"struct.SkSL::Type::Field"** %456 to i64*
  %458 = bitcast %"class.std::__1::vector.8"* %15 to <2 x i64>*
  %459 = load <2 x i64>, <2 x i64>* %458, align 16
  %460 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %15, i64 0, i32 0, i32 2, i32 0, i32 0
  %461 = bitcast %"struct.SkSL::Type::Field"** %460 to i64*
  %462 = load i64, i64* %461, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %415, i8 0, i64 24, i1 false) #14
  %463 = bitcast i8* %447 to i32 (...)***
  %464 = getelementptr inbounds i8, i8* %447, i64 8
  %465 = bitcast i8* %464 to i32*
  store i32 %384, i32* %465, align 8
  %466 = getelementptr inbounds i8, i8* %447, i64 12
  %467 = bitcast i8* %466 to i32*
  store i32 13, i32* %467, align 4
  %468 = getelementptr inbounds i8, i8* %447, i64 16
  %469 = bitcast i8* %468 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.30, i64 0, i64 0), i8** %469, align 8
  %470 = getelementptr inbounds i8, i8* %447, i64 24
  %471 = bitcast i8* %470 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 8 %470, i8 0, i64 16, i1 false) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %463, align 8
  %472 = getelementptr inbounds i8, i8* %447, i64 40
  %473 = bitcast i8* %472 to i8**
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.156, i64 0, i64 0), i8** %473, align 8
  %474 = getelementptr inbounds i8, i8* %447, i64 48
  %475 = bitcast i8* %474 to i64*
  store i64 %451, i64* %475, align 8
  %476 = getelementptr inbounds i8, i8* %447, i64 56
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %476, i8* nonnull align 8 %446, i64 15, i1 false) #14
  %477 = getelementptr inbounds i8, i8* %447, i64 71
  store i8 %455, i8* %477, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %446, i8 0, i64 15, i1 false)
  %478 = getelementptr inbounds i8, i8* %447, i64 72
  %479 = bitcast i8* %478 to i32*
  store i32 9, i32* %479, align 8
  %480 = getelementptr inbounds i8, i8* %447, i64 76
  %481 = bitcast i8* %480 to i32*
  store i32 4, i32* %481, align 4
  %482 = getelementptr inbounds i8, i8* %447, i64 80
  %483 = bitcast i8* %482 to i32*
  store i32 -1, i32* %483, align 8
  %484 = getelementptr inbounds i8, i8* %447, i64 88
  %485 = getelementptr inbounds i8, i8* %447, i64 120
  %486 = bitcast i8* %485 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %484, i8 0, i64 32, i1 false) #14
  store i32 -1, i32* %486, align 8
  %487 = getelementptr inbounds i8, i8* %447, i64 124
  %488 = bitcast i8* %487 to i32*
  store i32 -1, i32* %488, align 4
  %489 = getelementptr inbounds i8, i8* %447, i64 128
  %490 = bitcast i8* %489 to <2 x i64>*
  store <2 x i64> %459, <2 x i64>* %490, align 8
  %491 = getelementptr inbounds i8, i8* %447, i64 144
  %492 = bitcast i8* %491 to i64*
  store i64 %462, i64* %492, align 8
  %493 = getelementptr inbounds i8, i8* %447, i64 152
  %494 = getelementptr inbounds i8, i8* %447, i64 168
  call void @llvm.memset.p0i8.i64(i8* align 8 %493, i8 0, i64 9, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* align 8 %494, i8 0, i64 16, i1 false) #14
  %495 = icmp slt i8 %455, 0
  br i1 %495, label %496, label %500

496:                                              ; preds = %445
  %497 = inttoptr i64 %451 to i8*
  %498 = bitcast i8* %476 to i64*
  %499 = load i64, i64* %498, align 8
  br label %502

500:                                              ; preds = %445
  %501 = zext i8 %455 to i64
  br label %502

502:                                              ; preds = %496, %500
  %503 = phi i8* [ %497, %496 ], [ %474, %500 ]
  %504 = phi i64 [ %499, %496 ], [ %501, %500 ]
  store i8* %503, i8** %469, align 8
  store i64 %504, i64* %471, align 8
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %446)
  %505 = ptrtoint i8* %447 to i64
  %506 = bitcast %"class.std::__1::unique_ptr.165"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %506) #14
  %507 = bitcast %"class.std::__1::unique_ptr.165"* %4 to i64*
  store i64 %505, i64* %507, align 8
  %508 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %35, i64 0, i32 1, i32 0, i32 1
  %509 = load %"class.std::__1::unique_ptr.165"*, %"class.std::__1::unique_ptr.165"** %508, align 8
  %510 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %35, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %511 = load %"class.std::__1::unique_ptr.165"*, %"class.std::__1::unique_ptr.165"** %510, align 8
  %512 = icmp ult %"class.std::__1::unique_ptr.165"* %509, %511
  br i1 %512, label %513, label %519

513:                                              ; preds = %502
  %514 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %514, align 8
  %515 = bitcast %"class.std::__1::unique_ptr.165"* %509 to i64*
  store i64 %505, i64* %515, align 8
  %516 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %509, i64 1
  %517 = ptrtoint %"class.std::__1::unique_ptr.165"* %516 to i64
  %518 = bitcast %"class.std::__1::unique_ptr.165"** %508 to i64*
  store i64 %517, i64* %518, align 8
  br label %521

519:                                              ; preds = %502
  %520 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %35, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.163"* %520, %"class.std::__1::unique_ptr.165"* nonnull dereferenceable(8) %4) #14
  br label %521

521:                                              ; preds = %519, %513
  %522 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %4, i64 0, i32 0, i32 0, i32 0
  %523 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %522, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %522, align 8
  %524 = icmp eq %"class.SkSL::Symbol"* %523, null
  br i1 %524, label %530, label %525

525:                                              ; preds = %521
  %526 = bitcast %"class.SkSL::Symbol"* %523 to void (%"class.SkSL::Symbol"*)***
  %527 = load void (%"class.SkSL::Symbol"*)**, void (%"class.SkSL::Symbol"*)*** %526, align 8
  %528 = getelementptr inbounds void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %527, i64 1
  %529 = load void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %528, align 8
  call void %529(%"class.SkSL::Symbol"* nonnull %523) #14
  br label %530

530:                                              ; preds = %521, %525
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %506) #14
  %531 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %15, i64 0, i32 0, i32 0
  %532 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %531, align 16
  %533 = icmp eq %"struct.SkSL::Type::Field"* %532, null
  br i1 %533, label %537, label %534

534:                                              ; preds = %530
  %535 = ptrtoint %"struct.SkSL::Type::Field"* %532 to i64
  store i64 %535, i64* %457, align 8
  %536 = bitcast %"struct.SkSL::Type::Field"* %532 to i8*
  call void @_ZdlPv(i8* %536) #15
  br label %537

537:                                              ; preds = %530, %534
  %538 = bitcast %"class.SkSL::String"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %539 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %538, i64 0, i32 1, i32 0
  %540 = load i8, i8* %539, align 1
  %541 = icmp slt i8 %540, 0
  br i1 %541, label %542, label %545

542:                                              ; preds = %537
  %543 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %544 = load i8*, i8** %543, align 8
  call void @_ZdlPv(i8* %544) #15
  br label %545

545:                                              ; preds = %537, %542
  %546 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %546) #14
  store i32 0, i32* %16, align 4
  %547 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 1, i32 0, i64 120
  %548 = load i8, i8* %547, align 8, !range !2
  %549 = icmp eq i8 %548, 0
  br i1 %549, label %571, label %550

550:                                              ; preds = %545
  %551 = sext i32 %344 to i64
  %552 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %55, i64 0, i32 0, i32 0
  %553 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %552, align 8
  %554 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %553, i64 %551, i32 3
  %555 = load i32, i32* %554, align 8
  %556 = icmp eq i32 %555, 22
  br i1 %556, label %565, label %557

557:                                              ; preds = %550
  %558 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %553, i64 %551
  %559 = call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator17convertExpressionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %558) #14
  %560 = icmp eq %"class.SkSL::Expression"* %559, null
  br i1 %560, label %561, label %562

561:                                              ; preds = %557
  store i32 0, i32* %16, align 4
  br label %716

562:                                              ; preds = %557
  %563 = call i32 @_ZN4SkSL11IRGenerator16convertArraySizeERKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEE(%"class.SkSL::IRGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %448, %"class.SkSL::Expression"* nonnull %559) #14
  store i32 %563, i32* %16, align 4
  %564 = icmp eq i32 %563, 0
  br i1 %564, label %716, label %566

565:                                              ; preds = %550
  store i32 -1, i32* %16, align 4
  br label %566

566:                                              ; preds = %562, %565
  %567 = phi i32 [ %563, %562 ], [ -1, %565 ]
  %568 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %48, align 8
  %569 = call %"class.SkSL::Type"* @_ZN4SkSL11SymbolTable17addArrayDimensionEPKNS_4TypeEi(%"class.SkSL::SymbolTable"* %568, %"class.SkSL::Type"* %448, i32 %567) #14
  %570 = ptrtoint %"class.SkSL::Type"* %569 to i64
  br label %571

571:                                              ; preds = %566, %545
  %572 = phi i64 [ %505, %545 ], [ %570, %566 ]
  %573 = bitcast %"class.SkSL::Variable"** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %573) #14
  store %"class.SkSL::Variable"* inttoptr (i64 -6148914691236517206 to %"class.SkSL::Variable"*), %"class.SkSL::Variable"** %17, align 8
  %574 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %18, align 8
  %575 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %574, i64 0, i32 3
  %576 = load %"class.SkSL::ModifiersPool"*, %"class.SkSL::ModifiersPool"** %575, align 8
  %577 = bitcast i8* %31 to %"struct.SkSL::Modifiers"*
  %578 = getelementptr inbounds %"class.SkSL::ModifiersPool", %"class.SkSL::ModifiersPool"* %576, i64 0, i32 0, i32 0
  %579 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %578, %"struct.SkSL::Modifiers"* dereferenceable(80) %577, %"struct.SkSL::Modifiers"* dereferenceable(80) %577) #14
  %580 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %579, 0
  %581 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %580, i64 2
  %582 = ptrtoint %"struct.std::__1::__hash_node_base"* %581 to i64
  %583 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 1, i32 0, i64 104
  %584 = bitcast i8* %583 to %"struct.SkSL::StringFragment"*
  %585 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 1, i32 0, i64 112
  %586 = bitcast i8* %585 to i64*
  %587 = load i64, i64* %586, align 8
  %588 = icmp eq i64 %587, 0
  %589 = bitcast i8* %385 to %"struct.SkSL::StringFragment"*
  %590 = select i1 %588, %"struct.SkSL::StringFragment"* %589, %"struct.SkSL::StringFragment"* %584
  %591 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 15
  %592 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 64) #14
  %593 = load i32, i32* %383, align 4
  %594 = bitcast %"struct.SkSL::StringFragment"* %590 to <2 x i64>*
  %595 = load <2 x i64>, <2 x i64>* %594, align 8
  %596 = load i8, i8* %591, align 1, !range !2
  %597 = bitcast i8* %592 to i32 (...)***
  %598 = getelementptr inbounds i8, i8* %592, i64 8
  %599 = bitcast i8* %598 to i32*
  store i32 %593, i32* %599, align 8
  %600 = getelementptr inbounds i8, i8* %592, i64 12
  %601 = bitcast i8* %600 to i32*
  store i32 15, i32* %601, align 4
  %602 = getelementptr inbounds i8, i8* %592, i64 16
  %603 = bitcast i8* %602 to <2 x i64>*
  store <2 x i64> %595, <2 x i64>* %603, align 8
  %604 = getelementptr inbounds i8, i8* %592, i64 32
  %605 = bitcast i8* %604 to i64*
  store i64 %572, i64* %605, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL8VariableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %597, align 8
  %606 = getelementptr inbounds i8, i8* %592, i64 40
  %607 = bitcast i8* %606 to %"class.SkSL::VarDeclaration"**
  store %"class.SkSL::VarDeclaration"* null, %"class.SkSL::VarDeclaration"** %607, align 8
  %608 = getelementptr inbounds i8, i8* %592, i64 48
  %609 = bitcast i8* %608 to i64*
  store i64 %582, i64* %609, align 8
  %610 = getelementptr inbounds i8, i8* %592, i64 56
  store i8 0, i8* %610, align 8
  %611 = getelementptr inbounds i8, i8* %592, i64 57
  store i8 %596, i8* %611, align 1
  %612 = ptrtoint i8* %592 to i64
  %613 = bitcast %"class.std::__1::unique_ptr.165"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %613) #14
  %614 = bitcast %"class.std::__1::unique_ptr.165"* %5 to i64*
  store i64 %612, i64* %614, align 8
  %615 = load %"class.std::__1::unique_ptr.165"*, %"class.std::__1::unique_ptr.165"** %508, align 8
  %616 = load %"class.std::__1::unique_ptr.165"*, %"class.std::__1::unique_ptr.165"** %510, align 8
  %617 = icmp ult %"class.std::__1::unique_ptr.165"* %615, %616
  br i1 %617, label %618, label %624

618:                                              ; preds = %571
  %619 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %619, align 8
  %620 = bitcast %"class.std::__1::unique_ptr.165"* %615 to i64*
  store i64 %612, i64* %620, align 8
  %621 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %615, i64 1
  %622 = ptrtoint %"class.std::__1::unique_ptr.165"* %621 to i64
  %623 = bitcast %"class.std::__1::unique_ptr.165"** %508 to i64*
  store i64 %622, i64* %623, align 8
  br label %626

624:                                              ; preds = %571
  %625 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %35, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.163"* %625, %"class.std::__1::unique_ptr.165"* nonnull dereferenceable(8) %5) #14
  br label %626

626:                                              ; preds = %624, %618
  %627 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %5, i64 0, i32 0, i32 0, i32 0
  %628 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %627, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %627, align 8
  %629 = icmp eq %"class.SkSL::Symbol"* %628, null
  br i1 %629, label %635, label %630

630:                                              ; preds = %626
  %631 = bitcast %"class.SkSL::Symbol"* %628 to void (%"class.SkSL::Symbol"*)***
  %632 = load void (%"class.SkSL::Symbol"*)**, void (%"class.SkSL::Symbol"*)*** %631, align 8
  %633 = getelementptr inbounds void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %632, i64 1
  %634 = load void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %633, align 8
  call void %634(%"class.SkSL::Symbol"* nonnull %628) #14
  br label %635

635:                                              ; preds = %626, %630
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %613) #14
  %636 = bitcast %"class.SkSL::Variable"** %17 to i8**
  store i8* %592, i8** %636, align 8
  %637 = and i8 %343, 1
  %638 = icmp eq i8 %637, 0
  %639 = bitcast i8* %592 to %"class.SkSL::Symbol"*
  br i1 %638, label %643, label %640

640:                                              ; preds = %635
  %641 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 13
  %642 = bitcast %"class.SkSL::Variable"** %641 to i8**
  store i8* %592, i8** %642, align 8
  br label %643

643:                                              ; preds = %635, %640
  %644 = load i64, i64* %586, align 8
  %645 = icmp eq i64 %644, 0
  br i1 %645, label %646, label %656

646:                                              ; preds = %643
  %647 = load i64, i64* %416, align 8
  %648 = load i64, i64* %418, align 8
  %649 = icmp eq i64 %647, %648
  br i1 %649, label %713, label %650

650:                                              ; preds = %646
  %651 = bitcast %"class.std::__1::unique_ptr.165"* %6 to i8*
  %652 = bitcast %"class.std::__1::unique_ptr.165"* %6 to i64*
  %653 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %35, i64 0, i32 1
  %654 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %6, i64 0, i32 0, i32 0, i32 0
  %655 = bitcast %"class.std::__1::unique_ptr.165"** %508 to i64*
  br label %657

656:                                              ; preds = %643
  call void @_ZN4SkSL11SymbolTable19addWithoutOwnershipEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %35, %"class.SkSL::Symbol"* %639) #14
  br label %713

657:                                              ; preds = %650, %706
  %658 = phi i64 [ 0, %650 ], [ %707, %706 ]
  %659 = trunc i64 %658 to i32
  %660 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 56) #14
  %661 = load i32, i32* %383, align 4
  %662 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %17, align 8
  %663 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %662, i64 0, i32 0, i32 2
  %664 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %663, align 8
  %665 = shl i64 %658, 32
  %666 = ashr exact i64 %665, 32
  %667 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %664, i64 0, i32 10, i32 0, i32 0
  %668 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %667, align 8
  %669 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %668, i64 %666, i32 1, i32 0
  %670 = bitcast i8** %669 to <2 x i64>*
  %671 = load <2 x i64>, <2 x i64>* %670, align 8
  %672 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %668, i64 %666, i32 2
  %673 = bitcast %"class.SkSL::Type"** %672 to i64*
  %674 = load i64, i64* %673, align 8
  %675 = bitcast i8* %660 to i32 (...)***
  %676 = getelementptr inbounds i8, i8* %660, i64 8
  %677 = bitcast i8* %676 to i32*
  store i32 %661, i32* %677, align 8
  %678 = getelementptr inbounds i8, i8* %660, i64 12
  %679 = bitcast i8* %678 to i32*
  store i32 10, i32* %679, align 4
  %680 = getelementptr inbounds i8, i8* %660, i64 16
  %681 = bitcast i8* %680 to <2 x i64>*
  store <2 x i64> %671, <2 x i64>* %681, align 8
  %682 = getelementptr inbounds i8, i8* %660, i64 32
  %683 = bitcast i8* %682 to i64*
  store i64 %674, i64* %683, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %675, align 8
  %684 = getelementptr inbounds i8, i8* %660, i64 40
  %685 = bitcast i8* %684 to %"class.SkSL::Variable"**
  store %"class.SkSL::Variable"* %662, %"class.SkSL::Variable"** %685, align 8
  %686 = getelementptr inbounds i8, i8* %660, i64 48
  %687 = bitcast i8* %686 to i32*
  store i32 %659, i32* %687, align 8
  %688 = ptrtoint i8* %660 to i64
  %689 = bitcast i8* %660 to %"class.SkSL::Symbol"*
  call void @_ZN4SkSL11SymbolTable19addWithoutOwnershipEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %35, %"class.SkSL::Symbol"* %689) #14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %651) #14
  store i64 %688, i64* %652, align 8
  %690 = load %"class.std::__1::unique_ptr.165"*, %"class.std::__1::unique_ptr.165"** %508, align 8
  %691 = load %"class.std::__1::unique_ptr.165"*, %"class.std::__1::unique_ptr.165"** %510, align 8
  %692 = icmp ult %"class.std::__1::unique_ptr.165"* %690, %691
  br i1 %692, label %693, label %697

693:                                              ; preds = %657
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %654, align 8
  %694 = bitcast %"class.std::__1::unique_ptr.165"* %690 to i64*
  store i64 %688, i64* %694, align 8
  %695 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %690, i64 1
  %696 = ptrtoint %"class.std::__1::unique_ptr.165"* %695 to i64
  store i64 %696, i64* %655, align 8
  br label %698

697:                                              ; preds = %657
  call void @_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.163"* %653, %"class.std::__1::unique_ptr.165"* nonnull dereferenceable(8) %6) #14
  br label %698

698:                                              ; preds = %697, %693
  %699 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %654, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %654, align 8
  %700 = icmp eq %"class.SkSL::Symbol"* %699, null
  br i1 %700, label %706, label %701

701:                                              ; preds = %698
  %702 = bitcast %"class.SkSL::Symbol"* %699 to void (%"class.SkSL::Symbol"*)***
  %703 = load void (%"class.SkSL::Symbol"*)**, void (%"class.SkSL::Symbol"*)*** %702, align 8
  %704 = getelementptr inbounds void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %703, i64 1
  %705 = load void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %704, align 8
  call void %705(%"class.SkSL::Symbol"* nonnull %699) #14
  br label %706

706:                                              ; preds = %698, %701
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %651) #14
  %707 = add nuw i64 %658, 1
  %708 = load i64, i64* %416, align 8
  %709 = load i64, i64* %418, align 8
  %710 = sub i64 %708, %709
  %711 = sdiv exact i64 %710, 104
  %712 = icmp ult i64 %707, %711
  br i1 %712, label %657, label %713

713:                                              ; preds = %706, %646, %656
  %714 = call %"class.SkSL::InterfaceBlock"* @_ZNSt3__111make_uniqueIN4SkSL14InterfaceBlockEJRKiRPKNS1_8VariableERKNS1_14StringFragmentESB_RiRNS_10shared_ptrINS1_11SymbolTableEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(i32* dereferenceable(4) %383, %"class.SkSL::Variable"** nonnull dereferenceable(8) %17, %"struct.SkSL::StringFragment"* dereferenceable(16) %589, %"struct.SkSL::StringFragment"* dereferenceable(16) %584, i32* nonnull dereferenceable(4) %16, %"class.std::__1::shared_ptr"* nonnull dereferenceable(16) %7)
  %715 = ptrtoint %"class.SkSL::InterfaceBlock"* %714 to i64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %573) #14
  br label %716

716:                                              ; preds = %562, %561, %713
  %717 = phi i64 [ %715, %713 ], [ 0, %561 ], [ 0, %562 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %546) #14
  br label %718

718:                                              ; preds = %380, %716
  %719 = phi i64 [ %717, %716 ], [ 0, %380 ]
  %720 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %51, align 8
  %721 = icmp eq %"struct.SkSL::Type::Field"* %720, null
  br i1 %721, label %726, label %722

722:                                              ; preds = %718
  %723 = ptrtoint %"struct.SkSL::Type::Field"* %720 to i64
  %724 = bitcast %"struct.SkSL::Type::Field"** %52 to i64*
  store i64 %723, i64* %724, align 8
  %725 = bitcast %"struct.SkSL::Type::Field"* %720 to i8*
  call void @_ZdlPv(i8* %725) #15
  br label %726

726:                                              ; preds = %718, %722
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #14
  %727 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %49, align 8
  %728 = icmp eq %"class.std::__1::__shared_weak_count"* %727, null
  br i1 %728, label %739, label %729

729:                                              ; preds = %726
  %730 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %727, i64 0, i32 0, i32 1
  %731 = atomicrmw add i64* %730, i64 -1 acq_rel
  %732 = icmp eq i64 %731, 0
  br i1 %732, label %733, label %739

733:                                              ; preds = %729
  %734 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %727, i64 0, i32 0
  %735 = bitcast %"class.std::__1::__shared_weak_count"* %727 to void (%"class.std::__1::__shared_count"*)***
  %736 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %735, align 8
  %737 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %736, i64 2
  %738 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %737, align 8
  call void %738(%"class.std::__1::__shared_count"* %734) #14
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %727) #14
  br label %739

739:                                              ; preds = %726, %729, %733
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #14
  br i1 %38, label %750, label %740

740:                                              ; preds = %739
  %741 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %37, i64 0, i32 0, i32 1
  %742 = atomicrmw add i64* %741, i64 -1 acq_rel
  %743 = icmp eq i64 %742, 0
  br i1 %743, label %744, label %750

744:                                              ; preds = %740
  %745 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %37, i64 0, i32 0
  %746 = bitcast %"class.std::__1::__shared_weak_count"* %37 to void (%"class.std::__1::__shared_count"*)***
  %747 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %746, align 8
  %748 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %747, i64 2
  %749 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %748, align 8
  call void %749(%"class.std::__1::__shared_count"* %745) #14
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %37) #14
  br label %750

750:                                              ; preds = %744, %740, %739, %25
  %751 = phi i64 [ 0, %25 ], [ %719, %739 ], [ %719, %740 ], [ %719, %744 ]
  %752 = inttoptr i64 %751 to %"class.SkSL::InterfaceBlock"*
  ret %"class.SkSL::InterfaceBlock"* %752
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::InterfaceBlock"* @_ZNSt3__111make_uniqueIN4SkSL14InterfaceBlockEJRKiRPKNS1_8VariableERKNS1_14StringFragmentESB_RiRNS_10shared_ptrINS1_11SymbolTableEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(i32* dereferenceable(4), %"class.SkSL::Variable"** dereferenceable(8), %"struct.SkSL::StringFragment"* dereferenceable(16), %"struct.SkSL::StringFragment"* dereferenceable(16), i32* dereferenceable(4), %"class.std::__1::shared_ptr"* dereferenceable(16)) local_unnamed_addr #4 comdat {
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 96) #14
  %10 = bitcast i8* %9 to %"class.SkSL::InterfaceBlock"*
  %11 = load i32, i32* %0, align 4
  %12 = bitcast %"class.SkSL::Variable"** %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.SkSL::StringFragment", %"struct.SkSL::StringFragment"* %2, i64 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"struct.SkSL::StringFragment", %"struct.SkSL::StringFragment"* %2, i64 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp ugt i64 %17, -17
  br i1 %18, label %19, label %21

19:                                               ; preds = %6
  %20 = bitcast %"class.SkSL::String"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %20) #16
  unreachable

21:                                               ; preds = %6
  %22 = icmp ult i64 %17, 23
  br i1 %22, label %31, label %23

23:                                               ; preds = %21
  %24 = add nuw i64 %17, 16
  %25 = and i64 %24, -16
  %26 = tail call i8* @_Znwm(i64 %25) #15
  %27 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %26, i8** %27, align 8
  %28 = or i64 %25, -9223372036854775808
  %29 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %30, align 8
  br label %37

31:                                               ; preds = %21
  %32 = trunc i64 %17 to i8
  %33 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  store i8 %32, i8* %34, align 1
  %35 = bitcast %"class.SkSL::String"* %7 to i8*
  %36 = icmp eq i64 %17, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %31, %23
  %38 = phi i8* [ %26, %23 ], [ %35, %31 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %38, i8* align 1 %15, i64 %17, i1 false) #14
  br label %39

39:                                               ; preds = %31, %37
  %40 = phi i8* [ %35, %31 ], [ %38, %37 ]
  %41 = getelementptr inbounds i8, i8* %40, i64 %17
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %"struct.SkSL::StringFragment", %"struct.SkSL::StringFragment"* %3, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = getelementptr inbounds %"struct.SkSL::StringFragment", %"struct.SkSL::StringFragment"* %3, i64 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = icmp ugt i64 %45, -17
  br i1 %46, label %47, label %49

47:                                               ; preds = %39
  %48 = bitcast %"class.SkSL::String"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %48) #16
  unreachable

49:                                               ; preds = %39
  %50 = icmp ult i64 %45, 23
  br i1 %50, label %59, label %51

51:                                               ; preds = %49
  %52 = add nuw i64 %45, 16
  %53 = and i64 %52, -16
  %54 = tail call i8* @_Znwm(i64 %53) #15
  %55 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %54, i8** %55, align 8
  %56 = or i64 %53, -9223372036854775808
  %57 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %45, i64* %58, align 8
  br label %65

59:                                               ; preds = %49
  %60 = trunc i64 %45 to i8
  %61 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  store i8 %60, i8* %62, align 1
  %63 = bitcast %"class.SkSL::String"* %8 to i8*
  %64 = icmp eq i64 %45, 0
  br i1 %64, label %67, label %65

65:                                               ; preds = %59, %51
  %66 = phi i8* [ %54, %51 ], [ %63, %59 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %66, i8* align 1 %43, i64 %45, i1 false) #14
  br label %67

67:                                               ; preds = %59, %65
  %68 = phi i8* [ %63, %59 ], [ %66, %65 ]
  %69 = getelementptr inbounds i8, i8* %68, i64 %45
  store i8 0, i8* %69, align 1
  %70 = load i32, i32* %4, align 4
  %71 = bitcast %"class.std::__1::shared_ptr"* %5 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %5, i64 0, i32 1
  %74 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %73, align 8
  %75 = icmp eq %"class.std::__1::__shared_weak_count"* %74, null
  br i1 %75, label %79, label %76

76:                                               ; preds = %67
  %77 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %74, i64 0, i32 0, i32 1
  %78 = atomicrmw add i64* %77, i64 1 monotonic
  br label %79

79:                                               ; preds = %67, %76
  %80 = ptrtoint %"class.std::__1::__shared_weak_count"* %74 to i64
  %81 = getelementptr inbounds i8, i8* %9, i64 8
  %82 = bitcast i8* %81 to i32*
  store i32 %11, i32* %82, align 8
  %83 = getelementptr inbounds i8, i8* %9, i64 12
  %84 = bitcast i8* %83 to i32*
  store i32 5, i32* %84, align 4
  %85 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL14InterfaceBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %85, align 8
  %86 = getelementptr inbounds i8, i8* %9, i64 16
  %87 = bitcast i8* %86 to i64*
  store i64 %13, i64* %87, align 8
  %88 = getelementptr inbounds i8, i8* %9, i64 24
  %89 = bitcast %"class.SkSL::String"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* nonnull align 8 %89, i64 24, i1 false) #14
  %90 = getelementptr inbounds i8, i8* %9, i64 48
  %91 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %90, i8* nonnull align 8 %91, i64 24, i1 false) #14
  %92 = getelementptr inbounds i8, i8* %9, i64 72
  %93 = bitcast i8* %92 to i32*
  store i32 %70, i32* %93, align 8
  %94 = getelementptr inbounds i8, i8* %9, i64 80
  %95 = bitcast i8* %94 to i64*
  store i64 %72, i64* %95, align 8
  %96 = getelementptr inbounds i8, i8* %9, i64 88
  %97 = bitcast i8* %96 to i64*
  store i64 %80, i64* %97, align 8
  ret %"class.SkSL::InterfaceBlock"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL11IRGenerator28convertGlobalVarDeclarationsERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"*, %"struct.SkSL::ASTNode"* nocapture readonly dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkSTArray, align 8
  %4 = alloca %"class.SkSL::Type"*, align 8
  %5 = alloca %"class.std::__1::unique_ptr.139", align 8
  %6 = alloca %"class.std::__1::unique_ptr.139", align 8
  %7 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %3, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  call void @_ZN4SkSL11IRGenerator22convertVarDeclarationsERKNS_7ASTNodeENS_15VariableStorageE(%class.SkSTArray* nonnull sret %3, %"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %1, i8 signext 0)
  %8 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %3, i64 0, i32 0, i32 0, i64 16
  %9 = bitcast i8* %8 to %"class.std::__1::unique_ptr.190"**
  %10 = load %"class.std::__1::unique_ptr.190"*, %"class.std::__1::unique_ptr.190"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.190"* %10, null
  br i1 %11, label %32, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %3, i64 0, i32 0, i32 0, i64 24
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %15, 1
  %17 = and i64 %16, 2147483647
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %10, i64 %17
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %32, label %20

20:                                               ; preds = %12
  %21 = bitcast %"class.SkSL::Type"** %4 to i8*
  %22 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 9, i32 0
  %23 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 10
  %24 = bitcast %"class.std::__1::unique_ptr.139"* %5 to i8*
  %25 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 2
  %26 = bitcast %"class.SkSL::Type"** %4 to i64*
  %27 = bitcast %"class.std::__1::unique_ptr.139"* %5 to i64*
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %5, i64 0, i32 0, i32 0, i32 0
  %29 = bitcast %"class.std::__1::unique_ptr.139"* %6 to i8*
  %30 = bitcast %"class.std::__1::unique_ptr.139"* %6 to i64*
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %6, i64 0, i32 0, i32 0, i32 0
  br label %63

32:                                               ; preds = %145, %2, %12
  %33 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %3, i64 0, i32 0, i32 0, i64 24
  %34 = bitcast i8* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = and i64 %35, 4294967294
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %38, label %42

38:                                               ; preds = %53, %32
  %39 = phi i64 [ %35, %32 ], [ %55, %53 ]
  %40 = and i64 %39, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %62, label %59

42:                                               ; preds = %32, %53
  %43 = phi i64 [ %54, %53 ], [ 0, %32 ]
  %44 = load %"class.std::__1::unique_ptr.190"*, %"class.std::__1::unique_ptr.190"** %9, align 8
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %44, i64 %43, i32 0, i32 0, i32 0
  %46 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %45, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %45, align 8
  %47 = icmp eq %"class.SkSL::Statement"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %42
  %49 = bitcast %"class.SkSL::Statement"* %46 to void (%"class.SkSL::Statement"*)***
  %50 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %50, i64 1
  %52 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %51, align 8
  call void %52(%"class.SkSL::Statement"* nonnull %46) #14
  br label %53

53:                                               ; preds = %48, %42
  %54 = add nuw nsw i64 %43, 1
  %55 = load i64, i64* %34, align 8
  %56 = lshr i64 %55, 1
  %57 = and i64 %56, 2147483647
  %58 = icmp ult i64 %54, %57
  br i1 %58, label %42, label %38

59:                                               ; preds = %38
  %60 = bitcast i8* %8 to i8**
  %61 = load i8*, i8** %60, align 8
  call void @_Z7sk_freePv(i8* %61) #14
  br label %62

62:                                               ; preds = %38, %59
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #14
  ret void

63:                                               ; preds = %20, %145
  %64 = phi %"class.std::__1::unique_ptr.190"* [ %10, %20 ], [ %146, %145 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #14
  store %"class.SkSL::Type"* inttoptr (i64 -6148914691236517206 to %"class.SkSL::Type"*), %"class.SkSL::Type"** %4, align 8
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.190"* %64 to %"class.SkSL::VarDeclaration"**
  %67 = load %"class.SkSL::VarDeclaration"*, %"class.SkSL::VarDeclaration"** %66, align 8
  %68 = getelementptr inbounds %"class.SkSL::VarDeclaration", %"class.SkSL::VarDeclaration"* %67, i64 0, i32 2
  %69 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %68, align 8
  store %"class.SkSL::Type"* %69, %"class.SkSL::Type"** %4, align 8
  %70 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %69, i64 0, i32 3
  %71 = load i32, i32* %70, align 8
  %72 = icmp eq i32 %71, 9
  br i1 %72, label %73, label %110

73:                                               ; preds = %63
  %74 = call { %"struct.std::__1::__hash_node_base.116"*, i8 } @_ZNSt3__112__hash_tableIPKN4SkSL4TypeENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.112"* %22, %"class.SkSL::Type"** nonnull dereferenceable(8) %4, %"class.SkSL::Type"** nonnull dereferenceable(8) %4) #14
  %75 = extractvalue { %"struct.std::__1::__hash_node_base.116"*, i8 } %74, 1
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %110, label %77

77:                                               ; preds = %73
  %78 = load %"class.std::__1::vector.137"*, %"class.std::__1::vector.137"** %23, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #14
  %79 = load i64, i64* %26, align 8
  %80 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 24) #14
  %81 = load i32, i32* %25, align 4
  %82 = getelementptr inbounds i8, i8* %80, i64 8
  %83 = bitcast i8* %82 to i32*
  store i32 %81, i32* %83, align 8
  %84 = getelementptr inbounds i8, i8* %80, i64 12
  %85 = bitcast i8* %84 to i32*
  store i32 8, i32* %85, align 4
  %86 = bitcast i8* %80 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL16StructDefinitionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %86, align 8
  %87 = getelementptr inbounds i8, i8* %80, i64 16
  %88 = bitcast i8* %87 to i64*
  store i64 %79, i64* %88, align 8
  %89 = ptrtoint i8* %80 to i64
  store i64 %89, i64* %27, align 8
  %90 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %78, i64 0, i32 0, i32 1
  %91 = load %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %90, align 8
  %92 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %78, i64 0, i32 0, i32 2, i32 0, i32 0
  %93 = load %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %92, align 8
  %94 = icmp ult %"class.std::__1::unique_ptr.139"* %91, %93
  br i1 %94, label %95, label %100

95:                                               ; preds = %77
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %28, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.139"* %91 to i64*
  store i64 %89, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %91, i64 1
  %98 = ptrtoint %"class.std::__1::unique_ptr.139"* %97 to i64
  %99 = bitcast %"class.std::__1::unique_ptr.139"** %90 to i64*
  store i64 %98, i64* %99, align 8
  br label %101

100:                                              ; preds = %77
  call void @_ZNSt3__16vectorINS_10unique_ptrIN4SkSL14ProgramElementENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.137"* %78, %"class.std::__1::unique_ptr.139"* nonnull dereferenceable(8) %5) #14
  br label %101

101:                                              ; preds = %95, %100
  %102 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %28, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %28, align 8
  %103 = icmp eq %"class.SkSL::ProgramElement"* %102, null
  br i1 %103, label %109, label %104

104:                                              ; preds = %101
  %105 = bitcast %"class.SkSL::ProgramElement"* %102 to void (%"class.SkSL::ProgramElement"*)***
  %106 = load void (%"class.SkSL::ProgramElement"*)**, void (%"class.SkSL::ProgramElement"*)*** %105, align 8
  %107 = getelementptr inbounds void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %106, i64 1
  %108 = load void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %107, align 8
  call void %108(%"class.SkSL::ProgramElement"* nonnull %102) #14
  br label %109

109:                                              ; preds = %104, %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #14
  br label %110

110:                                              ; preds = %109, %73, %63
  %111 = load %"class.std::__1::vector.137"*, %"class.std::__1::vector.137"** %23, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #14
  %112 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 24) #14
  %113 = bitcast %"class.std::__1::unique_ptr.190"* %64 to i64*
  %114 = load i64, i64* %113, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %65, align 8
  %115 = inttoptr i64 %114 to %"class.SkSL::Statement"*
  %116 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %115, i64 0, i32 0, i32 1
  %117 = load i32, i32* %116, align 8
  %118 = getelementptr inbounds i8, i8* %112, i64 8
  %119 = bitcast i8* %118 to i32*
  store i32 %117, i32* %119, align 8
  %120 = getelementptr inbounds i8, i8* %112, i64 12
  %121 = bitcast i8* %120 to i32*
  store i32 4, i32* %121, align 4
  %122 = bitcast i8* %112 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL20GlobalVarDeclarationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %122, align 8
  %123 = getelementptr inbounds i8, i8* %112, i64 16
  %124 = bitcast i8* %123 to i64*
  store i64 %114, i64* %124, align 8
  %125 = ptrtoint i8* %112 to i64
  store i64 %125, i64* %30, align 8
  %126 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %111, i64 0, i32 0, i32 1
  %127 = load %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %126, align 8
  %128 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %111, i64 0, i32 0, i32 2, i32 0, i32 0
  %129 = load %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %128, align 8
  %130 = icmp ult %"class.std::__1::unique_ptr.139"* %127, %129
  br i1 %130, label %131, label %136

131:                                              ; preds = %110
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %31, align 8
  %132 = bitcast %"class.std::__1::unique_ptr.139"* %127 to i64*
  store i64 %125, i64* %132, align 8
  %133 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %127, i64 1
  %134 = ptrtoint %"class.std::__1::unique_ptr.139"* %133 to i64
  %135 = bitcast %"class.std::__1::unique_ptr.139"** %126 to i64*
  store i64 %134, i64* %135, align 8
  br label %137

136:                                              ; preds = %110
  call void @_ZNSt3__16vectorINS_10unique_ptrIN4SkSL14ProgramElementENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.137"* %111, %"class.std::__1::unique_ptr.139"* nonnull dereferenceable(8) %6) #14
  br label %137

137:                                              ; preds = %131, %136
  %138 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %31, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %31, align 8
  %139 = icmp eq %"class.SkSL::ProgramElement"* %138, null
  br i1 %139, label %145, label %140

140:                                              ; preds = %137
  %141 = bitcast %"class.SkSL::ProgramElement"* %138 to void (%"class.SkSL::ProgramElement"*)***
  %142 = load void (%"class.SkSL::ProgramElement"*)**, void (%"class.SkSL::ProgramElement"*)*** %141, align 8
  %143 = getelementptr inbounds void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %142, i64 1
  %144 = load void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %143, align 8
  call void %144(%"class.SkSL::ProgramElement"* nonnull %138) #14
  br label %145

145:                                              ; preds = %140, %137
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #14
  %146 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %64, i64 1
  %147 = icmp eq %"class.std::__1::unique_ptr.190"* %146, %18
  br i1 %147, label %32, label %63
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL11IRGenerator11convertEnumERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"*, %"struct.SkSL::ASTNode"* nocapture readonly dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.165", align 8
  %4 = alloca %"class.std::__1::unique_ptr.173", align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.SkSL::ASTNode", align 16
  %7 = alloca %"struct.SkSL::Modifiers", align 8
  %8 = alloca %"class.std::__1::unique_ptr.139", align 8
  %9 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %10 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %9, align 8
  %11 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %10, i64 0, i32 4
  %12 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %11, align 8
  %13 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %12, i64 0, i32 1, i32 19
  %14 = load i8, i8* %13, align 1, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %26, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %12, i64 0, i32 0
  %18 = load i8, i8* %17, align 8
  %19 = add i8 %18, -4
  %20 = icmp ult i8 %19, 3
  br i1 %20, label %21, label %26

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %10, i64 0, i32 1
  %23 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %22, align 8
  %24 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 2
  %25 = load i32, i32* %24, align 4
  tail call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %23, i32 %25, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.70, i64 0, i64 0))
  br label %420

26:                                               ; preds = %2, %16
  %27 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #14
  store i64 0, i64* %5, align 8
  %28 = bitcast %"struct.SkSL::ASTNode"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %28) #14
  %29 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %6, i64 0, i32 1, i32 0, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 112, i1 false)
  %30 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 0
  %31 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 1, i32 0, i64 0
  %34 = bitcast %"struct.SkSL::ASTNode"* %1 to <2 x i64>*
  %35 = load <2 x i64>, <2 x i64>* %34, align 8
  %36 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 1, i32 0, i64 8
  %37 = bitcast i8* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %6, i64 0, i32 1, i32 1
  store i32 1, i32* %39, align 8
  %40 = bitcast %"struct.SkSL::ASTNode"* %6 to <2 x i64>*
  store <2 x i64> %35, <2 x i64>* %40, align 16
  %41 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %6, i64 0, i32 1, i32 0, i64 8
  %42 = bitcast i8* %41 to i64*
  store i64 %38, i64* %42, align 8
  %43 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %6, i64 0, i32 2
  store i32 %32, i32* %43, align 4
  %44 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %6, i64 0, i32 3
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 32, i32 -1, i32 -1, i32 -1>, <4 x i32>* %45, align 16
  %46 = call %"class.SkSL::Type"* @_ZN4SkSL11IRGenerator11convertTypeERKNS_7ASTNodeEb(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* nonnull dereferenceable(160) %6, i1 zeroext false)
  %47 = ptrtoint %"class.SkSL::Type"* %46 to i64
  %48 = bitcast %"struct.SkSL::Modifiers"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %48) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 80, i1 false)
  %49 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %7, i64 0, i32 0, i32 0
  store i32 0, i32* %49, align 8
  %50 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %7, i64 0, i32 0, i32 1
  %51 = bitcast i32* %50 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %51, i8 -1, i64 40, i1 false)
  %52 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %7, i64 0, i32 0, i32 11
  %53 = bitcast [4 x i8]* %52 to i32*
  store i32 -1431655766, i32* %53, align 4
  %54 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %7, i64 0, i32 0, i32 12, i32 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.30, i64 0, i64 0), i8** %54, align 8
  %55 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %7, i64 0, i32 0, i32 12, i32 1
  store i64 0, i64* %55, align 8
  %56 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %7, i64 0, i32 0, i32 13
  store i32 0, i32* %56, align 8
  %57 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %7, i64 0, i32 0, i32 14
  %58 = bitcast [4 x i8]* %57 to i32*
  store i32 -1431655766, i32* %58, align 4
  %59 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %7, i64 0, i32 1
  store i32 1, i32* %59, align 8
  %60 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 4
  %61 = bitcast %"class.std::__1::shared_ptr"* %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 4, i32 1
  %64 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %63, align 8
  %65 = icmp eq %"class.std::__1::__shared_weak_count"* %64, null
  br i1 %65, label %69, label %66

66:                                               ; preds = %26
  %67 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %64, i64 0, i32 0, i32 1
  %68 = atomicrmw add i64* %67, i64 1 monotonic
  br label %69

69:                                               ; preds = %26, %66
  %70 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 15
  %71 = tail call i8* @_Znwm(i64 128) #15
  %72 = bitcast i8* %71 to i32 (...)***
  %73 = getelementptr inbounds i8, i8* %71, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 16, i1 false) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %72, align 8
  %74 = getelementptr inbounds i8, i8* %71, i64 24
  %75 = load i64, i64* %61, align 8
  %76 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %63, align 8
  %77 = icmp eq %"class.std::__1::__shared_weak_count"* %76, null
  br i1 %77, label %78, label %83

78:                                               ; preds = %69
  %79 = load i8, i8* %70, align 1, !range !2
  %80 = bitcast i8* %74 to i64*
  store i64 %75, i64* %80, align 8
  %81 = getelementptr inbounds i8, i8* %71, i64 32
  %82 = bitcast i8* %81 to %"class.std::__1::__shared_weak_count"**
  store %"class.std::__1::__shared_weak_count"* null, %"class.std::__1::__shared_weak_count"** %82, align 8
  br label %91

83:                                               ; preds = %69
  %84 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %76, i64 0, i32 0, i32 1
  %85 = atomicrmw add i64* %84, i64 1 monotonic
  %86 = load i8, i8* %70, align 1, !range !2
  %87 = bitcast i8* %74 to i64*
  store i64 %75, i64* %87, align 8
  %88 = getelementptr inbounds i8, i8* %71, i64 32
  %89 = bitcast i8* %88 to %"class.std::__1::__shared_weak_count"**
  store %"class.std::__1::__shared_weak_count"* %76, %"class.std::__1::__shared_weak_count"** %89, align 8
  %90 = atomicrmw add i64* %84, i64 1 monotonic
  br label %91

91:                                               ; preds = %83, %78
  %92 = phi i8 [ %79, %78 ], [ %86, %83 ]
  %93 = inttoptr i64 %75 to %"class.SkSL::SymbolTable"*
  %94 = getelementptr inbounds i8, i8* %71, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 24, i1 false) #14
  %95 = getelementptr inbounds i8, i8* %71, i64 64
  store i8 %92, i8* %95, align 8
  %96 = getelementptr inbounds i8, i8* %71, i64 72
  %97 = getelementptr inbounds i8, i8* %71, i64 120
  %98 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %93, i64 0, i32 6
  %99 = bitcast %"class.SkSL::ErrorReporter"** %98 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 48, i1 false) #14
  %100 = load i64, i64* %99, align 8
  %101 = bitcast i8* %97 to i64*
  store i64 %100, i64* %101, align 8
  br i1 %77, label %112, label %102

102:                                              ; preds = %91
  %103 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %76, i64 0, i32 0, i32 1
  %104 = atomicrmw add i64* %103, i64 -1 acq_rel
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %106, label %112

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %76, i64 0, i32 0
  %108 = bitcast %"class.std::__1::__shared_weak_count"* %76 to void (%"class.std::__1::__shared_count"*)***
  %109 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %108, align 8
  %110 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %109, i64 2
  %111 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %110, align 8
  tail call void %111(%"class.std::__1::__shared_count"* %107) #14
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %76) #14
  br label %112

112:                                              ; preds = %91, %102, %106
  %113 = ptrtoint i8* %74 to i64
  %114 = ptrtoint i8* %71 to i64
  store i64 %113, i64* %61, align 8
  %115 = bitcast %"class.std::__1::__shared_weak_count"** %63 to i64*
  %116 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %63, align 8
  store i64 %114, i64* %115, align 8
  %117 = icmp eq %"class.std::__1::__shared_weak_count"* %116, null
  br i1 %117, label %128, label %118

118:                                              ; preds = %112
  %119 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %116, i64 0, i32 0, i32 1
  %120 = atomicrmw add i64* %119, i64 -1 acq_rel
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %128

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %116, i64 0, i32 0
  %124 = bitcast %"class.std::__1::__shared_weak_count"* %116 to void (%"class.std::__1::__shared_count"*)***
  %125 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %124, align 8
  %126 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %125, i64 2
  %127 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %126, align 8
  tail call void %127(%"class.std::__1::__shared_count"* %123) #14
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %116) #14
  br label %128

128:                                              ; preds = %122, %118, %112
  %129 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 4, i32 0
  %130 = load i32, i32* %129, align 4
  %131 = icmp sgt i32 %130, -1
  br i1 %131, label %132, label %320

132:                                              ; preds = %128
  %133 = load %"class.std::__1::vector.52"*, %"class.std::__1::vector.52"** %30, align 8
  %134 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %133, i64 0, i32 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %60, i64 0, i32 0
  %136 = bitcast %"class.std::__1::unique_ptr.165"* %3 to i8*
  %137 = bitcast %"class.std::__1::unique_ptr.165"* %3 to i64*
  %138 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %3, i64 0, i32 0, i32 0, i32 0
  %139 = bitcast %"class.std::__1::unique_ptr.173"* %4 to i8*
  %140 = bitcast %"class.std::__1::unique_ptr.173"* %4 to i64*
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.173"* %4, i64 0, i32 0, i32 0, i32 0
  %142 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %134, align 8
  br label %143

143:                                              ; preds = %132, %315
  %144 = phi %"struct.SkSL::ASTNode"* [ %142, %132 ], [ %316, %315 ]
  %145 = phi i32 [ %130, %132 ], [ %318, %315 ]
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %144, i64 %146, i32 4, i32 0
  %148 = load i32, i32* %147, align 4
  %149 = icmp sgt i32 %148, -1
  br i1 %149, label %150, label %203

150:                                              ; preds = %143
  %151 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %144, i64 %146, i32 0
  %152 = load %"class.std::__1::vector.52"*, %"class.std::__1::vector.52"** %151, align 8
  %153 = sext i32 %148 to i64
  %154 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %152, i64 0, i32 0, i32 0
  %155 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %154, align 8
  %156 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %155, i64 %153
  %157 = call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator17convertExpressionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %156)
  %158 = icmp eq %"class.SkSL::Expression"* %157, null
  br i1 %158, label %159, label %177

159:                                              ; preds = %150
  %160 = ptrtoint %"class.std::__1::__shared_weak_count"* %64 to i64
  br i1 %65, label %164, label %161

161:                                              ; preds = %159
  %162 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %64, i64 0, i32 0, i32 1
  %163 = atomicrmw add i64* %162, i64 1 monotonic
  br label %164

164:                                              ; preds = %161, %159
  store i64 %62, i64* %61, align 8
  %165 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %63, align 8
  store i64 %160, i64* %115, align 8
  %166 = icmp eq %"class.std::__1::__shared_weak_count"* %165, null
  br i1 %166, label %408, label %167

167:                                              ; preds = %164
  %168 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %165, i64 0, i32 0, i32 1
  %169 = atomicrmw add i64* %168, i64 -1 acq_rel
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %408

171:                                              ; preds = %167
  %172 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %165, i64 0, i32 0
  %173 = bitcast %"class.std::__1::__shared_weak_count"* %165 to void (%"class.std::__1::__shared_count"*)***
  %174 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %173, align 8
  %175 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %174, i64 2
  %176 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %175, align 8
  call void %176(%"class.std::__1::__shared_count"* %172) #14
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %165) #14
  br label %408

177:                                              ; preds = %150
  %178 = ptrtoint %"class.SkSL::Expression"* %157 to i64
  %179 = call zeroext i1 @_ZN4SkSL14ConstantFolder14GetConstantIntERKNS_10ExpressionEPl(%"class.SkSL::Expression"* nonnull dereferenceable(24) %157, i64* nonnull %5) #14
  br i1 %179, label %203, label %180

180:                                              ; preds = %177
  %181 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %9, align 8
  %182 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %181, i64 0, i32 1
  %183 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %182, align 8
  %184 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %157, i64 0, i32 0, i32 1
  %185 = load i32, i32* %184, align 8
  call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %183, i32 %185, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.71, i64 0, i64 0))
  %186 = ptrtoint %"class.std::__1::__shared_weak_count"* %64 to i64
  br i1 %65, label %190, label %187

187:                                              ; preds = %180
  %188 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %64, i64 0, i32 0, i32 1
  %189 = atomicrmw add i64* %188, i64 1 monotonic
  br label %190

190:                                              ; preds = %187, %180
  store i64 %62, i64* %61, align 8
  %191 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %63, align 8
  store i64 %186, i64* %115, align 8
  %192 = icmp eq %"class.std::__1::__shared_weak_count"* %191, null
  br i1 %192, label %310, label %193

193:                                              ; preds = %190
  %194 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %191, i64 0, i32 0, i32 1
  %195 = atomicrmw add i64* %194, i64 -1 acq_rel
  %196 = icmp eq i64 %195, 0
  br i1 %196, label %197, label %310

197:                                              ; preds = %193
  %198 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %191, i64 0, i32 0
  %199 = bitcast %"class.std::__1::__shared_weak_count"* %191 to void (%"class.std::__1::__shared_count"*)***
  %200 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %199, align 8
  %201 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %200, i64 2
  %202 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %201, align 8
  call void %202(%"class.std::__1::__shared_count"* %198) #14
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %191) #14
  br label %310

203:                                              ; preds = %177, %143
  %204 = phi i64 [ %178, %177 ], [ 0, %143 ]
  %205 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %9, align 8
  %206 = load i32, i32* %31, align 4
  %207 = load i64, i64* %5, align 8
  %208 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %205, i64 0, i32 0, i32 31, i32 0, i32 0, i32 0
  %209 = bitcast %"class.SkSL::Type"** %208 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #14
  %212 = bitcast i8* %211 to i32 (...)***
  %213 = getelementptr inbounds i8, i8* %211, i64 8
  %214 = bitcast i8* %213 to i32*
  store i32 %206, i32* %214, align 8
  %215 = getelementptr inbounds i8, i8* %211, i64 12
  %216 = bitcast i8* %215 to i32*
  store i32 43, i32* %216, align 4
  %217 = getelementptr inbounds i8, i8* %211, i64 16
  %218 = bitcast i8* %217 to i64*
  store i64 %210, i64* %218, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIlEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %212, align 8
  %219 = getelementptr inbounds i8, i8* %211, i64 24
  %220 = bitcast i8* %219 to i64*
  store i64 %207, i64* %220, align 8
  %221 = bitcast i8* %211 to %"class.SkSL::Expression"*
  %222 = icmp eq i64 %204, 0
  br i1 %222, label %229, label %223

223:                                              ; preds = %203
  %224 = inttoptr i64 %204 to %"class.SkSL::Expression"*
  %225 = inttoptr i64 %204 to void (%"class.SkSL::Expression"*)***
  %226 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %225, align 8
  %227 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %226, i64 1
  %228 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %227, align 8
  call void %228(%"class.SkSL::Expression"* nonnull %224) #14
  br label %229

229:                                              ; preds = %223, %203
  %230 = load i64, i64* %5, align 8
  %231 = add nsw i64 %230, 1
  store i64 %231, i64* %5, align 8
  %232 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %9, align 8
  %233 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %232, i64 0, i32 3
  %234 = load %"class.SkSL::ModifiersPool"*, %"class.SkSL::ModifiersPool"** %233, align 8
  %235 = getelementptr inbounds %"class.SkSL::ModifiersPool", %"class.SkSL::ModifiersPool"* %234, i64 0, i32 0, i32 0
  %236 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %235, %"struct.SkSL::Modifiers"* nonnull dereferenceable(80) %7, %"struct.SkSL::Modifiers"* nonnull dereferenceable(80) %7) #14
  %237 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %236, 0
  %238 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %237, i64 2
  %239 = ptrtoint %"struct.std::__1::__hash_node_base"* %238 to i64
  %240 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %144, i64 %146, i32 1, i32 0, i64 0
  %241 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 64) #14
  %242 = bitcast i8* %241 to %"class.SkSL::Variable"*
  %243 = load i32, i32* %31, align 4
  %244 = bitcast i8* %240 to <2 x i64>*
  %245 = load <2 x i64>, <2 x i64>* %244, align 8
  %246 = load i8, i8* %70, align 1, !range !2
  %247 = bitcast i8* %241 to i32 (...)***
  %248 = getelementptr inbounds i8, i8* %241, i64 8
  %249 = bitcast i8* %248 to i32*
  store i32 %243, i32* %249, align 8
  %250 = getelementptr inbounds i8, i8* %241, i64 12
  %251 = bitcast i8* %250 to i32*
  store i32 15, i32* %251, align 4
  %252 = getelementptr inbounds i8, i8* %241, i64 16
  %253 = bitcast i8* %252 to <2 x i64>*
  store <2 x i64> %245, <2 x i64>* %253, align 8
  %254 = getelementptr inbounds i8, i8* %241, i64 32
  %255 = bitcast i8* %254 to i64*
  store i64 %47, i64* %255, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL8VariableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %247, align 8
  %256 = getelementptr inbounds i8, i8* %241, i64 40
  %257 = bitcast i8* %256 to %"class.SkSL::VarDeclaration"**
  store %"class.SkSL::VarDeclaration"* null, %"class.SkSL::VarDeclaration"** %257, align 8
  %258 = getelementptr inbounds i8, i8* %241, i64 48
  %259 = bitcast i8* %258 to i64*
  store i64 %239, i64* %259, align 8
  %260 = getelementptr inbounds i8, i8* %241, i64 56
  store i8 0, i8* %260, align 8
  %261 = getelementptr inbounds i8, i8* %241, i64 57
  store i8 %246, i8* %261, align 1
  %262 = ptrtoint i8* %241 to i64
  %263 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %9, align 8
  %264 = bitcast i8* %241 to %"class.SkSL::Symbol"*
  %265 = call %"class.SkSL::Statement"* @_ZN4SkSL14VarDeclaration4MakeERKNS_7ContextEPNS_8VariableEPKNS_4TypeEiNSt3__110unique_ptrINS_10ExpressionENS9_14default_deleteISB_EEEE(%"class.SkSL::Context"* dereferenceable(744) %263, %"class.SkSL::Variable"* %242, %"class.SkSL::Type"* %46, i32 0, %"class.SkSL::Expression"* %221) #14
  %266 = ptrtoint %"class.SkSL::Statement"* %265 to i64
  %267 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %135, align 8
  call void @_ZN4SkSL11SymbolTable19addWithoutOwnershipEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %267, %"class.SkSL::Symbol"* %264) #14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %136) #14
  store i64 %262, i64* %137, align 8
  %268 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %267, i64 0, i32 1, i32 0, i32 1
  %269 = load %"class.std::__1::unique_ptr.165"*, %"class.std::__1::unique_ptr.165"** %268, align 8
  %270 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %267, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %271 = load %"class.std::__1::unique_ptr.165"*, %"class.std::__1::unique_ptr.165"** %270, align 8
  %272 = icmp ult %"class.std::__1::unique_ptr.165"* %269, %271
  br i1 %272, label %273, label %278

273:                                              ; preds = %229
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %138, align 8
  %274 = bitcast %"class.std::__1::unique_ptr.165"* %269 to i64*
  store i64 %262, i64* %274, align 8
  %275 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %269, i64 1
  %276 = ptrtoint %"class.std::__1::unique_ptr.165"* %275 to i64
  %277 = bitcast %"class.std::__1::unique_ptr.165"** %268 to i64*
  store i64 %276, i64* %277, align 8
  br label %280

278:                                              ; preds = %229
  %279 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %267, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.163"* %279, %"class.std::__1::unique_ptr.165"* nonnull dereferenceable(8) %3) #14
  br label %280

280:                                              ; preds = %278, %273
  %281 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %138, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %138, align 8
  %282 = icmp eq %"class.SkSL::Symbol"* %281, null
  br i1 %282, label %288, label %283

283:                                              ; preds = %280
  %284 = bitcast %"class.SkSL::Symbol"* %281 to void (%"class.SkSL::Symbol"*)***
  %285 = load void (%"class.SkSL::Symbol"*)**, void (%"class.SkSL::Symbol"*)*** %284, align 8
  %286 = getelementptr inbounds void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %285, i64 1
  %287 = load void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %286, align 8
  call void %287(%"class.SkSL::Symbol"* nonnull %281) #14
  br label %288

288:                                              ; preds = %280, %283
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %136) #14
  %289 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %135, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %139) #14
  store i64 %266, i64* %140, align 8
  %290 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %289, i64 0, i32 3, i32 0, i32 1
  %291 = load %"class.std::__1::unique_ptr.173"*, %"class.std::__1::unique_ptr.173"** %290, align 8
  %292 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %289, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %293 = load %"class.std::__1::unique_ptr.173"*, %"class.std::__1::unique_ptr.173"** %292, align 8
  %294 = icmp ult %"class.std::__1::unique_ptr.173"* %291, %293
  br i1 %294, label %295, label %300

295:                                              ; preds = %288
  store %"class.SkSL::IRNode"* null, %"class.SkSL::IRNode"** %141, align 8
  %296 = bitcast %"class.std::__1::unique_ptr.173"* %291 to i64*
  store i64 %266, i64* %296, align 8
  %297 = getelementptr inbounds %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.173"* %291, i64 1
  %298 = ptrtoint %"class.std::__1::unique_ptr.173"* %297 to i64
  %299 = bitcast %"class.std::__1::unique_ptr.173"** %290 to i64*
  store i64 %298, i64* %299, align 8
  br label %302

300:                                              ; preds = %288
  %301 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %289, i64 0, i32 3
  call void @_ZNSt3__16vectorINS_10unique_ptrIN4SkSL6IRNodeENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.171"* %301, %"class.std::__1::unique_ptr.173"* nonnull dereferenceable(8) %4) #14
  br label %302

302:                                              ; preds = %300, %295
  %303 = load %"class.SkSL::IRNode"*, %"class.SkSL::IRNode"** %141, align 8
  store %"class.SkSL::IRNode"* null, %"class.SkSL::IRNode"** %141, align 8
  %304 = icmp eq %"class.SkSL::IRNode"* %303, null
  br i1 %304, label %315, label %305

305:                                              ; preds = %302
  %306 = bitcast %"class.SkSL::IRNode"* %303 to void (%"class.SkSL::IRNode"*)***
  %307 = load void (%"class.SkSL::IRNode"*)**, void (%"class.SkSL::IRNode"*)*** %306, align 8
  %308 = getelementptr inbounds void (%"class.SkSL::IRNode"*)*, void (%"class.SkSL::IRNode"*)** %307, i64 1
  %309 = load void (%"class.SkSL::IRNode"*)*, void (%"class.SkSL::IRNode"*)** %308, align 8
  call void %309(%"class.SkSL::IRNode"* nonnull %303) #14
  br label %315

310:                                              ; preds = %190, %193, %197
  %311 = bitcast %"class.SkSL::Expression"* %157 to void (%"class.SkSL::Expression"*)***
  %312 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %311, align 8
  %313 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %312, i64 1
  %314 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %313, align 8
  call void %314(%"class.SkSL::Expression"* nonnull %157) #14
  br label %408

315:                                              ; preds = %302, %305
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %139) #14
  %316 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %134, align 8
  %317 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %316, i64 %146, i32 6, i32 0
  %318 = load i32, i32* %317, align 4
  %319 = icmp sgt i32 %318, -1
  br i1 %319, label %143, label %320

320:                                              ; preds = %315, %128
  %321 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %60, i64 0, i32 0
  %322 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %321, align 8
  %323 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %322, i64 0, i32 0, i32 1
  %324 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %323, align 8
  %325 = bitcast %"class.SkSL::SymbolTable"* %322 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %325, align 8
  %326 = icmp eq %"class.std::__1::__shared_weak_count"* %324, null
  br i1 %326, label %337, label %327

327:                                              ; preds = %320
  %328 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %324, i64 0, i32 0, i32 1
  %329 = atomicrmw add i64* %328, i64 -1 acq_rel
  %330 = icmp eq i64 %329, 0
  br i1 %330, label %331, label %337

331:                                              ; preds = %327
  %332 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %324, i64 0, i32 0
  %333 = bitcast %"class.std::__1::__shared_weak_count"* %324 to void (%"class.std::__1::__shared_count"*)***
  %334 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %333, align 8
  %335 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %334, i64 2
  %336 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %335, align 8
  call void %336(%"class.std::__1::__shared_count"* %332) #14
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %324) #14
  br label %337

337:                                              ; preds = %331, %327, %320
  %338 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 10
  %339 = load %"class.std::__1::vector.137"*, %"class.std::__1::vector.137"** %338, align 8
  %340 = bitcast %"class.std::__1::unique_ptr.139"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %340) #14
  %341 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 56) #14
  %342 = load i32, i32* %31, align 4
  %343 = bitcast i8* %33 to <2 x i64>*
  %344 = load <2 x i64>, <2 x i64>* %343, align 8
  %345 = load i64, i64* %61, align 8
  %346 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %63, align 8
  %347 = icmp eq %"class.std::__1::__shared_weak_count"* %346, null
  br i1 %347, label %351, label %348

348:                                              ; preds = %337
  %349 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %346, i64 0, i32 0, i32 1
  %350 = atomicrmw add i64* %349, i64 1 monotonic
  br label %351

351:                                              ; preds = %337, %348
  %352 = load i8, i8* %70, align 1, !range !2
  %353 = ptrtoint %"class.std::__1::__shared_weak_count"* %346 to i64
  %354 = getelementptr inbounds i8, i8* %341, i64 8
  %355 = bitcast i8* %354 to i32*
  store i32 %342, i32* %355, align 8
  %356 = getelementptr inbounds i8, i8* %341, i64 12
  %357 = bitcast i8* %356 to i32*
  store i32 0, i32* %357, align 4
  %358 = bitcast i8* %341 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL4EnumE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %358, align 8
  %359 = getelementptr inbounds i8, i8* %341, i64 16
  %360 = bitcast i8* %359 to <2 x i64>*
  store <2 x i64> %344, <2 x i64>* %360, align 8
  %361 = getelementptr inbounds i8, i8* %341, i64 32
  %362 = bitcast i8* %361 to i64*
  store i64 %345, i64* %362, align 8
  %363 = getelementptr inbounds i8, i8* %341, i64 40
  %364 = bitcast i8* %363 to i64*
  store i64 %353, i64* %364, align 8
  %365 = getelementptr inbounds i8, i8* %341, i64 48
  store i8 %352, i8* %365, align 8
  %366 = getelementptr inbounds i8, i8* %341, i64 49
  store i8 %352, i8* %366, align 1
  %367 = ptrtoint i8* %341 to i64
  %368 = bitcast %"class.std::__1::unique_ptr.139"* %8 to i64*
  store i64 %367, i64* %368, align 8
  %369 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %339, i64 0, i32 0, i32 1
  %370 = load %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %369, align 8
  %371 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %339, i64 0, i32 0, i32 2, i32 0, i32 0
  %372 = load %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %371, align 8
  %373 = icmp ult %"class.std::__1::unique_ptr.139"* %370, %372
  br i1 %373, label %374, label %380

374:                                              ; preds = %351
  %375 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %375, align 8
  %376 = bitcast %"class.std::__1::unique_ptr.139"* %370 to i64*
  store i64 %367, i64* %376, align 8
  %377 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %370, i64 1
  %378 = ptrtoint %"class.std::__1::unique_ptr.139"* %377 to i64
  %379 = bitcast %"class.std::__1::unique_ptr.139"** %369 to i64*
  store i64 %378, i64* %379, align 8
  br label %381

380:                                              ; preds = %351
  call void @_ZNSt3__16vectorINS_10unique_ptrIN4SkSL14ProgramElementENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.137"* %339, %"class.std::__1::unique_ptr.139"* nonnull dereferenceable(8) %8) #14
  br label %381

381:                                              ; preds = %374, %380
  %382 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %8, i64 0, i32 0, i32 0, i32 0
  %383 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %382, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %382, align 8
  %384 = icmp eq %"class.SkSL::ProgramElement"* %383, null
  br i1 %384, label %390, label %385

385:                                              ; preds = %381
  %386 = bitcast %"class.SkSL::ProgramElement"* %383 to void (%"class.SkSL::ProgramElement"*)***
  %387 = load void (%"class.SkSL::ProgramElement"*)**, void (%"class.SkSL::ProgramElement"*)*** %386, align 8
  %388 = getelementptr inbounds void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %387, i64 1
  %389 = load void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %388, align 8
  call void %389(%"class.SkSL::ProgramElement"* nonnull %383) #14
  br label %390

390:                                              ; preds = %385, %381
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %340) #14
  %391 = ptrtoint %"class.std::__1::__shared_weak_count"* %64 to i64
  br i1 %65, label %395, label %392

392:                                              ; preds = %390
  %393 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %64, i64 0, i32 0, i32 1
  %394 = atomicrmw add i64* %393, i64 1 monotonic
  br label %395

395:                                              ; preds = %392, %390
  store i64 %62, i64* %61, align 8
  %396 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %63, align 8
  store i64 %391, i64* %115, align 8
  %397 = icmp eq %"class.std::__1::__shared_weak_count"* %396, null
  br i1 %397, label %408, label %398

398:                                              ; preds = %395
  %399 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %396, i64 0, i32 0, i32 1
  %400 = atomicrmw add i64* %399, i64 -1 acq_rel
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %402, label %408

402:                                              ; preds = %398
  %403 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %396, i64 0, i32 0
  %404 = bitcast %"class.std::__1::__shared_weak_count"* %396 to void (%"class.std::__1::__shared_count"*)***
  %405 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %404, align 8
  %406 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %405, i64 2
  %407 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %406, align 8
  call void %407(%"class.std::__1::__shared_count"* %403) #14
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %396) #14
  br label %408

408:                                              ; preds = %164, %167, %171, %402, %398, %395, %310
  br i1 %65, label %419, label %409

409:                                              ; preds = %408
  %410 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %64, i64 0, i32 0, i32 1
  %411 = atomicrmw add i64* %410, i64 -1 acq_rel
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %419

413:                                              ; preds = %409
  %414 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %64, i64 0, i32 0
  %415 = bitcast %"class.std::__1::__shared_weak_count"* %64 to void (%"class.std::__1::__shared_count"*)***
  %416 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %415, align 8
  %417 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %416, i64 2
  %418 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %417, align 8
  call void %418(%"class.std::__1::__shared_count"* %414) #14
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %64) #14
  br label %419

419:                                              ; preds = %408, %409, %413
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %48) #14
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %28) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #14
  br label %420

420:                                              ; preds = %419, %21
  ret void
}

declare zeroext i1 @_ZN4SkSL14ConstantFolder14GetConstantIntERKNS_10ExpressionEPl(%"class.SkSL::Expression"* dereferenceable(24), i64*) local_unnamed_addr #2

declare %"class.SkSL::Statement"* @_ZN4SkSL14VarDeclaration4MakeERKNS_7ContextEPNS_8VariableEPKNS_4TypeEiNSt3__110unique_ptrINS_10ExpressionENS9_14default_deleteISB_EEEE(%"class.SkSL::Context"* dereferenceable(744), %"class.SkSL::Variable"*, %"class.SkSL::Type"*, i32, %"class.SkSL::Expression"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4SkSL11IRGenerator25typeContainsPrivateFieldsERKNS_4TypeE(%"class.SkSL::IRGenerator"* nocapture readnone, %"class.SkSL::Type"* nocapture readonly dereferenceable(184)) local_unnamed_addr #0 align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"struct.SkSL::StringFragment"*
  %5 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 0, i32 1, i32 0
  %7 = bitcast i8** %6 to <2 x i64>*
  %8 = load <2 x i64>, <2 x i64>* %7, align 8
  store <2 x i64> %8, <2 x i64>* %3, align 16
  %9 = call zeroext i1 @_ZNK4SkSL14StringFragment10startsWithEPKc(%"struct.SkSL::StringFragment"* nonnull %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.157, i64 0, i64 0)) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #14
  br i1 %9, label %28, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 9
  br i1 %13, label %14, label %28

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 10, i32 0, i32 0
  %16 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %15, align 8
  %17 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 10, i32 0, i32 1
  %18 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %17, align 8
  %19 = icmp eq %"struct.SkSL::Type::Field"* %16, %18
  br i1 %19, label %28, label %22

20:                                               ; preds = %22
  %21 = icmp eq %"struct.SkSL::Type::Field"* %27, %18
  br i1 %21, label %28, label %22

22:                                               ; preds = %14, %20
  %23 = phi %"struct.SkSL::Type::Field"* [ %27, %20 ], [ %16, %14 ]
  %24 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %23, i64 0, i32 2
  %25 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %24, align 8
  %26 = call zeroext i1 @_ZN4SkSL11IRGenerator25typeContainsPrivateFieldsERKNS_4TypeE(%"class.SkSL::IRGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %25)
  %27 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %23, i64 1
  br i1 %26, label %28, label %20

28:                                               ; preds = %20, %22, %14, %10, %2
  %29 = phi i1 [ true, %2 ], [ false, %10 ], [ false, %14 ], [ false, %20 ], [ true, %22 ]
  ret i1 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator23convertBinaryExpressionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"*, %"struct.SkSL::ASTNode"* nocapture readonly dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 0
  %4 = load %"class.std::__1::vector.52"*, %"class.std::__1::vector.52"** %3, align 8
  %5 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 4, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %4, i64 0, i32 0, i32 0
  %9 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %8, align 8
  %10 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %9, i64 %7, i32 6, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %9, i64 %7
  %13 = tail call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator17convertExpressionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %12)
  %14 = icmp eq %"class.SkSL::Expression"* %13, null
  br i1 %14, label %33, label %15

15:                                               ; preds = %2
  %16 = sext i32 %11 to i64
  %17 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %8, align 8
  %18 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %17, i64 %16
  %19 = tail call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator17convertExpressionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %18)
  %20 = icmp eq %"class.SkSL::Expression"* %19, null
  br i1 %20, label %28, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %23 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %22, align 8
  %24 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 1, i32 0, i64 0
  %25 = bitcast i8* %24 to i32*
  %26 = load i32, i32* %25, align 8
  %27 = tail call %"class.SkSL::Expression"* @_ZN4SkSL16BinaryExpression7ConvertERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEENS_8OperatorES9_(%"class.SkSL::Context"* dereferenceable(744) %23, %"class.SkSL::Expression"* nonnull %13, i32 %26, %"class.SkSL::Expression"* nonnull %19) #14
  br label %33

28:                                               ; preds = %15
  %29 = bitcast %"class.SkSL::Expression"* %13 to void (%"class.SkSL::Expression"*)***
  %30 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %30, i64 1
  %32 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %31, align 8
  tail call void %32(%"class.SkSL::Expression"* nonnull %13) #14
  br label %33

33:                                               ; preds = %2, %21, %28
  %34 = phi %"class.SkSL::Expression"* [ %27, %21 ], [ null, %28 ], [ null, %2 ]
  ret %"class.SkSL::Expression"* %34
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator21convertCallExpressionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"*, %"struct.SkSL::ASTNode"* nocapture readonly dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkSTArray.215, align 8
  %4 = alloca %class.SkSTArray.215, align 8
  %5 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 0
  %6 = load %"class.std::__1::vector.52"*, %"class.std::__1::vector.52"** %5, align 8
  %7 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 4, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %6, i64 0, i32 0, i32 0
  %11 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %10, align 8
  %12 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %11, i64 %9, i32 6, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %11, i64 %9
  %15 = tail call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator17convertExpressionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %14)
  %16 = ptrtoint %"class.SkSL::Expression"* %15 to i64
  %17 = icmp eq %"class.SkSL::Expression"* %15, null
  br i1 %17, label %124, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %class.SkSTArray.215, %class.SkSTArray.215* %3, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #14
  %20 = getelementptr inbounds %class.SkSTArray.215, %class.SkSTArray.215* %3, i64 0, i32 0, i32 0, i64 16
  %21 = getelementptr inbounds %class.SkSTArray.215, %class.SkSTArray.215* %3, i64 0, i32 0, i32 0, i64 24
  %22 = bitcast i8* %21 to i64*
  %23 = bitcast i8* %20 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 16, i1 false)
  store i8* %19, i8** %23, align 8
  store i64 17179869184, i64* %22, align 8
  %24 = icmp sgt i32 %13, -1
  %25 = bitcast i8* %20 to %class.SkTArray.217*
  br i1 %24, label %26, label %52

26:                                               ; preds = %18
  %27 = bitcast i8* %20 to %"class.std::__1::unique_ptr.157"**
  %28 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %10, align 8
  br label %29

29:                                               ; preds = %26, %36
  %30 = phi %"struct.SkSL::ASTNode"* [ %28, %26 ], [ %48, %36 ]
  %31 = phi i32 [ %13, %26 ], [ %50, %36 ]
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %30, i64 %32
  %34 = call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator17convertExpressionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %33)
  %35 = icmp eq %"class.SkSL::Expression"* %34, null
  br i1 %35, label %92, label %36

36:                                               ; preds = %29
  %37 = ptrtoint %"class.SkSL::Expression"* %34 to i64
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.217* %25, i32 1, i32 1) #14
  %38 = load %"class.std::__1::unique_ptr.157"*, %"class.std::__1::unique_ptr.157"** %27, align 8
  %39 = load i64, i64* %22, align 8
  %40 = lshr i64 %39, 1
  %41 = and i64 %40, 2147483647
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157"* %38, i64 %41
  %43 = add i64 %39, 2
  %44 = and i64 %43, 4294967294
  %45 = and i64 %39, -4294967295
  %46 = or i64 %44, %45
  store i64 %46, i64* %22, align 8
  %47 = bitcast %"class.std::__1::unique_ptr.157"* %42 to i64*
  store i64 %37, i64* %47, align 8
  %48 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %10, align 8
  %49 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %48, i64 %32, i32 6, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp sgt i32 %50, -1
  br i1 %51, label %29, label %52

52:                                               ; preds = %36, %18
  %53 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = getelementptr inbounds %class.SkSTArray.215, %class.SkSTArray.215* %4, i64 0, i32 0, i32 0, i64 16
  %56 = getelementptr inbounds %class.SkSTArray.215, %class.SkSTArray.215* %4, i64 0, i32 0, i32 0, i64 0
  %57 = getelementptr inbounds %class.SkSTArray.215, %class.SkSTArray.215* %4, i64 0, i32 0, i32 0, i64 24
  %58 = bitcast i8* %57 to i64*
  %59 = bitcast i8* %55 to i8**
  store i8* %56, i8** %59, align 8
  store i64 17179869184, i64* %58, align 8
  %60 = bitcast i8* %55 to %class.SkTArray.217*
  %61 = call dereferenceable(16) %class.SkTArray.217* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray.217* %60, %class.SkTArray.217* dereferenceable(16) %25) #14
  %62 = call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator4callEiNSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEE9SkSTArrayILi2ES6_Lb0EE(%"class.SkSL::IRGenerator"* %0, i32 %54, %"class.SkSL::Expression"* nonnull %15, %class.SkSTArray.215* nonnull %4)
  %63 = ptrtoint %"class.SkSL::Expression"* %62 to i64
  %64 = load i64, i64* %58, align 8
  %65 = and i64 %64, 4294967294
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %52
  %68 = bitcast i8* %55 to %"class.std::__1::unique_ptr.157"**
  br label %73

69:                                               ; preds = %84, %52
  %70 = phi i64 [ %64, %52 ], [ %86, %84 ]
  %71 = and i64 %70, 1
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %92, label %90

73:                                               ; preds = %84, %67
  %74 = phi i64 [ 0, %67 ], [ %85, %84 ]
  %75 = load %"class.std::__1::unique_ptr.157"*, %"class.std::__1::unique_ptr.157"** %68, align 8
  %76 = getelementptr inbounds %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157"* %75, i64 %74, i32 0, i32 0, i32 0
  %77 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %76, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %76, align 8
  %78 = icmp eq %"class.SkSL::Expression"* %77, null
  br i1 %78, label %84, label %79

79:                                               ; preds = %73
  %80 = bitcast %"class.SkSL::Expression"* %77 to void (%"class.SkSL::Expression"*)***
  %81 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %81, i64 1
  %83 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %82, align 8
  call void %83(%"class.SkSL::Expression"* nonnull %77) #14
  br label %84

84:                                               ; preds = %79, %73
  %85 = add nuw nsw i64 %74, 1
  %86 = load i64, i64* %58, align 8
  %87 = lshr i64 %86, 1
  %88 = and i64 %87, 2147483647
  %89 = icmp ult i64 %85, %88
  br i1 %89, label %73, label %69

90:                                               ; preds = %69
  %91 = load i8*, i8** %59, align 8
  call void @_Z7sk_freePv(i8* %91) #14
  br label %92

92:                                               ; preds = %29, %90, %69
  %93 = phi i64 [ 0, %69 ], [ 0, %90 ], [ %16, %29 ]
  %94 = phi i64 [ %63, %69 ], [ %63, %90 ], [ 0, %29 ]
  %95 = load i64, i64* %22, align 8
  %96 = and i64 %95, 4294967294
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %100, label %98

98:                                               ; preds = %92
  %99 = bitcast i8* %20 to %"class.std::__1::unique_ptr.157"**
  br label %104

100:                                              ; preds = %115, %92
  %101 = phi i64 [ %95, %92 ], [ %117, %115 ]
  %102 = and i64 %101, 1
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %123, label %121

104:                                              ; preds = %115, %98
  %105 = phi i64 [ 0, %98 ], [ %116, %115 ]
  %106 = load %"class.std::__1::unique_ptr.157"*, %"class.std::__1::unique_ptr.157"** %99, align 8
  %107 = getelementptr inbounds %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157"* %106, i64 %105, i32 0, i32 0, i32 0
  %108 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %107, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %107, align 8
  %109 = icmp eq %"class.SkSL::Expression"* %108, null
  br i1 %109, label %115, label %110

110:                                              ; preds = %104
  %111 = bitcast %"class.SkSL::Expression"* %108 to void (%"class.SkSL::Expression"*)***
  %112 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %111, align 8
  %113 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %112, i64 1
  %114 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %113, align 8
  call void %114(%"class.SkSL::Expression"* nonnull %108) #14
  br label %115

115:                                              ; preds = %110, %104
  %116 = add nuw nsw i64 %105, 1
  %117 = load i64, i64* %22, align 8
  %118 = lshr i64 %117, 1
  %119 = and i64 %118, 2147483647
  %120 = icmp ult i64 %116, %119
  br i1 %120, label %104, label %100

121:                                              ; preds = %100
  %122 = load i8*, i8** %23, align 8
  call void @_Z7sk_freePv(i8* %122) #14
  br label %123

123:                                              ; preds = %100, %121
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #14
  br label %124

124:                                              ; preds = %2, %123
  %125 = phi i64 [ %93, %123 ], [ %16, %2 ]
  %126 = phi i64 [ %94, %123 ], [ 0, %2 ]
  %127 = icmp eq i64 %125, 0
  br i1 %127, label %134, label %128

128:                                              ; preds = %124
  %129 = inttoptr i64 %125 to %"class.SkSL::Expression"*
  %130 = inttoptr i64 %125 to void (%"class.SkSL::Expression"*)***
  %131 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %130, align 8
  %132 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %131, i64 1
  %133 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %132, align 8
  call void %133(%"class.SkSL::Expression"* nonnull %129) #14
  br label %134

134:                                              ; preds = %124, %128
  %135 = inttoptr i64 %126 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %135
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator22convertFieldExpressionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"*, %"struct.SkSL::ASTNode"* nocapture readonly dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 0
  %7 = load %"class.std::__1::vector.52"*, %"class.std::__1::vector.52"** %6, align 8
  %8 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 4, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %7, i64 0, i32 0, i32 0
  %12 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %11, align 8
  %13 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %12, i64 %10
  %14 = tail call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator17convertExpressionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %13)
  %15 = icmp eq %"class.SkSL::Expression"* %14, null
  br i1 %15, label %140, label %16

16:                                               ; preds = %2
  %17 = bitcast <2 x i64>* %3 to %"struct.SkSL::StringFragment"*
  %18 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 1, i32 0, i64 0
  %19 = bitcast %"class.SkSL::Expression"* %14 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %20 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %19, align 8
  %21 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %20, i64 3
  %22 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %21, align 8
  %23 = tail call dereferenceable(184) %"class.SkSL::Type"* %22(%"class.SkSL::Expression"* nonnull %14) #14
  %24 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %25 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %24, align 8
  %26 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %25, i64 0, i32 0, i32 85, i32 0, i32 0, i32 0
  %27 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %26, align 8
  %28 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #14
  %29 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %23, i64 0, i32 0, i32 1, i32 0
  %30 = bitcast i8** %29 to <2 x i64>*
  %31 = load <2 x i64>, <2 x i64>* %30, align 8
  store <2 x i64> %31, <2 x i64>* %3, align 16
  %32 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %27, i64 0, i32 0, i32 1, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %27, i64 0, i32 0, i32 1, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %17, i8* %33, i64 %35) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #14
  br i1 %36, label %37, label %81

37:                                               ; preds = %16
  %38 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %24, align 8
  %39 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 2
  %40 = load i32, i32* %39, align 4
  %41 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #14
  %42 = bitcast i8* %18 to i8**
  %43 = load i8*, i8** %42, align 8
  %44 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 1, i32 0, i64 8
  %45 = bitcast i8* %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = icmp ugt i64 %46, -17
  br i1 %47, label %48, label %50

48:                                               ; preds = %37
  %49 = bitcast %"class.SkSL::String"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %49) #16
  unreachable

50:                                               ; preds = %37
  %51 = icmp ult i64 %46, 23
  br i1 %51, label %61, label %52

52:                                               ; preds = %50
  %53 = add nuw i64 %46, 16
  %54 = and i64 %53, -16
  %55 = call i8* @_Znwm(i64 %54) #15
  %56 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %55, i8** %56, align 8
  %57 = or i64 %54, -9223372036854775808
  %58 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %57, i64* %58, align 8
  %59 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %46, i64* %59, align 8
  %60 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %66

61:                                               ; preds = %50
  %62 = trunc i64 %46 to i8
  %63 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  store i8 %62, i8* %64, align 1
  %65 = icmp eq i64 %46, 0
  br i1 %65, label %69, label %66

66:                                               ; preds = %61, %52
  %67 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %63, %61 ], [ %60, %52 ]
  %68 = phi i8* [ %41, %61 ], [ %55, %52 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %68, i8* align 1 %43, i64 %46, i1 false) #14
  br label %69

69:                                               ; preds = %61, %66
  %70 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %63, %61 ], [ %67, %66 ]
  %71 = phi i8* [ %41, %61 ], [ %68, %66 ]
  %72 = getelementptr inbounds i8, i8* %71, i64 %46
  store i8 0, i8* %72, align 1
  %73 = call %"class.SkSL::Expression"* @_ZN4SkSL7Setting7ConvertERKNS_7ContextEiRKNS_6StringE(%"class.SkSL::Context"* dereferenceable(744) %38, i32 %40, %"class.SkSL::String"* nonnull dereferenceable(24) %4) #14
  %74 = ptrtoint %"class.SkSL::Expression"* %73 to i64
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %78, label %135

78:                                               ; preds = %69
  %79 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load i8*, i8** %79, align 8
  call void @_ZdlPv(i8* %80) #15
  br label %135

81:                                               ; preds = %16
  %82 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %23, i64 0, i32 3
  %83 = load i32, i32* %82, align 8
  %84 = icmp eq i32 %83, 9
  br i1 %84, label %85, label %94

85:                                               ; preds = %81
  %86 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %24, align 8
  %87 = bitcast i8* %18 to i8**
  %88 = load i8*, i8** %87, align 8
  %89 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 1, i32 0, i64 8
  %90 = bitcast i8* %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = call %"class.SkSL::Expression"* @_ZN4SkSL11FieldAccess7ConvertERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEENS_14StringFragmentE(%"class.SkSL::Context"* dereferenceable(744) %86, %"class.SkSL::Expression"* nonnull %14, i8* %88, i64 %91) #14
  %93 = ptrtoint %"class.SkSL::Expression"* %92 to i64
  br label %140

94:                                               ; preds = %81
  %95 = bitcast i8* %18 to i8**
  %96 = load i8*, i8** %95, align 8
  %97 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 1, i32 0, i64 8
  %98 = bitcast i8* %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = icmp ugt i64 %99, -17
  br i1 %100, label %101, label %103

101:                                              ; preds = %94
  %102 = bitcast %"class.SkSL::String"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %102) #16
  unreachable

103:                                              ; preds = %94
  %104 = icmp ult i64 %99, 23
  br i1 %104, label %114, label %105

105:                                              ; preds = %103
  %106 = add nuw i64 %99, 16
  %107 = and i64 %106, -16
  %108 = call i8* @_Znwm(i64 %107) #15
  %109 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %108, i8** %109, align 8
  %110 = or i64 %107, -9223372036854775808
  %111 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %110, i64* %111, align 8
  %112 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %99, i64* %112, align 8
  %113 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %120

114:                                              ; preds = %103
  %115 = trunc i64 %99 to i8
  %116 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %116, i64 0, i32 1, i32 0
  store i8 %115, i8* %117, align 1
  %118 = bitcast %"class.SkSL::String"* %5 to i8*
  %119 = icmp eq i64 %99, 0
  br i1 %119, label %123, label %120

120:                                              ; preds = %114, %105
  %121 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %116, %114 ], [ %113, %105 ]
  %122 = phi i8* [ %118, %114 ], [ %108, %105 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %122, i8* align 1 %96, i64 %99, i1 false) #14
  br label %123

123:                                              ; preds = %114, %120
  %124 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %116, %114 ], [ %121, %120 ]
  %125 = phi i8* [ %118, %114 ], [ %122, %120 ]
  %126 = getelementptr inbounds i8, i8* %125, i64 %99
  store i8 0, i8* %126, align 1
  %127 = call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator14convertSwizzleENSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEENS_6StringE(%"class.SkSL::IRGenerator"* %0, %"class.SkSL::Expression"* nonnull %14, %"class.SkSL::String"* nonnull %5)
  %128 = ptrtoint %"class.SkSL::Expression"* %127 to i64
  %129 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %124, i64 0, i32 1, i32 0
  %130 = load i8, i8* %129, align 1
  %131 = icmp slt i8 %130, 0
  br i1 %131, label %132, label %140

132:                                              ; preds = %123
  %133 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load i8*, i8** %133, align 8
  call void @_ZdlPv(i8* %134) #15
  br label %140

135:                                              ; preds = %69, %78
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #14
  %136 = bitcast %"class.SkSL::Expression"* %14 to void (%"class.SkSL::Expression"*)***
  %137 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %136, align 8
  %138 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %137, i64 1
  %139 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %138, align 8
  call void %139(%"class.SkSL::Expression"* nonnull %14) #14
  br label %140

140:                                              ; preds = %2, %132, %123, %85, %135
  %141 = phi i64 [ %74, %135 ], [ %128, %132 ], [ %128, %123 ], [ %93, %85 ], [ 0, %2 ]
  %142 = inttoptr i64 %141 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %142
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator17convertIdentifierERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* nocapture, %"struct.SkSL::ASTNode"* nocapture readonly dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 1, i32 0, i64 0
  %6 = bitcast i8* %5 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 1, i32 0, i64 8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = tail call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator17convertIdentifierEiNS_14StringFragmentE(%"class.SkSL::IRGenerator"* %0, i32 %4, i8* %7, i64 %10)
  ret %"class.SkSL::Expression"* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator22convertIndexExpressionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"*, %"struct.SkSL::ASTNode"* nocapture readonly dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 0
  %4 = load %"class.std::__1::vector.52"*, %"class.std::__1::vector.52"** %3, align 8
  %5 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 4, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %4, i64 0, i32 0, i32 0
  %9 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %8, align 8
  %10 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %9, i64 %7, i32 6, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %9, i64 %7
  %13 = tail call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator17convertExpressionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %12)
  %14 = icmp eq %"class.SkSL::Expression"* %13, null
  br i1 %14, label %99, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %13, i64 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 54
  %19 = icmp slt i32 %11, 0
  br i1 %18, label %20, label %74

20:                                               ; preds = %15
  br i1 %19, label %21, label %28

21:                                               ; preds = %20
  %22 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %23 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %22, align 8
  %24 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %23, i64 0, i32 1
  %25 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %24, align 8
  %26 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 4
  tail call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %25, i32 %27, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0))
  br label %93

28:                                               ; preds = %20
  %29 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %13, i64 1
  %30 = bitcast %"class.SkSL::Expression"* %29 to %"class.SkSL::Type"**
  %31 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %30, align 8
  %32 = sext i32 %11 to i64
  %33 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %8, align 8
  %34 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %33, i64 %32, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = icmp eq i32 %35, 22
  br i1 %36, label %37, label %44

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %41 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %40, align 8
  %42 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %41, i64 0, i32 1
  %43 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %42, align 8
  tail call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %43, i32 %39, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0)) #14
  br label %93

44:                                               ; preds = %28
  %45 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %33, i64 %32
  %46 = tail call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator17convertExpressionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %45) #14
  %47 = icmp eq %"class.SkSL::Expression"* %46, null
  br i1 %47, label %93, label %48

48:                                               ; preds = %44
  %49 = tail call i32 @_ZN4SkSL11IRGenerator16convertArraySizeERKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEE(%"class.SkSL::IRGenerator"* %0, %"class.SkSL::Type"* dereferenceable(184) %31, %"class.SkSL::Expression"* nonnull %46) #14
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %93, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 4, i32 0
  %53 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %52, align 8
  %54 = tail call %"class.SkSL::Type"* @_ZN4SkSL11SymbolTable17addArrayDimensionEPKNS_4TypeEi(%"class.SkSL::SymbolTable"* %53, %"class.SkSL::Type"* %31, i32 %49) #14
  %55 = ptrtoint %"class.SkSL::Type"* %54 to i64
  %56 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %57 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %56, align 8
  %58 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %13, i64 0, i32 0, i32 1
  %59 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #14
  %60 = load i32, i32* %58, align 4
  %61 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %57, i64 0, i32 0, i32 28, i32 0, i32 0, i32 0
  %62 = bitcast %"class.SkSL::Type"** %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast i8* %59 to i32 (...)***
  %65 = getelementptr inbounds i8, i8* %59, i64 8
  %66 = bitcast i8* %65 to i32*
  store i32 %60, i32* %66, align 8
  %67 = getelementptr inbounds i8, i8* %59, i64 12
  %68 = bitcast i8* %67 to i32*
  store i32 54, i32* %68, align 4
  %69 = getelementptr inbounds i8, i8* %59, i64 16
  %70 = bitcast i8* %69 to i64*
  store i64 %63, i64* %70, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL13TypeReferenceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %64, align 8
  %71 = getelementptr inbounds i8, i8* %59, i64 24
  %72 = bitcast i8* %71 to i64*
  store i64 %55, i64* %72, align 8
  %73 = ptrtoint i8* %59 to i64
  br label %93

74:                                               ; preds = %15
  br i1 %19, label %75, label %82

75:                                               ; preds = %74
  %76 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %77 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %76, align 8
  %78 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %77, i64 0, i32 1
  %79 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %78, align 8
  %80 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %13, i64 0, i32 0, i32 1
  %81 = load i32, i32* %80, align 8
  tail call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %79, i32 %81, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.94, i64 0, i64 0))
  br label %93

82:                                               ; preds = %74
  %83 = sext i32 %11 to i64
  %84 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %8, align 8
  %85 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %84, i64 %83
  %86 = tail call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator17convertExpressionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %85)
  %87 = icmp eq %"class.SkSL::Expression"* %86, null
  br i1 %87, label %93, label %88

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %90 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %89, align 8
  %91 = tail call %"class.SkSL::Expression"* @_ZN4SkSL15IndexExpression7ConvertERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEES9_(%"class.SkSL::Context"* dereferenceable(744) %90, %"class.SkSL::Expression"* nonnull %13, %"class.SkSL::Expression"* nonnull %86) #14
  %92 = ptrtoint %"class.SkSL::Expression"* %91 to i64
  br label %99

93:                                               ; preds = %82, %44, %37, %51, %48, %75, %21
  %94 = phi i64 [ 0, %82 ], [ 0, %44 ], [ 0, %37 ], [ 0, %48 ], [ %73, %51 ], [ 0, %75 ], [ 0, %21 ]
  %95 = bitcast %"class.SkSL::Expression"* %13 to void (%"class.SkSL::Expression"*)***
  %96 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %95, align 8
  %97 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %96, i64 1
  %98 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %97, align 8
  tail call void %98(%"class.SkSL::Expression"* nonnull %13) #14
  br label %99

99:                                               ; preds = %2, %88, %93
  %100 = phi i64 [ %92, %88 ], [ %94, %93 ], [ 0, %2 ]
  %101 = inttoptr i64 %100 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %101
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator24convertPostfixExpressionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"*, %"struct.SkSL::ASTNode"* nocapture readonly dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 0
  %4 = load %"class.std::__1::vector.52"*, %"class.std::__1::vector.52"** %3, align 8
  %5 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 4, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %4, i64 0, i32 0, i32 0
  %9 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %8, align 8
  %10 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %9, i64 %7
  %11 = tail call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator17convertExpressionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %10)
  %12 = icmp eq %"class.SkSL::Expression"* %11, null
  br i1 %12, label %20, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %15 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %14, align 8
  %16 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 1, i32 0, i64 0
  %17 = bitcast i8* %16 to i32*
  %18 = load i32, i32* %17, align 8
  %19 = tail call %"class.SkSL::Expression"* @_ZN4SkSL17PostfixExpression7ConvertERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEENS_8OperatorE(%"class.SkSL::Context"* dereferenceable(744) %15, %"class.SkSL::Expression"* nonnull %11, i32 %18) #14
  br label %20

20:                                               ; preds = %2, %13
  %21 = phi %"class.SkSL::Expression"* [ %19, %13 ], [ null, %2 ]
  ret %"class.SkSL::Expression"* %21
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator23convertPrefixExpressionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"*, %"struct.SkSL::ASTNode"* nocapture readonly dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 0
  %4 = load %"class.std::__1::vector.52"*, %"class.std::__1::vector.52"** %3, align 8
  %5 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 4, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %4, i64 0, i32 0, i32 0
  %9 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %8, align 8
  %10 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %9, i64 %7
  %11 = tail call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator17convertExpressionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %10)
  %12 = icmp eq %"class.SkSL::Expression"* %11, null
  br i1 %12, label %20, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %15 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %14, align 8
  %16 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 1, i32 0, i64 0
  %17 = bitcast i8* %16 to i32*
  %18 = load i32, i32* %17, align 8
  %19 = tail call %"class.SkSL::Expression"* @_ZN4SkSL16PrefixExpression7ConvertERKNS_7ContextENS_8OperatorENSt3__110unique_ptrINS_10ExpressionENS5_14default_deleteIS7_EEEE(%"class.SkSL::Context"* dereferenceable(744) %15, i32 %18, %"class.SkSL::Expression"* nonnull %11) #14
  br label %20

20:                                               ; preds = %2, %13
  %21 = phi %"class.SkSL::Expression"* [ %19, %13 ], [ null, %2 ]
  ret %"class.SkSL::Expression"* %21
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator22convertScopeExpressionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"*, %"struct.SkSL::ASTNode"* nocapture readonly dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 0
  %4 = load %"class.std::__1::vector.52"*, %"class.std::__1::vector.52"** %3, align 8
  %5 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 4, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %4, i64 0, i32 0, i32 0
  %9 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %8, align 8
  %10 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %9, i64 %7
  %11 = tail call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator17convertExpressionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %10)
  %12 = icmp eq %"class.SkSL::Expression"* %11, null
  br i1 %12, label %44, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %11, i64 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 54
  br i1 %16, label %24, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %19 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %18, align 8
  %20 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %19, i64 0, i32 1
  %21 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %20, align 8
  %22 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 2
  %23 = load i32, i32* %22, align 4
  tail call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %21, i32 %23, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.95, i64 0, i64 0))
  br label %38

24:                                               ; preds = %13
  %25 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 1, i32 0, i64 0
  %26 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %11, i64 0, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %11, i64 1
  %29 = bitcast %"class.SkSL::Expression"* %28 to %"class.SkSL::Type"**
  %30 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %29, align 8
  %31 = bitcast i8* %25 to i8**
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 1, i32 0, i64 8
  %34 = bitcast i8* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = tail call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator16convertTypeFieldEiRKNS_4TypeENS_14StringFragmentE(%"class.SkSL::IRGenerator"* %0, i32 %27, %"class.SkSL::Type"* dereferenceable(184) %30, i8* %32, i64 %35)
  %37 = ptrtoint %"class.SkSL::Expression"* %36 to i64
  br label %38

38:                                               ; preds = %24, %17
  %39 = phi i64 [ 0, %17 ], [ %37, %24 ]
  %40 = bitcast %"class.SkSL::Expression"* %11 to void (%"class.SkSL::Expression"*)***
  %41 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %41, i64 1
  %43 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %42, align 8
  tail call void %43(%"class.SkSL::Expression"* nonnull %11) #14
  br label %44

44:                                               ; preds = %2, %38
  %45 = phi i64 [ %39, %38 ], [ 0, %2 ]
  %46 = inttoptr i64 %45 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %46
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator24convertTernaryExpressionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"*, %"struct.SkSL::ASTNode"* nocapture readonly dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 0
  %4 = load %"class.std::__1::vector.52"*, %"class.std::__1::vector.52"** %3, align 8
  %5 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 4, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %4, i64 0, i32 0, i32 0
  %9 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %8, align 8
  %10 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %9, i64 %7, i32 6, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %9, i64 %7
  %13 = tail call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator17convertExpressionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %12)
  %14 = icmp eq %"class.SkSL::Expression"* %13, null
  br i1 %14, label %43, label %15

15:                                               ; preds = %2
  %16 = sext i32 %11 to i64
  %17 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %8, align 8
  %18 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %17, i64 %16, i32 6, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %17, i64 %16
  %21 = tail call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator17convertExpressionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %20)
  %22 = icmp eq %"class.SkSL::Expression"* %21, null
  br i1 %22, label %38, label %23

23:                                               ; preds = %15
  %24 = sext i32 %19 to i64
  %25 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %8, align 8
  %26 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %25, i64 %24
  %27 = tail call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator17convertExpressionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %0, %"struct.SkSL::ASTNode"* dereferenceable(160) %26)
  %28 = icmp eq %"class.SkSL::Expression"* %27, null
  br i1 %28, label %33, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %31 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %30, align 8
  %32 = tail call %"class.SkSL::Expression"* @_ZN4SkSL17TernaryExpression7ConvertERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEES9_S9_(%"class.SkSL::Context"* dereferenceable(744) %31, %"class.SkSL::Expression"* nonnull %13, %"class.SkSL::Expression"* nonnull %21, %"class.SkSL::Expression"* nonnull %27) #14
  br label %43

33:                                               ; preds = %23
  %34 = bitcast %"class.SkSL::Expression"* %21 to void (%"class.SkSL::Expression"*)***
  %35 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %35, i64 1
  %37 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %36, align 8
  tail call void %37(%"class.SkSL::Expression"* nonnull %21) #14
  br label %38

38:                                               ; preds = %33, %15
  %39 = bitcast %"class.SkSL::Expression"* %13 to void (%"class.SkSL::Expression"*)***
  %40 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %40, i64 1
  %42 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %41, align 8
  tail call void %42(%"class.SkSL::Expression"* nonnull %13) #14
  br label %43

43:                                               ; preds = %2, %29, %38
  %44 = phi %"class.SkSL::Expression"* [ %32, %29 ], [ null, %38 ], [ null, %2 ]
  ret %"class.SkSL::Expression"* %44
}

declare %"class.SkSL::Expression"* @_ZN4SkSL11FieldAccess4MakeERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEEiNS_20FieldAccessOwnerKindE(%"class.SkSL::Context"* dereferenceable(744), %"class.SkSL::Expression"*, i32, i8 signext) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Section"* @_ZN4SkSL11IRGenerator14convertSectionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* nocapture readonly, %"struct.SkSL::ASTNode"* dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %4 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %3, align 8
  %5 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %4, i64 0, i32 4
  %6 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %5, align 8
  %7 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %6, i64 0, i32 0
  %8 = load i8, i8* %7, align 8
  %9 = icmp eq i8 %8, 3
  br i1 %9, label %15, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %4, i64 0, i32 1
  %12 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %11, align 8
  %13 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 2
  %14 = load i32, i32* %13, align 4
  tail call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %12, i32 %14, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.80, i64 0, i64 0))
  br label %24

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 1, i32 0, i64 0
  %17 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 2
  %18 = bitcast i8* %16 to %"struct.SkSL::StringFragment"*
  %19 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 1, i32 0, i64 16
  %20 = bitcast i8* %19 to %"struct.SkSL::StringFragment"*
  %21 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %1, i64 0, i32 1, i32 0, i64 32
  %22 = bitcast i8* %21 to %"struct.SkSL::StringFragment"*
  %23 = tail call %"class.SkSL::Section"* @_ZNSt3__111make_uniqueIN4SkSL7SectionEJRKiRKNS1_14StringFragmentES7_S7_EEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(i32* dereferenceable(4) %17, %"struct.SkSL::StringFragment"* dereferenceable(16) %18, %"struct.SkSL::StringFragment"* dereferenceable(16) %20, %"struct.SkSL::StringFragment"* dereferenceable(16) %22)
  br label %24

24:                                               ; preds = %15, %10
  %25 = phi %"class.SkSL::Section"* [ %23, %15 ], [ null, %10 ]
  ret %"class.SkSL::Section"* %25
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Section"* @_ZNSt3__111make_uniqueIN4SkSL7SectionEJRKiRKNS1_14StringFragmentES7_S7_EEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(i32* dereferenceable(4), %"struct.SkSL::StringFragment"* dereferenceable(16), %"struct.SkSL::StringFragment"* dereferenceable(16), %"struct.SkSL::StringFragment"* dereferenceable(16)) local_unnamed_addr #4 comdat {
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 88) #14
  %9 = bitcast i8* %8 to %"class.SkSL::Section"*
  %10 = load i32, i32* %0, align 4
  %11 = getelementptr inbounds %"struct.SkSL::StringFragment", %"struct.SkSL::StringFragment"* %1, i64 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"struct.SkSL::StringFragment", %"struct.SkSL::StringFragment"* %1, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp ugt i64 %14, -17
  br i1 %15, label %16, label %18

16:                                               ; preds = %4
  %17 = bitcast %"class.SkSL::String"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %17) #16
  unreachable

18:                                               ; preds = %4
  %19 = icmp ult i64 %14, 23
  br i1 %19, label %28, label %20

20:                                               ; preds = %18
  %21 = add nuw i64 %14, 16
  %22 = and i64 %21, -16
  %23 = tail call i8* @_Znwm(i64 %22) #15
  %24 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %23, i8** %24, align 8
  %25 = or i64 %22, -9223372036854775808
  %26 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %14, i64* %27, align 8
  br label %34

28:                                               ; preds = %18
  %29 = trunc i64 %14 to i8
  %30 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  store i8 %29, i8* %31, align 1
  %32 = bitcast %"class.SkSL::String"* %5 to i8*
  %33 = icmp eq i64 %14, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %28, %20
  %35 = phi i8* [ %23, %20 ], [ %32, %28 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %35, i8* align 1 %12, i64 %14, i1 false) #14
  br label %36

36:                                               ; preds = %28, %34
  %37 = phi i8* [ %32, %28 ], [ %35, %34 ]
  %38 = getelementptr inbounds i8, i8* %37, i64 %14
  store i8 0, i8* %38, align 1
  %39 = getelementptr inbounds %"struct.SkSL::StringFragment", %"struct.SkSL::StringFragment"* %2, i64 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds %"struct.SkSL::StringFragment", %"struct.SkSL::StringFragment"* %2, i64 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = icmp ugt i64 %42, -17
  br i1 %43, label %44, label %46

44:                                               ; preds = %36
  %45 = bitcast %"class.SkSL::String"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %45) #16
  unreachable

46:                                               ; preds = %36
  %47 = icmp ult i64 %42, 23
  br i1 %47, label %56, label %48

48:                                               ; preds = %46
  %49 = add nuw i64 %42, 16
  %50 = and i64 %49, -16
  %51 = tail call i8* @_Znwm(i64 %50) #15
  %52 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %51, i8** %52, align 8
  %53 = or i64 %50, -9223372036854775808
  %54 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %53, i64* %54, align 8
  %55 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %42, i64* %55, align 8
  br label %62

56:                                               ; preds = %46
  %57 = trunc i64 %42 to i8
  %58 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  store i8 %57, i8* %59, align 1
  %60 = bitcast %"class.SkSL::String"* %6 to i8*
  %61 = icmp eq i64 %42, 0
  br i1 %61, label %64, label %62

62:                                               ; preds = %56, %48
  %63 = phi i8* [ %51, %48 ], [ %60, %56 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %63, i8* align 1 %40, i64 %42, i1 false) #14
  br label %64

64:                                               ; preds = %56, %62
  %65 = phi i8* [ %60, %56 ], [ %63, %62 ]
  %66 = getelementptr inbounds i8, i8* %65, i64 %42
  store i8 0, i8* %66, align 1
  %67 = getelementptr inbounds %"struct.SkSL::StringFragment", %"struct.SkSL::StringFragment"* %3, i64 0, i32 0
  %68 = load i8*, i8** %67, align 8
  %69 = getelementptr inbounds %"struct.SkSL::StringFragment", %"struct.SkSL::StringFragment"* %3, i64 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = icmp ugt i64 %70, -17
  br i1 %71, label %72, label %74

72:                                               ; preds = %64
  %73 = bitcast %"class.SkSL::String"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %73) #16
  unreachable

74:                                               ; preds = %64
  %75 = icmp ult i64 %70, 23
  br i1 %75, label %85, label %76

76:                                               ; preds = %74
  %77 = add nuw i64 %70, 16
  %78 = and i64 %77, -16
  %79 = tail call i8* @_Znwm(i64 %78) #15
  %80 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %79, i8** %80, align 8
  %81 = or i64 %78, -9223372036854775808
  %82 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %81, i64* %82, align 8
  %83 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %70, i64* %83, align 8
  %84 = bitcast %"class.SkSL::String"* %7 to i8*
  br label %91

85:                                               ; preds = %74
  %86 = trunc i64 %70 to i8
  %87 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  store i8 %86, i8* %88, align 1
  %89 = bitcast %"class.SkSL::String"* %7 to i8*
  %90 = icmp eq i64 %70, 0
  br i1 %90, label %94, label %91

91:                                               ; preds = %85, %76
  %92 = phi i8* [ %89, %85 ], [ %84, %76 ]
  %93 = phi i8* [ %89, %85 ], [ %79, %76 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %93, i8* align 1 %68, i64 %70, i1 false) #14
  br label %94

94:                                               ; preds = %91, %85
  %95 = phi i8* [ %89, %85 ], [ %92, %91 ]
  %96 = phi i8* [ %89, %85 ], [ %93, %91 ]
  %97 = getelementptr inbounds i8, i8* %96, i64 %70
  store i8 0, i8* %97, align 1
  %98 = getelementptr inbounds i8, i8* %8, i64 8
  %99 = bitcast i8* %98 to i32*
  store i32 %10, i32* %99, align 8
  %100 = getelementptr inbounds i8, i8* %8, i64 12
  %101 = bitcast i8* %100 to i32*
  store i32 7, i32* %101, align 4
  %102 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL7SectionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %102, align 8
  %103 = getelementptr inbounds i8, i8* %8, i64 16
  %104 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %103, i8* nonnull align 8 %104, i64 24, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 0, i64 24, i1 false) #14
  %105 = getelementptr inbounds i8, i8* %8, i64 40
  %106 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* nonnull align 8 %106, i64 24, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %106, i8 0, i64 24, i1 false) #14
  %107 = getelementptr inbounds i8, i8* %8, i64 64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %107, i8* nonnull align 8 %95, i64 24, i1 false) #14
  ret %"class.SkSL::Section"* %9
}

declare %"class.SkSL::Expression"* @_ZNK4SkSL4Type16coerceExpressionENSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEERKNS_7ContextE(%"class.SkSL::Type"*, %"class.SkSL::Expression"*, %"class.SkSL::Context"* dereferenceable(744)) local_unnamed_addr #2

declare %"class.SkSL::Expression"* @_ZN4SkSL16BinaryExpression7ConvertERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEENS_8OperatorES9_(%"class.SkSL::Context"* dereferenceable(744), %"class.SkSL::Expression"*, i32, %"class.SkSL::Expression"*) local_unnamed_addr #2

declare %"class.SkSL::Expression"* @_ZN4SkSL17TernaryExpression7ConvertERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEES9_S9_(%"class.SkSL::Context"* dereferenceable(744), %"class.SkSL::Expression"*, %"class.SkSL::Expression"*, %"class.SkSL::Expression"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS_19FunctionDeclarationE(%"class.SkSL::IRGenerator"* nocapture readonly, %"class.SkSL::FunctionDeclaration"* dereferenceable(96)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.std::__1::vector.315", align 8
  %5 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 5
  %6 = load %"class.SkSL::IRIntrinsicMap"*, %"class.SkSL::IRIntrinsicMap"** %5, align 8
  %7 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #14
  call void @_ZNK4SkSL19FunctionDeclaration11descriptionEv(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::FunctionDeclaration"* %1) #14
  br label %8

8:                                                ; preds = %13, %2
  %9 = phi %"class.SkSL::IRIntrinsicMap"* [ %6, %2 ], [ %15, %13 ]
  %10 = getelementptr inbounds %"class.SkSL::IRIntrinsicMap", %"class.SkSL::IRIntrinsicMap"* %9, i64 0, i32 0, i32 0
  %11 = call %"struct.std::__1::__hash_node_base.66"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_14IRIntrinsicMap9IntrinsicEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_(%"class.std::__1::__hash_table.62"* %10, %"class.SkSL::String"* nonnull dereferenceable(24) %3) #14
  %12 = icmp eq %"struct.std::__1::__hash_node_base.66"* %11, null
  br i1 %12, label %13, label %17

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.SkSL::IRIntrinsicMap", %"class.SkSL::IRIntrinsicMap"* %9, i64 0, i32 1
  %15 = load %"class.SkSL::IRIntrinsicMap"*, %"class.SkSL::IRIntrinsicMap"** %14, align 8
  %16 = icmp eq %"class.SkSL::IRIntrinsicMap"* %15, null
  br i1 %16, label %27, label %8

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.66", %"struct.std::__1::__hash_node_base.66"* %11, i64 6
  %19 = bitcast %"struct.std::__1::__hash_node_base.66"* %18 to i8*
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %27

22:                                               ; preds = %17
  store i8 1, i8* %19, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.66", %"struct.std::__1::__hash_node_base.66"* %11, i64 5
  %24 = bitcast %"struct.std::__1::__hash_node_base.66"* %23 to %"class.SkSL::ProgramElement"**
  %25 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %24, align 8
  %26 = bitcast %"class.SkSL::ProgramElement"* %25 to %"class.SkSL::FunctionDefinition"*
  br label %27

27:                                               ; preds = %13, %17, %22
  %28 = phi %"class.SkSL::FunctionDefinition"* [ %26, %22 ], [ null, %17 ], [ null, %13 ]
  %29 = phi %"class.SkSL::ProgramElement"* [ %25, %22 ], [ null, %17 ], [ null, %13 ]
  %30 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  call void @_ZdlPv(i8* %36) #15
  br label %37

37:                                               ; preds = %27, %34
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #14
  %38 = ptrtoint %"class.SkSL::ProgramElement"* %29 to i64
  %39 = icmp eq %"class.SkSL::ProgramElement"* %29, null
  br i1 %39, label %173, label %40

40:                                               ; preds = %37
  %41 = bitcast %"class.std::__1::vector.315"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #14
  %42 = getelementptr inbounds %"class.std::__1::vector.315", %"class.std::__1::vector.315"* %4, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.std::__1::vector.315", %"class.std::__1::vector.315"* %4, i64 0, i32 0, i32 1
  %44 = getelementptr inbounds %"class.std::__1::vector.315", %"class.std::__1::vector.315"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %45 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %28, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %45, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 0, i64 24, i1 false) #14
  %47 = icmp eq %"struct.std::__1::__hash_node_base.91"* %46, null
  br i1 %47, label %83, label %48

48:                                               ; preds = %40
  %49 = ptrtoint %"struct.std::__1::__hash_node_base.91"* %46 to i64
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ %53, %50 ], [ 0, %48 ]
  %52 = phi i64 [ %55, %50 ], [ %49, %48 ]
  %53 = add nuw nsw i64 %51, 1
  %54 = inttoptr i64 %52 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %50

57:                                               ; preds = %50
  %58 = icmp ugt i64 %51, 2305843009213693950
  br i1 %58, label %59, label %61

59:                                               ; preds = %57
  %60 = bitcast %"class.std::__1::vector.315"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %60) #16
  unreachable

61:                                               ; preds = %57
  %62 = shl i64 %53, 3
  %63 = call i8* @_Znwm(i64 %62) #15
  %64 = bitcast i8* %63 to %"class.SkSL::FunctionDeclaration"**
  %65 = bitcast %"class.SkSL::FunctionDeclaration"*** %43 to i8**
  store i8* %63, i8** %65, align 8
  %66 = bitcast %"class.std::__1::vector.315"* %4 to i8**
  store i8* %63, i8** %66, align 8
  %67 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %64, i64 %53
  store %"class.SkSL::FunctionDeclaration"** %67, %"class.SkSL::FunctionDeclaration"*** %44, align 8
  br label %68

68:                                               ; preds = %68, %61
  %69 = phi %"class.SkSL::FunctionDeclaration"** [ %64, %61 ], [ %78, %68 ]
  %70 = phi i64 [ %49, %61 ], [ %77, %68 ]
  %71 = bitcast %"class.SkSL::FunctionDeclaration"** %69 to i64*
  %72 = inttoptr i64 %70 to %"struct.std::__1::__hash_node.453"*
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node.453", %"struct.std::__1::__hash_node.453"* %72, i64 0, i32 2
  %74 = bitcast %"class.SkSL::FunctionDeclaration"** %73 to i64*
  %75 = load i64, i64* %74, align 8
  store i64 %75, i64* %71, align 8
  %76 = inttoptr i64 %70 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %69, i64 1
  %79 = icmp eq i64 %77, 0
  br i1 %79, label %80, label %68

80:                                               ; preds = %68
  %81 = bitcast %"class.SkSL::FunctionDeclaration"*** %43 to i64*
  %82 = ptrtoint %"class.SkSL::FunctionDeclaration"** %78 to i64
  store i64 %82, i64* %81, align 8
  br label %83

83:                                               ; preds = %40, %80
  %84 = phi %"class.SkSL::FunctionDeclaration"** [ null, %40 ], [ %78, %80 ]
  %85 = phi %"class.SkSL::FunctionDeclaration"** [ null, %40 ], [ %64, %80 ]
  call fastcc void @"_ZNSt3__16__sortIRZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS1_19FunctionDeclarationEE3$_6PPS4_EEvT0_SA_T_"(%"class.SkSL::FunctionDeclaration"** %85, %"class.SkSL::FunctionDeclaration"** %84) #14
  %86 = load %"class.SkSL::FunctionDeclaration"**, %"class.SkSL::FunctionDeclaration"*** %42, align 8
  %87 = load %"class.SkSL::FunctionDeclaration"**, %"class.SkSL::FunctionDeclaration"*** %43, align 8
  %88 = icmp eq %"class.SkSL::FunctionDeclaration"** %86, %87
  br i1 %88, label %89, label %168

89:                                               ; preds = %168, %83
  %90 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 11
  %91 = load %"class.std::__1::vector.150"*, %"class.std::__1::vector.150"** %90, align 8
  %92 = getelementptr inbounds %"class.std::__1::vector.150", %"class.std::__1::vector.150"* %91, i64 0, i32 0, i32 1
  %93 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %92, align 8
  %94 = getelementptr inbounds %"class.std::__1::vector.150", %"class.std::__1::vector.150"* %91, i64 0, i32 0, i32 2, i32 0, i32 0
  %95 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %94, align 8
  %96 = icmp eq %"class.SkSL::ProgramElement"** %93, %95
  %97 = ptrtoint %"class.SkSL::ProgramElement"** %95 to i64
  br i1 %96, label %103, label %98

98:                                               ; preds = %89
  %99 = bitcast %"class.SkSL::ProgramElement"** %93 to i64*
  store i64 %38, i64* %99, align 8
  %100 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %93, i64 1
  %101 = ptrtoint %"class.SkSL::ProgramElement"** %100 to i64
  %102 = bitcast %"class.SkSL::ProgramElement"*** %92 to i64*
  store i64 %101, i64* %102, align 8
  br label %160

103:                                              ; preds = %89
  %104 = ptrtoint %"class.SkSL::ProgramElement"** %93 to i64
  %105 = bitcast %"class.SkSL::ProgramElement"*** %92 to i64*
  %106 = bitcast %"class.std::__1::vector.150"* %91 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = sub i64 %104, %107
  %109 = ashr exact i64 %108, 3
  %110 = add nsw i64 %109, 1
  %111 = icmp ugt i64 %110, 2305843009213693951
  br i1 %111, label %112, label %114

112:                                              ; preds = %103
  %113 = bitcast %"class.std::__1::vector.150"* %91 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %113) #16
  unreachable

114:                                              ; preds = %103
  %115 = bitcast %"class.SkSL::ProgramElement"*** %94 to i64*
  %116 = sub i64 %97, %107
  %117 = ashr exact i64 %116, 3
  %118 = icmp ult i64 %117, 1152921504606846975
  br i1 %118, label %119, label %127

119:                                              ; preds = %114
  %120 = ashr exact i64 %116, 2
  %121 = icmp ult i64 %120, %110
  %122 = select i1 %121, i64 %110, i64 %120
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %132, label %124

124:                                              ; preds = %119
  %125 = icmp ugt i64 %122, 2305843009213693951
  br i1 %125, label %126, label %127

126:                                              ; preds = %124
  call void @abort() #16
  unreachable

127:                                              ; preds = %124, %114
  %128 = phi i64 [ %122, %124 ], [ 2305843009213693951, %114 ]
  %129 = shl i64 %128, 3
  %130 = call i8* @_Znwm(i64 %129) #15
  %131 = bitcast i8* %130 to %"class.SkSL::ProgramElement"**
  br label %132

132:                                              ; preds = %127, %119
  %133 = phi i64 [ %128, %127 ], [ 0, %119 ]
  %134 = phi %"class.SkSL::ProgramElement"** [ %131, %127 ], [ null, %119 ]
  %135 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %134, i64 %109
  %136 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %134, i64 %133
  %137 = ptrtoint %"class.SkSL::ProgramElement"** %136 to i64
  %138 = bitcast %"class.SkSL::ProgramElement"** %135 to i64*
  store i64 %38, i64* %138, align 8
  %139 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %135, i64 1
  %140 = ptrtoint %"class.SkSL::ProgramElement"** %139 to i64
  %141 = getelementptr inbounds %"class.std::__1::vector.150", %"class.std::__1::vector.150"* %91, i64 0, i32 0, i32 0
  %142 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %141, align 8
  %143 = load i64, i64* %105, align 8
  %144 = ptrtoint %"class.SkSL::ProgramElement"** %142 to i64
  %145 = sub i64 %143, %144
  %146 = ashr exact i64 %145, 3
  %147 = sub nsw i64 0, %146
  %148 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %135, i64 %147
  %149 = ptrtoint %"class.SkSL::ProgramElement"** %148 to i64
  %150 = icmp sgt i64 %145, 0
  br i1 %150, label %151, label %155

151:                                              ; preds = %132
  %152 = bitcast %"class.SkSL::ProgramElement"** %148 to i8*
  %153 = bitcast %"class.SkSL::ProgramElement"** %142 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %152, i8* align 8 %153, i64 %145, i1 false) #14
  %154 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %141, align 8
  br label %155

155:                                              ; preds = %151, %132
  %156 = phi %"class.SkSL::ProgramElement"** [ %142, %132 ], [ %154, %151 ]
  store i64 %149, i64* %106, align 8
  store i64 %140, i64* %105, align 8
  store i64 %137, i64* %115, align 8
  %157 = icmp eq %"class.SkSL::ProgramElement"** %156, null
  br i1 %157, label %160, label %158

158:                                              ; preds = %155
  %159 = bitcast %"class.SkSL::ProgramElement"** %156 to i8*
  call void @_ZdlPv(i8* %159) #15
  br label %160

160:                                              ; preds = %98, %155, %158
  %161 = load %"class.SkSL::FunctionDeclaration"**, %"class.SkSL::FunctionDeclaration"*** %42, align 8
  %162 = icmp eq %"class.SkSL::FunctionDeclaration"** %161, null
  br i1 %162, label %167, label %163

163:                                              ; preds = %160
  %164 = ptrtoint %"class.SkSL::FunctionDeclaration"** %161 to i64
  %165 = bitcast %"class.SkSL::FunctionDeclaration"*** %43 to i64*
  store i64 %164, i64* %165, align 8
  %166 = bitcast %"class.SkSL::FunctionDeclaration"** %161 to i8*
  call void @_ZdlPv(i8* %166) #15
  br label %167

167:                                              ; preds = %160, %163
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #14
  br label %173

168:                                              ; preds = %83, %168
  %169 = phi %"class.SkSL::FunctionDeclaration"** [ %171, %168 ], [ %86, %83 ]
  %170 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %169, align 8
  call void @_ZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS_19FunctionDeclarationE(%"class.SkSL::IRGenerator"* %0, %"class.SkSL::FunctionDeclaration"* dereferenceable(96) %170)
  %171 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %169, i64 1
  %172 = icmp eq %"class.SkSL::FunctionDeclaration"** %171, %87
  br i1 %172, label %89, label %168

173:                                              ; preds = %37, %167
  ret void
}

declare void @_ZNK4SkSL19FunctionDeclaration11descriptionEv(%"class.SkSL::String"* sret, %"class.SkSL::FunctionDeclaration"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator4callEiRKNS_19FunctionDeclarationE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS5_14default_deleteIS7_EEEELb0EE(%"class.SkSL::IRGenerator"*, i32, %"class.SkSL::FunctionDeclaration"* dereferenceable(96), %class.SkSTArray.215*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.SkSL::FunctionDeclaration"*, align 8
  %6 = alloca %class.SkSTArray.215, align 8
  %7 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %2, i64 0, i32 5
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %27, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %2, i64 0, i32 1
  %12 = load %"class.SkSL::FunctionDefinition"*, %"class.SkSL::FunctionDefinition"** %11, align 8
  %13 = icmp eq %"class.SkSL::FunctionDefinition"* %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = bitcast %"class.SkSL::FunctionDeclaration"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #14
  store %"class.SkSL::FunctionDeclaration"* %2, %"class.SkSL::FunctionDeclaration"** %5, align 8
  %16 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 6, i32 0
  %17 = call { %"struct.std::__1::__hash_node_base.91"*, i8 } @_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.87"* %16, %"class.SkSL::FunctionDeclaration"** nonnull dereferenceable(8) %5, %"class.SkSL::FunctionDeclaration"** nonnull dereferenceable(8) %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #14
  br label %18

18:                                               ; preds = %10, %14
  %19 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 15
  %20 = load i8, i8* %19, align 4, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %27

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 5
  %24 = load %"class.SkSL::IRIntrinsicMap"*, %"class.SkSL::IRIntrinsicMap"** %23, align 8
  %25 = icmp eq %"class.SkSL::IRIntrinsicMap"* %24, null
  br i1 %25, label %27, label %26

26:                                               ; preds = %22
  call void @_ZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS_19FunctionDeclarationE(%"class.SkSL::IRGenerator"* %0, %"class.SkSL::FunctionDeclaration"* dereferenceable(96) %2)
  br label %27

27:                                               ; preds = %4, %22, %18, %26
  %28 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %29 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %28, align 8
  %30 = getelementptr inbounds %class.SkSTArray.215, %class.SkSTArray.215* %6, i64 0, i32 0, i32 0, i64 16
  %31 = getelementptr inbounds %class.SkSTArray.215, %class.SkSTArray.215* %6, i64 0, i32 0, i32 0, i64 0
  %32 = getelementptr inbounds %class.SkSTArray.215, %class.SkSTArray.215* %6, i64 0, i32 0, i32 0, i64 24
  %33 = bitcast i8* %32 to i64*
  %34 = bitcast i8* %30 to i8**
  store i8* %31, i8** %34, align 8
  store i64 17179869184, i64* %33, align 8
  %35 = bitcast i8* %30 to %class.SkTArray.217*
  %36 = getelementptr inbounds %class.SkSTArray.215, %class.SkSTArray.215* %3, i64 0, i32 0, i32 0, i64 16
  %37 = bitcast i8* %36 to %class.SkTArray.217*
  %38 = call dereferenceable(16) %class.SkTArray.217* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray.217* %35, %class.SkTArray.217* dereferenceable(16) %37) #14
  %39 = call %"class.SkSL::Expression"* @_ZN4SkSL12FunctionCall7ConvertERKNS_7ContextEiRKNS_19FunctionDeclarationE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS8_14default_deleteISA_EEEELb0EE(%"class.SkSL::Context"* dereferenceable(744) %29, i32 %1, %"class.SkSL::FunctionDeclaration"* dereferenceable(96) %2, %class.SkSTArray.215* nonnull %6) #14
  %40 = load i64, i64* %33, align 8
  %41 = and i64 %40, 4294967294
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %45, label %43

43:                                               ; preds = %27
  %44 = bitcast i8* %30 to %"class.std::__1::unique_ptr.157"**
  br label %49

45:                                               ; preds = %60, %27
  %46 = phi i64 [ %40, %27 ], [ %62, %60 ]
  %47 = and i64 %46, 1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %68, label %66

49:                                               ; preds = %60, %43
  %50 = phi i64 [ 0, %43 ], [ %61, %60 ]
  %51 = load %"class.std::__1::unique_ptr.157"*, %"class.std::__1::unique_ptr.157"** %44, align 8
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157"* %51, i64 %50, i32 0, i32 0, i32 0
  %53 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %52, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %52, align 8
  %54 = icmp eq %"class.SkSL::Expression"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %49
  %56 = bitcast %"class.SkSL::Expression"* %53 to void (%"class.SkSL::Expression"*)***
  %57 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %57, i64 1
  %59 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %58, align 8
  call void %59(%"class.SkSL::Expression"* nonnull %53) #14
  br label %60

60:                                               ; preds = %55, %49
  %61 = add nuw nsw i64 %50, 1
  %62 = load i64, i64* %33, align 8
  %63 = lshr i64 %62, 1
  %64 = and i64 %63, 2147483647
  %65 = icmp ult i64 %61, %64
  br i1 %65, label %49, label %45

66:                                               ; preds = %45
  %67 = load i8*, i8** %34, align 8
  call void @_Z7sk_freePv(i8* %67) #14
  br label %68

68:                                               ; preds = %45, %66
  ret %"class.SkSL::Expression"* %39
}

declare %"class.SkSL::Expression"* @_ZN4SkSL12FunctionCall7ConvertERKNS_7ContextEiRKNS_19FunctionDeclarationE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS8_14default_deleteISA_EEEELb0EE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::FunctionDeclaration"* dereferenceable(96), %class.SkSTArray.215*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i8 } @_ZN4SkSL11IRGenerator8callCostERKNS_19FunctionDeclarationERK9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS5_14default_deleteIS7_EEEELb0EE(%"class.SkSL::IRGenerator"* nocapture readnone, %"class.SkSL::FunctionDeclaration"* dereferenceable(96), %class.SkSTArray.215* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.SkSTArray.352, align 8
  %5 = alloca %"class.SkSL::Type"*, align 8
  %6 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %1, i64 0, i32 3
  %7 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %1, i64 0, i32 3, i32 0, i32 1
  %8 = bitcast %"class.SkSL::Variable"*** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.208"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = ashr exact i64 %12, 3
  %14 = getelementptr inbounds %class.SkSTArray.215, %class.SkSTArray.215* %2, i64 0, i32 0, i32 0, i64 16
  %15 = getelementptr inbounds %class.SkSTArray.215, %class.SkSTArray.215* %2, i64 0, i32 0, i32 0, i64 24
  %16 = bitcast i8* %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = lshr i64 %17, 1
  %19 = and i64 %18, 2147483647
  %20 = icmp eq i64 %13, %19
  br i1 %20, label %21, label %91

21:                                               ; preds = %3
  %22 = getelementptr inbounds %class.SkSTArray.352, %class.SkSTArray.352* %4, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %22) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 64, i1 false)
  %23 = getelementptr inbounds %class.SkSTArray.352, %class.SkSTArray.352* %4, i64 0, i32 0, i32 0, i64 64
  %24 = getelementptr inbounds %class.SkSTArray.352, %class.SkSTArray.352* %4, i64 0, i32 0, i32 0, i64 72
  %25 = bitcast i8* %24 to i64*
  %26 = bitcast i8* %23 to i8**
  store i8* %22, i8** %26, align 8
  store i64 68719476736, i64* %25, align 8
  %27 = bitcast %"class.SkSL::Type"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #14
  store %"class.SkSL::Type"* inttoptr (i64 -6148914691236517206 to %"class.SkSL::Type"*), %"class.SkSL::Type"** %5, align 8
  %28 = call zeroext i1 @_ZNK4SkSL19FunctionDeclaration19determineFinalTypesERK9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEELb0EEPS1_ILi8EPKNS_4TypeELb0EEPSD_(%"class.SkSL::FunctionDeclaration"* %1, %class.SkSTArray.215* dereferenceable(32) %2, %class.SkSTArray.352* nonnull %4, %"class.SkSL::Type"** nonnull %5) #14
  br i1 %28, label %29, label %82

29:                                               ; preds = %21
  %30 = load i64, i64* %16, align 8
  %31 = and i64 %30, 4294967294
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %29
  %34 = bitcast i8* %14 to %"class.std::__1::unique_ptr.157"**
  %35 = bitcast i8* %23 to %"class.SkSL::Type"***
  br label %44

36:                                               ; preds = %73, %29
  %37 = phi i32 [ 0, %29 ], [ %75, %73 ]
  %38 = phi i32 [ 0, %29 ], [ %74, %73 ]
  %39 = phi i8 [ 0, %29 ], [ %76, %73 ]
  %40 = zext i32 %37 to i64
  %41 = shl nuw i64 %40, 32
  %42 = zext i32 %38 to i64
  %43 = or i64 %41, %42
  br label %82

44:                                               ; preds = %33, %73
  %45 = phi i64 [ 0, %33 ], [ %77, %73 ]
  %46 = phi i8 [ 0, %33 ], [ %76, %73 ]
  %47 = phi i32 [ 0, %33 ], [ %74, %73 ]
  %48 = phi i32 [ 0, %33 ], [ %75, %73 ]
  %49 = load %"class.std::__1::unique_ptr.157"*, %"class.std::__1::unique_ptr.157"** %34, align 8
  %50 = shl i64 %45, 32
  %51 = ashr exact i64 %50, 32
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157"* %49, i64 %51, i32 0, i32 0, i32 0
  %53 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %52, align 8
  %54 = load %"class.SkSL::Type"**, %"class.SkSL::Type"*** %35, align 8
  %55 = getelementptr inbounds %"class.SkSL::Type"*, %"class.SkSL::Type"** %54, i64 %51
  %56 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %55, align 8
  %57 = bitcast %"class.SkSL::Expression"* %53 to { i64, i8 } (%"class.SkSL::Expression"*, %"class.SkSL::Type"*)***
  %58 = load { i64, i8 } (%"class.SkSL::Expression"*, %"class.SkSL::Type"*)**, { i64, i8 } (%"class.SkSL::Expression"*, %"class.SkSL::Type"*)*** %57, align 8
  %59 = getelementptr inbounds { i64, i8 } (%"class.SkSL::Expression"*, %"class.SkSL::Type"*)*, { i64, i8 } (%"class.SkSL::Expression"*, %"class.SkSL::Type"*)** %58, i64 8
  %60 = load { i64, i8 } (%"class.SkSL::Expression"*, %"class.SkSL::Type"*)*, { i64, i8 } (%"class.SkSL::Expression"*, %"class.SkSL::Type"*)** %59, align 8
  %61 = call { i64, i8 } %60(%"class.SkSL::Expression"* %53, %"class.SkSL::Type"* dereferenceable(184) %56) #14
  %62 = extractvalue { i64, i8 } %61, 0
  %63 = extractvalue { i64, i8 } %61, 1
  %64 = and i8 %63, 1
  %65 = or i8 %64, %46
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %67, label %73

67:                                               ; preds = %44
  %68 = lshr i64 %62, 32
  %69 = trunc i64 %68 to i32
  %70 = trunc i64 %62 to i32
  %71 = add nsw i32 %47, %70
  %72 = add nsw i32 %48, %69
  br label %73

73:                                               ; preds = %44, %67
  %74 = phi i32 [ %71, %67 ], [ 0, %44 ]
  %75 = phi i32 [ %72, %67 ], [ 0, %44 ]
  %76 = phi i8 [ 0, %67 ], [ 1, %44 ]
  %77 = add nuw nsw i64 %45, 1
  %78 = load i64, i64* %16, align 8
  %79 = lshr i64 %78, 1
  %80 = and i64 %79, 2147483647
  %81 = icmp ult i64 %77, %80
  br i1 %81, label %44, label %36

82:                                               ; preds = %21, %36
  %83 = phi i64 [ %43, %36 ], [ 0, %21 ]
  %84 = phi i8 [ %39, %36 ], [ 1, %21 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #14
  %85 = load i64, i64* %25, align 8
  %86 = and i64 %85, 1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %90, label %88

88:                                               ; preds = %82
  %89 = load i8*, i8** %26, align 8
  call void @_Z7sk_freePv(i8* %89) #14
  br label %90

90:                                               ; preds = %82, %88
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %22) #14
  br label %91

91:                                               ; preds = %3, %90
  %92 = phi i64 [ %83, %90 ], [ 0, %3 ]
  %93 = phi i8 [ %84, %90 ], [ 1, %3 ]
  %94 = insertvalue { i64, i8 } undef, i64 %92, 0
  %95 = insertvalue { i64, i8 } %94, i8 %93, 1
  ret { i64, i8 } %95
}

declare zeroext i1 @_ZNK4SkSL19FunctionDeclaration19determineFinalTypesERK9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEELb0EEPS1_ILi8EPKNS_4TypeELb0EEPSD_(%"class.SkSL::FunctionDeclaration"*, %class.SkSTArray.215* dereferenceable(32), %class.SkSTArray.352*, %"class.SkSL::Type"**) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator4callEiNSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEE9SkSTArrayILi2ES6_Lb0EE(%"class.SkSL::IRGenerator"*, i32, %"class.SkSL::Expression"*, %class.SkSTArray.215*) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.SkSTArray.215, align 8
  %6 = alloca %class.SkSTArray.215, align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = alloca %"class.SkSL::String", align 8
  %10 = alloca %"class.SkSL::String", align 8
  %11 = alloca %"class.SkSL::String", align 8
  %12 = alloca [16 x %"class.SkSL::Type"*], align 16
  %13 = alloca %class.SkSTArray.215, align 8
  %14 = alloca %"class.SkSL::String", align 8
  %15 = alloca %"class.SkSL::String", align 8
  %16 = alloca %"class.SkSL::String", align 8
  %17 = alloca %"class.SkSL::String", align 8
  %18 = alloca %"class.SkSL::String", align 8
  %19 = alloca %"class.SkSL::String", align 8
  %20 = alloca %"class.SkSL::String", align 8
  %21 = alloca %class.SkSTArray.215, align 8
  %22 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %2, i64 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  switch i32 %23, label %547 [
    i32 54, label %24
    i32 42, label %69
    i32 46, label %246
  ]

24:                                               ; preds = %4
  %25 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %26 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %25, align 8
  %27 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %2, i64 1
  %28 = bitcast %"class.SkSL::Expression"* %27 to %"class.SkSL::Type"**
  %29 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %28, align 8
  %30 = getelementptr inbounds %class.SkSTArray.215, %class.SkSTArray.215* %6, i64 0, i32 0, i32 0, i64 16
  %31 = getelementptr inbounds %class.SkSTArray.215, %class.SkSTArray.215* %6, i64 0, i32 0, i32 0, i64 0
  %32 = getelementptr inbounds %class.SkSTArray.215, %class.SkSTArray.215* %6, i64 0, i32 0, i32 0, i64 24
  %33 = bitcast i8* %32 to i64*
  %34 = bitcast i8* %30 to i8**
  store i8* %31, i8** %34, align 8
  store i64 17179869184, i64* %33, align 8
  %35 = bitcast i8* %30 to %class.SkTArray.217*
  %36 = getelementptr inbounds %class.SkSTArray.215, %class.SkSTArray.215* %3, i64 0, i32 0, i32 0, i64 16
  %37 = bitcast i8* %36 to %class.SkTArray.217*
  %38 = call dereferenceable(16) %class.SkTArray.217* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray.217* %35, %class.SkTArray.217* dereferenceable(16) %37) #14
  %39 = call %"class.SkSL::Expression"* @_ZN4SkSL11Constructor7ConvertERKNS_7ContextEiRKNS_4TypeE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS8_14default_deleteISA_EEEELb0EE(%"class.SkSL::Context"* dereferenceable(744) %26, i32 %1, %"class.SkSL::Type"* dereferenceable(184) %29, %class.SkSTArray.215* nonnull %6) #14
  %40 = ptrtoint %"class.SkSL::Expression"* %39 to i64
  %41 = load i64, i64* %33, align 8
  %42 = and i64 %41, 4294967294
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %46, label %44

44:                                               ; preds = %24
  %45 = bitcast i8* %30 to %"class.std::__1::unique_ptr.157"**
  br label %50

46:                                               ; preds = %61, %24
  %47 = phi i64 [ %41, %24 ], [ %63, %61 ]
  %48 = and i64 %47, 1
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %552, label %67

50:                                               ; preds = %61, %44
  %51 = phi i64 [ 0, %44 ], [ %62, %61 ]
  %52 = load %"class.std::__1::unique_ptr.157"*, %"class.std::__1::unique_ptr.157"** %45, align 8
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157"* %52, i64 %51, i32 0, i32 0, i32 0
  %54 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %53, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %53, align 8
  %55 = icmp eq %"class.SkSL::Expression"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %50
  %57 = bitcast %"class.SkSL::Expression"* %54 to void (%"class.SkSL::Expression"*)***
  %58 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %58, i64 1
  %60 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %59, align 8
  call void %60(%"class.SkSL::Expression"* nonnull %54) #14
  br label %61

61:                                               ; preds = %56, %50
  %62 = add nuw nsw i64 %51, 1
  %63 = load i64, i64* %33, align 8
  %64 = lshr i64 %63, 1
  %65 = and i64 %64, 2147483647
  %66 = icmp ult i64 %62, %65
  br i1 %66, label %50, label %46

67:                                               ; preds = %46
  %68 = load i8*, i8** %34, align 8
  call void @_Z7sk_freePv(i8* %68) #14
  br label %552

69:                                               ; preds = %4
  %70 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %2, i64 1
  %71 = bitcast %"class.SkSL::Expression"* %70 to %"class.SkSL::ExternalFunction"**
  %72 = load %"class.SkSL::ExternalFunction"*, %"class.SkSL::ExternalFunction"** %71, align 8
  %73 = bitcast %"class.SkSL::ExternalFunction"* %72 to i32 (%"class.SkSL::ExternalFunction"*)***
  %74 = load i32 (%"class.SkSL::ExternalFunction"*)**, i32 (%"class.SkSL::ExternalFunction"*)*** %73, align 8
  %75 = getelementptr inbounds i32 (%"class.SkSL::ExternalFunction"*)*, i32 (%"class.SkSL::ExternalFunction"*)** %74, i64 3
  %76 = load i32 (%"class.SkSL::ExternalFunction"*)*, i32 (%"class.SkSL::ExternalFunction"*)** %75, align 8
  %77 = tail call i32 %76(%"class.SkSL::ExternalFunction"* %72) #14
  %78 = getelementptr inbounds %class.SkSTArray.215, %class.SkSTArray.215* %3, i64 0, i32 0, i32 0, i64 16
  %79 = bitcast i8* %78 to %class.SkTArray.217*
  %80 = getelementptr inbounds %class.SkSTArray.215, %class.SkSTArray.215* %3, i64 0, i32 0, i32 0, i64 24
  %81 = bitcast i8* %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = lshr i64 %82, 1
  %84 = trunc i64 %83 to i32
  %85 = and i32 %84, 2147483647
  %86 = icmp eq i32 %77, %85
  br i1 %86, label %144, label %87

87:                                               ; preds = %69
  %88 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %89 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %88, align 8
  %90 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %89, i64 0, i32 1
  %91 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %90, align 8
  %92 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %92) #14
  %93 = bitcast %"class.SkSL::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93) #14
  %94 = bitcast %"class.SkSL::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %94) #14
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %10, i32 %77) #14
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %9, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.81, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %10) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %8, %"class.SkSL::String"* nonnull %9, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.82, i64 0, i64 0)) #14
  %95 = bitcast %"class.SkSL::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %95) #14
  %96 = load i64, i64* %81, align 8
  %97 = lshr i64 %96, 1
  %98 = trunc i64 %97 to i32
  %99 = and i32 %98, 2147483647
  call void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* nonnull sret %11, i32 %99) #14
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %7, %"class.SkSL::String"* nonnull %8, %"class.SkSL::String"* nonnull dereferenceable(24) %11) #14
  %100 = bitcast %"class.SkSL::ErrorReporter"* %91 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %101 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %100, align 8
  %102 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %101, i64 2
  %103 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %102, align 8
  call void %103(%"class.SkSL::ErrorReporter"* %91, i32 %1, %"class.SkSL::String"* nonnull %7) #14
  %104 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %105 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %104, i64 0, i32 1, i32 0
  %106 = load i8, i8* %105, align 1
  %107 = icmp slt i8 %106, 0
  br i1 %107, label %108, label %111

108:                                              ; preds = %87
  %109 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load i8*, i8** %109, align 8
  call void @_ZdlPv(i8* %110) #15
  br label %111

111:                                              ; preds = %87, %108
  %112 = bitcast %"class.SkSL::String"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %113 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %112, i64 0, i32 1, i32 0
  %114 = load i8, i8* %113, align 1
  %115 = icmp slt i8 %114, 0
  br i1 %115, label %116, label %119

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load i8*, i8** %117, align 8
  call void @_ZdlPv(i8* %118) #15
  br label %119

119:                                              ; preds = %111, %116
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %95) #14
  %120 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %122 = load i8, i8* %121, align 1
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %124, label %127

124:                                              ; preds = %119
  %125 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load i8*, i8** %125, align 8
  call void @_ZdlPv(i8* %126) #15
  br label %127

127:                                              ; preds = %119, %124
  %128 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %129 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %128, i64 0, i32 1, i32 0
  %130 = load i8, i8* %129, align 1
  %131 = icmp slt i8 %130, 0
  br i1 %131, label %132, label %135

132:                                              ; preds = %127
  %133 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load i8*, i8** %133, align 8
  call void @_ZdlPv(i8* %134) #15
  br label %135

135:                                              ; preds = %127, %132
  %136 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %137 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %136, i64 0, i32 1, i32 0
  %138 = load i8, i8* %137, align 1
  %139 = icmp slt i8 %138, 0
  br i1 %139, label %140, label %143

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load i8*, i8** %141, align 8
  call void @_ZdlPv(i8* %142) #15
  br label %143

143:                                              ; preds = %135, %140
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %94) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %92) #14
  br label %552

144:                                              ; preds = %69
  %145 = bitcast [16 x %"class.SkSL::Type"*]* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %145) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %145, i8 -86, i64 128, i1 false)
  %146 = getelementptr inbounds [16 x %"class.SkSL::Type"*], [16 x %"class.SkSL::Type"*]* %12, i64 0, i64 0
  %147 = bitcast %"class.SkSL::ExternalFunction"* %72 to void (%"class.SkSL::ExternalFunction"*, %"class.SkSL::Type"**)***
  %148 = load void (%"class.SkSL::ExternalFunction"*, %"class.SkSL::Type"**)**, void (%"class.SkSL::ExternalFunction"*, %"class.SkSL::Type"**)*** %147, align 8
  %149 = getelementptr inbounds void (%"class.SkSL::ExternalFunction"*, %"class.SkSL::Type"**)*, void (%"class.SkSL::ExternalFunction"*, %"class.SkSL::Type"**)** %148, i64 4
  %150 = load void (%"class.SkSL::ExternalFunction"*, %"class.SkSL::Type"**)*, void (%"class.SkSL::ExternalFunction"*, %"class.SkSL::Type"**)** %149, align 8
  call void %150(%"class.SkSL::ExternalFunction"* %72, %"class.SkSL::Type"** nonnull %146) #14
  %151 = icmp sgt i32 %77, 0
  br i1 %151, label %152, label %186

152:                                              ; preds = %144
  %153 = bitcast i8* %78 to %"class.std::__1::unique_ptr.157"**
  %154 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %155 = zext i32 %77 to i64
  %156 = load %"class.std::__1::unique_ptr.157"*, %"class.std::__1::unique_ptr.157"** %153, align 8
  br label %159

157:                                              ; preds = %180
  %158 = icmp eq i64 %185, %155
  br i1 %158, label %186, label %159

159:                                              ; preds = %157, %152
  %160 = phi %"class.std::__1::unique_ptr.157"* [ %156, %152 ], [ %181, %157 ]
  %161 = phi i64 [ 0, %152 ], [ %185, %157 ]
  %162 = getelementptr inbounds %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157"* %160, i64 %161, i32 0, i32 0, i32 0
  %163 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %162, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %162, align 8
  %164 = getelementptr inbounds [16 x %"class.SkSL::Type"*], [16 x %"class.SkSL::Type"*]* %12, i64 0, i64 %161
  %165 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %164, align 8
  %166 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %154, align 8
  %167 = call %"class.SkSL::Expression"* @_ZNK4SkSL4Type16coerceExpressionENSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEERKNS_7ContextE(%"class.SkSL::Type"* %165, %"class.SkSL::Expression"* %163, %"class.SkSL::Context"* dereferenceable(744) %166) #14
  %168 = ptrtoint %"class.SkSL::Expression"* %167 to i64
  %169 = load %"class.std::__1::unique_ptr.157"*, %"class.std::__1::unique_ptr.157"** %153, align 8
  %170 = getelementptr inbounds %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157"* %169, i64 %161
  %171 = getelementptr inbounds %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157"* %170, i64 0, i32 0, i32 0, i32 0
  %172 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %171, align 8
  %173 = bitcast %"class.std::__1::unique_ptr.157"* %170 to i64*
  store i64 %168, i64* %173, align 8
  %174 = icmp eq %"class.SkSL::Expression"* %172, null
  br i1 %174, label %180, label %175

175:                                              ; preds = %159
  %176 = bitcast %"class.SkSL::Expression"* %172 to void (%"class.SkSL::Expression"*)***
  %177 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %176, align 8
  %178 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %177, i64 1
  %179 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %178, align 8
  call void %179(%"class.SkSL::Expression"* nonnull %172) #14
  br label %180

180:                                              ; preds = %175, %159
  %181 = load %"class.std::__1::unique_ptr.157"*, %"class.std::__1::unique_ptr.157"** %153, align 8
  %182 = getelementptr inbounds %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157"* %181, i64 %161, i32 0, i32 0, i32 0
  %183 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %182, align 8
  %184 = icmp eq %"class.SkSL::Expression"* %183, null
  %185 = add nuw nsw i64 %161, 1
  br i1 %184, label %244, label %157

186:                                              ; preds = %157, %144
  %187 = getelementptr inbounds %class.SkSTArray.215, %class.SkSTArray.215* %5, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %187)
  %188 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 64) #14
  %189 = getelementptr inbounds %class.SkSTArray.215, %class.SkSTArray.215* %5, i64 0, i32 0, i32 0, i64 16
  %190 = getelementptr inbounds %class.SkSTArray.215, %class.SkSTArray.215* %5, i64 0, i32 0, i32 0, i64 24
  %191 = bitcast i8* %190 to i64*
  %192 = bitcast i8* %189 to i8**
  store i8* %187, i8** %192, align 8
  store i64 17179869184, i64* %191, align 8
  %193 = bitcast i8* %189 to %class.SkTArray.217*
  %194 = call dereferenceable(16) %class.SkTArray.217* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray.217* %193, %class.SkTArray.217* dereferenceable(16) %79) #14
  %195 = getelementptr inbounds %"class.SkSL::ExternalFunction", %"class.SkSL::ExternalFunction"* %72, i64 0, i32 0, i32 2
  %196 = bitcast %"class.SkSL::Type"** %195 to i64*
  %197 = load i64, i64* %196, align 8
  %198 = bitcast i8* %188 to i32 (...)***
  %199 = getelementptr inbounds i8, i8* %188, i64 8
  %200 = bitcast i8* %199 to i32*
  store i32 %1, i32* %200, align 8
  %201 = getelementptr inbounds i8, i8* %188, i64 12
  %202 = bitcast i8* %201 to i32*
  store i32 41, i32* %202, align 4
  %203 = getelementptr inbounds i8, i8* %188, i64 16
  %204 = bitcast i8* %203 to i64*
  store i64 %197, i64* %204, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL20ExternalFunctionCallE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %198, align 8
  %205 = getelementptr inbounds i8, i8* %188, i64 24
  %206 = bitcast i8* %205 to %"class.SkSL::ExternalFunction"**
  store %"class.SkSL::ExternalFunction"* %72, %"class.SkSL::ExternalFunction"** %206, align 8
  %207 = getelementptr inbounds i8, i8* %188, i64 48
  %208 = getelementptr inbounds i8, i8* %188, i64 32
  %209 = getelementptr inbounds i8, i8* %188, i64 56
  %210 = bitcast i8* %209 to i64*
  %211 = bitcast i8* %207 to i8**
  store i8* %208, i8** %211, align 8
  store i64 17179869184, i64* %210, align 8
  %212 = bitcast i8* %207 to %class.SkTArray.217*
  %213 = call dereferenceable(16) %class.SkTArray.217* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray.217* %212, %class.SkTArray.217* dereferenceable(16) %193) #14
  %214 = load i64, i64* %191, align 8
  %215 = and i64 %214, 4294967294
  %216 = icmp eq i64 %215, 0
  br i1 %216, label %219, label %217

217:                                              ; preds = %186
  %218 = bitcast i8* %189 to %"class.std::__1::unique_ptr.157"**
  br label %223

219:                                              ; preds = %234, %186
  %220 = phi i64 [ %214, %186 ], [ %236, %234 ]
  %221 = and i64 %220, 1
  %222 = icmp eq i64 %221, 0
  br i1 %222, label %242, label %240

223:                                              ; preds = %234, %217
  %224 = phi i64 [ 0, %217 ], [ %235, %234 ]
  %225 = load %"class.std::__1::unique_ptr.157"*, %"class.std::__1::unique_ptr.157"** %218, align 8
  %226 = getelementptr inbounds %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157"* %225, i64 %224, i32 0, i32 0, i32 0
  %227 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %226, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %226, align 8
  %228 = icmp eq %"class.SkSL::Expression"* %227, null
  br i1 %228, label %234, label %229

229:                                              ; preds = %223
  %230 = bitcast %"class.SkSL::Expression"* %227 to void (%"class.SkSL::Expression"*)***
  %231 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %230, align 8
  %232 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %231, i64 1
  %233 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %232, align 8
  call void %233(%"class.SkSL::Expression"* nonnull %227) #14
  br label %234

234:                                              ; preds = %229, %223
  %235 = add nuw nsw i64 %224, 1
  %236 = load i64, i64* %191, align 8
  %237 = lshr i64 %236, 1
  %238 = and i64 %237, 2147483647
  %239 = icmp ult i64 %235, %238
  br i1 %239, label %223, label %219

240:                                              ; preds = %219
  %241 = load i8*, i8** %192, align 8
  call void @_Z7sk_freePv(i8* %241) #14
  br label %242

242:                                              ; preds = %240, %219
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %187)
  %243 = ptrtoint i8* %188 to i64
  br label %244

244:                                              ; preds = %180, %242
  %245 = phi i64 [ %243, %242 ], [ 0, %180 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %145) #14
  br label %552

246:                                              ; preds = %4
  %247 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %2, i64 1
  %248 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %2, i64 1, i32 0, i32 1
  %249 = bitcast i32* %248 to i64*
  %250 = load i64, i64* %249, align 8
  %251 = bitcast %"class.SkSL::Expression"* %247 to i64*
  %252 = load i64, i64* %251, align 8
  %253 = sub i64 %250, %252
  %254 = ashr exact i64 %253, 3
  %255 = icmp ugt i64 %254, 1
  %256 = inttoptr i64 %252 to %"class.SkSL::FunctionDeclaration"**
  %257 = inttoptr i64 %250 to %"class.SkSL::FunctionDeclaration"**
  br i1 %255, label %258, label %506

258:                                              ; preds = %246
  %259 = icmp eq %"class.SkSL::FunctionDeclaration"** %257, %256
  br i1 %259, label %334, label %262

260:                                              ; preds = %288
  %261 = icmp eq %"class.SkSL::FunctionDeclaration"* %289, null
  br i1 %261, label %334, label %294

262:                                              ; preds = %258, %288
  %263 = phi i8 [ %291, %288 ], [ 1, %258 ]
  %264 = phi i64 [ %290, %288 ], [ 0, %258 ]
  %265 = phi %"class.SkSL::FunctionDeclaration"* [ %289, %288 ], [ null, %258 ]
  %266 = phi %"class.SkSL::FunctionDeclaration"** [ %292, %288 ], [ %256, %258 ]
  %267 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %266, align 8
  %268 = tail call { i64, i8 } @_ZN4SkSL11IRGenerator8callCostERKNS_19FunctionDeclarationERK9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS5_14default_deleteIS7_EEEELb0EE(%"class.SkSL::IRGenerator"* undef, %"class.SkSL::FunctionDeclaration"* dereferenceable(96) %267, %class.SkSTArray.215* dereferenceable(32) %3)
  %269 = extractvalue { i64, i8 } %268, 0
  %270 = extractvalue { i64, i8 } %268, 1
  %271 = trunc i64 %269 to i32
  %272 = lshr i64 %269, 32
  %273 = trunc i64 %272 to i32
  %274 = trunc i64 %264 to i32
  %275 = lshr i64 %264, 32
  %276 = trunc i64 %275 to i32
  %277 = icmp ult i8 %270, %263
  br i1 %277, label %286, label %278

278:                                              ; preds = %262
  %279 = icmp ugt i8 %270, %263
  br i1 %279, label %288, label %280

280:                                              ; preds = %278
  %281 = icmp slt i32 %273, %276
  br i1 %281, label %286, label %282

282:                                              ; preds = %280
  %283 = icmp sle i32 %273, %276
  %284 = icmp slt i32 %271, %274
  %285 = and i1 %284, %283
  br i1 %285, label %286, label %288

286:                                              ; preds = %282, %280, %262
  %287 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %266, align 8
  br label %288

288:                                              ; preds = %282, %278, %286
  %289 = phi %"class.SkSL::FunctionDeclaration"* [ %287, %286 ], [ %265, %278 ], [ %265, %282 ]
  %290 = phi i64 [ %269, %286 ], [ %264, %278 ], [ %264, %282 ]
  %291 = phi i8 [ %270, %286 ], [ %263, %278 ], [ %263, %282 ]
  %292 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %266, i64 1
  %293 = icmp eq %"class.SkSL::FunctionDeclaration"** %292, %257
  br i1 %293, label %260, label %262

294:                                              ; preds = %260
  %295 = getelementptr inbounds %class.SkSTArray.215, %class.SkSTArray.215* %13, i64 0, i32 0, i32 0, i64 16
  %296 = getelementptr inbounds %class.SkSTArray.215, %class.SkSTArray.215* %13, i64 0, i32 0, i32 0, i64 0
  %297 = getelementptr inbounds %class.SkSTArray.215, %class.SkSTArray.215* %13, i64 0, i32 0, i32 0, i64 24
  %298 = bitcast i8* %297 to i64*
  %299 = bitcast i8* %295 to i8**
  store i8* %296, i8** %299, align 8
  store i64 17179869184, i64* %298, align 8
  %300 = bitcast i8* %295 to %class.SkTArray.217*
  %301 = getelementptr inbounds %class.SkSTArray.215, %class.SkSTArray.215* %3, i64 0, i32 0, i32 0, i64 16
  %302 = bitcast i8* %301 to %class.SkTArray.217*
  %303 = call dereferenceable(16) %class.SkTArray.217* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray.217* %300, %class.SkTArray.217* dereferenceable(16) %302) #14
  %304 = call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator4callEiRKNS_19FunctionDeclarationE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS5_14default_deleteIS7_EEEELb0EE(%"class.SkSL::IRGenerator"* %0, i32 %1, %"class.SkSL::FunctionDeclaration"* nonnull dereferenceable(96) %289, %class.SkSTArray.215* nonnull %13)
  %305 = ptrtoint %"class.SkSL::Expression"* %304 to i64
  %306 = load i64, i64* %298, align 8
  %307 = and i64 %306, 4294967294
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %311, label %309

309:                                              ; preds = %294
  %310 = bitcast i8* %295 to %"class.std::__1::unique_ptr.157"**
  br label %315

311:                                              ; preds = %326, %294
  %312 = phi i64 [ %306, %294 ], [ %328, %326 ]
  %313 = and i64 %312, 1
  %314 = icmp eq i64 %313, 0
  br i1 %314, label %552, label %332

315:                                              ; preds = %326, %309
  %316 = phi i64 [ 0, %309 ], [ %327, %326 ]
  %317 = load %"class.std::__1::unique_ptr.157"*, %"class.std::__1::unique_ptr.157"** %310, align 8
  %318 = getelementptr inbounds %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157"* %317, i64 %316, i32 0, i32 0, i32 0
  %319 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %318, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %318, align 8
  %320 = icmp eq %"class.SkSL::Expression"* %319, null
  br i1 %320, label %326, label %321

321:                                              ; preds = %315
  %322 = bitcast %"class.SkSL::Expression"* %319 to void (%"class.SkSL::Expression"*)***
  %323 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %322, align 8
  %324 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %323, i64 1
  %325 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %324, align 8
  call void %325(%"class.SkSL::Expression"* nonnull %319) #14
  br label %326

326:                                              ; preds = %321, %315
  %327 = add nuw nsw i64 %316, 1
  %328 = load i64, i64* %298, align 8
  %329 = lshr i64 %328, 1
  %330 = and i64 %329, 2147483647
  %331 = icmp ult i64 %327, %330
  br i1 %331, label %315, label %311

332:                                              ; preds = %311
  %333 = load i8*, i8** %299, align 8
  call void @_Z7sk_freePv(i8* %333) #14
  br label %552

334:                                              ; preds = %258, %260
  %335 = bitcast %"class.SkSL::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %335) #14
  %336 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %337 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %338 = bitcast %"class.SkSL::String"* %15 to i8*
  %339 = bitcast %"class.SkSL::String"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %339, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %338) #14
  %340 = bitcast %"class.SkSL::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %340) #14
  %341 = bitcast %"class.SkSL::Expression"* %247 to %"class.SkSL::Symbol"***
  %342 = load %"class.SkSL::Symbol"**, %"class.SkSL::Symbol"*** %341, align 8
  %343 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %342, align 8
  %344 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %343, i64 0, i32 1, i32 0
  %345 = load i8*, i8** %344, align 8
  %346 = getelementptr inbounds %"class.SkSL::Symbol", %"class.SkSL::Symbol"* %343, i64 0, i32 1, i32 1
  %347 = load i64, i64* %346, align 8
  %348 = icmp ugt i64 %347, -17
  br i1 %348, label %349, label %351

349:                                              ; preds = %334
  %350 = bitcast %"class.SkSL::String"* %16 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %350) #16
  unreachable

351:                                              ; preds = %334
  %352 = icmp ult i64 %347, 23
  br i1 %352, label %361, label %353

353:                                              ; preds = %351
  %354 = add nuw i64 %347, 16
  %355 = and i64 %354, -16
  %356 = tail call i8* @_Znwm(i64 %355) #15
  %357 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %356, i8** %357, align 8
  %358 = or i64 %355, -9223372036854775808
  %359 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %358, i64* %359, align 8
  %360 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %347, i64* %360, align 8
  br label %366

361:                                              ; preds = %351
  %362 = trunc i64 %347 to i8
  %363 = bitcast %"class.SkSL::String"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %364 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %363, i64 0, i32 1, i32 0
  store i8 %362, i8* %364, align 1
  %365 = icmp eq i64 %347, 0
  br i1 %365, label %368, label %366

366:                                              ; preds = %361, %353
  %367 = phi i8* [ %356, %353 ], [ %340, %361 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %367, i8* align 1 %345, i64 %347, i1 false) #14
  br label %368

368:                                              ; preds = %361, %366
  %369 = phi i8* [ %340, %361 ], [ %367, %366 ]
  %370 = getelementptr inbounds i8, i8* %369, i64 %347
  store i8 0, i8* %370, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %15, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.83, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %16) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %14, %"class.SkSL::String"* nonnull %15, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.84, i64 0, i64 0)) #14
  %371 = bitcast %"class.SkSL::String"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %372 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %371, i64 0, i32 1, i32 0
  %373 = load i8, i8* %372, align 1
  %374 = icmp slt i8 %373, 0
  br i1 %374, label %375, label %378

375:                                              ; preds = %368
  %376 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %377 = load i8*, i8** %376, align 8
  call void @_ZdlPv(i8* %377) #15
  br label %378

378:                                              ; preds = %368, %375
  %379 = bitcast %"class.SkSL::String"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %380 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %379, i64 0, i32 1, i32 0
  %381 = load i8, i8* %380, align 1
  %382 = icmp slt i8 %381, 0
  br i1 %382, label %383, label %386

383:                                              ; preds = %378
  %384 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %385 = load i8*, i8** %384, align 8
  call void @_ZdlPv(i8* %385) #15
  br label %386

386:                                              ; preds = %378, %383
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %340) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %338) #14
  %387 = bitcast %"class.SkSL::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %387) #14
  %388 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %387, i8 0, i64 24, i1 false) #14
  %389 = getelementptr inbounds %class.SkSTArray.215, %class.SkSTArray.215* %3, i64 0, i32 0, i32 0, i64 24
  %390 = bitcast i8* %389 to i64*
  %391 = load i64, i64* %390, align 8
  %392 = and i64 %391, 4294967294
  %393 = icmp eq i64 %392, 0
  br i1 %393, label %410, label %394

394:                                              ; preds = %386
  %395 = getelementptr inbounds %class.SkSTArray.215, %class.SkSTArray.215* %3, i64 0, i32 0, i32 0, i64 16
  %396 = bitcast %"class.SkSL::String"* %18 to i8*
  %397 = bitcast %"class.SkSL::String"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %398 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %397, i64 0, i32 1, i32 0
  %399 = bitcast %"class.SkSL::String"* %18 to i16*
  %400 = getelementptr inbounds i8, i8* %396, i64 2
  %401 = bitcast %"class.SkSL::String"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %402 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %401, i64 0, i32 1, i32 0
  %403 = bitcast %"class.SkSL::String"* %19 to i8*
  %404 = bitcast i8* %395 to %"class.std::__1::unique_ptr.157"**
  %405 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %406 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %407 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %408 = bitcast %"class.SkSL::String"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %409 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %408, i64 0, i32 1, i32 0
  br label %451

410:                                              ; preds = %500, %386
  %411 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* nonnull %14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86, i64 0, i64 0)) #14
  %412 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %413 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %412, align 8
  %414 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %413, i64 0, i32 1
  %415 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %414, align 8
  %416 = bitcast %"class.SkSL::String"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %417 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %416, i64 0, i32 1, i32 0
  %418 = load i8, i8* %417, align 1
  %419 = icmp slt i8 %418, 0
  br i1 %419, label %422, label %420

420:                                              ; preds = %410
  %421 = bitcast %"class.SkSL::String"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %421, i8* nonnull align 8 %335, i64 24, i1 false) #14
  br label %426

422:                                              ; preds = %410
  %423 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %20, i64 0, i32 0
  %424 = load i8*, i8** %336, align 8
  %425 = load i64, i64* %337, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %423, i8* %424, i64 %425) #14
  br label %426

426:                                              ; preds = %420, %422
  %427 = bitcast %"class.SkSL::ErrorReporter"* %415 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %428 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %427, align 8
  %429 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %428, i64 2
  %430 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %429, align 8
  call void %430(%"class.SkSL::ErrorReporter"* %415, i32 %1, %"class.SkSL::String"* nonnull %20) #14
  %431 = bitcast %"class.SkSL::String"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %432 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %431, i64 0, i32 1, i32 0
  %433 = load i8, i8* %432, align 1
  %434 = icmp slt i8 %433, 0
  br i1 %434, label %435, label %438

435:                                              ; preds = %426
  %436 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %437 = load i8*, i8** %436, align 8
  call void @_ZdlPv(i8* %437) #15
  br label %438

438:                                              ; preds = %426, %435
  %439 = bitcast %"class.SkSL::String"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %440 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %439, i64 0, i32 1, i32 0
  %441 = load i8, i8* %440, align 1
  %442 = icmp slt i8 %441, 0
  br i1 %442, label %443, label %445

443:                                              ; preds = %438
  %444 = load i8*, i8** %388, align 8
  call void @_ZdlPv(i8* %444) #15
  br label %445

445:                                              ; preds = %438, %443
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %387) #14
  %446 = load i8, i8* %417, align 1
  %447 = icmp slt i8 %446, 0
  br i1 %447, label %448, label %450

448:                                              ; preds = %445
  %449 = load i8*, i8** %336, align 8
  call void @_ZdlPv(i8* %449) #15
  br label %450

450:                                              ; preds = %445, %448
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %335) #14
  br label %552

451:                                              ; preds = %394, %500
  %452 = phi i64 [ 0, %394 ], [ %501, %500 ]
  %453 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* nonnull %14, %"class.SkSL::String"* nonnull dereferenceable(24) %17) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %396) #14
  store i8 2, i8* %398, align 1
  store i16 8236, i16* %399, align 8
  store i8 0, i8* %400, align 2
  %454 = load i8, i8* %402, align 1
  %455 = icmp slt i8 %454, 0
  br i1 %455, label %456, label %458

456:                                              ; preds = %451
  %457 = load i8*, i8** %388, align 8
  call void @_ZdlPv(i8* %457) #15
  br label %458

458:                                              ; preds = %451, %456
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %387, i8* nonnull align 8 %396, i64 24, i1 false) #14
  %459 = load %"class.std::__1::unique_ptr.157"*, %"class.std::__1::unique_ptr.157"** %404, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %396) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %403) #14
  %460 = shl i64 %452, 32
  %461 = ashr exact i64 %460, 32
  %462 = getelementptr inbounds %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157"* %459, i64 %461, i32 0, i32 0, i32 0
  %463 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %462, align 8
  %464 = bitcast %"class.SkSL::Expression"* %463 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %465 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %464, align 8
  %466 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %465, i64 3
  %467 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %466, align 8
  %468 = call dereferenceable(184) %"class.SkSL::Type"* %467(%"class.SkSL::Expression"* %463) #14
  %469 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %468, i64 0, i32 18
  %470 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %469, align 8, !noalias !100
  %471 = icmp eq %"class.SkSL::Type"* %470, null
  %472 = select i1 %471, %"class.SkSL::Type"* %468, %"class.SkSL::Type"* %470
  %473 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %472, i64 0, i32 0, i32 1, i32 0
  %474 = load i8*, i8** %473, align 8, !noalias !100
  %475 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %472, i64 0, i32 0, i32 1, i32 1
  %476 = load i64, i64* %475, align 8, !noalias !100
  %477 = icmp ugt i64 %476, -17
  br i1 %477, label %478, label %480

478:                                              ; preds = %458
  %479 = bitcast %"class.SkSL::String"* %19 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %479) #16
  unreachable

480:                                              ; preds = %458
  %481 = icmp ult i64 %476, 23
  br i1 %481, label %487, label %482

482:                                              ; preds = %480
  %483 = add nuw i64 %476, 16
  %484 = and i64 %483, -16
  %485 = call i8* @_Znwm(i64 %484) #15
  store i8* %485, i8** %405, align 8, !alias.scope !100
  %486 = or i64 %484, -9223372036854775808
  store i64 %486, i64* %406, align 8, !alias.scope !100
  store i64 %476, i64* %407, align 8, !alias.scope !100
  br label %490

487:                                              ; preds = %480
  %488 = trunc i64 %476 to i8
  store i8 %488, i8* %409, align 1, !alias.scope !100
  %489 = icmp eq i64 %476, 0
  br i1 %489, label %492, label %490

490:                                              ; preds = %487, %482
  %491 = phi i8* [ %485, %482 ], [ %403, %487 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %491, i8* align 1 %474, i64 %476, i1 false) #14
  br label %492

492:                                              ; preds = %487, %490
  %493 = phi i8* [ %403, %487 ], [ %491, %490 ]
  %494 = getelementptr inbounds i8, i8* %493, i64 %476
  store i8 0, i8* %494, align 1
  %495 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* nonnull %14, %"class.SkSL::String"* nonnull dereferenceable(24) %19) #14
  %496 = load i8, i8* %409, align 1
  %497 = icmp slt i8 %496, 0
  br i1 %497, label %498, label %500

498:                                              ; preds = %492
  %499 = load i8*, i8** %405, align 8
  call void @_ZdlPv(i8* %499) #15
  br label %500

500:                                              ; preds = %492, %498
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %403) #14
  %501 = add nuw nsw i64 %452, 1
  %502 = load i64, i64* %390, align 8
  %503 = lshr i64 %502, 1
  %504 = and i64 %503, 2147483647
  %505 = icmp ult i64 %501, %504
  br i1 %505, label %451, label %410

506:                                              ; preds = %246
  %507 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %256, align 8
  %508 = getelementptr inbounds %class.SkSTArray.215, %class.SkSTArray.215* %21, i64 0, i32 0, i32 0, i64 16
  %509 = getelementptr inbounds %class.SkSTArray.215, %class.SkSTArray.215* %21, i64 0, i32 0, i32 0, i64 0
  %510 = getelementptr inbounds %class.SkSTArray.215, %class.SkSTArray.215* %21, i64 0, i32 0, i32 0, i64 24
  %511 = bitcast i8* %510 to i64*
  %512 = bitcast i8* %508 to i8**
  store i8* %509, i8** %512, align 8
  store i64 17179869184, i64* %511, align 8
  %513 = bitcast i8* %508 to %class.SkTArray.217*
  %514 = getelementptr inbounds %class.SkSTArray.215, %class.SkSTArray.215* %3, i64 0, i32 0, i32 0, i64 16
  %515 = bitcast i8* %514 to %class.SkTArray.217*
  %516 = call dereferenceable(16) %class.SkTArray.217* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray.217* %513, %class.SkTArray.217* dereferenceable(16) %515) #14
  %517 = call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator4callEiRKNS_19FunctionDeclarationE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS5_14default_deleteIS7_EEEELb0EE(%"class.SkSL::IRGenerator"* %0, i32 %1, %"class.SkSL::FunctionDeclaration"* dereferenceable(96) %507, %class.SkSTArray.215* nonnull %21)
  %518 = ptrtoint %"class.SkSL::Expression"* %517 to i64
  %519 = load i64, i64* %511, align 8
  %520 = and i64 %519, 4294967294
  %521 = icmp eq i64 %520, 0
  br i1 %521, label %524, label %522

522:                                              ; preds = %506
  %523 = bitcast i8* %508 to %"class.std::__1::unique_ptr.157"**
  br label %528

524:                                              ; preds = %539, %506
  %525 = phi i64 [ %519, %506 ], [ %541, %539 ]
  %526 = and i64 %525, 1
  %527 = icmp eq i64 %526, 0
  br i1 %527, label %552, label %545

528:                                              ; preds = %539, %522
  %529 = phi i64 [ 0, %522 ], [ %540, %539 ]
  %530 = load %"class.std::__1::unique_ptr.157"*, %"class.std::__1::unique_ptr.157"** %523, align 8
  %531 = getelementptr inbounds %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157"* %530, i64 %529, i32 0, i32 0, i32 0
  %532 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %531, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %531, align 8
  %533 = icmp eq %"class.SkSL::Expression"* %532, null
  br i1 %533, label %539, label %534

534:                                              ; preds = %528
  %535 = bitcast %"class.SkSL::Expression"* %532 to void (%"class.SkSL::Expression"*)***
  %536 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %535, align 8
  %537 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %536, i64 1
  %538 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %537, align 8
  call void %538(%"class.SkSL::Expression"* nonnull %532) #14
  br label %539

539:                                              ; preds = %534, %528
  %540 = add nuw nsw i64 %529, 1
  %541 = load i64, i64* %511, align 8
  %542 = lshr i64 %541, 1
  %543 = and i64 %542, 2147483647
  %544 = icmp ult i64 %540, %543
  br i1 %544, label %528, label %524

545:                                              ; preds = %524
  %546 = load i8*, i8** %512, align 8
  call void @_Z7sk_freePv(i8* %546) #14
  br label %552

547:                                              ; preds = %4
  %548 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %549 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %548, align 8
  %550 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %549, i64 0, i32 1
  %551 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %550, align 8
  tail call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %551, i32 %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.87, i64 0, i64 0))
  br label %552

552:                                              ; preds = %545, %524, %332, %311, %67, %46, %450, %143, %244, %547
  %553 = phi i64 [ 0, %547 ], [ 0, %450 ], [ %245, %244 ], [ 0, %143 ], [ %40, %46 ], [ %40, %67 ], [ %305, %311 ], [ %305, %332 ], [ %518, %524 ], [ %518, %545 ]
  %554 = icmp eq %"class.SkSL::Expression"* %2, null
  br i1 %554, label %560, label %555

555:                                              ; preds = %552
  %556 = bitcast %"class.SkSL::Expression"* %2 to void (%"class.SkSL::Expression"*)***
  %557 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %556, align 8
  %558 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %557, i64 1
  %559 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %558, align 8
  call void %559(%"class.SkSL::Expression"* nonnull %2) #14
  br label %560

560:                                              ; preds = %552, %555
  %561 = inttoptr i64 %553 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %561
}

declare %"class.SkSL::Expression"* @_ZN4SkSL11Constructor7ConvertERKNS_7ContextEiRKNS_4TypeE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS8_14default_deleteISA_EEEELb0EE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Type"* dereferenceable(184), %class.SkSTArray.215*) local_unnamed_addr #2

declare void @_ZN4SkSL9to_stringEi(%"class.SkSL::String"* sret, i32) local_unnamed_addr #2

declare void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* sret, %"class.SkSL::String"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #2

declare dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #2

declare dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"*, i8*) local_unnamed_addr #2

declare %"class.SkSL::Expression"* @_ZN4SkSL16PrefixExpression7ConvertERKNS_7ContextENS_8OperatorENSt3__110unique_ptrINS_10ExpressionENS5_14default_deleteIS7_EEEE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Expression"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator14convertSwizzleENSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEENS_6StringE(%"class.SkSL::IRGenerator"* nocapture readonly, %"class.SkSL::Expression"*, %"class.SkSL::String"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = alloca %class.SkSTArray.362, align 8
  %10 = alloca %"class.SkSL::String", align 8
  %11 = alloca %class.SkSTArray.362, align 8
  %12 = ptrtoint %"class.SkSL::Expression"* %1 to i64
  %13 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %16 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %16, i64 3
  %18 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %17, align 8
  %19 = tail call dereferenceable(184) %"class.SkSL::Type"* %18(%"class.SkSL::Expression"* %1) #14
  %20 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %19, i64 0, i32 3
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 11
  br i1 %22, label %93, label %23

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %19, i64 0, i32 4
  %25 = load i32, i32* %24, align 4
  %26 = icmp ult i32 %25, 3
  br i1 %26, label %93, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %29 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %28, align 8
  %30 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %29, i64 0, i32 1
  %31 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %30, align 8
  %32 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #14
  %33 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #14
  %34 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %19, i64 0, i32 18
  %35 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %34, align 8, !noalias !103
  %36 = icmp eq %"class.SkSL::Type"* %35, null
  %37 = select i1 %36, %"class.SkSL::Type"* %19, %"class.SkSL::Type"* %35
  %38 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %37, i64 0, i32 0, i32 1, i32 0
  %39 = load i8*, i8** %38, align 8, !noalias !103
  %40 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %37, i64 0, i32 0, i32 1, i32 1
  %41 = load i64, i64* %40, align 8, !noalias !103
  %42 = icmp ugt i64 %41, -17
  br i1 %42, label %43, label %45

43:                                               ; preds = %27
  %44 = bitcast %"class.SkSL::String"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %44) #16
  unreachable

45:                                               ; preds = %27
  %46 = icmp ult i64 %41, 23
  br i1 %46, label %55, label %47

47:                                               ; preds = %45
  %48 = add nuw i64 %41, 16
  %49 = and i64 %48, -16
  %50 = tail call i8* @_Znwm(i64 %49) #15
  %51 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %50, i8** %51, align 8, !alias.scope !103
  %52 = or i64 %49, -9223372036854775808
  %53 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %52, i64* %53, align 8, !alias.scope !103
  %54 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %41, i64* %54, align 8, !alias.scope !103
  br label %60

55:                                               ; preds = %45
  %56 = trunc i64 %41 to i8
  %57 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  store i8 %56, i8* %58, align 1, !alias.scope !103
  %59 = icmp eq i64 %41, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %55, %47
  %61 = phi i8* [ %50, %47 ], [ %33, %55 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %61, i8* align 1 %39, i64 %41, i1 false) #14
  br label %62

62:                                               ; preds = %55, %60
  %63 = phi i8* [ %33, %55 ], [ %61, %60 ]
  %64 = getelementptr inbounds i8, i8* %63, i64 %41
  store i8 0, i8* %64, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %5, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.88, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %6) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::String"* nonnull %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #14
  %65 = bitcast %"class.SkSL::ErrorReporter"* %31 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %66 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %66, i64 2
  %68 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %67, align 8
  call void %68(%"class.SkSL::ErrorReporter"* %31, i32 %14, %"class.SkSL::String"* nonnull %4) #14
  %69 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  %71 = load i8, i8* %70, align 1
  %72 = icmp slt i8 %71, 0
  br i1 %72, label %73, label %76

73:                                               ; preds = %62
  %74 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  call void @_ZdlPv(i8* %75) #15
  br label %76

76:                                               ; preds = %62, %73
  %77 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  %79 = load i8, i8* %78, align 1
  %80 = icmp slt i8 %79, 0
  br i1 %80, label %81, label %84

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  call void @_ZdlPv(i8* %83) #15
  br label %84

84:                                               ; preds = %76, %81
  %85 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %85, i64 0, i32 1, i32 0
  %87 = load i8, i8* %86, align 1
  %88 = icmp slt i8 %87, 0
  br i1 %88, label %89, label %92

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load i8*, i8** %90, align 8
  call void @_ZdlPv(i8* %91) #15
  br label %92

92:                                               ; preds = %84, %89
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #14
  br label %258

93:                                               ; preds = %23, %3
  %94 = bitcast %"class.SkSL::String"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %95 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %94, i64 0, i32 1, i32 0
  %96 = load i8, i8* %95, align 1
  %97 = icmp slt i8 %96, 0
  br i1 %97, label %98, label %101

98:                                               ; preds = %93
  %99 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %100 = load i64, i64* %99, align 8
  br label %103

101:                                              ; preds = %93
  %102 = zext i8 %96 to i64
  br label %103

103:                                              ; preds = %98, %101
  %104 = phi i64 [ %100, %98 ], [ %102, %101 ]
  %105 = icmp ugt i64 %104, 4
  br i1 %105, label %106, label %131

106:                                              ; preds = %103
  %107 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %108 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %107, align 8
  %109 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %108, i64 0, i32 1
  %110 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %109, align 8
  %111 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %111) #14
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.89, i64 0, i64 0), %"class.SkSL::String"* dereferenceable(24) %2) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %7, %"class.SkSL::String"* nonnull %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #14
  %112 = bitcast %"class.SkSL::ErrorReporter"* %110 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %113 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %112, align 8
  %114 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %113, i64 2
  %115 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %114, align 8
  call void %115(%"class.SkSL::ErrorReporter"* %110, i32 %14, %"class.SkSL::String"* nonnull %7) #14
  %116 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %116, i64 0, i32 1, i32 0
  %118 = load i8, i8* %117, align 1
  %119 = icmp slt i8 %118, 0
  br i1 %119, label %120, label %123

120:                                              ; preds = %106
  %121 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load i8*, i8** %121, align 8
  call void @_ZdlPv(i8* %122) #15
  br label %123

123:                                              ; preds = %106, %120
  %124 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %125 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %124, i64 0, i32 1, i32 0
  %126 = load i8, i8* %125, align 1
  %127 = icmp slt i8 %126, 0
  br i1 %127, label %128, label %258

128:                                              ; preds = %123
  %129 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load i8*, i8** %129, align 8
  call void @_ZdlPv(i8* %130) #15
  br label %258

131:                                              ; preds = %103
  %132 = getelementptr inbounds %class.SkSTArray.362, %class.SkSTArray.362* %9, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %132) #14
  %133 = bitcast %class.SkSTArray.362* %9 to i64*
  store i64 -6148914691236517206, i64* %133, align 8
  %134 = getelementptr inbounds %class.SkSTArray.362, %class.SkSTArray.362* %9, i64 0, i32 0, i32 0, i64 8
  %135 = getelementptr inbounds %class.SkSTArray.362, %class.SkSTArray.362* %9, i64 0, i32 0, i32 0, i64 16
  %136 = bitcast i8* %135 to i64*
  %137 = bitcast i8* %134 to i8**
  store i8* %132, i8** %137, align 8
  store i64 34359738368, i64* %136, align 8
  br i1 %97, label %138, label %143

138:                                              ; preds = %131
  %139 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load i8*, i8** %139, align 8
  %141 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %142 = load i64, i64* %141, align 8
  br label %146

143:                                              ; preds = %131
  %144 = bitcast %"class.SkSL::String"* %2 to i8*
  %145 = zext i8 %96 to i64
  br label %146

146:                                              ; preds = %138, %143
  %147 = phi i8* [ %140, %138 ], [ %144, %143 ]
  %148 = phi i64 [ %142, %138 ], [ %145, %143 ]
  %149 = getelementptr inbounds i8, i8* %147, i64 %148
  %150 = icmp eq i64 %148, 0
  br i1 %150, label %151, label %154

151:                                              ; preds = %146
  %152 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %153 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %152, align 8
  br label %209

154:                                              ; preds = %146
  %155 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %19, i64 0, i32 8
  %156 = bitcast i8* %134 to %class.SkTArray.364*
  br label %157

157:                                              ; preds = %154, %190
  %158 = phi i8 [ 0, %154 ], [ %192, %190 ]
  %159 = phi i8* [ %147, %154 ], [ %202, %190 ]
  %160 = load i8, i8* %159, align 1
  %161 = sext i8 %160 to i32
  switch i32 %161, label %173 [
    i32 48, label %190
    i32 49, label %162
    i32 120, label %163
    i32 114, label %163
    i32 115, label %163
    i32 76, label %163
    i32 121, label %164
    i32 103, label %164
    i32 116, label %164
    i32 84, label %164
    i32 122, label %167
    i32 98, label %167
    i32 112, label %167
    i32 82, label %167
    i32 119, label %170
    i32 97, label %170
    i32 113, label %170
    i32 66, label %170
  ]

162:                                              ; preds = %157
  br label %190

163:                                              ; preds = %157, %157, %157, %157
  br label %190

164:                                              ; preds = %157, %157, %157, %157
  %165 = load i32, i32* %155, align 8
  %166 = icmp sgt i32 %165, 1
  br i1 %166, label %190, label %173

167:                                              ; preds = %157, %157, %157, %157
  %168 = load i32, i32* %155, align 8
  %169 = icmp sgt i32 %168, 2
  br i1 %169, label %190, label %173

170:                                              ; preds = %157, %157, %157, %157
  %171 = load i32, i32* %155, align 8
  %172 = icmp sgt i32 %171, 3
  br i1 %172, label %190, label %173

173:                                              ; preds = %164, %167, %170, %157
  %174 = sext i8 %160 to i32
  %175 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %176 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %175, align 8
  %177 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %176, i64 0, i32 1
  %178 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %177, align 8
  call void (%"class.SkSL::String"*, i8*, ...) @_ZN4SkSL6String6printfEPKcz(%"class.SkSL::String"* nonnull sret %10, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.90, i64 0, i64 0), i32 %174) #14
  %179 = bitcast %"class.SkSL::ErrorReporter"* %178 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %180 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %179, align 8
  %181 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %180, i64 2
  %182 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %181, align 8
  call void %182(%"class.SkSL::ErrorReporter"* %178, i32 %14, %"class.SkSL::String"* nonnull %10) #14
  %183 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %184 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %183, i64 0, i32 1, i32 0
  %185 = load i8, i8* %184, align 1
  %186 = icmp slt i8 %185, 0
  br i1 %186, label %187, label %250

187:                                              ; preds = %173
  %188 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %189 = load i8*, i8** %188, align 8
  call void @_ZdlPv(i8* %189) #15
  br label %250

190:                                              ; preds = %170, %167, %164, %157, %163, %162
  %191 = phi i8 [ 0, %163 ], [ 5, %162 ], [ 4, %157 ], [ 1, %164 ], [ 2, %167 ], [ 3, %170 ]
  %192 = phi i8 [ 1, %163 ], [ %158, %162 ], [ %158, %157 ], [ 1, %164 ], [ 1, %167 ], [ 1, %170 ]
  call void @_ZN8SkTArrayIaLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.364* %156, i32 1, i32 1) #14
  %193 = load i8*, i8** %137, align 8
  %194 = load i64, i64* %136, align 8
  %195 = lshr i64 %194, 1
  %196 = and i64 %195, 2147483647
  %197 = getelementptr inbounds i8, i8* %193, i64 %196
  %198 = add i64 %194, 2
  %199 = and i64 %198, 4294967294
  %200 = and i64 %194, -4294967295
  %201 = or i64 %199, %200
  store i64 %201, i64* %136, align 8
  store i8 %191, i8* %197, align 1
  %202 = getelementptr inbounds i8, i8* %159, i64 1
  %203 = icmp eq i8* %202, %149
  br i1 %203, label %204, label %157

204:                                              ; preds = %190
  %205 = and i8 %192, 1
  %206 = icmp eq i8 %205, 0
  %207 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %208 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %207, align 8
  br i1 %206, label %209, label %213

209:                                              ; preds = %151, %204
  %210 = phi %"class.SkSL::Context"* [ %153, %151 ], [ %208, %204 ]
  %211 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %210, i64 0, i32 1
  %212 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %211, align 8
  call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %212, i32 %14, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.91, i64 0, i64 0))
  br label %250

213:                                              ; preds = %204
  %214 = getelementptr inbounds %class.SkSTArray.362, %class.SkSTArray.362* %11, i64 0, i32 0, i32 0, i64 8
  %215 = getelementptr inbounds %class.SkSTArray.362, %class.SkSTArray.362* %11, i64 0, i32 0, i32 0, i64 0
  %216 = getelementptr inbounds %class.SkSTArray.362, %class.SkSTArray.362* %11, i64 0, i32 0, i32 0, i64 16
  %217 = bitcast i8* %216 to i64*
  %218 = bitcast i8* %214 to i8**
  store i8* %215, i8** %218, align 8
  %219 = bitcast i8* %214 to %class.SkTArray.364*
  store i64 34359738368, i64* %217, align 8
  %220 = load i64, i64* %136, align 8
  %221 = lshr i64 %220, 1
  %222 = trunc i64 %221 to i32
  %223 = and i32 %222, 2147483647
  call void @_ZN8SkTArrayIaLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.364* %219, i32 %223, i32 0) #14
  %224 = load i64, i64* %136, align 8
  %225 = and i64 %224, 4294967294
  %226 = load i64, i64* %217, align 8
  %227 = and i64 %226, -4294967295
  %228 = or i64 %227, %225
  store i64 %228, i64* %217, align 8
  %229 = load i8*, i8** %137, align 8
  %230 = icmp eq i64 %225, 0
  br i1 %230, label %242, label %231

231:                                              ; preds = %213, %231
  %232 = phi i64 [ %237, %231 ], [ 0, %213 ]
  %233 = load i8*, i8** %218, align 8
  %234 = getelementptr inbounds i8, i8* %233, i64 %232
  %235 = getelementptr inbounds i8, i8* %229, i64 %232
  %236 = load i8, i8* %235, align 1
  store i8 %236, i8* %234, align 1
  %237 = add nuw nsw i64 %232, 1
  %238 = load i64, i64* %217, align 8
  %239 = lshr i64 %238, 1
  %240 = and i64 %239, 2147483647
  %241 = icmp ult i64 %237, %240
  br i1 %241, label %231, label %242

242:                                              ; preds = %231, %213
  %243 = call %"class.SkSL::Expression"* @_ZN4SkSL7Swizzle7ConvertERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEE9SkSTArrayILi4EaLb0EE(%"class.SkSL::Context"* dereferenceable(744) %208, %"class.SkSL::Expression"* %1, %class.SkSTArray.362* nonnull %11) #14
  %244 = ptrtoint %"class.SkSL::Expression"* %243 to i64
  %245 = load i64, i64* %217, align 8
  %246 = and i64 %245, 1
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %250, label %248

248:                                              ; preds = %242
  %249 = load i8*, i8** %218, align 8
  call void @_Z7sk_freePv(i8* %249) #14
  br label %250

250:                                              ; preds = %187, %173, %248, %242, %209
  %251 = phi i64 [ %12, %209 ], [ 0, %242 ], [ 0, %248 ], [ %12, %173 ], [ %12, %187 ]
  %252 = phi i64 [ 0, %209 ], [ %244, %242 ], [ %244, %248 ], [ 0, %173 ], [ 0, %187 ]
  %253 = load i64, i64* %136, align 8
  %254 = and i64 %253, 1
  %255 = icmp eq i64 %254, 0
  br i1 %255, label %258, label %256

256:                                              ; preds = %250
  %257 = load i8*, i8** %137, align 8
  call void @_Z7sk_freePv(i8* %257) #14
  br label %258

258:                                              ; preds = %256, %250, %128, %123, %92
  %259 = phi i8* [ %32, %92 ], [ %111, %123 ], [ %111, %128 ], [ %132, %250 ], [ %132, %256 ]
  %260 = phi i64 [ %12, %92 ], [ %12, %123 ], [ %12, %128 ], [ %251, %250 ], [ %251, %256 ]
  %261 = phi i64 [ 0, %92 ], [ 0, %123 ], [ 0, %128 ], [ %252, %250 ], [ %252, %256 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %259) #14
  %262 = icmp eq i64 %260, 0
  br i1 %262, label %269, label %263

263:                                              ; preds = %258
  %264 = inttoptr i64 %260 to %"class.SkSL::Expression"*
  %265 = inttoptr i64 %260 to void (%"class.SkSL::Expression"*)***
  %266 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %265, align 8
  %267 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %266, i64 1
  %268 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %267, align 8
  call void %268(%"class.SkSL::Expression"* nonnull %264) #14
  br label %269

269:                                              ; preds = %258, %263
  %270 = inttoptr i64 %261 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %270
}

declare void @_ZN4SkSL6String6printfEPKcz(%"class.SkSL::String"* sret, i8*, ...) local_unnamed_addr #2

declare %"class.SkSL::Expression"* @_ZN4SkSL7Swizzle7ConvertERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEE9SkSTArrayILi4EaLb0EE(%"class.SkSL::Context"* dereferenceable(744), %"class.SkSL::Expression"*, %class.SkSTArray.362*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator16convertTypeFieldEiRKNS_4TypeENS_14StringFragmentE(%"class.SkSL::IRGenerator"* nocapture, i32, %"class.SkSL::Type"* dereferenceable(184), i8*, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca <2 x i64>, align 16
  %7 = bitcast <2 x i64>* %6 to %"struct.SkSL::StringFragment"*
  %8 = alloca <2 x i64>, align 16
  %9 = bitcast <2 x i64>* %8 to %"struct.SkSL::StringFragment"*
  %10 = alloca %"class.SkSL::String", align 8
  %11 = alloca %"class.SkSL::String", align 8
  %12 = alloca %"class.SkSL::String", align 8
  %13 = alloca %"class.SkSL::String", align 8
  %14 = alloca %"class.SkSL::String", align 8
  %15 = alloca %"class.SkSL::String", align 8
  %16 = alloca %"class.SkSL::String", align 8
  %17 = alloca %"class.SkSL::String", align 8
  %18 = alloca %"class.SkSL::String", align 8
  %19 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 10
  %20 = load %"class.std::__1::vector.137"*, %"class.std::__1::vector.137"** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %21, align 8
  %23 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %20, i64 0, i32 0, i32 1
  %24 = load %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %23, align 8
  %25 = icmp eq %"class.std::__1::unique_ptr.139"* %22, %24
  br i1 %25, label %54, label %26

26:                                               ; preds = %5
  %27 = bitcast <2 x i64>* %6 to i8*
  %28 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 0, i32 1, i32 0
  %29 = bitcast i8** %28 to <2 x i64>*
  br label %30

30:                                               ; preds = %26, %47
  %31 = phi %"class.std::__1::unique_ptr.139"* [ %22, %26 ], [ %48, %47 ]
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %31, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %32, align 8
  %34 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %33, i64 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #14
  br i1 %36, label %37, label %46

37:                                               ; preds = %30
  %38 = load <2 x i64>, <2 x i64>* %29, align 8
  store <2 x i64> %38, <2 x i64>* %6, align 16
  %39 = bitcast %"class.std::__1::unique_ptr.139"* %31 to %"class.SkSL::Enum"**
  %40 = load %"class.SkSL::Enum"*, %"class.SkSL::Enum"** %39, align 8
  %41 = getelementptr inbounds %"class.SkSL::Enum", %"class.SkSL::Enum"* %40, i64 0, i32 1, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr inbounds %"class.SkSL::Enum", %"class.SkSL::Enum"* %40, i64 0, i32 1, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %7, i8* %42, i64 %44) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #14
  br i1 %45, label %50, label %47

46:                                               ; preds = %30
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #14
  br label %47

47:                                               ; preds = %46, %37
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %31, i64 1
  %49 = icmp eq %"class.std::__1::unique_ptr.139"* %48, %24
  br i1 %49, label %54, label %30

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %31, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %51, align 8
  %53 = icmp eq %"class.SkSL::ProgramElement"* %52, null
  br i1 %53, label %54, label %290

54:                                               ; preds = %47, %5, %50
  %55 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 11
  %56 = load %"class.std::__1::vector.150"*, %"class.std::__1::vector.150"** %55, align 8
  %57 = getelementptr inbounds %"class.std::__1::vector.150", %"class.std::__1::vector.150"* %56, i64 0, i32 0, i32 0
  %58 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %57, align 8
  %59 = getelementptr inbounds %"class.std::__1::vector.150", %"class.std::__1::vector.150"* %56, i64 0, i32 0, i32 1
  %60 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %59, align 8
  %61 = icmp eq %"class.SkSL::ProgramElement"** %58, %60
  br i1 %61, label %87, label %62

62:                                               ; preds = %54
  %63 = bitcast <2 x i64>* %8 to i8*
  %64 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 0, i32 1, i32 0
  %65 = bitcast i8** %64 to <2 x i64>*
  br label %66

66:                                               ; preds = %62, %82
  %67 = phi %"class.SkSL::ProgramElement"** [ %58, %62 ], [ %83, %82 ]
  %68 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %67, align 8
  %69 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %68, i64 0, i32 0, i32 2
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63) #14
  br i1 %71, label %72, label %81

72:                                               ; preds = %66
  %73 = load <2 x i64>, <2 x i64>* %65, align 8
  store <2 x i64> %73, <2 x i64>* %8, align 16
  %74 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %68, i64 1
  %75 = bitcast %"class.SkSL::ProgramElement"* %74 to i8**
  %76 = load i8*, i8** %75, align 8
  %77 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %68, i64 1, i32 0, i32 1
  %78 = bitcast i32* %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %9, i8* %76, i64 %79) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #14
  br i1 %80, label %85, label %82

81:                                               ; preds = %66
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #14
  br label %82

82:                                               ; preds = %72, %81
  %83 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %67, i64 1
  %84 = icmp eq %"class.SkSL::ProgramElement"** %83, %60
  br i1 %84, label %87, label %66

85:                                               ; preds = %72
  %86 = icmp eq %"class.SkSL::ProgramElement"* %68, null
  br i1 %86, label %87, label %290

87:                                               ; preds = %82, %54, %85
  %88 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 15
  %89 = load i8, i8* %88, align 4, !range !2
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %91, label %224

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 5
  %93 = load %"class.SkSL::IRIntrinsicMap"*, %"class.SkSL::IRIntrinsicMap"** %92, align 8
  %94 = icmp eq %"class.SkSL::IRIntrinsicMap"* %93, null
  br i1 %94, label %224, label %95

95:                                               ; preds = %91
  %96 = bitcast %"class.SkSL::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %96) #14
  %97 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 0, i32 1, i32 0
  %98 = load i8*, i8** %97, align 8
  %99 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 0, i32 1, i32 1
  %100 = load i64, i64* %99, align 8
  %101 = icmp ugt i64 %100, -17
  br i1 %101, label %102, label %104

102:                                              ; preds = %95
  %103 = bitcast %"class.SkSL::String"* %10 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %103) #16
  unreachable

104:                                              ; preds = %95
  %105 = icmp ult i64 %100, 23
  br i1 %105, label %114, label %106

106:                                              ; preds = %104
  %107 = add nuw i64 %100, 16
  %108 = and i64 %107, -16
  %109 = call i8* @_Znwm(i64 %108) #15
  %110 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %109, i8** %110, align 8
  %111 = or i64 %108, -9223372036854775808
  %112 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %111, i64* %112, align 8
  %113 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %100, i64* %113, align 8
  br label %119

114:                                              ; preds = %104
  %115 = trunc i64 %100 to i8
  %116 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %116, i64 0, i32 1, i32 0
  store i8 %115, i8* %117, align 1
  %118 = icmp eq i64 %100, 0
  br i1 %118, label %121, label %119

119:                                              ; preds = %114, %106
  %120 = phi i8* [ %109, %106 ], [ %96, %114 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %120, i8* align 1 %98, i64 %100, i1 false) #14
  br label %121

121:                                              ; preds = %114, %119
  %122 = phi i8* [ %96, %114 ], [ %120, %119 ]
  %123 = getelementptr inbounds i8, i8* %122, i64 %100
  store i8 0, i8* %123, align 1
  br label %124

124:                                              ; preds = %129, %121
  %125 = phi %"class.SkSL::IRIntrinsicMap"* [ %93, %121 ], [ %131, %129 ]
  %126 = getelementptr inbounds %"class.SkSL::IRIntrinsicMap", %"class.SkSL::IRIntrinsicMap"* %125, i64 0, i32 0, i32 0
  %127 = call %"struct.std::__1::__hash_node_base.66"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_14IRIntrinsicMap9IntrinsicEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_(%"class.std::__1::__hash_table.62"* %126, %"class.SkSL::String"* nonnull dereferenceable(24) %10) #14
  %128 = icmp eq %"struct.std::__1::__hash_node_base.66"* %127, null
  br i1 %128, label %129, label %133

129:                                              ; preds = %124
  %130 = getelementptr inbounds %"class.SkSL::IRIntrinsicMap", %"class.SkSL::IRIntrinsicMap"* %125, i64 0, i32 1
  %131 = load %"class.SkSL::IRIntrinsicMap"*, %"class.SkSL::IRIntrinsicMap"** %130, align 8
  %132 = icmp eq %"class.SkSL::IRIntrinsicMap"* %131, null
  br i1 %132, label %142, label %124

133:                                              ; preds = %124
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base.66", %"struct.std::__1::__hash_node_base.66"* %127, i64 6
  %135 = bitcast %"struct.std::__1::__hash_node_base.66"* %134 to i8*
  %136 = load i8, i8* %135, align 8, !range !2
  %137 = icmp eq i8 %136, 0
  br i1 %137, label %138, label %142

138:                                              ; preds = %133
  store i8 1, i8* %135, align 8
  %139 = getelementptr inbounds %"struct.std::__1::__hash_node_base.66", %"struct.std::__1::__hash_node_base.66"* %127, i64 5
  %140 = bitcast %"struct.std::__1::__hash_node_base.66"* %139 to %"class.SkSL::ProgramElement"**
  %141 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %140, align 8
  br label %142

142:                                              ; preds = %129, %133, %138
  %143 = phi %"class.SkSL::ProgramElement"* [ %141, %138 ], [ null, %133 ], [ null, %129 ]
  %144 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %145 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %144, i64 0, i32 1, i32 0
  %146 = load i8, i8* %145, align 1
  %147 = icmp slt i8 %146, 0
  br i1 %147, label %148, label %151

148:                                              ; preds = %142
  %149 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = load i8*, i8** %149, align 8
  call void @_ZdlPv(i8* %150) #15
  br label %151

151:                                              ; preds = %142, %148
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %96) #14
  %152 = ptrtoint %"class.SkSL::ProgramElement"* %143 to i64
  %153 = icmp eq %"class.SkSL::ProgramElement"* %143, null
  br i1 %153, label %224, label %154

154:                                              ; preds = %151
  %155 = load %"class.std::__1::vector.150"*, %"class.std::__1::vector.150"** %55, align 8
  %156 = getelementptr inbounds %"class.std::__1::vector.150", %"class.std::__1::vector.150"* %155, i64 0, i32 0, i32 1
  %157 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %156, align 8
  %158 = getelementptr inbounds %"class.std::__1::vector.150", %"class.std::__1::vector.150"* %155, i64 0, i32 0, i32 2, i32 0, i32 0
  %159 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %158, align 8
  %160 = icmp eq %"class.SkSL::ProgramElement"** %157, %159
  %161 = ptrtoint %"class.SkSL::ProgramElement"** %159 to i64
  br i1 %160, label %167, label %162

162:                                              ; preds = %154
  %163 = bitcast %"class.SkSL::ProgramElement"** %157 to i64*
  store i64 %152, i64* %163, align 8
  %164 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %157, i64 1
  %165 = ptrtoint %"class.SkSL::ProgramElement"** %164 to i64
  %166 = bitcast %"class.SkSL::ProgramElement"*** %156 to i64*
  store i64 %165, i64* %166, align 8
  br label %290

167:                                              ; preds = %154
  %168 = ptrtoint %"class.SkSL::ProgramElement"** %157 to i64
  %169 = bitcast %"class.SkSL::ProgramElement"*** %156 to i64*
  %170 = bitcast %"class.std::__1::vector.150"* %155 to i64*
  %171 = load i64, i64* %170, align 8
  %172 = sub i64 %168, %171
  %173 = ashr exact i64 %172, 3
  %174 = add nsw i64 %173, 1
  %175 = icmp ugt i64 %174, 2305843009213693951
  br i1 %175, label %176, label %178

176:                                              ; preds = %167
  %177 = bitcast %"class.std::__1::vector.150"* %155 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %177) #16
  unreachable

178:                                              ; preds = %167
  %179 = bitcast %"class.SkSL::ProgramElement"*** %158 to i64*
  %180 = sub i64 %161, %171
  %181 = ashr exact i64 %180, 3
  %182 = icmp ult i64 %181, 1152921504606846975
  br i1 %182, label %183, label %191

183:                                              ; preds = %178
  %184 = ashr exact i64 %180, 2
  %185 = icmp ult i64 %184, %174
  %186 = select i1 %185, i64 %174, i64 %184
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %196, label %188

188:                                              ; preds = %183
  %189 = icmp ugt i64 %186, 2305843009213693951
  br i1 %189, label %190, label %191

190:                                              ; preds = %188
  call void @abort() #16
  unreachable

191:                                              ; preds = %188, %178
  %192 = phi i64 [ %186, %188 ], [ 2305843009213693951, %178 ]
  %193 = shl i64 %192, 3
  %194 = call i8* @_Znwm(i64 %193) #15
  %195 = bitcast i8* %194 to %"class.SkSL::ProgramElement"**
  br label %196

196:                                              ; preds = %191, %183
  %197 = phi i64 [ %192, %191 ], [ 0, %183 ]
  %198 = phi %"class.SkSL::ProgramElement"** [ %195, %191 ], [ null, %183 ]
  %199 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %198, i64 %173
  %200 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %198, i64 %197
  %201 = ptrtoint %"class.SkSL::ProgramElement"** %200 to i64
  %202 = bitcast %"class.SkSL::ProgramElement"** %199 to i64*
  store i64 %152, i64* %202, align 8
  %203 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %199, i64 1
  %204 = ptrtoint %"class.SkSL::ProgramElement"** %203 to i64
  %205 = getelementptr inbounds %"class.std::__1::vector.150", %"class.std::__1::vector.150"* %155, i64 0, i32 0, i32 0
  %206 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %205, align 8
  %207 = load i64, i64* %169, align 8
  %208 = ptrtoint %"class.SkSL::ProgramElement"** %206 to i64
  %209 = sub i64 %207, %208
  %210 = ashr exact i64 %209, 3
  %211 = sub nsw i64 0, %210
  %212 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %199, i64 %211
  %213 = ptrtoint %"class.SkSL::ProgramElement"** %212 to i64
  %214 = icmp sgt i64 %209, 0
  br i1 %214, label %215, label %219

215:                                              ; preds = %196
  %216 = bitcast %"class.SkSL::ProgramElement"** %212 to i8*
  %217 = bitcast %"class.SkSL::ProgramElement"** %206 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %216, i8* align 8 %217, i64 %209, i1 false) #14
  %218 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %205, align 8
  br label %219

219:                                              ; preds = %215, %196
  %220 = phi %"class.SkSL::ProgramElement"** [ %206, %196 ], [ %218, %215 ]
  store i64 %213, i64* %170, align 8
  store i64 %204, i64* %169, align 8
  store i64 %201, i64* %179, align 8
  %221 = icmp eq %"class.SkSL::ProgramElement"** %220, null
  br i1 %221, label %290, label %222

222:                                              ; preds = %219
  %223 = bitcast %"class.SkSL::ProgramElement"** %220 to i8*
  call void @_ZdlPv(i8* %223) #15
  br label %290

224:                                              ; preds = %87, %91, %151
  %225 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %226 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %225, align 8
  %227 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %226, i64 0, i32 1
  %228 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %227, align 8
  %229 = bitcast %"class.SkSL::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %229) #14
  %230 = bitcast %"class.SkSL::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %230) #14
  %231 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 18
  %232 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %231, align 8, !noalias !106
  %233 = icmp eq %"class.SkSL::Type"* %232, null
  %234 = select i1 %233, %"class.SkSL::Type"* %2, %"class.SkSL::Type"* %232
  %235 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %234, i64 0, i32 0, i32 1, i32 0
  %236 = load i8*, i8** %235, align 8, !noalias !106
  %237 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %234, i64 0, i32 0, i32 1, i32 1
  %238 = load i64, i64* %237, align 8, !noalias !106
  %239 = icmp ugt i64 %238, -17
  br i1 %239, label %240, label %242

240:                                              ; preds = %224
  %241 = bitcast %"class.SkSL::String"* %13 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %241) #16
  unreachable

242:                                              ; preds = %224
  %243 = icmp ult i64 %238, 23
  br i1 %243, label %252, label %244

244:                                              ; preds = %242
  %245 = add nuw i64 %238, 16
  %246 = and i64 %245, -16
  %247 = call i8* @_Znwm(i64 %246) #15
  %248 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %247, i8** %248, align 8, !alias.scope !106
  %249 = or i64 %246, -9223372036854775808
  %250 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %249, i64* %250, align 8, !alias.scope !106
  %251 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %238, i64* %251, align 8, !alias.scope !106
  br label %257

252:                                              ; preds = %242
  %253 = trunc i64 %238 to i8
  %254 = bitcast %"class.SkSL::String"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %255 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %254, i64 0, i32 1, i32 0
  store i8 %253, i8* %255, align 1, !alias.scope !106
  %256 = icmp eq i64 %238, 0
  br i1 %256, label %259, label %257

257:                                              ; preds = %252, %244
  %258 = phi i8* [ %247, %244 ], [ %230, %252 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %258, i8* align 1 %236, i64 %238, i1 false) #14
  br label %259

259:                                              ; preds = %252, %257
  %260 = phi i8* [ %230, %252 ], [ %258, %257 ]
  %261 = getelementptr inbounds i8, i8* %260, i64 %238
  store i8 0, i8* %261, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %12, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.73, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %13) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %11, %"class.SkSL::String"* nonnull %12, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.92, i64 0, i64 0)) #14
  %262 = bitcast %"class.SkSL::ErrorReporter"* %228 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %263 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %262, align 8
  %264 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %263, i64 2
  %265 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %264, align 8
  call void %265(%"class.SkSL::ErrorReporter"* %228, i32 %1, %"class.SkSL::String"* nonnull %11) #14
  %266 = bitcast %"class.SkSL::String"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %267 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %266, i64 0, i32 1, i32 0
  %268 = load i8, i8* %267, align 1
  %269 = icmp slt i8 %268, 0
  br i1 %269, label %270, label %273

270:                                              ; preds = %259
  %271 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %272 = load i8*, i8** %271, align 8
  call void @_ZdlPv(i8* %272) #15
  br label %273

273:                                              ; preds = %259, %270
  %274 = bitcast %"class.SkSL::String"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %275 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %274, i64 0, i32 1, i32 0
  %276 = load i8, i8* %275, align 1
  %277 = icmp slt i8 %276, 0
  br i1 %277, label %278, label %281

278:                                              ; preds = %273
  %279 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %280 = load i8*, i8** %279, align 8
  call void @_ZdlPv(i8* %280) #15
  br label %281

281:                                              ; preds = %273, %278
  %282 = bitcast %"class.SkSL::String"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %283 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %282, i64 0, i32 1, i32 0
  %284 = load i8, i8* %283, align 1
  %285 = icmp slt i8 %284, 0
  br i1 %285, label %286, label %289

286:                                              ; preds = %281
  %287 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %288 = load i8*, i8** %287, align 8
  call void @_ZdlPv(i8* %288) #15
  br label %289

289:                                              ; preds = %281, %286
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %230) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %229) #14
  br label %464

290:                                              ; preds = %50, %85, %162, %219, %222
  %291 = phi %"class.SkSL::ProgramElement"* [ %143, %222 ], [ %143, %219 ], [ %143, %162 ], [ %68, %85 ], [ %52, %50 ]
  %292 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 4
  %293 = bitcast %"class.std::__1::shared_ptr"* %292 to i64*
  %294 = load i64, i64* %293, align 8
  %295 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 4, i32 1
  %296 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %295, align 8
  %297 = icmp eq %"class.std::__1::__shared_weak_count"* %296, null
  br i1 %297, label %301, label %298

298:                                              ; preds = %290
  %299 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %296, i64 0, i32 0, i32 1
  %300 = atomicrmw add i64* %299, i64 1 monotonic
  br label %301

301:                                              ; preds = %290, %298
  %302 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %291, i64 2
  %303 = bitcast %"class.SkSL::ProgramElement"* %302 to i64*
  %304 = load i64, i64* %303, align 8
  %305 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %291, i64 2, i32 0, i32 1
  %306 = bitcast i32* %305 to %"class.std::__1::__shared_weak_count"**
  %307 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %306, align 8
  %308 = icmp eq %"class.std::__1::__shared_weak_count"* %307, null
  br i1 %308, label %312, label %309

309:                                              ; preds = %301
  %310 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %307, i64 0, i32 0, i32 1
  %311 = atomicrmw add i64* %310, i64 1 monotonic
  br label %312

312:                                              ; preds = %301, %309
  %313 = ptrtoint %"class.std::__1::__shared_weak_count"* %307 to i64
  store i64 %304, i64* %293, align 8
  %314 = bitcast %"class.std::__1::__shared_weak_count"** %295 to i64*
  %315 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %295, align 8
  store i64 %313, i64* %314, align 8
  %316 = icmp eq %"class.std::__1::__shared_weak_count"* %315, null
  br i1 %316, label %327, label %317

317:                                              ; preds = %312
  %318 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %315, i64 0, i32 0, i32 1
  %319 = atomicrmw add i64* %318, i64 -1 acq_rel
  %320 = icmp eq i64 %319, 0
  br i1 %320, label %321, label %327

321:                                              ; preds = %317
  %322 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %315, i64 0, i32 0
  %323 = bitcast %"class.std::__1::__shared_weak_count"* %315 to void (%"class.std::__1::__shared_count"*)***
  %324 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %323, align 8
  %325 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %324, i64 2
  %326 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %325, align 8
  call void %326(%"class.std::__1::__shared_count"* %322) #14
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %315) #14
  br label %327

327:                                              ; preds = %321, %317, %312
  %328 = call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator17convertIdentifierEiNS_14StringFragmentE(%"class.SkSL::IRGenerator"* %0, i32 %1, i8* %3, i64 %4) #14
  %329 = icmp eq %"class.SkSL::Expression"* %328, null
  br i1 %329, label %354, label %330

330:                                              ; preds = %327
  %331 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %328, i64 1
  %332 = bitcast %"class.SkSL::Expression"* %331 to %"class.SkSL::Variable"**
  %333 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %332, align 8
  %334 = call %"class.SkSL::Expression"* @_ZNK4SkSL8Variable12initialValueEv(%"class.SkSL::Variable"* %333) #14
  %335 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %334, i64 1
  %336 = bitcast %"class.SkSL::Expression"* %335 to i64*
  %337 = load i64, i64* %336, align 8
  %338 = ptrtoint %"class.SkSL::Type"* %2 to i64
  %339 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #14
  %340 = bitcast i8* %339 to i32 (...)***
  %341 = getelementptr inbounds i8, i8* %339, i64 8
  %342 = bitcast i8* %341 to i32*
  store i32 %1, i32* %342, align 8
  %343 = getelementptr inbounds i8, i8* %339, i64 12
  %344 = bitcast i8* %343 to i32*
  store i32 43, i32* %344, align 4
  %345 = getelementptr inbounds i8, i8* %339, i64 16
  %346 = bitcast i8* %345 to i64*
  store i64 %338, i64* %346, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIlEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %340, align 8
  %347 = getelementptr inbounds i8, i8* %339, i64 24
  %348 = bitcast i8* %347 to i64*
  store i64 %337, i64* %348, align 8
  %349 = bitcast %"class.SkSL::Expression"* %328 to void (%"class.SkSL::Expression"*)***
  %350 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %349, align 8
  %351 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %350, i64 1
  %352 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %351, align 8
  call void %352(%"class.SkSL::Expression"* nonnull %328) #14
  %353 = ptrtoint i8* %339 to i64
  br label %434

354:                                              ; preds = %327
  %355 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %356 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %355, align 8
  %357 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %356, i64 0, i32 1
  %358 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %357, align 8
  %359 = bitcast %"class.SkSL::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %359) #14
  %360 = bitcast %"class.SkSL::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %360) #14
  %361 = bitcast %"class.SkSL::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %361) #14
  %362 = bitcast %"class.SkSL::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %362) #14
  %363 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 0, i32 1, i32 0
  %364 = load i8*, i8** %363, align 8
  %365 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %2, i64 0, i32 0, i32 1, i32 1
  %366 = load i64, i64* %365, align 8
  %367 = icmp ugt i64 %366, -17
  br i1 %367, label %368, label %370

368:                                              ; preds = %354
  %369 = bitcast %"class.SkSL::String"* %18 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %369) #16
  unreachable

370:                                              ; preds = %354
  %371 = icmp ult i64 %366, 23
  br i1 %371, label %380, label %372

372:                                              ; preds = %370
  %373 = add nuw i64 %366, 16
  %374 = and i64 %373, -16
  %375 = call i8* @_Znwm(i64 %374) #15
  %376 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %375, i8** %376, align 8
  %377 = or i64 %374, -9223372036854775808
  %378 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %377, i64* %378, align 8
  %379 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %366, i64* %379, align 8
  br label %385

380:                                              ; preds = %370
  %381 = trunc i64 %366 to i8
  %382 = bitcast %"class.SkSL::String"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %383 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %382, i64 0, i32 1, i32 0
  store i8 %381, i8* %383, align 1
  %384 = icmp eq i64 %366, 0
  br i1 %384, label %387, label %385

385:                                              ; preds = %380, %372
  %386 = phi i8* [ %375, %372 ], [ %362, %380 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %386, i8* align 1 %364, i64 %366, i1 false) #14
  br label %387

387:                                              ; preds = %380, %385
  %388 = phi i8* [ %362, %380 ], [ %386, %385 ]
  %389 = getelementptr inbounds i8, i8* %388, i64 %366
  store i8 0, i8* %389, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %17, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.73, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %18) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %16, %"class.SkSL::String"* nonnull %17, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.93, i64 0, i64 0)) #14
  call void @_ZNK4SkSL6StringplENS_14StringFragmentE(%"class.SkSL::String"* nonnull sret %15, %"class.SkSL::String"* nonnull %16, i8* %3, i64 %4) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %14, %"class.SkSL::String"* nonnull %15, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #14
  %390 = bitcast %"class.SkSL::ErrorReporter"* %358 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %391 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %390, align 8
  %392 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %391, i64 2
  %393 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %392, align 8
  call void %393(%"class.SkSL::ErrorReporter"* %358, i32 %1, %"class.SkSL::String"* nonnull %14) #14
  %394 = bitcast %"class.SkSL::String"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %395 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %394, i64 0, i32 1, i32 0
  %396 = load i8, i8* %395, align 1
  %397 = icmp slt i8 %396, 0
  br i1 %397, label %398, label %401

398:                                              ; preds = %387
  %399 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %400 = load i8*, i8** %399, align 8
  call void @_ZdlPv(i8* %400) #15
  br label %401

401:                                              ; preds = %387, %398
  %402 = bitcast %"class.SkSL::String"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %403 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %402, i64 0, i32 1, i32 0
  %404 = load i8, i8* %403, align 1
  %405 = icmp slt i8 %404, 0
  br i1 %405, label %406, label %409

406:                                              ; preds = %401
  %407 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %408 = load i8*, i8** %407, align 8
  call void @_ZdlPv(i8* %408) #15
  br label %409

409:                                              ; preds = %401, %406
  %410 = bitcast %"class.SkSL::String"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %411 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %410, i64 0, i32 1, i32 0
  %412 = load i8, i8* %411, align 1
  %413 = icmp slt i8 %412, 0
  br i1 %413, label %414, label %417

414:                                              ; preds = %409
  %415 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %416 = load i8*, i8** %415, align 8
  call void @_ZdlPv(i8* %416) #15
  br label %417

417:                                              ; preds = %409, %414
  %418 = bitcast %"class.SkSL::String"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %419 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %418, i64 0, i32 1, i32 0
  %420 = load i8, i8* %419, align 1
  %421 = icmp slt i8 %420, 0
  br i1 %421, label %422, label %425

422:                                              ; preds = %417
  %423 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %424 = load i8*, i8** %423, align 8
  call void @_ZdlPv(i8* %424) #15
  br label %425

425:                                              ; preds = %417, %422
  %426 = bitcast %"class.SkSL::String"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %427 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %426, i64 0, i32 1, i32 0
  %428 = load i8, i8* %427, align 1
  %429 = icmp slt i8 %428, 0
  br i1 %429, label %430, label %433

430:                                              ; preds = %425
  %431 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %432 = load i8*, i8** %431, align 8
  call void @_ZdlPv(i8* %432) #15
  br label %433

433:                                              ; preds = %425, %430
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %362) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %361) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %360) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %359) #14
  br label %434

434:                                              ; preds = %433, %330
  %435 = phi i64 [ %353, %330 ], [ 0, %433 ]
  %436 = ptrtoint %"class.std::__1::__shared_weak_count"* %296 to i64
  br i1 %297, label %440, label %437

437:                                              ; preds = %434
  %438 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %296, i64 0, i32 0, i32 1
  %439 = atomicrmw add i64* %438, i64 1 monotonic
  br label %440

440:                                              ; preds = %437, %434
  store i64 %294, i64* %293, align 8
  %441 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %295, align 8
  store i64 %436, i64* %314, align 8
  %442 = icmp eq %"class.std::__1::__shared_weak_count"* %441, null
  br i1 %442, label %453, label %443

443:                                              ; preds = %440
  %444 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %441, i64 0, i32 0, i32 1
  %445 = atomicrmw add i64* %444, i64 -1 acq_rel
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %453

447:                                              ; preds = %443
  %448 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %441, i64 0, i32 0
  %449 = bitcast %"class.std::__1::__shared_weak_count"* %441 to void (%"class.std::__1::__shared_count"*)***
  %450 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %449, align 8
  %451 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %450, i64 2
  %452 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %451, align 8
  call void %452(%"class.std::__1::__shared_count"* %448) #14
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %441) #14
  br label %453

453:                                              ; preds = %447, %443, %440
  br i1 %297, label %464, label %454

454:                                              ; preds = %453
  %455 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %296, i64 0, i32 0, i32 1
  %456 = atomicrmw add i64* %455, i64 -1 acq_rel
  %457 = icmp eq i64 %456, 0
  br i1 %457, label %458, label %464

458:                                              ; preds = %454
  %459 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %296, i64 0, i32 0
  %460 = bitcast %"class.std::__1::__shared_weak_count"* %296 to void (%"class.std::__1::__shared_count"*)***
  %461 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %460, align 8
  %462 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %461, i64 2
  %463 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %462, align 8
  call void %463(%"class.std::__1::__shared_count"* %459) #14
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %296) #14
  br label %464

464:                                              ; preds = %458, %454, %453, %289
  %465 = phi i64 [ 0, %289 ], [ %435, %453 ], [ %435, %454 ], [ %435, %458 ]
  %466 = inttoptr i64 %465 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %466
}

declare zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"*, i8*, i64) local_unnamed_addr #2

declare %"class.SkSL::Expression"* @_ZNK4SkSL8Variable12initialValueEv(%"class.SkSL::Variable"*) local_unnamed_addr #2

declare void @_ZNK4SkSL6StringplENS_14StringFragmentE(%"class.SkSL::String"* sret, %"class.SkSL::String"*, i8*, i64) local_unnamed_addr #2

declare %"class.SkSL::Expression"* @_ZN4SkSL15IndexExpression7ConvertERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEES9_(%"class.SkSL::Context"* dereferenceable(744), %"class.SkSL::Expression"*, %"class.SkSL::Expression"*) local_unnamed_addr #2

declare %"class.SkSL::Expression"* @_ZN4SkSL7Setting7ConvertERKNS_7ContextEiRKNS_6StringE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #2

declare %"class.SkSL::Expression"* @_ZN4SkSL11FieldAccess7ConvertERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEENS_14StringFragmentE(%"class.SkSL::Context"* dereferenceable(744), %"class.SkSL::Expression"*, i8*, i64) local_unnamed_addr #2

declare %"class.SkSL::Expression"* @_ZN4SkSL17PostfixExpression7ConvertERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEENS_8OperatorE(%"class.SkSL::Context"* dereferenceable(744), %"class.SkSL::Expression"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL11IRGenerator10checkValidERKNS_10ExpressionE(%"class.SkSL::IRGenerator"* nocapture readonly, %"class.SkSL::Expression"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  switch i32 %8, label %64 [
    i32 47, label %9
    i32 46, label %57
    i32 54, label %57
  ]

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 1
  %11 = bitcast %"class.SkSL::Expression"* %10 to %"class.SkSL::FunctionDeclaration"**
  %12 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %11, align 8
  %13 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %12, i64 0, i32 5
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %90

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %12, i64 0, i32 1
  %18 = load %"class.SkSL::FunctionDefinition"*, %"class.SkSL::FunctionDefinition"** %17, align 8
  %19 = icmp eq %"class.SkSL::FunctionDefinition"* %18, null
  br i1 %19, label %20, label %90

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %22 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %21, align 8
  %23 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %22, i64 0, i32 1
  %24 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %23, align 8
  %25 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #14
  %28 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #14
  call void @_ZNK4SkSL19FunctionDeclaration11descriptionEv(%"class.SkSL::String"* nonnull sret %6, %"class.SkSL::FunctionDeclaration"* %12) #14
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.62, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %6) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::String"* nonnull %5, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.96, i64 0, i64 0)) #14
  %29 = bitcast %"class.SkSL::ErrorReporter"* %24 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %30 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %30, i64 2
  %32 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %31, align 8
  call void %32(%"class.SkSL::ErrorReporter"* %24, i32 %26, %"class.SkSL::String"* nonnull %4) #14
  %33 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %20
  %38 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  call void @_ZdlPv(i8* %39) #15
  br label %40

40:                                               ; preds = %20, %37
  %41 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  call void @_ZdlPv(i8* %47) #15
  br label %48

48:                                               ; preds = %40, %45
  %49 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  call void @_ZdlPv(i8* %55) #15
  br label %56

56:                                               ; preds = %48, %53
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #14
  br label %90

57:                                               ; preds = %2, %2
  %58 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %59 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %58, align 8
  %60 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %59, i64 0, i32 1
  %61 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %60, align 8
  %62 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 0, i32 1
  %63 = load i32, i32* %62, align 8
  tail call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %61, i32 %63, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.97, i64 0, i64 0))
  br label %90

64:                                               ; preds = %2
  %65 = bitcast <2 x i64>* %3 to %"struct.SkSL::StringFragment"*
  %66 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %67 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %66, align 8
  %68 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %67, i64 3
  %69 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %68, align 8
  %70 = tail call dereferenceable(184) %"class.SkSL::Type"* %69(%"class.SkSL::Expression"* %1) #14
  %71 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %72 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %71, align 8
  %73 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %72, i64 0, i32 0, i32 28, i32 0, i32 0, i32 0
  %74 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %73, align 8
  %75 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %75) #14
  %76 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %70, i64 0, i32 0, i32 1, i32 0
  %77 = bitcast i8** %76 to <2 x i64>*
  %78 = load <2 x i64>, <2 x i64>* %77, align 8
  store <2 x i64> %78, <2 x i64>* %3, align 16
  %79 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %74, i64 0, i32 0, i32 1, i32 0
  %80 = load i8*, i8** %79, align 8
  %81 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %74, i64 0, i32 0, i32 1, i32 1
  %82 = load i64, i64* %81, align 8
  %83 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %65, i8* %80, i64 %82) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %75) #14
  br i1 %83, label %84, label %90

84:                                               ; preds = %64
  %85 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %71, align 8
  %86 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %85, i64 0, i32 1
  %87 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %86, align 8
  %88 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 0, i32 1
  %89 = load i32, i32* %88, align 8
  call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %87, i32 %89, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.97, i64 0, i64 0))
  br label %90

90:                                               ; preds = %9, %56, %16, %64, %84, %57
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL11IRGenerator30findAndDeclareBuiltinVariablesEv(%"class.SkSL::IRGenerator"*) local_unnamed_addr #0 align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"struct.SkSL::StringFragment"*
  %4 = alloca %class.BuiltinVariableScanner, align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = bitcast %class.BuiltinVariableScanner* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 48, i1 false)
  %8 = getelementptr inbounds %class.BuiltinVariableScanner, %class.BuiltinVariableScanner* %4, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVZN4SkSL11IRGenerator30findAndDeclareBuiltinVariablesEvE22BuiltinVariableScanner, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %class.BuiltinVariableScanner, %class.BuiltinVariableScanner* %4, i64 0, i32 1
  store %"class.SkSL::IRGenerator"* %0, %"class.SkSL::IRGenerator"** %9, align 8
  %10 = getelementptr inbounds %class.BuiltinVariableScanner, %class.BuiltinVariableScanner* %4, i64 0, i32 2
  %11 = bitcast %"class.std::__1::vector.150"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 25, i1 false) #14
  %12 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 10
  %13 = load %"class.std::__1::vector.137"*, %"class.std::__1::vector.137"** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %13, i64 0, i32 0, i32 0
  %15 = load %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %13, i64 0, i32 0, i32 1
  %17 = load %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %16, align 8
  %18 = icmp eq %"class.std::__1::unique_ptr.139"* %15, %17
  br i1 %18, label %155, label %19

19:                                               ; preds = %1
  %20 = bitcast <2 x i64>* %2 to i8*
  %21 = getelementptr inbounds %class.BuiltinVariableScanner, %class.BuiltinVariableScanner* %4, i64 0, i32 3
  %22 = getelementptr inbounds %class.BuiltinVariableScanner, %class.BuiltinVariableScanner* %4, i64 0, i32 0, i32 0
  br label %26

23:                                               ; preds = %57
  %24 = load i8, i8* %21, align 8, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %155, label %61

26:                                               ; preds = %19, %57
  %27 = phi %"class.std::__1::unique_ptr.139"* [ %15, %19 ], [ %59, %57 ]
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %27, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %28, align 8
  %30 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %29, i64 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 2
  br i1 %32, label %33, label %57

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %29, i64 1
  %35 = bitcast %"class.SkSL::ProgramElement"* %34 to %"class.SkSL::FunctionDeclaration"**
  %36 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %35, align 8
  %37 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %36, i64 0, i32 6
  %38 = load i8, i8* %37, align 1, !range !2
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %57, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %36, i64 0, i32 4
  %42 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %41, align 8
  %43 = load %"class.SkSL::IRGenerator"*, %"class.SkSL::IRGenerator"** %9, align 8
  %44 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %43, i64 0, i32 0
  %45 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %44, align 8
  %46 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %45, i64 0, i32 0, i32 7, i32 0, i32 0, i32 0
  %47 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %46, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #14
  %48 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %42, i64 0, i32 0, i32 1, i32 0
  %49 = bitcast i8** %48 to <2 x i64>*
  %50 = load <2 x i64>, <2 x i64>* %49, align 8
  store <2 x i64> %50, <2 x i64>* %2, align 16
  %51 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %47, i64 0, i32 0, i32 1, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %47, i64 0, i32 0, i32 1, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %3, i8* %52, i64 %54) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #14
  br i1 %55, label %56, label %57

56:                                               ; preds = %40
  store i8 1, i8* %21, align 8
  br label %57

57:                                               ; preds = %26, %33, %40, %56
  %58 = call zeroext i1 @_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEE19visitProgramElementERKNS_14ProgramElementE(%"class.SkSL::TProgramVisitor.368"* nonnull %22, %"class.SkSL::ProgramElement"* dereferenceable(16) %29) #14
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %27, i64 1
  %60 = icmp eq %"class.std::__1::unique_ptr.139"* %59, %17
  br i1 %60, label %23, label %26

61:                                               ; preds = %23
  %62 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #14
  %63 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  store i8 12, i8* %64, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %62, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @_ZN4SkSL8Compiler14FRAGCOLOR_NAMEE, i64 0, i64 0), i64 12, i1 false) #14
  %65 = getelementptr inbounds i8, i8* %62, i64 12
  store i8 0, i8* %65, align 4
  %66 = load %"class.SkSL::IRGenerator"*, %"class.SkSL::IRGenerator"** %9, align 8
  %67 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %66, i64 0, i32 5
  %68 = load %"class.SkSL::IRIntrinsicMap"*, %"class.SkSL::IRIntrinsicMap"** %67, align 8
  br label %69

69:                                               ; preds = %74, %61
  %70 = phi %"class.SkSL::IRIntrinsicMap"* [ %68, %61 ], [ %76, %74 ]
  %71 = getelementptr inbounds %"class.SkSL::IRIntrinsicMap", %"class.SkSL::IRIntrinsicMap"* %70, i64 0, i32 0, i32 0
  %72 = call %"struct.std::__1::__hash_node_base.66"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_14IRIntrinsicMap9IntrinsicEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_(%"class.std::__1::__hash_table.62"* %71, %"class.SkSL::String"* nonnull dereferenceable(24) %5) #14
  %73 = icmp eq %"struct.std::__1::__hash_node_base.66"* %72, null
  br i1 %73, label %74, label %78

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.SkSL::IRIntrinsicMap", %"class.SkSL::IRIntrinsicMap"* %70, i64 0, i32 1
  %76 = load %"class.SkSL::IRIntrinsicMap"*, %"class.SkSL::IRIntrinsicMap"** %75, align 8
  %77 = icmp eq %"class.SkSL::IRIntrinsicMap"* %76, null
  br i1 %77, label %148, label %69

78:                                               ; preds = %69
  %79 = getelementptr inbounds %"struct.std::__1::__hash_node_base.66", %"struct.std::__1::__hash_node_base.66"* %72, i64 6
  %80 = bitcast %"struct.std::__1::__hash_node_base.66"* %79 to i8*
  %81 = load i8, i8* %80, align 8, !range !2
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %83, label %148

83:                                               ; preds = %78
  store i8 1, i8* %80, align 8
  %84 = getelementptr inbounds %"struct.std::__1::__hash_node_base.66", %"struct.std::__1::__hash_node_base.66"* %72, i64 5
  %85 = bitcast %"struct.std::__1::__hash_node_base.66"* %84 to %"class.SkSL::ProgramElement"**
  %86 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %85, align 8
  %87 = ptrtoint %"class.SkSL::ProgramElement"* %86 to i64
  %88 = icmp eq %"class.SkSL::ProgramElement"* %86, null
  br i1 %88, label %148, label %89

89:                                               ; preds = %83
  %90 = getelementptr inbounds %class.BuiltinVariableScanner, %class.BuiltinVariableScanner* %4, i64 0, i32 2, i32 0, i32 1
  %91 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %90, align 8
  %92 = getelementptr inbounds %class.BuiltinVariableScanner, %class.BuiltinVariableScanner* %4, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %93 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %92, align 8
  %94 = icmp eq %"class.SkSL::ProgramElement"** %91, %93
  %95 = ptrtoint %"class.SkSL::ProgramElement"** %93 to i64
  br i1 %94, label %101, label %96

96:                                               ; preds = %89
  %97 = bitcast %"class.SkSL::ProgramElement"** %91 to i64*
  store i64 %87, i64* %97, align 8
  %98 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %91, i64 1
  %99 = ptrtoint %"class.SkSL::ProgramElement"** %98 to i64
  %100 = bitcast %"class.SkSL::ProgramElement"*** %90 to i64*
  store i64 %99, i64* %100, align 8
  br label %148

101:                                              ; preds = %89
  %102 = ptrtoint %"class.SkSL::ProgramElement"** %91 to i64
  %103 = bitcast %"class.SkSL::ProgramElement"*** %90 to i64*
  %104 = bitcast %"class.std::__1::vector.150"* %10 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = sub i64 %102, %105
  %107 = ashr exact i64 %106, 3
  %108 = add nsw i64 %107, 1
  %109 = icmp ugt i64 %108, 2305843009213693951
  br i1 %109, label %110, label %112

110:                                              ; preds = %101
  %111 = bitcast %"class.std::__1::vector.150"* %10 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %111) #16
  unreachable

112:                                              ; preds = %101
  %113 = bitcast %"class.SkSL::ProgramElement"*** %92 to i64*
  %114 = sub i64 %95, %105
  %115 = ashr exact i64 %114, 3
  %116 = icmp ult i64 %115, 1152921504606846975
  br i1 %116, label %117, label %125

117:                                              ; preds = %112
  %118 = ashr exact i64 %114, 2
  %119 = icmp ult i64 %118, %108
  %120 = select i1 %119, i64 %108, i64 %118
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %130, label %122

122:                                              ; preds = %117
  %123 = icmp ugt i64 %120, 2305843009213693951
  br i1 %123, label %124, label %125

124:                                              ; preds = %122
  call void @abort() #16
  unreachable

125:                                              ; preds = %122, %112
  %126 = phi i64 [ %120, %122 ], [ 2305843009213693951, %112 ]
  %127 = shl i64 %126, 3
  %128 = call i8* @_Znwm(i64 %127) #15
  %129 = bitcast i8* %128 to %"class.SkSL::ProgramElement"**
  br label %130

130:                                              ; preds = %125, %117
  %131 = phi i64 [ %126, %125 ], [ 0, %117 ]
  %132 = phi i8* [ %128, %125 ], [ null, %117 ]
  %133 = phi %"class.SkSL::ProgramElement"** [ %129, %125 ], [ null, %117 ]
  %134 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %133, i64 %107
  %135 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %133, i64 %131
  %136 = ptrtoint %"class.SkSL::ProgramElement"** %135 to i64
  %137 = bitcast %"class.SkSL::ProgramElement"** %134 to i64*
  store i64 %87, i64* %137, align 8
  %138 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %134, i64 1
  %139 = ptrtoint %"class.SkSL::ProgramElement"** %138 to i64
  %140 = ptrtoint %"class.SkSL::ProgramElement"** %133 to i64
  %141 = icmp sgt i64 %106, 0
  br i1 %141, label %142, label %144

142:                                              ; preds = %130
  %143 = inttoptr i64 %105 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %132, i8* align 8 %143, i64 %106, i1 false) #14
  br label %144

144:                                              ; preds = %142, %130
  store i64 %140, i64* %104, align 8
  store i64 %139, i64* %103, align 8
  store i64 %136, i64* %113, align 8
  %145 = icmp eq i64 %105, 0
  br i1 %145, label %148, label %146

146:                                              ; preds = %144
  %147 = inttoptr i64 %105 to i8*
  call void @_ZdlPv(i8* %147) #15
  br label %148

148:                                              ; preds = %74, %146, %144, %96, %78, %83
  %149 = load i8, i8* %64, align 1
  %150 = icmp slt i8 %149, 0
  br i1 %150, label %151, label %154

151:                                              ; preds = %148
  %152 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load i8*, i8** %152, align 8
  call void @_ZdlPv(i8* %153) #15
  br label %154

154:                                              ; preds = %148, %151
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62) #14
  br label %155

155:                                              ; preds = %1, %23, %154
  %156 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %157 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %156, align 8
  %158 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %157, i64 0, i32 4
  %159 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %158, align 8
  %160 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %159, i64 0, i32 0
  %161 = load i8, i8* %160, align 8
  %162 = icmp eq i8 %161, 0
  br i1 %162, label %163, label %257

163:                                              ; preds = %155
  %164 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %164) #14
  %165 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %166 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %165, i64 0, i32 1, i32 0
  store i8 12, i8* %166, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %164, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str.98, i64 0, i64 0), i64 12, i1 false) #14
  %167 = getelementptr inbounds i8, i8* %164, i64 12
  store i8 0, i8* %167, align 4
  %168 = load %"class.SkSL::IRGenerator"*, %"class.SkSL::IRGenerator"** %9, align 8
  %169 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %168, i64 0, i32 5
  %170 = load %"class.SkSL::IRIntrinsicMap"*, %"class.SkSL::IRIntrinsicMap"** %169, align 8
  br label %171

171:                                              ; preds = %176, %163
  %172 = phi %"class.SkSL::IRIntrinsicMap"* [ %170, %163 ], [ %178, %176 ]
  %173 = getelementptr inbounds %"class.SkSL::IRIntrinsicMap", %"class.SkSL::IRIntrinsicMap"* %172, i64 0, i32 0, i32 0
  %174 = call %"struct.std::__1::__hash_node_base.66"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_14IRIntrinsicMap9IntrinsicEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_(%"class.std::__1::__hash_table.62"* %173, %"class.SkSL::String"* nonnull dereferenceable(24) %6) #14
  %175 = icmp eq %"struct.std::__1::__hash_node_base.66"* %174, null
  br i1 %175, label %176, label %180

176:                                              ; preds = %171
  %177 = getelementptr inbounds %"class.SkSL::IRIntrinsicMap", %"class.SkSL::IRIntrinsicMap"* %172, i64 0, i32 1
  %178 = load %"class.SkSL::IRIntrinsicMap"*, %"class.SkSL::IRIntrinsicMap"** %177, align 8
  %179 = icmp eq %"class.SkSL::IRIntrinsicMap"* %178, null
  br i1 %179, label %250, label %171

180:                                              ; preds = %171
  %181 = getelementptr inbounds %"struct.std::__1::__hash_node_base.66", %"struct.std::__1::__hash_node_base.66"* %174, i64 6
  %182 = bitcast %"struct.std::__1::__hash_node_base.66"* %181 to i8*
  %183 = load i8, i8* %182, align 8, !range !2
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %185, label %250

185:                                              ; preds = %180
  store i8 1, i8* %182, align 8
  %186 = getelementptr inbounds %"struct.std::__1::__hash_node_base.66", %"struct.std::__1::__hash_node_base.66"* %174, i64 5
  %187 = bitcast %"struct.std::__1::__hash_node_base.66"* %186 to %"class.SkSL::ProgramElement"**
  %188 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %187, align 8
  %189 = ptrtoint %"class.SkSL::ProgramElement"* %188 to i64
  %190 = icmp eq %"class.SkSL::ProgramElement"* %188, null
  br i1 %190, label %250, label %191

191:                                              ; preds = %185
  %192 = getelementptr inbounds %class.BuiltinVariableScanner, %class.BuiltinVariableScanner* %4, i64 0, i32 2, i32 0, i32 1
  %193 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %192, align 8
  %194 = getelementptr inbounds %class.BuiltinVariableScanner, %class.BuiltinVariableScanner* %4, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %195 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %194, align 8
  %196 = icmp eq %"class.SkSL::ProgramElement"** %193, %195
  %197 = ptrtoint %"class.SkSL::ProgramElement"** %195 to i64
  br i1 %196, label %203, label %198

198:                                              ; preds = %191
  %199 = bitcast %"class.SkSL::ProgramElement"** %193 to i64*
  store i64 %189, i64* %199, align 8
  %200 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %193, i64 1
  %201 = ptrtoint %"class.SkSL::ProgramElement"** %200 to i64
  %202 = bitcast %"class.SkSL::ProgramElement"*** %192 to i64*
  store i64 %201, i64* %202, align 8
  br label %250

203:                                              ; preds = %191
  %204 = ptrtoint %"class.SkSL::ProgramElement"** %193 to i64
  %205 = bitcast %"class.SkSL::ProgramElement"*** %192 to i64*
  %206 = bitcast %"class.std::__1::vector.150"* %10 to i64*
  %207 = load i64, i64* %206, align 8
  %208 = sub i64 %204, %207
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = icmp ugt i64 %210, 2305843009213693951
  br i1 %211, label %212, label %214

212:                                              ; preds = %203
  %213 = bitcast %"class.std::__1::vector.150"* %10 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %213) #16
  unreachable

214:                                              ; preds = %203
  %215 = bitcast %"class.SkSL::ProgramElement"*** %194 to i64*
  %216 = sub i64 %197, %207
  %217 = ashr exact i64 %216, 3
  %218 = icmp ult i64 %217, 1152921504606846975
  br i1 %218, label %219, label %227

219:                                              ; preds = %214
  %220 = ashr exact i64 %216, 2
  %221 = icmp ult i64 %220, %210
  %222 = select i1 %221, i64 %210, i64 %220
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %232, label %224

224:                                              ; preds = %219
  %225 = icmp ugt i64 %222, 2305843009213693951
  br i1 %225, label %226, label %227

226:                                              ; preds = %224
  call void @abort() #16
  unreachable

227:                                              ; preds = %224, %214
  %228 = phi i64 [ %222, %224 ], [ 2305843009213693951, %214 ]
  %229 = shl i64 %228, 3
  %230 = call i8* @_Znwm(i64 %229) #15
  %231 = bitcast i8* %230 to %"class.SkSL::ProgramElement"**
  br label %232

232:                                              ; preds = %227, %219
  %233 = phi i64 [ %228, %227 ], [ 0, %219 ]
  %234 = phi i8* [ %230, %227 ], [ null, %219 ]
  %235 = phi %"class.SkSL::ProgramElement"** [ %231, %227 ], [ null, %219 ]
  %236 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %235, i64 %209
  %237 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %235, i64 %233
  %238 = ptrtoint %"class.SkSL::ProgramElement"** %237 to i64
  %239 = bitcast %"class.SkSL::ProgramElement"** %236 to i64*
  store i64 %189, i64* %239, align 8
  %240 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %236, i64 1
  %241 = ptrtoint %"class.SkSL::ProgramElement"** %240 to i64
  %242 = ptrtoint %"class.SkSL::ProgramElement"** %235 to i64
  %243 = icmp sgt i64 %208, 0
  br i1 %243, label %244, label %246

244:                                              ; preds = %232
  %245 = inttoptr i64 %207 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %234, i8* align 8 %245, i64 %208, i1 false) #14
  br label %246

246:                                              ; preds = %244, %232
  store i64 %242, i64* %206, align 8
  store i64 %241, i64* %205, align 8
  store i64 %238, i64* %215, align 8
  %247 = icmp eq i64 %207, 0
  br i1 %247, label %250, label %248

248:                                              ; preds = %246
  %249 = inttoptr i64 %207 to i8*
  call void @_ZdlPv(i8* %249) #15
  br label %250

250:                                              ; preds = %176, %248, %246, %198, %180, %185
  %251 = load i8, i8* %166, align 1
  %252 = icmp slt i8 %251, 0
  br i1 %252, label %253, label %256

253:                                              ; preds = %250
  %254 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %255 = load i8*, i8** %254, align 8
  call void @_ZdlPv(i8* %255) #15
  br label %256

256:                                              ; preds = %250, %253
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %164) #14
  br label %257

257:                                              ; preds = %155, %256
  %258 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 11
  %259 = load %"class.std::__1::vector.150"*, %"class.std::__1::vector.150"** %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::vector.150", %"class.std::__1::vector.150"* %259, i64 0, i32 0, i32 0
  %261 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %260, align 8
  %262 = getelementptr inbounds %"class.std::__1::vector.150", %"class.std::__1::vector.150"* %10, i64 0, i32 0, i32 0
  %263 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %262, align 8
  %264 = getelementptr inbounds %class.BuiltinVariableScanner, %class.BuiltinVariableScanner* %4, i64 0, i32 2, i32 0, i32 1
  %265 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %264, align 8
  %266 = call %"class.SkSL::ProgramElement"** @_ZNSt3__16vectorIPKN4SkSL14ProgramElementENS_9allocatorIS4_EEE6insertINS_11__wrap_iterIPS4_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISD_E9referenceEEE5valueESB_E4typeENS9_IPKS4_EESD_SD_(%"class.std::__1::vector.150"* %259, %"class.SkSL::ProgramElement"** %261, %"class.SkSL::ProgramElement"** %263, %"class.SkSL::ProgramElement"** %265)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVZN4SkSL11IRGenerator30findAndDeclareBuiltinVariablesEvE22BuiltinVariableScanner, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %267 = getelementptr inbounds %class.BuiltinVariableScanner, %class.BuiltinVariableScanner* %4, i64 0, i32 2, i32 0, i32 0
  %268 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %267, align 8
  %269 = icmp eq %"class.SkSL::ProgramElement"** %268, null
  br i1 %269, label %274, label %270

270:                                              ; preds = %257
  %271 = ptrtoint %"class.SkSL::ProgramElement"** %268 to i64
  %272 = bitcast %"class.SkSL::ProgramElement"*** %264 to i64*
  store i64 %271, i64* %272, align 8
  %273 = bitcast %"class.SkSL::ProgramElement"** %268 to i8*
  call void @_ZdlPv(i8* %273) #15
  br label %274

274:                                              ; preds = %257, %270
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZZN4SkSL11IRGenerator30findAndDeclareBuiltinVariablesEvEN22BuiltinVariableScanner19visitProgramElementERKNS_14ProgramElementE(%class.BuiltinVariableScanner*, %"class.SkSL::ProgramElement"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"struct.SkSL::StringFragment"*
  %5 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %1, i64 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 2
  br i1 %7, label %8, label %35

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %1, i64 1
  %10 = bitcast %"class.SkSL::ProgramElement"* %9 to %"class.SkSL::FunctionDeclaration"**
  %11 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %10, align 8
  %12 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %11, i64 0, i32 6
  %13 = load i8, i8* %12, align 1, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %35, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %11, i64 0, i32 4
  %17 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %16, align 8
  %18 = getelementptr inbounds %class.BuiltinVariableScanner, %class.BuiltinVariableScanner* %0, i64 0, i32 1
  %19 = load %"class.SkSL::IRGenerator"*, %"class.SkSL::IRGenerator"** %18, align 8
  %20 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %19, i64 0, i32 0
  %21 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %20, align 8
  %22 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %21, i64 0, i32 0, i32 7, i32 0, i32 0, i32 0
  %23 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %22, align 8
  %24 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #14
  %25 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %17, i64 0, i32 0, i32 1, i32 0
  %26 = bitcast i8** %25 to <2 x i64>*
  %27 = load <2 x i64>, <2 x i64>* %26, align 8
  store <2 x i64> %27, <2 x i64>* %3, align 16
  %28 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %23, i64 0, i32 0, i32 1, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %23, i64 0, i32 0, i32 1, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %4, i8* %29, i64 %31) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #14
  br i1 %32, label %33, label %35

33:                                               ; preds = %15
  %34 = getelementptr inbounds %class.BuiltinVariableScanner, %class.BuiltinVariableScanner* %0, i64 0, i32 3
  store i8 1, i8* %34, align 8
  br label %35

35:                                               ; preds = %8, %15, %33, %2
  %36 = getelementptr inbounds %class.BuiltinVariableScanner, %class.BuiltinVariableScanner* %0, i64 0, i32 0, i32 0
  %37 = call zeroext i1 @_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEE19visitProgramElementERKNS_14ProgramElementE(%"class.SkSL::TProgramVisitor.368"* %36, %"class.SkSL::ProgramElement"* dereferenceable(16) %1) #14
  ret i1 %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::ProgramElement"** @_ZNSt3__16vectorIPKN4SkSL14ProgramElementENS_9allocatorIS4_EEE6insertINS_11__wrap_iterIPS4_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISD_E9referenceEEE5valueESB_E4typeENS9_IPKS4_EESD_SD_(%"class.std::__1::vector.150"*, %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"**) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast %"class.SkSL::ProgramElement"** %2 to i8*
  %6 = bitcast %"class.SkSL::ProgramElement"** %1 to i8*
  %7 = ptrtoint %"class.SkSL::ProgramElement"** %1 to i64
  %8 = ptrtoint %"class.SkSL::ProgramElement"** %2 to i64
  %9 = getelementptr inbounds %"class.std::__1::vector.150", %"class.std::__1::vector.150"* %0, i64 0, i32 0, i32 0
  %10 = ptrtoint %"class.SkSL::ProgramElement"** %3 to i64
  %11 = sub i64 %10, %8
  %12 = ashr exact i64 %11, 3
  %13 = icmp sgt i64 %11, 0
  br i1 %13, label %14, label %772

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.std::__1::vector.150", %"class.std::__1::vector.150"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.SkSL::ProgramElement"*** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::vector.150", %"class.std::__1::vector.150"* %0, i64 0, i32 0, i32 1
  %19 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %18, align 8
  %20 = ptrtoint %"class.SkSL::ProgramElement"** %19 to i64
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 3
  %23 = icmp sgt i64 %12, %22
  %24 = bitcast %"class.SkSL::ProgramElement"*** %18 to i64*
  br i1 %23, label %359, label %25

25:                                               ; preds = %14
  %26 = sub i64 %20, %7
  %27 = ashr exact i64 %26, 3
  %28 = icmp sgt i64 %12, %27
  br i1 %28, label %29, label %214

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %2, i64 %27
  %31 = icmp eq %"class.SkSL::ProgramElement"** %30, %3
  br i1 %31, label %209, label %32

32:                                               ; preds = %29
  %33 = xor i64 %27, -1
  %34 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %3, i64 %33
  %35 = ptrtoint %"class.SkSL::ProgramElement"** %34 to i64
  %36 = sub i64 %35, %8
  %37 = lshr i64 %36, 3
  %38 = add nuw nsw i64 %37, 1
  %39 = icmp ult i64 %38, 4
  br i1 %39, label %135, label %40

40:                                               ; preds = %32
  %41 = xor i64 %27, -1
  %42 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %3, i64 %41
  %43 = ptrtoint %"class.SkSL::ProgramElement"** %42 to i64
  %44 = sub i64 %43, %8
  %45 = lshr i64 %44, 3
  %46 = add nuw nsw i64 %45, 1
  %47 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %19, i64 %46
  %48 = add nsw i64 %27, %45
  %49 = add nsw i64 %48, 1
  %50 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %2, i64 %49
  %51 = icmp ult %"class.SkSL::ProgramElement"** %19, %50
  %52 = icmp ult %"class.SkSL::ProgramElement"** %30, %47
  %53 = and i1 %51, %52
  br i1 %53, label %135, label %54

54:                                               ; preds = %40
  %55 = and i64 %38, 4611686018427387900
  %56 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %19, i64 %55
  %57 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %30, i64 %55
  %58 = add nsw i64 %55, -4
  %59 = lshr exact i64 %58, 2
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 12
  br i1 %62, label %114, label %63

63:                                               ; preds = %54
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %19, i64 %66
  %69 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %30, i64 %66
  %70 = bitcast %"class.SkSL::ProgramElement"** %69 to <2 x i64>*
  %71 = load <2 x i64>, <2 x i64>* %70, align 8, !alias.scope !109
  %72 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %69, i64 2
  %73 = bitcast %"class.SkSL::ProgramElement"** %72 to <2 x i64>*
  %74 = load <2 x i64>, <2 x i64>* %73, align 8, !alias.scope !109
  %75 = bitcast %"class.SkSL::ProgramElement"** %68 to <2 x i64>*
  store <2 x i64> %71, <2 x i64>* %75, align 8, !alias.scope !112, !noalias !109
  %76 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %68, i64 2
  %77 = bitcast %"class.SkSL::ProgramElement"** %76 to <2 x i64>*
  store <2 x i64> %74, <2 x i64>* %77, align 8, !alias.scope !112, !noalias !109
  %78 = or i64 %66, 4
  %79 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %19, i64 %78
  %80 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %30, i64 %78
  %81 = bitcast %"class.SkSL::ProgramElement"** %80 to <2 x i64>*
  %82 = load <2 x i64>, <2 x i64>* %81, align 8, !alias.scope !109
  %83 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %80, i64 2
  %84 = bitcast %"class.SkSL::ProgramElement"** %83 to <2 x i64>*
  %85 = load <2 x i64>, <2 x i64>* %84, align 8, !alias.scope !109
  %86 = bitcast %"class.SkSL::ProgramElement"** %79 to <2 x i64>*
  store <2 x i64> %82, <2 x i64>* %86, align 8, !alias.scope !112, !noalias !109
  %87 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %79, i64 2
  %88 = bitcast %"class.SkSL::ProgramElement"** %87 to <2 x i64>*
  store <2 x i64> %85, <2 x i64>* %88, align 8, !alias.scope !112, !noalias !109
  %89 = or i64 %66, 8
  %90 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %19, i64 %89
  %91 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %30, i64 %89
  %92 = bitcast %"class.SkSL::ProgramElement"** %91 to <2 x i64>*
  %93 = load <2 x i64>, <2 x i64>* %92, align 8, !alias.scope !109
  %94 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %91, i64 2
  %95 = bitcast %"class.SkSL::ProgramElement"** %94 to <2 x i64>*
  %96 = load <2 x i64>, <2 x i64>* %95, align 8, !alias.scope !109
  %97 = bitcast %"class.SkSL::ProgramElement"** %90 to <2 x i64>*
  store <2 x i64> %93, <2 x i64>* %97, align 8, !alias.scope !112, !noalias !109
  %98 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %90, i64 2
  %99 = bitcast %"class.SkSL::ProgramElement"** %98 to <2 x i64>*
  store <2 x i64> %96, <2 x i64>* %99, align 8, !alias.scope !112, !noalias !109
  %100 = or i64 %66, 12
  %101 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %19, i64 %100
  %102 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %30, i64 %100
  %103 = bitcast %"class.SkSL::ProgramElement"** %102 to <2 x i64>*
  %104 = load <2 x i64>, <2 x i64>* %103, align 8, !alias.scope !109
  %105 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %102, i64 2
  %106 = bitcast %"class.SkSL::ProgramElement"** %105 to <2 x i64>*
  %107 = load <2 x i64>, <2 x i64>* %106, align 8, !alias.scope !109
  %108 = bitcast %"class.SkSL::ProgramElement"** %101 to <2 x i64>*
  store <2 x i64> %104, <2 x i64>* %108, align 8, !alias.scope !112, !noalias !109
  %109 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %101, i64 2
  %110 = bitcast %"class.SkSL::ProgramElement"** %109 to <2 x i64>*
  store <2 x i64> %107, <2 x i64>* %110, align 8, !alias.scope !112, !noalias !109
  %111 = add i64 %66, 16
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !114

114:                                              ; preds = %65, %54
  %115 = phi i64 [ 0, %54 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %19, i64 %118
  %121 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %30, i64 %118
  %122 = bitcast %"class.SkSL::ProgramElement"** %121 to <2 x i64>*
  %123 = load <2 x i64>, <2 x i64>* %122, align 8, !alias.scope !109
  %124 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %121, i64 2
  %125 = bitcast %"class.SkSL::ProgramElement"** %124 to <2 x i64>*
  %126 = load <2 x i64>, <2 x i64>* %125, align 8, !alias.scope !109
  %127 = bitcast %"class.SkSL::ProgramElement"** %120 to <2 x i64>*
  store <2 x i64> %123, <2 x i64>* %127, align 8, !alias.scope !112, !noalias !109
  %128 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %120, i64 2
  %129 = bitcast %"class.SkSL::ProgramElement"** %128 to <2 x i64>*
  store <2 x i64> %126, <2 x i64>* %129, align 8, !alias.scope !112, !noalias !109
  %130 = add i64 %118, 4
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !116

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %38, %55
  br i1 %134, label %206, label %135

135:                                              ; preds = %133, %40, %32
  %136 = phi %"class.SkSL::ProgramElement"** [ %19, %40 ], [ %19, %32 ], [ %56, %133 ]
  %137 = phi %"class.SkSL::ProgramElement"** [ %30, %40 ], [ %30, %32 ], [ %57, %133 ]
  %138 = ptrtoint %"class.SkSL::ProgramElement"** %137 to i64
  %139 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %3, i64 -1
  %140 = ptrtoint %"class.SkSL::ProgramElement"** %139 to i64
  %141 = sub i64 %140, %138
  %142 = lshr i64 %141, 3
  %143 = add nuw nsw i64 %142, 1
  %144 = and i64 %143, 7
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %157, label %146

146:                                              ; preds = %135, %146
  %147 = phi %"class.SkSL::ProgramElement"** [ %154, %146 ], [ %136, %135 ]
  %148 = phi %"class.SkSL::ProgramElement"** [ %153, %146 ], [ %137, %135 ]
  %149 = phi i64 [ %155, %146 ], [ %144, %135 ]
  %150 = bitcast %"class.SkSL::ProgramElement"** %147 to i64*
  %151 = bitcast %"class.SkSL::ProgramElement"** %148 to i64*
  %152 = load i64, i64* %151, align 8
  store i64 %152, i64* %150, align 8
  %153 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %148, i64 1
  %154 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %147, i64 1
  %155 = add i64 %149, -1
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %157, label %146, !llvm.loop !118

157:                                              ; preds = %146, %135
  %158 = phi %"class.SkSL::ProgramElement"** [ undef, %135 ], [ %154, %146 ]
  %159 = phi %"class.SkSL::ProgramElement"** [ %136, %135 ], [ %154, %146 ]
  %160 = phi %"class.SkSL::ProgramElement"** [ %137, %135 ], [ %153, %146 ]
  %161 = icmp ult i64 %141, 56
  br i1 %161, label %206, label %162

162:                                              ; preds = %157, %162
  %163 = phi %"class.SkSL::ProgramElement"** [ %204, %162 ], [ %159, %157 ]
  %164 = phi %"class.SkSL::ProgramElement"** [ %203, %162 ], [ %160, %157 ]
  %165 = bitcast %"class.SkSL::ProgramElement"** %163 to i64*
  %166 = bitcast %"class.SkSL::ProgramElement"** %164 to i64*
  %167 = load i64, i64* %166, align 8
  store i64 %167, i64* %165, align 8
  %168 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %164, i64 1
  %169 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %163, i64 1
  %170 = bitcast %"class.SkSL::ProgramElement"** %169 to i64*
  %171 = bitcast %"class.SkSL::ProgramElement"** %168 to i64*
  %172 = load i64, i64* %171, align 8
  store i64 %172, i64* %170, align 8
  %173 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %164, i64 2
  %174 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %163, i64 2
  %175 = bitcast %"class.SkSL::ProgramElement"** %174 to i64*
  %176 = bitcast %"class.SkSL::ProgramElement"** %173 to i64*
  %177 = load i64, i64* %176, align 8
  store i64 %177, i64* %175, align 8
  %178 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %164, i64 3
  %179 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %163, i64 3
  %180 = bitcast %"class.SkSL::ProgramElement"** %179 to i64*
  %181 = bitcast %"class.SkSL::ProgramElement"** %178 to i64*
  %182 = load i64, i64* %181, align 8
  store i64 %182, i64* %180, align 8
  %183 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %164, i64 4
  %184 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %163, i64 4
  %185 = bitcast %"class.SkSL::ProgramElement"** %184 to i64*
  %186 = bitcast %"class.SkSL::ProgramElement"** %183 to i64*
  %187 = load i64, i64* %186, align 8
  store i64 %187, i64* %185, align 8
  %188 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %164, i64 5
  %189 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %163, i64 5
  %190 = bitcast %"class.SkSL::ProgramElement"** %189 to i64*
  %191 = bitcast %"class.SkSL::ProgramElement"** %188 to i64*
  %192 = load i64, i64* %191, align 8
  store i64 %192, i64* %190, align 8
  %193 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %164, i64 6
  %194 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %163, i64 6
  %195 = bitcast %"class.SkSL::ProgramElement"** %194 to i64*
  %196 = bitcast %"class.SkSL::ProgramElement"** %193 to i64*
  %197 = load i64, i64* %196, align 8
  store i64 %197, i64* %195, align 8
  %198 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %164, i64 7
  %199 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %163, i64 7
  %200 = bitcast %"class.SkSL::ProgramElement"** %199 to i64*
  %201 = bitcast %"class.SkSL::ProgramElement"** %198 to i64*
  %202 = load i64, i64* %201, align 8
  store i64 %202, i64* %200, align 8
  %203 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %164, i64 8
  %204 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %163, i64 8
  %205 = icmp eq %"class.SkSL::ProgramElement"** %203, %3
  br i1 %205, label %206, label %162, !llvm.loop !119

206:                                              ; preds = %157, %162, %133
  %207 = phi %"class.SkSL::ProgramElement"** [ %56, %133 ], [ %158, %157 ], [ %204, %162 ]
  %208 = ptrtoint %"class.SkSL::ProgramElement"** %207 to i64
  br label %209

209:                                              ; preds = %206, %29
  %210 = phi i64 [ %20, %29 ], [ %208, %206 ]
  store i64 %210, i64* %24, align 8
  %211 = icmp sgt i64 %26, 0
  br i1 %211, label %212, label %772

212:                                              ; preds = %209
  %213 = inttoptr i64 %210 to %"class.SkSL::ProgramElement"**
  br label %214

214:                                              ; preds = %212, %25
  %215 = phi i64 [ %210, %212 ], [ %20, %25 ]
  %216 = phi %"class.SkSL::ProgramElement"** [ %213, %212 ], [ %19, %25 ]
  %217 = phi %"class.SkSL::ProgramElement"** [ %30, %212 ], [ %3, %25 ]
  %218 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %1, i64 %12
  %219 = ptrtoint %"class.SkSL::ProgramElement"** %218 to i64
  %220 = sub i64 %215, %219
  %221 = ashr exact i64 %220, 3
  %222 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %1, i64 %221
  %223 = icmp ult %"class.SkSL::ProgramElement"** %222, %19
  br i1 %223, label %224, label %337

224:                                              ; preds = %214
  %225 = sub nsw i64 0, %221
  %226 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %19, i64 %225
  %227 = bitcast %"class.SkSL::ProgramElement"** %226 to i8*
  %228 = xor i64 %7, -1
  %229 = getelementptr i8, i8* %227, i64 %228
  %230 = ptrtoint i8* %229 to i64
  %231 = lshr i64 %230, 3
  %232 = add nuw nsw i64 %231, 1
  %233 = icmp ult i64 %232, 4
  br i1 %233, label %234, label %237

234:                                              ; preds = %332, %237, %224
  %235 = phi %"class.SkSL::ProgramElement"** [ %216, %237 ], [ %216, %224 ], [ %255, %332 ]
  %236 = phi %"class.SkSL::ProgramElement"** [ %222, %237 ], [ %222, %224 ], [ %256, %332 ]
  br label %345

237:                                              ; preds = %224
  %238 = sub nsw i64 0, %221
  %239 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %19, i64 %238
  %240 = bitcast %"class.SkSL::ProgramElement"** %239 to i8*
  %241 = xor i64 %7, -1
  %242 = getelementptr i8, i8* %240, i64 %241
  %243 = ptrtoint i8* %242 to i64
  %244 = lshr i64 %243, 3
  %245 = add nuw nsw i64 %244, 1
  %246 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %216, i64 %245
  %247 = add nsw i64 %221, %244
  %248 = add nsw i64 %247, 1
  %249 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %1, i64 %248
  %250 = icmp ult %"class.SkSL::ProgramElement"** %216, %249
  %251 = icmp ult %"class.SkSL::ProgramElement"** %222, %246
  %252 = and i1 %250, %251
  br i1 %252, label %234, label %253

253:                                              ; preds = %237
  %254 = and i64 %232, 4611686018427387900
  %255 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %216, i64 %254
  %256 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %222, i64 %254
  %257 = add nsw i64 %254, -4
  %258 = lshr exact i64 %257, 2
  %259 = add nuw nsw i64 %258, 1
  %260 = and i64 %259, 3
  %261 = icmp ult i64 %257, 12
  br i1 %261, label %313, label %262

262:                                              ; preds = %253
  %263 = sub nsw i64 %259, %260
  br label %264

264:                                              ; preds = %264, %262
  %265 = phi i64 [ 0, %262 ], [ %310, %264 ]
  %266 = phi i64 [ %263, %262 ], [ %311, %264 ]
  %267 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %216, i64 %265
  %268 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %222, i64 %265
  %269 = bitcast %"class.SkSL::ProgramElement"** %268 to <2 x i64>*
  %270 = load <2 x i64>, <2 x i64>* %269, align 8, !alias.scope !120
  %271 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %268, i64 2
  %272 = bitcast %"class.SkSL::ProgramElement"** %271 to <2 x i64>*
  %273 = load <2 x i64>, <2 x i64>* %272, align 8, !alias.scope !120
  %274 = bitcast %"class.SkSL::ProgramElement"** %267 to <2 x i64>*
  store <2 x i64> %270, <2 x i64>* %274, align 8, !alias.scope !123, !noalias !120
  %275 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %267, i64 2
  %276 = bitcast %"class.SkSL::ProgramElement"** %275 to <2 x i64>*
  store <2 x i64> %273, <2 x i64>* %276, align 8, !alias.scope !123, !noalias !120
  %277 = or i64 %265, 4
  %278 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %216, i64 %277
  %279 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %222, i64 %277
  %280 = bitcast %"class.SkSL::ProgramElement"** %279 to <2 x i64>*
  %281 = load <2 x i64>, <2 x i64>* %280, align 8, !alias.scope !120
  %282 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %279, i64 2
  %283 = bitcast %"class.SkSL::ProgramElement"** %282 to <2 x i64>*
  %284 = load <2 x i64>, <2 x i64>* %283, align 8, !alias.scope !120
  %285 = bitcast %"class.SkSL::ProgramElement"** %278 to <2 x i64>*
  store <2 x i64> %281, <2 x i64>* %285, align 8, !alias.scope !123, !noalias !120
  %286 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %278, i64 2
  %287 = bitcast %"class.SkSL::ProgramElement"** %286 to <2 x i64>*
  store <2 x i64> %284, <2 x i64>* %287, align 8, !alias.scope !123, !noalias !120
  %288 = or i64 %265, 8
  %289 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %216, i64 %288
  %290 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %222, i64 %288
  %291 = bitcast %"class.SkSL::ProgramElement"** %290 to <2 x i64>*
  %292 = load <2 x i64>, <2 x i64>* %291, align 8, !alias.scope !120
  %293 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %290, i64 2
  %294 = bitcast %"class.SkSL::ProgramElement"** %293 to <2 x i64>*
  %295 = load <2 x i64>, <2 x i64>* %294, align 8, !alias.scope !120
  %296 = bitcast %"class.SkSL::ProgramElement"** %289 to <2 x i64>*
  store <2 x i64> %292, <2 x i64>* %296, align 8, !alias.scope !123, !noalias !120
  %297 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %289, i64 2
  %298 = bitcast %"class.SkSL::ProgramElement"** %297 to <2 x i64>*
  store <2 x i64> %295, <2 x i64>* %298, align 8, !alias.scope !123, !noalias !120
  %299 = or i64 %265, 12
  %300 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %216, i64 %299
  %301 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %222, i64 %299
  %302 = bitcast %"class.SkSL::ProgramElement"** %301 to <2 x i64>*
  %303 = load <2 x i64>, <2 x i64>* %302, align 8, !alias.scope !120
  %304 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %301, i64 2
  %305 = bitcast %"class.SkSL::ProgramElement"** %304 to <2 x i64>*
  %306 = load <2 x i64>, <2 x i64>* %305, align 8, !alias.scope !120
  %307 = bitcast %"class.SkSL::ProgramElement"** %300 to <2 x i64>*
  store <2 x i64> %303, <2 x i64>* %307, align 8, !alias.scope !123, !noalias !120
  %308 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %300, i64 2
  %309 = bitcast %"class.SkSL::ProgramElement"** %308 to <2 x i64>*
  store <2 x i64> %306, <2 x i64>* %309, align 8, !alias.scope !123, !noalias !120
  %310 = add i64 %265, 16
  %311 = add i64 %266, -4
  %312 = icmp eq i64 %311, 0
  br i1 %312, label %313, label %264, !llvm.loop !125

313:                                              ; preds = %264, %253
  %314 = phi i64 [ 0, %253 ], [ %310, %264 ]
  %315 = icmp eq i64 %260, 0
  br i1 %315, label %332, label %316

316:                                              ; preds = %313, %316
  %317 = phi i64 [ %329, %316 ], [ %314, %313 ]
  %318 = phi i64 [ %330, %316 ], [ %260, %313 ]
  %319 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %216, i64 %317
  %320 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %222, i64 %317
  %321 = bitcast %"class.SkSL::ProgramElement"** %320 to <2 x i64>*
  %322 = load <2 x i64>, <2 x i64>* %321, align 8, !alias.scope !120
  %323 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %320, i64 2
  %324 = bitcast %"class.SkSL::ProgramElement"** %323 to <2 x i64>*
  %325 = load <2 x i64>, <2 x i64>* %324, align 8, !alias.scope !120
  %326 = bitcast %"class.SkSL::ProgramElement"** %319 to <2 x i64>*
  store <2 x i64> %322, <2 x i64>* %326, align 8, !alias.scope !123, !noalias !120
  %327 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %319, i64 2
  %328 = bitcast %"class.SkSL::ProgramElement"** %327 to <2 x i64>*
  store <2 x i64> %325, <2 x i64>* %328, align 8, !alias.scope !123, !noalias !120
  %329 = add i64 %317, 4
  %330 = add i64 %318, -1
  %331 = icmp eq i64 %330, 0
  br i1 %331, label %332, label %316, !llvm.loop !126

332:                                              ; preds = %316, %313
  %333 = icmp eq i64 %232, %254
  br i1 %333, label %334, label %234

334:                                              ; preds = %345, %332
  %335 = phi %"class.SkSL::ProgramElement"** [ %255, %332 ], [ %352, %345 ]
  %336 = ptrtoint %"class.SkSL::ProgramElement"** %335 to i64
  br label %337

337:                                              ; preds = %334, %214
  %338 = phi i64 [ %336, %334 ], [ %215, %214 ]
  store i64 %338, i64* %24, align 8
  %339 = icmp eq i64 %220, 0
  br i1 %339, label %354, label %340

340:                                              ; preds = %337
  %341 = sub nsw i64 0, %221
  %342 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %216, i64 %341
  %343 = bitcast %"class.SkSL::ProgramElement"** %342 to i8*
  %344 = bitcast %"class.SkSL::ProgramElement"** %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %343, i8* align 8 %344, i64 %220, i1 false) #14
  br label %354

345:                                              ; preds = %234, %345
  %346 = phi %"class.SkSL::ProgramElement"** [ %352, %345 ], [ %235, %234 ]
  %347 = phi %"class.SkSL::ProgramElement"** [ %351, %345 ], [ %236, %234 ]
  %348 = bitcast %"class.SkSL::ProgramElement"** %347 to i64*
  %349 = load i64, i64* %348, align 8
  %350 = bitcast %"class.SkSL::ProgramElement"** %346 to i64*
  store i64 %349, i64* %350, align 8
  %351 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %347, i64 1
  %352 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %346, i64 1
  %353 = icmp ult %"class.SkSL::ProgramElement"** %351, %19
  br i1 %353, label %345, label %334, !llvm.loop !127

354:                                              ; preds = %337, %340
  %355 = ptrtoint %"class.SkSL::ProgramElement"** %217 to i64
  %356 = sub i64 %355, %8
  %357 = icmp eq i64 %356, 0
  br i1 %357, label %772, label %358

358:                                              ; preds = %354
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %5, i64 %356, i1 false) #14
  br label %772

359:                                              ; preds = %14
  %360 = bitcast %"class.std::__1::vector.150"* %0 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = sub i64 %20, %361
  %363 = ashr exact i64 %362, 3
  %364 = add nsw i64 %363, %12
  %365 = icmp ugt i64 %364, 2305843009213693951
  br i1 %365, label %366, label %368

366:                                              ; preds = %359
  %367 = bitcast %"class.std::__1::vector.150"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %367) #16
  unreachable

368:                                              ; preds = %359
  %369 = sub i64 %17, %361
  %370 = ashr exact i64 %369, 3
  %371 = icmp ult i64 %370, 1152921504606846975
  br i1 %371, label %375, label %372

372:                                              ; preds = %368
  %373 = sub i64 %7, %361
  %374 = ashr exact i64 %373, 3
  br label %385

375:                                              ; preds = %368
  %376 = ashr exact i64 %369, 2
  %377 = icmp ult i64 %376, %364
  %378 = select i1 %377, i64 %364, i64 %376
  %379 = sub i64 %7, %361
  %380 = ashr exact i64 %379, 3
  %381 = icmp eq i64 %378, 0
  br i1 %381, label %391, label %382

382:                                              ; preds = %375
  %383 = icmp ugt i64 %378, 2305843009213693951
  br i1 %383, label %384, label %385

384:                                              ; preds = %382
  tail call void @abort() #16
  unreachable

385:                                              ; preds = %372, %382
  %386 = phi i64 [ 2305843009213693951, %372 ], [ %378, %382 ]
  %387 = phi i64 [ %374, %372 ], [ %380, %382 ]
  %388 = shl i64 %386, 3
  %389 = tail call i8* @_Znwm(i64 %388) #15
  %390 = bitcast i8* %389 to %"class.SkSL::ProgramElement"**
  br label %391

391:                                              ; preds = %385, %375
  %392 = phi i64 [ %387, %385 ], [ %380, %375 ]
  %393 = phi i64 [ %386, %385 ], [ 0, %375 ]
  %394 = phi %"class.SkSL::ProgramElement"** [ %390, %385 ], [ null, %375 ]
  %395 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %394, i64 %392
  %396 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %394, i64 %393
  %397 = ptrtoint %"class.SkSL::ProgramElement"** %396 to i64
  %398 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %395, i64 %12
  %399 = add i64 %11, -8
  %400 = lshr i64 %399, 3
  %401 = add nuw nsw i64 %400, 1
  %402 = icmp ult i64 %401, 4
  br i1 %402, label %496, label %403

403:                                              ; preds = %391
  %404 = add i64 %11, -8
  %405 = lshr i64 %404, 3
  %406 = add nsw i64 %392, %405
  %407 = add nsw i64 %406, 1
  %408 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %394, i64 %407
  %409 = add nuw nsw i64 %405, 1
  %410 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %2, i64 %409
  %411 = icmp ult %"class.SkSL::ProgramElement"** %395, %410
  %412 = icmp ugt %"class.SkSL::ProgramElement"** %408, %2
  %413 = and i1 %411, %412
  br i1 %413, label %496, label %414

414:                                              ; preds = %403
  %415 = and i64 %401, 4611686018427387900
  %416 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %395, i64 %415
  %417 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %395, i64 %415
  %418 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %2, i64 %415
  %419 = add nsw i64 %415, -4
  %420 = lshr exact i64 %419, 2
  %421 = add nuw nsw i64 %420, 1
  %422 = and i64 %421, 3
  %423 = icmp ult i64 %419, 12
  br i1 %423, label %475, label %424

424:                                              ; preds = %414
  %425 = sub nsw i64 %421, %422
  br label %426

426:                                              ; preds = %426, %424
  %427 = phi i64 [ 0, %424 ], [ %472, %426 ]
  %428 = phi i64 [ %425, %424 ], [ %473, %426 ]
  %429 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %395, i64 %427
  %430 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %2, i64 %427
  %431 = bitcast %"class.SkSL::ProgramElement"** %430 to <2 x i64>*
  %432 = load <2 x i64>, <2 x i64>* %431, align 8, !alias.scope !128
  %433 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %430, i64 2
  %434 = bitcast %"class.SkSL::ProgramElement"** %433 to <2 x i64>*
  %435 = load <2 x i64>, <2 x i64>* %434, align 8, !alias.scope !128
  %436 = bitcast %"class.SkSL::ProgramElement"** %429 to <2 x i64>*
  store <2 x i64> %432, <2 x i64>* %436, align 8, !alias.scope !131, !noalias !128
  %437 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %429, i64 2
  %438 = bitcast %"class.SkSL::ProgramElement"** %437 to <2 x i64>*
  store <2 x i64> %435, <2 x i64>* %438, align 8, !alias.scope !131, !noalias !128
  %439 = or i64 %427, 4
  %440 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %395, i64 %439
  %441 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %2, i64 %439
  %442 = bitcast %"class.SkSL::ProgramElement"** %441 to <2 x i64>*
  %443 = load <2 x i64>, <2 x i64>* %442, align 8, !alias.scope !128
  %444 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %441, i64 2
  %445 = bitcast %"class.SkSL::ProgramElement"** %444 to <2 x i64>*
  %446 = load <2 x i64>, <2 x i64>* %445, align 8, !alias.scope !128
  %447 = bitcast %"class.SkSL::ProgramElement"** %440 to <2 x i64>*
  store <2 x i64> %443, <2 x i64>* %447, align 8, !alias.scope !131, !noalias !128
  %448 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %440, i64 2
  %449 = bitcast %"class.SkSL::ProgramElement"** %448 to <2 x i64>*
  store <2 x i64> %446, <2 x i64>* %449, align 8, !alias.scope !131, !noalias !128
  %450 = or i64 %427, 8
  %451 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %395, i64 %450
  %452 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %2, i64 %450
  %453 = bitcast %"class.SkSL::ProgramElement"** %452 to <2 x i64>*
  %454 = load <2 x i64>, <2 x i64>* %453, align 8, !alias.scope !128
  %455 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %452, i64 2
  %456 = bitcast %"class.SkSL::ProgramElement"** %455 to <2 x i64>*
  %457 = load <2 x i64>, <2 x i64>* %456, align 8, !alias.scope !128
  %458 = bitcast %"class.SkSL::ProgramElement"** %451 to <2 x i64>*
  store <2 x i64> %454, <2 x i64>* %458, align 8, !alias.scope !131, !noalias !128
  %459 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %451, i64 2
  %460 = bitcast %"class.SkSL::ProgramElement"** %459 to <2 x i64>*
  store <2 x i64> %457, <2 x i64>* %460, align 8, !alias.scope !131, !noalias !128
  %461 = or i64 %427, 12
  %462 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %395, i64 %461
  %463 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %2, i64 %461
  %464 = bitcast %"class.SkSL::ProgramElement"** %463 to <2 x i64>*
  %465 = load <2 x i64>, <2 x i64>* %464, align 8, !alias.scope !128
  %466 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %463, i64 2
  %467 = bitcast %"class.SkSL::ProgramElement"** %466 to <2 x i64>*
  %468 = load <2 x i64>, <2 x i64>* %467, align 8, !alias.scope !128
  %469 = bitcast %"class.SkSL::ProgramElement"** %462 to <2 x i64>*
  store <2 x i64> %465, <2 x i64>* %469, align 8, !alias.scope !131, !noalias !128
  %470 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %462, i64 2
  %471 = bitcast %"class.SkSL::ProgramElement"** %470 to <2 x i64>*
  store <2 x i64> %468, <2 x i64>* %471, align 8, !alias.scope !131, !noalias !128
  %472 = add i64 %427, 16
  %473 = add i64 %428, -4
  %474 = icmp eq i64 %473, 0
  br i1 %474, label %475, label %426, !llvm.loop !133

475:                                              ; preds = %426, %414
  %476 = phi i64 [ 0, %414 ], [ %472, %426 ]
  %477 = icmp eq i64 %422, 0
  br i1 %477, label %494, label %478

478:                                              ; preds = %475, %478
  %479 = phi i64 [ %491, %478 ], [ %476, %475 ]
  %480 = phi i64 [ %492, %478 ], [ %422, %475 ]
  %481 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %395, i64 %479
  %482 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %2, i64 %479
  %483 = bitcast %"class.SkSL::ProgramElement"** %482 to <2 x i64>*
  %484 = load <2 x i64>, <2 x i64>* %483, align 8, !alias.scope !128
  %485 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %482, i64 2
  %486 = bitcast %"class.SkSL::ProgramElement"** %485 to <2 x i64>*
  %487 = load <2 x i64>, <2 x i64>* %486, align 8, !alias.scope !128
  %488 = bitcast %"class.SkSL::ProgramElement"** %481 to <2 x i64>*
  store <2 x i64> %484, <2 x i64>* %488, align 8, !alias.scope !131, !noalias !128
  %489 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %481, i64 2
  %490 = bitcast %"class.SkSL::ProgramElement"** %489 to <2 x i64>*
  store <2 x i64> %487, <2 x i64>* %490, align 8, !alias.scope !131, !noalias !128
  %491 = add i64 %479, 4
  %492 = add i64 %480, -1
  %493 = icmp eq i64 %492, 0
  br i1 %493, label %494, label %478, !llvm.loop !134

494:                                              ; preds = %478, %475
  %495 = icmp eq i64 %401, %415
  br i1 %495, label %572, label %496

496:                                              ; preds = %494, %403, %391
  %497 = phi %"class.SkSL::ProgramElement"** [ %395, %403 ], [ %395, %391 ], [ %416, %494 ]
  %498 = phi %"class.SkSL::ProgramElement"** [ %395, %403 ], [ %395, %391 ], [ %417, %494 ]
  %499 = phi %"class.SkSL::ProgramElement"** [ %2, %403 ], [ %2, %391 ], [ %418, %494 ]
  %500 = ptrtoint %"class.SkSL::ProgramElement"** %497 to i64
  %501 = add nsw i64 %392, %12
  %502 = add nsw i64 %501, -1
  %503 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %394, i64 %502
  %504 = ptrtoint %"class.SkSL::ProgramElement"** %503 to i64
  %505 = sub i64 %504, %500
  %506 = lshr i64 %505, 3
  %507 = add nuw nsw i64 %506, 1
  %508 = and i64 %507, 7
  %509 = icmp eq i64 %508, 0
  br i1 %509, label %522, label %510

510:                                              ; preds = %496, %510
  %511 = phi %"class.SkSL::ProgramElement"** [ %518, %510 ], [ %497, %496 ]
  %512 = phi %"class.SkSL::ProgramElement"** [ %518, %510 ], [ %498, %496 ]
  %513 = phi %"class.SkSL::ProgramElement"** [ %519, %510 ], [ %499, %496 ]
  %514 = phi i64 [ %520, %510 ], [ %508, %496 ]
  %515 = bitcast %"class.SkSL::ProgramElement"** %513 to i64*
  %516 = load i64, i64* %515, align 8
  %517 = bitcast %"class.SkSL::ProgramElement"** %512 to i64*
  store i64 %516, i64* %517, align 8
  %518 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %511, i64 1
  %519 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %513, i64 1
  %520 = add i64 %514, -1
  %521 = icmp eq i64 %520, 0
  br i1 %521, label %522, label %510, !llvm.loop !135

522:                                              ; preds = %510, %496
  %523 = phi %"class.SkSL::ProgramElement"** [ %497, %496 ], [ %518, %510 ]
  %524 = phi %"class.SkSL::ProgramElement"** [ %498, %496 ], [ %518, %510 ]
  %525 = phi %"class.SkSL::ProgramElement"** [ %499, %496 ], [ %519, %510 ]
  %526 = icmp ult i64 %505, 56
  br i1 %526, label %572, label %527

527:                                              ; preds = %522, %527
  %528 = phi %"class.SkSL::ProgramElement"** [ %569, %527 ], [ %523, %522 ]
  %529 = phi %"class.SkSL::ProgramElement"** [ %569, %527 ], [ %524, %522 ]
  %530 = phi %"class.SkSL::ProgramElement"** [ %570, %527 ], [ %525, %522 ]
  %531 = bitcast %"class.SkSL::ProgramElement"** %530 to i64*
  %532 = load i64, i64* %531, align 8
  %533 = bitcast %"class.SkSL::ProgramElement"** %529 to i64*
  store i64 %532, i64* %533, align 8
  %534 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %528, i64 1
  %535 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %530, i64 1
  %536 = bitcast %"class.SkSL::ProgramElement"** %535 to i64*
  %537 = load i64, i64* %536, align 8
  %538 = bitcast %"class.SkSL::ProgramElement"** %534 to i64*
  store i64 %537, i64* %538, align 8
  %539 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %528, i64 2
  %540 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %530, i64 2
  %541 = bitcast %"class.SkSL::ProgramElement"** %540 to i64*
  %542 = load i64, i64* %541, align 8
  %543 = bitcast %"class.SkSL::ProgramElement"** %539 to i64*
  store i64 %542, i64* %543, align 8
  %544 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %528, i64 3
  %545 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %530, i64 3
  %546 = bitcast %"class.SkSL::ProgramElement"** %545 to i64*
  %547 = load i64, i64* %546, align 8
  %548 = bitcast %"class.SkSL::ProgramElement"** %544 to i64*
  store i64 %547, i64* %548, align 8
  %549 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %528, i64 4
  %550 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %530, i64 4
  %551 = bitcast %"class.SkSL::ProgramElement"** %550 to i64*
  %552 = load i64, i64* %551, align 8
  %553 = bitcast %"class.SkSL::ProgramElement"** %549 to i64*
  store i64 %552, i64* %553, align 8
  %554 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %528, i64 5
  %555 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %530, i64 5
  %556 = bitcast %"class.SkSL::ProgramElement"** %555 to i64*
  %557 = load i64, i64* %556, align 8
  %558 = bitcast %"class.SkSL::ProgramElement"** %554 to i64*
  store i64 %557, i64* %558, align 8
  %559 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %528, i64 6
  %560 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %530, i64 6
  %561 = bitcast %"class.SkSL::ProgramElement"** %560 to i64*
  %562 = load i64, i64* %561, align 8
  %563 = bitcast %"class.SkSL::ProgramElement"** %559 to i64*
  store i64 %562, i64* %563, align 8
  %564 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %528, i64 7
  %565 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %530, i64 7
  %566 = bitcast %"class.SkSL::ProgramElement"** %565 to i64*
  %567 = load i64, i64* %566, align 8
  %568 = bitcast %"class.SkSL::ProgramElement"** %564 to i64*
  store i64 %567, i64* %568, align 8
  %569 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %528, i64 8
  %570 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %530, i64 8
  %571 = icmp eq %"class.SkSL::ProgramElement"** %398, %569
  br i1 %571, label %572, label %527, !llvm.loop !136

572:                                              ; preds = %522, %527, %494
  %573 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %9, align 8
  %574 = ptrtoint %"class.SkSL::ProgramElement"** %573 to i64
  %575 = sub i64 %7, %574
  %576 = ashr exact i64 %575, 3
  %577 = sub nsw i64 0, %576
  %578 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %395, i64 %577
  %579 = ptrtoint %"class.SkSL::ProgramElement"** %578 to i64
  %580 = icmp sgt i64 %575, 0
  br i1 %580, label %581, label %584

581:                                              ; preds = %572
  %582 = bitcast %"class.SkSL::ProgramElement"** %578 to i8*
  %583 = bitcast %"class.SkSL::ProgramElement"** %573 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %582, i8* align 8 %583, i64 %575, i1 false) #14
  br label %584

584:                                              ; preds = %581, %572
  %585 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %18, align 8
  %586 = icmp eq %"class.SkSL::ProgramElement"** %585, %1
  br i1 %586, label %765, label %587

587:                                              ; preds = %584
  %588 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %585, i64 -1
  %589 = ptrtoint %"class.SkSL::ProgramElement"** %588 to i64
  %590 = sub i64 %589, %7
  %591 = lshr i64 %590, 3
  %592 = add nuw nsw i64 %591, 1
  %593 = icmp ult i64 %592, 4
  br i1 %593, label %690, label %594

594:                                              ; preds = %587
  %595 = add nsw i64 %392, %12
  %596 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %585, i64 -1
  %597 = ptrtoint %"class.SkSL::ProgramElement"** %596 to i64
  %598 = sub i64 %597, %7
  %599 = lshr i64 %598, 3
  %600 = add nsw i64 %595, %599
  %601 = add nsw i64 %600, 1
  %602 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %394, i64 %601
  %603 = add nuw nsw i64 %599, 1
  %604 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %1, i64 %603
  %605 = icmp ult %"class.SkSL::ProgramElement"** %398, %604
  %606 = icmp ugt %"class.SkSL::ProgramElement"** %602, %1
  %607 = and i1 %605, %606
  br i1 %607, label %690, label %608

608:                                              ; preds = %594
  %609 = and i64 %592, 4611686018427387900
  %610 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %398, i64 %609
  %611 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %398, i64 %609
  %612 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %1, i64 %609
  %613 = add nsw i64 %609, -4
  %614 = lshr exact i64 %613, 2
  %615 = add nuw nsw i64 %614, 1
  %616 = and i64 %615, 3
  %617 = icmp ult i64 %613, 12
  br i1 %617, label %669, label %618

618:                                              ; preds = %608
  %619 = sub nsw i64 %615, %616
  br label %620

620:                                              ; preds = %620, %618
  %621 = phi i64 [ 0, %618 ], [ %666, %620 ]
  %622 = phi i64 [ %619, %618 ], [ %667, %620 ]
  %623 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %398, i64 %621
  %624 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %1, i64 %621
  %625 = bitcast %"class.SkSL::ProgramElement"** %624 to <2 x i64>*
  %626 = load <2 x i64>, <2 x i64>* %625, align 8, !alias.scope !137
  %627 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %624, i64 2
  %628 = bitcast %"class.SkSL::ProgramElement"** %627 to <2 x i64>*
  %629 = load <2 x i64>, <2 x i64>* %628, align 8, !alias.scope !137
  %630 = bitcast %"class.SkSL::ProgramElement"** %623 to <2 x i64>*
  store <2 x i64> %626, <2 x i64>* %630, align 8, !alias.scope !140, !noalias !137
  %631 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %623, i64 2
  %632 = bitcast %"class.SkSL::ProgramElement"** %631 to <2 x i64>*
  store <2 x i64> %629, <2 x i64>* %632, align 8, !alias.scope !140, !noalias !137
  %633 = or i64 %621, 4
  %634 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %398, i64 %633
  %635 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %1, i64 %633
  %636 = bitcast %"class.SkSL::ProgramElement"** %635 to <2 x i64>*
  %637 = load <2 x i64>, <2 x i64>* %636, align 8, !alias.scope !137
  %638 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %635, i64 2
  %639 = bitcast %"class.SkSL::ProgramElement"** %638 to <2 x i64>*
  %640 = load <2 x i64>, <2 x i64>* %639, align 8, !alias.scope !137
  %641 = bitcast %"class.SkSL::ProgramElement"** %634 to <2 x i64>*
  store <2 x i64> %637, <2 x i64>* %641, align 8, !alias.scope !140, !noalias !137
  %642 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %634, i64 2
  %643 = bitcast %"class.SkSL::ProgramElement"** %642 to <2 x i64>*
  store <2 x i64> %640, <2 x i64>* %643, align 8, !alias.scope !140, !noalias !137
  %644 = or i64 %621, 8
  %645 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %398, i64 %644
  %646 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %1, i64 %644
  %647 = bitcast %"class.SkSL::ProgramElement"** %646 to <2 x i64>*
  %648 = load <2 x i64>, <2 x i64>* %647, align 8, !alias.scope !137
  %649 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %646, i64 2
  %650 = bitcast %"class.SkSL::ProgramElement"** %649 to <2 x i64>*
  %651 = load <2 x i64>, <2 x i64>* %650, align 8, !alias.scope !137
  %652 = bitcast %"class.SkSL::ProgramElement"** %645 to <2 x i64>*
  store <2 x i64> %648, <2 x i64>* %652, align 8, !alias.scope !140, !noalias !137
  %653 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %645, i64 2
  %654 = bitcast %"class.SkSL::ProgramElement"** %653 to <2 x i64>*
  store <2 x i64> %651, <2 x i64>* %654, align 8, !alias.scope !140, !noalias !137
  %655 = or i64 %621, 12
  %656 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %398, i64 %655
  %657 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %1, i64 %655
  %658 = bitcast %"class.SkSL::ProgramElement"** %657 to <2 x i64>*
  %659 = load <2 x i64>, <2 x i64>* %658, align 8, !alias.scope !137
  %660 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %657, i64 2
  %661 = bitcast %"class.SkSL::ProgramElement"** %660 to <2 x i64>*
  %662 = load <2 x i64>, <2 x i64>* %661, align 8, !alias.scope !137
  %663 = bitcast %"class.SkSL::ProgramElement"** %656 to <2 x i64>*
  store <2 x i64> %659, <2 x i64>* %663, align 8, !alias.scope !140, !noalias !137
  %664 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %656, i64 2
  %665 = bitcast %"class.SkSL::ProgramElement"** %664 to <2 x i64>*
  store <2 x i64> %662, <2 x i64>* %665, align 8, !alias.scope !140, !noalias !137
  %666 = add i64 %621, 16
  %667 = add i64 %622, -4
  %668 = icmp eq i64 %667, 0
  br i1 %668, label %669, label %620, !llvm.loop !142

669:                                              ; preds = %620, %608
  %670 = phi i64 [ 0, %608 ], [ %666, %620 ]
  %671 = icmp eq i64 %616, 0
  br i1 %671, label %688, label %672

672:                                              ; preds = %669, %672
  %673 = phi i64 [ %685, %672 ], [ %670, %669 ]
  %674 = phi i64 [ %686, %672 ], [ %616, %669 ]
  %675 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %398, i64 %673
  %676 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %1, i64 %673
  %677 = bitcast %"class.SkSL::ProgramElement"** %676 to <2 x i64>*
  %678 = load <2 x i64>, <2 x i64>* %677, align 8, !alias.scope !137
  %679 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %676, i64 2
  %680 = bitcast %"class.SkSL::ProgramElement"** %679 to <2 x i64>*
  %681 = load <2 x i64>, <2 x i64>* %680, align 8, !alias.scope !137
  %682 = bitcast %"class.SkSL::ProgramElement"** %675 to <2 x i64>*
  store <2 x i64> %678, <2 x i64>* %682, align 8, !alias.scope !140, !noalias !137
  %683 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %675, i64 2
  %684 = bitcast %"class.SkSL::ProgramElement"** %683 to <2 x i64>*
  store <2 x i64> %681, <2 x i64>* %684, align 8, !alias.scope !140, !noalias !137
  %685 = add i64 %673, 4
  %686 = add i64 %674, -1
  %687 = icmp eq i64 %686, 0
  br i1 %687, label %688, label %672, !llvm.loop !143

688:                                              ; preds = %672, %669
  %689 = icmp eq i64 %592, %609
  br i1 %689, label %765, label %690

690:                                              ; preds = %688, %594, %587
  %691 = phi %"class.SkSL::ProgramElement"** [ %398, %594 ], [ %398, %587 ], [ %610, %688 ]
  %692 = phi %"class.SkSL::ProgramElement"** [ %398, %594 ], [ %398, %587 ], [ %611, %688 ]
  %693 = phi %"class.SkSL::ProgramElement"** [ %1, %594 ], [ %1, %587 ], [ %612, %688 ]
  %694 = ptrtoint %"class.SkSL::ProgramElement"** %693 to i64
  %695 = getelementptr %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %585, i64 -1
  %696 = ptrtoint %"class.SkSL::ProgramElement"** %695 to i64
  %697 = sub i64 %696, %694
  %698 = lshr i64 %697, 3
  %699 = add nuw nsw i64 %698, 1
  %700 = and i64 %699, 7
  %701 = icmp eq i64 %700, 0
  br i1 %701, label %714, label %702

702:                                              ; preds = %690, %702
  %703 = phi %"class.SkSL::ProgramElement"** [ %711, %702 ], [ %691, %690 ]
  %704 = phi %"class.SkSL::ProgramElement"** [ %711, %702 ], [ %692, %690 ]
  %705 = phi %"class.SkSL::ProgramElement"** [ %710, %702 ], [ %693, %690 ]
  %706 = phi i64 [ %712, %702 ], [ %700, %690 ]
  %707 = bitcast %"class.SkSL::ProgramElement"** %704 to i64*
  %708 = bitcast %"class.SkSL::ProgramElement"** %705 to i64*
  %709 = load i64, i64* %708, align 8
  store i64 %709, i64* %707, align 8
  %710 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %705, i64 1
  %711 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %703, i64 1
  %712 = add i64 %706, -1
  %713 = icmp eq i64 %712, 0
  br i1 %713, label %714, label %702, !llvm.loop !144

714:                                              ; preds = %702, %690
  %715 = phi %"class.SkSL::ProgramElement"** [ undef, %690 ], [ %711, %702 ]
  %716 = phi %"class.SkSL::ProgramElement"** [ %691, %690 ], [ %711, %702 ]
  %717 = phi %"class.SkSL::ProgramElement"** [ %692, %690 ], [ %711, %702 ]
  %718 = phi %"class.SkSL::ProgramElement"** [ %693, %690 ], [ %710, %702 ]
  %719 = icmp ult i64 %697, 56
  br i1 %719, label %765, label %720

720:                                              ; preds = %714, %720
  %721 = phi %"class.SkSL::ProgramElement"** [ %763, %720 ], [ %716, %714 ]
  %722 = phi %"class.SkSL::ProgramElement"** [ %763, %720 ], [ %717, %714 ]
  %723 = phi %"class.SkSL::ProgramElement"** [ %762, %720 ], [ %718, %714 ]
  %724 = bitcast %"class.SkSL::ProgramElement"** %722 to i64*
  %725 = bitcast %"class.SkSL::ProgramElement"** %723 to i64*
  %726 = load i64, i64* %725, align 8
  store i64 %726, i64* %724, align 8
  %727 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %723, i64 1
  %728 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %721, i64 1
  %729 = bitcast %"class.SkSL::ProgramElement"** %728 to i64*
  %730 = bitcast %"class.SkSL::ProgramElement"** %727 to i64*
  %731 = load i64, i64* %730, align 8
  store i64 %731, i64* %729, align 8
  %732 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %723, i64 2
  %733 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %721, i64 2
  %734 = bitcast %"class.SkSL::ProgramElement"** %733 to i64*
  %735 = bitcast %"class.SkSL::ProgramElement"** %732 to i64*
  %736 = load i64, i64* %735, align 8
  store i64 %736, i64* %734, align 8
  %737 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %723, i64 3
  %738 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %721, i64 3
  %739 = bitcast %"class.SkSL::ProgramElement"** %738 to i64*
  %740 = bitcast %"class.SkSL::ProgramElement"** %737 to i64*
  %741 = load i64, i64* %740, align 8
  store i64 %741, i64* %739, align 8
  %742 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %723, i64 4
  %743 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %721, i64 4
  %744 = bitcast %"class.SkSL::ProgramElement"** %743 to i64*
  %745 = bitcast %"class.SkSL::ProgramElement"** %742 to i64*
  %746 = load i64, i64* %745, align 8
  store i64 %746, i64* %744, align 8
  %747 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %723, i64 5
  %748 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %721, i64 5
  %749 = bitcast %"class.SkSL::ProgramElement"** %748 to i64*
  %750 = bitcast %"class.SkSL::ProgramElement"** %747 to i64*
  %751 = load i64, i64* %750, align 8
  store i64 %751, i64* %749, align 8
  %752 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %723, i64 6
  %753 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %721, i64 6
  %754 = bitcast %"class.SkSL::ProgramElement"** %753 to i64*
  %755 = bitcast %"class.SkSL::ProgramElement"** %752 to i64*
  %756 = load i64, i64* %755, align 8
  store i64 %756, i64* %754, align 8
  %757 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %723, i64 7
  %758 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %721, i64 7
  %759 = bitcast %"class.SkSL::ProgramElement"** %758 to i64*
  %760 = bitcast %"class.SkSL::ProgramElement"** %757 to i64*
  %761 = load i64, i64* %760, align 8
  store i64 %761, i64* %759, align 8
  %762 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %723, i64 8
  %763 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %721, i64 8
  %764 = icmp eq %"class.SkSL::ProgramElement"** %762, %585
  br i1 %764, label %765, label %720, !llvm.loop !145

765:                                              ; preds = %714, %720, %688, %584
  %766 = phi %"class.SkSL::ProgramElement"** [ %398, %584 ], [ %610, %688 ], [ %715, %714 ], [ %763, %720 ]
  %767 = ptrtoint %"class.SkSL::ProgramElement"** %766 to i64
  %768 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %9, align 8
  store i64 %579, i64* %360, align 8
  store i64 %767, i64* %24, align 8
  store i64 %397, i64* %16, align 8
  %769 = icmp eq %"class.SkSL::ProgramElement"** %768, null
  br i1 %769, label %772, label %770

770:                                              ; preds = %765
  %771 = bitcast %"class.SkSL::ProgramElement"** %768 to i8*
  tail call void @_ZdlPv(i8* %771) #15
  br label %772

772:                                              ; preds = %770, %765, %209, %354, %358, %4
  %773 = phi %"class.SkSL::ProgramElement"** [ %1, %4 ], [ %1, %358 ], [ %1, %354 ], [ %1, %209 ], [ %395, %765 ], [ %395, %770 ]
  ret %"class.SkSL::ProgramElement"** %773
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZZN4SkSL11IRGenerator30findAndDeclareBuiltinVariablesEvEN22BuiltinVariableScannerD2Ev(%class.BuiltinVariableScanner* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.BuiltinVariableScanner, %class.BuiltinVariableScanner* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVZN4SkSL11IRGenerator30findAndDeclareBuiltinVariablesEvE22BuiltinVariableScanner, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.BuiltinVariableScanner, %class.BuiltinVariableScanner* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %3, align 8
  %5 = icmp eq %"class.SkSL::ProgramElement"** %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.SkSL::ProgramElement"** %4 to i64
  %8 = getelementptr inbounds %class.BuiltinVariableScanner, %class.BuiltinVariableScanner* %0, i64 0, i32 2, i32 0, i32 1
  %9 = bitcast %"class.SkSL::ProgramElement"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.SkSL::ProgramElement"** %4 to i8*
  tail call void @_ZdlPv(i8* %10) #15
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL11IRGenerator5startERKNS_12ParsedModuleEbPNSt3__16vectorINS4_10unique_ptrINS_14ProgramElementENS4_14default_deleteIS7_EEEENS4_9allocatorISA_EEEEPNS5_IPKS7_NSB_ISG_EEEE(%"class.SkSL::IRGenerator"*, %"struct.SkSL::ParsedModule"* nocapture readonly dereferenceable(32), i1 zeroext, %"class.std::__1::vector.137"*, %"class.std::__1::vector.150"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::unique_ptr.165", align 8
  %7 = alloca %"struct.SkSL::Modifiers", align 8
  %8 = alloca %"class.std::__1::unique_ptr.139", align 8
  %9 = zext i1 %2 to i8
  %10 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 10
  store %"class.std::__1::vector.137"* %3, %"class.std::__1::vector.137"** %10, align 8
  %11 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 11
  store %"class.std::__1::vector.150"* %4, %"class.std::__1::vector.150"** %11, align 8
  %12 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 4
  %13 = bitcast %"struct.SkSL::ParsedModule"* %1 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %1, i64 0, i32 0, i32 1
  %16 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %15, align 8
  %17 = ptrtoint %"class.std::__1::__shared_weak_count"* %16 to i64
  %18 = icmp eq %"class.std::__1::__shared_weak_count"* %16, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %5
  %20 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %16, i64 0, i32 0, i32 1
  %21 = atomicrmw add i64* %20, i64 1 monotonic
  br label %22

22:                                               ; preds = %19, %5
  %23 = bitcast %"class.std::__1::shared_ptr"* %12 to i64*
  store i64 %14, i64* %23, align 8
  %24 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 4, i32 1
  %25 = bitcast %"class.std::__1::__shared_weak_count"** %24 to i64*
  %26 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %24, align 8
  store i64 %17, i64* %25, align 8
  %27 = icmp eq %"class.std::__1::__shared_weak_count"* %26, null
  br i1 %27, label %38, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %26, i64 0, i32 0, i32 1
  %30 = atomicrmw add i64* %29, i64 -1 acq_rel
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %38

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %26, i64 0, i32 0
  %34 = bitcast %"class.std::__1::__shared_weak_count"* %26 to void (%"class.std::__1::__shared_count"*)***
  %35 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %35, i64 2
  %37 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %36, align 8
  tail call void %37(%"class.std::__1::__shared_count"* %33) #14
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %26) #14
  br label %38

38:                                               ; preds = %22, %28, %32
  %39 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %1, i64 0, i32 1, i32 0
  %40 = load %"class.SkSL::IRIntrinsicMap"*, %"class.SkSL::IRIntrinsicMap"** %39, align 8
  %41 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 5
  store %"class.SkSL::IRIntrinsicMap"* %40, %"class.SkSL::IRIntrinsicMap"** %41, align 8
  %42 = icmp eq %"class.SkSL::IRIntrinsicMap"* %40, null
  br i1 %42, label %60, label %43

43:                                               ; preds = %38, %49
  %44 = phi %"class.SkSL::IRIntrinsicMap"* [ %51, %49 ], [ %40, %38 ]
  %45 = getelementptr inbounds %"class.SkSL::IRIntrinsicMap", %"class.SkSL::IRIntrinsicMap"* %44, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %46 = bitcast %"struct.std::__1::__hash_node_base.66"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %53

49:                                               ; preds = %53, %43
  %50 = getelementptr inbounds %"class.SkSL::IRIntrinsicMap", %"class.SkSL::IRIntrinsicMap"* %44, i64 0, i32 1
  %51 = load %"class.SkSL::IRIntrinsicMap"*, %"class.SkSL::IRIntrinsicMap"** %50, align 8
  %52 = icmp eq %"class.SkSL::IRIntrinsicMap"* %51, null
  br i1 %52, label %60, label %43

53:                                               ; preds = %43, %53
  %54 = phi i64 [ %58, %53 ], [ %47, %43 ]
  %55 = inttoptr i64 %54 to %"struct.std::__1::__hash_node.419"*
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node.419", %"struct.std::__1::__hash_node.419"* %55, i64 0, i32 2, i32 0, i32 1, i32 1
  store i8 0, i8* %56, align 8
  %57 = inttoptr i64 %54 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %49, label %53

60:                                               ; preds = %49, %38
  %61 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 15
  store i8 %9, i8* %61, align 4
  %62 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 1, i32 0
  store i8 0, i8* %62, align 1
  %63 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 1, i32 1
  store i8 0, i8* %63, align 1
  %64 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 7
  store i32 -1, i32* %64, align 8
  %65 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 12
  %66 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %67 = bitcast %"class.SkSL::Variable"** %65 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 16, i1 false)
  %68 = load i64, i64* %66, align 8
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %120, label %70

70:                                               ; preds = %60
  %71 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 0
  %72 = load %"struct.std::__1::__hash_node_base.116"*, %"struct.std::__1::__hash_node_base.116"** %71, align 8
  %73 = icmp eq %"struct.std::__1::__hash_node_base.116"* %72, null
  br i1 %73, label %80, label %74

74:                                               ; preds = %70, %74
  %75 = phi %"struct.std::__1::__hash_node_base.116"* [ %77, %74 ], [ %72, %70 ]
  %76 = getelementptr inbounds %"struct.std::__1::__hash_node_base.116", %"struct.std::__1::__hash_node_base.116"* %75, i64 0, i32 0
  %77 = load %"struct.std::__1::__hash_node_base.116"*, %"struct.std::__1::__hash_node_base.116"** %76, align 8
  %78 = bitcast %"struct.std::__1::__hash_node_base.116"* %75 to i8*
  tail call void @_ZdlPv(i8* %78) #15
  %79 = icmp eq %"struct.std::__1::__hash_node_base.116"* %77, null
  br i1 %79, label %80, label %74

80:                                               ; preds = %74, %70
  store %"struct.std::__1::__hash_node_base.116"* null, %"struct.std::__1::__hash_node_base.116"** %71, align 8
  %81 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %82 = load i64, i64* %81, align 8
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %102, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = add i64 %82, -1
  %87 = and i64 %82, 3
  %88 = icmp ult i64 %86, 3
  br i1 %88, label %91, label %89

89:                                               ; preds = %84
  %90 = sub i64 %82, %87
  br label %103

91:                                               ; preds = %103, %84
  %92 = phi i64 [ 0, %84 ], [ %117, %103 ]
  %93 = icmp eq i64 %87, 0
  br i1 %93, label %102, label %94

94:                                               ; preds = %91, %94
  %95 = phi i64 [ %99, %94 ], [ %92, %91 ]
  %96 = phi i64 [ %100, %94 ], [ %87, %91 ]
  %97 = load %"struct.std::__1::__hash_node_base.116"**, %"struct.std::__1::__hash_node_base.116"*** %85, align 8
  %98 = getelementptr inbounds %"struct.std::__1::__hash_node_base.116"*, %"struct.std::__1::__hash_node_base.116"** %97, i64 %95
  store %"struct.std::__1::__hash_node_base.116"* null, %"struct.std::__1::__hash_node_base.116"** %98, align 8
  %99 = add nuw i64 %95, 1
  %100 = add i64 %96, -1
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %102, label %94, !llvm.loop !146

102:                                              ; preds = %91, %94, %80
  store i64 0, i64* %66, align 8
  br label %120

103:                                              ; preds = %103, %89
  %104 = phi i64 [ 0, %89 ], [ %117, %103 ]
  %105 = phi i64 [ %90, %89 ], [ %118, %103 ]
  %106 = load %"struct.std::__1::__hash_node_base.116"**, %"struct.std::__1::__hash_node_base.116"*** %85, align 8
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base.116"*, %"struct.std::__1::__hash_node_base.116"** %106, i64 %104
  store %"struct.std::__1::__hash_node_base.116"* null, %"struct.std::__1::__hash_node_base.116"** %107, align 8
  %108 = or i64 %104, 1
  %109 = load %"struct.std::__1::__hash_node_base.116"**, %"struct.std::__1::__hash_node_base.116"*** %85, align 8
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.116"*, %"struct.std::__1::__hash_node_base.116"** %109, i64 %108
  store %"struct.std::__1::__hash_node_base.116"* null, %"struct.std::__1::__hash_node_base.116"** %110, align 8
  %111 = or i64 %104, 2
  %112 = load %"struct.std::__1::__hash_node_base.116"**, %"struct.std::__1::__hash_node_base.116"*** %85, align 8
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base.116"*, %"struct.std::__1::__hash_node_base.116"** %112, i64 %111
  store %"struct.std::__1::__hash_node_base.116"* null, %"struct.std::__1::__hash_node_base.116"** %113, align 8
  %114 = or i64 %104, 3
  %115 = load %"struct.std::__1::__hash_node_base.116"**, %"struct.std::__1::__hash_node_base.116"*** %85, align 8
  %116 = getelementptr inbounds %"struct.std::__1::__hash_node_base.116"*, %"struct.std::__1::__hash_node_base.116"** %115, i64 %114
  store %"struct.std::__1::__hash_node_base.116"* null, %"struct.std::__1::__hash_node_base.116"** %116, align 8
  %117 = add nuw i64 %104, 4
  %118 = add i64 %105, -4
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %91, label %103

120:                                              ; preds = %60, %102
  tail call void @_ZN4SkSL11IRGenerator15pushSymbolTableEv(%"class.SkSL::IRGenerator"* %0)
  %121 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %0, i64 0, i32 0
  %122 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %121, align 8
  %123 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %122, i64 0, i32 4
  %124 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %123, align 8
  %125 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %124, i64 0, i32 0
  %126 = load i8, i8* %125, align 8
  %127 = icmp eq i8 %126, 2
  br i1 %127, label %128, label %253

128:                                              ; preds = %120
  %129 = load i8, i8* %61, align 4, !range !2
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %131, label %253

131:                                              ; preds = %128
  %132 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %122, i64 0, i32 2
  %133 = load %class.GrShaderCaps*, %class.GrShaderCaps** %132, align 8
  %134 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %133, i64 0, i32 2
  %135 = bitcast i56* %134 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = and i64 %136, 4
  %138 = icmp eq i64 %137, 0
  %139 = bitcast %"struct.SkSL::Modifiers"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %139) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %139, i8 -86, i64 80, i1 false)
  %140 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %7, i64 0, i32 0, i32 0
  store i32 0, i32* %140, align 8
  %141 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %7, i64 0, i32 0, i32 1
  %142 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %7, i64 0, i32 0, i32 12, i32 0
  %143 = bitcast i32* %141 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %143, i8 -1, i64 40, i1 false) #14
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.30, i64 0, i64 0), i8** %142, align 8
  %144 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %7, i64 0, i32 0, i32 12, i32 1
  store i64 0, i64* %144, align 8
  %145 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %7, i64 0, i32 0, i32 13
  store i32 0, i32* %145, align 8
  %146 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %7, i64 0, i32 1
  store i32 0, i32* %146, align 8
  br i1 %138, label %149, label %147

147:                                              ; preds = %131
  store i32 2, i32* %146, align 8
  %148 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %7, i64 0, i32 0, i32 6
  store i32 8, i32* %148, align 8
  br label %149

149:                                              ; preds = %131, %147
  %150 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %122, i64 0, i32 3
  %151 = load %"class.SkSL::ModifiersPool"*, %"class.SkSL::ModifiersPool"** %150, align 8
  %152 = getelementptr inbounds %"class.SkSL::ModifiersPool", %"class.SkSL::ModifiersPool"* %151, i64 0, i32 0, i32 0
  %153 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %152, %"struct.SkSL::Modifiers"* nonnull dereferenceable(80) %7, %"struct.SkSL::Modifiers"* nonnull dereferenceable(80) %7) #14
  %154 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %153, 0
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %154, i64 2
  %156 = ptrtoint %"struct.std::__1::__hash_node_base"* %155 to i64
  %157 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %121, align 8
  %158 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %157, i64 0, i32 0, i32 8, i32 0, i32 0, i32 0
  %159 = bitcast %"class.SkSL::Type"** %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 64) #14
  %162 = bitcast i8* %161 to %"class.SkSL::Variable"*
  %163 = bitcast i8* %161 to i32 (...)***
  %164 = getelementptr inbounds i8, i8* %161, i64 8
  %165 = bitcast i8* %164 to i32*
  store i32 -1, i32* %165, align 8
  %166 = getelementptr inbounds i8, i8* %161, i64 12
  %167 = bitcast i8* %166 to i32*
  store i32 15, i32* %167, align 4
  %168 = getelementptr inbounds i8, i8* %161, i64 16
  %169 = bitcast i8* %168 to i8**
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.33, i64 0, i64 0), i8** %169, align 8
  %170 = getelementptr inbounds i8, i8* %161, i64 24
  %171 = bitcast i8* %170 to i64*
  store i64 15, i64* %171, align 8
  %172 = getelementptr inbounds i8, i8* %161, i64 32
  %173 = bitcast i8* %172 to i64*
  store i64 %160, i64* %173, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL8VariableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %163, align 8
  %174 = getelementptr inbounds i8, i8* %161, i64 40
  %175 = bitcast i8* %174 to %"class.SkSL::VarDeclaration"**
  store %"class.SkSL::VarDeclaration"* null, %"class.SkSL::VarDeclaration"** %175, align 8
  %176 = getelementptr inbounds i8, i8* %161, i64 48
  %177 = bitcast i8* %176 to i64*
  store i64 %156, i64* %177, align 8
  %178 = getelementptr inbounds i8, i8* %161, i64 56
  store i8 0, i8* %178, align 8
  %179 = getelementptr inbounds i8, i8* %161, i64 57
  store i8 0, i8* %179, align 1
  %180 = ptrtoint i8* %161 to i64
  %181 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %121, align 8
  %182 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %181, i64 0, i32 0, i32 8, i32 0, i32 0, i32 0
  %183 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %182, align 8
  %184 = call %"class.SkSL::Statement"* @_ZN4SkSL14VarDeclaration4MakeERKNS_7ContextEPNS_8VariableEPKNS_4TypeEiNSt3__110unique_ptrINS_10ExpressionENS9_14default_deleteISB_EEEE(%"class.SkSL::Context"* dereferenceable(744) %181, %"class.SkSL::Variable"* %162, %"class.SkSL::Type"* %183, i32 0, %"class.SkSL::Expression"* null) #14
  %185 = ptrtoint %"class.SkSL::Statement"* %184 to i64
  %186 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %12, i64 0, i32 0
  %187 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %186, align 8
  %188 = bitcast i8* %161 to %"class.SkSL::Symbol"*
  call void @_ZN4SkSL11SymbolTable19addWithoutOwnershipEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %187, %"class.SkSL::Symbol"* %188) #14
  %189 = bitcast %"class.std::__1::unique_ptr.165"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #14
  %190 = bitcast %"class.std::__1::unique_ptr.165"* %6 to i64*
  store i64 %180, i64* %190, align 8
  %191 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %187, i64 0, i32 1, i32 0, i32 1
  %192 = load %"class.std::__1::unique_ptr.165"*, %"class.std::__1::unique_ptr.165"** %191, align 8
  %193 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %187, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %194 = load %"class.std::__1::unique_ptr.165"*, %"class.std::__1::unique_ptr.165"** %193, align 8
  %195 = icmp ult %"class.std::__1::unique_ptr.165"* %192, %194
  br i1 %195, label %196, label %202

196:                                              ; preds = %149
  %197 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %197, align 8
  %198 = bitcast %"class.std::__1::unique_ptr.165"* %192 to i64*
  store i64 %180, i64* %198, align 8
  %199 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %192, i64 1
  %200 = ptrtoint %"class.std::__1::unique_ptr.165"* %199 to i64
  %201 = bitcast %"class.std::__1::unique_ptr.165"** %191 to i64*
  store i64 %200, i64* %201, align 8
  br label %204

202:                                              ; preds = %149
  %203 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %187, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.163"* %203, %"class.std::__1::unique_ptr.165"* nonnull dereferenceable(8) %6) #14
  br label %204

204:                                              ; preds = %202, %196
  %205 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %6, i64 0, i32 0, i32 0, i32 0
  %206 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %205, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %205, align 8
  %207 = icmp eq %"class.SkSL::Symbol"* %206, null
  br i1 %207, label %213, label %208

208:                                              ; preds = %204
  %209 = bitcast %"class.SkSL::Symbol"* %206 to void (%"class.SkSL::Symbol"*)***
  %210 = load void (%"class.SkSL::Symbol"*)**, void (%"class.SkSL::Symbol"*)*** %209, align 8
  %211 = getelementptr inbounds void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %210, i64 1
  %212 = load void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %211, align 8
  call void %212(%"class.SkSL::Symbol"* nonnull %206) #14
  br label %213

213:                                              ; preds = %204, %208
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #14
  %214 = load %"class.std::__1::vector.137"*, %"class.std::__1::vector.137"** %10, align 8
  %215 = bitcast %"class.std::__1::unique_ptr.139"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %215) #14
  %216 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 24) #14
  %217 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %184, i64 0, i32 0, i32 1
  %218 = load i32, i32* %217, align 8
  %219 = getelementptr inbounds i8, i8* %216, i64 8
  %220 = bitcast i8* %219 to i32*
  store i32 %218, i32* %220, align 8
  %221 = getelementptr inbounds i8, i8* %216, i64 12
  %222 = bitcast i8* %221 to i32*
  store i32 4, i32* %222, align 4
  %223 = bitcast i8* %216 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL20GlobalVarDeclarationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %223, align 8
  %224 = getelementptr inbounds i8, i8* %216, i64 16
  %225 = bitcast i8* %224 to i64*
  store i64 %185, i64* %225, align 8
  %226 = ptrtoint i8* %216 to i64
  %227 = bitcast %"class.std::__1::unique_ptr.139"* %8 to i64*
  store i64 %226, i64* %227, align 8
  %228 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %214, i64 0, i32 0, i32 1
  %229 = load %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %228, align 8
  %230 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %214, i64 0, i32 0, i32 2, i32 0, i32 0
  %231 = load %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %230, align 8
  %232 = icmp ult %"class.std::__1::unique_ptr.139"* %229, %231
  br i1 %232, label %233, label %239

233:                                              ; preds = %213
  %234 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %234, align 8
  %235 = bitcast %"class.std::__1::unique_ptr.139"* %229 to i64*
  store i64 %226, i64* %235, align 8
  %236 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %229, i64 1
  %237 = ptrtoint %"class.std::__1::unique_ptr.139"* %236 to i64
  %238 = bitcast %"class.std::__1::unique_ptr.139"** %228 to i64*
  store i64 %237, i64* %238, align 8
  br label %240

239:                                              ; preds = %213
  call void @_ZNSt3__16vectorINS_10unique_ptrIN4SkSL14ProgramElementENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.137"* %214, %"class.std::__1::unique_ptr.139"* nonnull dereferenceable(8) %8) #14
  br label %240

240:                                              ; preds = %233, %239
  %241 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %8, i64 0, i32 0, i32 0, i32 0
  %242 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %241, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %241, align 8
  %243 = icmp eq %"class.SkSL::ProgramElement"* %242, null
  br i1 %243, label %249, label %244

244:                                              ; preds = %240
  %245 = bitcast %"class.SkSL::ProgramElement"* %242 to void (%"class.SkSL::ProgramElement"*)***
  %246 = load void (%"class.SkSL::ProgramElement"*)**, void (%"class.SkSL::ProgramElement"*)*** %245, align 8
  %247 = getelementptr inbounds void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %246, i64 1
  %248 = load void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %247, align 8
  call void %248(%"class.SkSL::ProgramElement"* nonnull %242) #14
  br label %249

249:                                              ; preds = %244, %240
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %215) #14
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %139) #14
  %250 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %121, align 8
  %251 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %250, i64 0, i32 4
  %252 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %251, align 8
  br label %253

253:                                              ; preds = %128, %249, %120
  %254 = phi %"struct.SkSL::ProgramConfig"* [ %124, %128 ], [ %252, %249 ], [ %124, %120 ]
  %255 = phi %"class.SkSL::Context"* [ %122, %128 ], [ %250, %249 ], [ %122, %120 ]
  %256 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %254, i64 0, i32 1, i32 22
  %257 = load %"class.std::__1::vector.36"*, %"class.std::__1::vector.36"** %256, align 8
  %258 = icmp eq %"class.std::__1::vector.36"* %257, null
  br i1 %258, label %279, label %259

259:                                              ; preds = %253
  %260 = getelementptr inbounds %"class.std::__1::vector.36", %"class.std::__1::vector.36"* %257, i64 0, i32 0, i32 0
  %261 = load %"class.std::__1::unique_ptr.38"*, %"class.std::__1::unique_ptr.38"** %260, align 8
  %262 = getelementptr inbounds %"class.std::__1::vector.36", %"class.std::__1::vector.36"* %257, i64 0, i32 0, i32 1
  %263 = load %"class.std::__1::unique_ptr.38"*, %"class.std::__1::unique_ptr.38"** %262, align 8
  %264 = icmp eq %"class.std::__1::unique_ptr.38"* %261, %263
  br i1 %264, label %279, label %265

265:                                              ; preds = %259
  %266 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %12, i64 0, i32 0
  br label %267

267:                                              ; preds = %265, %267
  %268 = phi %"class.std::__1::unique_ptr.38"* [ %261, %265 ], [ %273, %267 ]
  %269 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %266, align 8
  %270 = getelementptr inbounds %"class.std::__1::unique_ptr.38", %"class.std::__1::unique_ptr.38"* %268, i64 0, i32 0, i32 0, i32 0
  %271 = load %"class.SkSL::ExternalFunction"*, %"class.SkSL::ExternalFunction"** %270, align 8
  %272 = getelementptr inbounds %"class.SkSL::ExternalFunction", %"class.SkSL::ExternalFunction"* %271, i64 0, i32 0
  call void @_ZN4SkSL11SymbolTable19addWithoutOwnershipEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %269, %"class.SkSL::Symbol"* %272) #14
  %273 = getelementptr inbounds %"class.std::__1::unique_ptr.38", %"class.std::__1::unique_ptr.38"* %268, i64 1
  %274 = icmp eq %"class.std::__1::unique_ptr.38"* %273, %263
  br i1 %274, label %275, label %267

275:                                              ; preds = %267
  %276 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %121, align 8
  %277 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %276, i64 0, i32 4
  %278 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %277, align 8
  br label %279

279:                                              ; preds = %275, %259, %253
  %280 = phi %"struct.SkSL::ProgramConfig"* [ %278, %275 ], [ %254, %259 ], [ %254, %253 ]
  %281 = phi %"class.SkSL::Context"* [ %276, %275 ], [ %255, %259 ], [ %255, %253 ]
  %282 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %280, i64 0, i32 1, i32 19
  %283 = load i8, i8* %282, align 1, !range !2
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %285, label %416

285:                                              ; preds = %279
  %286 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %280, i64 0, i32 0
  %287 = load i8, i8* %286, align 8
  %288 = and i8 %287, -2
  %289 = icmp eq i8 %288, 4
  br i1 %289, label %290, label %416

290:                                              ; preds = %285
  %291 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %12, i64 0, i32 0
  %292 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %291, align 8
  %293 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %281, i64 0, i32 0, i32 32, i32 0, i32 0, i32 0
  %294 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %293, align 8
  %295 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %294, i64 0, i32 0
  call void @_ZN4SkSL11SymbolTable8addAliasENS_14StringFragmentEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %292, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.99, i64 0, i64 0), i64 6, %"class.SkSL::Symbol"* %295) #14
  %296 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %291, align 8
  %297 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %121, align 8
  %298 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %297, i64 0, i32 0, i32 33, i32 0, i32 0, i32 0
  %299 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %298, align 8
  %300 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %299, i64 0, i32 0
  call void @_ZN4SkSL11SymbolTable8addAliasENS_14StringFragmentEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %296, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.100, i64 0, i64 0), i64 6, %"class.SkSL::Symbol"* %300) #14
  %301 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %291, align 8
  %302 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %121, align 8
  %303 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %302, i64 0, i32 0, i32 34, i32 0, i32 0, i32 0
  %304 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %303, align 8
  %305 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %304, i64 0, i32 0
  call void @_ZN4SkSL11SymbolTable8addAliasENS_14StringFragmentEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %301, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.101, i64 0, i64 0), i64 6, %"class.SkSL::Symbol"* %305) #14
  %306 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %291, align 8
  %307 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %121, align 8
  %308 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %307, i64 0, i32 0, i32 35, i32 0, i32 0, i32 0
  %309 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %308, align 8
  %310 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %309, i64 0, i32 0
  call void @_ZN4SkSL11SymbolTable8addAliasENS_14StringFragmentEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %306, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.102, i64 0, i64 0), i64 6, %"class.SkSL::Symbol"* %310) #14
  %311 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %291, align 8
  %312 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %121, align 8
  %313 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %312, i64 0, i32 0, i32 36, i32 0, i32 0, i32 0
  %314 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %313, align 8
  %315 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %314, i64 0, i32 0
  call void @_ZN4SkSL11SymbolTable8addAliasENS_14StringFragmentEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %311, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.103, i64 0, i64 0), i64 6, %"class.SkSL::Symbol"* %315) #14
  %316 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %291, align 8
  %317 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %121, align 8
  %318 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %317, i64 0, i32 0, i32 37, i32 0, i32 0, i32 0
  %319 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %318, align 8
  %320 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %319, i64 0, i32 0
  call void @_ZN4SkSL11SymbolTable8addAliasENS_14StringFragmentEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %316, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.104, i64 0, i64 0), i64 6, %"class.SkSL::Symbol"* %320) #14
  %321 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %291, align 8
  %322 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %121, align 8
  %323 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %322, i64 0, i32 0, i32 38, i32 0, i32 0, i32 0
  %324 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %323, align 8
  %325 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %324, i64 0, i32 0
  call void @_ZN4SkSL11SymbolTable8addAliasENS_14StringFragmentEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %321, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.105, i64 0, i64 0), i64 6, %"class.SkSL::Symbol"* %325) #14
  %326 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %291, align 8
  %327 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %121, align 8
  %328 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %327, i64 0, i32 0, i32 39, i32 0, i32 0, i32 0
  %329 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %328, align 8
  %330 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %329, i64 0, i32 0
  call void @_ZN4SkSL11SymbolTable8addAliasENS_14StringFragmentEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %326, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.106, i64 0, i64 0), i64 6, %"class.SkSL::Symbol"* %330) #14
  %331 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %291, align 8
  %332 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %121, align 8
  %333 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %332, i64 0, i32 0, i32 40, i32 0, i32 0, i32 0
  %334 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %333, align 8
  %335 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %334, i64 0, i32 0
  call void @_ZN4SkSL11SymbolTable8addAliasENS_14StringFragmentEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %331, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.107, i64 0, i64 0), i64 6, %"class.SkSL::Symbol"* %335) #14
  %336 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %291, align 8
  %337 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %121, align 8
  %338 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %337, i64 0, i32 0, i32 33, i32 0, i32 0, i32 0
  %339 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %338, align 8
  %340 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %339, i64 0, i32 0
  call void @_ZN4SkSL11SymbolTable8addAliasENS_14StringFragmentEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %336, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.108, i64 0, i64 0), i64 8, %"class.SkSL::Symbol"* %340) #14
  %341 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %291, align 8
  %342 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %121, align 8
  %343 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %342, i64 0, i32 0, i32 34, i32 0, i32 0, i32 0
  %344 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %343, align 8
  %345 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %344, i64 0, i32 0
  call void @_ZN4SkSL11SymbolTable8addAliasENS_14StringFragmentEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %341, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.109, i64 0, i64 0), i64 8, %"class.SkSL::Symbol"* %345) #14
  %346 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %291, align 8
  %347 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %121, align 8
  %348 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %347, i64 0, i32 0, i32 35, i32 0, i32 0, i32 0
  %349 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %348, align 8
  %350 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %349, i64 0, i32 0
  call void @_ZN4SkSL11SymbolTable8addAliasENS_14StringFragmentEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %346, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.110, i64 0, i64 0), i64 8, %"class.SkSL::Symbol"* %350) #14
  %351 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %291, align 8
  %352 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %121, align 8
  %353 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %352, i64 0, i32 0, i32 37, i32 0, i32 0, i32 0
  %354 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %353, align 8
  %355 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %354, i64 0, i32 0
  call void @_ZN4SkSL11SymbolTable8addAliasENS_14StringFragmentEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %351, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.111, i64 0, i64 0), i64 8, %"class.SkSL::Symbol"* %355) #14
  %356 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %291, align 8
  %357 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %121, align 8
  %358 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %357, i64 0, i32 0, i32 38, i32 0, i32 0, i32 0
  %359 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %358, align 8
  %360 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %359, i64 0, i32 0
  call void @_ZN4SkSL11SymbolTable8addAliasENS_14StringFragmentEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %356, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.112, i64 0, i64 0), i64 8, %"class.SkSL::Symbol"* %360) #14
  %361 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %291, align 8
  %362 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %121, align 8
  %363 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %362, i64 0, i32 0, i32 39, i32 0, i32 0, i32 0
  %364 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %363, align 8
  %365 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %364, i64 0, i32 0
  call void @_ZN4SkSL11SymbolTable8addAliasENS_14StringFragmentEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %361, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.113, i64 0, i64 0), i64 8, %"class.SkSL::Symbol"* %365) #14
  %366 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %291, align 8
  %367 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %121, align 8
  %368 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %367, i64 0, i32 0, i32 42, i32 0, i32 0, i32 0
  %369 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %368, align 8
  %370 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %369, i64 0, i32 0
  call void @_ZN4SkSL11SymbolTable8addAliasENS_14StringFragmentEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %366, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.114, i64 0, i64 0), i64 7, %"class.SkSL::Symbol"* %370) #14
  %371 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %291, align 8
  %372 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %121, align 8
  %373 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %372, i64 0, i32 0, i32 43, i32 0, i32 0, i32 0
  %374 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %373, align 8
  %375 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %374, i64 0, i32 0
  call void @_ZN4SkSL11SymbolTable8addAliasENS_14StringFragmentEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %371, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.115, i64 0, i64 0), i64 7, %"class.SkSL::Symbol"* %375) #14
  %376 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %291, align 8
  %377 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %121, align 8
  %378 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %377, i64 0, i32 0, i32 44, i32 0, i32 0, i32 0
  %379 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %378, align 8
  %380 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %379, i64 0, i32 0
  call void @_ZN4SkSL11SymbolTable8addAliasENS_14StringFragmentEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %376, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.116, i64 0, i64 0), i64 7, %"class.SkSL::Symbol"* %380) #14
  %381 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %291, align 8
  %382 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %121, align 8
  %383 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %382, i64 0, i32 0, i32 46, i32 0, i32 0, i32 0
  %384 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %383, align 8
  %385 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %384, i64 0, i32 0
  call void @_ZN4SkSL11SymbolTable8addAliasENS_14StringFragmentEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %381, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.117, i64 0, i64 0), i64 7, %"class.SkSL::Symbol"* %385) #14
  %386 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %291, align 8
  %387 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %121, align 8
  %388 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %387, i64 0, i32 0, i32 47, i32 0, i32 0, i32 0
  %389 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %388, align 8
  %390 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %389, i64 0, i32 0
  call void @_ZN4SkSL11SymbolTable8addAliasENS_14StringFragmentEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %386, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.118, i64 0, i64 0), i64 7, %"class.SkSL::Symbol"* %390) #14
  %391 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %291, align 8
  %392 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %121, align 8
  %393 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %392, i64 0, i32 0, i32 48, i32 0, i32 0, i32 0
  %394 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %393, align 8
  %395 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %394, i64 0, i32 0
  call void @_ZN4SkSL11SymbolTable8addAliasENS_14StringFragmentEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %391, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.119, i64 0, i64 0), i64 7, %"class.SkSL::Symbol"* %395) #14
  %396 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %291, align 8
  %397 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %121, align 8
  %398 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %397, i64 0, i32 0, i32 12, i32 0, i32 0, i32 0
  %399 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %398, align 8
  %400 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %399, i64 0, i32 0
  call void @_ZN4SkSL11SymbolTable8addAliasENS_14StringFragmentEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %396, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.120, i64 0, i64 0), i64 4, %"class.SkSL::Symbol"* %400) #14
  %401 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %291, align 8
  %402 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %121, align 8
  %403 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %402, i64 0, i32 0, i32 13, i32 0, i32 0, i32 0
  %404 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %403, align 8
  %405 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %404, i64 0, i32 0
  call void @_ZN4SkSL11SymbolTable8addAliasENS_14StringFragmentEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %401, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.121, i64 0, i64 0), i64 5, %"class.SkSL::Symbol"* %405) #14
  %406 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %291, align 8
  %407 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %121, align 8
  %408 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %407, i64 0, i32 0, i32 14, i32 0, i32 0, i32 0
  %409 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %408, align 8
  %410 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %409, i64 0, i32 0
  call void @_ZN4SkSL11SymbolTable8addAliasENS_14StringFragmentEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %406, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.122, i64 0, i64 0), i64 5, %"class.SkSL::Symbol"* %410) #14
  %411 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %291, align 8
  %412 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %121, align 8
  %413 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %412, i64 0, i32 0, i32 15, i32 0, i32 0, i32 0
  %414 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %413, align 8
  %415 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %414, i64 0, i32 0
  call void @_ZN4SkSL11SymbolTable8addAliasENS_14StringFragmentEPKNS_6SymbolE(%"class.SkSL::SymbolTable"* %411, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.123, i64 0, i64 0), i64 5, %"class.SkSL::Symbol"* %415) #14
  br label %416

416:                                              ; preds = %285, %279, %290
  ret void
}

declare void @_ZN4SkSL11SymbolTable8addAliasENS_14StringFragmentEPKNS_6SymbolE(%"class.SkSL::SymbolTable"*, i8*, i64, %"class.SkSL::Symbol"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL11IRGenerator6finishEv(%"struct.SkSL::IRGenerator::IRBundle"* noalias nocapture sret, %"class.SkSL::IRGenerator"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.FindIllegalExpressions, align 8
  %4 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %1, i64 0, i32 15
  %5 = load i8, i8* %4, align 4, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %12

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %1, i64 0, i32 5
  %9 = load %"class.SkSL::IRIntrinsicMap"*, %"class.SkSL::IRIntrinsicMap"** %8, align 8
  %10 = icmp eq %"class.SkSL::IRIntrinsicMap"* %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  tail call void @_ZN4SkSL11IRGenerator30findAndDeclareBuiltinVariablesEv(%"class.SkSL::IRGenerator"* %1)
  br label %12

12:                                               ; preds = %7, %2, %11
  %13 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %1, i64 0, i32 10
  %14 = load %"class.std::__1::vector.137"*, %"class.std::__1::vector.137"** %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %14, i64 0, i32 0, i32 1
  %18 = load %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %17, align 8
  %19 = icmp eq %"class.std::__1::unique_ptr.139"* %16, %18
  br i1 %19, label %25, label %20

20:                                               ; preds = %12
  %21 = bitcast %class.FindIllegalExpressions* %3 to i8*
  %22 = getelementptr inbounds %class.FindIllegalExpressions, %class.FindIllegalExpressions* %3, i64 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %class.FindIllegalExpressions, %class.FindIllegalExpressions* %3, i64 0, i32 1
  %24 = getelementptr inbounds %class.FindIllegalExpressions, %class.FindIllegalExpressions* %3, i64 0, i32 0, i32 0
  br label %38

25:                                               ; preds = %38, %12
  %26 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %1, i64 0, i32 0
  %27 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %26, align 8
  %28 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %27, i64 0, i32 4
  %29 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %28, align 8
  %30 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %29, i64 0, i32 1, i32 19
  %31 = load i8, i8* %30, align 1, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %70, label %33

33:                                               ; preds = %25
  %34 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %29, i64 0, i32 0
  %35 = load i8, i8* %34, align 8
  %36 = add i8 %35, -4
  %37 = icmp ult i8 %36, 3
  br i1 %37, label %45, label %70

38:                                               ; preds = %20, %38
  %39 = phi %"class.std::__1::unique_ptr.139"* [ %16, %20 ], [ %43, %38 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVZN4SkSL11IRGenerator6finishEvE22FindIllegalExpressions, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  store %"class.SkSL::IRGenerator"* %1, %"class.SkSL::IRGenerator"** %23, align 8
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %40, align 8
  %42 = call zeroext i1 @_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEE19visitProgramElementERKNS_14ProgramElementE(%"class.SkSL::TProgramVisitor.368"* nonnull %24, %"class.SkSL::ProgramElement"* dereferenceable(16) %41) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #14
  %43 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %39, i64 1
  %44 = icmp eq %"class.std::__1::unique_ptr.139"* %43, %18
  br i1 %44, label %25, label %38

45:                                               ; preds = %33
  %46 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %27, i64 0, i32 1
  %47 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %46, align 8
  %48 = bitcast %"class.SkSL::ErrorReporter"* %47 to i32 (%"class.SkSL::ErrorReporter"*)***
  %49 = load i32 (%"class.SkSL::ErrorReporter"*)**, i32 (%"class.SkSL::ErrorReporter"*)*** %48, align 8
  %50 = getelementptr inbounds i32 (%"class.SkSL::ErrorReporter"*)*, i32 (%"class.SkSL::ErrorReporter"*)** %49, i64 3
  %51 = load i32 (%"class.SkSL::ErrorReporter"*)*, i32 (%"class.SkSL::ErrorReporter"*)** %50, align 8
  %52 = call i32 %51(%"class.SkSL::ErrorReporter"* %47) #14
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %70

54:                                               ; preds = %45
  %55 = load %"class.std::__1::vector.137"*, %"class.std::__1::vector.137"** %13, align 8
  %56 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %55, i64 0, i32 0, i32 0
  %57 = load %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %56, align 8
  %58 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %55, i64 0, i32 0, i32 1
  %59 = load %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %58, align 8
  %60 = icmp eq %"class.std::__1::unique_ptr.139"* %57, %59
  br i1 %60, label %70, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"class.std::__1::unique_ptr.139"* [ %68, %61 ], [ %57, %54 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %63, align 8
  %65 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %26, align 8
  %66 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %65, i64 0, i32 1
  %67 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %66, align 8
  call void @_ZN4SkSL8Analysis22ValidateIndexingForES2ERKNS_14ProgramElementERNS_13ErrorReporterE(%"class.SkSL::ProgramElement"* dereferenceable(16) %64, %"class.SkSL::ErrorReporter"* dereferenceable(8) %67) #14
  %68 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %62, i64 1
  %69 = icmp eq %"class.std::__1::unique_ptr.139"* %68, %59
  br i1 %69, label %70, label %61

70:                                               ; preds = %61, %54, %25, %45, %33
  %71 = load %"class.std::__1::vector.137"*, %"class.std::__1::vector.137"** %13, align 8
  %72 = bitcast %"class.std::__1::vector.137"* %71 to <2 x i64>*
  %73 = load <2 x i64>, <2 x i64>* %72, align 8
  %74 = bitcast %"struct.SkSL::IRGenerator::IRBundle"* %0 to <2 x i64>*
  store <2 x i64> %73, <2 x i64>* %74, align 8
  %75 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %71, i64 0, i32 0, i32 2, i32 0, i32 0
  %76 = bitcast %"class.std::__1::unique_ptr.139"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"struct.SkSL::IRGenerator::IRBundle", %"struct.SkSL::IRGenerator::IRBundle"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %79 = bitcast %"class.std::__1::unique_ptr.139"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = bitcast %"class.std::__1::vector.137"* %71 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 24, i1 false) #14
  %81 = getelementptr inbounds %"struct.SkSL::IRGenerator::IRBundle", %"struct.SkSL::IRGenerator::IRBundle"* %0, i64 0, i32 1
  %82 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %1, i64 0, i32 11
  %83 = load %"class.std::__1::vector.150"*, %"class.std::__1::vector.150"** %82, align 8
  %84 = bitcast %"class.std::__1::vector.150"* %83 to <2 x i64>*
  %85 = load <2 x i64>, <2 x i64>* %84, align 8
  %86 = bitcast %"class.std::__1::vector.150"* %81 to <2 x i64>*
  store <2 x i64> %85, <2 x i64>* %86, align 8
  %87 = getelementptr inbounds %"class.std::__1::vector.150", %"class.std::__1::vector.150"* %83, i64 0, i32 0, i32 2, i32 0, i32 0
  %88 = bitcast %"class.SkSL::ProgramElement"*** %87 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = getelementptr inbounds %"struct.SkSL::IRGenerator::IRBundle", %"struct.SkSL::IRGenerator::IRBundle"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %91 = bitcast %"class.SkSL::ProgramElement"*** %90 to i64*
  store i64 %89, i64* %91, align 8
  %92 = bitcast %"class.std::__1::vector.150"* %83 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 24, i1 false) #14
  %93 = getelementptr inbounds %"struct.SkSL::IRGenerator::IRBundle", %"struct.SkSL::IRGenerator::IRBundle"* %0, i64 0, i32 2
  %94 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %1, i64 0, i32 4
  %95 = bitcast %"class.std::__1::shared_ptr"* %94 to <2 x i64>*
  %96 = load <2 x i64>, <2 x i64>* %95, align 8
  %97 = bitcast %"class.std::__1::shared_ptr"* %93 to <2 x i64>*
  store <2 x i64> %96, <2 x i64>* %97, align 8
  %98 = bitcast %"class.std::__1::shared_ptr"* %94 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %98, i8 0, i64 16, i1 false) #14
  %99 = getelementptr inbounds %"struct.SkSL::IRGenerator::IRBundle", %"struct.SkSL::IRGenerator::IRBundle"* %0, i64 0, i32 3, i32 0
  %100 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %1, i64 0, i32 1, i32 0
  %101 = bitcast i8* %100 to i16*
  %102 = bitcast i8* %99 to i16*
  %103 = load i16, i16* %101, align 8
  store i16 %103, i16* %102, align 8
  ret void
}

declare zeroext i1 @_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEE19visitProgramElementERKNS_14ProgramElementE(%"class.SkSL::TProgramVisitor.368"*, %"class.SkSL::ProgramElement"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEED2Ev(%"class.SkSL::TProgramVisitor.368"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN4SkSL8Analysis22ValidateIndexingForES2ERKNS_14ProgramElementERNS_13ErrorReporterE(%"class.SkSL::ProgramElement"* dereferenceable(16), %"class.SkSL::ErrorReporter"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL11IRGenerator14convertProgramERKNS_12ParsedModuleEbPKcm(%"struct.SkSL::IRGenerator::IRBundle"* noalias nocapture sret, %"class.SkSL::IRGenerator"*, %"struct.SkSL::ParsedModule"* nocapture readnone dereferenceable(32), i1 zeroext, i8*, i64) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.SkSL::Parser", align 8
  %8 = alloca %"class.std::__1::unique_ptr.139", align 8
  %9 = alloca %"class.std::__1::unique_ptr.139", align 8
  %10 = alloca %"class.std::__1::unique_ptr.139", align 8
  %11 = alloca %"class.std::__1::unique_ptr.139", align 8
  %12 = alloca %"class.std::__1::unique_ptr.139", align 8
  %13 = bitcast %"class.SkSL::Parser"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %13) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 72, i1 false)
  %14 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %1, i64 0, i32 4, i32 0
  %15 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %14, align 8
  %16 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %1, i64 0, i32 0
  %17 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %16, align 8
  %18 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %17, i64 0, i32 1
  %19 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %18, align 8
  call void @_ZN4SkSL6ParserC1EPKcmRNS_11SymbolTableERNS_13ErrorReporterE(%"class.SkSL::Parser"* nonnull %7, i8* %4, i64 %5, %"class.SkSL::SymbolTable"* dereferenceable(104) %15, %"class.SkSL::ErrorReporter"* dereferenceable(8) %19) #14
  %20 = call %"struct.SkSL::ASTFile"* @_ZN4SkSL6Parser15compilationUnitEv(%"class.SkSL::Parser"* nonnull %7) #14
  %21 = ptrtoint %"struct.SkSL::ASTFile"* %20 to i64
  %22 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %1, i64 0, i32 3
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.49"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %23, align 8
  %25 = bitcast %"class.std::__1::unique_ptr.49"* %22 to i64*
  store i64 %21, i64* %25, align 8
  %26 = icmp eq %"struct.SkSL::ASTFile"* %24, null
  br i1 %26, label %38, label %27

27:                                               ; preds = %6
  %28 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %24, i64 0, i32 0, i32 0, i32 0
  %29 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %28, align 8
  %30 = icmp eq %"struct.SkSL::ASTNode"* %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %27
  %32 = ptrtoint %"struct.SkSL::ASTNode"* %29 to i64
  %33 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %24, i64 0, i32 0, i32 0, i32 1
  %34 = bitcast %"struct.SkSL::ASTNode"** %33 to i64*
  store i64 %32, i64* %34, align 8
  %35 = bitcast %"struct.SkSL::ASTNode"* %29 to i8*
  call void @_ZdlPv(i8* %35) #15
  br label %36

36:                                               ; preds = %31, %27
  %37 = bitcast %"struct.SkSL::ASTFile"* %24 to i8*
  call void @_ZdlPv(i8* %37) #15
  br label %38

38:                                               ; preds = %36, %6
  %39 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %16, align 8
  %40 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %39, i64 0, i32 1
  %41 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %40, align 8
  %42 = bitcast %"class.SkSL::ErrorReporter"* %41 to i32 (%"class.SkSL::ErrorReporter"*)***
  %43 = load i32 (%"class.SkSL::ErrorReporter"*)**, i32 (%"class.SkSL::ErrorReporter"*)*** %42, align 8
  %44 = getelementptr inbounds i32 (%"class.SkSL::ErrorReporter"*)*, i32 (%"class.SkSL::ErrorReporter"*)** %43, i64 3
  %45 = load i32 (%"class.SkSL::ErrorReporter"*)*, i32 (%"class.SkSL::ErrorReporter"*)** %44, align 8
  %46 = call i32 %45(%"class.SkSL::ErrorReporter"* %41) #14
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %251

48:                                               ; preds = %38
  %49 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %23, align 8
  %50 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %49, i64 0, i32 1, i32 0
  %51 = load i32, i32* %50, align 8
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %49, i64 0, i32 0, i32 0, i32 0
  %54 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %53, align 8
  %55 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %54, i64 %52, i32 4, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp sgt i32 %56, -1
  br i1 %57, label %58, label %251

58:                                               ; preds = %48
  %59 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %54, i64 %52, i32 0
  %60 = load %"class.std::__1::vector.52"*, %"class.std::__1::vector.52"** %59, align 8
  %61 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %60, i64 0, i32 0, i32 0
  %62 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %1, i64 0, i32 10
  %63 = bitcast %"class.std::__1::unique_ptr.139"* %12 to i8*
  %64 = bitcast %"class.std::__1::unique_ptr.139"* %12 to i64*
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %12, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.139"* %11 to i8*
  %67 = bitcast %"class.std::__1::unique_ptr.139"* %11 to i64*
  %68 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %11, i64 0, i32 0, i32 0, i32 0
  %69 = bitcast %"class.std::__1::unique_ptr.139"* %10 to i8*
  %70 = bitcast %"class.std::__1::unique_ptr.139"* %10 to i64*
  %71 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %10, i64 0, i32 0, i32 0, i32 0
  %72 = bitcast %"class.std::__1::unique_ptr.139"* %9 to i8*
  %73 = bitcast %"class.std::__1::unique_ptr.139"* %9 to i64*
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %9, i64 0, i32 0, i32 0, i32 0
  %75 = bitcast %"class.std::__1::unique_ptr.139"* %8 to i8*
  %76 = bitcast %"class.std::__1::unique_ptr.139"* %8 to i64*
  %77 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %8, i64 0, i32 0, i32 0, i32 0
  %78 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %61, align 8
  br label %79

79:                                               ; preds = %58, %246
  %80 = phi %"struct.SkSL::ASTNode"* [ %78, %58 ], [ %247, %246 ]
  %81 = phi i32 [ %56, %58 ], [ %249, %246 ]
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %80, i64 %82
  %84 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %80, i64 %82, i32 3
  %85 = load i32, i32* %84, align 8
  switch i32 %85, label %246 [
    i32 34, label %86
    i32 8, label %87
    i32 15, label %88
    i32 21, label %89
    i32 20, label %115
    i32 10, label %141
    i32 28, label %175
    i32 32, label %220
  ]

86:                                               ; preds = %79
  call void @_ZN4SkSL11IRGenerator28convertGlobalVarDeclarationsERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %1, %"struct.SkSL::ASTNode"* dereferenceable(160) %83)
  br label %246

87:                                               ; preds = %79
  call void @_ZN4SkSL11IRGenerator11convertEnumERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %1, %"struct.SkSL::ASTNode"* dereferenceable(160) %83)
  br label %246

88:                                               ; preds = %79
  call void @_ZN4SkSL11IRGenerator15convertFunctionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %1, %"struct.SkSL::ASTNode"* dereferenceable(160) %83)
  br label %246

89:                                               ; preds = %79
  %90 = call %"class.SkSL::ModifiersDeclaration"* @_ZN4SkSL11IRGenerator27convertModifiersDeclarationERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %1, %"struct.SkSL::ASTNode"* dereferenceable(160) %83)
  %91 = ptrtoint %"class.SkSL::ModifiersDeclaration"* %90 to i64
  %92 = icmp eq %"class.SkSL::ModifiersDeclaration"* %90, null
  br i1 %92, label %246, label %93

93:                                               ; preds = %89
  %94 = load %"class.std::__1::vector.137"*, %"class.std::__1::vector.137"** %62, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #14
  store i64 %91, i64* %76, align 8
  %95 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %94, i64 0, i32 0, i32 1
  %96 = load %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %95, align 8
  %97 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %94, i64 0, i32 0, i32 2, i32 0, i32 0
  %98 = load %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %97, align 8
  %99 = icmp ult %"class.std::__1::unique_ptr.139"* %96, %98
  br i1 %99, label %100, label %105

100:                                              ; preds = %93
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %77, align 8
  %101 = bitcast %"class.std::__1::unique_ptr.139"* %96 to i64*
  store i64 %91, i64* %101, align 8
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %96, i64 1
  %103 = ptrtoint %"class.std::__1::unique_ptr.139"* %102 to i64
  %104 = bitcast %"class.std::__1::unique_ptr.139"** %95 to i64*
  store i64 %103, i64* %104, align 8
  br label %106

105:                                              ; preds = %93
  call void @_ZNSt3__16vectorINS_10unique_ptrIN4SkSL14ProgramElementENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.137"* %94, %"class.std::__1::unique_ptr.139"* nonnull dereferenceable(8) %8) #14
  br label %106

106:                                              ; preds = %100, %105
  %107 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %77, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %77, align 8
  %108 = icmp eq %"class.SkSL::ProgramElement"* %107, null
  br i1 %108, label %114, label %109

109:                                              ; preds = %106
  %110 = bitcast %"class.SkSL::ProgramElement"* %107 to void (%"class.SkSL::ProgramElement"*)***
  %111 = load void (%"class.SkSL::ProgramElement"*)**, void (%"class.SkSL::ProgramElement"*)*** %110, align 8
  %112 = getelementptr inbounds void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %111, i64 1
  %113 = load void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %112, align 8
  call void %113(%"class.SkSL::ProgramElement"* nonnull %107) #14
  br label %114

114:                                              ; preds = %109, %106
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #14
  br label %246

115:                                              ; preds = %79
  %116 = call %"class.SkSL::InterfaceBlock"* @_ZN4SkSL11IRGenerator21convertInterfaceBlockERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %1, %"struct.SkSL::ASTNode"* dereferenceable(160) %83)
  %117 = ptrtoint %"class.SkSL::InterfaceBlock"* %116 to i64
  %118 = icmp eq %"class.SkSL::InterfaceBlock"* %116, null
  br i1 %118, label %246, label %119

119:                                              ; preds = %115
  %120 = load %"class.std::__1::vector.137"*, %"class.std::__1::vector.137"** %62, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #14
  store i64 %117, i64* %73, align 8
  %121 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %120, i64 0, i32 0, i32 1
  %122 = load %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %121, align 8
  %123 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %120, i64 0, i32 0, i32 2, i32 0, i32 0
  %124 = load %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %123, align 8
  %125 = icmp ult %"class.std::__1::unique_ptr.139"* %122, %124
  br i1 %125, label %126, label %131

126:                                              ; preds = %119
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %74, align 8
  %127 = bitcast %"class.std::__1::unique_ptr.139"* %122 to i64*
  store i64 %117, i64* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %122, i64 1
  %129 = ptrtoint %"class.std::__1::unique_ptr.139"* %128 to i64
  %130 = bitcast %"class.std::__1::unique_ptr.139"** %121 to i64*
  store i64 %129, i64* %130, align 8
  br label %132

131:                                              ; preds = %119
  call void @_ZNSt3__16vectorINS_10unique_ptrIN4SkSL14ProgramElementENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.137"* %120, %"class.std::__1::unique_ptr.139"* nonnull dereferenceable(8) %9) #14
  br label %132

132:                                              ; preds = %126, %131
  %133 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %74, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %74, align 8
  %134 = icmp eq %"class.SkSL::ProgramElement"* %133, null
  br i1 %134, label %140, label %135

135:                                              ; preds = %132
  %136 = bitcast %"class.SkSL::ProgramElement"* %133 to void (%"class.SkSL::ProgramElement"*)***
  %137 = load void (%"class.SkSL::ProgramElement"*)**, void (%"class.SkSL::ProgramElement"*)*** %136, align 8
  %138 = getelementptr inbounds void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %137, i64 1
  %139 = load void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %138, align 8
  call void %139(%"class.SkSL::ProgramElement"* nonnull %133) #14
  br label %140

140:                                              ; preds = %135, %132
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #14
  br label %246

141:                                              ; preds = %79
  %142 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %80, i64 %82, i32 2
  %143 = load i32, i32* %142, align 4
  %144 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %80, i64 %82, i32 1, i32 0, i64 0
  %145 = bitcast i8* %144 to i8**
  %146 = load i8*, i8** %145, align 8
  %147 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %80, i64 %82, i32 1, i32 0, i64 8
  %148 = bitcast i8* %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = call %"class.SkSL::Extension"* @_ZN4SkSL11IRGenerator16convertExtensionEiNS_14StringFragmentE(%"class.SkSL::IRGenerator"* %1, i32 %143, i8* %146, i64 %149)
  %151 = ptrtoint %"class.SkSL::Extension"* %150 to i64
  %152 = icmp eq %"class.SkSL::Extension"* %150, null
  br i1 %152, label %246, label %153

153:                                              ; preds = %141
  %154 = load %"class.std::__1::vector.137"*, %"class.std::__1::vector.137"** %62, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #14
  store i64 %151, i64* %70, align 8
  %155 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %154, i64 0, i32 0, i32 1
  %156 = load %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %155, align 8
  %157 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %154, i64 0, i32 0, i32 2, i32 0, i32 0
  %158 = load %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %157, align 8
  %159 = icmp ult %"class.std::__1::unique_ptr.139"* %156, %158
  br i1 %159, label %160, label %165

160:                                              ; preds = %153
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %71, align 8
  %161 = bitcast %"class.std::__1::unique_ptr.139"* %156 to i64*
  store i64 %151, i64* %161, align 8
  %162 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %156, i64 1
  %163 = ptrtoint %"class.std::__1::unique_ptr.139"* %162 to i64
  %164 = bitcast %"class.std::__1::unique_ptr.139"** %155 to i64*
  store i64 %163, i64* %164, align 8
  br label %166

165:                                              ; preds = %153
  call void @_ZNSt3__16vectorINS_10unique_ptrIN4SkSL14ProgramElementENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.137"* %154, %"class.std::__1::unique_ptr.139"* nonnull dereferenceable(8) %10) #14
  br label %166

166:                                              ; preds = %160, %165
  %167 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %71, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %71, align 8
  %168 = icmp eq %"class.SkSL::ProgramElement"* %167, null
  br i1 %168, label %174, label %169

169:                                              ; preds = %166
  %170 = bitcast %"class.SkSL::ProgramElement"* %167 to void (%"class.SkSL::ProgramElement"*)***
  %171 = load void (%"class.SkSL::ProgramElement"*)**, void (%"class.SkSL::ProgramElement"*)*** %170, align 8
  %172 = getelementptr inbounds void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %171, i64 1
  %173 = load void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %172, align 8
  call void %173(%"class.SkSL::ProgramElement"* nonnull %167) #14
  br label %174

174:                                              ; preds = %169, %166
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #14
  br label %246

175:                                              ; preds = %79
  %176 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %16, align 8
  %177 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %176, i64 0, i32 4
  %178 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %177, align 8
  %179 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %178, i64 0, i32 0
  %180 = load i8, i8* %179, align 8
  %181 = icmp eq i8 %180, 3
  br i1 %181, label %187, label %182

182:                                              ; preds = %175
  %183 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %176, i64 0, i32 1
  %184 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %183, align 8
  %185 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %80, i64 %82, i32 2
  %186 = load i32, i32* %185, align 4
  call void @_ZN4SkSL13ErrorReporter5errorEiPKc(%"class.SkSL::ErrorReporter"* %184, i32 %186, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.80, i64 0, i64 0)) #14
  br label %246

187:                                              ; preds = %175
  %188 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %80, i64 %82, i32 1, i32 0, i64 0
  %189 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %80, i64 %82, i32 2
  %190 = bitcast i8* %188 to %"struct.SkSL::StringFragment"*
  %191 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %80, i64 %82, i32 1, i32 0, i64 16
  %192 = bitcast i8* %191 to %"struct.SkSL::StringFragment"*
  %193 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %80, i64 %82, i32 1, i32 0, i64 32
  %194 = bitcast i8* %193 to %"struct.SkSL::StringFragment"*
  %195 = call %"class.SkSL::Section"* @_ZNSt3__111make_uniqueIN4SkSL7SectionEJRKiRKNS1_14StringFragmentES7_S7_EEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(i32* dereferenceable(4) %189, %"struct.SkSL::StringFragment"* dereferenceable(16) %190, %"struct.SkSL::StringFragment"* dereferenceable(16) %192, %"struct.SkSL::StringFragment"* dereferenceable(16) %194) #14
  %196 = ptrtoint %"class.SkSL::Section"* %195 to i64
  %197 = icmp eq %"class.SkSL::Section"* %195, null
  br i1 %197, label %246, label %198

198:                                              ; preds = %187
  %199 = load %"class.std::__1::vector.137"*, %"class.std::__1::vector.137"** %62, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #14
  store i64 %196, i64* %67, align 8
  %200 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %199, i64 0, i32 0, i32 1
  %201 = load %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %200, align 8
  %202 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %199, i64 0, i32 0, i32 2, i32 0, i32 0
  %203 = load %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %202, align 8
  %204 = icmp ult %"class.std::__1::unique_ptr.139"* %201, %203
  br i1 %204, label %205, label %210

205:                                              ; preds = %198
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %68, align 8
  %206 = bitcast %"class.std::__1::unique_ptr.139"* %201 to i64*
  store i64 %196, i64* %206, align 8
  %207 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %201, i64 1
  %208 = ptrtoint %"class.std::__1::unique_ptr.139"* %207 to i64
  %209 = bitcast %"class.std::__1::unique_ptr.139"** %200 to i64*
  store i64 %208, i64* %209, align 8
  br label %211

210:                                              ; preds = %198
  call void @_ZNSt3__16vectorINS_10unique_ptrIN4SkSL14ProgramElementENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.137"* %199, %"class.std::__1::unique_ptr.139"* nonnull dereferenceable(8) %11) #14
  br label %211

211:                                              ; preds = %205, %210
  %212 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %68, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %68, align 8
  %213 = icmp eq %"class.SkSL::ProgramElement"* %212, null
  br i1 %213, label %219, label %214

214:                                              ; preds = %211
  %215 = bitcast %"class.SkSL::ProgramElement"* %212 to void (%"class.SkSL::ProgramElement"*)***
  %216 = load void (%"class.SkSL::ProgramElement"*)**, void (%"class.SkSL::ProgramElement"*)*** %215, align 8
  %217 = getelementptr inbounds void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %216, i64 1
  %218 = load void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %217, align 8
  call void %218(%"class.SkSL::ProgramElement"* nonnull %212) #14
  br label %219

219:                                              ; preds = %211, %214
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #14
  br label %246

220:                                              ; preds = %79
  %221 = call %"class.SkSL::StructDefinition"* @_ZN4SkSL11IRGenerator23convertStructDefinitionERKNS_7ASTNodeE(%"class.SkSL::IRGenerator"* %1, %"struct.SkSL::ASTNode"* dereferenceable(160) %83)
  %222 = ptrtoint %"class.SkSL::StructDefinition"* %221 to i64
  %223 = icmp eq %"class.SkSL::StructDefinition"* %221, null
  br i1 %223, label %246, label %224

224:                                              ; preds = %220
  %225 = load %"class.std::__1::vector.137"*, %"class.std::__1::vector.137"** %62, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #14
  store i64 %222, i64* %64, align 8
  %226 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %225, i64 0, i32 0, i32 1
  %227 = load %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %226, align 8
  %228 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %225, i64 0, i32 0, i32 2, i32 0, i32 0
  %229 = load %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %228, align 8
  %230 = icmp ult %"class.std::__1::unique_ptr.139"* %227, %229
  br i1 %230, label %231, label %236

231:                                              ; preds = %224
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %65, align 8
  %232 = bitcast %"class.std::__1::unique_ptr.139"* %227 to i64*
  store i64 %222, i64* %232, align 8
  %233 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %227, i64 1
  %234 = ptrtoint %"class.std::__1::unique_ptr.139"* %233 to i64
  %235 = bitcast %"class.std::__1::unique_ptr.139"** %226 to i64*
  store i64 %234, i64* %235, align 8
  br label %237

236:                                              ; preds = %224
  call void @_ZNSt3__16vectorINS_10unique_ptrIN4SkSL14ProgramElementENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.137"* %225, %"class.std::__1::unique_ptr.139"* nonnull dereferenceable(8) %12) #14
  br label %237

237:                                              ; preds = %231, %236
  %238 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %65, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %65, align 8
  %239 = icmp eq %"class.SkSL::ProgramElement"* %238, null
  br i1 %239, label %245, label %240

240:                                              ; preds = %237
  %241 = bitcast %"class.SkSL::ProgramElement"* %238 to void (%"class.SkSL::ProgramElement"*)***
  %242 = load void (%"class.SkSL::ProgramElement"*)**, void (%"class.SkSL::ProgramElement"*)*** %241, align 8
  %243 = getelementptr inbounds void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %242, i64 1
  %244 = load void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %243, align 8
  call void %244(%"class.SkSL::ProgramElement"* nonnull %238) #14
  br label %245

245:                                              ; preds = %240, %237
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #14
  br label %246

246:                                              ; preds = %220, %187, %141, %115, %89, %182, %219, %245, %174, %140, %114, %79, %88, %87, %86
  %247 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %61, align 8
  %248 = getelementptr inbounds %"struct.SkSL::ASTNode", %"struct.SkSL::ASTNode"* %247, i64 %82, i32 6, i32 0
  %249 = load i32, i32* %248, align 4
  %250 = icmp sgt i32 %249, -1
  br i1 %250, label %79, label %251

251:                                              ; preds = %246, %48, %38
  call void @_ZN4SkSL11IRGenerator6finishEv(%"struct.SkSL::IRGenerator::IRBundle"* sret %0, %"class.SkSL::IRGenerator"* %1)
  %252 = getelementptr inbounds %"class.SkSL::Parser", %"class.SkSL::Parser"* %7, i64 0, i32 6, i32 0, i32 0, i32 0
  %253 = load %"struct.SkSL::ASTFile"*, %"struct.SkSL::ASTFile"** %252, align 8
  store %"struct.SkSL::ASTFile"* null, %"struct.SkSL::ASTFile"** %252, align 8
  %254 = icmp eq %"struct.SkSL::ASTFile"* %253, null
  br i1 %254, label %266, label %255

255:                                              ; preds = %251
  %256 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %253, i64 0, i32 0, i32 0, i32 0
  %257 = load %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"** %256, align 8
  %258 = icmp eq %"struct.SkSL::ASTNode"* %257, null
  br i1 %258, label %264, label %259

259:                                              ; preds = %255
  %260 = ptrtoint %"struct.SkSL::ASTNode"* %257 to i64
  %261 = getelementptr inbounds %"struct.SkSL::ASTFile", %"struct.SkSL::ASTFile"* %253, i64 0, i32 0, i32 0, i32 1
  %262 = bitcast %"struct.SkSL::ASTNode"** %261 to i64*
  store i64 %260, i64* %262, align 8
  %263 = bitcast %"struct.SkSL::ASTNode"* %257 to i8*
  call void @_ZdlPv(i8* %263) #15
  br label %264

264:                                              ; preds = %259, %255
  %265 = bitcast %"struct.SkSL::ASTFile"* %253 to i8*
  call void @_ZdlPv(i8* %265) #15
  br label %266

266:                                              ; preds = %251, %264
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %13) #14
  ret void
}

declare void @_ZN4SkSL6ParserC1EPKcmRNS_11SymbolTableERNS_13ErrorReporterE(%"class.SkSL::Parser"*, i8*, i64, %"class.SkSL::SymbolTable"* dereferenceable(104), %"class.SkSL::ErrorReporter"* dereferenceable(8)) unnamed_addr #2

declare %"struct.SkSL::ASTFile"* @_ZN4SkSL6Parser15compilationUnitEv(%"class.SkSL::Parser"*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE25__emplace_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"struct.SkSL::Modifiers"* dereferenceable(80), %"struct.SkSL::Modifiers"* dereferenceable(80)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %1, i64 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = sext i32 %8 to i64
  %10 = shl nsw i64 %9, 8
  %11 = xor i64 %10, %6
  %12 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %1, i64 0, i32 0, i32 6
  %13 = load i32, i32* %12, align 8
  %14 = sext i32 %13 to i64
  %15 = shl nsw i64 %14, 16
  %16 = xor i64 %11, %15
  %17 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %74, label %20

20:                                               ; preds = %3
  %21 = tail call i64 @llvm.ctpop.i64(i64 %18) #14, !range !99
  %22 = icmp ugt i64 %21, 1
  br i1 %22, label %26, label %23

23:                                               ; preds = %20
  %24 = add i64 %18, -1
  %25 = and i64 %16, %24
  br label %30

26:                                               ; preds = %20
  %27 = icmp ult i64 %16, %18
  br i1 %27, label %30, label %28

28:                                               ; preds = %26
  %29 = urem i64 %16, %18
  br label %30

30:                                               ; preds = %23, %26, %28
  %31 = phi i64 [ %25, %23 ], [ %29, %28 ], [ %16, %26 ]
  %32 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %33, i64 %31
  %35 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %34, align 8
  %36 = icmp eq %"struct.std::__1::__hash_node_base"* %35, null
  br i1 %36, label %74, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base"* %39, null
  br i1 %40, label %74, label %41

41:                                               ; preds = %37
  %42 = add i64 %18, -1
  %43 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %1, i64 0, i32 0
  br label %44

44:                                               ; preds = %41, %70
  %45 = phi %"struct.std::__1::__hash_node_base"* [ %39, %41 ], [ %72, %70 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 1
  %47 = bitcast %"struct.std::__1::__hash_node_base"* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %48, %16
  br i1 %49, label %60, label %50

50:                                               ; preds = %44
  br i1 %22, label %53, label %51

51:                                               ; preds = %50
  %52 = and i64 %48, %42
  br label %57

53:                                               ; preds = %50
  %54 = icmp ult i64 %48, %18
  br i1 %54, label %57, label %55

55:                                               ; preds = %53
  %56 = urem i64 %48, %18
  br label %57

57:                                               ; preds = %51, %53, %55
  %58 = phi i64 [ %52, %51 ], [ %56, %55 ], [ %48, %53 ]
  %59 = icmp eq i64 %58, %31
  br i1 %59, label %60, label %74

60:                                               ; preds = %44, %57
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 2
  %62 = bitcast %"struct.std::__1::__hash_node_base"* %61 to %"struct.SkSL::Layout"*
  %63 = tail call zeroext i1 @_ZNK4SkSL6LayouteqERKS0_(%"struct.SkSL::Layout"* %62, %"struct.SkSL::Layout"* dereferenceable(72) %43) #14
  br i1 %63, label %64, label %70

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 11
  %66 = bitcast %"struct.std::__1::__hash_node_base"* %65 to i32*
  %67 = load i32, i32* %66, align 8
  %68 = load i32, i32* %4, align 8
  %69 = icmp eq i32 %67, %68
  br i1 %69, label %160, label %70

70:                                               ; preds = %64, %60
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 0, i32 0
  %72 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %71, align 8
  %73 = icmp eq %"struct.std::__1::__hash_node_base"* %72, null
  br i1 %73, label %74, label %44

74:                                               ; preds = %57, %70, %37, %30, %3
  %75 = phi i64 [ %31, %30 ], [ -6148914691236517206, %3 ], [ %31, %37 ], [ %31, %70 ], [ %31, %57 ]
  %76 = tail call i8* @_Znwm(i64 96) #15, !noalias !147
  %77 = getelementptr inbounds i8, i8* %76, i64 16
  %78 = bitcast %"struct.SkSL::Modifiers"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 80, i1 false) #14, !noalias !147
  %79 = getelementptr inbounds i8, i8* %76, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %16, i64* %80, align 8, !noalias !147
  %81 = bitcast i8* %76 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %81, align 8, !noalias !147
  %82 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %18 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %19, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %74
  %93 = shl i64 %18, 1
  %94 = icmp ult i64 %18, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %18) #14, !range !99
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #14
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %104)
  %105 = load i64, i64* %17, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #14, !range !99
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %16
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %16, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %16, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %74
  %116 = phi i64 [ %18, %74 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %75, %74 ], [ %110, %108 ], [ %16, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %76 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base"* %124 to i8**
  store i8* %76, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base"* %124, %"struct.std::__1::__hash_node_base"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #14, !range !99
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %76 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %76, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %76 to %"struct.std::__1::__hash_node_base"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base"* [ %157, %156 ], [ %45, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !99
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #14
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #14, !range !99
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #14
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #14, !range !99
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #14
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL6LayouteqERKS0_(%"struct.SkSL::Layout"*, %"struct.SkSL::Layout"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %81

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %81

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %20, label %81

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %22, %24
  br i1 %25, label %26, label %81

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 4
  %28 = load i32, i32* %27, align 8
  %29 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %28, %30
  br i1 %31, label %32, label %81

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 5
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 5
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %34, %36
  br i1 %37, label %38, label %81

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 6
  %40 = load i32, i32* %39, align 8
  %41 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 6
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %40, %42
  br i1 %43, label %44, label %81

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 7
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 7
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %46, %48
  br i1 %49, label %50, label %81

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 8
  %52 = load i32, i32* %51, align 8
  %53 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 8
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %52, %54
  br i1 %55, label %56, label %81

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 9
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 9
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %58, %60
  br i1 %61, label %62, label %81

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 10
  %64 = load i32, i32* %63, align 8
  %65 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 10
  %66 = load i32, i32* %65, align 8
  %67 = icmp eq i32 %64, %66
  br i1 %67, label %68, label %81

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 12
  %70 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 12, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 12, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = tail call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* %69, i8* %71, i64 %73) #14
  br i1 %74, label %75, label %81

75:                                               ; preds = %68
  %76 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %0, i64 0, i32 13
  %77 = load i32, i32* %76, align 8
  %78 = getelementptr inbounds %"struct.SkSL::Layout", %"struct.SkSL::Layout"* %1, i64 0, i32 13
  %79 = load i32, i32* %78, align 8
  %80 = icmp eq i32 %77, %79
  br label %81

81:                                               ; preds = %75, %68, %62, %56, %50, %44, %38, %32, %26, %20, %14, %8, %2
  %82 = phi i1 [ false, %68 ], [ false, %62 ], [ false, %56 ], [ false, %50 ], [ false, %44 ], [ false, %38 ], [ false, %32 ], [ false, %26 ], [ false, %20 ], [ false, %14 ], [ false, %8 ], [ false, %2 ], [ %80, %75 ]
  ret i1 %82
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %151, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #16
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #15
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #15
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !150

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %159, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #14, !range !99
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %159, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %145
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %149, %145 ]
  %81 = phi i64 [ %71, %77 ], [ %147, %145 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %146, %145 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %145, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %112, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 11
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i32*
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 0, i32 0
  %104 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %103, align 8
  %105 = icmp eq %"struct.std::__1::__hash_node_base"* %104, null
  br i1 %105, label %131, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %108 = bitcast %"struct.std::__1::__hash_node_base"* %107 to %"struct.SkSL::Layout"*
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %104, i64 2
  %110 = bitcast %"struct.std::__1::__hash_node_base"* %109 to %"struct.SkSL::Layout"*
  %111 = tail call zeroext i1 @_ZNK4SkSL6LayouteqERKS0_(%"struct.SkSL::Layout"* %108, %"struct.SkSL::Layout"* dereferenceable(72) %110) #14
  br i1 %111, label %117, label %131

112:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %145

113:                                              ; preds = %126
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 2
  %115 = bitcast %"struct.std::__1::__hash_node_base"* %114 to %"struct.SkSL::Layout"*
  %116 = tail call zeroext i1 @_ZNK4SkSL6LayouteqERKS0_(%"struct.SkSL::Layout"* %108, %"struct.SkSL::Layout"* dereferenceable(72) %115) #14
  br i1 %116, label %117, label %131

117:                                              ; preds = %106, %113
  %118 = phi %"struct.std::__1::__hash_node_base"* [ %127, %113 ], [ %80, %106 ]
  %119 = phi %"struct.std::__1::__hash_node_base"** [ %128, %113 ], [ %103, %106 ]
  %120 = phi %"struct.std::__1::__hash_node_base"* [ %129, %113 ], [ %104, %106 ]
  %121 = load i32, i32* %102, align 8
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 11
  %123 = bitcast %"struct.std::__1::__hash_node_base"* %122 to i32*
  %124 = load i32, i32* %123, align 8
  %125 = icmp eq i32 %121, %124
  br i1 %125, label %126, label %131

126:                                              ; preds = %117
  %127 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, align 8
  %128 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %127, i64 0, i32 0
  %129 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %128, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base"* %129, null
  br i1 %130, label %131, label %113

131:                                              ; preds = %113, %126, %117, %106, %100
  %132 = phi %"struct.std::__1::__hash_node_base"* [ %80, %100 ], [ %80, %106 ], [ %118, %117 ], [ %127, %126 ], [ %127, %113 ]
  %133 = bitcast %"struct.std::__1::__hash_node_base"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %134, i64* %135, align 8
  %136 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %137 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %136, i64 %93
  %138 = bitcast %"struct.std::__1::__hash_node_base"** %137 to i64**
  %139 = load i64*, i64** %138, align 8
  %140 = load i64, i64* %139, align 8
  store i64 %140, i64* %133, align 8
  %141 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %141, i64 %93
  %143 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %142, align 8
  %144 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %143, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %144, align 8
  br label %145

145:                                              ; preds = %92, %131, %112
  %146 = phi %"struct.std::__1::__hash_node_base"* [ %80, %112 ], [ %82, %131 ], [ %80, %92 ]
  %147 = phi i64 [ %93, %112 ], [ %81, %131 ], [ %81, %92 ]
  %148 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %146, i64 0, i32 0
  %149 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %148, align 8
  %150 = icmp eq %"struct.std::__1::__hash_node_base"* %149, null
  br i1 %150, label %159, label %79

151:                                              ; preds = %2
  %152 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %153 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %152, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %152, align 8
  %154 = icmp eq %"struct.std::__1::__hash_node_base"** %153, null
  br i1 %154, label %157, label %155

155:                                              ; preds = %151
  %156 = bitcast %"struct.std::__1::__hash_node_base"** %153 to i8*
  tail call void @_ZdlPv(i8* %156) #15
  br label %157

157:                                              ; preds = %151, %155
  %158 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %158, align 8
  br label %159

159:                                              ; preds = %145, %70, %35, %157
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #10

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #10

declare zeroext i1 @_ZNK4SkSL14StringFragmentneES0_(%"struct.SkSL::StringFragment"*, i8*, i64) local_unnamed_addr #2

declare i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL15ReturnStatementD2Ev(%"class.SkSL::ReturnStatement"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::ReturnStatement", %"class.SkSL::ReturnStatement"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL15ReturnStatementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::ReturnStatement", %"class.SkSL::ReturnStatement"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %3, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %3, align 8
  %5 = icmp eq %"class.SkSL::Expression"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.SkSL::Expression"* %4 to void (%"class.SkSL::Expression"*)***
  %8 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %8, i64 1
  %10 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %9, align 8
  tail call void %10(%"class.SkSL::Expression"* nonnull %4) #14
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL15ReturnStatementD0Ev(%"class.SkSL::ReturnStatement"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::ReturnStatement", %"class.SkSL::ReturnStatement"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL15ReturnStatementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::ReturnStatement", %"class.SkSL::ReturnStatement"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %3, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %3, align 8
  %5 = icmp eq %"class.SkSL::Expression"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.SkSL::Expression"* %4 to void (%"class.SkSL::Expression"*)***
  %8 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %8, i64 1
  %10 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %9, align 8
  tail call void %10(%"class.SkSL::Expression"* nonnull %4) #14
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.SkSL::ReturnStatement"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %12) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL15ReturnStatement11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::ReturnStatement"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = getelementptr inbounds %"class.SkSL::ReturnStatement", %"class.SkSL::ReturnStatement"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %5, align 8
  %7 = icmp eq %"class.SkSL::Expression"* %6, null
  br i1 %7, label %32, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #14
  %10 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #14
  %11 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %6, i64 0, i32 0
  %12 = bitcast %"class.SkSL::Expression"* %6 to void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)***
  %13 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)**, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %13, i64 2
  %15 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %14, align 8
  call void %15(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::IRNode"* %11) #14
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.144, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %4) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* sret %0, %"class.SkSL::String"* nonnull %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.145, i64 0, i64 0)) #14
  %16 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %8
  %21 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %22) #15
  br label %23

23:                                               ; preds = %8, %20
  %24 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  call void @_ZdlPv(i8* %30) #15
  br label %31

31:                                               ; preds = %23, %28
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #14
  br label %37

32:                                               ; preds = %2
  %33 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  store i8 7, i8* %34, align 1
  %35 = bitcast %"class.SkSL::String"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.146, i64 0, i64 0), i64 7, i1 false) #14
  %36 = getelementptr inbounds i8, i8* %35, i64 7
  store i8 0, i8* %36, align 1
  br label %37

37:                                               ; preds = %32, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL9Statement7isEmptyEv(%"class.SkSL::Statement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Statement"* @_ZNK4SkSL15ReturnStatement5cloneEv(%"class.SkSL::ReturnStatement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::ReturnStatement", %"class.SkSL::ReturnStatement"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.SkSL::ReturnStatement", %"class.SkSL::ReturnStatement"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %3, align 8
  %5 = bitcast %"class.SkSL::Expression"* %4 to %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)***
  %6 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %6, i64 10
  %8 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %7, align 8
  %9 = tail call %"class.SkSL::Expression"* %8(%"class.SkSL::Expression"* %4) #14
  %10 = ptrtoint %"class.SkSL::Expression"* %9 to i64
  %11 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 24) #14
  %12 = load i32, i32* %2, align 4
  %13 = getelementptr inbounds i8, i8* %11, i64 8
  %14 = bitcast i8* %13 to i32*
  store i32 %12, i32* %14, align 8
  %15 = getelementptr inbounds i8, i8* %11, i64 12
  %16 = bitcast i8* %15 to i32*
  store i32 26, i32* %16, align 4
  %17 = bitcast i8* %11 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL15ReturnStatementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds i8, i8* %11, i64 16
  %19 = bitcast i8* %18 to i64*
  store i64 %10, i64* %19, align 8
  %20 = bitcast i8* %11 to %"class.SkSL::Statement"*
  ret %"class.SkSL::Statement"* %20
}

declare void @_ZN4SkSL4Pool10FreeMemoryEPv(i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL14BreakStatementD0Ev(%"class.SkSL::BreakStatement"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.SkSL::BreakStatement"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL14BreakStatement11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::BreakStatement"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  store i8 6, i8* %4, align 1
  %5 = bitcast %"class.SkSL::String"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.147, i64 0, i64 0), i64 6, i1 false) #14
  %6 = getelementptr inbounds i8, i8* %5, i64 6
  store i8 0, i8* %6, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Statement"* @_ZNK4SkSL14BreakStatement5cloneEv(%"class.SkSL::BreakStatement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::BreakStatement", %"class.SkSL::BreakStatement"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 16) #14
  %4 = load i32, i32* %2, align 4
  %5 = getelementptr inbounds i8, i8* %3, i64 8
  %6 = bitcast i8* %5 to i32*
  store i32 %4, i32* %6, align 8
  %7 = getelementptr inbounds i8, i8* %3, i64 12
  %8 = bitcast i8* %7 to i32*
  store i32 17, i32* %8, align 4
  %9 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL14BreakStatementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = bitcast i8* %3 to %"class.SkSL::Statement"*
  ret %"class.SkSL::Statement"* %10
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL17ContinueStatementD0Ev(%"class.SkSL::ContinueStatement"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.SkSL::ContinueStatement"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL17ContinueStatement11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::ContinueStatement"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  store i8 9, i8* %4, align 1
  %5 = bitcast %"class.SkSL::String"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @.str.148, i64 0, i64 0), i64 9, i1 false) #14
  %6 = getelementptr inbounds i8, i8* %5, i64 9
  store i8 0, i8* %6, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Statement"* @_ZNK4SkSL17ContinueStatement5cloneEv(%"class.SkSL::ContinueStatement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::ContinueStatement", %"class.SkSL::ContinueStatement"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 16) #14
  %4 = load i32, i32* %2, align 4
  %5 = getelementptr inbounds i8, i8* %3, i64 8
  %6 = bitcast i8* %5 to i32*
  store i32 %4, i32* %6, align 8
  %7 = getelementptr inbounds i8, i8* %3, i64 12
  %8 = bitcast i8* %7 to i32*
  store i32 18, i32* %8, align 4
  %9 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL17ContinueStatementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = bitcast i8* %3 to %"class.SkSL::Statement"*
  ret %"class.SkSL::Statement"* %10
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL16DiscardStatementD0Ev(%"class.SkSL::DiscardStatement"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.SkSL::DiscardStatement"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL16DiscardStatement11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::DiscardStatement"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  store i8 8, i8* %4, align 1
  %5 = bitcast %"class.SkSL::String"* %0 to i64*
  store i64 4279671308514716004, i64* %5, align 8
  %6 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast i64* %6 to i8*
  store i8 0, i8* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Statement"* @_ZNK4SkSL16DiscardStatement5cloneEv(%"class.SkSL::DiscardStatement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::DiscardStatement", %"class.SkSL::DiscardStatement"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 16) #14
  %4 = load i32, i32* %2, align 4
  %5 = getelementptr inbounds i8, i8* %3, i64 8
  %6 = bitcast i8* %5 to i32*
  store i32 %4, i32* %6, align 8
  %7 = getelementptr inbounds i8, i8* %3, i64 12
  %8 = bitcast i8* %7 to i32*
  store i32 19, i32* %8, align 4
  %9 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL16DiscardStatementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = bitcast i8* %3 to %"class.SkSL::Statement"*
  ret %"class.SkSL::Statement"* %10
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #11

declare void @_ZN4SkSL3dsl6DSLVaraSENS0_13DSLExpressionE(%"class.SkSL::dsl::DSLPossibleExpression"* sret, %"class.SkSL::dsl::DSLVar"*, %"class.SkSL::dsl::DSLExpression"*) local_unnamed_addr #2

declare void @_ZN4SkSL3dslppENS0_13DSLExpressionEi(%"class.SkSL::dsl::DSLPossibleExpression"* sret, %"class.SkSL::dsl::DSLExpression"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL3dsl11DSLFunctionD0Ev(%"class.SkSL::dsl::DSLFunction"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.SkSL::dsl::DSLFunction"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.66"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_14IRIntrinsicMap9IntrinsicEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_(%"class.std::__1::__hash_table.62"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %4 = bitcast %"class.SkSL::String"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.SkSL::String"* %1 to i8*
  %13 = zext i8 %6 to i64
  %14 = select i1 %7, i8* %9, i8* %12
  %15 = select i1 %7, i64 %11, i64 %13
  %16 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #14
  %17 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %3, i8* %14, i64 %15) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #14
  %18 = getelementptr inbounds %"class.std::__1::__hash_table.62", %"class.std::__1::__hash_table.62"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %68, label %21

21:                                               ; preds = %2
  %22 = call i64 @llvm.ctpop.i64(i64 %19) #14, !range !99
  %23 = icmp ugt i64 %22, 1
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = add i64 %19, -1
  %26 = and i64 %25, %17
  br label %31

27:                                               ; preds = %21
  %28 = icmp ult i64 %17, %19
  br i1 %28, label %31, label %29

29:                                               ; preds = %27
  %30 = urem i64 %17, %19
  br label %31

31:                                               ; preds = %24, %27, %29
  %32 = phi i64 [ %26, %24 ], [ %30, %29 ], [ %17, %27 ]
  %33 = getelementptr inbounds %"class.std::__1::__hash_table.62", %"class.std::__1::__hash_table.62"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base.66"**, %"struct.std::__1::__hash_node_base.66"*** %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.66"*, %"struct.std::__1::__hash_node_base.66"** %34, i64 %32
  %36 = load %"struct.std::__1::__hash_node_base.66"*, %"struct.std::__1::__hash_node_base.66"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base.66"* %36, null
  br i1 %37, label %68, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.66", %"struct.std::__1::__hash_node_base.66"* %36, i64 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base.66"*, %"struct.std::__1::__hash_node_base.66"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.66"* %40, null
  br i1 %41, label %68, label %42

42:                                               ; preds = %38
  %43 = add i64 %19, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.66"* [ %40, %42 ], [ %66, %64 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.66", %"struct.std::__1::__hash_node_base.66"* %45, i64 1
  %47 = bitcast %"struct.std::__1::__hash_node_base.66"* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %48, %17
  br i1 %49, label %60, label %50

50:                                               ; preds = %44
  br i1 %23, label %53, label %51

51:                                               ; preds = %50
  %52 = and i64 %48, %43
  br label %57

53:                                               ; preds = %50
  %54 = icmp ult i64 %48, %19
  br i1 %54, label %57, label %55

55:                                               ; preds = %53
  %56 = urem i64 %48, %19
  br label %57

57:                                               ; preds = %51, %53, %55
  %58 = phi i64 [ %52, %51 ], [ %56, %55 ], [ %48, %53 ]
  %59 = icmp eq i64 %58, %32
  br i1 %59, label %64, label %68

60:                                               ; preds = %44
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base.66", %"struct.std::__1::__hash_node_base.66"* %45, i64 2
  %62 = bitcast %"struct.std::__1::__hash_node_base.66"* %61 to %"class.SkSL::String"*
  %63 = call zeroext i1 @_ZNK4SkSL6StringeqERKS0_(%"class.SkSL::String"* %62, %"class.SkSL::String"* dereferenceable(24) %1) #14
  br i1 %63, label %68, label %64

64:                                               ; preds = %57, %60
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.66", %"struct.std::__1::__hash_node_base.66"* %45, i64 0, i32 0
  %66 = load %"struct.std::__1::__hash_node_base.66"*, %"struct.std::__1::__hash_node_base.66"** %65, align 8
  %67 = icmp eq %"struct.std::__1::__hash_node_base.66"* %66, null
  br i1 %67, label %68, label %44

68:                                               ; preds = %60, %64, %57, %38, %2, %31
  %69 = phi %"struct.std::__1::__hash_node_base.66"* [ null, %31 ], [ null, %2 ], [ null, %38 ], [ %45, %60 ], [ null, %64 ], [ null, %57 ]
  ret %"struct.std::__1::__hash_node_base.66"* %69
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"*, i8*, i64) local_unnamed_addr #4 comdat align 2 {
  %4 = icmp ult i64 %2, 33
  br i1 %4, label %5, label %50

5:                                                ; preds = %3
  %6 = icmp ult i64 %2, 17
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8* %1, i64 %2)
  br label %329

9:                                                ; preds = %5
  %10 = bitcast i8* %1 to i64*
  %11 = load i64, i64* %10, align 1
  %12 = mul i64 %11, -5435081209227447693
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = mul i64 %19, -7286425919675154353
  %21 = getelementptr inbounds i8, i8* %16, i64 -16
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 1
  %24 = mul i64 %23, -4348849565147123417
  %25 = sub i64 %12, %15
  %26 = lshr i64 %25, 43
  %27 = shl i64 %25, 21
  %28 = or i64 %27, %26
  %29 = lshr i64 %20, 30
  %30 = mul i64 %19, -4737503975807385600
  %31 = or i64 %29, %30
  %32 = add i64 %24, %28
  %33 = add i64 %32, %31
  %34 = xor i64 %15, -3942382747735136937
  %35 = lshr i64 %34, 20
  %36 = shl i64 %34, 44
  %37 = or i64 %36, %35
  %38 = add i64 %12, %2
  %39 = sub i64 %38, %20
  %40 = add i64 %39, %37
  %41 = xor i64 %33, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %329

50:                                               ; preds = %3
  %51 = icmp ult i64 %2, 65
  br i1 %51, label %52, label %132

52:                                               ; preds = %50
  %53 = getelementptr inbounds i8, i8* %1, i64 24
  %54 = bitcast i8* %53 to i64*
  %55 = load i64, i64* %54, align 1
  %56 = bitcast i8* %1 to i64*
  %57 = load i64, i64* %56, align 1
  %58 = getelementptr inbounds i8, i8* %1, i64 %2
  %59 = getelementptr inbounds i8, i8* %58, i64 -16
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 1
  %62 = add i64 %61, %2
  %63 = mul i64 %62, -4348849565147123417
  %64 = add i64 %63, %57
  %65 = add i64 %64, %55
  %66 = lshr i64 %65, 52
  %67 = shl i64 %65, 12
  %68 = or i64 %67, %66
  %69 = lshr i64 %64, 37
  %70 = shl i64 %64, 27
  %71 = or i64 %70, %69
  %72 = getelementptr inbounds i8, i8* %1, i64 8
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 1
  %75 = add i64 %64, %74
  %76 = lshr i64 %75, 7
  %77 = shl i64 %75, 57
  %78 = or i64 %77, %76
  %79 = getelementptr inbounds i8, i8* %1, i64 16
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 1
  %82 = add i64 %75, %81
  %83 = lshr i64 %82, 31
  %84 = shl i64 %82, 33
  %85 = or i64 %84, %83
  %86 = add i64 %78, %71
  %87 = add i64 %86, %68
  %88 = add i64 %87, %85
  %89 = getelementptr inbounds i8, i8* %58, i64 -32
  %90 = bitcast i8* %89 to i64*
  %91 = load i64, i64* %90, align 1
  %92 = add i64 %91, %81
  %93 = getelementptr inbounds i8, i8* %58, i64 -8
  %94 = bitcast i8* %93 to i64*
  %95 = load i64, i64* %94, align 1
  %96 = add i64 %95, %55
  %97 = add i64 %96, %92
  %98 = lshr i64 %97, 52
  %99 = shl i64 %97, 12
  %100 = or i64 %99, %98
  %101 = lshr i64 %92, 37
  %102 = shl i64 %92, 27
  %103 = or i64 %102, %101
  %104 = getelementptr inbounds i8, i8* %58, i64 -24
  %105 = bitcast i8* %104 to i64*
  %106 = load i64, i64* %105, align 1
  %107 = add i64 %106, %92
  %108 = lshr i64 %107, 7
  %109 = shl i64 %107, 57
  %110 = or i64 %109, %108
  %111 = add i64 %107, %61
  %112 = add i64 %111, %96
  %113 = lshr i64 %111, 31
  %114 = shl i64 %111, 33
  %115 = or i64 %114, %113
  %116 = add i64 %82, %55
  %117 = add i64 %116, %103
  %118 = add i64 %117, %110
  %119 = add i64 %118, %100
  %120 = add i64 %119, %115
  %121 = mul i64 %120, -7286425919675154353
  %122 = add i64 %112, %88
  %123 = mul i64 %122, -4348849565147123417
  %124 = add i64 %121, %123
  %125 = lshr i64 %124, 47
  %126 = xor i64 %125, %124
  %127 = mul i64 %126, -4348849565147123417
  %128 = add i64 %127, %88
  %129 = lshr i64 %128, 47
  %130 = xor i64 %129, %128
  %131 = mul i64 %130, -7286425919675154353
  br label %329

132:                                              ; preds = %50
  %133 = getelementptr inbounds i8, i8* %1, i64 %2
  %134 = getelementptr inbounds i8, i8* %133, i64 -40
  %135 = bitcast i8* %134 to i64*
  %136 = load i64, i64* %135, align 1
  %137 = getelementptr inbounds i8, i8* %133, i64 -16
  %138 = bitcast i8* %137 to i64*
  %139 = load i64, i64* %138, align 1
  %140 = getelementptr inbounds i8, i8* %133, i64 -56
  %141 = bitcast i8* %140 to i64*
  %142 = load i64, i64* %141, align 1
  %143 = add i64 %142, %139
  %144 = getelementptr inbounds i8, i8* %133, i64 -48
  %145 = bitcast i8* %144 to i64*
  %146 = load i64, i64* %145, align 1
  %147 = add i64 %146, %2
  %148 = getelementptr inbounds i8, i8* %133, i64 -24
  %149 = bitcast i8* %148 to i64*
  %150 = load i64, i64* %149, align 1
  %151 = xor i64 %150, %147
  %152 = mul i64 %151, -7070675565921424023
  %153 = lshr i64 %152, 47
  %154 = xor i64 %152, %150
  %155 = xor i64 %154, %153
  %156 = mul i64 %155, -7070675565921424023
  %157 = lshr i64 %156, 47
  %158 = xor i64 %157, %156
  %159 = mul i64 %158, -7070675565921424023
  %160 = getelementptr inbounds i8, i8* %133, i64 -64
  %161 = bitcast i8* %160 to i64*
  %162 = load i64, i64* %161, align 1
  %163 = add i64 %162, %2
  %164 = add i64 %136, %163
  %165 = add i64 %164, %159
  %166 = lshr i64 %165, 21
  %167 = shl i64 %165, 43
  %168 = or i64 %167, %166
  %169 = add i64 %163, %142
  %170 = add i64 %169, %146
  %171 = lshr i64 %170, 44
  %172 = shl i64 %170, 20
  %173 = or i64 %172, %171
  %174 = add i64 %170, %136
  %175 = add i64 %173, %163
  %176 = add i64 %175, %168
  %177 = getelementptr inbounds i8, i8* %133, i64 -32
  %178 = add i64 %143, -5435081209227447693
  %179 = bitcast i8* %177 to i64*
  %180 = load i64, i64* %179, align 1
  %181 = getelementptr inbounds i8, i8* %177, i64 24
  %182 = bitcast i8* %181 to i64*
  %183 = load i64, i64* %182, align 1
  %184 = add i64 %178, %180
  %185 = add i64 %184, %136
  %186 = add i64 %185, %183
  %187 = lshr i64 %186, 21
  %188 = shl i64 %186, 43
  %189 = or i64 %188, %187
  %190 = add i64 %184, %150
  %191 = add i64 %190, %139
  %192 = lshr i64 %191, 44
  %193 = shl i64 %191, 20
  %194 = or i64 %193, %192
  %195 = add i64 %191, %183
  %196 = add i64 %194, %184
  %197 = add i64 %196, %189
  %198 = mul i64 %136, -5435081209227447693
  %199 = bitcast i8* %1 to i64*
  %200 = load i64, i64* %199, align 1
  %201 = add i64 %200, %198
  %202 = add i64 %2, -1
  %203 = and i64 %202, -64
  br label %204

204:                                              ; preds = %292, %132
  %205 = phi i64 [ %200, %132 ], [ %294, %292 ]
  %206 = phi i64 [ %197, %132 ], [ %288, %292 ]
  %207 = phi i64 [ %195, %132 ], [ %286, %292 ]
  %208 = phi i64 [ %174, %132 ], [ %264, %292 ]
  %209 = phi i64 [ %176, %132 ], [ %266, %292 ]
  %210 = phi i64 [ %159, %132 ], [ %234, %292 ]
  %211 = phi i64 [ %201, %132 ], [ %244, %292 ]
  %212 = phi i64 [ %203, %132 ], [ %290, %292 ]
  %213 = phi i8* [ %1, %132 ], [ %289, %292 ]
  %214 = phi i64 [ %143, %132 ], [ %239, %292 ]
  %215 = getelementptr inbounds i8, i8* %213, i64 8
  %216 = bitcast i8* %215 to i64*
  %217 = load i64, i64* %216, align 1
  %218 = add i64 %211, %208
  %219 = add i64 %218, %214
  %220 = add i64 %219, %217
  %221 = lshr i64 %220, 37
  %222 = shl i64 %220, 27
  %223 = or i64 %222, %221
  %224 = mul i64 %223, -5435081209227447693
  %225 = add i64 %214, %209
  %226 = getelementptr inbounds i8, i8* %213, i64 48
  %227 = bitcast i8* %226 to i64*
  %228 = load i64, i64* %227, align 1
  %229 = add i64 %225, %228
  %230 = lshr i64 %229, 42
  %231 = shl i64 %229, 22
  %232 = or i64 %231, %230
  %233 = mul i64 %232, -5435081209227447693
  %234 = xor i64 %224, %206
  %235 = getelementptr inbounds i8, i8* %213, i64 40
  %236 = bitcast i8* %235 to i64*
  %237 = load i64, i64* %236, align 1
  %238 = add i64 %237, %208
  %239 = add i64 %238, %233
  %240 = add i64 %210, %207
  %241 = lshr i64 %240, 33
  %242 = shl i64 %240, 31
  %243 = or i64 %242, %241
  %244 = mul i64 %243, -5435081209227447693
  %245 = mul i64 %209, -5435081209227447693
  %246 = getelementptr inbounds i8, i8* %213, i64 16
  %247 = bitcast i8* %246 to i64*
  %248 = load i64, i64* %247, align 1
  %249 = getelementptr inbounds i8, i8* %213, i64 24
  %250 = bitcast i8* %249 to i64*
  %251 = load i64, i64* %250, align 1
  %252 = add i64 %205, %245
  %253 = add i64 %252, %207
  %254 = add i64 %253, %251
  %255 = add i64 %254, %234
  %256 = lshr i64 %255, 21
  %257 = shl i64 %255, 43
  %258 = or i64 %257, %256
  %259 = add i64 %252, %217
  %260 = add i64 %259, %248
  %261 = lshr i64 %260, 44
  %262 = shl i64 %260, 20
  %263 = or i64 %262, %261
  %264 = add i64 %260, %251
  %265 = add i64 %263, %252
  %266 = add i64 %265, %258
  %267 = getelementptr inbounds i8, i8* %213, i64 32
  %268 = add i64 %244, %206
  %269 = add i64 %239, %248
  %270 = bitcast i8* %267 to i64*
  %271 = load i64, i64* %270, align 1
  %272 = getelementptr inbounds i8, i8* %213, i64 56
  %273 = bitcast i8* %272 to i64*
  %274 = load i64, i64* %273, align 1
  %275 = add i64 %268, %271
  %276 = add i64 %269, %275
  %277 = add i64 %276, %274
  %278 = lshr i64 %277, 21
  %279 = shl i64 %277, 43
  %280 = or i64 %279, %278
  %281 = add i64 %275, %237
  %282 = add i64 %281, %228
  %283 = lshr i64 %282, 44
  %284 = shl i64 %282, 20
  %285 = or i64 %284, %283
  %286 = add i64 %282, %274
  %287 = add i64 %285, %275
  %288 = add i64 %287, %280
  %289 = getelementptr inbounds i8, i8* %213, i64 64
  %290 = add i64 %212, -64
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %295, label %292

292:                                              ; preds = %204
  %293 = bitcast i8* %289 to i64*
  %294 = load i64, i64* %293, align 1
  br label %204

295:                                              ; preds = %204
  %296 = xor i64 %286, %264
  %297 = mul i64 %296, -7070675565921424023
  %298 = lshr i64 %297, 47
  %299 = xor i64 %297, %286
  %300 = xor i64 %299, %298
  %301 = mul i64 %300, -7070675565921424023
  %302 = lshr i64 %301, 47
  %303 = xor i64 %302, %301
  %304 = mul i64 %303, -7070675565921424023
  %305 = lshr i64 %239, 47
  %306 = xor i64 %305, %239
  %307 = mul i64 %306, -5435081209227447693
  %308 = add i64 %307, %234
  %309 = add i64 %308, %304
  %310 = xor i64 %288, %266
  %311 = mul i64 %310, -7070675565921424023
  %312 = lshr i64 %311, 47
  %313 = xor i64 %311, %288
  %314 = xor i64 %313, %312
  %315 = mul i64 %314, -7070675565921424023
  %316 = lshr i64 %315, 47
  %317 = xor i64 %316, %315
  %318 = mul i64 %317, -7070675565921424023
  %319 = add i64 %318, %244
  %320 = xor i64 %319, %309
  %321 = mul i64 %320, -7070675565921424023
  %322 = lshr i64 %321, 47
  %323 = xor i64 %321, %319
  %324 = xor i64 %323, %322
  %325 = mul i64 %324, -7070675565921424023
  %326 = lshr i64 %325, 47
  %327 = xor i64 %326, %325
  %328 = mul i64 %327, -7070675565921424023
  br label %329

329:                                              ; preds = %295, %52, %9, %7
  %330 = phi i64 [ %8, %7 ], [ %49, %9 ], [ %131, %52 ], [ %328, %295 ]
  ret i64 %330
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 8
  br i1 %3, label %4, label %28

4:                                                ; preds = %2
  %5 = bitcast i8* %0 to i64*
  %6 = load i64, i64* %5, align 1
  %7 = getelementptr inbounds i8, i8* %0, i64 %1
  %8 = getelementptr inbounds i8, i8* %7, i64 -8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = add i64 %10, %1
  %12 = and i64 %1, 4294967295
  %13 = lshr i64 %11, %12
  %14 = sub i64 64, %1
  %15 = and i64 %14, 4294967295
  %16 = shl i64 %11, %15
  %17 = or i64 %16, %13
  %18 = xor i64 %17, %6
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %19, %17
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, -7070675565921424023
  %24 = lshr i64 %23, 47
  %25 = xor i64 %24, %23
  %26 = mul i64 %25, -7070675565921424023
  %27 = xor i64 %26, %10
  br label %74

28:                                               ; preds = %2
  %29 = icmp ugt i64 %1, 3
  br i1 %29, label %30, label %50

30:                                               ; preds = %28
  %31 = bitcast i8* %0 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = getelementptr inbounds i8, i8* %0, i64 %1
  %34 = getelementptr inbounds i8, i8* %33, i64 -4
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = shl i32 %32, 3
  %38 = zext i32 %37 to i64
  %39 = add nuw nsw i64 %38, %1
  %40 = zext i32 %36 to i64
  %41 = xor i64 %39, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %74

50:                                               ; preds = %28
  %51 = icmp eq i64 %1, 0
  br i1 %51, label %74, label %52

52:                                               ; preds = %50
  %53 = load i8, i8* %0, align 1
  %54 = lshr i64 %1, 1
  %55 = getelementptr inbounds i8, i8* %0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = add nsw i64 %1, -1
  %58 = getelementptr inbounds i8, i8* %0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %53 to i64
  %61 = zext i8 %56 to i64
  %62 = shl nuw nsw i64 %61, 8
  %63 = or i64 %62, %60
  %64 = zext i8 %59 to i64
  %65 = shl nuw nsw i64 %64, 2
  %66 = add nuw nsw i64 %65, %1
  %67 = mul i64 %63, -7286425919675154353
  %68 = and i64 %66, 4294967295
  %69 = mul i64 %68, -3942382747735136937
  %70 = xor i64 %69, %67
  %71 = lshr i64 %70, 47
  %72 = xor i64 %71, %70
  %73 = mul i64 %72, -7286425919675154353
  br label %74

74:                                               ; preds = %50, %52, %30, %4
  %75 = phi i64 [ %27, %4 ], [ %49, %30 ], [ %73, %52 ], [ -7286425919675154353, %50 ]
  ret i64 %75
}

declare zeroext i1 @_ZNK4SkSL6StringeqERKS0_(%"class.SkSL::String"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZZN4SkSL11IRGenerator16finalizeFunctionERKNS_19FunctionDeclarationEPNS_9StatementEEN9FinalizerD0Ev(%class.Finalizer*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.Finalizer* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZZN4SkSL11IRGenerator16finalizeFunctionERKNS_19FunctionDeclarationEPNS_9StatementEEN9Finalizer15visitExpressionERNS_10ExpressionE(%class.Finalizer* nocapture readnone, %"class.SkSL::Expression"* nocapture readnone dereferenceable(24)) unnamed_addr #12 align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN4SkSL15TProgramVisitorINS_18ProgramWriterTypesEE19visitProgramElementERNS_14ProgramElementE(%"class.SkSL::TProgramVisitor"*, %"class.SkSL::ProgramElement"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4SkSL13ProgramWriter18visitExpressionPtrERNSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEE(%"class.SkSL::ProgramWriter"*, %"class.std::__1::unique_ptr.157"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::ProgramWriter", %"class.SkSL::ProgramWriter"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %4, align 8
  %6 = bitcast %"class.SkSL::ProgramWriter"* %0 to i1 (%"class.SkSL::TProgramVisitor"*, %"class.SkSL::Expression"*)***
  %7 = load i1 (%"class.SkSL::TProgramVisitor"*, %"class.SkSL::Expression"*)**, i1 (%"class.SkSL::TProgramVisitor"*, %"class.SkSL::Expression"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.SkSL::TProgramVisitor"*, %"class.SkSL::Expression"*)*, i1 (%"class.SkSL::TProgramVisitor"*, %"class.SkSL::Expression"*)** %7, i64 2
  %9 = load i1 (%"class.SkSL::TProgramVisitor"*, %"class.SkSL::Expression"*)*, i1 (%"class.SkSL::TProgramVisitor"*, %"class.SkSL::Expression"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.SkSL::TProgramVisitor"* %3, %"class.SkSL::Expression"* dereferenceable(24) %5) #14
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4SkSL13ProgramWriter17visitStatementPtrERNSt3__110unique_ptrINS_9StatementENS1_14default_deleteIS3_EEEE(%"class.SkSL::ProgramWriter"*, %"class.std::__1::unique_ptr.190"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::ProgramWriter", %"class.SkSL::ProgramWriter"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %4, align 8
  %6 = bitcast %"class.SkSL::ProgramWriter"* %0 to i1 (%"class.SkSL::TProgramVisitor"*, %"class.SkSL::Statement"*)***
  %7 = load i1 (%"class.SkSL::TProgramVisitor"*, %"class.SkSL::Statement"*)**, i1 (%"class.SkSL::TProgramVisitor"*, %"class.SkSL::Statement"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.SkSL::TProgramVisitor"*, %"class.SkSL::Statement"*)*, i1 (%"class.SkSL::TProgramVisitor"*, %"class.SkSL::Statement"*)** %7, i64 3
  %9 = load i1 (%"class.SkSL::TProgramVisitor"*, %"class.SkSL::Statement"*)*, i1 (%"class.SkSL::TProgramVisitor"*, %"class.SkSL::Statement"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.SkSL::TProgramVisitor"* %3, %"class.SkSL::Statement"* dereferenceable(16) %5) #14
  ret i1 %10
}

declare zeroext i1 @_ZN4SkSL15TProgramVisitorINS_18ProgramWriterTypesEE14visitStatementERNS_9StatementE(%"class.SkSL::TProgramVisitor"*, %"class.SkSL::Statement"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL4TypeD2Ev(%"class.SkSL::Type"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 10, i32 0, i32 0
  %4 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %3, align 8
  %5 = icmp eq %"struct.SkSL::Type::Field"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.SkSL::Type::Field"* %4 to i64
  %8 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 10, i32 0, i32 1
  %9 = bitcast %"struct.SkSL::Type::Field"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.SkSL::Type::Field"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #15
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 7, i32 0, i32 0
  %13 = load %"class.SkSL::Type"**, %"class.SkSL::Type"*** %12, align 8
  %14 = icmp eq %"class.SkSL::Type"** %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %"class.SkSL::Type"** %13 to i64
  %17 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 7, i32 0, i32 1
  %18 = bitcast %"class.SkSL::Type"*** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast %"class.SkSL::Type"** %13 to i8*
  tail call void @_ZdlPv(i8* %19) #15
  br label %20

20:                                               ; preds = %11, %15
  %21 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 2, i32 0
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #15
  br label %29

29:                                               ; preds = %20, %26
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL4TypeD0Ev(%"class.SkSL::Type"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4SkSL4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 10, i32 0, i32 0
  %4 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %3, align 8
  %5 = icmp eq %"struct.SkSL::Type::Field"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.SkSL::Type::Field"* %4 to i64
  %8 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 10, i32 0, i32 1
  %9 = bitcast %"struct.SkSL::Type::Field"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.SkSL::Type::Field"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #15
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 7, i32 0, i32 0
  %13 = load %"class.SkSL::Type"**, %"class.SkSL::Type"*** %12, align 8
  %14 = icmp eq %"class.SkSL::Type"** %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %"class.SkSL::Type"** %13 to i64
  %17 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 7, i32 0, i32 1
  %18 = bitcast %"class.SkSL::Type"*** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast %"class.SkSL::Type"** %13 to i8*
  tail call void @_ZdlPv(i8* %19) #15
  br label %20

20:                                               ; preds = %15, %11
  %21 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %0, i64 0, i32 2, i32 0
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #15
  br label %29

29:                                               ; preds = %20, %26
  %30 = bitcast %"class.SkSL::Type"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %30) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL4Type11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::Type"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 18
  %4 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %3, align 8, !noalias !151
  %5 = icmp eq %"class.SkSL::Type"* %4, null
  %6 = select i1 %5, %"class.SkSL::Type"* %1, %"class.SkSL::Type"* %4
  %7 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %6, i64 0, i32 0, i32 1, i32 0
  %8 = load i8*, i8** %7, align 8, !noalias !151
  %9 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %6, i64 0, i32 0, i32 1, i32 1
  %10 = load i64, i64* %9, align 8, !noalias !151
  %11 = icmp ugt i64 %10, -17
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.SkSL::String"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = icmp ult i64 %10, 23
  br i1 %15, label %24, label %16

16:                                               ; preds = %14
  %17 = add nuw i64 %10, 16
  %18 = and i64 %17, -16
  %19 = tail call i8* @_Znwm(i64 %18) #15
  %20 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %19, i8** %20, align 8, !alias.scope !151
  %21 = or i64 %18, -9223372036854775808
  %22 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %21, i64* %22, align 8, !alias.scope !151
  %23 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %10, i64* %23, align 8, !alias.scope !151
  br label %30

24:                                               ; preds = %14
  %25 = trunc i64 %10 to i8
  %26 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  store i8 %25, i8* %27, align 1, !alias.scope !151
  %28 = bitcast %"class.SkSL::String"* %0 to i8*
  %29 = icmp eq i64 %10, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %24, %16
  %31 = phi i8* [ %19, %16 ], [ %28, %24 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %31, i8* align 1 %8, i64 %10, i1 false) #14
  br label %32

32:                                               ; preds = %24, %30
  %33 = phi i8* [ %28, %24 ], [ %31, %30 ]
  %34 = getelementptr inbounds i8, i8* %33, i64 %10
  store i8 0, i8* %34, align 1
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL7LiteralIlED0Ev(%"class.SkSL::Literal"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.SkSL::Literal"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL7LiteralIlE11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::Literal"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %1, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  tail call void @_ZN4SkSL9to_stringEl(%"class.SkSL::String"* sret %0, i64 %4) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL10Expression4typeEv(%"class.SkSL::Expression"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %0, i64 0, i32 1
  %3 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %2, align 8
  ret %"class.SkSL::Type"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL7LiteralIlE21isCompileTimeConstantEv(%"class.SkSL::Literal"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK4SkSL7LiteralIlE15compareConstantERKNS_10ExpressionE(%"class.SkSL::Literal"*, %"class.SkSL::Expression"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 43
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %0, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 1
  %10 = bitcast %"class.SkSL::Expression"* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %8, %11
  %13 = zext i1 %12 to i32
  br label %14

14:                                               ; preds = %2, %6
  %15 = phi i32 [ %13, %6 ], [ -1, %2 ]
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL10Expression19isConstantOrUniformEv(%"class.SkSL::Expression"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.SkSL::Expression"* %0 to i1 (%"class.SkSL::Expression"*)***
  %3 = load i1 (%"class.SkSL::Expression"*)**, i1 (%"class.SkSL::Expression"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.SkSL::Expression"*)*, i1 (%"class.SkSL::Expression"*)** %3, i64 4
  %5 = load i1 (%"class.SkSL::Expression"*)*, i1 (%"class.SkSL::Expression"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.SkSL::Expression"* %0) #14
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL7LiteralIlE11hasPropertyENS_10Expression8PropertyE(%"class.SkSL::Literal"*, i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i8 } @_ZNK4SkSL7LiteralIlE12coercionCostERKNS_4TypeE(%"class.SkSL::Literal"*, %"class.SkSL::Type"* dereferenceable(184)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 4
  %4 = load i32, i32* %3, align 4
  %5 = icmp ult i32 %4, 3
  br i1 %5, label %20, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %20, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %0, i64 0, i32 0
  %12 = bitcast %"class.SkSL::Literal"* %0 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %13 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %13, i64 3
  %15 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %14, align 8
  %16 = tail call dereferenceable(184) %"class.SkSL::Type"* %15(%"class.SkSL::Expression"* %11) #14
  %17 = tail call { i64, i8 } @_ZNK4SkSL4Type12coercionCostERKS0_(%"class.SkSL::Type"* %16, %"class.SkSL::Type"* dereferenceable(184) %1) #14
  %18 = extractvalue { i64, i8 } %17, 0
  %19 = extractvalue { i64, i8 } %17, 1
  br label %20

20:                                               ; preds = %2, %6, %10
  %21 = phi i64 [ %18, %10 ], [ 0, %6 ], [ 0, %2 ]
  %22 = phi i8 [ %19, %10 ], [ 0, %6 ], [ 0, %2 ]
  %23 = insertvalue { i64, i8 } undef, i64 %21, 0
  %24 = insertvalue { i64, i8 } %23, i8 %22, 1
  ret { i64, i8 } %24
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL7LiteralIlE24getConstantSubexpressionEi(%"class.SkSL::Literal"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %0, i64 0, i32 0
  ret %"class.SkSL::Expression"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL7LiteralIlE5cloneEv(%"class.SkSL::Literal"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.SkSL::Type"** %3 to <2 x i64>*
  %5 = load <2 x i64>, <2 x i64>* %4, align 8
  %6 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #14
  %7 = load i32, i32* %2, align 4
  %8 = bitcast i8* %6 to i32 (...)***
  %9 = getelementptr inbounds i8, i8* %6, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 %7, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %6, i64 12
  %12 = bitcast i8* %11 to i32*
  store i32 43, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %6, i64 16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIlEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %14 = bitcast i8* %13 to <2 x i64>*
  store <2 x i64> %5, <2 x i64>* %14, align 8
  %15 = bitcast i8* %6 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %15
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL10Expression21isCompileTimeConstantEv(%"class.SkSL::Expression"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK4SkSL10Expression15compareConstantERKS0_(%"class.SkSL::Expression"*, %"class.SkSL::Expression"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  ret i32 -1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i8 } @_ZNK4SkSL10Expression12coercionCostERKNS_4TypeE(%"class.SkSL::Expression"*, %"class.SkSL::Type"* dereferenceable(184)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.SkSL::Expression"* %0 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %4 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %4, i64 3
  %6 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %5, align 8
  %7 = tail call dereferenceable(184) %"class.SkSL::Type"* %6(%"class.SkSL::Expression"* %0) #14
  %8 = tail call { i64, i8 } @_ZNK4SkSL4Type12coercionCostERKS0_(%"class.SkSL::Type"* %7, %"class.SkSL::Type"* dereferenceable(184) %1) #14
  ret { i64, i8 } %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL10Expression24getConstantSubexpressionEi(%"class.SkSL::Expression"*, i32) unnamed_addr #0 comdat align 2 {
  ret %"class.SkSL::Expression"* null
}

declare { i64, i8 } @_ZNK4SkSL4Type12coercionCostERKS0_(%"class.SkSL::Type"*, %"class.SkSL::Type"* dereferenceable(184)) local_unnamed_addr #2

declare void @_ZN4SkSL9to_stringEl(%"class.SkSL::String"* sret, i64) local_unnamed_addr #2

declare zeroext i1 @_ZNK4SkSL14StringFragment10startsWithEPKc(%"struct.SkSL::StringFragment"*, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL7LiteralIbED0Ev(%"class.SkSL::Literal.304"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.SkSL::Literal.304"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL7LiteralIbE11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::Literal.304"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Literal.304", %"class.SkSL::Literal.304"* %1, i64 0, i32 1
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  %6 = select i1 %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.159, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.158, i64 0, i64 0)
  %7 = select i1 %5, i64 5, i64 4
  %8 = trunc i64 %7 to i8
  %9 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  store i8 %8, i8* %10, align 1
  %11 = bitcast %"class.SkSL::String"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 1 %6, i64 %7, i1 false) #14
  %12 = getelementptr inbounds i8, i8* %11, i64 %7
  store i8 0, i8* %12, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL7LiteralIbE21isCompileTimeConstantEv(%"class.SkSL::Literal.304"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK4SkSL7LiteralIbE15compareConstantERKNS_10ExpressionE(%"class.SkSL::Literal.304"*, %"class.SkSL::Expression"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 31
  br i1 %5, label %6, label %16

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::Literal.304", %"class.SkSL::Literal.304"* %0, i64 0, i32 1
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  %10 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 1
  %11 = bitcast %"class.SkSL::Expression"* %10 to i8*
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp ne i8 %12, 0
  %14 = xor i1 %9, %13
  %15 = zext i1 %14 to i32
  br label %16

16:                                               ; preds = %2, %6
  %17 = phi i32 [ %15, %6 ], [ -1, %2 ]
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL7LiteralIbE11hasPropertyENS_10Expression8PropertyE(%"class.SkSL::Literal.304"*, i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL7LiteralIbE24getConstantSubexpressionEi(%"class.SkSL::Literal.304"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Literal.304", %"class.SkSL::Literal.304"* %0, i64 0, i32 0
  ret %"class.SkSL::Expression"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL7LiteralIbE5cloneEv(%"class.SkSL::Literal.304"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Literal.304", %"class.SkSL::Literal.304"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.SkSL::Literal.304", %"class.SkSL::Literal.304"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = getelementptr inbounds %"class.SkSL::Literal.304", %"class.SkSL::Literal.304"* %0, i64 0, i32 0, i32 1
  %6 = bitcast %"class.SkSL::Type"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #14
  %9 = load i32, i32* %2, align 4
  %10 = bitcast i8* %8 to i32 (...)***
  %11 = getelementptr inbounds i8, i8* %8, i64 8
  %12 = bitcast i8* %11 to i32*
  store i32 %9, i32* %12, align 8
  %13 = getelementptr inbounds i8, i8* %8, i64 12
  %14 = bitcast i8* %13 to i32*
  store i32 31, i32* %14, align 4
  %15 = getelementptr inbounds i8, i8* %8, i64 16
  %16 = bitcast i8* %15 to i64*
  store i64 %7, i64* %16, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %17 = getelementptr inbounds i8, i8* %8, i64 24
  store i8 %4, i8* %17, align 8
  %18 = bitcast i8* %8 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %18
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL7LiteralIfED0Ev(%"class.SkSL::Literal.311"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.SkSL::Literal.311"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL7LiteralIfE11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::Literal.311"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Literal.311", %"class.SkSL::Literal.311"* %1, i64 0, i32 1
  %4 = load float, float* %3, align 8
  %5 = fpext float %4 to double
  tail call void @_ZN4SkSL9to_stringEd(%"class.SkSL::String"* sret %0, double %5) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL7LiteralIfE21isCompileTimeConstantEv(%"class.SkSL::Literal.311"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK4SkSL7LiteralIfE15compareConstantERKNS_10ExpressionE(%"class.SkSL::Literal.311"*, %"class.SkSL::Expression"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 45
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::Literal.311", %"class.SkSL::Literal.311"* %0, i64 0, i32 1
  %8 = load float, float* %7, align 8
  %9 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 1
  %10 = bitcast %"class.SkSL::Expression"* %9 to float*
  %11 = load float, float* %10, align 8
  %12 = fcmp oeq float %8, %11
  %13 = zext i1 %12 to i32
  br label %14

14:                                               ; preds = %2, %6
  %15 = phi i32 [ %13, %6 ], [ -1, %2 ]
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL7LiteralIfE11hasPropertyENS_10Expression8PropertyE(%"class.SkSL::Literal.311"*, i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i8 } @_ZNK4SkSL7LiteralIfE12coercionCostERKNS_4TypeE(%"class.SkSL::Literal.311"*, %"class.SkSL::Type"* dereferenceable(184)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 4
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %16, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::Literal.311", %"class.SkSL::Literal.311"* %0, i64 0, i32 0
  %8 = bitcast %"class.SkSL::Literal.311"* %0 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %9 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %9, i64 3
  %11 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %10, align 8
  %12 = tail call dereferenceable(184) %"class.SkSL::Type"* %11(%"class.SkSL::Expression"* %7) #14
  %13 = tail call { i64, i8 } @_ZNK4SkSL4Type12coercionCostERKS0_(%"class.SkSL::Type"* %12, %"class.SkSL::Type"* dereferenceable(184) %1) #14
  %14 = extractvalue { i64, i8 } %13, 0
  %15 = extractvalue { i64, i8 } %13, 1
  br label %16

16:                                               ; preds = %2, %6
  %17 = phi i64 [ %14, %6 ], [ 0, %2 ]
  %18 = phi i8 [ %15, %6 ], [ 0, %2 ]
  %19 = insertvalue { i64, i8 } undef, i64 %17, 0
  %20 = insertvalue { i64, i8 } %19, i8 %18, 1
  ret { i64, i8 } %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL7LiteralIfE24getConstantSubexpressionEi(%"class.SkSL::Literal.311"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Literal.311", %"class.SkSL::Literal.311"* %0, i64 0, i32 0
  ret %"class.SkSL::Expression"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL7LiteralIfE5cloneEv(%"class.SkSL::Literal.311"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Literal.311", %"class.SkSL::Literal.311"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.SkSL::Literal.311", %"class.SkSL::Literal.311"* %0, i64 0, i32 1
  %4 = bitcast float* %3 to i32*
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::Literal.311", %"class.SkSL::Literal.311"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.SkSL::Type"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #14
  %10 = load i32, i32* %2, align 4
  %11 = bitcast i8* %9 to i32 (...)***
  %12 = getelementptr inbounds i8, i8* %9, i64 8
  %13 = bitcast i8* %12 to i32*
  store i32 %10, i32* %13, align 8
  %14 = getelementptr inbounds i8, i8* %9, i64 12
  %15 = bitcast i8* %14 to i32*
  store i32 45, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %9, i64 16
  %17 = bitcast i8* %16 to i64*
  store i64 %8, i64* %17, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIfEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %18 = getelementptr inbounds i8, i8* %9, i64 24
  %19 = bitcast i8* %18 to i32*
  store i32 %5, i32* %19, align 8
  %20 = bitcast i8* %9 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %20
}

declare void @_ZN4SkSL9to_stringEd(%"class.SkSL::String"* sret, double) local_unnamed_addr #2

declare void @_ZN4SkSL17VariableReferenceC1EiPKNS_8VariableENS_15VariableRefKindE(%"class.SkSL::VariableReference"*, i32, %"class.SkSL::Variable"*, i8 signext) unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZZN4SkSL11IRGenerator30findAndDeclareBuiltinVariablesEvEN22BuiltinVariableScannerD0Ev(%class.BuiltinVariableScanner*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.BuiltinVariableScanner, %class.BuiltinVariableScanner* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVZN4SkSL11IRGenerator30findAndDeclareBuiltinVariablesEvE22BuiltinVariableScanner, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.BuiltinVariableScanner, %class.BuiltinVariableScanner* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %3, align 8
  %5 = icmp eq %"class.SkSL::ProgramElement"** %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.SkSL::ProgramElement"** %4 to i64
  %8 = getelementptr inbounds %class.BuiltinVariableScanner, %class.BuiltinVariableScanner* %0, i64 0, i32 2, i32 0, i32 1
  %9 = bitcast %"class.SkSL::ProgramElement"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.SkSL::ProgramElement"** %4 to i8*
  tail call void @_ZdlPv(i8* %10) #15
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %class.BuiltinVariableScanner* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZZN4SkSL11IRGenerator30findAndDeclareBuiltinVariablesEvEN22BuiltinVariableScanner15visitExpressionERKNS_10ExpressionE(%class.BuiltinVariableScanner*, %"class.SkSL::Expression"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 55
  br i1 %6, label %7, label %146

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 1
  %9 = bitcast %"class.SkSL::Expression"* %8 to %"class.SkSL::Variable"**
  %10 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %9, align 8
  %11 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %10, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %146, label %14

14:                                               ; preds = %7
  %15 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #14
  %16 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %10, i64 0, i32 0, i32 1, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %10, i64 0, i32 0, i32 1, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = icmp ugt i64 %19, -17
  br i1 %20, label %21, label %23

21:                                               ; preds = %14
  %22 = bitcast %"class.SkSL::String"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %22) #16
  unreachable

23:                                               ; preds = %14
  %24 = icmp ult i64 %19, 23
  br i1 %24, label %33, label %25

25:                                               ; preds = %23
  %26 = add nuw i64 %19, 16
  %27 = and i64 %26, -16
  %28 = tail call i8* @_Znwm(i64 %27) #15
  %29 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %28, i8** %29, align 8
  %30 = or i64 %27, -9223372036854775808
  %31 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %19, i64* %32, align 8
  br label %38

33:                                               ; preds = %23
  %34 = trunc i64 %19 to i8
  %35 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  store i8 %34, i8* %36, align 1
  %37 = icmp eq i64 %19, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %33, %25
  %39 = phi i8* [ %28, %25 ], [ %15, %33 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %39, i8* align 1 %17, i64 %19, i1 false) #14
  br label %40

40:                                               ; preds = %33, %38
  %41 = phi i8* [ %15, %33 ], [ %39, %38 ]
  %42 = getelementptr inbounds i8, i8* %41, i64 %19
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %class.BuiltinVariableScanner, %class.BuiltinVariableScanner* %0, i64 0, i32 1
  %44 = load %"class.SkSL::IRGenerator"*, %"class.SkSL::IRGenerator"** %43, align 8
  %45 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %44, i64 0, i32 5
  %46 = load %"class.SkSL::IRIntrinsicMap"*, %"class.SkSL::IRIntrinsicMap"** %45, align 8
  br label %47

47:                                               ; preds = %52, %40
  %48 = phi %"class.SkSL::IRIntrinsicMap"* [ %46, %40 ], [ %54, %52 ]
  %49 = getelementptr inbounds %"class.SkSL::IRIntrinsicMap", %"class.SkSL::IRIntrinsicMap"* %48, i64 0, i32 0, i32 0
  %50 = call %"struct.std::__1::__hash_node_base.66"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS2_14IRIntrinsicMap9IntrinsicEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_(%"class.std::__1::__hash_table.62"* %49, %"class.SkSL::String"* nonnull dereferenceable(24) %3) #14
  %51 = icmp eq %"struct.std::__1::__hash_node_base.66"* %50, null
  br i1 %51, label %52, label %56

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.SkSL::IRIntrinsicMap", %"class.SkSL::IRIntrinsicMap"* %48, i64 0, i32 1
  %54 = load %"class.SkSL::IRIntrinsicMap"*, %"class.SkSL::IRIntrinsicMap"** %53, align 8
  %55 = icmp eq %"class.SkSL::IRIntrinsicMap"* %54, null
  br i1 %55, label %137, label %47

56:                                               ; preds = %47
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.66", %"struct.std::__1::__hash_node_base.66"* %50, i64 6
  %58 = bitcast %"struct.std::__1::__hash_node_base.66"* %57 to i8*
  %59 = load i8, i8* %58, align 8, !range !2
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %137

61:                                               ; preds = %56
  store i8 1, i8* %58, align 8
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.66", %"struct.std::__1::__hash_node_base.66"* %50, i64 5
  %63 = bitcast %"struct.std::__1::__hash_node_base.66"* %62 to %"class.SkSL::ProgramElement"**
  %64 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %63, align 8
  %65 = ptrtoint %"class.SkSL::ProgramElement"* %64 to i64
  %66 = icmp eq %"class.SkSL::ProgramElement"* %64, null
  br i1 %66, label %137, label %67

67:                                               ; preds = %61
  %68 = getelementptr inbounds %class.BuiltinVariableScanner, %class.BuiltinVariableScanner* %0, i64 0, i32 2
  %69 = getelementptr inbounds %class.BuiltinVariableScanner, %class.BuiltinVariableScanner* %0, i64 0, i32 2, i32 0, i32 1
  %70 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %69, align 8
  %71 = getelementptr inbounds %class.BuiltinVariableScanner, %class.BuiltinVariableScanner* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %72 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %71, align 8
  %73 = icmp eq %"class.SkSL::ProgramElement"** %70, %72
  %74 = ptrtoint %"class.SkSL::ProgramElement"** %72 to i64
  br i1 %73, label %80, label %75

75:                                               ; preds = %67
  %76 = bitcast %"class.SkSL::ProgramElement"** %70 to i64*
  store i64 %65, i64* %76, align 8
  %77 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %70, i64 1
  %78 = ptrtoint %"class.SkSL::ProgramElement"** %77 to i64
  %79 = bitcast %"class.SkSL::ProgramElement"*** %69 to i64*
  store i64 %78, i64* %79, align 8
  br label %137

80:                                               ; preds = %67
  %81 = ptrtoint %"class.SkSL::ProgramElement"** %70 to i64
  %82 = bitcast %"class.SkSL::ProgramElement"*** %69 to i64*
  %83 = bitcast %"class.std::__1::vector.150"* %68 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = sub i64 %81, %84
  %86 = ashr exact i64 %85, 3
  %87 = add nsw i64 %86, 1
  %88 = icmp ugt i64 %87, 2305843009213693951
  br i1 %88, label %89, label %91

89:                                               ; preds = %80
  %90 = bitcast %"class.std::__1::vector.150"* %68 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %90) #16
  unreachable

91:                                               ; preds = %80
  %92 = bitcast %"class.SkSL::ProgramElement"*** %71 to i64*
  %93 = sub i64 %74, %84
  %94 = ashr exact i64 %93, 3
  %95 = icmp ult i64 %94, 1152921504606846975
  br i1 %95, label %96, label %104

96:                                               ; preds = %91
  %97 = ashr exact i64 %93, 2
  %98 = icmp ult i64 %97, %87
  %99 = select i1 %98, i64 %87, i64 %97
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %109, label %101

101:                                              ; preds = %96
  %102 = icmp ugt i64 %99, 2305843009213693951
  br i1 %102, label %103, label %104

103:                                              ; preds = %101
  call void @abort() #16
  unreachable

104:                                              ; preds = %101, %91
  %105 = phi i64 [ %99, %101 ], [ 2305843009213693951, %91 ]
  %106 = shl i64 %105, 3
  %107 = call i8* @_Znwm(i64 %106) #15
  %108 = bitcast i8* %107 to %"class.SkSL::ProgramElement"**
  br label %109

109:                                              ; preds = %104, %96
  %110 = phi i64 [ %105, %104 ], [ 0, %96 ]
  %111 = phi %"class.SkSL::ProgramElement"** [ %108, %104 ], [ null, %96 ]
  %112 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %111, i64 %86
  %113 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %111, i64 %110
  %114 = ptrtoint %"class.SkSL::ProgramElement"** %113 to i64
  %115 = bitcast %"class.SkSL::ProgramElement"** %112 to i64*
  store i64 %65, i64* %115, align 8
  %116 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %112, i64 1
  %117 = ptrtoint %"class.SkSL::ProgramElement"** %116 to i64
  %118 = getelementptr inbounds %"class.std::__1::vector.150", %"class.std::__1::vector.150"* %68, i64 0, i32 0, i32 0
  %119 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %118, align 8
  %120 = load i64, i64* %82, align 8
  %121 = ptrtoint %"class.SkSL::ProgramElement"** %119 to i64
  %122 = sub i64 %120, %121
  %123 = ashr exact i64 %122, 3
  %124 = sub nsw i64 0, %123
  %125 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %112, i64 %124
  %126 = ptrtoint %"class.SkSL::ProgramElement"** %125 to i64
  %127 = icmp sgt i64 %122, 0
  br i1 %127, label %128, label %132

128:                                              ; preds = %109
  %129 = bitcast %"class.SkSL::ProgramElement"** %125 to i8*
  %130 = bitcast %"class.SkSL::ProgramElement"** %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %129, i8* align 8 %130, i64 %122, i1 false) #14
  %131 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %118, align 8
  br label %132

132:                                              ; preds = %128, %109
  %133 = phi %"class.SkSL::ProgramElement"** [ %119, %109 ], [ %131, %128 ]
  store i64 %126, i64* %83, align 8
  store i64 %117, i64* %82, align 8
  store i64 %114, i64* %92, align 8
  %134 = icmp eq %"class.SkSL::ProgramElement"** %133, null
  br i1 %134, label %137, label %135

135:                                              ; preds = %132
  %136 = bitcast %"class.SkSL::ProgramElement"** %133 to i8*
  call void @_ZdlPv(i8* %136) #15
  br label %137

137:                                              ; preds = %52, %135, %132, %75, %56, %61
  %138 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %139 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %138, i64 0, i32 1, i32 0
  %140 = load i8, i8* %139, align 1
  %141 = icmp slt i8 %140, 0
  br i1 %141, label %142, label %145

142:                                              ; preds = %137
  %143 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = load i8*, i8** %143, align 8
  call void @_ZdlPv(i8* %144) #15
  br label %145

145:                                              ; preds = %137, %142
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #14
  br label %146

146:                                              ; preds = %7, %145, %2
  %147 = getelementptr inbounds %class.BuiltinVariableScanner, %class.BuiltinVariableScanner* %0, i64 0, i32 0, i32 0
  %148 = call zeroext i1 @_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEE15visitExpressionERKNS_10ExpressionE(%"class.SkSL::TProgramVisitor.368"* %147, %"class.SkSL::Expression"* dereferenceable(24) %1) #14
  ret i1 %148
}

declare zeroext i1 @_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEE14visitStatementERKNS_9StatementE(%"class.SkSL::TProgramVisitor.368"*, %"class.SkSL::Statement"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4SkSL14ProgramVisitor18visitExpressionPtrERKNSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEE(%"class.SkSL::ProgramVisitor"*, %"class.std::__1::unique_ptr.157"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::ProgramVisitor", %"class.SkSL::ProgramVisitor"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %4, align 8
  %6 = bitcast %"class.SkSL::ProgramVisitor"* %0 to i1 (%"class.SkSL::TProgramVisitor.368"*, %"class.SkSL::Expression"*)***
  %7 = load i1 (%"class.SkSL::TProgramVisitor.368"*, %"class.SkSL::Expression"*)**, i1 (%"class.SkSL::TProgramVisitor.368"*, %"class.SkSL::Expression"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.SkSL::TProgramVisitor.368"*, %"class.SkSL::Expression"*)*, i1 (%"class.SkSL::TProgramVisitor.368"*, %"class.SkSL::Expression"*)** %7, i64 2
  %9 = load i1 (%"class.SkSL::TProgramVisitor.368"*, %"class.SkSL::Expression"*)*, i1 (%"class.SkSL::TProgramVisitor.368"*, %"class.SkSL::Expression"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.SkSL::TProgramVisitor.368"* %3, %"class.SkSL::Expression"* dereferenceable(24) %5) #14
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4SkSL14ProgramVisitor17visitStatementPtrERKNSt3__110unique_ptrINS_9StatementENS1_14default_deleteIS3_EEEE(%"class.SkSL::ProgramVisitor"*, %"class.std::__1::unique_ptr.190"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::ProgramVisitor", %"class.SkSL::ProgramVisitor"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %4, align 8
  %6 = bitcast %"class.SkSL::ProgramVisitor"* %0 to i1 (%"class.SkSL::TProgramVisitor.368"*, %"class.SkSL::Statement"*)***
  %7 = load i1 (%"class.SkSL::TProgramVisitor.368"*, %"class.SkSL::Statement"*)**, i1 (%"class.SkSL::TProgramVisitor.368"*, %"class.SkSL::Statement"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.SkSL::TProgramVisitor.368"*, %"class.SkSL::Statement"*)*, i1 (%"class.SkSL::TProgramVisitor.368"*, %"class.SkSL::Statement"*)** %7, i64 3
  %9 = load i1 (%"class.SkSL::TProgramVisitor.368"*, %"class.SkSL::Statement"*)*, i1 (%"class.SkSL::TProgramVisitor.368"*, %"class.SkSL::Statement"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.SkSL::TProgramVisitor.368"* %3, %"class.SkSL::Statement"* dereferenceable(16) %5) #14
  ret i1 %10
}

declare zeroext i1 @_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEE15visitExpressionERKNS_10ExpressionE(%"class.SkSL::TProgramVisitor.368"*, %"class.SkSL::Expression"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZZN4SkSL11IRGenerator6finishEvEN22FindIllegalExpressionsD0Ev(%class.FindIllegalExpressions*) unnamed_addr #4 align 2 {
  %2 = bitcast %class.FindIllegalExpressions* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZZN4SkSL11IRGenerator6finishEvEN22FindIllegalExpressions15visitExpressionERKNS_10ExpressionE(%class.FindIllegalExpressions*, %"class.SkSL::Expression"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.FindIllegalExpressions, %class.FindIllegalExpressions* %0, i64 0, i32 1
  %4 = load %"class.SkSL::IRGenerator"*, %"class.SkSL::IRGenerator"** %3, align 8
  tail call void @_ZN4SkSL11IRGenerator10checkValidERKNS_10ExpressionE(%"class.SkSL::IRGenerator"* %4, %"class.SkSL::Expression"* dereferenceable(24) %1)
  %5 = getelementptr inbounds %class.FindIllegalExpressions, %class.FindIllegalExpressions* %0, i64 0, i32 0, i32 0
  %6 = tail call zeroext i1 @_ZN4SkSL15TProgramVisitorINS_19ProgramVisitorTypesEE15visitExpressionERKNS_10ExpressionE(%"class.SkSL::TProgramVisitor.368"* %5, %"class.SkSL::Expression"* dereferenceable(24) %1) #14
  ret i1 %6
}

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #3

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %class.SkTArray* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray*, %class.SkTArray* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %class.SkTArray* %0, %1
  br i1 %3, label %76, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %59

11:                                               ; preds = %70, %4
  %12 = phi i64 [ %6, %4 ], [ %72, %70 ]
  %13 = and i64 %12, -4294967295
  store i64 %13, i64* %5, align 8
  %14 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %1, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %15, 1
  %17 = trunc i64 %16 to i32
  %18 = and i32 %17, 2147483647
  tail call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray* %0, i32 %18, i32 0)
  %19 = load i64, i64* %14, align 8
  %20 = and i64 %19, 4294967294
  %21 = load i64, i64* %5, align 8
  %22 = and i64 %21, -4294967295
  %23 = or i64 %22, %20
  store i64 %23, i64* %5, align 8
  %24 = bitcast %class.SkTArray* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = load i64, i64* %14, align 8
  %27 = and i64 %26, 4294967294
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %56, label %29

29:                                               ; preds = %11
  %30 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %1, i64 0, i32 0
  br label %31

31:                                               ; preds = %50, %29
  %32 = phi i64 [ 0, %29 ], [ %51, %50 ]
  %33 = shl nuw nsw i64 %32, 3
  %34 = getelementptr inbounds i8, i8* %25, i64 %33
  %35 = load %"class.std::__1::unique_ptr.190"*, %"class.std::__1::unique_ptr.190"** %30, align 8
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %35, i64 %32
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = bitcast %"class.std::__1::unique_ptr.190"* %36 to i64*
  %39 = load i64, i64* %38, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %37, align 8
  %40 = bitcast i8* %34 to i64*
  store i64 %39, i64* %40, align 8
  %41 = load %"class.std::__1::unique_ptr.190"*, %"class.std::__1::unique_ptr.190"** %30, align 8
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %41, i64 %32, i32 0, i32 0, i32 0
  %43 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %42, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %42, align 8
  %44 = icmp eq %"class.SkSL::Statement"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %31
  %46 = bitcast %"class.SkSL::Statement"* %43 to void (%"class.SkSL::Statement"*)***
  %47 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %47, i64 1
  %49 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %48, align 8
  tail call void %49(%"class.SkSL::Statement"* nonnull %43) #14
  br label %50

50:                                               ; preds = %45, %31
  %51 = add nuw nsw i64 %32, 1
  %52 = load i64, i64* %14, align 8
  %53 = lshr i64 %52, 1
  %54 = and i64 %53, 2147483647
  %55 = icmp ult i64 %51, %54
  br i1 %55, label %31, label %56

56:                                               ; preds = %50, %11
  %57 = phi i64 [ %26, %11 ], [ %52, %50 ]
  %58 = and i64 %57, -4294967295
  store i64 %58, i64* %14, align 8
  br label %76

59:                                               ; preds = %9, %70
  %60 = phi i64 [ 0, %9 ], [ %71, %70 ]
  %61 = load %"class.std::__1::unique_ptr.190"*, %"class.std::__1::unique_ptr.190"** %10, align 8
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %61, i64 %60, i32 0, i32 0, i32 0
  %63 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %62, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %62, align 8
  %64 = icmp eq %"class.SkSL::Statement"* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %59
  %66 = bitcast %"class.SkSL::Statement"* %63 to void (%"class.SkSL::Statement"*)***
  %67 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %67, i64 1
  %69 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %68, align 8
  tail call void %69(%"class.SkSL::Statement"* nonnull %63) #14
  br label %70

70:                                               ; preds = %59, %65
  %71 = add nuw nsw i64 %60, 1
  %72 = load i64, i64* %5, align 8
  %73 = lshr i64 %72, 1
  %74 = and i64 %73, 2147483647
  %75 = icmp ult i64 %71, %74
  br i1 %75, label %59, label %11

76:                                               ; preds = %2, %56
  ret %class.SkTArray* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %87

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %87, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #14
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %75, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %69, %48
  %51 = phi i64 [ 0, %48 ], [ %70, %69 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %"class.std::__1::unique_ptr.190"*, %"class.std::__1::unique_ptr.190"** %49, align 8
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %54, i64 %51
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = bitcast %"class.std::__1::unique_ptr.190"* %55 to i64*
  %58 = load i64, i64* %57, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %56, align 8
  %59 = bitcast i8* %53 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %"class.std::__1::unique_ptr.190"*, %"class.std::__1::unique_ptr.190"** %49, align 8
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %60, i64 %51, i32 0, i32 0, i32 0
  %62 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %61, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %61, align 8
  %63 = icmp eq %"class.SkSL::Statement"* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %50
  %65 = bitcast %"class.SkSL::Statement"* %62 to void (%"class.SkSL::Statement"*)***
  %66 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %66, i64 1
  %68 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %67, align 8
  tail call void %68(%"class.SkSL::Statement"* nonnull %62) #14
  br label %69

69:                                               ; preds = %64, %50
  %70 = add nuw nsw i64 %51, 1
  %71 = load i64, i64* %4, align 8
  %72 = lshr i64 %71, 1
  %73 = and i64 %72, 2147483647
  %74 = icmp ult i64 %70, %73
  br i1 %74, label %50, label %75

75:                                               ; preds = %69, %35
  %76 = phi i64 [ %45, %35 ], [ %71, %69 ]
  %77 = and i64 %76, 1
  %78 = icmp eq i64 %77, 0
  %79 = bitcast %class.SkTArray* %0 to i8**
  br i1 %78, label %83, label %80

80:                                               ; preds = %75
  %81 = load i8*, i8** %79, align 8
  tail call void @_Z7sk_freePv(i8* %81) #14
  %82 = load i64, i64* %4, align 8
  br label %83

83:                                               ; preds = %75, %80
  %84 = phi i64 [ %82, %80 ], [ %76, %75 ]
  store i8* %44, i8** %79, align 8
  %85 = and i64 %84, -4294967298
  %86 = or i64 %85, 1
  store i64 %86, i64* %4, align 8
  br label %87

87:                                               ; preds = %83, %32, %21
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL20GlobalVarDeclarationD2Ev(%"class.SkSL::GlobalVarDeclaration"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::GlobalVarDeclaration", %"class.SkSL::GlobalVarDeclaration"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL20GlobalVarDeclarationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::GlobalVarDeclaration", %"class.SkSL::GlobalVarDeclaration"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %3, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %3, align 8
  %5 = icmp eq %"class.SkSL::Statement"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.SkSL::Statement"* %4 to void (%"class.SkSL::Statement"*)***
  %8 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %8, i64 1
  %10 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %9, align 8
  tail call void %10(%"class.SkSL::Statement"* nonnull %4) #14
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL20GlobalVarDeclarationD0Ev(%"class.SkSL::GlobalVarDeclaration"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::GlobalVarDeclaration", %"class.SkSL::GlobalVarDeclaration"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL20GlobalVarDeclarationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::GlobalVarDeclaration", %"class.SkSL::GlobalVarDeclaration"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %3, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %3, align 8
  %5 = icmp eq %"class.SkSL::Statement"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.SkSL::Statement"* %4 to void (%"class.SkSL::Statement"*)***
  %8 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %8, i64 1
  %10 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %9, align 8
  tail call void %10(%"class.SkSL::Statement"* nonnull %4) #14
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.SkSL::GlobalVarDeclaration"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %12) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL20GlobalVarDeclaration11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::GlobalVarDeclaration"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::GlobalVarDeclaration", %"class.SkSL::GlobalVarDeclaration"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %3, align 8
  %5 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %4, i64 0, i32 0
  %6 = bitcast %"class.SkSL::Statement"* %4 to void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)***
  %7 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)**, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %7, i64 2
  %9 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %8, align 8
  tail call void %9(%"class.SkSL::String"* sret %0, %"class.SkSL::IRNode"* %5) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::ProgramElement"* @_ZNK4SkSL20GlobalVarDeclaration5cloneEv(%"class.SkSL::GlobalVarDeclaration"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::GlobalVarDeclaration", %"class.SkSL::GlobalVarDeclaration"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %2, align 8
  %4 = bitcast %"class.SkSL::Statement"* %3 to %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)***
  %5 = load %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)**, %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)*, %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)** %5, i64 4
  %7 = load %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)*, %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)** %6, align 8
  %8 = tail call %"class.SkSL::Statement"* %7(%"class.SkSL::Statement"* %3) #14
  %9 = ptrtoint %"class.SkSL::Statement"* %8 to i64
  %10 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 24) #14
  %11 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %8, i64 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds i8, i8* %10, i64 8
  %14 = bitcast i8* %13 to i32*
  store i32 %12, i32* %14, align 8
  %15 = getelementptr inbounds i8, i8* %10, i64 12
  %16 = bitcast i8* %15 to i32*
  store i32 4, i32* %16, align 4
  %17 = bitcast i8* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL20GlobalVarDeclarationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds i8, i8* %10, i64 16
  %19 = bitcast i8* %18 to i64*
  store i64 %9, i64* %19, align 8
  %20 = bitcast i8* %10 to %"class.SkSL::ProgramElement"*
  ret %"class.SkSL::ProgramElement"* %20
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL20ModifiersDeclarationD0Ev(%"class.SkSL::ModifiersDeclaration"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.SkSL::ModifiersDeclaration"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL20ModifiersDeclaration11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::ModifiersDeclaration"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #14
  %5 = getelementptr inbounds %"class.SkSL::ModifiersDeclaration", %"class.SkSL::ModifiersDeclaration"* %1, i64 0, i32 1
  %6 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %5, align 8
  call void @_ZNK4SkSL9Modifiers11descriptionEv(%"class.SkSL::String"* nonnull sret %3, %"struct.SkSL::Modifiers"* %6)
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* sret %0, %"class.SkSL::String"* nonnull %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.145, i64 0, i64 0)) #14
  %7 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %13) #15
  br label %14

14:                                               ; preds = %2, %11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::ProgramElement"* @_ZNK4SkSL20ModifiersDeclaration5cloneEv(%"class.SkSL::ModifiersDeclaration"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::ModifiersDeclaration", %"class.SkSL::ModifiersDeclaration"* %0, i64 0, i32 1
  %3 = bitcast %"struct.SkSL::Modifiers"** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 24) #14
  %6 = getelementptr inbounds i8, i8* %5, i64 8
  %7 = bitcast i8* %6 to i32*
  store i32 -1, i32* %7, align 8
  %8 = getelementptr inbounds i8, i8* %5, i64 12
  %9 = bitcast i8* %8 to i32*
  store i32 6, i32* %9, align 4
  %10 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL20ModifiersDeclarationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 16
  %12 = bitcast i8* %11 to i64*
  store i64 %4, i64* %12, align 8
  %13 = bitcast i8* %5 to %"class.SkSL::ProgramElement"*
  ret %"class.SkSL::ProgramElement"* %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL9Modifiers11descriptionEv(%"class.SkSL::String"* noalias sret, %"struct.SkSL::Modifiers"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %1, i64 0, i32 0
  %4 = bitcast %"class.SkSL::String"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 -86, i64 24, i1 false)
  tail call void @_ZNK4SkSL6Layout11descriptionEv(%"class.SkSL::String"* sret %0, %"struct.SkSL::Layout"* %3)
  %5 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.160, i64 0, i64 0)) #14
  %11 = load i32, i32* %5, align 8
  br label %12

12:                                               ; preds = %2, %9
  %13 = phi i32 [ %6, %2 ], [ %11, %9 ]
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %12
  %17 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.161, i64 0, i64 0)) #14
  %18 = load i32, i32* %5, align 8
  br label %19

19:                                               ; preds = %12, %16
  %20 = phi i32 [ %13, %12 ], [ %18, %16 ]
  %21 = and i32 %20, 16
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %19
  %24 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.162, i64 0, i64 0)) #14
  %25 = load i32, i32* %5, align 8
  br label %26

26:                                               ; preds = %19, %23
  %27 = phi i32 [ %20, %19 ], [ %25, %23 ]
  %28 = and i32 %27, 32
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %26
  %31 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.163, i64 0, i64 0)) #14
  %32 = load i32, i32* %5, align 8
  br label %33

33:                                               ; preds = %26, %30
  %34 = phi i32 [ %27, %26 ], [ %32, %30 ]
  %35 = and i32 %34, 64
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %33
  %38 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.164, i64 0, i64 0)) #14
  %39 = load i32, i32* %5, align 8
  br label %40

40:                                               ; preds = %33, %37
  %41 = phi i32 [ %34, %33 ], [ %39, %37 ]
  %42 = and i32 %41, 512
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %40
  %45 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.165, i64 0, i64 0)) #14
  %46 = load i32, i32* %5, align 8
  br label %47

47:                                               ; preds = %40, %44
  %48 = phi i32 [ %41, %40 ], [ %46, %44 ]
  %49 = and i32 %48, 6
  %50 = icmp eq i32 %49, 6
  br i1 %50, label %57, label %51

51:                                               ; preds = %47
  %52 = and i32 %48, 2
  %53 = icmp eq i32 %52, 0
  %54 = and i32 %48, 6
  %55 = icmp eq i32 %54, 0
  %56 = select i1 %53, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.168, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.167, i64 0, i64 0)
  br i1 %55, label %60, label %57

57:                                               ; preds = %51, %47
  %58 = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.166, i64 0, i64 0), %47 ], [ %56, %51 ]
  %59 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* %58) #14
  br label %60

60:                                               ; preds = %51, %57
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %class.SkTArray.217* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray.217*, %class.SkTArray.217* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %class.SkTArray.217* %0, %1
  br i1 %3, label %76, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.SkTArray.217, %class.SkTArray.217* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %class.SkTArray.217, %class.SkTArray.217* %0, i64 0, i32 0
  br label %59

11:                                               ; preds = %70, %4
  %12 = phi i64 [ %6, %4 ], [ %72, %70 ]
  %13 = and i64 %12, -4294967295
  store i64 %13, i64* %5, align 8
  %14 = getelementptr inbounds %class.SkTArray.217, %class.SkTArray.217* %1, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %15, 1
  %17 = trunc i64 %16 to i32
  %18 = and i32 %17, 2147483647
  tail call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.217* %0, i32 %18, i32 0)
  %19 = load i64, i64* %14, align 8
  %20 = and i64 %19, 4294967294
  %21 = load i64, i64* %5, align 8
  %22 = and i64 %21, -4294967295
  %23 = or i64 %22, %20
  store i64 %23, i64* %5, align 8
  %24 = bitcast %class.SkTArray.217* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = load i64, i64* %14, align 8
  %27 = and i64 %26, 4294967294
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %56, label %29

29:                                               ; preds = %11
  %30 = getelementptr inbounds %class.SkTArray.217, %class.SkTArray.217* %1, i64 0, i32 0
  br label %31

31:                                               ; preds = %50, %29
  %32 = phi i64 [ 0, %29 ], [ %51, %50 ]
  %33 = shl nuw nsw i64 %32, 3
  %34 = getelementptr inbounds i8, i8* %25, i64 %33
  %35 = load %"class.std::__1::unique_ptr.157"*, %"class.std::__1::unique_ptr.157"** %30, align 8
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157"* %35, i64 %32
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = bitcast %"class.std::__1::unique_ptr.157"* %36 to i64*
  %39 = load i64, i64* %38, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %37, align 8
  %40 = bitcast i8* %34 to i64*
  store i64 %39, i64* %40, align 8
  %41 = load %"class.std::__1::unique_ptr.157"*, %"class.std::__1::unique_ptr.157"** %30, align 8
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157"* %41, i64 %32, i32 0, i32 0, i32 0
  %43 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %42, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %42, align 8
  %44 = icmp eq %"class.SkSL::Expression"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %31
  %46 = bitcast %"class.SkSL::Expression"* %43 to void (%"class.SkSL::Expression"*)***
  %47 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %47, i64 1
  %49 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %48, align 8
  tail call void %49(%"class.SkSL::Expression"* nonnull %43) #14
  br label %50

50:                                               ; preds = %45, %31
  %51 = add nuw nsw i64 %32, 1
  %52 = load i64, i64* %14, align 8
  %53 = lshr i64 %52, 1
  %54 = and i64 %53, 2147483647
  %55 = icmp ult i64 %51, %54
  br i1 %55, label %31, label %56

56:                                               ; preds = %50, %11
  %57 = phi i64 [ %26, %11 ], [ %52, %50 ]
  %58 = and i64 %57, -4294967295
  store i64 %58, i64* %14, align 8
  br label %76

59:                                               ; preds = %9, %70
  %60 = phi i64 [ 0, %9 ], [ %71, %70 ]
  %61 = load %"class.std::__1::unique_ptr.157"*, %"class.std::__1::unique_ptr.157"** %10, align 8
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157"* %61, i64 %60, i32 0, i32 0, i32 0
  %63 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %62, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %62, align 8
  %64 = icmp eq %"class.SkSL::Expression"* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %59
  %66 = bitcast %"class.SkSL::Expression"* %63 to void (%"class.SkSL::Expression"*)***
  %67 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %67, i64 1
  %69 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %68, align 8
  tail call void %69(%"class.SkSL::Expression"* nonnull %63) #14
  br label %70

70:                                               ; preds = %59, %65
  %71 = add nuw nsw i64 %60, 1
  %72 = load i64, i64* %5, align 8
  %73 = lshr i64 %72, 1
  %74 = and i64 %73, 2147483647
  %75 = icmp ult i64 %71, %74
  br i1 %75, label %59, label %11

76:                                               ; preds = %2, %56
  ret %class.SkTArray.217* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.217*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.217, %class.SkTArray.217* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %87

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %87, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #14
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %75, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.217, %class.SkTArray.217* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %69, %48
  %51 = phi i64 [ 0, %48 ], [ %70, %69 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %"class.std::__1::unique_ptr.157"*, %"class.std::__1::unique_ptr.157"** %49, align 8
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157"* %54, i64 %51
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = bitcast %"class.std::__1::unique_ptr.157"* %55 to i64*
  %58 = load i64, i64* %57, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %56, align 8
  %59 = bitcast i8* %53 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %"class.std::__1::unique_ptr.157"*, %"class.std::__1::unique_ptr.157"** %49, align 8
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157"* %60, i64 %51, i32 0, i32 0, i32 0
  %62 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %61, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %61, align 8
  %63 = icmp eq %"class.SkSL::Expression"* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %50
  %65 = bitcast %"class.SkSL::Expression"* %62 to void (%"class.SkSL::Expression"*)***
  %66 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %66, i64 1
  %68 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %67, align 8
  tail call void %68(%"class.SkSL::Expression"* nonnull %62) #14
  br label %69

69:                                               ; preds = %64, %50
  %70 = add nuw nsw i64 %51, 1
  %71 = load i64, i64* %4, align 8
  %72 = lshr i64 %71, 1
  %73 = and i64 %72, 2147483647
  %74 = icmp ult i64 %70, %73
  br i1 %74, label %50, label %75

75:                                               ; preds = %69, %35
  %76 = phi i64 [ %45, %35 ], [ %71, %69 ]
  %77 = and i64 %76, 1
  %78 = icmp eq i64 %77, 0
  %79 = bitcast %class.SkTArray.217* %0 to i8**
  br i1 %78, label %83, label %80

80:                                               ; preds = %75
  %81 = load i8*, i8** %79, align 8
  tail call void @_Z7sk_freePv(i8* %81) #14
  %82 = load i64, i64* %4, align 8
  br label %83

83:                                               ; preds = %75, %80
  %84 = phi i64 [ %82, %80 ], [ %76, %75 ]
  store i8* %44, i8** %79, align 8
  %85 = and i64 %84, -4294967298
  %86 = or i64 %85, 1
  store i64 %86, i64* %4, align 8
  br label %87

87:                                               ; preds = %83, %32, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIaLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.364*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.364, %class.SkTArray.364* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %74

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %74, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 1) #14
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %61, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.364, %class.SkTArray.364* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %56, %50 ]
  %52 = getelementptr inbounds i8, i8* %44, i64 %51
  %53 = load i8*, i8** %49, align 8
  %54 = getelementptr inbounds i8, i8* %53, i64 %51
  %55 = load i8, i8* %54, align 1
  store i8 %55, i8* %52, align 1
  %56 = add nuw nsw i64 %51, 1
  %57 = load i64, i64* %4, align 8
  %58 = lshr i64 %57, 1
  %59 = and i64 %58, 2147483647
  %60 = icmp ult i64 %56, %59
  br i1 %60, label %50, label %61

61:                                               ; preds = %50, %35
  %62 = phi i64 [ %45, %35 ], [ %57, %50 ]
  %63 = and i64 %62, 1
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %69, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %class.SkTArray.364, %class.SkTArray.364* %0, i64 0, i32 0
  %67 = load i8*, i8** %66, align 8
  tail call void @_Z7sk_freePv(i8* %67) #14
  %68 = load i64, i64* %4, align 8
  br label %69

69:                                               ; preds = %61, %65
  %70 = phi i64 [ %62, %61 ], [ %68, %65 ]
  %71 = getelementptr inbounds %class.SkTArray.364, %class.SkTArray.364* %0, i64 0, i32 0
  store i8* %44, i8** %71, align 8
  %72 = and i64 %70, -4294967298
  %73 = or i64 %72, 1
  store i64 %73, i64* %4, align 8
  br label %74

74:                                               ; preds = %69, %32, %21
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL16StructDefinitionD0Ev(%"class.SkSL::StructDefinition"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.SkSL::StructDefinition"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL16StructDefinition11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::StructDefinition"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast i64* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 -86, i64 16, i1 false)
  store i8 7, i8* %6, align 1
  %9 = bitcast %"class.SkSL::String"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.169, i64 0, i64 0), i64 7, i1 false) #14
  %10 = getelementptr inbounds i8, i8* %9, i64 7
  store i8 0, i8* %10, align 1
  %11 = getelementptr inbounds %"class.SkSL::StructDefinition", %"class.SkSL::StructDefinition"* %1, i64 0, i32 1
  %12 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %11, align 8
  %13 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %12, i64 0, i32 0, i32 1, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %12, i64 0, i32 0, i32 1, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLENS_14StringFragmentE(%"class.SkSL::String"* %0, i8* %14, i64 %16) #14
  %18 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.170, i64 0, i64 0)) #14
  %19 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %11, align 8
  %20 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %19, i64 0, i32 10, i32 0, i32 0
  %21 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %20, align 8
  %22 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %19, i64 0, i32 10, i32 0, i32 1
  %23 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %22, align 8
  %24 = icmp eq %"struct.SkSL::Type::Field"* %21, %23
  br i1 %24, label %36, label %25

25:                                               ; preds = %2
  %26 = bitcast %"class.SkSL::String"* %3 to i8*
  %27 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = bitcast %"class.SkSL::String"* %4 to i8*
  %31 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %33 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  br label %38

36:                                               ; preds = %80, %2
  %37 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.173, i64 0, i64 0)) #14
  ret void

38:                                               ; preds = %25, %80
  %39 = phi %"struct.SkSL::Type::Field"* [ %21, %25 ], [ %88, %80 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #14
  %40 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %39, i64 0, i32 0
  call void @_ZNK4SkSL9Modifiers11descriptionEv(%"class.SkSL::String"* nonnull sret %3, %"struct.SkSL::Modifiers"* %40)
  %41 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %3) #14
  %42 = load i8, i8* %28, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %38
  %45 = load i8*, i8** %29, align 8
  call void @_ZdlPv(i8* %45) #15
  br label %46

46:                                               ; preds = %38, %44
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #14
  %47 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %39, i64 0, i32 2
  %48 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %47, align 8
  %49 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %48, i64 0, i32 18
  %50 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %49, align 8, !noalias !154
  %51 = icmp eq %"class.SkSL::Type"* %50, null
  %52 = select i1 %51, %"class.SkSL::Type"* %48, %"class.SkSL::Type"* %50
  %53 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %52, i64 0, i32 0, i32 1, i32 0
  %54 = load i8*, i8** %53, align 8, !noalias !154
  %55 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %52, i64 0, i32 0, i32 1, i32 1
  %56 = load i64, i64* %55, align 8, !noalias !154
  %57 = icmp ugt i64 %56, -17
  br i1 %57, label %58, label %60

58:                                               ; preds = %46
  %59 = bitcast %"class.SkSL::String"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %59) #16
  unreachable

60:                                               ; preds = %46
  %61 = icmp ult i64 %56, 23
  br i1 %61, label %67, label %62

62:                                               ; preds = %60
  %63 = add nuw i64 %56, 16
  %64 = and i64 %63, -16
  %65 = call i8* @_Znwm(i64 %64) #15
  store i8* %65, i8** %31, align 8, !alias.scope !154
  %66 = or i64 %64, -9223372036854775808
  store i64 %66, i64* %32, align 8, !alias.scope !154
  store i64 %56, i64* %33, align 8, !alias.scope !154
  br label %70

67:                                               ; preds = %60
  %68 = trunc i64 %56 to i8
  store i8 %68, i8* %35, align 1, !alias.scope !154
  %69 = icmp eq i64 %56, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %67, %62
  %71 = phi i8* [ %65, %62 ], [ %30, %67 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %71, i8* align 1 %54, i64 %56, i1 false) #14
  br label %72

72:                                               ; preds = %67, %70
  %73 = phi i8* [ %30, %67 ], [ %71, %70 ]
  %74 = getelementptr inbounds i8, i8* %73, i64 %56
  store i8 0, i8* %74, align 1
  %75 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %4) #14
  %76 = load i8, i8* %35, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %78, label %80

78:                                               ; preds = %72
  %79 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %79) #15
  br label %80

80:                                               ; preds = %72, %78
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #14
  %81 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.171, i64 0, i64 0)) #14
  %82 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %39, i64 0, i32 1, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %39, i64 0, i32 1, i32 1
  %85 = load i64, i64* %84, align 8
  %86 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLENS_14StringFragmentE(%"class.SkSL::String"* %0, i8* %83, i64 %85) #14
  %87 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.172, i64 0, i64 0)) #14
  %88 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %39, i64 1
  %89 = icmp eq %"struct.SkSL::Type::Field"* %88, %23
  br i1 %89, label %36, label %38
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::ProgramElement"* @_ZNK4SkSL16StructDefinition5cloneEv(%"class.SkSL::StructDefinition"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::StructDefinition", %"class.SkSL::StructDefinition"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.SkSL::StructDefinition", %"class.SkSL::StructDefinition"* %0, i64 0, i32 1
  %4 = bitcast %"class.SkSL::Type"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 24) #14
  %7 = load i32, i32* %2, align 4
  %8 = getelementptr inbounds i8, i8* %6, i64 8
  %9 = bitcast i8* %8 to i32*
  store i32 %7, i32* %9, align 8
  %10 = getelementptr inbounds i8, i8* %6, i64 12
  %11 = bitcast i8* %10 to i32*
  store i32 8, i32* %11, align 4
  %12 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL16StructDefinitionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds i8, i8* %6, i64 16
  %14 = bitcast i8* %13 to i64*
  store i64 %5, i64* %14, align 8
  %15 = bitcast i8* %6 to %"class.SkSL::ProgramElement"*
  ret %"class.SkSL::ProgramElement"* %15
}

declare dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLENS_14StringFragmentE(%"class.SkSL::String"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEED2Ev(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %3) #14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEED0Ev(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %3) #14
  %4 = bitcast %"struct.std::__1::__shared_ptr_emplace"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEE16__on_zero_sharedEv(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 1
  %3 = bitcast %"struct.std::__1::__shared_ptr_emplace<SkSL::SymbolTable, std::__1::allocator<SkSL::SymbolTable> >::_Storage"* %2 to %"class.SkSL::SymbolTable"*
  tail call void @_ZN4SkSL11SymbolTableD2Ev(%"class.SkSL::SymbolTable"* %3) #14
  ret void
}

; Function Attrs: nounwind
declare i8* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info(%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"* dereferenceable(16)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEE21__on_zero_shared_weakEv(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"struct.std::__1::__shared_ptr_emplace"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL11SymbolTableD2Ev(%"class.SkSL::SymbolTable"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3 = load %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"** %2, align 8
  store %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"** %2, align 8
  %4 = icmp eq %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = bitcast %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %3 to i8*
  tail call void @_ZdaPv(i8* %6) #15
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"struct.std::__1::__forward_list_node"*, %"struct.std::__1::__forward_list_node"** %8, align 8
  %10 = icmp eq %"struct.std::__1::__forward_list_node"* %9, null
  br i1 %10, label %26, label %11

11:                                               ; preds = %7, %24
  %12 = phi %"struct.std::__1::__forward_list_node"* [ %15, %24 ], [ %9, %7 ]
  %13 = bitcast %"struct.std::__1::__forward_list_node"* %12 to i8*
  %14 = getelementptr inbounds %"struct.std::__1::__forward_list_node", %"struct.std::__1::__forward_list_node"* %12, i64 0, i32 0, i32 0
  %15 = load %"struct.std::__1::__forward_list_node"*, %"struct.std::__1::__forward_list_node"** %14, align 8
  %16 = getelementptr inbounds %"struct.std::__1::__forward_list_node", %"struct.std::__1::__forward_list_node"* %12, i64 0, i32 1
  %17 = bitcast %"class.SkSL::String"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %11
  %22 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  tail call void @_ZdlPv(i8* %23) #15
  br label %24

24:                                               ; preds = %21, %11
  tail call void @_ZdlPv(i8* %13) #15
  %25 = icmp eq %"struct.std::__1::__forward_list_node"* %15, null
  br i1 %25, label %26, label %11

26:                                               ; preds = %24, %7
  store %"struct.std::__1::__forward_list_node"* null, %"struct.std::__1::__forward_list_node"** %8, align 8
  %27 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 3
  %28 = getelementptr inbounds %"class.std::__1::vector.171", %"class.std::__1::vector.171"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.std::__1::unique_ptr.173"*, %"class.std::__1::unique_ptr.173"** %28, align 8
  %30 = icmp eq %"class.std::__1::unique_ptr.173"* %29, null
  br i1 %30, label %54, label %31

31:                                               ; preds = %26
  %32 = bitcast %"class.std::__1::unique_ptr.173"* %29 to i8*
  %33 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 3, i32 0, i32 1
  %34 = load %"class.std::__1::unique_ptr.173"*, %"class.std::__1::unique_ptr.173"** %33, align 8
  %35 = icmp eq %"class.std::__1::unique_ptr.173"* %34, %29
  br i1 %35, label %52, label %36

36:                                               ; preds = %31, %47
  %37 = phi %"class.std::__1::unique_ptr.173"* [ %38, %47 ], [ %34, %31 ]
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.173"* %37, i64 -1
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.173"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.SkSL::IRNode"*, %"class.SkSL::IRNode"** %39, align 8
  store %"class.SkSL::IRNode"* null, %"class.SkSL::IRNode"** %39, align 8
  %41 = icmp eq %"class.SkSL::IRNode"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %36
  %43 = bitcast %"class.SkSL::IRNode"* %40 to void (%"class.SkSL::IRNode"*)***
  %44 = load void (%"class.SkSL::IRNode"*)**, void (%"class.SkSL::IRNode"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.SkSL::IRNode"*)*, void (%"class.SkSL::IRNode"*)** %44, i64 1
  %46 = load void (%"class.SkSL::IRNode"*)*, void (%"class.SkSL::IRNode"*)** %45, align 8
  tail call void %46(%"class.SkSL::IRNode"* nonnull %40) #14
  br label %47

47:                                               ; preds = %42, %36
  %48 = icmp eq %"class.std::__1::unique_ptr.173"* %38, %29
  br i1 %48, label %49, label %36

49:                                               ; preds = %47
  %50 = bitcast %"class.std::__1::vector.171"* %27 to i8**
  %51 = load i8*, i8** %50, align 8
  br label %52

52:                                               ; preds = %49, %31
  %53 = phi i8* [ %51, %49 ], [ %32, %31 ]
  store %"class.std::__1::unique_ptr.173"* %29, %"class.std::__1::unique_ptr.173"** %33, align 8
  tail call void @_ZdlPv(i8* %53) #15
  br label %54

54:                                               ; preds = %26, %52
  %55 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 1
  %56 = getelementptr inbounds %"class.std::__1::vector.163", %"class.std::__1::vector.163"* %55, i64 0, i32 0, i32 0
  %57 = load %"class.std::__1::unique_ptr.165"*, %"class.std::__1::unique_ptr.165"** %56, align 8
  %58 = icmp eq %"class.std::__1::unique_ptr.165"* %57, null
  br i1 %58, label %82, label %59

59:                                               ; preds = %54
  %60 = bitcast %"class.std::__1::unique_ptr.165"* %57 to i8*
  %61 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 1, i32 0, i32 1
  %62 = load %"class.std::__1::unique_ptr.165"*, %"class.std::__1::unique_ptr.165"** %61, align 8
  %63 = icmp eq %"class.std::__1::unique_ptr.165"* %62, %57
  br i1 %63, label %80, label %64

64:                                               ; preds = %59, %75
  %65 = phi %"class.std::__1::unique_ptr.165"* [ %66, %75 ], [ %62, %59 ]
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %65, i64 -1
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %66, i64 0, i32 0, i32 0, i32 0
  %68 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %67, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %67, align 8
  %69 = icmp eq %"class.SkSL::Symbol"* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %64
  %71 = bitcast %"class.SkSL::Symbol"* %68 to void (%"class.SkSL::Symbol"*)***
  %72 = load void (%"class.SkSL::Symbol"*)**, void (%"class.SkSL::Symbol"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %72, i64 1
  %74 = load void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %73, align 8
  tail call void %74(%"class.SkSL::Symbol"* nonnull %68) #14
  br label %75

75:                                               ; preds = %70, %64
  %76 = icmp eq %"class.std::__1::unique_ptr.165"* %66, %57
  br i1 %76, label %77, label %64

77:                                               ; preds = %75
  %78 = bitcast %"class.std::__1::vector.163"* %55 to i8**
  %79 = load i8*, i8** %78, align 8
  br label %80

80:                                               ; preds = %77, %59
  %81 = phi i8* [ %79, %77 ], [ %60, %59 ]
  store %"class.std::__1::unique_ptr.165"* %57, %"class.std::__1::unique_ptr.165"** %61, align 8
  tail call void @_ZdlPv(i8* %81) #15
  br label %82

82:                                               ; preds = %54, %80
  %83 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 0, i32 1
  %84 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %83, align 8
  %85 = icmp eq %"class.std::__1::__shared_weak_count"* %84, null
  br i1 %85, label %96, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %84, i64 0, i32 0, i32 1
  %88 = atomicrmw add i64* %87, i64 -1 acq_rel
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %96

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %84, i64 0, i32 0
  %92 = bitcast %"class.std::__1::__shared_weak_count"* %84 to void (%"class.std::__1::__shared_count"*)***
  %93 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %93, i64 2
  %95 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %94, align 8
  tail call void %95(%"class.std::__1::__shared_count"* %91) #14
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %84) #14
  br label %96

96:                                               ; preds = %82, %86, %90
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #9

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL9ExtensionD2Ev(%"class.SkSL::Extension"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Extension", %"class.SkSL::Extension"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL9ExtensionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::Extension", %"class.SkSL::Extension"* %0, i64 0, i32 1, i32 0
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #15
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL9ExtensionD0Ev(%"class.SkSL::Extension"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Extension", %"class.SkSL::Extension"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL9ExtensionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::Extension", %"class.SkSL::Extension"* %0, i64 0, i32 1, i32 0
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #15
  br label %11

11:                                               ; preds = %1, %8
  %12 = bitcast %"class.SkSL::Extension"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %12) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL9Extension11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::Extension"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #14
  %5 = getelementptr inbounds %"class.SkSL::Extension", %"class.SkSL::Extension"* %1, i64 0, i32 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.174, i64 0, i64 0), %"class.SkSL::String"* dereferenceable(24) %5) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* sret %0, %"class.SkSL::String"* nonnull %3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.175, i64 0, i64 0)) #14
  %6 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  call void @_ZdlPv(i8* %12) #15
  br label %13

13:                                               ; preds = %2, %10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::ProgramElement"* @_ZNK4SkSL9Extension5cloneEv(%"class.SkSL::Extension"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.SkSL::String", align 8
  %3 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 40) #14
  %4 = getelementptr inbounds %"class.SkSL::Extension", %"class.SkSL::Extension"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::Extension", %"class.SkSL::Extension"* %0, i64 0, i32 1
  %7 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %1
  %12 = bitcast %"class.SkSL::String"* %2 to i8*
  %13 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 %13, i64 24, i1 false) #14
  br label %21

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0
  %16 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %"class.SkSL::Extension", %"class.SkSL::Extension"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %15, i8* %17, i64 %19) #14
  %20 = bitcast %"class.SkSL::String"* %2 to i8*
  br label %21

21:                                               ; preds = %14, %11
  %22 = phi i8* [ %12, %11 ], [ %20, %14 ]
  %23 = getelementptr inbounds i8, i8* %3, i64 8
  %24 = bitcast i8* %23 to i32*
  store i32 %5, i32* %24, align 8
  %25 = getelementptr inbounds i8, i8* %3, i64 12
  %26 = bitcast i8* %25 to i32*
  store i32 1, i32* %26, align 4
  %27 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL9ExtensionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %28 = getelementptr inbounds i8, i8* %3, i64 16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* nonnull align 8 %22, i64 24, i1 false) #14
  %29 = bitcast i8* %3 to %"class.SkSL::ProgramElement"*
  ret %"class.SkSL::ProgramElement"* %29
}

declare void @_ZN4SkSL19FunctionDeclarationC1EiPKNS_9ModifiersENS_14StringFragmentENSt3__16vectorIPKNS_8VariableENS5_9allocatorIS9_EEEEPKNS_4TypeEb(%"class.SkSL::FunctionDeclaration"*, i32, %"struct.SkSL::Modifiers"*, i8*, i64, %"class.std::__1::vector.208"*, %"class.SkSL::Type"*, i1 zeroext) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIKN4SkSL6SymbolENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.163"*, %"class.std::__1::unique_ptr.165"* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.163", %"class.std::__1::vector.163"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.165"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.163"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.163"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.163", %"class.std::__1::vector.163"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.165"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #16
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #15
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.165"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.165"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.165"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.165"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.165"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.165"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.163", %"class.std::__1::vector.163"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.165"*, %"class.std::__1::unique_ptr.165"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.165"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.165"*, %"class.std::__1::unique_ptr.165"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.165"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.SkSL::Symbol"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.165"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.165"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.165"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.165"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !159

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.165"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.165"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.165"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.165"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.165"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.165"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.165"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.165"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.165"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.165"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.165"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.165"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.165"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.165"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.165"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.165"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.165"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.165"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.165"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.165"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.165"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.165"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.165"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.165"*, %"class.std::__1::unique_ptr.165"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.165"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.165"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.165"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.165"*
  %138 = icmp eq %"class.std::__1::unique_ptr.165"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.165"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %142, align 8
  store %"class.SkSL::Symbol"* null, %"class.SkSL::Symbol"** %142, align 8
  %144 = icmp eq %"class.SkSL::Symbol"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.SkSL::Symbol"* %143 to void (%"class.SkSL::Symbol"*)***
  %147 = load void (%"class.SkSL::Symbol"*)**, void (%"class.SkSL::Symbol"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %147, i64 1
  %149 = load void (%"class.SkSL::Symbol"*)*, void (%"class.SkSL::Symbol"*)** %148, align 8
  tail call void %149(%"class.SkSL::Symbol"* nonnull %143) #14
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.165"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #15
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL18FunctionDefinitionD2Ev(%"class.SkSL::FunctionDefinition"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL18FunctionDefinitionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.91"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1, %6
  %7 = phi %"struct.std::__1::__hash_node_base.91"* [ %9, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91", %"struct.std::__1::__hash_node_base.91"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %8, align 8
  %10 = bitcast %"struct.std::__1::__hash_node_base.91"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #15
  %11 = icmp eq %"struct.std::__1::__hash_node_base.91"* %9, null
  br i1 %11, label %12, label %6

12:                                               ; preds = %6, %1
  %13 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base.91"**, %"struct.std::__1::__hash_node_base.91"*** %13, align 8
  store %"struct.std::__1::__hash_node_base.91"** null, %"struct.std::__1::__hash_node_base.91"*** %13, align 8
  %15 = icmp eq %"struct.std::__1::__hash_node_base.91"** %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast %"struct.std::__1::__hash_node_base.91"** %14 to i8*
  tail call void @_ZdlPv(i8* %17) #15
  br label %18

18:                                               ; preds = %12, %16
  %19 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %19, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %19, align 8
  %21 = icmp eq %"class.SkSL::Statement"* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.SkSL::Statement"* %20 to void (%"class.SkSL::Statement"*)***
  %24 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %24, i64 1
  %26 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %25, align 8
  tail call void %26(%"class.SkSL::Statement"* nonnull %20) #14
  br label %27

27:                                               ; preds = %18, %22
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL18FunctionDefinitionD0Ev(%"class.SkSL::FunctionDefinition"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL18FunctionDefinitionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.91"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1, %6
  %7 = phi %"struct.std::__1::__hash_node_base.91"* [ %9, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91", %"struct.std::__1::__hash_node_base.91"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %8, align 8
  %10 = bitcast %"struct.std::__1::__hash_node_base.91"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #15
  %11 = icmp eq %"struct.std::__1::__hash_node_base.91"* %9, null
  br i1 %11, label %12, label %6

12:                                               ; preds = %6, %1
  %13 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base.91"**, %"struct.std::__1::__hash_node_base.91"*** %13, align 8
  store %"struct.std::__1::__hash_node_base.91"** null, %"struct.std::__1::__hash_node_base.91"*** %13, align 8
  %15 = icmp eq %"struct.std::__1::__hash_node_base.91"** %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast %"struct.std::__1::__hash_node_base.91"** %14 to i8*
  tail call void @_ZdlPv(i8* %17) #15
  br label %18

18:                                               ; preds = %16, %12
  %19 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %19, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %19, align 8
  %21 = icmp eq %"class.SkSL::Statement"* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.SkSL::Statement"* %20 to void (%"class.SkSL::Statement"*)***
  %24 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %24, i64 1
  %26 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %25, align 8
  tail call void %26(%"class.SkSL::Statement"* nonnull %20) #14
  br label %27

27:                                               ; preds = %18, %22
  %28 = bitcast %"class.SkSL::FunctionDefinition"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %28) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL18FunctionDefinition11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::FunctionDefinition"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #14
  %7 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #14
  %8 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %1, i64 0, i32 1
  %9 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %8, align 8
  call void @_ZNK4SkSL19FunctionDeclaration11descriptionEv(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::FunctionDeclaration"* %9) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::String"* nonnull %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.171, i64 0, i64 0)) #14
  %10 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #14
  %11 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %12 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %11, align 8
  %13 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %12, i64 0, i32 0
  %14 = bitcast %"class.SkSL::Statement"* %12 to void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)***
  %15 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)**, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %15, i64 2
  %17 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %16, align 8
  call void %17(%"class.SkSL::String"* nonnull sret %5, %"class.SkSL::IRNode"* %13) #14
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* sret %0, %"class.SkSL::String"* nonnull %3, %"class.SkSL::String"* nonnull dereferenceable(24) %5) #14
  %18 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %24) #15
  br label %25

25:                                               ; preds = %2, %22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #14
  %26 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %32) #15
  br label %33

33:                                               ; preds = %25, %30
  %34 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  call void @_ZdlPv(i8* %40) #15
  br label %41

41:                                               ; preds = %33, %38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::ProgramElement"* @_ZNK4SkSL18FunctionDefinition5cloneEv(%"class.SkSL::FunctionDefinition"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.SkSL::FunctionDeclaration"*, align 8
  %3 = alloca i8, align 1
  %4 = alloca %"class.std::__1::unique_ptr.190", align 8
  %5 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast %"class.SkSL::FunctionDeclaration"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %0, i64 0, i32 1
  %8 = bitcast %"class.SkSL::FunctionDeclaration"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.SkSL::FunctionDeclaration"** %2 to i64*
  store i64 %9, i64* %10, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #14
  store i8 0, i8* %3, align 1
  %11 = bitcast %"class.std::__1::unique_ptr.190"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #14
  %12 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %13 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %12, align 8
  %14 = bitcast %"class.SkSL::Statement"* %13 to %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)***
  %15 = load %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)**, %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)*** %14, align 8
  %16 = getelementptr inbounds %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)*, %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)** %15, i64 4
  %17 = load %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)*, %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)** %16, align 8
  %18 = tail call %"class.SkSL::Statement"* %17(%"class.SkSL::Statement"* %13) #14
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Statement"* %18, %"class.SkSL::Statement"** %19, align 8
  %20 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %0, i64 0, i32 4
  %21 = call %"class.SkSL::FunctionDefinition"* @_ZNSt3__111make_uniqueIN4SkSL18FunctionDefinitionEJRKiPKNS1_19FunctionDeclarationEbNS_10unique_ptrINS1_9StatementENS_14default_deleteIS9_EEEERKNS_13unordered_setIS7_NS_4hashIS7_EENS_8equal_toIS7_EENS_9allocatorIS7_EEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(i32* dereferenceable(4) %5, %"class.SkSL::FunctionDeclaration"** nonnull dereferenceable(8) %2, i8* nonnull dereferenceable(1) %3, %"class.std::__1::unique_ptr.190"* nonnull dereferenceable(8) %4, %"class.std::__1::unordered_set.86"* dereferenceable(40) %20)
  %22 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %19, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %19, align 8
  %23 = icmp eq %"class.SkSL::Statement"* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %1
  %25 = bitcast %"class.SkSL::Statement"* %22 to void (%"class.SkSL::Statement"*)***
  %26 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %26, i64 1
  %28 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %27, align 8
  call void %28(%"class.SkSL::Statement"* nonnull %22) #14
  br label %29

29:                                               ; preds = %1, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %30 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %21, i64 0, i32 0
  ret %"class.SkSL::ProgramElement"* %30
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::FunctionDefinition"* @_ZNSt3__111make_uniqueIN4SkSL18FunctionDefinitionEJRKiPKNS1_19FunctionDeclarationEbNS_10unique_ptrINS1_9StatementENS_14default_deleteIS9_EEEERKNS_13unordered_setIS7_NS_4hashIS7_EENS_8equal_toIS7_EENS_9allocatorIS7_EEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(i32* dereferenceable(4), %"class.SkSL::FunctionDeclaration"** dereferenceable(8), i8* dereferenceable(1), %"class.std::__1::unique_ptr.190"* dereferenceable(8), %"class.std::__1::unordered_set.86"* dereferenceable(40)) local_unnamed_addr #4 comdat {
  %6 = alloca %"class.std::__1::unordered_set.86", align 8
  %7 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 88) #14
  %8 = bitcast i8* %7 to %"class.SkSL::FunctionDefinition"*
  %9 = load i32, i32* %0, align 4
  %10 = bitcast %"class.SkSL::FunctionDeclaration"** %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = load i8, i8* %2, align 1, !range !2
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %3, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.std::__1::unique_ptr.190"* %3 to i64*
  %15 = load i64, i64* %14, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %13, align 8
  %16 = getelementptr inbounds %"class.std::__1::unordered_set.86", %"class.std::__1::unordered_set.86"* %6, i64 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::unordered_set.86", %"class.std::__1::unordered_set.86"* %6, i64 0, i32 0, i32 3
  %18 = getelementptr inbounds %"class.std::__1::unordered_set.86", %"class.std::__1::unordered_set.86"* %4, i64 0, i32 0, i32 3
  %19 = bitcast %"class.std::__1::__compressed_pair.106"* %18 to i32*
  %20 = bitcast %"class.std::__1::__compressed_pair.106"* %17 to i32*
  %21 = bitcast %"class.std::__1::unordered_set.86"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 32, i1 false) #14
  %22 = load i32, i32* %19, align 8
  store i32 %22, i32* %20, align 8
  %23 = getelementptr inbounds %"class.std::__1::unordered_set.86", %"class.std::__1::unordered_set.86"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  call void @_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.87"* nonnull %16, i64 %24) #14
  %25 = getelementptr inbounds %"class.std::__1::unordered_set.86", %"class.std::__1::unordered_set.86"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.91"* %26, null
  br i1 %27, label %38, label %28

28:                                               ; preds = %5
  %29 = ptrtoint %"struct.std::__1::__hash_node_base.91"* %26 to i64
  br label %30

30:                                               ; preds = %30, %28
  %31 = phi i64 [ %29, %28 ], [ %36, %30 ]
  %32 = inttoptr i64 %31 to %"struct.std::__1::__hash_node.453"*
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node.453", %"struct.std::__1::__hash_node.453"* %32, i64 0, i32 2
  %34 = call { %"struct.std::__1::__hash_node_base.91"*, i8 } @_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.87"* nonnull %16, %"class.SkSL::FunctionDeclaration"** dereferenceable(8) %33, %"class.SkSL::FunctionDeclaration"** dereferenceable(8) %33) #14
  %35 = inttoptr i64 %31 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %38, label %30

38:                                               ; preds = %30, %5
  %39 = getelementptr inbounds i8, i8* %7, i64 8
  %40 = bitcast i8* %39 to i32*
  store i32 %9, i32* %40, align 8
  %41 = getelementptr inbounds i8, i8* %7, i64 12
  %42 = bitcast i8* %41 to i32*
  store i32 2, i32* %42, align 4
  %43 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL18FunctionDefinitionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %44 = getelementptr inbounds i8, i8* %7, i64 16
  %45 = bitcast i8* %44 to i64*
  store i64 %11, i64* %45, align 8
  %46 = getelementptr inbounds i8, i8* %7, i64 24
  store i8 %12, i8* %46, align 8
  %47 = getelementptr inbounds i8, i8* %7, i64 32
  %48 = bitcast i8* %47 to i64*
  store i64 %15, i64* %48, align 8
  %49 = getelementptr inbounds i8, i8* %7, i64 40
  %50 = getelementptr inbounds %"class.std::__1::unordered_set.86", %"class.std::__1::unordered_set.86"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unordered_set.86"* %6 to i64*
  %52 = load i64, i64* %51, align 8
  store %"struct.std::__1::__hash_node_base.91"** null, %"struct.std::__1::__hash_node_base.91"*** %50, align 8
  %53 = bitcast i8* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = getelementptr inbounds %"class.std::__1::unordered_set.86", %"class.std::__1::unordered_set.86"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds i8, i8* %7, i64 48
  %56 = bitcast i8* %55 to i64*
  %57 = load i64, i64* %54, align 8
  store i64 %57, i64* %56, align 8
  store i64 0, i64* %54, align 8
  %58 = getelementptr inbounds i8, i8* %7, i64 56
  %59 = getelementptr inbounds %"class.std::__1::unordered_set.86", %"class.std::__1::unordered_set.86"* %6, i64 0, i32 0, i32 1
  %60 = bitcast %"class.std::__1::__compressed_pair.98"* %59 to i64*
  %61 = bitcast i8* %58 to i64*
  %62 = load i64, i64* %60, align 8
  store i64 %62, i64* %61, align 8
  %63 = getelementptr inbounds %"class.std::__1::unordered_set.86", %"class.std::__1::unordered_set.86"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %64 = getelementptr inbounds i8, i8* %7, i64 64
  %65 = bitcast i8* %64 to i64*
  %66 = load i64, i64* %63, align 8
  store i64 %66, i64* %65, align 8
  %67 = getelementptr inbounds i8, i8* %7, i64 72
  %68 = bitcast i8* %67 to i32*
  %69 = load i32, i32* %20, align 8
  store i32 %69, i32* %68, align 8
  %70 = icmp eq i64 %66, 0
  %71 = inttoptr i64 %52 to %"struct.std::__1::__hash_node_base.91"**
  %72 = inttoptr i64 %62 to %"struct.std::__1::__hash_node_base.91"*
  br i1 %70, label %93, label %73

73:                                               ; preds = %38
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91", %"struct.std::__1::__hash_node_base.91"* %72, i64 1
  %75 = bitcast %"struct.std::__1::__hash_node_base.91"* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = call i64 @llvm.ctpop.i64(i64 %57) #14, !range !99
  %78 = icmp ugt i64 %77, 1
  br i1 %78, label %82, label %79

79:                                               ; preds = %73
  %80 = add i64 %57, -1
  %81 = and i64 %76, %80
  br label %86

82:                                               ; preds = %73
  %83 = icmp ult i64 %76, %57
  br i1 %83, label %86, label %84

84:                                               ; preds = %82
  %85 = urem i64 %76, %57
  br label %86

86:                                               ; preds = %79, %82, %84
  %87 = phi i64 [ %81, %79 ], [ %85, %84 ], [ %76, %82 ]
  %88 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %71, i64 %87
  %89 = bitcast %"struct.std::__1::__hash_node_base.91"** %88 to i8**
  store i8* %58, i8** %89, align 8
  %90 = bitcast %"class.std::__1::__compressed_pair.98"* %59 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 16, i1 false) #14
  %91 = getelementptr inbounds i8, i8* %7, i64 80
  %92 = bitcast i8* %91 to %"struct.SkSL::ASTNode"**
  store %"struct.SkSL::ASTNode"* null, %"struct.SkSL::ASTNode"** %92, align 8
  br label %103

93:                                               ; preds = %38
  %94 = getelementptr inbounds i8, i8* %7, i64 80
  %95 = bitcast i8* %94 to %"struct.SkSL::ASTNode"**
  store %"struct.SkSL::ASTNode"* null, %"struct.SkSL::ASTNode"** %95, align 8
  %96 = icmp eq i64 %62, 0
  br i1 %96, label %103, label %97

97:                                               ; preds = %93, %97
  %98 = phi %"struct.std::__1::__hash_node_base.91"* [ %100, %97 ], [ %72, %93 ]
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91", %"struct.std::__1::__hash_node_base.91"* %98, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %99, align 8
  %101 = bitcast %"struct.std::__1::__hash_node_base.91"* %98 to i8*
  call void @_ZdlPv(i8* %101) #15
  %102 = icmp eq %"struct.std::__1::__hash_node_base.91"* %100, null
  br i1 %102, label %103, label %97

103:                                              ; preds = %97, %86, %93
  %104 = load %"struct.std::__1::__hash_node_base.91"**, %"struct.std::__1::__hash_node_base.91"*** %50, align 8
  store %"struct.std::__1::__hash_node_base.91"** null, %"struct.std::__1::__hash_node_base.91"*** %50, align 8
  %105 = icmp eq %"struct.std::__1::__hash_node_base.91"** %104, null
  br i1 %105, label %108, label %106

106:                                              ; preds = %103
  %107 = bitcast %"struct.std::__1::__hash_node_base.91"** %104 to i8*
  call void @_ZdlPv(i8* %107) #15
  br label %108

108:                                              ; preds = %103, %106
  ret %"class.SkSL::FunctionDefinition"* %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.87"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !99
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #14
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.87", %"class.std::__1::__hash_table.87"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.87"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #14, !range !99
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.87", %"class.std::__1::__hash_table.87"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.87", %"class.std::__1::__hash_table.87"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #14
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #14, !range !99
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #14
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.87"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.87"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.87", %"class.std::__1::__hash_table.87"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #16
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #15
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.87", %"class.std::__1::__hash_table.87"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.91"**, %"struct.std::__1::__hash_node_base.91"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.87"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.91"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.91"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #15
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.93", %"class.std::__1::__bucket_list_deallocator.93"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.91"**, %"struct.std::__1::__hash_node_base.91"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.91"* null, %"struct.std::__1::__hash_node_base.91"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !160

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.87", %"class.std::__1::__hash_table.87"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91", %"struct.std::__1::__hash_node_base.91"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.91"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.91"**, %"struct.std::__1::__hash_node_base.91"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.91"* null, %"struct.std::__1::__hash_node_base.91"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.91"**, %"struct.std::__1::__hash_node_base.91"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.91"* null, %"struct.std::__1::__hash_node_base.91"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.91"**, %"struct.std::__1::__hash_node_base.91"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.91"* null, %"struct.std::__1::__hash_node_base.91"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.91"**, %"struct.std::__1::__hash_node_base.91"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.91"* null, %"struct.std::__1::__hash_node_base.91"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91", %"struct.std::__1::__hash_node_base.91"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.91"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #14, !range !99
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.91"**, %"struct.std::__1::__hash_node_base.91"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.91"* %36, %"struct.std::__1::__hash_node_base.91"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91", %"struct.std::__1::__hash_node_base.91"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.91"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.91"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.91"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91", %"struct.std::__1::__hash_node_base.91"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.91"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.91"**, %"struct.std::__1::__hash_node_base.91"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.91"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91", %"struct.std::__1::__hash_node_base.91"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.91"* %101 to %"class.SkSL::FunctionDeclaration"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.91"* %82, %"struct.std::__1::__hash_node_base.91"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.91"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91", %"struct.std::__1::__hash_node_base.91"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.91"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91", %"struct.std::__1::__hash_node_base.91"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.91"* %110 to %"class.SkSL::FunctionDeclaration"**
  %112 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %102, align 8
  %113 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %111, align 8
  %114 = icmp eq %"class.SkSL::FunctionDeclaration"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.91"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.91"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.91"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.91"**, %"struct.std::__1::__hash_node_base.91"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.91"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.91"**, %"struct.std::__1::__hash_node_base.91"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91", %"struct.std::__1::__hash_node_base.91"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.91"* %80, %"struct.std::__1::__hash_node_base.91"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.91"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91", %"struct.std::__1::__hash_node_base.91"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.91"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.87", %"class.std::__1::__hash_table.87"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.91"**, %"struct.std::__1::__hash_node_base.91"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.91"** null, %"struct.std::__1::__hash_node_base.91"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.91"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.91"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #15
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.93", %"class.std::__1::__bucket_list_deallocator.93"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.91"*, i8 } @_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.87"*, %"class.SkSL::FunctionDeclaration"** dereferenceable(8), %"class.SkSL::FunctionDeclaration"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %1, align 8
  %5 = ptrtoint %"class.SkSL::FunctionDeclaration"* %4 to i64
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.87", %"class.std::__1::__hash_table.87"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %66, label %22

22:                                               ; preds = %3
  %23 = tail call i64 @llvm.ctpop.i64(i64 %20) #14, !range !99
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %18, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table.87", %"class.std::__1::__hash_table.87"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.91"**, %"struct.std::__1::__hash_node_base.91"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.91"* %37, null
  br i1 %38, label %66, label %39

39:                                               ; preds = %32
  %40 = add i64 %20, -1
  br label %41

41:                                               ; preds = %39, %61
  %42 = phi %"struct.std::__1::__hash_node_base.91"* [ %44, %61 ], [ %37, %39 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91", %"struct.std::__1::__hash_node_base.91"* %42, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base.91"* %44, null
  br i1 %45, label %66, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91", %"struct.std::__1::__hash_node_base.91"* %44, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base.91"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %18
  br i1 %50, label %61, label %51

51:                                               ; preds = %46
  br i1 %24, label %54, label %52

52:                                               ; preds = %51
  %53 = and i64 %49, %40
  br label %58

54:                                               ; preds = %51
  %55 = icmp ult i64 %49, %20
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %49, %20
  br label %58

58:                                               ; preds = %52, %54, %56
  %59 = phi i64 [ %53, %52 ], [ %57, %56 ], [ %49, %54 ]
  %60 = icmp eq i64 %59, %33
  br i1 %60, label %61, label %66

61:                                               ; preds = %46, %58
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91", %"struct.std::__1::__hash_node_base.91"* %44, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base.91"* %62 to %"class.SkSL::FunctionDeclaration"**
  %64 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %63, align 8
  %65 = icmp eq %"class.SkSL::FunctionDeclaration"* %64, %4
  br i1 %65, label %154, label %41

66:                                               ; preds = %41, %58, %32, %3
  %67 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %58 ], [ %33, %41 ]
  %68 = tail call i8* @_Znwm(i64 24) #15, !noalias !161
  %69 = getelementptr inbounds i8, i8* %68, i64 16
  %70 = bitcast %"class.SkSL::FunctionDeclaration"** %2 to i64*
  %71 = load i64, i64* %70, align 8, !noalias !161
  %72 = bitcast i8* %69 to i64*
  store i64 %71, i64* %72, align 8, !noalias !161
  %73 = getelementptr inbounds i8, i8* %68, i64 8
  %74 = bitcast i8* %73 to i64*
  store i64 %18, i64* %74, align 8, !noalias !161
  %75 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.91"**
  store %"struct.std::__1::__hash_node_base.91"* null, %"struct.std::__1::__hash_node_base.91"** %75, align 8, !noalias !161
  %76 = getelementptr inbounds %"class.std::__1::__hash_table.87", %"class.std::__1::__hash_table.87"* %0, i64 0, i32 2, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 1
  %79 = uitofp i64 %78 to float
  %80 = uitofp i64 %20 to float
  %81 = getelementptr inbounds %"class.std::__1::__hash_table.87", %"class.std::__1::__hash_table.87"* %0, i64 0, i32 3, i32 0, i32 0
  %82 = load float, float* %81, align 4
  %83 = fmul float %82, %80
  %84 = fcmp olt float %83, %79
  %85 = or i1 %21, %84
  br i1 %85, label %86, label %109

86:                                               ; preds = %66
  %87 = shl i64 %20, 1
  %88 = icmp ult i64 %20, 3
  %89 = tail call i64 @llvm.ctpop.i64(i64 %20) #14, !range !99
  %90 = icmp ugt i64 %89, 1
  %91 = or i1 %88, %90
  %92 = zext i1 %91 to i64
  %93 = or i64 %87, %92
  %94 = fdiv float %79, %82
  %95 = tail call float @llvm.ceil.f32(float %94) #14
  %96 = fptoui float %95 to i64
  %97 = icmp ult i64 %93, %96
  %98 = select i1 %97, i64 %96, i64 %93
  tail call void @_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.87"* %0, i64 %98)
  %99 = load i64, i64* %19, align 8
  %100 = tail call i64 @llvm.ctpop.i64(i64 %99) #14, !range !99
  %101 = icmp ugt i64 %100, 1
  br i1 %101, label %105, label %102

102:                                              ; preds = %86
  %103 = add i64 %99, -1
  %104 = and i64 %103, %18
  br label %109

105:                                              ; preds = %86
  %106 = icmp ult i64 %18, %99
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = urem i64 %18, %99
  br label %109

109:                                              ; preds = %107, %105, %102, %66
  %110 = phi i64 [ %20, %66 ], [ %99, %102 ], [ %99, %105 ], [ %99, %107 ]
  %111 = phi i64 [ %67, %66 ], [ %104, %102 ], [ %18, %105 ], [ %108, %107 ]
  %112 = getelementptr inbounds %"class.std::__1::__hash_table.87", %"class.std::__1::__hash_table.87"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base.91"**, %"struct.std::__1::__hash_node_base.91"*** %112, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %113, i64 %111
  %115 = load %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.91"* %115, null
  br i1 %116, label %117, label %143

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.87", %"class.std::__1::__hash_table.87"* %0, i64 0, i32 1, i32 0, i32 0
  %119 = bitcast %"struct.std::__1::__hash_node_base.91"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast i8* %68 to i64*
  store i64 %120, i64* %121, align 8
  %122 = bitcast %"struct.std::__1::__hash_node_base.91"* %118 to i8**
  store i8* %68, i8** %122, align 8
  store %"struct.std::__1::__hash_node_base.91"* %118, %"struct.std::__1::__hash_node_base.91"** %114, align 8
  %123 = load %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %75, align 8
  %124 = icmp eq %"struct.std::__1::__hash_node_base.91"* %123, null
  br i1 %124, label %150, label %125

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91", %"struct.std::__1::__hash_node_base.91"* %123, i64 1
  %127 = bitcast %"struct.std::__1::__hash_node_base.91"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = tail call i64 @llvm.ctpop.i64(i64 %110) #14, !range !99
  %130 = icmp ugt i64 %129, 1
  br i1 %130, label %134, label %131

131:                                              ; preds = %125
  %132 = add i64 %110, -1
  %133 = and i64 %128, %132
  br label %138

134:                                              ; preds = %125
  %135 = icmp ult i64 %128, %110
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = urem i64 %128, %110
  br label %138

138:                                              ; preds = %131, %134, %136
  %139 = phi i64 [ %133, %131 ], [ %137, %136 ], [ %128, %134 ]
  %140 = load %"struct.std::__1::__hash_node_base.91"**, %"struct.std::__1::__hash_node_base.91"*** %112, align 8
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %140, i64 %139
  %142 = bitcast %"struct.std::__1::__hash_node_base.91"** %141 to i8**
  br label %148

143:                                              ; preds = %109
  %144 = bitcast %"struct.std::__1::__hash_node_base.91"* %115 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast i8* %68 to i64*
  store i64 %145, i64* %146, align 8
  %147 = bitcast %"struct.std::__1::__hash_node_base.91"* %115 to i8**
  br label %148

148:                                              ; preds = %138, %143
  %149 = phi i8** [ %147, %143 ], [ %142, %138 ]
  store i8* %68, i8** %149, align 8
  br label %150

150:                                              ; preds = %148, %117
  %151 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.91"*
  %152 = load i64, i64* %76, align 8
  %153 = add i64 %152, 1
  store i64 %153, i64* %76, align 8
  br label %154

154:                                              ; preds = %61, %150
  %155 = phi i8 [ 1, %150 ], [ 0, %61 ]
  %156 = phi %"struct.std::__1::__hash_node_base.91"* [ %151, %150 ], [ %44, %61 ]
  %157 = insertvalue { %"struct.std::__1::__hash_node_base.91"*, i8 } undef, %"struct.std::__1::__hash_node_base.91"* %156, 0
  %158 = insertvalue { %"struct.std::__1::__hash_node_base.91"*, i8 } %157, i8 %155, 1
  ret { %"struct.std::__1::__hash_node_base.91"*, i8 } %158
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN4SkSL14ProgramElementENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.137"*, %"class.std::__1::unique_ptr.139"* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.139"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.137"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.137"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.139"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #16
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #15
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.139"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.139"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.139"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.139"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.139"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.139"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.137", %"class.std::__1::vector.137"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.139"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.139"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.SkSL::ProgramElement"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.139"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.139"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.139"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.139"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !164

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.139"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.139"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.139"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.139"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.139"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.139"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.139"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.139"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.139"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.139"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.139"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.139"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.139"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.139"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.139"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.139"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.139"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.139"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.139"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.139"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.139"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.139"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.139"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.139"*, %"class.std::__1::unique_ptr.139"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.139"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.139"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.139"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.139"*
  %138 = icmp eq %"class.std::__1::unique_ptr.139"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.139"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.139"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %142, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %142, align 8
  %144 = icmp eq %"class.SkSL::ProgramElement"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.SkSL::ProgramElement"* %143 to void (%"class.SkSL::ProgramElement"*)***
  %147 = load void (%"class.SkSL::ProgramElement"*)**, void (%"class.SkSL::ProgramElement"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %147, i64 1
  %149 = load void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %148, align 8
  tail call void %149(%"class.SkSL::ProgramElement"* nonnull %143) #14
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.139"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #15
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

declare void @_ZN4SkSL3dsl11DSLFunction4callE8SkTArrayINS0_10DSLWrapperINS0_13DSLExpressionEEELb0EE(%"class.SkSL::dsl::DSLExpression"* sret, %"class.SkSL::dsl::DSLFunction"*, %class.SkTArray.242*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIN4SkSL3dsl10DSLWrapperINS1_13DSLExpressionEEELb0EEC2EOS5_(%class.SkTArray.242*, %class.SkTArray.242* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkTArray.242, %class.SkTArray.242* %1, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %27, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkTArray.242, %class.SkTArray.242* %1, i64 0, i32 0
  %9 = bitcast %class.SkTArray.242* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %class.SkTArray.242* %0 to i64*
  store i64 %10, i64* %11, align 8
  %12 = load i64, i64* %3, align 8
  %13 = and i64 %12, 4294967294
  %14 = getelementptr inbounds %class.SkTArray.242, %class.SkTArray.242* %0, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = and i64 %15, -4294967295
  %17 = or i64 %16, %13
  store i64 %17, i64* %14, align 8
  %18 = load i64, i64* %3, align 8
  %19 = and i64 %18, -8589934592
  %20 = and i64 %17, 8589934590
  %21 = or i64 %19, %20
  %22 = or i64 %21, 1
  store i64 %22, i64* %14, align 8
  %23 = load i64, i64* %3, align 8
  %24 = and i64 %23, 4294967296
  %25 = and i64 %22, -4294967297
  %26 = or i64 %25, %24
  store i64 %26, i64* %14, align 8
  store %"class.SkSL::dsl::DSLWrapper"* null, %"class.SkSL::dsl::DSLWrapper"** %8, align 8
  br label %77

27:                                               ; preds = %2
  %28 = lshr i64 %4, 1
  %29 = trunc i64 %28 to i32
  %30 = and i32 %29, 2147483647
  %31 = getelementptr inbounds %class.SkTArray.242, %class.SkTArray.242* %0, i64 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = and i64 %4, 4294967294
  %34 = and i64 %32, -4294967295
  %35 = or i64 %34, %33
  store i64 %35, i64* %31, align 8
  %36 = icmp eq i32 %30, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %27
  %38 = and i64 %35, 8589934591
  store i64 %38, i64* %31, align 8
  %39 = getelementptr inbounds %class.SkTArray.242, %class.SkTArray.242* %0, i64 0, i32 0
  store %"class.SkSL::dsl::DSLWrapper"* null, %"class.SkSL::dsl::DSLWrapper"** %39, align 8
  br label %50

40:                                               ; preds = %27
  %41 = icmp ugt i32 %30, 8
  %42 = select i1 %41, i32 %30, i32 8
  %43 = zext i32 %42 to i64
  %44 = shl nuw i64 %43, 33
  %45 = and i64 %35, 8589934591
  %46 = or i64 %45, %44
  store i64 %46, i64* %31, align 8
  %47 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #14
  %48 = bitcast %class.SkTArray.242* %0 to i8**
  store i8* %47, i8** %48, align 8
  %49 = load i64, i64* %31, align 8
  br label %50

50:                                               ; preds = %37, %40
  %51 = phi i8* [ %47, %40 ], [ null, %37 ]
  %52 = phi i64 [ %49, %40 ], [ %38, %37 ]
  %53 = and i64 %52, -4294967298
  %54 = or i64 %53, 1
  store i64 %54, i64* %31, align 8
  %55 = load i64, i64* %3, align 8
  %56 = and i64 %55, 4294967294
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %74, label %58

58:                                               ; preds = %50
  %59 = getelementptr inbounds %class.SkTArray.242, %class.SkTArray.242* %1, i64 0, i32 0
  br label %60

60:                                               ; preds = %60, %58
  %61 = phi i64 [ 0, %58 ], [ %69, %60 ]
  %62 = shl nuw nsw i64 %61, 3
  %63 = getelementptr inbounds i8, i8* %51, i64 %62
  %64 = load %"class.SkSL::dsl::DSLWrapper"*, %"class.SkSL::dsl::DSLWrapper"** %59, align 8
  %65 = bitcast i8* %63 to %"class.SkSL::dsl::DSLExpression"*
  tail call void @_ZN4SkSL3dsl13DSLExpressionC1Ev(%"class.SkSL::dsl::DSLExpression"* %65) #14
  %66 = getelementptr inbounds %"class.SkSL::dsl::DSLWrapper", %"class.SkSL::dsl::DSLWrapper"* %64, i64 %61, i32 0
  tail call void @_ZN4SkSL3dsl13DSLExpression4swapERS1_(%"class.SkSL::dsl::DSLExpression"* %65, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %66) #14
  %67 = load %"class.SkSL::dsl::DSLWrapper"*, %"class.SkSL::dsl::DSLWrapper"** %59, align 8
  %68 = getelementptr inbounds %"class.SkSL::dsl::DSLWrapper", %"class.SkSL::dsl::DSLWrapper"* %67, i64 %61, i32 0
  tail call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* %68) #14
  %69 = add nuw nsw i64 %61, 1
  %70 = load i64, i64* %3, align 8
  %71 = lshr i64 %70, 1
  %72 = and i64 %71, 2147483647
  %73 = icmp ult i64 %69, %72
  br i1 %73, label %60, label %74

74:                                               ; preds = %60, %50
  %75 = phi i64 [ %55, %50 ], [ %70, %60 ]
  %76 = and i64 %75, -4294967295
  br label %77

77:                                               ; preds = %74, %7
  %78 = phi i64 [ %76, %74 ], [ 1, %7 ]
  store i64 %78, i64* %3, align 8
  ret void
}

declare void @_ZN4SkSL3dsl13DSLExpressionC1Ev(%"class.SkSL::dsl::DSLExpression"*) unnamed_addr #2

declare void @_ZN4SkSL3dsl13DSLExpression4swapERS1_(%"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.SkSL::Expression"* @_ZN4SkSL3dsl13DSLExpression7releaseEv(%"class.SkSL::dsl::DSLExpression"*) local_unnamed_addr #2

declare void @_ZN4SkSL3dsl12DSLStatementC1ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLStatement"*, %"class.SkSL::Expression"*) unnamed_addr #2

declare %"class.SkSL::Expression"* @_ZN4SkSL3dsl21DSLPossibleExpression7releaseEv(%"class.SkSL::dsl::DSLPossibleExpression"*) local_unnamed_addr #2

declare void @_ZN4SkSL3dsl12DSLStatementC1ENSt3__110unique_ptrINS_9StatementENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLStatement"*, %"class.SkSL::Statement"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL3dsl7DSLType9ConstructIJNS0_21DSLPossibleExpressionEiNS0_13DSLExpressionEEEES4_S1_DpOT_(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::Type"*, i8, %"class.SkSL::dsl::DSLPossibleExpression"* dereferenceable(8), i32* dereferenceable(4), %"class.SkSL::dsl::DSLExpression"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %8 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %9 = alloca %class.SkTArray.467, align 8
  %10 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %11 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %12 = alloca %class.SkTArray.467, align 8
  %13 = bitcast %class.SkTArray.467* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #14
  %14 = getelementptr inbounds %class.SkTArray.467, %class.SkTArray.467* %9, i64 0, i32 0
  %15 = getelementptr inbounds %class.SkTArray.467, %class.SkTArray.467* %9, i64 0, i32 1
  store %"class.SkSL::dsl::DSLExpression"* null, %"class.SkSL::dsl::DSLExpression"** %14, align 8
  store i64 1, i64* %15, align 8
  call void @_ZN8SkTArrayIN4SkSL3dsl13DSLExpressionELb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.467* nonnull %9, i32 3, i32 0) #14
  %16 = load i64, i64* %15, align 8
  %17 = shl i64 %16, 32
  %18 = and i64 %17, 4294967296
  %19 = and i64 %16, -4294967297
  %20 = or i64 %18, %19
  store i64 %20, i64* %15, align 8
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionC1EOS1_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %11, %"class.SkSL::dsl::DSLPossibleExpression"* dereferenceable(8) %3) #14
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nonnull %10, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %11, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.176, i64 0, i64 0), i32 144) #14
  %21 = bitcast %"class.SkSL::dsl::DSLExpression"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  call void @_ZN8SkTArrayIN4SkSL3dsl13DSLExpressionELb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.467* nonnull %9, i32 1, i32 1) #14
  %22 = load %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"** %14, align 8
  %23 = load i64, i64* %15, align 8
  %24 = lshr i64 %23, 1
  %25 = and i64 %24, 2147483647
  %26 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %22, i64 %25
  %27 = add i64 %23, 2
  %28 = and i64 %27, 4294967294
  %29 = and i64 %23, -4294967295
  %30 = or i64 %28, %29
  store i64 %30, i64* %15, align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* %26, %"class.SkSL::dsl::DSLExpression"* nonnull dereferenceable(8) %10) #14
  %31 = load i32, i32* %4, align 4
  call void @_ZN4SkSL3dsl13DSLExpressionC1Ei(%"class.SkSL::dsl::DSLExpression"* nonnull %8, i32 %31) #14
  %32 = bitcast %"class.SkSL::dsl::DSLExpression"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32)
  call void @_ZN8SkTArrayIN4SkSL3dsl13DSLExpressionELb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.467* nonnull %9, i32 1, i32 1) #14
  %33 = load %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"** %14, align 8
  %34 = load i64, i64* %15, align 8
  %35 = lshr i64 %34, 1
  %36 = and i64 %35, 2147483647
  %37 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %33, i64 %36
  %38 = add i64 %34, 2
  %39 = and i64 %38, 4294967294
  %40 = and i64 %34, -4294967295
  %41 = or i64 %39, %40
  store i64 %41, i64* %15, align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* %37, %"class.SkSL::dsl::DSLExpression"* nonnull dereferenceable(8) %8) #14
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %7, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %5) #14
  call void @_ZN8SkTArrayIN4SkSL3dsl13DSLExpressionELb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.467* nonnull %9, i32 1, i32 1) #14
  %42 = load %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"** %14, align 8
  %43 = load i64, i64* %15, align 8
  %44 = lshr i64 %43, 1
  %45 = and i64 %44, 2147483647
  %46 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %42, i64 %45
  %47 = add i64 %43, 2
  %48 = and i64 %47, 4294967294
  %49 = and i64 %43, -4294967295
  %50 = or i64 %48, %49
  store i64 %50, i64* %15, align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* %46, %"class.SkSL::dsl::DSLExpression"* nonnull dereferenceable(8) %7) #14
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32)
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %10) #14
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %11) #14
  call void @_ZN8SkTArrayIN4SkSL3dsl13DSLExpressionELb0EEC2EOS3_(%class.SkTArray.467* nonnull %12, %class.SkTArray.467* nonnull dereferenceable(16) %9)
  call void @_ZN4SkSL3dsl7DSLType9ConstructES1_8SkTArrayINS0_13DSLExpressionELb0EE(%"class.SkSL::dsl::DSLExpression"* sret %0, %"class.SkSL::Type"* %1, i8 %2, %class.SkTArray.467* nonnull %12) #14
  %51 = getelementptr inbounds %class.SkTArray.467, %class.SkTArray.467* %12, i64 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = and i64 %52, 4294967294
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %57, label %55

55:                                               ; preds = %6
  %56 = getelementptr inbounds %class.SkTArray.467, %class.SkTArray.467* %12, i64 0, i32 0
  br label %61

57:                                               ; preds = %61, %6
  %58 = phi i64 [ %52, %6 ], [ %66, %61 ]
  %59 = and i64 %58, 1
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %73, label %70

61:                                               ; preds = %61, %55
  %62 = phi i64 [ 0, %55 ], [ %65, %61 ]
  %63 = load %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"** %56, align 8
  %64 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %63, i64 %62
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* %64) #14
  %65 = add nuw nsw i64 %62, 1
  %66 = load i64, i64* %51, align 8
  %67 = lshr i64 %66, 1
  %68 = and i64 %67, 2147483647
  %69 = icmp ult i64 %65, %68
  br i1 %69, label %61, label %57

70:                                               ; preds = %57
  %71 = bitcast %class.SkTArray.467* %12 to i8**
  %72 = load i8*, i8** %71, align 8
  call void @_Z7sk_freePv(i8* %72) #14
  br label %73

73:                                               ; preds = %57, %70
  %74 = load i64, i64* %15, align 8
  %75 = and i64 %74, 4294967294
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %81

77:                                               ; preds = %81, %73
  %78 = phi i64 [ %74, %73 ], [ %86, %81 ]
  %79 = and i64 %78, 1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %93, label %90

81:                                               ; preds = %73, %81
  %82 = phi i64 [ %85, %81 ], [ 0, %73 ]
  %83 = load %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"** %14, align 8
  %84 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %83, i64 %82
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* %84) #14
  %85 = add nuw nsw i64 %82, 1
  %86 = load i64, i64* %15, align 8
  %87 = lshr i64 %86, 1
  %88 = and i64 %87, 2147483647
  %89 = icmp ult i64 %85, %88
  br i1 %89, label %81, label %77

90:                                               ; preds = %77
  %91 = bitcast %class.SkTArray.467* %9 to i8**
  %92 = load i8*, i8** %91, align 8
  call void @_Z7sk_freePv(i8* %92) #14
  br label %93

93:                                               ; preds = %77, %90
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #14
  ret void
}

declare void @_ZN4SkSL3dsl21DSLPossibleExpressionC1EOS1_(%"class.SkSL::dsl::DSLPossibleExpression"*, %"class.SkSL::dsl::DSLPossibleExpression"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN4SkSL3dsl7DSLType9ConstructES1_8SkTArrayINS0_13DSLExpressionELb0EE(%"class.SkSL::dsl::DSLExpression"* sret, %"class.SkSL::Type"*, i8, %class.SkTArray.467*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIN4SkSL3dsl13DSLExpressionELb0EEC2EOS3_(%class.SkTArray.467*, %class.SkTArray.467* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkTArray.467, %class.SkTArray.467* %1, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %27, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkTArray.467, %class.SkTArray.467* %1, i64 0, i32 0
  %9 = bitcast %class.SkTArray.467* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %class.SkTArray.467* %0 to i64*
  store i64 %10, i64* %11, align 8
  %12 = load i64, i64* %3, align 8
  %13 = and i64 %12, 4294967294
  %14 = getelementptr inbounds %class.SkTArray.467, %class.SkTArray.467* %0, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = and i64 %15, -4294967295
  %17 = or i64 %16, %13
  store i64 %17, i64* %14, align 8
  %18 = load i64, i64* %3, align 8
  %19 = and i64 %18, -8589934592
  %20 = and i64 %17, 8589934590
  %21 = or i64 %19, %20
  %22 = or i64 %21, 1
  store i64 %22, i64* %14, align 8
  %23 = load i64, i64* %3, align 8
  %24 = and i64 %23, 4294967296
  %25 = and i64 %22, -4294967297
  %26 = or i64 %25, %24
  store i64 %26, i64* %14, align 8
  store %"class.SkSL::dsl::DSLExpression"* null, %"class.SkSL::dsl::DSLExpression"** %8, align 8
  br label %77

27:                                               ; preds = %2
  %28 = lshr i64 %4, 1
  %29 = trunc i64 %28 to i32
  %30 = and i32 %29, 2147483647
  %31 = getelementptr inbounds %class.SkTArray.467, %class.SkTArray.467* %0, i64 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = and i64 %4, 4294967294
  %34 = and i64 %32, -4294967295
  %35 = or i64 %34, %33
  store i64 %35, i64* %31, align 8
  %36 = icmp eq i32 %30, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %27
  %38 = and i64 %35, 8589934591
  store i64 %38, i64* %31, align 8
  %39 = getelementptr inbounds %class.SkTArray.467, %class.SkTArray.467* %0, i64 0, i32 0
  store %"class.SkSL::dsl::DSLExpression"* null, %"class.SkSL::dsl::DSLExpression"** %39, align 8
  br label %50

40:                                               ; preds = %27
  %41 = icmp ugt i32 %30, 8
  %42 = select i1 %41, i32 %30, i32 8
  %43 = zext i32 %42 to i64
  %44 = shl nuw i64 %43, 33
  %45 = and i64 %35, 8589934591
  %46 = or i64 %45, %44
  store i64 %46, i64* %31, align 8
  %47 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #14
  %48 = bitcast %class.SkTArray.467* %0 to i8**
  store i8* %47, i8** %48, align 8
  %49 = load i64, i64* %31, align 8
  br label %50

50:                                               ; preds = %37, %40
  %51 = phi i8* [ %47, %40 ], [ null, %37 ]
  %52 = phi i64 [ %49, %40 ], [ %38, %37 ]
  %53 = and i64 %52, -4294967298
  %54 = or i64 %53, 1
  store i64 %54, i64* %31, align 8
  %55 = load i64, i64* %3, align 8
  %56 = and i64 %55, 4294967294
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %74, label %58

58:                                               ; preds = %50
  %59 = getelementptr inbounds %class.SkTArray.467, %class.SkTArray.467* %1, i64 0, i32 0
  br label %60

60:                                               ; preds = %60, %58
  %61 = phi i64 [ 0, %58 ], [ %69, %60 ]
  %62 = shl nuw nsw i64 %61, 3
  %63 = getelementptr inbounds i8, i8* %51, i64 %62
  %64 = bitcast i8* %63 to %"class.SkSL::dsl::DSLExpression"*
  %65 = load %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"** %59, align 8
  %66 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %65, i64 %61
  tail call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* %64, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %66) #14
  %67 = load %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"** %59, align 8
  %68 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %67, i64 %61
  tail call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* %68) #14
  %69 = add nuw nsw i64 %61, 1
  %70 = load i64, i64* %3, align 8
  %71 = lshr i64 %70, 1
  %72 = and i64 %71, 2147483647
  %73 = icmp ult i64 %69, %72
  br i1 %73, label %60, label %74

74:                                               ; preds = %60, %50
  %75 = phi i64 [ %55, %50 ], [ %70, %60 ]
  %76 = and i64 %75, -4294967295
  br label %77

77:                                               ; preds = %74, %7
  %78 = phi i64 [ %76, %74 ], [ 1, %7 ]
  store i64 %78, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIN4SkSL3dsl13DSLExpressionELb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.467*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.467, %class.SkTArray.467* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %76

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %76, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #14
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.467, %class.SkTArray.467* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %59, %50 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = bitcast i8* %53 to %"class.SkSL::dsl::DSLExpression"*
  %55 = load %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"** %49, align 8
  %56 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %55, i64 %51
  tail call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* %54, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %56) #14
  %57 = load %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"** %49, align 8
  %58 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %57, i64 %51
  tail call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* %58) #14
  %59 = add nuw nsw i64 %51, 1
  %60 = load i64, i64* %4, align 8
  %61 = lshr i64 %60, 1
  %62 = and i64 %61, 2147483647
  %63 = icmp ult i64 %59, %62
  br i1 %63, label %50, label %64

64:                                               ; preds = %50, %35
  %65 = phi i64 [ %45, %35 ], [ %60, %50 ]
  %66 = and i64 %65, 1
  %67 = icmp eq i64 %66, 0
  %68 = bitcast %class.SkTArray.467* %0 to i8**
  br i1 %67, label %72, label %69

69:                                               ; preds = %64
  %70 = load i8*, i8** %68, align 8
  tail call void @_Z7sk_freePv(i8* %70) #14
  %71 = load i64, i64* %4, align 8
  br label %72

72:                                               ; preds = %64, %69
  %73 = phi i64 [ %71, %69 ], [ %65, %64 ]
  store i8* %44, i8** %68, align 8
  %74 = and i64 %73, -4294967298
  %75 = or i64 %74, 1
  store i64 %75, i64* %4, align 8
  br label %76

76:                                               ; preds = %72, %32, %21
  ret void
}

declare void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN4SkSL11IRGenerator15convertFunctionERKNS6_7ASTNodeEE3$_5S2_EEEEvPKNS0_16__policy_storageE"(%"union.std::__1::__function::__policy_storage"* nocapture readonly) #0 align 2 {
  %2 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.SkSL::IRGenerator"**
  %3 = load %"class.SkSL::IRGenerator"*, %"class.SkSL::IRGenerator"** %2, align 8
  %4 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %3, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %57, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %3, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %8, align 8
  %10 = icmp eq %"struct.std::__1::__hash_node_base.91"* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %7, %11
  %12 = phi %"struct.std::__1::__hash_node_base.91"* [ %14, %11 ], [ %9, %7 ]
  %13 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91", %"struct.std::__1::__hash_node_base.91"* %12, i64 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %13, align 8
  %15 = bitcast %"struct.std::__1::__hash_node_base.91"* %12 to i8*
  tail call void @_ZdlPv(i8* %15) #15
  %16 = icmp eq %"struct.std::__1::__hash_node_base.91"* %14, null
  br i1 %16, label %17, label %11

17:                                               ; preds = %11, %7
  store %"struct.std::__1::__hash_node_base.91"* null, %"struct.std::__1::__hash_node_base.91"** %8, align 8
  %18 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %3, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %39, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.SkSL::IRGenerator", %"class.SkSL::IRGenerator"* %3, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = add i64 %19, -1
  %24 = and i64 %19, 3
  %25 = icmp ult i64 %23, 3
  br i1 %25, label %28, label %26

26:                                               ; preds = %21
  %27 = sub i64 %19, %24
  br label %40

28:                                               ; preds = %40, %21
  %29 = phi i64 [ 0, %21 ], [ %54, %40 ]
  %30 = icmp eq i64 %24, 0
  br i1 %30, label %39, label %31

31:                                               ; preds = %28, %31
  %32 = phi i64 [ %36, %31 ], [ %29, %28 ]
  %33 = phi i64 [ %37, %31 ], [ %24, %28 ]
  %34 = load %"struct.std::__1::__hash_node_base.91"**, %"struct.std::__1::__hash_node_base.91"*** %22, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %34, i64 %32
  store %"struct.std::__1::__hash_node_base.91"* null, %"struct.std::__1::__hash_node_base.91"** %35, align 8
  %36 = add nuw i64 %32, 1
  %37 = add i64 %33, -1
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %39, label %31, !llvm.loop !165

39:                                               ; preds = %28, %31, %17
  store i64 0, i64* %4, align 8
  br label %57

40:                                               ; preds = %40, %26
  %41 = phi i64 [ 0, %26 ], [ %54, %40 ]
  %42 = phi i64 [ %27, %26 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.91"**, %"struct.std::__1::__hash_node_base.91"*** %22, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.91"* null, %"struct.std::__1::__hash_node_base.91"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.91"**, %"struct.std::__1::__hash_node_base.91"*** %22, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.91"* null, %"struct.std::__1::__hash_node_base.91"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.91"**, %"struct.std::__1::__hash_node_base.91"*** %22, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.91"* null, %"struct.std::__1::__hash_node_base.91"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.91"**, %"struct.std::__1::__hash_node_base.91"*** %22, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.91"* null, %"struct.std::__1::__hash_node_base.91"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %28, label %40

57:                                               ; preds = %1, %39
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN4SkSL8VariableENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.251"*, %"class.std::__1::unique_ptr.218"* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.251", %"class.std::__1::vector.251"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.218"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.251"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.251"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.251", %"class.std::__1::vector.251"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.218"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #16
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #15
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.218"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.218"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.218"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.218"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.SkSL::Variable"* null, %"class.SkSL::Variable"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.218"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.218"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.251", %"class.std::__1::vector.251"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.218"*, %"class.std::__1::unique_ptr.218"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.218"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.218"*, %"class.std::__1::unique_ptr.218"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.218"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.SkSL::Variable"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.218"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.218"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.218"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.SkSL::Variable"* null, %"class.SkSL::Variable"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.218"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !166

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.218"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.218"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.218"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.218"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.218"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.218"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.SkSL::Variable"* null, %"class.SkSL::Variable"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.218"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.218"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.SkSL::Variable"* null, %"class.SkSL::Variable"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.218"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.218"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.SkSL::Variable"* null, %"class.SkSL::Variable"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.218"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.218"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.SkSL::Variable"* null, %"class.SkSL::Variable"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.218"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.218"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.SkSL::Variable"* null, %"class.SkSL::Variable"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.218"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.218"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.SkSL::Variable"* null, %"class.SkSL::Variable"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.218"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.218"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.SkSL::Variable"* null, %"class.SkSL::Variable"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.218"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.218"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.SkSL::Variable"* null, %"class.SkSL::Variable"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.218"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.218"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.218"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.218"*, %"class.std::__1::unique_ptr.218"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.218"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.218"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.218"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.218"*
  %138 = icmp eq %"class.std::__1::unique_ptr.218"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.218"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %142, align 8
  store %"class.SkSL::Variable"* null, %"class.SkSL::Variable"** %142, align 8
  %144 = icmp eq %"class.SkSL::Variable"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.SkSL::Variable"* %143 to void (%"class.SkSL::Variable"*)***
  %147 = load void (%"class.SkSL::Variable"*)**, void (%"class.SkSL::Variable"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.SkSL::Variable"*)*, void (%"class.SkSL::Variable"*)** %147, i64 1
  %149 = load void (%"class.SkSL::Variable"*)*, void (%"class.SkSL::Variable"*)** %148, align 8
  tail call void %149(%"class.SkSL::Variable"* nonnull %143) #14
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.218"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #15
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL17FunctionPrototypeD0Ev(%"class.SkSL::FunctionPrototype"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.SkSL::FunctionPrototype"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL17FunctionPrototype11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::FunctionPrototype"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #14
  %5 = getelementptr inbounds %"class.SkSL::FunctionPrototype", %"class.SkSL::FunctionPrototype"* %1, i64 0, i32 1
  %6 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %5, align 8
  call void @_ZNK4SkSL19FunctionDeclaration11descriptionEv(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::FunctionDeclaration"* %6) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* sret %0, %"class.SkSL::String"* nonnull %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.145, i64 0, i64 0)) #14
  %7 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %13) #15
  br label %14

14:                                               ; preds = %2, %11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::ProgramElement"* @_ZNK4SkSL17FunctionPrototype5cloneEv(%"class.SkSL::FunctionPrototype"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::FunctionPrototype", %"class.SkSL::FunctionPrototype"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.SkSL::FunctionPrototype", %"class.SkSL::FunctionPrototype"* %0, i64 0, i32 1
  %4 = bitcast %"class.SkSL::FunctionDeclaration"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #14
  %7 = load i32, i32* %2, align 4
  %8 = getelementptr inbounds i8, i8* %6, i64 8
  %9 = bitcast i8* %8 to i32*
  store i32 %7, i32* %9, align 8
  %10 = getelementptr inbounds i8, i8* %6, i64 12
  %11 = bitcast i8* %10 to i32*
  store i32 3, i32* %11, align 4
  %12 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL17FunctionPrototypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds i8, i8* %6, i64 16
  %14 = bitcast i8* %13 to i64*
  store i64 %5, i64* %14, align 8
  %15 = getelementptr inbounds i8, i8* %6, i64 24
  store i8 0, i8* %15, align 8
  %16 = bitcast i8* %6 to %"class.SkSL::ProgramElement"*
  ret %"class.SkSL::ProgramElement"* %16
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.116"*, i8 } @_ZNSt3__112__hash_tableIPKN4SkSL4TypeENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.112"*, %"class.SkSL::Type"** dereferenceable(8), %"class.SkSL::Type"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %1, align 8
  %5 = ptrtoint %"class.SkSL::Type"* %4 to i64
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.112", %"class.std::__1::__hash_table.112"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %66, label %22

22:                                               ; preds = %3
  %23 = tail call i64 @llvm.ctpop.i64(i64 %20) #14, !range !99
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %18, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table.112", %"class.std::__1::__hash_table.112"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.116"**, %"struct.std::__1::__hash_node_base.116"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.116"*, %"struct.std::__1::__hash_node_base.116"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.116"*, %"struct.std::__1::__hash_node_base.116"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.116"* %37, null
  br i1 %38, label %66, label %39

39:                                               ; preds = %32
  %40 = add i64 %20, -1
  br label %41

41:                                               ; preds = %39, %61
  %42 = phi %"struct.std::__1::__hash_node_base.116"* [ %44, %61 ], [ %37, %39 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.116", %"struct.std::__1::__hash_node_base.116"* %42, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base.116"*, %"struct.std::__1::__hash_node_base.116"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base.116"* %44, null
  br i1 %45, label %66, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.116", %"struct.std::__1::__hash_node_base.116"* %44, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base.116"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %18
  br i1 %50, label %61, label %51

51:                                               ; preds = %46
  br i1 %24, label %54, label %52

52:                                               ; preds = %51
  %53 = and i64 %49, %40
  br label %58

54:                                               ; preds = %51
  %55 = icmp ult i64 %49, %20
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %49, %20
  br label %58

58:                                               ; preds = %52, %54, %56
  %59 = phi i64 [ %53, %52 ], [ %57, %56 ], [ %49, %54 ]
  %60 = icmp eq i64 %59, %33
  br i1 %60, label %61, label %66

61:                                               ; preds = %46, %58
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.116", %"struct.std::__1::__hash_node_base.116"* %44, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base.116"* %62 to %"class.SkSL::Type"**
  %64 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %63, align 8
  %65 = icmp eq %"class.SkSL::Type"* %64, %4
  br i1 %65, label %154, label %41

66:                                               ; preds = %41, %58, %32, %3
  %67 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %58 ], [ %33, %41 ]
  %68 = tail call i8* @_Znwm(i64 24) #15, !noalias !167
  %69 = getelementptr inbounds i8, i8* %68, i64 16
  %70 = bitcast %"class.SkSL::Type"** %2 to i64*
  %71 = load i64, i64* %70, align 8, !noalias !167
  %72 = bitcast i8* %69 to i64*
  store i64 %71, i64* %72, align 8, !noalias !167
  %73 = getelementptr inbounds i8, i8* %68, i64 8
  %74 = bitcast i8* %73 to i64*
  store i64 %18, i64* %74, align 8, !noalias !167
  %75 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.116"**
  store %"struct.std::__1::__hash_node_base.116"* null, %"struct.std::__1::__hash_node_base.116"** %75, align 8, !noalias !167
  %76 = getelementptr inbounds %"class.std::__1::__hash_table.112", %"class.std::__1::__hash_table.112"* %0, i64 0, i32 2, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 1
  %79 = uitofp i64 %78 to float
  %80 = uitofp i64 %20 to float
  %81 = getelementptr inbounds %"class.std::__1::__hash_table.112", %"class.std::__1::__hash_table.112"* %0, i64 0, i32 3, i32 0, i32 0
  %82 = load float, float* %81, align 4
  %83 = fmul float %82, %80
  %84 = fcmp olt float %83, %79
  %85 = or i1 %21, %84
  br i1 %85, label %86, label %109

86:                                               ; preds = %66
  %87 = shl i64 %20, 1
  %88 = icmp ult i64 %20, 3
  %89 = tail call i64 @llvm.ctpop.i64(i64 %20) #14, !range !99
  %90 = icmp ugt i64 %89, 1
  %91 = or i1 %88, %90
  %92 = zext i1 %91 to i64
  %93 = or i64 %87, %92
  %94 = fdiv float %79, %82
  %95 = tail call float @llvm.ceil.f32(float %94) #14
  %96 = fptoui float %95 to i64
  %97 = icmp ult i64 %93, %96
  %98 = select i1 %97, i64 %96, i64 %93
  tail call void @_ZNSt3__112__hash_tableIPKN4SkSL4TypeENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.112"* %0, i64 %98)
  %99 = load i64, i64* %19, align 8
  %100 = tail call i64 @llvm.ctpop.i64(i64 %99) #14, !range !99
  %101 = icmp ugt i64 %100, 1
  br i1 %101, label %105, label %102

102:                                              ; preds = %86
  %103 = add i64 %99, -1
  %104 = and i64 %103, %18
  br label %109

105:                                              ; preds = %86
  %106 = icmp ult i64 %18, %99
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = urem i64 %18, %99
  br label %109

109:                                              ; preds = %107, %105, %102, %66
  %110 = phi i64 [ %20, %66 ], [ %99, %102 ], [ %99, %105 ], [ %99, %107 ]
  %111 = phi i64 [ %67, %66 ], [ %104, %102 ], [ %18, %105 ], [ %108, %107 ]
  %112 = getelementptr inbounds %"class.std::__1::__hash_table.112", %"class.std::__1::__hash_table.112"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base.116"**, %"struct.std::__1::__hash_node_base.116"*** %112, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base.116"*, %"struct.std::__1::__hash_node_base.116"** %113, i64 %111
  %115 = load %"struct.std::__1::__hash_node_base.116"*, %"struct.std::__1::__hash_node_base.116"** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.116"* %115, null
  br i1 %116, label %117, label %143

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.112", %"class.std::__1::__hash_table.112"* %0, i64 0, i32 1, i32 0, i32 0
  %119 = bitcast %"struct.std::__1::__hash_node_base.116"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast i8* %68 to i64*
  store i64 %120, i64* %121, align 8
  %122 = bitcast %"struct.std::__1::__hash_node_base.116"* %118 to i8**
  store i8* %68, i8** %122, align 8
  store %"struct.std::__1::__hash_node_base.116"* %118, %"struct.std::__1::__hash_node_base.116"** %114, align 8
  %123 = load %"struct.std::__1::__hash_node_base.116"*, %"struct.std::__1::__hash_node_base.116"** %75, align 8
  %124 = icmp eq %"struct.std::__1::__hash_node_base.116"* %123, null
  br i1 %124, label %150, label %125

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.116", %"struct.std::__1::__hash_node_base.116"* %123, i64 1
  %127 = bitcast %"struct.std::__1::__hash_node_base.116"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = tail call i64 @llvm.ctpop.i64(i64 %110) #14, !range !99
  %130 = icmp ugt i64 %129, 1
  br i1 %130, label %134, label %131

131:                                              ; preds = %125
  %132 = add i64 %110, -1
  %133 = and i64 %128, %132
  br label %138

134:                                              ; preds = %125
  %135 = icmp ult i64 %128, %110
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = urem i64 %128, %110
  br label %138

138:                                              ; preds = %131, %134, %136
  %139 = phi i64 [ %133, %131 ], [ %137, %136 ], [ %128, %134 ]
  %140 = load %"struct.std::__1::__hash_node_base.116"**, %"struct.std::__1::__hash_node_base.116"*** %112, align 8
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.116"*, %"struct.std::__1::__hash_node_base.116"** %140, i64 %139
  %142 = bitcast %"struct.std::__1::__hash_node_base.116"** %141 to i8**
  br label %148

143:                                              ; preds = %109
  %144 = bitcast %"struct.std::__1::__hash_node_base.116"* %115 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast i8* %68 to i64*
  store i64 %145, i64* %146, align 8
  %147 = bitcast %"struct.std::__1::__hash_node_base.116"* %115 to i8**
  br label %148

148:                                              ; preds = %138, %143
  %149 = phi i8** [ %147, %143 ], [ %142, %138 ]
  store i8* %68, i8** %149, align 8
  br label %150

150:                                              ; preds = %148, %117
  %151 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.116"*
  %152 = load i64, i64* %76, align 8
  %153 = add i64 %152, 1
  store i64 %153, i64* %76, align 8
  br label %154

154:                                              ; preds = %61, %150
  %155 = phi i8 [ 1, %150 ], [ 0, %61 ]
  %156 = phi %"struct.std::__1::__hash_node_base.116"* [ %151, %150 ], [ %44, %61 ]
  %157 = insertvalue { %"struct.std::__1::__hash_node_base.116"*, i8 } undef, %"struct.std::__1::__hash_node_base.116"* %156, 0
  %158 = insertvalue { %"struct.std::__1::__hash_node_base.116"*, i8 } %157, i8 %155, 1
  ret { %"struct.std::__1::__hash_node_base.116"*, i8 } %158
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPKN4SkSL4TypeENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.112"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !99
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #14
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.112", %"class.std::__1::__hash_table.112"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIPKN4SkSL4TypeENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.112"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #14, !range !99
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.112", %"class.std::__1::__hash_table.112"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.112", %"class.std::__1::__hash_table.112"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #14
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #14, !range !99
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #14
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIPKN4SkSL4TypeENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.112"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPKN4SkSL4TypeENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.112"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.112", %"class.std::__1::__hash_table.112"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #16
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #15
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.112", %"class.std::__1::__hash_table.112"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.116"**, %"struct.std::__1::__hash_node_base.116"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.112"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.116"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.116"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #15
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.118", %"class.std::__1::__bucket_list_deallocator.118"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.116"**, %"struct.std::__1::__hash_node_base.116"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.116"*, %"struct.std::__1::__hash_node_base.116"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.116"* null, %"struct.std::__1::__hash_node_base.116"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !170

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.112", %"class.std::__1::__hash_table.112"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.116", %"struct.std::__1::__hash_node_base.116"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.116"*, %"struct.std::__1::__hash_node_base.116"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.116"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.116"**, %"struct.std::__1::__hash_node_base.116"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.116"*, %"struct.std::__1::__hash_node_base.116"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.116"* null, %"struct.std::__1::__hash_node_base.116"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.116"**, %"struct.std::__1::__hash_node_base.116"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.116"*, %"struct.std::__1::__hash_node_base.116"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.116"* null, %"struct.std::__1::__hash_node_base.116"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.116"**, %"struct.std::__1::__hash_node_base.116"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.116"*, %"struct.std::__1::__hash_node_base.116"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.116"* null, %"struct.std::__1::__hash_node_base.116"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.116"**, %"struct.std::__1::__hash_node_base.116"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.116"*, %"struct.std::__1::__hash_node_base.116"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.116"* null, %"struct.std::__1::__hash_node_base.116"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.116", %"struct.std::__1::__hash_node_base.116"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.116"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #14, !range !99
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.116"**, %"struct.std::__1::__hash_node_base.116"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.116"*, %"struct.std::__1::__hash_node_base.116"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.116"* %36, %"struct.std::__1::__hash_node_base.116"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.116", %"struct.std::__1::__hash_node_base.116"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.116"*, %"struct.std::__1::__hash_node_base.116"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.116"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.116"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.116"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.116", %"struct.std::__1::__hash_node_base.116"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.116"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.116"**, %"struct.std::__1::__hash_node_base.116"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.116"*, %"struct.std::__1::__hash_node_base.116"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.116"*, %"struct.std::__1::__hash_node_base.116"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.116"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.116", %"struct.std::__1::__hash_node_base.116"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.116"* %101 to %"class.SkSL::Type"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.116"* %82, %"struct.std::__1::__hash_node_base.116"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.116"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.116", %"struct.std::__1::__hash_node_base.116"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.116"*, %"struct.std::__1::__hash_node_base.116"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.116"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.116", %"struct.std::__1::__hash_node_base.116"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.116"* %110 to %"class.SkSL::Type"**
  %112 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %102, align 8
  %113 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %111, align 8
  %114 = icmp eq %"class.SkSL::Type"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.116"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.116"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.116"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.116"**, %"struct.std::__1::__hash_node_base.116"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.116"*, %"struct.std::__1::__hash_node_base.116"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.116"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.116"**, %"struct.std::__1::__hash_node_base.116"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.116"*, %"struct.std::__1::__hash_node_base.116"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.116"*, %"struct.std::__1::__hash_node_base.116"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.116", %"struct.std::__1::__hash_node_base.116"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.116"* %80, %"struct.std::__1::__hash_node_base.116"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.116"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.116", %"struct.std::__1::__hash_node_base.116"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.116"*, %"struct.std::__1::__hash_node_base.116"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.116"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.112", %"class.std::__1::__hash_table.112"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.116"**, %"struct.std::__1::__hash_node_base.116"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.116"** null, %"struct.std::__1::__hash_node_base.116"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.116"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.116"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #15
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.118", %"class.std::__1::__bucket_list_deallocator.118"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL5FieldD0Ev(%"class.SkSL::Field"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.SkSL::Field"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL5Field11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::Field"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #14
  %6 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.SkSL::Field", %"class.SkSL::Field"* %1, i64 0, i32 1
  %8 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %7, align 8
  call void @_ZNK4SkSL8Variable11descriptionEv(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::Variable"* %8)
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::String"* nonnull %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.177, i64 0, i64 0)) #14
  %9 = getelementptr inbounds %"class.SkSL::Field", %"class.SkSL::Field"* %1, i64 0, i32 0, i32 1, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.SkSL::Field", %"class.SkSL::Field"* %1, i64 0, i32 0, i32 1, i32 1
  %12 = load i64, i64* %11, align 8
  call void @_ZNK4SkSL6StringplENS_14StringFragmentE(%"class.SkSL::String"* sret %0, %"class.SkSL::String"* nonnull %3, i8* %10, i64 %12) #14
  %13 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %19) #15
  br label %20

20:                                               ; preds = %2, %17
  %21 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %27) #15
  br label %28

28:                                               ; preds = %20, %25
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL8Variable11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::Variable"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #14
  %7 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #14
  %8 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #14
  %9 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %1, i64 0, i32 2
  %10 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %9, align 8
  call void @_ZNK4SkSL9Modifiers11descriptionEv(%"class.SkSL::String"* nonnull sret %5, %"struct.SkSL::Modifiers"* %10)
  %11 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %1, i64 0, i32 0, i32 2
  %12 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %11, align 8
  %13 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %12, i64 0, i32 0, i32 1, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %12, i64 0, i32 0, i32 1, i32 1
  %16 = load i64, i64* %15, align 8
  call void @_ZNK4SkSL6StringplENS_14StringFragmentE(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::String"* nonnull %5, i8* %14, i64 %16) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::String"* nonnull %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.171, i64 0, i64 0)) #14
  %17 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %1, i64 0, i32 0, i32 1, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %1, i64 0, i32 0, i32 1, i32 1
  %20 = load i64, i64* %19, align 8
  call void @_ZNK4SkSL6StringplENS_14StringFragmentE(%"class.SkSL::String"* sret %0, %"class.SkSL::String"* nonnull %3, i8* %18, i64 %20) #14
  %21 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %2
  %26 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %27) #15
  br label %28

28:                                               ; preds = %2, %25
  %29 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %35) #15
  br label %36

36:                                               ; preds = %28, %33
  %37 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %43) #15
  br label %44

44:                                               ; preds = %36, %41
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL14InterfaceBlockD2Ev(%"class.SkSL::InterfaceBlock"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL14InterfaceBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 5, i32 1
  %4 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %3, align 8
  %5 = icmp eq %"class.std::__1::__shared_weak_count"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0, i32 1
  %8 = atomicrmw add i64* %7, i64 -1 acq_rel
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0
  %12 = bitcast %"class.std::__1::__shared_weak_count"* %4 to void (%"class.std::__1::__shared_count"*)***
  %13 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %13, i64 2
  %15 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %14, align 8
  tail call void %15(%"class.std::__1::__shared_count"* %11) #14
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %4) #14
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 3, i32 0
  %18 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  tail call void @_ZdlPv(i8* %24) #15
  br label %25

25:                                               ; preds = %16, %22
  %26 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 2, i32 0
  %27 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  tail call void @_ZdlPv(i8* %33) #15
  br label %34

34:                                               ; preds = %25, %31
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL14InterfaceBlockD0Ev(%"class.SkSL::InterfaceBlock"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL14InterfaceBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 5, i32 1
  %4 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %3, align 8
  %5 = icmp eq %"class.std::__1::__shared_weak_count"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0, i32 1
  %8 = atomicrmw add i64* %7, i64 -1 acq_rel
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0
  %12 = bitcast %"class.std::__1::__shared_weak_count"* %4 to void (%"class.std::__1::__shared_count"*)***
  %13 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %13, i64 2
  %15 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %14, align 8
  tail call void %15(%"class.std::__1::__shared_count"* %11) #14
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %4) #14
  br label %16

16:                                               ; preds = %10, %6, %1
  %17 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 3, i32 0
  %18 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  tail call void @_ZdlPv(i8* %24) #15
  br label %25

25:                                               ; preds = %22, %16
  %26 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 2, i32 0
  %27 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  tail call void @_ZdlPv(i8* %33) #15
  br label %34

34:                                               ; preds = %25, %31
  %35 = bitcast %"class.SkSL::InterfaceBlock"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %35) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL14InterfaceBlock11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::InterfaceBlock"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #14
  %10 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.SkSL::String"* %4 to i8*
  %12 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #14
  %13 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #14
  %14 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %1, i64 0, i32 1
  %15 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %14, align 8
  %16 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %15, i64 0, i32 2
  %17 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %16, align 8
  call void @_ZNK4SkSL9Modifiers11descriptionEv(%"class.SkSL::String"* nonnull sret %5, %"struct.SkSL::Modifiers"* %17)
  %18 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %1, i64 0, i32 2
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::String"* nonnull %5, %"class.SkSL::String"* dereferenceable(24) %18) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::String"* nonnull %4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.178, i64 0, i64 0)) #14
  %19 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %25) #15
  br label %26

26:                                               ; preds = %2, %23
  %27 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %33) #15
  br label %34

34:                                               ; preds = %26, %31
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #14
  %35 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %14, align 8
  %36 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %35, i64 0, i32 0, i32 2
  %37 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %36, align 8
  %38 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %37, i64 0, i32 3
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %46

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %37, i64 0, i32 6
  %43 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %42, align 8
  %44 = icmp eq %"class.SkSL::Type"* %43, null
  %45 = select i1 %44, %"class.SkSL::Type"* %37, %"class.SkSL::Type"* %43
  br label %46

46:                                               ; preds = %41, %34
  %47 = phi %"class.SkSL::Type"* [ %45, %41 ], [ %37, %34 ]
  %48 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %47, i64 0, i32 10, i32 0, i32 0
  %49 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %48, align 8
  %50 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %47, i64 0, i32 10, i32 0, i32 1
  %51 = load %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"** %50, align 8
  %52 = icmp eq %"struct.SkSL::Type::Field"* %49, %51
  br i1 %52, label %62, label %53

53:                                               ; preds = %46
  %54 = bitcast %"class.SkSL::String"* %6 to i8*
  %55 = bitcast %"class.SkSL::String"* %7 to i8*
  %56 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %77

62:                                               ; preds = %89, %46
  %63 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* nonnull %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.180, i64 0, i64 0)) #14
  %64 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %1, i64 0, i32 3
  %65 = bitcast %"class.SkSL::String"* %64 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %62
  %70 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %71 = load i64, i64* %70, align 8
  br label %74

72:                                               ; preds = %62
  %73 = zext i8 %67 to i64
  br label %74

74:                                               ; preds = %69, %72
  %75 = phi i64 [ %71, %69 ], [ %73, %72 ]
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %111, label %92

77:                                               ; preds = %53, %89
  %78 = phi %"struct.SkSL::Type::Field"* [ %49, %53 ], [ %90, %89 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #14
  call void @_ZNK4SkSL4Type5Field11descriptionEv(%"class.SkSL::String"* nonnull sret %7, %"struct.SkSL::Type::Field"* %78)
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %6, %"class.SkSL::String"* nonnull %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.179, i64 0, i64 0)) #14
  %79 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* nonnull %3, %"class.SkSL::String"* nonnull dereferenceable(24) %6) #14
  %80 = load i8, i8* %57, align 1
  %81 = icmp slt i8 %80, 0
  br i1 %81, label %82, label %84

82:                                               ; preds = %77
  %83 = load i8*, i8** %58, align 8
  call void @_ZdlPv(i8* %83) #15
  br label %84

84:                                               ; preds = %77, %82
  %85 = load i8, i8* %60, align 1
  %86 = icmp slt i8 %85, 0
  br i1 %86, label %87, label %89

87:                                               ; preds = %84
  %88 = load i8*, i8** %61, align 8
  call void @_ZdlPv(i8* %88) #15
  br label %89

89:                                               ; preds = %84, %87
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #14
  %90 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %78, i64 1
  %91 = icmp eq %"struct.SkSL::Type::Field"* %90, %51
  br i1 %91, label %62, label %77

92:                                               ; preds = %74
  %93 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93) #14
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.171, i64 0, i64 0), %"class.SkSL::String"* dereferenceable(24) %64) #14
  %94 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* nonnull %3, %"class.SkSL::String"* nonnull dereferenceable(24) %8) #14
  %95 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %95, i64 0, i32 1, i32 0
  %97 = load i8, i8* %96, align 1
  %98 = icmp slt i8 %97, 0
  br i1 %98, label %99, label %102

99:                                               ; preds = %92
  %100 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load i8*, i8** %100, align 8
  call void @_ZdlPv(i8* %101) #15
  br label %102

102:                                              ; preds = %92, %99
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93) #14
  %103 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %1, i64 0, i32 4
  %104 = load i32, i32* %103, align 8
  %105 = icmp sgt i32 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %102
  call void (%"class.SkSL::String"*, i8*, ...) @_ZN4SkSL6String7appendfEPKcz(%"class.SkSL::String"* nonnull %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.181, i64 0, i64 0), i32 %104) #14
  br label %111

107:                                              ; preds = %102
  %108 = icmp eq i32 %104, -1
  br i1 %108, label %109, label %111

109:                                              ; preds = %107
  %110 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* nonnull %3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.182, i64 0, i64 0)) #14
  br label %111

111:                                              ; preds = %106, %109, %107, %74
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* sret %0, %"class.SkSL::String"* nonnull %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.145, i64 0, i64 0)) #14
  %112 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %113 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %112, i64 0, i32 1, i32 0
  %114 = load i8, i8* %113, align 1
  %115 = icmp slt i8 %114, 0
  br i1 %115, label %116, label %118

116:                                              ; preds = %111
  %117 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %117) #15
  br label %118

118:                                              ; preds = %111, %116
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::ProgramElement"* @_ZNK4SkSL14InterfaceBlock5cloneEv(%"class.SkSL::InterfaceBlock"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.SkSL::String", align 8
  %3 = alloca %"class.SkSL::String", align 8
  %4 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 1
  %6 = bitcast %"class.SkSL::Variable"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 4
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 5, i32 0
  %13 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %12, align 8
  %14 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 5, i32 1
  %15 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %14, align 8
  %16 = icmp eq %"class.std::__1::__shared_weak_count"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %15, i64 0, i32 0, i32 1
  %19 = atomicrmw add i64* %18, i64 1 monotonic
  br label %20

20:                                               ; preds = %1, %17
  %21 = tail call { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } @_ZN4SkSL11SymbolTable13WrapIfBuiltinENSt3__110shared_ptrIS0_EE(%"class.SkSL::SymbolTable"* %13, %"class.std::__1::__shared_weak_count"* %15)
  %22 = extractvalue { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } %21, 0
  %23 = ptrtoint %"class.SkSL::SymbolTable"* %22 to i64
  %24 = extractvalue { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } %21, 1
  %25 = ptrtoint %"class.std::__1::__shared_weak_count"* %24 to i64
  %26 = bitcast %"class.SkSL::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26)
  %27 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27)
  %28 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 96) #14
  %29 = load i32, i32* %4, align 4
  %30 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %20
  %35 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* align 8 %35, i64 24, i1 false) #14
  br label %42

36:                                               ; preds = %20
  %37 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0
  %38 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %37, i8* %39, i64 %41) #14
  br label %42

42:                                               ; preds = %36, %34
  %43 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %49, label %47

47:                                               ; preds = %42
  %48 = bitcast %"class.SkSL::String"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %27, i8* align 8 %48, i64 24, i1 false) #14
  br label %55

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0
  %51 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %"class.SkSL::InterfaceBlock", %"class.SkSL::InterfaceBlock"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %50, i8* %52, i64 %54) #14
  br label %55

55:                                               ; preds = %47, %49
  %56 = getelementptr inbounds i8, i8* %28, i64 8
  %57 = bitcast i8* %56 to i32*
  store i32 %29, i32* %57, align 8
  %58 = getelementptr inbounds i8, i8* %28, i64 12
  %59 = bitcast i8* %58 to i32*
  store i32 5, i32* %59, align 4
  %60 = bitcast i8* %28 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL14InterfaceBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %60, align 8
  %61 = getelementptr inbounds i8, i8* %28, i64 16
  %62 = bitcast i8* %61 to i64*
  store i64 %7, i64* %62, align 8
  %63 = getelementptr inbounds i8, i8* %28, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* nonnull align 8 %26, i64 24, i1 false) #14
  %64 = getelementptr inbounds i8, i8* %28, i64 48
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* nonnull align 8 %27, i64 24, i1 false) #14
  %65 = getelementptr inbounds i8, i8* %28, i64 72
  %66 = bitcast i8* %65 to i32*
  store i32 %11, i32* %66, align 8
  %67 = getelementptr inbounds i8, i8* %28, i64 80
  %68 = bitcast i8* %67 to i64*
  store i64 %23, i64* %68, align 8
  %69 = getelementptr inbounds i8, i8* %28, i64 88
  %70 = bitcast i8* %69 to i64*
  store i64 %25, i64* %70, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27)
  %71 = bitcast i8* %28 to %"class.SkSL::ProgramElement"*
  ret %"class.SkSL::ProgramElement"* %71
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL4Type5Field11descriptionEv(%"class.SkSL::String"* noalias sret, %"struct.SkSL::Type::Field"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #14
  %7 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #14
  %8 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #14
  %9 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %1, i64 0, i32 2
  %10 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %9, align 8
  %11 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %10, i64 0, i32 18
  %12 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %11, align 8, !noalias !171
  %13 = icmp eq %"class.SkSL::Type"* %12, null
  %14 = select i1 %13, %"class.SkSL::Type"* %10, %"class.SkSL::Type"* %12
  %15 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %14, i64 0, i32 0, i32 1, i32 0
  %16 = load i8*, i8** %15, align 8, !noalias !171
  %17 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %14, i64 0, i32 0, i32 1, i32 1
  %18 = load i64, i64* %17, align 8, !noalias !171
  %19 = icmp ugt i64 %18, -17
  br i1 %19, label %20, label %22

20:                                               ; preds = %2
  %21 = bitcast %"class.SkSL::String"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %21) #16
  unreachable

22:                                               ; preds = %2
  %23 = icmp ult i64 %18, 23
  br i1 %23, label %32, label %24

24:                                               ; preds = %22
  %25 = add nuw i64 %18, 16
  %26 = and i64 %25, -16
  %27 = tail call i8* @_Znwm(i64 %26) #15
  %28 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %27, i8** %28, align 8, !alias.scope !171
  %29 = or i64 %26, -9223372036854775808
  %30 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %29, i64* %30, align 8, !alias.scope !171
  %31 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %18, i64* %31, align 8, !alias.scope !171
  br label %37

32:                                               ; preds = %22
  %33 = trunc i64 %18 to i8
  %34 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  store i8 %33, i8* %35, align 1, !alias.scope !171
  %36 = icmp eq i64 %18, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %32, %24
  %38 = phi i8* [ %27, %24 ], [ %8, %32 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %38, i8* align 1 %16, i64 %18, i1 false) #14
  br label %39

39:                                               ; preds = %32, %37
  %40 = phi i8* [ %8, %32 ], [ %38, %37 ]
  %41 = getelementptr inbounds i8, i8* %40, i64 %18
  store i8 0, i8* %41, align 1
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::String"* nonnull %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.171, i64 0, i64 0)) #14
  %42 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %1, i64 0, i32 1, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = getelementptr inbounds %"struct.SkSL::Type::Field", %"struct.SkSL::Type::Field"* %1, i64 0, i32 1, i32 1
  %45 = load i64, i64* %44, align 8
  call void @_ZNK4SkSL6StringplENS_14StringFragmentE(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::String"* nonnull %4, i8* %43, i64 %45) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* sret %0, %"class.SkSL::String"* nonnull %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.145, i64 0, i64 0)) #14
  %46 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %39
  %51 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @_ZdlPv(i8* %52) #15
  br label %53

53:                                               ; preds = %39, %50
  %54 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  call void @_ZdlPv(i8* %60) #15
  br label %61

61:                                               ; preds = %53, %58
  %62 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  call void @_ZdlPv(i8* %68) #15
  br label %69

69:                                               ; preds = %61, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #14
  ret void
}

declare void @_ZN4SkSL6String7appendfEPKcz(%"class.SkSL::String"*, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } @_ZN4SkSL11SymbolTable13WrapIfBuiltinENSt3__110shared_ptrIS0_EE(%"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.SkSL::SymbolTable"* %0 to i64
  %4 = icmp eq %"class.SkSL::SymbolTable"* %0, null
  br i1 %4, label %44, label %5

5:                                                ; preds = %2
  %6 = ptrtoint %"class.std::__1::__shared_weak_count"* %1 to i64
  %7 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 2
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %56, label %10

10:                                               ; preds = %5
  %11 = tail call i8* @_Znwm(i64 128) #15
  %12 = bitcast i8* %11 to i32 (...)***
  %13 = getelementptr inbounds i8, i8* %11, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN4SkSL11SymbolTableENS_9allocatorIS2_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %14 = getelementptr inbounds i8, i8* %11, i64 24
  %15 = bitcast i8* %14 to i64*
  store i64 %3, i64* %15, align 8
  %16 = getelementptr inbounds i8, i8* %11, i64 32
  %17 = bitcast i8* %16 to %"class.std::__1::__shared_weak_count"**
  store %"class.std::__1::__shared_weak_count"* %1, %"class.std::__1::__shared_weak_count"** %17, align 8
  %18 = icmp eq %"class.std::__1::__shared_weak_count"* %1, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %1, i64 0, i32 0, i32 1
  %21 = atomicrmw add i64* %20, i64 1 monotonic
  br label %22

22:                                               ; preds = %19, %10
  %23 = phi i1 [ %18, %19 ], [ true, %10 ]
  %24 = getelementptr inbounds i8, i8* %11, i64 40
  %25 = getelementptr inbounds i8, i8* %11, i64 72
  %26 = getelementptr inbounds i8, i8* %11, i64 120
  %27 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %0, i64 0, i32 6
  %28 = bitcast %"class.SkSL::ErrorReporter"** %27 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 48, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 25, i1 false)
  %29 = load i64, i64* %28, align 8
  %30 = bitcast i8* %26 to i64*
  store i64 %29, i64* %30, align 8
  br i1 %23, label %41, label %31

31:                                               ; preds = %22
  %32 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %1, i64 0, i32 0, i32 1
  %33 = atomicrmw add i64* %32, i64 -1 acq_rel
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %1, i64 0, i32 0
  %37 = bitcast %"class.std::__1::__shared_weak_count"* %1 to void (%"class.std::__1::__shared_count"*)***
  %38 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %38, i64 2
  %40 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %39, align 8
  tail call void %40(%"class.std::__1::__shared_count"* %36) #14
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %1) #14
  br label %41

41:                                               ; preds = %22, %31, %35
  %42 = ptrtoint i8* %14 to i64
  %43 = ptrtoint i8* %11 to i64
  br label %56

44:                                               ; preds = %2
  %45 = icmp eq %"class.std::__1::__shared_weak_count"* %1, null
  br i1 %45, label %56, label %46

46:                                               ; preds = %44
  %47 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %1, i64 0, i32 0, i32 1
  %48 = atomicrmw add i64* %47, i64 -1 acq_rel
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %56

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %1, i64 0, i32 0
  %52 = bitcast %"class.std::__1::__shared_weak_count"* %1 to void (%"class.std::__1::__shared_count"*)***
  %53 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %53, i64 2
  %55 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %54, align 8
  tail call void %55(%"class.std::__1::__shared_count"* %51) #14
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %1) #14
  br label %56

56:                                               ; preds = %5, %41, %44, %46, %50
  %57 = phi i64 [ 0, %44 ], [ 0, %46 ], [ 0, %50 ], [ %3, %5 ], [ %42, %41 ]
  %58 = phi i64 [ 0, %44 ], [ 0, %46 ], [ 0, %50 ], [ %6, %5 ], [ %43, %41 ]
  %59 = inttoptr i64 %57 to %"class.SkSL::SymbolTable"*
  %60 = insertvalue { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } undef, %"class.SkSL::SymbolTable"* %59, 0
  %61 = inttoptr i64 %58 to %"class.std::__1::__shared_weak_count"*
  %62 = insertvalue { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } %60, %"class.std::__1::__shared_weak_count"* %61, 1
  ret { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } %62
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN4SkSL6IRNodeENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.171"*, %"class.std::__1::unique_ptr.173"* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.171", %"class.std::__1::vector.171"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.173"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.171"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.171"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.171", %"class.std::__1::vector.171"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.173"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #16
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #15
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.173"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.173"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.173"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.173"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.173"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.173"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.173"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.SkSL::IRNode"* null, %"class.SkSL::IRNode"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.173"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.173"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.173"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.171", %"class.std::__1::vector.171"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.173"*, %"class.std::__1::unique_ptr.173"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.173"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.173"*, %"class.std::__1::unique_ptr.173"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.173"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.173"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.SkSL::IRNode"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.173"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.173"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.173"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.173"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.173"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.173"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.SkSL::IRNode"* null, %"class.SkSL::IRNode"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.173"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !174

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.173"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.173"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.173"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.173"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.173"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.173"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.173"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.173"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.173"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.SkSL::IRNode"* null, %"class.SkSL::IRNode"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.173"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.173"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.173"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.173"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.173"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.SkSL::IRNode"* null, %"class.SkSL::IRNode"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.173"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.173"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.173"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.173"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.173"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.SkSL::IRNode"* null, %"class.SkSL::IRNode"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.173"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.173"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.173"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.173"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.173"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.SkSL::IRNode"* null, %"class.SkSL::IRNode"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.173"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.173"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.173"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.173"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.173"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.SkSL::IRNode"* null, %"class.SkSL::IRNode"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.173"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.173"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.173"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.173"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.173"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.SkSL::IRNode"* null, %"class.SkSL::IRNode"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.173"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.173"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.173"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.173"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.173"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.SkSL::IRNode"* null, %"class.SkSL::IRNode"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.173"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.173"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.173"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.173"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.173"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.SkSL::IRNode"* null, %"class.SkSL::IRNode"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.173"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.173"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.173"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.173"*, %"class.std::__1::unique_ptr.173"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.173"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.173"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.173"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.173"*
  %138 = icmp eq %"class.std::__1::unique_ptr.173"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.173"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.173"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.173"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.SkSL::IRNode"*, %"class.SkSL::IRNode"** %142, align 8
  store %"class.SkSL::IRNode"* null, %"class.SkSL::IRNode"** %142, align 8
  %144 = icmp eq %"class.SkSL::IRNode"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.SkSL::IRNode"* %143 to void (%"class.SkSL::IRNode"*)***
  %147 = load void (%"class.SkSL::IRNode"*)**, void (%"class.SkSL::IRNode"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.SkSL::IRNode"*)*, void (%"class.SkSL::IRNode"*)** %147, i64 1
  %149 = load void (%"class.SkSL::IRNode"*)*, void (%"class.SkSL::IRNode"*)** %148, align 8
  tail call void %149(%"class.SkSL::IRNode"* nonnull %143) #14
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.173"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #15
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL4EnumD2Ev(%"class.SkSL::Enum"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Enum", %"class.SkSL::Enum"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL4EnumE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::Enum", %"class.SkSL::Enum"* %0, i64 0, i32 2, i32 1
  %4 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %3, align 8
  %5 = icmp eq %"class.std::__1::__shared_weak_count"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0, i32 1
  %8 = atomicrmw add i64* %7, i64 -1 acq_rel
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0
  %12 = bitcast %"class.std::__1::__shared_weak_count"* %4 to void (%"class.std::__1::__shared_count"*)***
  %13 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %13, i64 2
  %15 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %14, align 8
  tail call void %15(%"class.std::__1::__shared_count"* %11) #14
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %4) #14
  br label %16

16:                                               ; preds = %1, %6, %10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL4EnumD0Ev(%"class.SkSL::Enum"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Enum", %"class.SkSL::Enum"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL4EnumE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::Enum", %"class.SkSL::Enum"* %0, i64 0, i32 2, i32 1
  %4 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %3, align 8
  %5 = icmp eq %"class.std::__1::__shared_weak_count"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0, i32 1
  %8 = atomicrmw add i64* %7, i64 -1 acq_rel
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0
  %12 = bitcast %"class.std::__1::__shared_weak_count"* %4 to void (%"class.std::__1::__shared_count"*)***
  %13 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %13, i64 2
  %15 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %14, align 8
  tail call void %15(%"class.std::__1::__shared_count"* %11) #14
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %4) #14
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = bitcast %"class.SkSL::Enum"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %17) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL4Enum11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::Enum"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZNK4SkSL4Enum4codeEv(%"class.SkSL::String"* sret %0, %"class.SkSL::Enum"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::ProgramElement"* @_ZNK4SkSL4Enum5cloneEv(%"class.SkSL::Enum"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Enum", %"class.SkSL::Enum"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.SkSL::Enum", %"class.SkSL::Enum"* %0, i64 0, i32 1, i32 0
  %4 = bitcast i8** %3 to <2 x i64>*
  %5 = load <2 x i64>, <2 x i64>* %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::Enum", %"class.SkSL::Enum"* %0, i64 0, i32 2, i32 0
  %7 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %6, align 8
  %8 = getelementptr inbounds %"class.SkSL::Enum", %"class.SkSL::Enum"* %0, i64 0, i32 2, i32 1
  %9 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %8, align 8
  %10 = icmp eq %"class.std::__1::__shared_weak_count"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %9, i64 0, i32 0, i32 1
  %13 = atomicrmw add i64* %12, i64 1 monotonic
  br label %14

14:                                               ; preds = %1, %11
  %15 = tail call { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } @_ZN4SkSL11SymbolTable13WrapIfBuiltinENSt3__110shared_ptrIS0_EE(%"class.SkSL::SymbolTable"* %7, %"class.std::__1::__shared_weak_count"* %9)
  %16 = extractvalue { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } %15, 0
  %17 = ptrtoint %"class.SkSL::SymbolTable"* %16 to i64
  %18 = extractvalue { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* } %15, 1
  %19 = ptrtoint %"class.std::__1::__shared_weak_count"* %18 to i64
  %20 = getelementptr inbounds %"class.SkSL::Enum", %"class.SkSL::Enum"* %0, i64 0, i32 3
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 56) #14
  %23 = load i32, i32* %2, align 4
  %24 = getelementptr inbounds i8, i8* %22, i64 8
  %25 = bitcast i8* %24 to i32*
  store i32 %23, i32* %25, align 8
  %26 = getelementptr inbounds i8, i8* %22, i64 12
  %27 = bitcast i8* %26 to i32*
  store i32 0, i32* %27, align 4
  %28 = bitcast i8* %22 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL4EnumE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %28, align 8
  %29 = getelementptr inbounds i8, i8* %22, i64 16
  %30 = bitcast i8* %29 to <2 x i64>*
  store <2 x i64> %5, <2 x i64>* %30, align 8
  %31 = getelementptr inbounds i8, i8* %22, i64 32
  %32 = bitcast i8* %31 to i64*
  store i64 %17, i64* %32, align 8
  %33 = getelementptr inbounds i8, i8* %22, i64 40
  %34 = bitcast i8* %33 to i64*
  store i64 %19, i64* %34, align 8
  %35 = getelementptr inbounds i8, i8* %22, i64 48
  store i8 %21, i8* %35, align 8
  %36 = getelementptr inbounds i8, i8* %22, i64 49
  store i8 0, i8* %36, align 1
  %37 = bitcast i8* %22 to %"class.SkSL::ProgramElement"*
  ret %"class.SkSL::ProgramElement"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL4Enum4codeEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::Enum"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.anon.497, align 1
  %4 = alloca %class.anon.502, align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.std::__1::vector.488", align 8
  %9 = alloca %class.anon.495, align 8
  %10 = alloca %"class.SkSL::String", align 8
  %11 = alloca %"class.SkSL::String", align 8
  %12 = alloca %"class.SkSL::String", align 8
  %13 = alloca %"class.SkSL::String", align 8
  %14 = alloca %"class.SkSL::String", align 8
  %15 = alloca %"class.SkSL::String", align 8
  %16 = bitcast %"class.SkSL::String"* %5 to i8*
  %17 = bitcast %"class.SkSL::String"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #14
  %18 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #14
  %19 = getelementptr inbounds %"class.SkSL::Enum", %"class.SkSL::Enum"* %1, i64 0, i32 1, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %"class.SkSL::Enum", %"class.SkSL::Enum"* %1, i64 0, i32 1, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ugt i64 %22, -17
  br i1 %23, label %24, label %26

24:                                               ; preds = %2
  %25 = bitcast %"class.SkSL::String"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %25) #16
  unreachable

26:                                               ; preds = %2
  %27 = icmp ult i64 %22, 23
  br i1 %27, label %36, label %28

28:                                               ; preds = %26
  %29 = add nuw i64 %22, 16
  %30 = and i64 %29, -16
  %31 = tail call i8* @_Znwm(i64 %30) #15
  %32 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %31, i8** %32, align 8
  %33 = or i64 %30, -9223372036854775808
  %34 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %35, align 8
  br label %41

36:                                               ; preds = %26
  %37 = trunc i64 %22 to i8
  %38 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  store i8 %37, i8* %39, align 1
  %40 = icmp eq i64 %22, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %36, %28
  %42 = phi i8* [ %31, %28 ], [ %18, %36 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %42, i8* align 1 %20, i64 %22, i1 false) #14
  br label %43

43:                                               ; preds = %36, %41
  %44 = phi i8* [ %18, %36 ], [ %42, %41 ]
  %45 = getelementptr inbounds i8, i8* %44, i64 %22
  store i8 0, i8* %45, align 1
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %5, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.183, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %6) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* sret %0, %"class.SkSL::String"* nonnull %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.178, i64 0, i64 0)) #14
  %46 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @_ZdlPv(i8* %52) #15
  br label %53

53:                                               ; preds = %43, %50
  %54 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  call void @_ZdlPv(i8* %60) #15
  br label %61

61:                                               ; preds = %53, %58
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #14
  %62 = bitcast %"class.SkSL::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #14
  %63 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %62, i8 0, i64 24, i1 false) #14
  %64 = bitcast %"class.std::__1::vector.488"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #14
  %65 = getelementptr inbounds %"class.std::__1::vector.488", %"class.std::__1::vector.488"* %8, i64 0, i32 0, i32 0
  %66 = getelementptr inbounds %"class.std::__1::vector.488", %"class.std::__1::vector.488"* %8, i64 0, i32 0, i32 1
  %67 = getelementptr inbounds %"class.std::__1::vector.488", %"class.std::__1::vector.488"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 0, i64 24, i1 false) #14
  %68 = getelementptr inbounds %"class.SkSL::Enum", %"class.SkSL::Enum"* %1, i64 0, i32 2, i32 0
  %69 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %68, align 8
  %70 = getelementptr inbounds %"class.SkSL::Enum", %"class.SkSL::Enum"* %1, i64 0, i32 2, i32 1
  %71 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %70, align 8
  %72 = icmp eq %"class.std::__1::__shared_weak_count"* %71, null
  br i1 %72, label %73, label %75

73:                                               ; preds = %61
  %74 = bitcast %struct.Enumerant** %67 to i64*
  br label %81

75:                                               ; preds = %61
  %76 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %71, i64 0, i32 0, i32 1
  %77 = atomicrmw add i64* %76, i64 1 monotonic
  %78 = bitcast %struct.Enumerant** %67 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = sdiv i64 %79, 24
  br label %81

81:                                               ; preds = %73, %75
  %82 = phi i64* [ %74, %73 ], [ %78, %75 ]
  %83 = phi i64 [ 0, %73 ], [ %80, %75 ]
  %84 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %69, i64 0, i32 5, i32 0, i32 0
  %85 = load i32, i32* %84, align 8
  %86 = sext i32 %85 to i64
  %87 = bitcast %"class.std::__1::vector.488"* %8 to i64*
  %88 = icmp ult i64 %83, %86
  br i1 %88, label %89, label %110

89:                                               ; preds = %81
  %90 = bitcast %struct.Enumerant** %66 to i64*
  %91 = icmp slt i32 %85, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @abort() #16
  unreachable

93:                                               ; preds = %89
  %94 = load i64, i64* %90, align 8
  %95 = sdiv exact i64 %94, 24
  %96 = mul nsw i64 %86, 24
  %97 = call i8* @_Znwm(i64 %96) #15
  %98 = bitcast i8* %97 to %struct.Enumerant*
  %99 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %98, i64 %95
  %100 = ptrtoint %struct.Enumerant* %99 to i64
  %101 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %98, i64 %86
  %102 = ptrtoint %struct.Enumerant* %101 to i64
  %103 = sdiv exact i64 %94, -24
  %104 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %99, i64 %103
  %105 = ptrtoint %struct.Enumerant* %104 to i64
  %106 = icmp sgt i64 %94, 0
  br i1 %106, label %107, label %109

107:                                              ; preds = %93
  %108 = bitcast %struct.Enumerant* %104 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %108, i8* align 536870912 null, i64 %94, i1 false) #14
  br label %109

109:                                              ; preds = %107, %93
  store i64 %105, i64* %87, align 8
  store i64 %100, i64* %90, align 8
  store i64 %102, i64* %82, align 8
  br label %110

110:                                              ; preds = %109, %81
  br i1 %72, label %121, label %111

111:                                              ; preds = %110
  %112 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %71, i64 0, i32 0, i32 1
  %113 = atomicrmw add i64* %112, i64 -1 acq_rel
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %121

115:                                              ; preds = %111
  %116 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %71, i64 0, i32 0
  %117 = bitcast %"class.std::__1::__shared_weak_count"* %71 to void (%"class.std::__1::__shared_count"*)***
  %118 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %117, align 8
  %119 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %118, i64 2
  %120 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %119, align 8
  call void %120(%"class.std::__1::__shared_count"* %116) #14
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %71) #14
  br label %121

121:                                              ; preds = %110, %111, %115
  %122 = bitcast %class.anon.495* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %122) #14
  %123 = getelementptr inbounds %class.anon.495, %class.anon.495* %9, i64 0, i32 0
  store %"class.std::__1::vector.488"* %8, %"class.std::__1::vector.488"** %123, align 8
  %124 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %68, align 8
  %125 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %70, align 8
  %126 = icmp eq %"class.std::__1::__shared_weak_count"* %125, null
  br i1 %126, label %130, label %127

127:                                              ; preds = %121
  %128 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %125, i64 0, i32 0, i32 1
  %129 = atomicrmw add i64* %128, i64 1 monotonic
  br label %130

130:                                              ; preds = %127, %121
  %131 = bitcast %class.anon.502* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %131) #14
  %132 = getelementptr inbounds %class.anon.502, %class.anon.502* %4, i64 0, i32 0
  store %class.anon.495* %9, %class.anon.495** %132, align 8
  %133 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %124, i64 0, i32 5, i32 0, i32 1
  %134 = load i32, i32* %133, align 4
  %135 = icmp sgt i32 %134, 0
  br i1 %135, label %136, label %158

136:                                              ; preds = %130
  %137 = getelementptr inbounds %"class.SkSL::SymbolTable", %"class.SkSL::SymbolTable"* %124, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  br label %138

138:                                              ; preds = %153, %136
  %139 = phi i32 [ %134, %136 ], [ %154, %153 ]
  %140 = phi i64 [ 0, %136 ], [ %155, %153 ]
  %141 = load %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"** %137, align 8
  %142 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %141, i64 %140, i32 1
  %143 = load i32, i32* %142, align 8
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %153, label %145

145:                                              ; preds = %138
  %146 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %141, i64 %140, i32 0, i32 0, i32 1
  %147 = load %"class.SkSL::Symbol"*, %"class.SkSL::Symbol"** %146, align 8
  %148 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %141, i64 %140, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load i8*, i8** %148, align 8
  %150 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* %141, i64 %140, i32 0, i32 0, i32 0, i32 0, i32 1
  %151 = load i64, i64* %150, align 8
  call void @_ZZNK4SkSL4Enum7foreachIZNKS0_4codeEvEUlNS_14StringFragmentElE_EEvOT_ENKUlS2_PKNS_6SymbolEE_clES2_S8_(%class.anon.502* nonnull %4, i8* %149, i64 %151, %"class.SkSL::Symbol"* %147) #14
  %152 = load i32, i32* %133, align 4
  br label %153

153:                                              ; preds = %145, %138
  %154 = phi i32 [ %139, %138 ], [ %152, %145 ]
  %155 = add nuw nsw i64 %140, 1
  %156 = sext i32 %154 to i64
  %157 = icmp slt i64 %155, %156
  br i1 %157, label %138, label %158

158:                                              ; preds = %153, %130
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #14
  br i1 %126, label %169, label %159

159:                                              ; preds = %158
  %160 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %125, i64 0, i32 0, i32 1
  %161 = atomicrmw add i64* %160, i64 -1 acq_rel
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %169

163:                                              ; preds = %159
  %164 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %125, i64 0, i32 0
  %165 = bitcast %"class.std::__1::__shared_weak_count"* %125 to void (%"class.std::__1::__shared_count"*)***
  %166 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %165, align 8
  %167 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %166, i64 2
  %168 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %167, align 8
  call void %168(%"class.std::__1::__shared_count"* %164) #14
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %125) #14
  br label %169

169:                                              ; preds = %158, %159, %163
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122) #14
  %170 = load %struct.Enumerant*, %struct.Enumerant** %65, align 8
  %171 = load %struct.Enumerant*, %struct.Enumerant** %66, align 8
  %172 = getelementptr inbounds %class.anon.497, %class.anon.497* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %172)
  call void @_ZNSt3__16__sortIRZNK4SkSL4Enum4codeEvEUlRKZNKS2_4codeEvE9EnumerantS5_E_PS3_EEvT0_S9_T_(%struct.Enumerant* %170, %struct.Enumerant* %171, %class.anon.497* nonnull dereferenceable(1) %3) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %172)
  %173 = load %struct.Enumerant*, %struct.Enumerant** %65, align 8
  %174 = load %struct.Enumerant*, %struct.Enumerant** %66, align 8
  %175 = icmp eq %struct.Enumerant* %173, %174
  br i1 %175, label %204, label %176

176:                                              ; preds = %169
  %177 = bitcast %"class.SkSL::String"* %10 to i8*
  %178 = bitcast %"class.SkSL::String"* %11 to i8*
  %179 = bitcast %"class.SkSL::String"* %12 to i8*
  %180 = bitcast %"class.SkSL::String"* %13 to i8*
  %181 = bitcast %"class.SkSL::String"* %14 to i8*
  %182 = bitcast %"class.SkSL::String"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %183 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %182, i64 0, i32 1, i32 0
  %184 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %185 = bitcast %"class.SkSL::String"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %186 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %185, i64 0, i32 1, i32 0
  %187 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = bitcast %"class.SkSL::String"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %189 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %188, i64 0, i32 1, i32 0
  %190 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %191 = bitcast %"class.SkSL::String"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %192 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %191, i64 0, i32 1, i32 0
  %193 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %194 = bitcast %"class.SkSL::String"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %195 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %194, i64 0, i32 1, i32 0
  %196 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = bitcast %"class.SkSL::String"* %15 to i8*
  %198 = bitcast %"class.SkSL::String"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %199 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %198, i64 0, i32 1, i32 0
  %200 = bitcast %"class.SkSL::String"* %15 to i16*
  %201 = getelementptr inbounds i8, i8* %197, i64 2
  %202 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %203 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %202, i64 0, i32 1, i32 0
  br label %220

204:                                              ; preds = %258, %169
  %205 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.187, i64 0, i64 0)) #14
  %206 = load %struct.Enumerant*, %struct.Enumerant** %65, align 8
  %207 = icmp eq %struct.Enumerant* %206, null
  br i1 %207, label %212, label %208

208:                                              ; preds = %204
  %209 = ptrtoint %struct.Enumerant* %206 to i64
  %210 = bitcast %struct.Enumerant** %66 to i64*
  store i64 %209, i64* %210, align 8
  %211 = bitcast %struct.Enumerant* %206 to i8*
  call void @_ZdlPv(i8* %211) #15
  br label %212

212:                                              ; preds = %204, %208
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #14
  %213 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %214 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %213, i64 0, i32 1, i32 0
  %215 = load i8, i8* %214, align 1
  %216 = icmp slt i8 %215, 0
  br i1 %216, label %217, label %219

217:                                              ; preds = %212
  %218 = load i8*, i8** %63, align 8
  call void @_ZdlPv(i8* %218) #15
  br label %219

219:                                              ; preds = %212, %217
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62) #14
  ret void

220:                                              ; preds = %176, %258
  %221 = phi %struct.Enumerant* [ %173, %176 ], [ %259, %258 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %177) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %178) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %179) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %180) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %13, %"class.SkSL::String"* nonnull %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.184, i64 0, i64 0)) #14
  %222 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %221, i64 0, i32 0, i32 0
  %223 = load i8*, i8** %222, align 8
  %224 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %221, i64 0, i32 0, i32 1
  %225 = load i64, i64* %224, align 8
  call void @_ZNK4SkSL6StringplENS_14StringFragmentE(%"class.SkSL::String"* nonnull sret %12, %"class.SkSL::String"* nonnull %13, i8* %223, i64 %225) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %11, %"class.SkSL::String"* nonnull %12, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.185, i64 0, i64 0)) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %181) #14
  %226 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %221, i64 0, i32 1
  %227 = load i64, i64* %226, align 8
  call void @_ZN4SkSL9to_stringEl(%"class.SkSL::String"* nonnull sret %14, i64 %227) #14
  call void @_ZNK4SkSL6StringplERKS0_(%"class.SkSL::String"* nonnull sret %10, %"class.SkSL::String"* nonnull %11, %"class.SkSL::String"* nonnull dereferenceable(24) %14) #14
  %228 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %10) #14
  %229 = load i8, i8* %183, align 1
  %230 = icmp slt i8 %229, 0
  br i1 %230, label %231, label %233

231:                                              ; preds = %220
  %232 = load i8*, i8** %184, align 8
  call void @_ZdlPv(i8* %232) #15
  br label %233

233:                                              ; preds = %220, %231
  %234 = load i8, i8* %186, align 1
  %235 = icmp slt i8 %234, 0
  br i1 %235, label %236, label %238

236:                                              ; preds = %233
  %237 = load i8*, i8** %187, align 8
  call void @_ZdlPv(i8* %237) #15
  br label %238

238:                                              ; preds = %233, %236
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %181) #14
  %239 = load i8, i8* %189, align 1
  %240 = icmp slt i8 %239, 0
  br i1 %240, label %241, label %243

241:                                              ; preds = %238
  %242 = load i8*, i8** %190, align 8
  call void @_ZdlPv(i8* %242) #15
  br label %243

243:                                              ; preds = %238, %241
  %244 = load i8, i8* %192, align 1
  %245 = icmp slt i8 %244, 0
  br i1 %245, label %246, label %248

246:                                              ; preds = %243
  %247 = load i8*, i8** %193, align 8
  call void @_ZdlPv(i8* %247) #15
  br label %248

248:                                              ; preds = %243, %246
  %249 = load i8, i8* %195, align 1
  %250 = icmp slt i8 %249, 0
  br i1 %250, label %251, label %253

251:                                              ; preds = %248
  %252 = load i8*, i8** %196, align 8
  call void @_ZdlPv(i8* %252) #15
  br label %253

253:                                              ; preds = %248, %251
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %180) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %179) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %178) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %177) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %197) #14
  store i8 2, i8* %199, align 1
  store i16 2604, i16* %200, align 8
  store i8 0, i8* %201, align 2
  %254 = load i8, i8* %203, align 1
  %255 = icmp slt i8 %254, 0
  br i1 %255, label %256, label %258

256:                                              ; preds = %253
  %257 = load i8*, i8** %63, align 8
  call void @_ZdlPv(i8* %257) #15
  br label %258

258:                                              ; preds = %256, %253
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %62, i8* nonnull align 8 %197, i64 24, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %197) #14
  %259 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %221, i64 1
  %260 = icmp eq %struct.Enumerant* %259, %174
  br i1 %260, label %204, label %220
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZNK4SkSL4Enum7foreachIZNKS0_4codeEvEUlNS_14StringFragmentElE_EEvOT_ENKUlS2_PKNS_6SymbolEE_clES2_S8_(%class.anon.502*, i8*, i64, %"class.SkSL::Symbol"*) local_unnamed_addr #4 comdat align 2 {
  %5 = getelementptr inbounds %class.anon.502, %class.anon.502* %0, i64 0, i32 0
  %6 = load %class.anon.495*, %class.anon.495** %5, align 8
  %7 = bitcast %"class.SkSL::Symbol"* %3 to %"class.SkSL::Variable"*
  %8 = tail call %"class.SkSL::Expression"* @_ZNK4SkSL8Variable12initialValueEv(%"class.SkSL::Variable"* %7) #14
  %9 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %8, i64 1
  %10 = bitcast %"class.SkSL::Expression"* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %class.anon.495, %class.anon.495* %6, i64 0, i32 0
  %13 = load %"class.std::__1::vector.488"*, %"class.std::__1::vector.488"** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector.488", %"class.std::__1::vector.488"* %13, i64 0, i32 0, i32 1
  %15 = load %struct.Enumerant*, %struct.Enumerant** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.488", %"class.std::__1::vector.488"* %13, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = load %struct.Enumerant*, %struct.Enumerant** %16, align 8
  %18 = icmp ult %struct.Enumerant* %15, %17
  %19 = ptrtoint %struct.Enumerant* %17 to i64
  br i1 %18, label %20, label %27

20:                                               ; preds = %4
  %21 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %15, i64 0, i32 0, i32 0
  store i8* %1, i8** %21, align 8
  %22 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %15, i64 0, i32 0, i32 1
  store i64 %2, i64* %22, align 8
  %23 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %15, i64 0, i32 1
  store i64 %11, i64* %23, align 8
  %24 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %15, i64 1
  %25 = ptrtoint %struct.Enumerant* %24 to i64
  %26 = bitcast %struct.Enumerant** %14 to i64*
  store i64 %25, i64* %26, align 8
  br label %82

27:                                               ; preds = %4
  %28 = ptrtoint %struct.Enumerant* %15 to i64
  %29 = bitcast %struct.Enumerant** %14 to i64*
  %30 = bitcast %"class.std::__1::vector.488"* %13 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %28, %31
  %33 = sdiv exact i64 %32, 24
  %34 = add nsw i64 %33, 1
  %35 = icmp ugt i64 %34, 768614336404564650
  br i1 %35, label %36, label %38

36:                                               ; preds = %27
  %37 = bitcast %"class.std::__1::vector.488"* %13 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #16
  unreachable

38:                                               ; preds = %27
  %39 = bitcast %struct.Enumerant** %16 to i64*
  %40 = sub i64 %19, %31
  %41 = sdiv exact i64 %40, 24
  %42 = icmp ult i64 %41, 384307168202282325
  br i1 %42, label %43, label %48

43:                                               ; preds = %38
  %44 = shl nsw i64 %41, 1
  %45 = icmp ult i64 %44, %34
  %46 = select i1 %45, i64 %34, i64 %44
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %43, %38
  %49 = phi i64 [ %46, %43 ], [ 768614336404564650, %38 ]
  %50 = mul i64 %49, 24
  %51 = tail call i8* @_Znwm(i64 %50) #15
  %52 = bitcast i8* %51 to %struct.Enumerant*
  br label %53

53:                                               ; preds = %48, %43
  %54 = phi i64 [ %49, %48 ], [ 0, %43 ]
  %55 = phi %struct.Enumerant* [ %52, %48 ], [ null, %43 ]
  %56 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %55, i64 %33
  %57 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %55, i64 %54
  %58 = ptrtoint %struct.Enumerant* %57 to i64
  %59 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %56, i64 0, i32 0, i32 0
  store i8* %1, i8** %59, align 8
  %60 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %55, i64 %33, i32 0, i32 1
  store i64 %2, i64* %60, align 8
  %61 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %55, i64 %33, i32 1
  store i64 %11, i64* %61, align 8
  %62 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %56, i64 1
  %63 = ptrtoint %struct.Enumerant* %62 to i64
  %64 = getelementptr inbounds %"class.std::__1::vector.488", %"class.std::__1::vector.488"* %13, i64 0, i32 0, i32 0
  %65 = load %struct.Enumerant*, %struct.Enumerant** %64, align 8
  %66 = load i64, i64* %29, align 8
  %67 = ptrtoint %struct.Enumerant* %65 to i64
  %68 = sub i64 %66, %67
  %69 = sdiv exact i64 %68, -24
  %70 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %56, i64 %69
  %71 = ptrtoint %struct.Enumerant* %70 to i64
  %72 = icmp sgt i64 %68, 0
  br i1 %72, label %73, label %77

73:                                               ; preds = %53
  %74 = bitcast %struct.Enumerant* %70 to i8*
  %75 = bitcast %struct.Enumerant* %65 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %75, i64 %68, i1 false) #14
  %76 = load %struct.Enumerant*, %struct.Enumerant** %64, align 8
  br label %77

77:                                               ; preds = %73, %53
  %78 = phi %struct.Enumerant* [ %65, %53 ], [ %76, %73 ]
  store i64 %71, i64* %30, align 8
  store i64 %63, i64* %29, align 8
  store i64 %58, i64* %39, align 8
  %79 = icmp eq %struct.Enumerant* %78, null
  br i1 %79, label %82, label %80

80:                                               ; preds = %77
  %81 = bitcast %struct.Enumerant* %78 to i8*
  tail call void @_ZdlPv(i8* %81) #15
  br label %82

82:                                               ; preds = %20, %77, %80
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRZNK4SkSL4Enum4codeEvEUlRKZNKS2_4codeEvE9EnumerantS5_E_PS3_EEvT0_S9_T_(%struct.Enumerant*, %struct.Enumerant*, %class.anon.497* dereferenceable(1)) local_unnamed_addr #0 comdat {
  br label %4

4:                                                ; preds = %359, %3
  %5 = phi %struct.Enumerant* [ %1, %3 ], [ %336, %359 ]
  %6 = phi %struct.Enumerant* [ %0, %3 ], [ %28, %359 ]
  %7 = ptrtoint %struct.Enumerant* %5 to i64
  %8 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %5, i64 -1
  %9 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %5, i64 -1, i32 1
  %10 = bitcast %struct.Enumerant* %8 to i8*
  %11 = bitcast %struct.Enumerant* %8 to i8*
  %12 = bitcast %struct.Enumerant* %8 to i64*
  %13 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %5, i64 -1, i32 0, i32 1
  %14 = bitcast %struct.Enumerant* %8 to i8*
  %15 = bitcast %struct.Enumerant* %8 to i64*
  %16 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %5, i64 -1, i32 0, i32 1
  %17 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %5, i64 -1, i32 1
  %18 = bitcast %struct.Enumerant* %8 to i8*
  %19 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %5, i64 -1, i32 1
  %20 = bitcast %struct.Enumerant* %8 to i8*
  %21 = bitcast %struct.Enumerant* %8 to <2 x i64>*
  %22 = bitcast %struct.Enumerant* %8 to <2 x i64>*
  %23 = bitcast %struct.Enumerant* %8 to <2 x i64>*
  %24 = ptrtoint %struct.Enumerant* %5 to i64
  br label %25

25:                                               ; preds = %370, %4
  %26 = phi %struct.Enumerant* [ %6, %4 ], [ %371, %370 ]
  br label %27

27:                                               ; preds = %275, %25
  %28 = phi %struct.Enumerant* [ %26, %25 ], [ %264, %275 ]
  %29 = ptrtoint %struct.Enumerant* %28 to i64
  %30 = sub i64 %7, %29
  %31 = sdiv exact i64 %30, 24
  switch i64 %31, label %140 [
    i64 0, label %374
    i64 1, label %374
    i64 2, label %32
    i64 3, label %45
    i64 4, label %91
    i64 5, label %96
  ]

32:                                               ; preds = %27
  %33 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %5, i64 -1
  %34 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %5, i64 -1, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = icmp slt i64 %35, %37
  br i1 %38, label %39, label %374

39:                                               ; preds = %32
  %40 = bitcast %struct.Enumerant* %28 to <2 x i64>*
  %41 = load <2 x i64>, <2 x i64>* %40, align 8
  %42 = bitcast %struct.Enumerant* %28 to i8*
  %43 = bitcast %struct.Enumerant* %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #14
  %44 = bitcast %struct.Enumerant* %33 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %44, align 8
  store i64 %37, i64* %34, align 8
  br label %374

45:                                               ; preds = %27
  %46 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 1
  %47 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %5, i64 -1
  %48 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 1, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = icmp slt i64 %49, %51
  %53 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %5, i64 -1, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = icmp slt i64 %54, %49
  br i1 %52, label %71, label %56

56:                                               ; preds = %45
  br i1 %55, label %57, label %374

57:                                               ; preds = %56
  %58 = bitcast %struct.Enumerant* %46 to <2 x i64>*
  %59 = load <2 x i64>, <2 x i64>* %58, align 8
  %60 = bitcast %struct.Enumerant* %46 to i8*
  %61 = bitcast %struct.Enumerant* %47 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 24, i1 false) #14
  %62 = bitcast %struct.Enumerant* %47 to <2 x i64>*
  store <2 x i64> %59, <2 x i64>* %62, align 8
  store i64 %49, i64* %53, align 8
  %63 = load i64, i64* %48, align 8
  %64 = load i64, i64* %50, align 8
  %65 = icmp slt i64 %63, %64
  br i1 %65, label %66, label %374

66:                                               ; preds = %57
  %67 = bitcast %struct.Enumerant* %28 to <2 x i64>*
  %68 = load <2 x i64>, <2 x i64>* %67, align 8
  %69 = bitcast %struct.Enumerant* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %60, i64 24, i1 false) #14
  %70 = bitcast %struct.Enumerant* %46 to <2 x i64>*
  store <2 x i64> %68, <2 x i64>* %70, align 8
  store i64 %64, i64* %48, align 8
  br label %374

71:                                               ; preds = %45
  %72 = bitcast %struct.Enumerant* %28 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 0, i32 0, i32 1
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %struct.Enumerant* %28 to i8*
  br i1 %55, label %77, label %81

77:                                               ; preds = %71
  %78 = bitcast %struct.Enumerant* %47 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %78, i64 24, i1 false) #14
  %79 = bitcast %struct.Enumerant* %47 to i64*
  store i64 %73, i64* %79, align 8
  %80 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %5, i64 -1, i32 0, i32 1
  store i64 %75, i64* %80, align 8
  store i64 %51, i64* %53, align 8
  br label %374

81:                                               ; preds = %71
  %82 = bitcast %struct.Enumerant* %46 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %82, i64 24, i1 false) #14
  %83 = bitcast %struct.Enumerant* %46 to i64*
  store i64 %73, i64* %83, align 8
  %84 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 1, i32 0, i32 1
  store i64 %75, i64* %84, align 8
  store i64 %51, i64* %48, align 8
  %85 = load i64, i64* %53, align 8
  %86 = icmp slt i64 %85, %51
  br i1 %86, label %87, label %374

87:                                               ; preds = %81
  %88 = bitcast %struct.Enumerant* %47 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* align 8 %88, i64 24, i1 false) #14
  %89 = bitcast %struct.Enumerant* %47 to i64*
  store i64 %73, i64* %89, align 8
  %90 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %5, i64 -1, i32 0, i32 1
  store i64 %75, i64* %90, align 8
  store i64 %51, i64* %53, align 8
  br label %374

91:                                               ; preds = %27
  %92 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 1
  %93 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 2
  %94 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %5, i64 -1
  %95 = tail call i32 @_ZNSt3__17__sort4IRZNK4SkSL4Enum4codeEvEUlRKZNKS2_4codeEvE9EnumerantS5_E_PS3_EEjT0_S9_S9_S9_T_(%struct.Enumerant* %28, %struct.Enumerant* %92, %struct.Enumerant* %93, %struct.Enumerant* %94, %class.anon.497* dereferenceable(1) %2)
  br label %374

96:                                               ; preds = %27
  %97 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 1
  %98 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 2
  %99 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 3
  %100 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %5, i64 -1
  %101 = tail call i32 @_ZNSt3__17__sort4IRZNK4SkSL4Enum4codeEvEUlRKZNKS2_4codeEvE9EnumerantS5_E_PS3_EEjT0_S9_S9_S9_T_(%struct.Enumerant* %28, %struct.Enumerant* %97, %struct.Enumerant* %98, %struct.Enumerant* %99, %class.anon.497* dereferenceable(1) %2) #14
  %102 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %5, i64 -1, i32 1
  %103 = load i64, i64* %102, align 8
  %104 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 3, i32 1
  %105 = load i64, i64* %104, align 8
  %106 = icmp slt i64 %103, %105
  br i1 %106, label %107, label %374

107:                                              ; preds = %96
  %108 = bitcast %struct.Enumerant* %99 to <2 x i64>*
  %109 = load <2 x i64>, <2 x i64>* %108, align 8
  %110 = bitcast %struct.Enumerant* %99 to i8*
  %111 = bitcast %struct.Enumerant* %100 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %110, i8* align 8 %111, i64 24, i1 false) #14
  %112 = bitcast %struct.Enumerant* %100 to <2 x i64>*
  store <2 x i64> %109, <2 x i64>* %112, align 8
  store i64 %105, i64* %102, align 8
  %113 = load i64, i64* %104, align 8
  %114 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 2, i32 1
  %115 = load i64, i64* %114, align 8
  %116 = icmp slt i64 %113, %115
  br i1 %116, label %117, label %374

117:                                              ; preds = %107
  %118 = bitcast %struct.Enumerant* %98 to <2 x i64>*
  %119 = load <2 x i64>, <2 x i64>* %118, align 8
  %120 = bitcast %struct.Enumerant* %98 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* align 8 %110, i64 24, i1 false) #14
  %121 = bitcast %struct.Enumerant* %99 to <2 x i64>*
  store <2 x i64> %119, <2 x i64>* %121, align 8
  store i64 %115, i64* %104, align 8
  %122 = load i64, i64* %114, align 8
  %123 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 1, i32 1
  %124 = load i64, i64* %123, align 8
  %125 = icmp slt i64 %122, %124
  br i1 %125, label %126, label %374

126:                                              ; preds = %117
  %127 = bitcast %struct.Enumerant* %97 to <2 x i64>*
  %128 = load <2 x i64>, <2 x i64>* %127, align 8
  %129 = bitcast %struct.Enumerant* %97 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %129, i8* align 8 %120, i64 24, i1 false) #14
  %130 = bitcast %struct.Enumerant* %98 to <2 x i64>*
  store <2 x i64> %128, <2 x i64>* %130, align 8
  store i64 %124, i64* %114, align 8
  %131 = load i64, i64* %123, align 8
  %132 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 0, i32 1
  %133 = load i64, i64* %132, align 8
  %134 = icmp slt i64 %131, %133
  br i1 %134, label %135, label %374

135:                                              ; preds = %126
  %136 = bitcast %struct.Enumerant* %28 to <2 x i64>*
  %137 = load <2 x i64>, <2 x i64>* %136, align 8
  %138 = bitcast %struct.Enumerant* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %138, i8* align 8 %129, i64 24, i1 false) #14
  %139 = bitcast %struct.Enumerant* %97 to <2 x i64>*
  store <2 x i64> %137, <2 x i64>* %139, align 8
  store i64 %133, i64* %123, align 8
  br label %374

140:                                              ; preds = %27
  %141 = icmp slt i64 %30, 744
  br i1 %141, label %142, label %143

142:                                              ; preds = %140
  tail call void @_ZNSt3__118__insertion_sort_3IRZNK4SkSL4Enum4codeEvEUlRKZNKS2_4codeEvE9EnumerantS5_E_PS3_EEvT0_S9_T_(%struct.Enumerant* %28, %struct.Enumerant* %5, %class.anon.497* dereferenceable(1) %2)
  br label %374

143:                                              ; preds = %140
  %144 = icmp sgt i64 %30, 23976
  %145 = udiv i64 %30, 48
  %146 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 %145
  br i1 %144, label %147, label %191

147:                                              ; preds = %143
  %148 = udiv i64 %30, 96
  %149 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 %148
  %150 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %146, i64 %148
  %151 = tail call i32 @_ZNSt3__17__sort4IRZNK4SkSL4Enum4codeEvEUlRKZNKS2_4codeEvE9EnumerantS5_E_PS3_EEjT0_S9_S9_S9_T_(%struct.Enumerant* %28, %struct.Enumerant* %149, %struct.Enumerant* %146, %struct.Enumerant* %150, %class.anon.497* dereferenceable(1) %2) #14
  %152 = load i64, i64* %17, align 8
  %153 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %150, i64 0, i32 1
  %154 = load i64, i64* %153, align 8
  %155 = icmp slt i64 %152, %154
  br i1 %155, label %156, label %226

156:                                              ; preds = %147
  %157 = bitcast %struct.Enumerant* %150 to <2 x i64>*
  %158 = load <2 x i64>, <2 x i64>* %157, align 8
  %159 = bitcast %struct.Enumerant* %150 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %159, i8* align 8 %18, i64 24, i1 false) #14
  store <2 x i64> %158, <2 x i64>* %22, align 8
  store i64 %154, i64* %17, align 8
  %160 = add i32 %151, 1
  %161 = load i64, i64* %153, align 8
  %162 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 %145, i32 1
  %163 = load i64, i64* %162, align 8
  %164 = icmp slt i64 %161, %163
  br i1 %164, label %165, label %226

165:                                              ; preds = %156
  %166 = bitcast %struct.Enumerant* %146 to <2 x i64>*
  %167 = load <2 x i64>, <2 x i64>* %166, align 8
  %168 = bitcast %struct.Enumerant* %146 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %168, i8* align 8 %159, i64 24, i1 false) #14
  %169 = bitcast %struct.Enumerant* %150 to <2 x i64>*
  store <2 x i64> %167, <2 x i64>* %169, align 8
  store i64 %163, i64* %153, align 8
  %170 = add i32 %151, 2
  %171 = load i64, i64* %162, align 8
  %172 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 %148, i32 1
  %173 = load i64, i64* %172, align 8
  %174 = icmp slt i64 %171, %173
  br i1 %174, label %175, label %226

175:                                              ; preds = %165
  %176 = bitcast %struct.Enumerant* %149 to <2 x i64>*
  %177 = load <2 x i64>, <2 x i64>* %176, align 8
  %178 = bitcast %struct.Enumerant* %149 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %178, i8* align 8 %168, i64 24, i1 false) #14
  %179 = bitcast %struct.Enumerant* %146 to <2 x i64>*
  store <2 x i64> %177, <2 x i64>* %179, align 8
  store i64 %173, i64* %162, align 8
  %180 = add i32 %151, 3
  %181 = load i64, i64* %172, align 8
  %182 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 0, i32 1
  %183 = load i64, i64* %182, align 8
  %184 = icmp slt i64 %181, %183
  br i1 %184, label %185, label %226

185:                                              ; preds = %175
  %186 = bitcast %struct.Enumerant* %28 to <2 x i64>*
  %187 = load <2 x i64>, <2 x i64>* %186, align 8
  %188 = bitcast %struct.Enumerant* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %188, i8* align 8 %178, i64 24, i1 false) #14
  %189 = bitcast %struct.Enumerant* %149 to <2 x i64>*
  store <2 x i64> %187, <2 x i64>* %189, align 8
  store i64 %183, i64* %172, align 8
  %190 = add i32 %151, 4
  br label %226

191:                                              ; preds = %143
  %192 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 %145, i32 1
  %193 = load i64, i64* %192, align 8
  %194 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 0, i32 1
  %195 = load i64, i64* %194, align 8
  %196 = icmp slt i64 %193, %195
  %197 = load i64, i64* %9, align 8
  %198 = icmp slt i64 %197, %193
  br i1 %196, label %212, label %199

199:                                              ; preds = %191
  br i1 %198, label %200, label %226

200:                                              ; preds = %199
  %201 = bitcast %struct.Enumerant* %146 to <2 x i64>*
  %202 = load <2 x i64>, <2 x i64>* %201, align 8
  %203 = bitcast %struct.Enumerant* %146 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %203, i8* align 8 %10, i64 24, i1 false) #14
  store <2 x i64> %202, <2 x i64>* %21, align 8
  store i64 %193, i64* %9, align 8
  %204 = load i64, i64* %192, align 8
  %205 = load i64, i64* %194, align 8
  %206 = icmp slt i64 %204, %205
  br i1 %206, label %207, label %226

207:                                              ; preds = %200
  %208 = bitcast %struct.Enumerant* %28 to <2 x i64>*
  %209 = load <2 x i64>, <2 x i64>* %208, align 8
  %210 = bitcast %struct.Enumerant* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %210, i8* align 8 %203, i64 24, i1 false) #14
  %211 = bitcast %struct.Enumerant* %146 to <2 x i64>*
  store <2 x i64> %209, <2 x i64>* %211, align 8
  store i64 %205, i64* %192, align 8
  br label %226

212:                                              ; preds = %191
  %213 = bitcast %struct.Enumerant* %28 to i64*
  %214 = load i64, i64* %213, align 8
  %215 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 0, i32 0, i32 1
  %216 = load i64, i64* %215, align 8
  %217 = bitcast %struct.Enumerant* %28 to i8*
  br i1 %198, label %218, label %219

218:                                              ; preds = %212
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %217, i8* align 8 %14, i64 24, i1 false) #14
  store i64 %214, i64* %15, align 8
  store i64 %216, i64* %16, align 8
  store i64 %195, i64* %9, align 8
  br label %226

219:                                              ; preds = %212
  %220 = bitcast %struct.Enumerant* %146 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %217, i8* align 8 %220, i64 24, i1 false) #14
  %221 = bitcast %struct.Enumerant* %146 to i64*
  store i64 %214, i64* %221, align 8
  %222 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 %145, i32 0, i32 1
  store i64 %216, i64* %222, align 8
  store i64 %195, i64* %192, align 8
  %223 = load i64, i64* %9, align 8
  %224 = icmp slt i64 %223, %195
  br i1 %224, label %225, label %226

225:                                              ; preds = %219
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %220, i8* align 8 %11, i64 24, i1 false) #14
  store i64 %214, i64* %12, align 8
  store i64 %216, i64* %13, align 8
  store i64 %195, i64* %9, align 8
  br label %226

226:                                              ; preds = %225, %219, %218, %207, %200, %199, %185, %175, %165, %156, %147
  %227 = phi i32 [ %190, %185 ], [ %180, %175 ], [ %170, %165 ], [ %160, %156 ], [ %151, %147 ], [ 1, %218 ], [ 0, %199 ], [ 2, %207 ], [ 1, %200 ], [ 2, %225 ], [ 1, %219 ]
  %228 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 0, i32 1
  %229 = load i64, i64* %228, align 8
  %230 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 %145, i32 1
  %231 = load i64, i64* %230, align 8
  %232 = icmp slt i64 %229, %231
  br i1 %232, label %296, label %233

233:                                              ; preds = %226, %284
  %234 = phi %struct.Enumerant* [ %235, %284 ], [ %8, %226 ]
  %235 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %234, i64 -1
  %236 = icmp eq %struct.Enumerant* %28, %235
  br i1 %236, label %237, label %284

237:                                              ; preds = %233
  %238 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 1
  %239 = load i64, i64* %19, align 8
  %240 = icmp slt i64 %229, %239
  br i1 %240, label %256, label %241

241:                                              ; preds = %237
  %242 = icmp eq %struct.Enumerant* %238, %8
  br i1 %242, label %374, label %243

243:                                              ; preds = %241, %253
  %244 = phi %struct.Enumerant* [ %254, %253 ], [ %238, %241 ]
  %245 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %244, i64 0, i32 1
  %246 = load i64, i64* %245, align 8
  %247 = icmp slt i64 %229, %246
  br i1 %247, label %248, label %253

248:                                              ; preds = %243
  %249 = bitcast %struct.Enumerant* %244 to <2 x i64>*
  %250 = load <2 x i64>, <2 x i64>* %249, align 8
  %251 = bitcast %struct.Enumerant* %244 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %251, i8* align 8 %20, i64 24, i1 false) #14
  store <2 x i64> %250, <2 x i64>* %23, align 8
  store i64 %246, i64* %19, align 8
  %252 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %244, i64 1
  br label %256

253:                                              ; preds = %243
  %254 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %244, i64 1
  %255 = icmp eq %struct.Enumerant* %254, %8
  br i1 %255, label %374, label %243

256:                                              ; preds = %248, %237
  %257 = phi %struct.Enumerant* [ %238, %237 ], [ %252, %248 ]
  %258 = icmp eq %struct.Enumerant* %257, %8
  br i1 %258, label %374, label %259

259:                                              ; preds = %256, %277
  %260 = phi %struct.Enumerant* [ %268, %277 ], [ %257, %256 ]
  %261 = phi %struct.Enumerant* [ %271, %277 ], [ %8, %256 ]
  %262 = load i64, i64* %228, align 8
  br label %263

263:                                              ; preds = %263, %259
  %264 = phi %struct.Enumerant* [ %260, %259 ], [ %268, %263 ]
  %265 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %264, i64 0, i32 1
  %266 = load i64, i64* %265, align 8
  %267 = icmp slt i64 %262, %266
  %268 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %264, i64 1
  br i1 %267, label %269, label %263

269:                                              ; preds = %263, %269
  %270 = phi %struct.Enumerant* [ %271, %269 ], [ %261, %263 ]
  %271 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %270, i64 -1
  %272 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %270, i64 -1, i32 1
  %273 = load i64, i64* %272, align 8
  %274 = icmp slt i64 %262, %273
  br i1 %274, label %269, label %275

275:                                              ; preds = %269
  %276 = icmp ult %struct.Enumerant* %264, %271
  br i1 %276, label %277, label %27

277:                                              ; preds = %275
  %278 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %270, i64 -1, i32 1
  %279 = bitcast %struct.Enumerant* %264 to <2 x i64>*
  %280 = load <2 x i64>, <2 x i64>* %279, align 8
  %281 = bitcast %struct.Enumerant* %264 to i8*
  %282 = bitcast %struct.Enumerant* %271 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %281, i8* align 8 %282, i64 24, i1 false) #14
  %283 = bitcast %struct.Enumerant* %271 to <2 x i64>*
  store <2 x i64> %280, <2 x i64>* %283, align 8
  store i64 %266, i64* %278, align 8
  br label %259

284:                                              ; preds = %233
  %285 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %234, i64 -1, i32 1
  %286 = load i64, i64* %285, align 8
  %287 = icmp slt i64 %286, %231
  br i1 %287, label %288, label %233

288:                                              ; preds = %284
  %289 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %234, i64 -1, i32 1
  %290 = bitcast %struct.Enumerant* %28 to <2 x i64>*
  %291 = load <2 x i64>, <2 x i64>* %290, align 8
  %292 = bitcast %struct.Enumerant* %28 to i8*
  %293 = bitcast %struct.Enumerant* %235 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %292, i8* align 8 %293, i64 24, i1 false) #14
  %294 = bitcast %struct.Enumerant* %235 to <2 x i64>*
  store <2 x i64> %291, <2 x i64>* %294, align 8
  store i64 %229, i64* %289, align 8
  %295 = add i32 %227, 1
  br label %296

296:                                              ; preds = %226, %288
  %297 = phi i32 [ %295, %288 ], [ %227, %226 ]
  %298 = phi %struct.Enumerant* [ %235, %288 ], [ %8, %226 ]
  %299 = ptrtoint %struct.Enumerant* %28 to i64
  %300 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %28, i64 1
  %301 = icmp ult %struct.Enumerant* %300, %298
  br i1 %301, label %302, label %333

302:                                              ; preds = %296, %323
  %303 = phi %struct.Enumerant* [ %332, %323 ], [ %146, %296 ]
  %304 = phi i32 [ %330, %323 ], [ %297, %296 ]
  %305 = phi %struct.Enumerant* [ %314, %323 ], [ %300, %296 ]
  %306 = phi %struct.Enumerant* [ %317, %323 ], [ %298, %296 ]
  %307 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %303, i64 0, i32 1
  %308 = load i64, i64* %307, align 8
  br label %309

309:                                              ; preds = %309, %302
  %310 = phi %struct.Enumerant* [ %305, %302 ], [ %314, %309 ]
  %311 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %310, i64 0, i32 1
  %312 = load i64, i64* %311, align 8
  %313 = icmp slt i64 %312, %308
  %314 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %310, i64 1
  br i1 %313, label %309, label %315

315:                                              ; preds = %309, %315
  %316 = phi %struct.Enumerant* [ %317, %315 ], [ %306, %309 ]
  %317 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %316, i64 -1
  %318 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %316, i64 -1, i32 1
  %319 = load i64, i64* %318, align 8
  %320 = icmp slt i64 %319, %308
  br i1 %320, label %321, label %315

321:                                              ; preds = %315
  %322 = icmp ugt %struct.Enumerant* %310, %317
  br i1 %322, label %333, label %323

323:                                              ; preds = %321
  %324 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %316, i64 -1, i32 1
  %325 = bitcast %struct.Enumerant* %310 to <2 x i64>*
  %326 = load <2 x i64>, <2 x i64>* %325, align 8
  %327 = bitcast %struct.Enumerant* %310 to i8*
  %328 = bitcast %struct.Enumerant* %317 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %327, i8* align 8 %328, i64 24, i1 false) #14
  %329 = bitcast %struct.Enumerant* %317 to <2 x i64>*
  store <2 x i64> %326, <2 x i64>* %329, align 8
  store i64 %312, i64* %324, align 8
  %330 = add i32 %304, 1
  %331 = icmp eq %struct.Enumerant* %303, %310
  %332 = select i1 %331, %struct.Enumerant* %317, %struct.Enumerant* %303
  br label %302

333:                                              ; preds = %321, %296
  %334 = phi %struct.Enumerant* [ %146, %296 ], [ %303, %321 ]
  %335 = phi i32 [ %297, %296 ], [ %304, %321 ]
  %336 = phi %struct.Enumerant* [ %300, %296 ], [ %310, %321 ]
  %337 = icmp eq %struct.Enumerant* %336, %334
  br i1 %337, label %351, label %338

338:                                              ; preds = %333
  %339 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %334, i64 0, i32 1
  %340 = load i64, i64* %339, align 8
  %341 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %336, i64 0, i32 1
  %342 = load i64, i64* %341, align 8
  %343 = icmp slt i64 %340, %342
  br i1 %343, label %344, label %351

344:                                              ; preds = %338
  %345 = bitcast %struct.Enumerant* %336 to <2 x i64>*
  %346 = load <2 x i64>, <2 x i64>* %345, align 8
  %347 = bitcast %struct.Enumerant* %336 to i8*
  %348 = bitcast %struct.Enumerant* %334 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %347, i8* align 8 %348, i64 24, i1 false) #14
  %349 = bitcast %struct.Enumerant* %334 to <2 x i64>*
  store <2 x i64> %346, <2 x i64>* %349, align 8
  store i64 %342, i64* %339, align 8
  %350 = add i32 %335, 1
  br label %351

351:                                              ; preds = %333, %344, %338
  %352 = phi i32 [ %350, %344 ], [ %335, %338 ], [ %335, %333 ]
  %353 = icmp eq i32 %352, 0
  br i1 %353, label %354, label %361

354:                                              ; preds = %351
  %355 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRZNK4SkSL4Enum4codeEvEUlRKZNKS2_4codeEvE9EnumerantS5_E_PS3_EEbT0_S9_T_(%struct.Enumerant* %28, %struct.Enumerant* %336, %class.anon.497* dereferenceable(1) %2)
  %356 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %336, i64 1
  %357 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRZNK4SkSL4Enum4codeEvEUlRKZNKS2_4codeEvE9EnumerantS5_E_PS3_EEbT0_S9_T_(%struct.Enumerant* %356, %struct.Enumerant* %5, %class.anon.497* dereferenceable(1) %2)
  br i1 %357, label %358, label %360

358:                                              ; preds = %354
  br i1 %355, label %374, label %359

359:                                              ; preds = %358, %372
  br label %4

360:                                              ; preds = %354
  br i1 %355, label %370, label %361

361:                                              ; preds = %360, %351
  %362 = ptrtoint %struct.Enumerant* %336 to i64
  %363 = sub i64 %362, %299
  %364 = sdiv exact i64 %363, 24
  %365 = sub i64 %24, %362
  %366 = sdiv exact i64 %365, 24
  %367 = icmp slt i64 %364, %366
  br i1 %367, label %368, label %372

368:                                              ; preds = %361
  tail call void @_ZNSt3__16__sortIRZNK4SkSL4Enum4codeEvEUlRKZNKS2_4codeEvE9EnumerantS5_E_PS3_EEvT0_S9_T_(%struct.Enumerant* %28, %struct.Enumerant* %336, %class.anon.497* dereferenceable(1) %2)
  %369 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %336, i64 1
  br label %370

370:                                              ; preds = %368, %360
  %371 = phi %struct.Enumerant* [ %356, %360 ], [ %369, %368 ]
  br label %25

372:                                              ; preds = %361
  %373 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %336, i64 1
  tail call void @_ZNSt3__16__sortIRZNK4SkSL4Enum4codeEvEUlRKZNKS2_4codeEvE9EnumerantS5_E_PS3_EEvT0_S9_T_(%struct.Enumerant* %373, %struct.Enumerant* %5, %class.anon.497* dereferenceable(1) %2)
  br label %359

374:                                              ; preds = %358, %256, %27, %27, %241, %253, %135, %126, %117, %107, %96, %87, %81, %77, %66, %57, %56, %32, %39, %91, %142
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort4IRZNK4SkSL4Enum4codeEvEUlRKZNKS2_4codeEvE9EnumerantS5_E_PS3_EEjT0_S9_S9_S9_T_(%struct.Enumerant*, %struct.Enumerant*, %struct.Enumerant*, %struct.Enumerant*, %class.anon.497* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %6 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %1, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp slt i64 %7, %9
  %11 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %2, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp slt i64 %12, %7
  br i1 %10, label %30, label %14

14:                                               ; preds = %5
  br i1 %13, label %15, label %50

15:                                               ; preds = %14
  %16 = bitcast %struct.Enumerant* %1 to <2 x i64>*
  %17 = load <2 x i64>, <2 x i64>* %16, align 8
  %18 = bitcast %struct.Enumerant* %1 to i8*
  %19 = bitcast %struct.Enumerant* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false) #14
  %20 = bitcast %struct.Enumerant* %2 to <2 x i64>*
  store <2 x i64> %17, <2 x i64>* %20, align 8
  store i64 %7, i64* %11, align 8
  %21 = load i64, i64* %6, align 8
  %22 = load i64, i64* %8, align 8
  %23 = icmp slt i64 %21, %22
  br i1 %23, label %24, label %50

24:                                               ; preds = %15
  %25 = bitcast %struct.Enumerant* %0 to <2 x i64>*
  %26 = load <2 x i64>, <2 x i64>* %25, align 8
  %27 = bitcast %struct.Enumerant* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %18, i64 24, i1 false) #14
  %28 = bitcast %struct.Enumerant* %1 to <2 x i64>*
  store <2 x i64> %26, <2 x i64>* %28, align 8
  store i64 %22, i64* %6, align 8
  %29 = load i64, i64* %11, align 8
  br label %50

30:                                               ; preds = %5
  %31 = bitcast %struct.Enumerant* %0 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %struct.Enumerant* %0 to i8*
  br i1 %13, label %36, label %40

36:                                               ; preds = %30
  %37 = bitcast %struct.Enumerant* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %37, i64 24, i1 false) #14
  %38 = bitcast %struct.Enumerant* %2 to i64*
  store i64 %32, i64* %38, align 8
  %39 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %2, i64 0, i32 0, i32 1
  store i64 %34, i64* %39, align 8
  store i64 %9, i64* %11, align 8
  br label %50

40:                                               ; preds = %30
  %41 = bitcast %struct.Enumerant* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %41, i64 24, i1 false) #14
  %42 = bitcast %struct.Enumerant* %1 to i64*
  store i64 %32, i64* %42, align 8
  %43 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %1, i64 0, i32 0, i32 1
  store i64 %34, i64* %43, align 8
  store i64 %9, i64* %6, align 8
  %44 = load i64, i64* %11, align 8
  %45 = icmp slt i64 %44, %9
  br i1 %45, label %46, label %50

46:                                               ; preds = %40
  %47 = bitcast %struct.Enumerant* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %47, i64 24, i1 false) #14
  %48 = bitcast %struct.Enumerant* %2 to i64*
  store i64 %32, i64* %48, align 8
  %49 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %2, i64 0, i32 0, i32 1
  store i64 %34, i64* %49, align 8
  store i64 %9, i64* %11, align 8
  br label %50

50:                                               ; preds = %14, %15, %24, %36, %40, %46
  %51 = phi i64 [ %9, %36 ], [ %12, %14 ], [ %29, %24 ], [ %7, %15 ], [ %9, %46 ], [ %44, %40 ]
  %52 = phi i32 [ 1, %36 ], [ 0, %14 ], [ 2, %24 ], [ 1, %15 ], [ 2, %46 ], [ 1, %40 ]
  %53 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %3, i64 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = icmp slt i64 %54, %51
  br i1 %55, label %56, label %81

56:                                               ; preds = %50
  %57 = bitcast %struct.Enumerant* %2 to <2 x i64>*
  %58 = load <2 x i64>, <2 x i64>* %57, align 8
  %59 = bitcast %struct.Enumerant* %2 to i8*
  %60 = bitcast %struct.Enumerant* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %60, i64 24, i1 false) #14
  %61 = bitcast %struct.Enumerant* %3 to <2 x i64>*
  store <2 x i64> %58, <2 x i64>* %61, align 8
  store i64 %51, i64* %53, align 8
  %62 = add nuw nsw i32 %52, 1
  %63 = load i64, i64* %11, align 8
  %64 = load i64, i64* %6, align 8
  %65 = icmp slt i64 %63, %64
  br i1 %65, label %66, label %81

66:                                               ; preds = %56
  %67 = bitcast %struct.Enumerant* %1 to <2 x i64>*
  %68 = load <2 x i64>, <2 x i64>* %67, align 8
  %69 = bitcast %struct.Enumerant* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %59, i64 24, i1 false) #14
  %70 = bitcast %struct.Enumerant* %2 to <2 x i64>*
  store <2 x i64> %68, <2 x i64>* %70, align 8
  store i64 %64, i64* %11, align 8
  %71 = add nuw nsw i32 %52, 2
  %72 = load i64, i64* %6, align 8
  %73 = load i64, i64* %8, align 8
  %74 = icmp slt i64 %72, %73
  br i1 %74, label %75, label %81

75:                                               ; preds = %66
  %76 = bitcast %struct.Enumerant* %0 to <2 x i64>*
  %77 = load <2 x i64>, <2 x i64>* %76, align 8
  %78 = bitcast %struct.Enumerant* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %69, i64 24, i1 false) #14
  %79 = bitcast %struct.Enumerant* %1 to <2 x i64>*
  store <2 x i64> %77, <2 x i64>* %79, align 8
  store i64 %73, i64* %6, align 8
  %80 = add nuw nsw i32 %52, 3
  br label %81

81:                                               ; preds = %56, %75, %66, %50
  %82 = phi i32 [ %80, %75 ], [ %71, %66 ], [ %62, %56 ], [ %52, %50 ]
  ret i32 %82
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__insertion_sort_3IRZNK4SkSL4Enum4codeEvEUlRKZNKS2_4codeEvE9EnumerantS5_E_PS3_EEvT0_S9_T_(%struct.Enumerant*, %struct.Enumerant*, %class.anon.497* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 2
  %5 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 1
  %6 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 1, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp slt i64 %7, %9
  %11 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 2, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp slt i64 %12, %7
  br i1 %10, label %28, label %14

14:                                               ; preds = %3
  br i1 %13, label %15, label %47

15:                                               ; preds = %14
  %16 = bitcast %struct.Enumerant* %5 to <2 x i64>*
  %17 = load <2 x i64>, <2 x i64>* %16, align 8
  %18 = bitcast %struct.Enumerant* %5 to i8*
  %19 = bitcast %struct.Enumerant* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false) #14
  %20 = bitcast %struct.Enumerant* %4 to <2 x i64>*
  store <2 x i64> %17, <2 x i64>* %20, align 8
  store i64 %7, i64* %11, align 8
  %21 = load i64, i64* %6, align 8
  %22 = icmp slt i64 %21, %9
  br i1 %22, label %23, label %47

23:                                               ; preds = %15
  %24 = bitcast %struct.Enumerant* %0 to <2 x i64>*
  %25 = load <2 x i64>, <2 x i64>* %24, align 8
  %26 = bitcast %struct.Enumerant* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %18, i64 24, i1 false) #14
  %27 = bitcast %struct.Enumerant* %5 to <2 x i64>*
  store <2 x i64> %25, <2 x i64>* %27, align 8
  store i64 %9, i64* %6, align 8
  br label %47

28:                                               ; preds = %3
  %29 = bitcast %struct.Enumerant* %0 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %struct.Enumerant* %0 to i8*
  br i1 %13, label %34, label %38

34:                                               ; preds = %28
  %35 = bitcast %struct.Enumerant* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %35, i64 24, i1 false) #14
  %36 = bitcast %struct.Enumerant* %4 to i64*
  store i64 %30, i64* %36, align 8
  %37 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 2, i32 0, i32 1
  store i64 %32, i64* %37, align 8
  store i64 %9, i64* %11, align 8
  br label %47

38:                                               ; preds = %28
  %39 = bitcast %struct.Enumerant* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %39, i64 24, i1 false) #14
  %40 = bitcast %struct.Enumerant* %5 to i64*
  store i64 %30, i64* %40, align 8
  %41 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 1, i32 0, i32 1
  store i64 %32, i64* %41, align 8
  store i64 %9, i64* %6, align 8
  %42 = icmp slt i64 %12, %9
  br i1 %42, label %43, label %47

43:                                               ; preds = %38
  %44 = bitcast %struct.Enumerant* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %44, i64 24, i1 false) #14
  %45 = bitcast %struct.Enumerant* %4 to i64*
  store i64 %30, i64* %45, align 8
  %46 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 2, i32 0, i32 1
  store i64 %32, i64* %46, align 8
  store i64 %9, i64* %11, align 8
  br label %47

47:                                               ; preds = %14, %15, %23, %34, %38, %43
  %48 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 3
  %49 = icmp eq %struct.Enumerant* %48, %1
  br i1 %49, label %50, label %51

50:                                               ; preds = %77, %47
  ret void

51:                                               ; preds = %47, %77
  %52 = phi %struct.Enumerant* [ %78, %77 ], [ %48, %47 ]
  %53 = phi %struct.Enumerant* [ %52, %77 ], [ %4, %47 ]
  %54 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %52, i64 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %53, i64 0, i32 1
  %57 = load i64, i64* %56, align 8
  %58 = icmp slt i64 %55, %57
  br i1 %58, label %59, label %77

59:                                               ; preds = %51
  %60 = bitcast %struct.Enumerant* %52 to <2 x i64>*
  %61 = load <2 x i64>, <2 x i64>* %60, align 8
  br label %62

62:                                               ; preds = %68, %59
  %63 = phi %struct.Enumerant* [ %52, %59 ], [ %64, %68 ]
  %64 = phi %struct.Enumerant* [ %53, %59 ], [ %69, %68 ]
  %65 = bitcast %struct.Enumerant* %63 to i8*
  %66 = bitcast %struct.Enumerant* %64 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 24, i1 false)
  %67 = icmp eq %struct.Enumerant* %64, %0
  br i1 %67, label %73, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %64, i64 -1
  %70 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %64, i64 -1, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = icmp slt i64 %55, %71
  br i1 %72, label %62, label %73

73:                                               ; preds = %62, %68
  %74 = phi %struct.Enumerant* [ %0, %62 ], [ %64, %68 ]
  %75 = bitcast %struct.Enumerant* %74 to <2 x i64>*
  store <2 x i64> %61, <2 x i64>* %75, align 8
  %76 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %74, i64 0, i32 1
  store i64 %55, i64* %76, align 8
  br label %77

77:                                               ; preds = %73, %51
  %78 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %52, i64 1
  %79 = icmp eq %struct.Enumerant* %78, %1
  br i1 %79, label %50, label %51
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRZNK4SkSL4Enum4codeEvEUlRKZNKS2_4codeEvE9EnumerantS5_E_PS3_EEbT0_S9_T_(%struct.Enumerant*, %struct.Enumerant*, %class.anon.497* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %4 = ptrtoint %struct.Enumerant* %1 to i64
  %5 = ptrtoint %struct.Enumerant* %0 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 24
  switch i64 %7, label %116 [
    i64 0, label %199
    i64 1, label %199
    i64 2, label %8
    i64 3, label %21
    i64 4, label %67
    i64 5, label %72
  ]

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %1, i64 -1
  %10 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %1, i64 -1, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = icmp slt i64 %11, %13
  br i1 %14, label %15, label %199

15:                                               ; preds = %8
  %16 = bitcast %struct.Enumerant* %0 to <2 x i64>*
  %17 = load <2 x i64>, <2 x i64>* %16, align 8
  %18 = bitcast %struct.Enumerant* %0 to i8*
  %19 = bitcast %struct.Enumerant* %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false) #14
  %20 = bitcast %struct.Enumerant* %9 to <2 x i64>*
  store <2 x i64> %17, <2 x i64>* %20, align 8
  store i64 %13, i64* %10, align 8
  br label %199

21:                                               ; preds = %3
  %22 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 1
  %23 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %1, i64 -1
  %24 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 1, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = icmp slt i64 %25, %27
  %29 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %1, i64 -1, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = icmp slt i64 %30, %25
  br i1 %28, label %47, label %32

32:                                               ; preds = %21
  br i1 %31, label %33, label %199

33:                                               ; preds = %32
  %34 = bitcast %struct.Enumerant* %22 to <2 x i64>*
  %35 = load <2 x i64>, <2 x i64>* %34, align 8
  %36 = bitcast %struct.Enumerant* %22 to i8*
  %37 = bitcast %struct.Enumerant* %23 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 24, i1 false) #14
  %38 = bitcast %struct.Enumerant* %23 to <2 x i64>*
  store <2 x i64> %35, <2 x i64>* %38, align 8
  store i64 %25, i64* %29, align 8
  %39 = load i64, i64* %24, align 8
  %40 = load i64, i64* %26, align 8
  %41 = icmp slt i64 %39, %40
  br i1 %41, label %42, label %199

42:                                               ; preds = %33
  %43 = bitcast %struct.Enumerant* %0 to <2 x i64>*
  %44 = load <2 x i64>, <2 x i64>* %43, align 8
  %45 = bitcast %struct.Enumerant* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %36, i64 24, i1 false) #14
  %46 = bitcast %struct.Enumerant* %22 to <2 x i64>*
  store <2 x i64> %44, <2 x i64>* %46, align 8
  store i64 %40, i64* %24, align 8
  br label %199

47:                                               ; preds = %21
  %48 = bitcast %struct.Enumerant* %0 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 0, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %struct.Enumerant* %0 to i8*
  br i1 %31, label %53, label %57

53:                                               ; preds = %47
  %54 = bitcast %struct.Enumerant* %23 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %54, i64 24, i1 false) #14
  %55 = bitcast %struct.Enumerant* %23 to i64*
  store i64 %49, i64* %55, align 8
  %56 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %1, i64 -1, i32 0, i32 1
  store i64 %51, i64* %56, align 8
  store i64 %27, i64* %29, align 8
  br label %199

57:                                               ; preds = %47
  %58 = bitcast %struct.Enumerant* %22 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %58, i64 24, i1 false) #14
  %59 = bitcast %struct.Enumerant* %22 to i64*
  store i64 %49, i64* %59, align 8
  %60 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 1, i32 0, i32 1
  store i64 %51, i64* %60, align 8
  store i64 %27, i64* %24, align 8
  %61 = load i64, i64* %29, align 8
  %62 = icmp slt i64 %61, %27
  br i1 %62, label %63, label %199

63:                                               ; preds = %57
  %64 = bitcast %struct.Enumerant* %23 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %64, i64 24, i1 false) #14
  %65 = bitcast %struct.Enumerant* %23 to i64*
  store i64 %49, i64* %65, align 8
  %66 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %1, i64 -1, i32 0, i32 1
  store i64 %51, i64* %66, align 8
  store i64 %27, i64* %29, align 8
  br label %199

67:                                               ; preds = %3
  %68 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 1
  %69 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 2
  %70 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %1, i64 -1
  %71 = tail call i32 @_ZNSt3__17__sort4IRZNK4SkSL4Enum4codeEvEUlRKZNKS2_4codeEvE9EnumerantS5_E_PS3_EEjT0_S9_S9_S9_T_(%struct.Enumerant* %0, %struct.Enumerant* %68, %struct.Enumerant* %69, %struct.Enumerant* %70, %class.anon.497* dereferenceable(1) %2)
  br label %199

72:                                               ; preds = %3
  %73 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 1
  %74 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 2
  %75 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 3
  %76 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %1, i64 -1
  %77 = tail call i32 @_ZNSt3__17__sort4IRZNK4SkSL4Enum4codeEvEUlRKZNKS2_4codeEvE9EnumerantS5_E_PS3_EEjT0_S9_S9_S9_T_(%struct.Enumerant* %0, %struct.Enumerant* %73, %struct.Enumerant* %74, %struct.Enumerant* %75, %class.anon.497* dereferenceable(1) %2) #14
  %78 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %1, i64 -1, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 3, i32 1
  %81 = load i64, i64* %80, align 8
  %82 = icmp slt i64 %79, %81
  br i1 %82, label %83, label %199

83:                                               ; preds = %72
  %84 = bitcast %struct.Enumerant* %75 to <2 x i64>*
  %85 = load <2 x i64>, <2 x i64>* %84, align 8
  %86 = bitcast %struct.Enumerant* %75 to i8*
  %87 = bitcast %struct.Enumerant* %76 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* align 8 %87, i64 24, i1 false) #14
  %88 = bitcast %struct.Enumerant* %76 to <2 x i64>*
  store <2 x i64> %85, <2 x i64>* %88, align 8
  store i64 %81, i64* %78, align 8
  %89 = load i64, i64* %80, align 8
  %90 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 2, i32 1
  %91 = load i64, i64* %90, align 8
  %92 = icmp slt i64 %89, %91
  br i1 %92, label %93, label %199

93:                                               ; preds = %83
  %94 = bitcast %struct.Enumerant* %74 to <2 x i64>*
  %95 = load <2 x i64>, <2 x i64>* %94, align 8
  %96 = bitcast %struct.Enumerant* %74 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %96, i8* align 8 %86, i64 24, i1 false) #14
  %97 = bitcast %struct.Enumerant* %75 to <2 x i64>*
  store <2 x i64> %95, <2 x i64>* %97, align 8
  store i64 %91, i64* %80, align 8
  %98 = load i64, i64* %90, align 8
  %99 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 1, i32 1
  %100 = load i64, i64* %99, align 8
  %101 = icmp slt i64 %98, %100
  br i1 %101, label %102, label %199

102:                                              ; preds = %93
  %103 = bitcast %struct.Enumerant* %73 to <2 x i64>*
  %104 = load <2 x i64>, <2 x i64>* %103, align 8
  %105 = bitcast %struct.Enumerant* %73 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %96, i64 24, i1 false) #14
  %106 = bitcast %struct.Enumerant* %74 to <2 x i64>*
  store <2 x i64> %104, <2 x i64>* %106, align 8
  store i64 %100, i64* %90, align 8
  %107 = load i64, i64* %99, align 8
  %108 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 0, i32 1
  %109 = load i64, i64* %108, align 8
  %110 = icmp slt i64 %107, %109
  br i1 %110, label %111, label %199

111:                                              ; preds = %102
  %112 = bitcast %struct.Enumerant* %0 to <2 x i64>*
  %113 = load <2 x i64>, <2 x i64>* %112, align 8
  %114 = bitcast %struct.Enumerant* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %114, i8* align 8 %105, i64 24, i1 false) #14
  %115 = bitcast %struct.Enumerant* %73 to <2 x i64>*
  store <2 x i64> %113, <2 x i64>* %115, align 8
  store i64 %109, i64* %99, align 8
  br label %199

116:                                              ; preds = %3
  %117 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 2
  %118 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 1
  %119 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 1, i32 1
  %120 = load i64, i64* %119, align 8
  %121 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 0, i32 1
  %122 = load i64, i64* %121, align 8
  %123 = icmp slt i64 %120, %122
  %124 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 2, i32 1
  %125 = load i64, i64* %124, align 8
  %126 = icmp slt i64 %125, %120
  br i1 %123, label %141, label %127

127:                                              ; preds = %116
  br i1 %126, label %128, label %160

128:                                              ; preds = %127
  %129 = bitcast %struct.Enumerant* %118 to <2 x i64>*
  %130 = load <2 x i64>, <2 x i64>* %129, align 8
  %131 = bitcast %struct.Enumerant* %118 to i8*
  %132 = bitcast %struct.Enumerant* %117 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %131, i8* align 8 %132, i64 24, i1 false) #14
  %133 = bitcast %struct.Enumerant* %117 to <2 x i64>*
  store <2 x i64> %130, <2 x i64>* %133, align 8
  store i64 %120, i64* %124, align 8
  %134 = load i64, i64* %119, align 8
  %135 = icmp slt i64 %134, %122
  br i1 %135, label %136, label %160

136:                                              ; preds = %128
  %137 = bitcast %struct.Enumerant* %0 to <2 x i64>*
  %138 = load <2 x i64>, <2 x i64>* %137, align 8
  %139 = bitcast %struct.Enumerant* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %139, i8* align 8 %131, i64 24, i1 false) #14
  %140 = bitcast %struct.Enumerant* %118 to <2 x i64>*
  store <2 x i64> %138, <2 x i64>* %140, align 8
  store i64 %122, i64* %119, align 8
  br label %160

141:                                              ; preds = %116
  %142 = bitcast %struct.Enumerant* %0 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 0, i32 0, i32 1
  %145 = load i64, i64* %144, align 8
  %146 = bitcast %struct.Enumerant* %0 to i8*
  br i1 %126, label %147, label %151

147:                                              ; preds = %141
  %148 = bitcast %struct.Enumerant* %117 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %146, i8* align 8 %148, i64 24, i1 false) #14
  %149 = bitcast %struct.Enumerant* %117 to i64*
  store i64 %143, i64* %149, align 8
  %150 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 2, i32 0, i32 1
  store i64 %145, i64* %150, align 8
  store i64 %122, i64* %124, align 8
  br label %160

151:                                              ; preds = %141
  %152 = bitcast %struct.Enumerant* %118 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %146, i8* align 8 %152, i64 24, i1 false) #14
  %153 = bitcast %struct.Enumerant* %118 to i64*
  store i64 %143, i64* %153, align 8
  %154 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 1, i32 0, i32 1
  store i64 %145, i64* %154, align 8
  store i64 %122, i64* %119, align 8
  %155 = icmp slt i64 %125, %122
  br i1 %155, label %156, label %160

156:                                              ; preds = %151
  %157 = bitcast %struct.Enumerant* %117 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %152, i8* align 8 %157, i64 24, i1 false) #14
  %158 = bitcast %struct.Enumerant* %117 to i64*
  store i64 %143, i64* %158, align 8
  %159 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 2, i32 0, i32 1
  store i64 %145, i64* %159, align 8
  store i64 %122, i64* %124, align 8
  br label %160

160:                                              ; preds = %127, %128, %136, %147, %151, %156
  %161 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %0, i64 3
  %162 = icmp eq %struct.Enumerant* %161, %1
  br i1 %162, label %199, label %163

163:                                              ; preds = %160, %192
  %164 = phi %struct.Enumerant* [ %194, %192 ], [ %161, %160 ]
  %165 = phi i32 [ %193, %192 ], [ 0, %160 ]
  %166 = phi %struct.Enumerant* [ %164, %192 ], [ %117, %160 ]
  %167 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %164, i64 0, i32 1
  %168 = load i64, i64* %167, align 8
  %169 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %166, i64 0, i32 1
  %170 = load i64, i64* %169, align 8
  %171 = icmp slt i64 %168, %170
  br i1 %171, label %172, label %192

172:                                              ; preds = %163
  %173 = bitcast %struct.Enumerant* %164 to <2 x i64>*
  %174 = load <2 x i64>, <2 x i64>* %173, align 8
  br label %175

175:                                              ; preds = %181, %172
  %176 = phi %struct.Enumerant* [ %164, %172 ], [ %177, %181 ]
  %177 = phi %struct.Enumerant* [ %166, %172 ], [ %182, %181 ]
  %178 = bitcast %struct.Enumerant* %176 to i8*
  %179 = bitcast %struct.Enumerant* %177 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %178, i8* align 8 %179, i64 24, i1 false)
  %180 = icmp eq %struct.Enumerant* %177, %0
  br i1 %180, label %186, label %181

181:                                              ; preds = %175
  %182 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %177, i64 -1
  %183 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %177, i64 -1, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp slt i64 %168, %184
  br i1 %185, label %175, label %186

186:                                              ; preds = %175, %181
  %187 = phi %struct.Enumerant* [ %0, %175 ], [ %177, %181 ]
  %188 = bitcast %struct.Enumerant* %187 to <2 x i64>*
  store <2 x i64> %174, <2 x i64>* %188, align 8
  %189 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %187, i64 0, i32 1
  store i64 %168, i64* %189, align 8
  %190 = add i32 %165, 1
  %191 = icmp eq i32 %190, 8
  br i1 %191, label %196, label %192

192:                                              ; preds = %186, %163
  %193 = phi i32 [ %190, %186 ], [ %165, %163 ]
  %194 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %164, i64 1
  %195 = icmp eq %struct.Enumerant* %194, %1
  br i1 %195, label %199, label %163

196:                                              ; preds = %186
  %197 = getelementptr inbounds %struct.Enumerant, %struct.Enumerant* %164, i64 1
  %198 = icmp eq %struct.Enumerant* %197, %1
  br label %199

199:                                              ; preds = %192, %196, %160, %111, %102, %93, %83, %72, %63, %57, %53, %42, %33, %32, %8, %15, %3, %3, %67
  %200 = phi i1 [ true, %67 ], [ true, %3 ], [ true, %3 ], [ true, %15 ], [ true, %8 ], [ true, %32 ], [ true, %33 ], [ true, %42 ], [ true, %53 ], [ true, %57 ], [ true, %63 ], [ true, %72 ], [ true, %83 ], [ true, %93 ], [ true, %102 ], [ true, %111 ], [ true, %160 ], [ %198, %196 ], [ true, %192 ]
  ret i1 %200
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL17FunctionReferenceD2Ev(%"class.SkSL::FunctionReference"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::FunctionReference", %"class.SkSL::FunctionReference"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL17FunctionReferenceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::FunctionReference", %"class.SkSL::FunctionReference"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.SkSL::FunctionDeclaration"**, %"class.SkSL::FunctionDeclaration"*** %3, align 8
  %5 = icmp eq %"class.SkSL::FunctionDeclaration"** %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.SkSL::FunctionDeclaration"** %4 to i64
  %8 = getelementptr inbounds %"class.SkSL::FunctionReference", %"class.SkSL::FunctionReference"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast %"class.SkSL::FunctionDeclaration"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.SkSL::FunctionDeclaration"** %4 to i8*
  tail call void @_ZdlPv(i8* %10) #15
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL17FunctionReferenceD0Ev(%"class.SkSL::FunctionReference"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::FunctionReference", %"class.SkSL::FunctionReference"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL17FunctionReferenceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::FunctionReference", %"class.SkSL::FunctionReference"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.SkSL::FunctionDeclaration"**, %"class.SkSL::FunctionDeclaration"*** %3, align 8
  %5 = icmp eq %"class.SkSL::FunctionDeclaration"** %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.SkSL::FunctionDeclaration"** %4 to i64
  %8 = getelementptr inbounds %"class.SkSL::FunctionReference", %"class.SkSL::FunctionReference"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast %"class.SkSL::FunctionDeclaration"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.SkSL::FunctionDeclaration"** %4 to i8*
  tail call void @_ZdlPv(i8* %10) #15
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.SkSL::FunctionReference"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %12) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL17FunctionReference11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::FunctionReference"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  store i8 10, i8* %4, align 1
  %5 = bitcast %"class.SkSL::String"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @.str.188, i64 0, i64 0), i64 10, i1 false) #14
  %6 = getelementptr inbounds i8, i8* %5, i64 10
  store i8 0, i8* %6, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL17FunctionReference11hasPropertyENS_10Expression8PropertyE(%"class.SkSL::FunctionReference"*, i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL17FunctionReference5cloneEv(%"class.SkSL::FunctionReference"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::vector.315", align 16
  %3 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 48) #14
  %4 = getelementptr inbounds %"class.SkSL::FunctionReference", %"class.SkSL::FunctionReference"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::FunctionReference", %"class.SkSL::FunctionReference"* %0, i64 0, i32 1
  %7 = bitcast %"class.std::__1::vector.315"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 0, i64 24, i1 false) #14
  %8 = getelementptr inbounds %"class.SkSL::FunctionReference", %"class.SkSL::FunctionReference"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast %"class.SkSL::FunctionDeclaration"*** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.315"* %6 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp eq i64 %13, 0
  br i1 %15, label %38, label %16

16:                                               ; preds = %1
  %17 = icmp ugt i64 %14, 2305843009213693951
  br i1 %17, label %18, label %20

18:                                               ; preds = %16
  %19 = bitcast %"class.std::__1::vector.315"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %19) #16
  unreachable

20:                                               ; preds = %16
  %21 = tail call i8* @_Znwm(i64 %13) #15
  %22 = bitcast i8* %21 to %"class.SkSL::FunctionDeclaration"**
  %23 = getelementptr inbounds %"class.std::__1::vector.315", %"class.std::__1::vector.315"* %2, i64 0, i32 0, i32 1
  %24 = bitcast %"class.SkSL::FunctionDeclaration"*** %23 to i8**
  store i8* %21, i8** %24, align 8
  %25 = bitcast %"class.std::__1::vector.315"* %2 to i8**
  store i8* %21, i8** %25, align 16
  %26 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %22, i64 %14
  %27 = getelementptr inbounds %"class.std::__1::vector.315", %"class.std::__1::vector.315"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.SkSL::FunctionDeclaration"** %26, %"class.SkSL::FunctionDeclaration"*** %27, align 16
  %28 = bitcast %"class.SkSL::FunctionDeclaration"*** %23 to i64*
  %29 = ptrtoint i8* %21 to i64
  %30 = icmp sgt i64 %13, 0
  br i1 %30, label %31, label %36

31:                                               ; preds = %20
  %32 = lshr exact i64 %13, 3
  %33 = inttoptr i64 %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %33, i64 %13, i1 false) #14
  %34 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %22, i64 %32
  %35 = ptrtoint %"class.SkSL::FunctionDeclaration"** %34 to i64
  br label %36

36:                                               ; preds = %31, %20
  %37 = phi i64 [ %35, %31 ], [ %29, %20 ]
  store i64 %37, i64* %28, align 8
  br label %38

38:                                               ; preds = %36, %1
  %39 = getelementptr inbounds %"class.SkSL::FunctionReference", %"class.SkSL::FunctionReference"* %0, i64 0, i32 0, i32 1
  %40 = bitcast %"class.SkSL::Type"** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast i8* %3 to i32 (...)***
  %43 = getelementptr inbounds i8, i8* %3, i64 8
  %44 = bitcast i8* %43 to i32*
  store i32 %5, i32* %44, align 8
  %45 = getelementptr inbounds i8, i8* %3, i64 12
  %46 = bitcast i8* %45 to i32*
  store i32 46, i32* %46, align 4
  %47 = getelementptr inbounds i8, i8* %3, i64 16
  %48 = bitcast i8* %47 to i64*
  store i64 %41, i64* %48, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL17FunctionReferenceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %49 = getelementptr inbounds i8, i8* %3, i64 24
  %50 = bitcast %"class.std::__1::vector.315"* %2 to <2 x i64>*
  %51 = load <2 x i64>, <2 x i64>* %50, align 16
  %52 = bitcast i8* %49 to <2 x i64>*
  store <2 x i64> %51, <2 x i64>* %52, align 8
  %53 = getelementptr inbounds %"class.std::__1::vector.315", %"class.std::__1::vector.315"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %54 = bitcast %"class.SkSL::FunctionDeclaration"*** %53 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = getelementptr inbounds i8, i8* %3, i64 40
  %57 = bitcast i8* %56 to i64*
  store i64 %55, i64* %57, align 8
  %58 = bitcast i8* %3 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %58
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL13TypeReferenceD0Ev(%"class.SkSL::TypeReference"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.SkSL::TypeReference"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL13TypeReference11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::TypeReference"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::TypeReference", %"class.SkSL::TypeReference"* %1, i64 0, i32 1
  %4 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %3, align 8
  %5 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %4, i64 0, i32 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, -17
  br i1 %9, label %10, label %12

10:                                               ; preds = %2
  %11 = bitcast %"class.SkSL::String"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %11) #16
  unreachable

12:                                               ; preds = %2
  %13 = icmp ult i64 %8, 23
  br i1 %13, label %22, label %14

14:                                               ; preds = %12
  %15 = add nuw i64 %8, 16
  %16 = and i64 %15, -16
  %17 = tail call i8* @_Znwm(i64 %16) #15
  %18 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %17, i8** %18, align 8
  %19 = or i64 %16, -9223372036854775808
  %20 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %8, i64* %21, align 8
  br label %28

22:                                               ; preds = %12
  %23 = trunc i64 %8 to i8
  %24 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  store i8 %23, i8* %25, align 1
  %26 = bitcast %"class.SkSL::String"* %0 to i8*
  %27 = icmp eq i64 %8, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %22, %14
  %29 = phi i8* [ %17, %14 ], [ %26, %22 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %29, i8* align 1 %6, i64 %8, i1 false) #14
  br label %30

30:                                               ; preds = %22, %28
  %31 = phi i8* [ %26, %22 ], [ %29, %28 ]
  %32 = getelementptr inbounds i8, i8* %31, i64 %8
  store i8 0, i8* %32, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL13TypeReference11hasPropertyENS_10Expression8PropertyE(%"class.SkSL::TypeReference"*, i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL13TypeReference5cloneEv(%"class.SkSL::TypeReference"*) unnamed_addr #0 comdat align 2 {
  %2 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #14
  %3 = getelementptr inbounds %"class.SkSL::TypeReference", %"class.SkSL::TypeReference"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.SkSL::TypeReference", %"class.SkSL::TypeReference"* %0, i64 0, i32 0, i32 1
  %6 = bitcast %"class.SkSL::Type"** %5 to <2 x i64>*
  %7 = load <2 x i64>, <2 x i64>* %6, align 8
  %8 = bitcast i8* %2 to i32 (...)***
  %9 = getelementptr inbounds i8, i8* %2, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 %4, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %2, i64 12
  %12 = bitcast i8* %11 to i32*
  store i32 54, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %2, i64 16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL13TypeReferenceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %14 = bitcast i8* %13 to <2 x i64>*
  store <2 x i64> %7, <2 x i64>* %14, align 8
  %15 = bitcast i8* %2 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %15
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL6IRNodeD2Ev(%"class.SkSL::IRNode"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL25ExternalFunctionReferenceD0Ev(%"class.SkSL::ExternalFunctionReference"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.SkSL::ExternalFunctionReference"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL25ExternalFunctionReference11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::ExternalFunctionReference"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::ExternalFunctionReference", %"class.SkSL::ExternalFunctionReference"* %1, i64 0, i32 1
  %4 = load %"class.SkSL::ExternalFunction"*, %"class.SkSL::ExternalFunction"** %3, align 8
  %5 = getelementptr inbounds %"class.SkSL::ExternalFunction", %"class.SkSL::ExternalFunction"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.SkSL::ExternalFunction", %"class.SkSL::ExternalFunction"* %4, i64 0, i32 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, -17
  br i1 %9, label %10, label %12

10:                                               ; preds = %2
  %11 = bitcast %"class.SkSL::String"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %11) #16
  unreachable

12:                                               ; preds = %2
  %13 = icmp ult i64 %8, 23
  br i1 %13, label %22, label %14

14:                                               ; preds = %12
  %15 = add nuw i64 %8, 16
  %16 = and i64 %15, -16
  %17 = tail call i8* @_Znwm(i64 %16) #15
  %18 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %17, i8** %18, align 8
  %19 = or i64 %16, -9223372036854775808
  %20 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %8, i64* %21, align 8
  br label %28

22:                                               ; preds = %12
  %23 = trunc i64 %8 to i8
  %24 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  store i8 %23, i8* %25, align 1
  %26 = bitcast %"class.SkSL::String"* %0 to i8*
  %27 = icmp eq i64 %8, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %22, %14
  %29 = phi i8* [ %17, %14 ], [ %26, %22 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %29, i8* align 1 %6, i64 %8, i1 false) #14
  br label %30

30:                                               ; preds = %22, %28
  %31 = phi i8* [ %26, %22 ], [ %29, %28 ]
  %32 = getelementptr inbounds i8, i8* %31, i64 %8
  store i8 0, i8* %32, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL25ExternalFunctionReference11hasPropertyENS_10Expression8PropertyE(%"class.SkSL::ExternalFunctionReference"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL25ExternalFunctionReference5cloneEv(%"class.SkSL::ExternalFunctionReference"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::ExternalFunctionReference", %"class.SkSL::ExternalFunctionReference"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.SkSL::ExternalFunctionReference", %"class.SkSL::ExternalFunctionReference"* %0, i64 0, i32 1
  %4 = load %"class.SkSL::ExternalFunction"*, %"class.SkSL::ExternalFunction"** %3, align 8
  %5 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #14
  %6 = load i32, i32* %2, align 4
  %7 = getelementptr inbounds %"class.SkSL::ExternalFunction", %"class.SkSL::ExternalFunction"* %4, i64 0, i32 0, i32 2
  %8 = bitcast %"class.SkSL::Type"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast i8* %5 to i32 (...)***
  %11 = getelementptr inbounds i8, i8* %5, i64 8
  %12 = bitcast i8* %11 to i32*
  store i32 %6, i32* %12, align 8
  %13 = getelementptr inbounds i8, i8* %5, i64 12
  %14 = bitcast i8* %13 to i32*
  store i32 42, i32* %14, align 4
  %15 = getelementptr inbounds i8, i8* %5, i64 16
  %16 = bitcast i8* %15 to i64*
  store i64 %9, i64* %16, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL25ExternalFunctionReferenceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %17 = getelementptr inbounds i8, i8* %5, i64 24
  %18 = bitcast i8* %17 to %"class.SkSL::ExternalFunction"**
  store %"class.SkSL::ExternalFunction"* %4, %"class.SkSL::ExternalFunction"** %18, align 8
  %19 = bitcast i8* %5 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %19
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL7SectionD2Ev(%"class.SkSL::Section"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Section", %"class.SkSL::Section"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL7SectionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::Section", %"class.SkSL::Section"* %0, i64 0, i32 3, i32 0
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #15
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.SkSL::Section", %"class.SkSL::Section"* %0, i64 0, i32 2, i32 0
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #15
  br label %20

20:                                               ; preds = %11, %17
  %21 = getelementptr inbounds %"class.SkSL::Section", %"class.SkSL::Section"* %0, i64 0, i32 1, i32 0
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #15
  br label %29

29:                                               ; preds = %20, %26
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL7SectionD0Ev(%"class.SkSL::Section"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Section", %"class.SkSL::Section"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL7SectionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::Section", %"class.SkSL::Section"* %0, i64 0, i32 3, i32 0
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #15
  br label %11

11:                                               ; preds = %8, %1
  %12 = getelementptr inbounds %"class.SkSL::Section", %"class.SkSL::Section"* %0, i64 0, i32 2, i32 0
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #15
  br label %20

20:                                               ; preds = %17, %11
  %21 = getelementptr inbounds %"class.SkSL::Section", %"class.SkSL::Section"* %0, i64 0, i32 1, i32 0
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #15
  br label %29

29:                                               ; preds = %20, %26
  %30 = bitcast %"class.SkSL::Section"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %30) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL7Section11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::Section"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = getelementptr inbounds %"class.SkSL::Section", %"class.SkSL::Section"* %1, i64 0, i32 1
  %8 = bitcast %"class.SkSL::String"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 -86, i64 24, i1 false)
  tail call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* sret %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.189, i64 0, i64 0), %"class.SkSL::String"* dereferenceable(24) %7) #14
  %9 = getelementptr inbounds %"class.SkSL::Section", %"class.SkSL::Section"* %1, i64 0, i32 2
  %10 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.SkSL::Section", %"class.SkSL::Section"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  br label %19

17:                                               ; preds = %2
  %18 = zext i8 %12 to i64
  br label %19

19:                                               ; preds = %14, %17
  %20 = phi i64 [ %16, %14 ], [ %18, %17 ]
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %42, label %22

22:                                               ; preds = %19
  %23 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #14
  %24 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #14
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.84, i64 0, i64 0), %"class.SkSL::String"* dereferenceable(24) %9) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::String"* nonnull %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86, i64 0, i64 0)) #14
  %25 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %3) #14
  %26 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %32) #15
  br label %33

33:                                               ; preds = %22, %30
  %34 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  call void @_ZdlPv(i8* %40) #15
  br label %41

41:                                               ; preds = %33, %38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #14
  br label %42

42:                                               ; preds = %19, %41
  %43 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #14
  %44 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #14
  %45 = getelementptr inbounds %"class.SkSL::Section", %"class.SkSL::Section"* %1, i64 0, i32 3
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.170, i64 0, i64 0), %"class.SkSL::String"* dereferenceable(24) %45) #14
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %5, %"class.SkSL::String"* nonnull %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.190, i64 0, i64 0)) #14
  %46 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %5) #14
  %47 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %42
  %52 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  call void @_ZdlPv(i8* %53) #15
  br label %54

54:                                               ; preds = %42, %51
  %55 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  call void @_ZdlPv(i8* %61) #15
  br label %62

62:                                               ; preds = %54, %59
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::ProgramElement"* @_ZNK4SkSL7Section5cloneEv(%"class.SkSL::Section"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.SkSL::String", align 8
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 88) #14
  %6 = getelementptr inbounds %"class.SkSL::Section", %"class.SkSL::Section"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.SkSL::Section", %"class.SkSL::Section"* %0, i64 0, i32 1
  %9 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.SkSL::String"* %2 to i8*
  %15 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 8 %15, i64 24, i1 false) #14
  br label %22

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0
  %18 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %"class.SkSL::Section", %"class.SkSL::Section"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %17, i8* %19, i64 %21) #14
  br label %22

22:                                               ; preds = %13, %16
  %23 = getelementptr inbounds %"class.SkSL::Section", %"class.SkSL::Section"* %0, i64 0, i32 2
  %24 = bitcast %"class.SkSL::String"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.SkSL::String"* %3 to i8*
  %30 = bitcast %"class.SkSL::String"* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %29, i8* align 8 %30, i64 24, i1 false) #14
  br label %37

31:                                               ; preds = %22
  %32 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0
  %33 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds %"class.SkSL::Section", %"class.SkSL::Section"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %32, i8* %34, i64 %36) #14
  br label %37

37:                                               ; preds = %28, %31
  %38 = getelementptr inbounds %"class.SkSL::Section", %"class.SkSL::Section"* %0, i64 0, i32 3
  %39 = bitcast %"class.SkSL::String"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %37
  %44 = bitcast %"class.SkSL::String"* %4 to i8*
  %45 = bitcast %"class.SkSL::String"* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 8 %45, i64 24, i1 false) #14
  br label %53

46:                                               ; preds = %37
  %47 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0
  %48 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = getelementptr inbounds %"class.SkSL::Section", %"class.SkSL::Section"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %47, i8* %49, i64 %51) #14
  %52 = bitcast %"class.SkSL::String"* %4 to i8*
  br label %53

53:                                               ; preds = %46, %43
  %54 = phi i8* [ %44, %43 ], [ %52, %46 ]
  %55 = getelementptr inbounds i8, i8* %5, i64 8
  %56 = bitcast i8* %55 to i32*
  store i32 %7, i32* %56, align 8
  %57 = getelementptr inbounds i8, i8* %5, i64 12
  %58 = bitcast i8* %57 to i32*
  store i32 7, i32* %58, align 4
  %59 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL7SectionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %59, align 8
  %60 = getelementptr inbounds i8, i8* %5, i64 16
  %61 = bitcast %"class.SkSL::String"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* nonnull align 8 %61, i64 24, i1 false) #14
  %62 = getelementptr inbounds i8, i8* %5, i64 40
  %63 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* nonnull align 8 %63, i64 24, i1 false) #14
  %64 = getelementptr inbounds i8, i8* %5, i64 64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* nonnull align 8 %54, i64 24, i1 false) #14
  %65 = bitcast i8* %5 to %"class.SkSL::ProgramElement"*
  ret %"class.SkSL::ProgramElement"* %65
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__16__sortIRZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS1_19FunctionDeclarationEE3$_6PPS4_EEvT0_SA_T_"(%"class.SkSL::FunctionDeclaration"**, %"class.SkSL::FunctionDeclaration"**) unnamed_addr #0 {
  br label %3

3:                                                ; preds = %208, %2
  %4 = phi %"class.SkSL::FunctionDeclaration"** [ %1, %2 ], [ %188, %208 ]
  %5 = phi %"class.SkSL::FunctionDeclaration"** [ %0, %2 ], [ %13, %208 ]
  %6 = ptrtoint %"class.SkSL::FunctionDeclaration"** %4 to i64
  %7 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %4, i64 -1
  %8 = bitcast %"class.SkSL::FunctionDeclaration"** %7 to i64*
  %9 = ptrtoint %"class.SkSL::FunctionDeclaration"** %4 to i64
  br label %10

10:                                               ; preds = %217, %3
  %11 = phi %"class.SkSL::FunctionDeclaration"** [ %5, %3 ], [ %218, %217 ]
  br label %12

12:                                               ; preds = %135, %10
  %13 = phi %"class.SkSL::FunctionDeclaration"** [ %11, %10 ], [ %124, %135 ]
  %14 = ptrtoint %"class.SkSL::FunctionDeclaration"** %13 to i64
  %15 = sub i64 %6, %14
  %16 = ashr exact i64 %15, 3
  switch i64 %16, label %42 [
    i64 0, label %221
    i64 1, label %221
    i64 2, label %17
    i64 3, label %27
    i64 4, label %31
    i64 5, label %36
  ]

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %4, i64 -1
  %19 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %18, align 8
  %20 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %13, align 8
  %21 = tail call fastcc zeroext i1 @"_ZZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS_19FunctionDeclarationEENK3$_6clEPS2_S5_"(%"class.SkSL::FunctionDeclaration"* %19, %"class.SkSL::FunctionDeclaration"* %20)
  br i1 %21, label %22, label %221

22:                                               ; preds = %17
  %23 = bitcast %"class.SkSL::FunctionDeclaration"** %13 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.SkSL::FunctionDeclaration"** %18 to i64*
  %26 = load i64, i64* %25, align 8
  store i64 %26, i64* %23, align 8
  store i64 %24, i64* %25, align 8
  br label %221

27:                                               ; preds = %12
  %28 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %13, i64 1
  %29 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %4, i64 -1
  %30 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS1_19FunctionDeclarationEE3$_6PPS4_EEjT0_SA_SA_T_"(%"class.SkSL::FunctionDeclaration"** %13, %"class.SkSL::FunctionDeclaration"** %28, %"class.SkSL::FunctionDeclaration"** %29)
  br label %221

31:                                               ; preds = %12
  %32 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %13, i64 1
  %33 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %13, i64 2
  %34 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %4, i64 -1
  %35 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS1_19FunctionDeclarationEE3$_6PPS4_EEjT0_SA_SA_SA_T_"(%"class.SkSL::FunctionDeclaration"** %13, %"class.SkSL::FunctionDeclaration"** %32, %"class.SkSL::FunctionDeclaration"** %33, %"class.SkSL::FunctionDeclaration"** %34)
  br label %221

36:                                               ; preds = %12
  %37 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %13, i64 1
  %38 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %13, i64 2
  %39 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %13, i64 3
  %40 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %4, i64 -1
  %41 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS1_19FunctionDeclarationEE3$_6PPS4_EEjT0_SA_SA_SA_SA_T_"(%"class.SkSL::FunctionDeclaration"** %13, %"class.SkSL::FunctionDeclaration"** %37, %"class.SkSL::FunctionDeclaration"** %38, %"class.SkSL::FunctionDeclaration"** %39, %"class.SkSL::FunctionDeclaration"** %40)
  br label %221

42:                                               ; preds = %12
  %43 = icmp slt i64 %15, 248
  br i1 %43, label %44, label %77

44:                                               ; preds = %42
  %45 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %13, i64 2
  %46 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %13, i64 1
  %47 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS1_19FunctionDeclarationEE3$_6PPS4_EEjT0_SA_SA_T_"(%"class.SkSL::FunctionDeclaration"** %13, %"class.SkSL::FunctionDeclaration"** %46, %"class.SkSL::FunctionDeclaration"** %45) #14
  %48 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %13, i64 3
  %49 = icmp eq %"class.SkSL::FunctionDeclaration"** %48, %4
  br i1 %49, label %221, label %50

50:                                               ; preds = %44, %74
  %51 = phi %"class.SkSL::FunctionDeclaration"** [ %75, %74 ], [ %48, %44 ]
  %52 = phi %"class.SkSL::FunctionDeclaration"** [ %51, %74 ], [ %45, %44 ]
  %53 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %51, align 8
  %54 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %52, align 8
  %55 = tail call fastcc zeroext i1 @"_ZZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS_19FunctionDeclarationEENK3$_6clEPS2_S5_"(%"class.SkSL::FunctionDeclaration"* %53, %"class.SkSL::FunctionDeclaration"* %54) #14
  br i1 %55, label %56, label %74

56:                                               ; preds = %50
  %57 = bitcast %"class.SkSL::FunctionDeclaration"** %51 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = inttoptr i64 %58 to %"class.SkSL::FunctionDeclaration"*
  br label %60

60:                                               ; preds = %67, %56
  %61 = phi %"class.SkSL::FunctionDeclaration"** [ %51, %56 ], [ %62, %67 ]
  %62 = phi %"class.SkSL::FunctionDeclaration"** [ %52, %56 ], [ %68, %67 ]
  %63 = bitcast %"class.SkSL::FunctionDeclaration"** %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.SkSL::FunctionDeclaration"** %61 to i64*
  store i64 %64, i64* %65, align 8
  %66 = icmp eq %"class.SkSL::FunctionDeclaration"** %62, %13
  br i1 %66, label %71, label %67

67:                                               ; preds = %60
  %68 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %62, i64 -1
  %69 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %68, align 8
  %70 = tail call fastcc zeroext i1 @"_ZZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS_19FunctionDeclarationEENK3$_6clEPS2_S5_"(%"class.SkSL::FunctionDeclaration"* %59, %"class.SkSL::FunctionDeclaration"* %69) #14
  br i1 %70, label %60, label %71

71:                                               ; preds = %60, %67
  %72 = phi %"class.SkSL::FunctionDeclaration"** [ %62, %67 ], [ %13, %60 ]
  %73 = bitcast %"class.SkSL::FunctionDeclaration"** %72 to i64*
  store i64 %58, i64* %73, align 8
  br label %74

74:                                               ; preds = %71, %50
  %75 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %51, i64 1
  %76 = icmp eq %"class.SkSL::FunctionDeclaration"** %75, %4
  br i1 %76, label %221, label %50

77:                                               ; preds = %42
  %78 = icmp sgt i64 %15, 7992
  %79 = sdiv i64 %16, 2
  %80 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %13, i64 %79
  br i1 %78, label %81, label %86

81:                                               ; preds = %77
  %82 = sdiv i64 %16, 4
  %83 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %13, i64 %82
  %84 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %80, i64 %82
  %85 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS1_19FunctionDeclarationEE3$_6PPS4_EEjT0_SA_SA_SA_SA_T_"(%"class.SkSL::FunctionDeclaration"** %13, %"class.SkSL::FunctionDeclaration"** %83, %"class.SkSL::FunctionDeclaration"** %80, %"class.SkSL::FunctionDeclaration"** %84, %"class.SkSL::FunctionDeclaration"** %7)
  br label %88

86:                                               ; preds = %77
  %87 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS1_19FunctionDeclarationEE3$_6PPS4_EEjT0_SA_SA_T_"(%"class.SkSL::FunctionDeclaration"** %13, %"class.SkSL::FunctionDeclaration"** %80, %"class.SkSL::FunctionDeclaration"** %7)
  br label %88

88:                                               ; preds = %86, %81
  %89 = phi i32 [ %85, %81 ], [ %87, %86 ]
  %90 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %13, align 8
  %91 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %80, align 8
  %92 = tail call fastcc zeroext i1 @"_ZZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS_19FunctionDeclarationEENK3$_6clEPS2_S5_"(%"class.SkSL::FunctionDeclaration"* %90, %"class.SkSL::FunctionDeclaration"* %91)
  br i1 %92, label %152, label %93

93:                                               ; preds = %88, %142
  %94 = phi %"class.SkSL::FunctionDeclaration"** [ %95, %142 ], [ %7, %88 ]
  %95 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %94, i64 -1
  %96 = icmp eq %"class.SkSL::FunctionDeclaration"** %13, %95
  br i1 %96, label %97, label %142

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %13, i64 1
  %99 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %13, align 8
  %100 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %7, align 8
  %101 = tail call fastcc zeroext i1 @"_ZZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS_19FunctionDeclarationEENK3$_6clEPS2_S5_"(%"class.SkSL::FunctionDeclaration"* %99, %"class.SkSL::FunctionDeclaration"* %100)
  br i1 %101, label %117, label %102

102:                                              ; preds = %97
  %103 = icmp eq %"class.SkSL::FunctionDeclaration"** %98, %7
  br i1 %103, label %221, label %104

104:                                              ; preds = %102, %114
  %105 = phi %"class.SkSL::FunctionDeclaration"** [ %115, %114 ], [ %98, %102 ]
  %106 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %13, align 8
  %107 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %105, align 8
  %108 = tail call fastcc zeroext i1 @"_ZZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS_19FunctionDeclarationEENK3$_6clEPS2_S5_"(%"class.SkSL::FunctionDeclaration"* %106, %"class.SkSL::FunctionDeclaration"* %107)
  br i1 %108, label %109, label %114

109:                                              ; preds = %104
  %110 = bitcast %"class.SkSL::FunctionDeclaration"** %105 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = load i64, i64* %8, align 8
  store i64 %112, i64* %110, align 8
  store i64 %111, i64* %8, align 8
  %113 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %105, i64 1
  br label %117

114:                                              ; preds = %104
  %115 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %105, i64 1
  %116 = icmp eq %"class.SkSL::FunctionDeclaration"** %115, %7
  br i1 %116, label %221, label %104

117:                                              ; preds = %109, %97
  %118 = phi %"class.SkSL::FunctionDeclaration"** [ %98, %97 ], [ %113, %109 ]
  %119 = icmp eq %"class.SkSL::FunctionDeclaration"** %118, %7
  br i1 %119, label %221, label %120

120:                                              ; preds = %117, %137
  %121 = phi %"class.SkSL::FunctionDeclaration"** [ %128, %137 ], [ %118, %117 ]
  %122 = phi %"class.SkSL::FunctionDeclaration"** [ %132, %137 ], [ %7, %117 ]
  br label %123

123:                                              ; preds = %123, %120
  %124 = phi %"class.SkSL::FunctionDeclaration"** [ %121, %120 ], [ %128, %123 ]
  %125 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %13, align 8
  %126 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %124, align 8
  %127 = tail call fastcc zeroext i1 @"_ZZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS_19FunctionDeclarationEENK3$_6clEPS2_S5_"(%"class.SkSL::FunctionDeclaration"* %125, %"class.SkSL::FunctionDeclaration"* %126)
  %128 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %124, i64 1
  br i1 %127, label %129, label %123

129:                                              ; preds = %123, %129
  %130 = phi %"class.SkSL::FunctionDeclaration"** [ %132, %129 ], [ %122, %123 ]
  %131 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %13, align 8
  %132 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %130, i64 -1
  %133 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %132, align 8
  %134 = tail call fastcc zeroext i1 @"_ZZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS_19FunctionDeclarationEENK3$_6clEPS2_S5_"(%"class.SkSL::FunctionDeclaration"* %131, %"class.SkSL::FunctionDeclaration"* %133)
  br i1 %134, label %129, label %135

135:                                              ; preds = %129
  %136 = icmp ult %"class.SkSL::FunctionDeclaration"** %124, %132
  br i1 %136, label %137, label %12

137:                                              ; preds = %135
  %138 = bitcast %"class.SkSL::FunctionDeclaration"** %124 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.SkSL::FunctionDeclaration"** %132 to i64*
  %141 = load i64, i64* %140, align 8
  store i64 %141, i64* %138, align 8
  store i64 %139, i64* %140, align 8
  br label %120

142:                                              ; preds = %93
  %143 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %95, align 8
  %144 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %80, align 8
  %145 = tail call fastcc zeroext i1 @"_ZZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS_19FunctionDeclarationEENK3$_6clEPS2_S5_"(%"class.SkSL::FunctionDeclaration"* %143, %"class.SkSL::FunctionDeclaration"* %144)
  br i1 %145, label %146, label %93

146:                                              ; preds = %142
  %147 = bitcast %"class.SkSL::FunctionDeclaration"** %13 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = bitcast %"class.SkSL::FunctionDeclaration"** %95 to i64*
  %150 = load i64, i64* %149, align 8
  store i64 %150, i64* %147, align 8
  store i64 %148, i64* %149, align 8
  %151 = add i32 %89, 1
  br label %152

152:                                              ; preds = %88, %146
  %153 = phi i32 [ %151, %146 ], [ %89, %88 ]
  %154 = phi %"class.SkSL::FunctionDeclaration"** [ %95, %146 ], [ %7, %88 ]
  %155 = ptrtoint %"class.SkSL::FunctionDeclaration"** %13 to i64
  %156 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %13, i64 1
  %157 = icmp ult %"class.SkSL::FunctionDeclaration"** %156, %154
  br i1 %157, label %158, label %185

158:                                              ; preds = %152, %177
  %159 = phi %"class.SkSL::FunctionDeclaration"** [ %184, %177 ], [ %80, %152 ]
  %160 = phi i32 [ %182, %177 ], [ %153, %152 ]
  %161 = phi %"class.SkSL::FunctionDeclaration"** [ %168, %177 ], [ %156, %152 ]
  %162 = phi %"class.SkSL::FunctionDeclaration"** [ %171, %177 ], [ %154, %152 ]
  br label %163

163:                                              ; preds = %163, %158
  %164 = phi %"class.SkSL::FunctionDeclaration"** [ %161, %158 ], [ %168, %163 ]
  %165 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %164, align 8
  %166 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %159, align 8
  %167 = tail call fastcc zeroext i1 @"_ZZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS_19FunctionDeclarationEENK3$_6clEPS2_S5_"(%"class.SkSL::FunctionDeclaration"* %165, %"class.SkSL::FunctionDeclaration"* %166)
  %168 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %164, i64 1
  br i1 %167, label %163, label %169

169:                                              ; preds = %163, %169
  %170 = phi %"class.SkSL::FunctionDeclaration"** [ %171, %169 ], [ %162, %163 ]
  %171 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %170, i64 -1
  %172 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %171, align 8
  %173 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %159, align 8
  %174 = tail call fastcc zeroext i1 @"_ZZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS_19FunctionDeclarationEENK3$_6clEPS2_S5_"(%"class.SkSL::FunctionDeclaration"* %172, %"class.SkSL::FunctionDeclaration"* %173)
  br i1 %174, label %175, label %169

175:                                              ; preds = %169
  %176 = icmp ugt %"class.SkSL::FunctionDeclaration"** %164, %171
  br i1 %176, label %185, label %177

177:                                              ; preds = %175
  %178 = bitcast %"class.SkSL::FunctionDeclaration"** %164 to i64*
  %179 = load i64, i64* %178, align 8
  %180 = bitcast %"class.SkSL::FunctionDeclaration"** %171 to i64*
  %181 = load i64, i64* %180, align 8
  store i64 %181, i64* %178, align 8
  store i64 %179, i64* %180, align 8
  %182 = add i32 %160, 1
  %183 = icmp eq %"class.SkSL::FunctionDeclaration"** %159, %164
  %184 = select i1 %183, %"class.SkSL::FunctionDeclaration"** %171, %"class.SkSL::FunctionDeclaration"** %159
  br label %158

185:                                              ; preds = %175, %152
  %186 = phi %"class.SkSL::FunctionDeclaration"** [ %80, %152 ], [ %159, %175 ]
  %187 = phi i32 [ %153, %152 ], [ %160, %175 ]
  %188 = phi %"class.SkSL::FunctionDeclaration"** [ %156, %152 ], [ %164, %175 ]
  %189 = icmp eq %"class.SkSL::FunctionDeclaration"** %188, %186
  br i1 %189, label %200, label %190

190:                                              ; preds = %185
  %191 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %186, align 8
  %192 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %188, align 8
  %193 = tail call fastcc zeroext i1 @"_ZZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS_19FunctionDeclarationEENK3$_6clEPS2_S5_"(%"class.SkSL::FunctionDeclaration"* %191, %"class.SkSL::FunctionDeclaration"* %192)
  br i1 %193, label %194, label %200

194:                                              ; preds = %190
  %195 = bitcast %"class.SkSL::FunctionDeclaration"** %188 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = bitcast %"class.SkSL::FunctionDeclaration"** %186 to i64*
  %198 = load i64, i64* %197, align 8
  store i64 %198, i64* %195, align 8
  store i64 %196, i64* %197, align 8
  %199 = add i32 %187, 1
  br label %200

200:                                              ; preds = %185, %194, %190
  %201 = phi i32 [ %199, %194 ], [ %187, %190 ], [ %187, %185 ]
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %210

203:                                              ; preds = %200
  %204 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS1_19FunctionDeclarationEE3$_6PPS4_EEbT0_SA_T_"(%"class.SkSL::FunctionDeclaration"** %13, %"class.SkSL::FunctionDeclaration"** %188)
  %205 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %188, i64 1
  %206 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS1_19FunctionDeclarationEE3$_6PPS4_EEbT0_SA_T_"(%"class.SkSL::FunctionDeclaration"** %205, %"class.SkSL::FunctionDeclaration"** %4)
  br i1 %206, label %207, label %209

207:                                              ; preds = %203
  br i1 %204, label %221, label %208

208:                                              ; preds = %207, %219
  br label %3

209:                                              ; preds = %203
  br i1 %204, label %217, label %210

210:                                              ; preds = %209, %200
  %211 = ptrtoint %"class.SkSL::FunctionDeclaration"** %188 to i64
  %212 = sub i64 %211, %155
  %213 = sub i64 %9, %211
  %214 = icmp slt i64 %212, %213
  br i1 %214, label %215, label %219

215:                                              ; preds = %210
  tail call fastcc void @"_ZNSt3__16__sortIRZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS1_19FunctionDeclarationEE3$_6PPS4_EEvT0_SA_T_"(%"class.SkSL::FunctionDeclaration"** %13, %"class.SkSL::FunctionDeclaration"** %188)
  %216 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %188, i64 1
  br label %217

217:                                              ; preds = %215, %209
  %218 = phi %"class.SkSL::FunctionDeclaration"** [ %205, %209 ], [ %216, %215 ]
  br label %10

219:                                              ; preds = %210
  %220 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %188, i64 1
  tail call fastcc void @"_ZNSt3__16__sortIRZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS1_19FunctionDeclarationEE3$_6PPS4_EEvT0_SA_T_"(%"class.SkSL::FunctionDeclaration"** %220, %"class.SkSL::FunctionDeclaration"** %4)
  br label %208

221:                                              ; preds = %207, %117, %12, %12, %102, %114, %74, %44, %17, %22, %27, %31, %36
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc zeroext i1 @"_ZZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS_19FunctionDeclarationEENK3$_6clEPS2_S5_"(%"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"*) unnamed_addr #4 align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"struct.SkSL::StringFragment"*
  %5 = alloca <2 x i64>, align 16
  %6 = bitcast <2 x i64>* %5 to %"struct.SkSL::StringFragment"*
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %0, i64 0, i32 5
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp ne i8 %10, 0
  %12 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %1, i64 0, i32 5
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp ne i8 %13, 0
  %15 = xor i1 %11, %14
  br i1 %15, label %16, label %19

16:                                               ; preds = %2
  %17 = xor i1 %11, true
  %18 = and i1 %14, %17
  br label %93

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %0, i64 0, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %1, i64 0, i32 0, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %21, %23
  br i1 %24, label %27, label %25

25:                                               ; preds = %19
  %26 = icmp slt i32 %21, %23
  br label %93

27:                                               ; preds = %19
  %28 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #14
  %29 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %0, i64 0, i32 0, i32 1, i32 0
  %30 = bitcast i8** %29 to <2 x i64>*
  %31 = load <2 x i64>, <2 x i64>* %30, align 8
  store <2 x i64> %31, <2 x i64>* %3, align 16
  %32 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %1, i64 0, i32 0, i32 1, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %1, i64 0, i32 0, i32 1, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = call zeroext i1 @_ZNK4SkSL14StringFragmentneES0_(%"struct.SkSL::StringFragment"* nonnull %4, i8* %33, i64 %35) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #14
  br i1 %36, label %37, label %44

37:                                               ; preds = %27
  %38 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #14
  %39 = bitcast i8** %29 to <2 x i64>*
  %40 = load <2 x i64>, <2 x i64>* %39, align 8
  store <2 x i64> %40, <2 x i64>* %5, align 16
  %41 = load i8*, i8** %32, align 8
  %42 = load i64, i64* %34, align 8
  %43 = call zeroext i1 @_ZNK4SkSL14StringFragmentltES0_(%"struct.SkSL::StringFragment"* nonnull %6, i8* %41, i64 %42) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #14
  br label %93

44:                                               ; preds = %27
  %45 = bitcast %"class.SkSL::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #14
  call void @_ZNK4SkSL19FunctionDeclaration11descriptionEv(%"class.SkSL::String"* nonnull sret %7, %"class.SkSL::FunctionDeclaration"* %0) #14
  %46 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #14
  call void @_ZNK4SkSL19FunctionDeclaration11descriptionEv(%"class.SkSL::String"* nonnull sret %8, %"class.SkSL::FunctionDeclaration"* %1) #14
  %47 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  %51 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = zext i8 %49 to i64
  %54 = select i1 %50, i64 %52, i64 %53
  %55 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  %59 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = zext i8 %57 to i64
  %62 = select i1 %58, i64 %60, i64 %61
  %63 = icmp ult i64 %54, %62
  %64 = select i1 %63, i64 %54, i64 %62
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %75, label %66

66:                                               ; preds = %44
  %67 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  %69 = select i1 %58, i8* %68, i8* %45
  %70 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = select i1 %50, i8* %71, i8* %46
  %73 = call i32 @memcmp(i8* %69, i8* %72, i64 %64) #14
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %66, %44
  %76 = icmp ult i64 %62, %54
  %77 = zext i1 %63 to i32
  %78 = select i1 %76, i32 -1, i32 %77
  br label %79

79:                                               ; preds = %66, %75
  %80 = phi i32 [ %78, %75 ], [ %73, %66 ]
  %81 = icmp slt i32 %80, 0
  br i1 %50, label %82, label %86

82:                                               ; preds = %79
  %83 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load i8*, i8** %83, align 8
  call void @_ZdlPv(i8* %84) #15
  %85 = load i8, i8* %56, align 1
  br label %86

86:                                               ; preds = %79, %82
  %87 = phi i8 [ %57, %79 ], [ %85, %82 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #14
  %88 = icmp slt i8 %87, 0
  br i1 %88, label %89, label %92

89:                                               ; preds = %86
  %90 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load i8*, i8** %90, align 8
  call void @_ZdlPv(i8* %91) #15
  br label %92

92:                                               ; preds = %86, %89
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #14
  br label %93

93:                                               ; preds = %92, %37, %25, %16
  %94 = phi i1 [ %18, %16 ], [ %26, %25 ], [ %43, %37 ], [ %81, %92 ]
  ret i1 %94
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort3IRZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS1_19FunctionDeclarationEE3$_6PPS4_EEjT0_SA_SA_T_"(%"class.SkSL::FunctionDeclaration"** nocapture, %"class.SkSL::FunctionDeclaration"** nocapture, %"class.SkSL::FunctionDeclaration"** nocapture) unnamed_addr #0 {
  %4 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %1, align 8
  %5 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %0, align 8
  %6 = tail call fastcc zeroext i1 @"_ZZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS_19FunctionDeclarationEENK3$_6clEPS2_S5_"(%"class.SkSL::FunctionDeclaration"* %4, %"class.SkSL::FunctionDeclaration"* %5)
  %7 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %2, align 8
  %8 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %1, align 8
  %9 = tail call fastcc zeroext i1 @"_ZZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS_19FunctionDeclarationEENK3$_6clEPS2_S5_"(%"class.SkSL::FunctionDeclaration"* %7, %"class.SkSL::FunctionDeclaration"* %8)
  br i1 %6, label %23, label %10

10:                                               ; preds = %3
  br i1 %9, label %11, label %39

11:                                               ; preds = %10
  %12 = bitcast %"class.SkSL::FunctionDeclaration"** %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.SkSL::FunctionDeclaration"** %2 to i64*
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %12, align 8
  store i64 %13, i64* %14, align 8
  %16 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %1, align 8
  %17 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %0, align 8
  %18 = tail call fastcc zeroext i1 @"_ZZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS_19FunctionDeclarationEENK3$_6clEPS2_S5_"(%"class.SkSL::FunctionDeclaration"* %16, %"class.SkSL::FunctionDeclaration"* %17)
  br i1 %18, label %19, label %39

19:                                               ; preds = %11
  %20 = bitcast %"class.SkSL::FunctionDeclaration"** %0 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = load i64, i64* %12, align 8
  store i64 %22, i64* %20, align 8
  store i64 %21, i64* %12, align 8
  br label %39

23:                                               ; preds = %3
  %24 = bitcast %"class.SkSL::FunctionDeclaration"** %0 to i64*
  %25 = load i64, i64* %24, align 8
  br i1 %9, label %26, label %29

26:                                               ; preds = %23
  %27 = bitcast %"class.SkSL::FunctionDeclaration"** %2 to i64*
  %28 = load i64, i64* %27, align 8
  store i64 %28, i64* %24, align 8
  store i64 %25, i64* %27, align 8
  br label %39

29:                                               ; preds = %23
  %30 = bitcast %"class.SkSL::FunctionDeclaration"** %1 to i64*
  %31 = load i64, i64* %30, align 8
  store i64 %31, i64* %24, align 8
  store i64 %25, i64* %30, align 8
  %32 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %2, align 8
  %33 = inttoptr i64 %25 to %"class.SkSL::FunctionDeclaration"*
  %34 = tail call fastcc zeroext i1 @"_ZZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS_19FunctionDeclarationEENK3$_6clEPS2_S5_"(%"class.SkSL::FunctionDeclaration"* %32, %"class.SkSL::FunctionDeclaration"* %33)
  br i1 %34, label %35, label %39

35:                                               ; preds = %29
  %36 = load i64, i64* %30, align 8
  %37 = bitcast %"class.SkSL::FunctionDeclaration"** %2 to i64*
  %38 = load i64, i64* %37, align 8
  store i64 %38, i64* %30, align 8
  store i64 %36, i64* %37, align 8
  br label %39

39:                                               ; preds = %29, %35, %11, %19, %10, %26
  %40 = phi i32 [ 1, %26 ], [ 0, %10 ], [ 2, %19 ], [ 1, %11 ], [ 2, %35 ], [ 1, %29 ]
  ret i32 %40
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort4IRZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS1_19FunctionDeclarationEE3$_6PPS4_EEjT0_SA_SA_SA_T_"(%"class.SkSL::FunctionDeclaration"** nocapture, %"class.SkSL::FunctionDeclaration"** nocapture, %"class.SkSL::FunctionDeclaration"** nocapture, %"class.SkSL::FunctionDeclaration"** nocapture) unnamed_addr #0 {
  %5 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS1_19FunctionDeclarationEE3$_6PPS4_EEjT0_SA_SA_T_"(%"class.SkSL::FunctionDeclaration"** %0, %"class.SkSL::FunctionDeclaration"** %1, %"class.SkSL::FunctionDeclaration"** %2)
  %6 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %3, align 8
  %7 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %2, align 8
  %8 = tail call fastcc zeroext i1 @"_ZZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS_19FunctionDeclarationEENK3$_6clEPS2_S5_"(%"class.SkSL::FunctionDeclaration"* %6, %"class.SkSL::FunctionDeclaration"* %7)
  br i1 %8, label %9, label %31

9:                                                ; preds = %4
  %10 = bitcast %"class.SkSL::FunctionDeclaration"** %2 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.SkSL::FunctionDeclaration"** %3 to i64*
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %10, align 8
  store i64 %11, i64* %12, align 8
  %14 = add i32 %5, 1
  %15 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %2, align 8
  %16 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %1, align 8
  %17 = tail call fastcc zeroext i1 @"_ZZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS_19FunctionDeclarationEENK3$_6clEPS2_S5_"(%"class.SkSL::FunctionDeclaration"* %15, %"class.SkSL::FunctionDeclaration"* %16)
  br i1 %17, label %18, label %31

18:                                               ; preds = %9
  %19 = bitcast %"class.SkSL::FunctionDeclaration"** %1 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = load i64, i64* %10, align 8
  store i64 %21, i64* %19, align 8
  store i64 %20, i64* %10, align 8
  %22 = add i32 %5, 2
  %23 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %1, align 8
  %24 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %0, align 8
  %25 = tail call fastcc zeroext i1 @"_ZZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS_19FunctionDeclarationEENK3$_6clEPS2_S5_"(%"class.SkSL::FunctionDeclaration"* %23, %"class.SkSL::FunctionDeclaration"* %24)
  br i1 %25, label %26, label %31

26:                                               ; preds = %18
  %27 = bitcast %"class.SkSL::FunctionDeclaration"** %0 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = load i64, i64* %19, align 8
  store i64 %29, i64* %27, align 8
  store i64 %28, i64* %19, align 8
  %30 = add i32 %5, 3
  br label %31

31:                                               ; preds = %9, %26, %18, %4
  %32 = phi i32 [ %30, %26 ], [ %22, %18 ], [ %14, %9 ], [ %5, %4 ]
  ret i32 %32
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort5IRZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS1_19FunctionDeclarationEE3$_6PPS4_EEjT0_SA_SA_SA_SA_T_"(%"class.SkSL::FunctionDeclaration"** nocapture, %"class.SkSL::FunctionDeclaration"** nocapture, %"class.SkSL::FunctionDeclaration"** nocapture, %"class.SkSL::FunctionDeclaration"** nocapture, %"class.SkSL::FunctionDeclaration"** nocapture) unnamed_addr #0 {
  %6 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS1_19FunctionDeclarationEE3$_6PPS4_EEjT0_SA_SA_SA_T_"(%"class.SkSL::FunctionDeclaration"** %0, %"class.SkSL::FunctionDeclaration"** %1, %"class.SkSL::FunctionDeclaration"** %2, %"class.SkSL::FunctionDeclaration"** %3)
  %7 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %4, align 8
  %8 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %3, align 8
  %9 = tail call fastcc zeroext i1 @"_ZZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS_19FunctionDeclarationEENK3$_6clEPS2_S5_"(%"class.SkSL::FunctionDeclaration"* %7, %"class.SkSL::FunctionDeclaration"* %8)
  br i1 %9, label %10, label %40

10:                                               ; preds = %5
  %11 = bitcast %"class.SkSL::FunctionDeclaration"** %3 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.SkSL::FunctionDeclaration"** %4 to i64*
  %14 = load i64, i64* %13, align 8
  store i64 %14, i64* %11, align 8
  store i64 %12, i64* %13, align 8
  %15 = add i32 %6, 1
  %16 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %3, align 8
  %17 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %2, align 8
  %18 = tail call fastcc zeroext i1 @"_ZZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS_19FunctionDeclarationEENK3$_6clEPS2_S5_"(%"class.SkSL::FunctionDeclaration"* %16, %"class.SkSL::FunctionDeclaration"* %17)
  br i1 %18, label %19, label %40

19:                                               ; preds = %10
  %20 = bitcast %"class.SkSL::FunctionDeclaration"** %2 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = load i64, i64* %11, align 8
  store i64 %22, i64* %20, align 8
  store i64 %21, i64* %11, align 8
  %23 = add i32 %6, 2
  %24 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %2, align 8
  %25 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %1, align 8
  %26 = tail call fastcc zeroext i1 @"_ZZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS_19FunctionDeclarationEENK3$_6clEPS2_S5_"(%"class.SkSL::FunctionDeclaration"* %24, %"class.SkSL::FunctionDeclaration"* %25)
  br i1 %26, label %27, label %40

27:                                               ; preds = %19
  %28 = bitcast %"class.SkSL::FunctionDeclaration"** %1 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = load i64, i64* %20, align 8
  store i64 %30, i64* %28, align 8
  store i64 %29, i64* %20, align 8
  %31 = add i32 %6, 3
  %32 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %1, align 8
  %33 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %0, align 8
  %34 = tail call fastcc zeroext i1 @"_ZZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS_19FunctionDeclarationEENK3$_6clEPS2_S5_"(%"class.SkSL::FunctionDeclaration"* %32, %"class.SkSL::FunctionDeclaration"* %33)
  br i1 %34, label %35, label %40

35:                                               ; preds = %27
  %36 = bitcast %"class.SkSL::FunctionDeclaration"** %0 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = load i64, i64* %28, align 8
  store i64 %38, i64* %36, align 8
  store i64 %37, i64* %28, align 8
  %39 = add i32 %6, 4
  br label %40

40:                                               ; preds = %10, %27, %35, %19, %5
  %41 = phi i32 [ %39, %35 ], [ %31, %27 ], [ %23, %19 ], [ %15, %10 ], [ %6, %5 ]
  ret i32 %41
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS1_19FunctionDeclarationEE3$_6PPS4_EEbT0_SA_T_"(%"class.SkSL::FunctionDeclaration"**, %"class.SkSL::FunctionDeclaration"**) unnamed_addr #0 {
  %3 = ptrtoint %"class.SkSL::FunctionDeclaration"** %1 to i64
  %4 = ptrtoint %"class.SkSL::FunctionDeclaration"** %0 to i64
  %5 = sub i64 %3, %4
  %6 = ashr exact i64 %5, 3
  switch i64 %6, label %32 [
    i64 0, label %72
    i64 1, label %72
    i64 2, label %7
    i64 3, label %17
    i64 4, label %21
    i64 5, label %26
  ]

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %1, i64 -1
  %9 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %8, align 8
  %10 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %0, align 8
  %11 = tail call fastcc zeroext i1 @"_ZZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS_19FunctionDeclarationEENK3$_6clEPS2_S5_"(%"class.SkSL::FunctionDeclaration"* %9, %"class.SkSL::FunctionDeclaration"* %10)
  br i1 %11, label %12, label %72

12:                                               ; preds = %7
  %13 = bitcast %"class.SkSL::FunctionDeclaration"** %0 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.SkSL::FunctionDeclaration"** %8 to i64*
  %16 = load i64, i64* %15, align 8
  store i64 %16, i64* %13, align 8
  store i64 %14, i64* %15, align 8
  br label %72

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %0, i64 1
  %19 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %1, i64 -1
  %20 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS1_19FunctionDeclarationEE3$_6PPS4_EEjT0_SA_SA_T_"(%"class.SkSL::FunctionDeclaration"** %0, %"class.SkSL::FunctionDeclaration"** %18, %"class.SkSL::FunctionDeclaration"** %19)
  br label %72

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %0, i64 1
  %23 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %0, i64 2
  %24 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %1, i64 -1
  %25 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS1_19FunctionDeclarationEE3$_6PPS4_EEjT0_SA_SA_SA_T_"(%"class.SkSL::FunctionDeclaration"** %0, %"class.SkSL::FunctionDeclaration"** %22, %"class.SkSL::FunctionDeclaration"** %23, %"class.SkSL::FunctionDeclaration"** %24)
  br label %72

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %0, i64 1
  %28 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %0, i64 2
  %29 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %0, i64 3
  %30 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %1, i64 -1
  %31 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS1_19FunctionDeclarationEE3$_6PPS4_EEjT0_SA_SA_SA_SA_T_"(%"class.SkSL::FunctionDeclaration"** %0, %"class.SkSL::FunctionDeclaration"** %27, %"class.SkSL::FunctionDeclaration"** %28, %"class.SkSL::FunctionDeclaration"** %29, %"class.SkSL::FunctionDeclaration"** %30)
  br label %72

32:                                               ; preds = %2
  %33 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %0, i64 2
  %34 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %0, i64 1
  %35 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS1_19FunctionDeclarationEE3$_6PPS4_EEjT0_SA_SA_T_"(%"class.SkSL::FunctionDeclaration"** %0, %"class.SkSL::FunctionDeclaration"** %34, %"class.SkSL::FunctionDeclaration"** %33)
  %36 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %0, i64 3
  %37 = icmp eq %"class.SkSL::FunctionDeclaration"** %36, %1
  br i1 %37, label %72, label %38

38:                                               ; preds = %32, %65
  %39 = phi %"class.SkSL::FunctionDeclaration"** [ %67, %65 ], [ %36, %32 ]
  %40 = phi i32 [ %66, %65 ], [ 0, %32 ]
  %41 = phi %"class.SkSL::FunctionDeclaration"** [ %39, %65 ], [ %33, %32 ]
  %42 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %39, align 8
  %43 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %41, align 8
  %44 = tail call fastcc zeroext i1 @"_ZZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS_19FunctionDeclarationEENK3$_6clEPS2_S5_"(%"class.SkSL::FunctionDeclaration"* %42, %"class.SkSL::FunctionDeclaration"* %43)
  br i1 %44, label %45, label %65

45:                                               ; preds = %38
  %46 = bitcast %"class.SkSL::FunctionDeclaration"** %39 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = inttoptr i64 %47 to %"class.SkSL::FunctionDeclaration"*
  br label %49

49:                                               ; preds = %56, %45
  %50 = phi %"class.SkSL::FunctionDeclaration"** [ %39, %45 ], [ %51, %56 ]
  %51 = phi %"class.SkSL::FunctionDeclaration"** [ %41, %45 ], [ %57, %56 ]
  %52 = bitcast %"class.SkSL::FunctionDeclaration"** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"class.SkSL::FunctionDeclaration"** %50 to i64*
  store i64 %53, i64* %54, align 8
  %55 = icmp eq %"class.SkSL::FunctionDeclaration"** %51, %0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %51, i64 -1
  %58 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %57, align 8
  %59 = tail call fastcc zeroext i1 @"_ZZN4SkSL11IRGenerator21copyIntrinsicIfNeededERKNS_19FunctionDeclarationEENK3$_6clEPS2_S5_"(%"class.SkSL::FunctionDeclaration"* %48, %"class.SkSL::FunctionDeclaration"* %58)
  br i1 %59, label %49, label %60

60:                                               ; preds = %49, %56
  %61 = phi %"class.SkSL::FunctionDeclaration"** [ %51, %56 ], [ %0, %49 ]
  %62 = bitcast %"class.SkSL::FunctionDeclaration"** %61 to i64*
  store i64 %47, i64* %62, align 8
  %63 = add i32 %40, 1
  %64 = icmp eq i32 %63, 8
  br i1 %64, label %69, label %65

65:                                               ; preds = %60, %38
  %66 = phi i32 [ %63, %60 ], [ %40, %38 ]
  %67 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %39, i64 1
  %68 = icmp eq %"class.SkSL::FunctionDeclaration"** %67, %1
  br i1 %68, label %72, label %38

69:                                               ; preds = %60
  %70 = getelementptr inbounds %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %39, i64 1
  %71 = icmp eq %"class.SkSL::FunctionDeclaration"** %70, %1
  br label %72

72:                                               ; preds = %65, %69, %32, %7, %12, %2, %2, %26, %21, %17
  %73 = phi i1 [ true, %26 ], [ true, %21 ], [ true, %17 ], [ true, %2 ], [ true, %2 ], [ true, %12 ], [ true, %7 ], [ true, %32 ], [ %71, %69 ], [ true, %65 ]
  ret i1 %73
}

declare zeroext i1 @_ZNK4SkSL14StringFragmentltES0_(%"struct.SkSL::StringFragment"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.91"*, i8 } @_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.87"*, %"class.SkSL::FunctionDeclaration"** dereferenceable(8), %"class.SkSL::FunctionDeclaration"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %1, align 8
  %5 = ptrtoint %"class.SkSL::FunctionDeclaration"* %4 to i64
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.87", %"class.std::__1::__hash_table.87"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %66, label %22

22:                                               ; preds = %3
  %23 = tail call i64 @llvm.ctpop.i64(i64 %20) #14, !range !99
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %18, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table.87", %"class.std::__1::__hash_table.87"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.91"**, %"struct.std::__1::__hash_node_base.91"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.91"* %37, null
  br i1 %38, label %66, label %39

39:                                               ; preds = %32
  %40 = add i64 %20, -1
  br label %41

41:                                               ; preds = %39, %61
  %42 = phi %"struct.std::__1::__hash_node_base.91"* [ %44, %61 ], [ %37, %39 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91", %"struct.std::__1::__hash_node_base.91"* %42, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base.91"* %44, null
  br i1 %45, label %66, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91", %"struct.std::__1::__hash_node_base.91"* %44, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base.91"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %18
  br i1 %50, label %61, label %51

51:                                               ; preds = %46
  br i1 %24, label %54, label %52

52:                                               ; preds = %51
  %53 = and i64 %49, %40
  br label %58

54:                                               ; preds = %51
  %55 = icmp ult i64 %49, %20
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %49, %20
  br label %58

58:                                               ; preds = %52, %54, %56
  %59 = phi i64 [ %53, %52 ], [ %57, %56 ], [ %49, %54 ]
  %60 = icmp eq i64 %59, %33
  br i1 %60, label %61, label %66

61:                                               ; preds = %46, %58
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91", %"struct.std::__1::__hash_node_base.91"* %44, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base.91"* %62 to %"class.SkSL::FunctionDeclaration"**
  %64 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %63, align 8
  %65 = icmp eq %"class.SkSL::FunctionDeclaration"* %64, %4
  br i1 %65, label %154, label %41

66:                                               ; preds = %41, %58, %32, %3
  %67 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %58 ], [ %33, %41 ]
  %68 = tail call i8* @_Znwm(i64 24) #15, !noalias !175
  %69 = getelementptr inbounds i8, i8* %68, i64 16
  %70 = bitcast %"class.SkSL::FunctionDeclaration"** %2 to i64*
  %71 = load i64, i64* %70, align 8, !noalias !175
  %72 = bitcast i8* %69 to i64*
  store i64 %71, i64* %72, align 8, !noalias !175
  %73 = getelementptr inbounds i8, i8* %68, i64 8
  %74 = bitcast i8* %73 to i64*
  store i64 %18, i64* %74, align 8, !noalias !175
  %75 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.91"**
  store %"struct.std::__1::__hash_node_base.91"* null, %"struct.std::__1::__hash_node_base.91"** %75, align 8, !noalias !175
  %76 = getelementptr inbounds %"class.std::__1::__hash_table.87", %"class.std::__1::__hash_table.87"* %0, i64 0, i32 2, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 1
  %79 = uitofp i64 %78 to float
  %80 = uitofp i64 %20 to float
  %81 = getelementptr inbounds %"class.std::__1::__hash_table.87", %"class.std::__1::__hash_table.87"* %0, i64 0, i32 3, i32 0, i32 0
  %82 = load float, float* %81, align 4
  %83 = fmul float %82, %80
  %84 = fcmp olt float %83, %79
  %85 = or i1 %21, %84
  br i1 %85, label %86, label %109

86:                                               ; preds = %66
  %87 = shl i64 %20, 1
  %88 = icmp ult i64 %20, 3
  %89 = tail call i64 @llvm.ctpop.i64(i64 %20) #14, !range !99
  %90 = icmp ugt i64 %89, 1
  %91 = or i1 %88, %90
  %92 = zext i1 %91 to i64
  %93 = or i64 %87, %92
  %94 = fdiv float %79, %82
  %95 = tail call float @llvm.ceil.f32(float %94) #14
  %96 = fptoui float %95 to i64
  %97 = icmp ult i64 %93, %96
  %98 = select i1 %97, i64 %96, i64 %93
  tail call void @_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.87"* %0, i64 %98)
  %99 = load i64, i64* %19, align 8
  %100 = tail call i64 @llvm.ctpop.i64(i64 %99) #14, !range !99
  %101 = icmp ugt i64 %100, 1
  br i1 %101, label %105, label %102

102:                                              ; preds = %86
  %103 = add i64 %99, -1
  %104 = and i64 %103, %18
  br label %109

105:                                              ; preds = %86
  %106 = icmp ult i64 %18, %99
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = urem i64 %18, %99
  br label %109

109:                                              ; preds = %107, %105, %102, %66
  %110 = phi i64 [ %20, %66 ], [ %99, %102 ], [ %99, %105 ], [ %99, %107 ]
  %111 = phi i64 [ %67, %66 ], [ %104, %102 ], [ %18, %105 ], [ %108, %107 ]
  %112 = getelementptr inbounds %"class.std::__1::__hash_table.87", %"class.std::__1::__hash_table.87"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base.91"**, %"struct.std::__1::__hash_node_base.91"*** %112, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %113, i64 %111
  %115 = load %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.91"* %115, null
  br i1 %116, label %117, label %143

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.87", %"class.std::__1::__hash_table.87"* %0, i64 0, i32 1, i32 0, i32 0
  %119 = bitcast %"struct.std::__1::__hash_node_base.91"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast i8* %68 to i64*
  store i64 %120, i64* %121, align 8
  %122 = bitcast %"struct.std::__1::__hash_node_base.91"* %118 to i8**
  store i8* %68, i8** %122, align 8
  store %"struct.std::__1::__hash_node_base.91"* %118, %"struct.std::__1::__hash_node_base.91"** %114, align 8
  %123 = load %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %75, align 8
  %124 = icmp eq %"struct.std::__1::__hash_node_base.91"* %123, null
  br i1 %124, label %150, label %125

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91", %"struct.std::__1::__hash_node_base.91"* %123, i64 1
  %127 = bitcast %"struct.std::__1::__hash_node_base.91"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = tail call i64 @llvm.ctpop.i64(i64 %110) #14, !range !99
  %130 = icmp ugt i64 %129, 1
  br i1 %130, label %134, label %131

131:                                              ; preds = %125
  %132 = add i64 %110, -1
  %133 = and i64 %128, %132
  br label %138

134:                                              ; preds = %125
  %135 = icmp ult i64 %128, %110
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = urem i64 %128, %110
  br label %138

138:                                              ; preds = %131, %134, %136
  %139 = phi i64 [ %133, %131 ], [ %137, %136 ], [ %128, %134 ]
  %140 = load %"struct.std::__1::__hash_node_base.91"**, %"struct.std::__1::__hash_node_base.91"*** %112, align 8
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %140, i64 %139
  %142 = bitcast %"struct.std::__1::__hash_node_base.91"** %141 to i8**
  br label %148

143:                                              ; preds = %109
  %144 = bitcast %"struct.std::__1::__hash_node_base.91"* %115 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast i8* %68 to i64*
  store i64 %145, i64* %146, align 8
  %147 = bitcast %"struct.std::__1::__hash_node_base.91"* %115 to i8**
  br label %148

148:                                              ; preds = %138, %143
  %149 = phi i8** [ %147, %143 ], [ %142, %138 ]
  store i8* %68, i8** %149, align 8
  br label %150

150:                                              ; preds = %148, %117
  %151 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.91"*
  %152 = load i64, i64* %76, align 8
  %153 = add i64 %152, 1
  store i64 %153, i64* %76, align 8
  br label %154

154:                                              ; preds = %61, %150
  %155 = phi i8 [ 1, %150 ], [ 0, %61 ]
  %156 = phi %"struct.std::__1::__hash_node_base.91"* [ %151, %150 ], [ %44, %61 ]
  %157 = insertvalue { %"struct.std::__1::__hash_node_base.91"*, i8 } undef, %"struct.std::__1::__hash_node_base.91"* %156, 0
  %158 = insertvalue { %"struct.std::__1::__hash_node_base.91"*, i8 } %157, i8 %155, 1
  ret { %"struct.std::__1::__hash_node_base.91"*, i8 } %158
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL20ExternalFunctionCallD2Ev(%"class.SkSL::ExternalFunctionCall"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::ExternalFunctionCall", %"class.SkSL::ExternalFunctionCall"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL20ExternalFunctionCallE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::ExternalFunctionCall", %"class.SkSL::ExternalFunctionCall"* %0, i64 0, i32 2, i32 0, i32 0, i64 16
  %4 = getelementptr inbounds %"class.SkSL::ExternalFunctionCall", %"class.SkSL::ExternalFunctionCall"* %0, i64 0, i32 2, i32 0, i32 0, i64 24
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = bitcast i8* %3 to %"class.std::__1::unique_ptr.157"**
  br label %15

11:                                               ; preds = %26, %1
  %12 = phi i64 [ %6, %1 ], [ %28, %26 ]
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %35, label %32

15:                                               ; preds = %26, %9
  %16 = phi i64 [ 0, %9 ], [ %27, %26 ]
  %17 = load %"class.std::__1::unique_ptr.157"*, %"class.std::__1::unique_ptr.157"** %10, align 8
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157"* %17, i64 %16, i32 0, i32 0, i32 0
  %19 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %18, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %18, align 8
  %20 = icmp eq %"class.SkSL::Expression"* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = bitcast %"class.SkSL::Expression"* %19 to void (%"class.SkSL::Expression"*)***
  %23 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %23, i64 1
  %25 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %24, align 8
  tail call void %25(%"class.SkSL::Expression"* nonnull %19) #14
  br label %26

26:                                               ; preds = %21, %15
  %27 = add nuw nsw i64 %16, 1
  %28 = load i64, i64* %5, align 8
  %29 = lshr i64 %28, 1
  %30 = and i64 %29, 2147483647
  %31 = icmp ult i64 %27, %30
  br i1 %31, label %15, label %11

32:                                               ; preds = %11
  %33 = bitcast i8* %3 to i8**
  %34 = load i8*, i8** %33, align 8
  tail call void @_Z7sk_freePv(i8* %34) #14
  br label %35

35:                                               ; preds = %11, %32
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL20ExternalFunctionCallD0Ev(%"class.SkSL::ExternalFunctionCall"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::ExternalFunctionCall", %"class.SkSL::ExternalFunctionCall"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL20ExternalFunctionCallE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::ExternalFunctionCall", %"class.SkSL::ExternalFunctionCall"* %0, i64 0, i32 2, i32 0, i32 0, i64 16
  %4 = getelementptr inbounds %"class.SkSL::ExternalFunctionCall", %"class.SkSL::ExternalFunctionCall"* %0, i64 0, i32 2, i32 0, i32 0, i64 24
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = bitcast i8* %3 to %"class.std::__1::unique_ptr.157"**
  br label %15

11:                                               ; preds = %26, %1
  %12 = phi i64 [ %6, %1 ], [ %28, %26 ]
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %35, label %32

15:                                               ; preds = %26, %9
  %16 = phi i64 [ 0, %9 ], [ %27, %26 ]
  %17 = load %"class.std::__1::unique_ptr.157"*, %"class.std::__1::unique_ptr.157"** %10, align 8
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157"* %17, i64 %16, i32 0, i32 0, i32 0
  %19 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %18, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %18, align 8
  %20 = icmp eq %"class.SkSL::Expression"* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = bitcast %"class.SkSL::Expression"* %19 to void (%"class.SkSL::Expression"*)***
  %23 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %23, i64 1
  %25 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %24, align 8
  tail call void %25(%"class.SkSL::Expression"* nonnull %19) #14
  br label %26

26:                                               ; preds = %21, %15
  %27 = add nuw nsw i64 %16, 1
  %28 = load i64, i64* %5, align 8
  %29 = lshr i64 %28, 1
  %30 = and i64 %29, 2147483647
  %31 = icmp ult i64 %27, %30
  br i1 %31, label %15, label %11

32:                                               ; preds = %11
  %33 = bitcast i8* %3 to i8**
  %34 = load i8*, i8** %33, align 8
  tail call void @_Z7sk_freePv(i8* %34) #14
  br label %35

35:                                               ; preds = %11, %32
  %36 = bitcast %"class.SkSL::ExternalFunctionCall"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %36) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL20ExternalFunctionCall11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::ExternalFunctionCall"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = bitcast %"class.SkSL::String"* %3 to i8*
  %8 = bitcast %"class.SkSL::String"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #14
  %9 = getelementptr inbounds %"class.SkSL::ExternalFunctionCall", %"class.SkSL::ExternalFunctionCall"* %1, i64 0, i32 1
  %10 = load %"class.SkSL::ExternalFunction"*, %"class.SkSL::ExternalFunction"** %9, align 8
  %11 = getelementptr inbounds %"class.SkSL::ExternalFunction", %"class.SkSL::ExternalFunction"* %10, i64 0, i32 0, i32 1, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.SkSL::ExternalFunction", %"class.SkSL::ExternalFunction"* %10, i64 0, i32 0, i32 1, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp ugt i64 %14, -17
  br i1 %15, label %16, label %18

16:                                               ; preds = %2
  %17 = bitcast %"class.SkSL::String"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %17) #16
  unreachable

18:                                               ; preds = %2
  %19 = icmp ult i64 %14, 23
  br i1 %19, label %29, label %20

20:                                               ; preds = %18
  %21 = add nuw i64 %14, 16
  %22 = and i64 %21, -16
  %23 = tail call i8* @_Znwm(i64 %22) #15
  %24 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %23, i8** %24, align 8
  %25 = or i64 %22, -9223372036854775808
  %26 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %14, i64* %27, align 8
  %28 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %34

29:                                               ; preds = %18
  %30 = trunc i64 %14 to i8
  %31 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  store i8 %30, i8* %32, align 1
  %33 = icmp eq i64 %14, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %29, %20
  %35 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %31, %29 ], [ %28, %20 ]
  %36 = phi i8* [ %7, %29 ], [ %23, %20 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %36, i8* align 1 %12, i64 %14, i1 false) #14
  br label %37

37:                                               ; preds = %29, %34
  %38 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %31, %29 ], [ %35, %34 ]
  %39 = phi i8* [ %7, %29 ], [ %36, %34 ]
  %40 = getelementptr inbounds i8, i8* %39, i64 %14
  store i8 0, i8* %40, align 1
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* sret %0, %"class.SkSL::String"* nonnull %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.84, i64 0, i64 0)) #14
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  call void @_ZdlPv(i8* %46) #15
  br label %47

47:                                               ; preds = %37, %44
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #14
  %48 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #14
  %49 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 0, i64 24, i1 false) #14
  %50 = getelementptr inbounds %"class.SkSL::ExternalFunctionCall", %"class.SkSL::ExternalFunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %51 = bitcast i8* %50 to %"class.std::__1::unique_ptr.157"**
  %52 = load %"class.std::__1::unique_ptr.157"*, %"class.std::__1::unique_ptr.157"** %51, align 8
  %53 = icmp eq %"class.std::__1::unique_ptr.157"* %52, null
  br i1 %53, label %62, label %54

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"class.SkSL::ExternalFunctionCall", %"class.SkSL::ExternalFunctionCall"* %1, i64 0, i32 2, i32 0, i32 0, i64 24
  %56 = bitcast i8* %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = lshr i64 %57, 1
  %59 = and i64 %58, 2147483647
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157"* %52, i64 %59
  %61 = icmp eq i64 %59, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %47, %54
  %63 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %76

64:                                               ; preds = %54
  %65 = bitcast %"class.SkSL::String"* %5 to i8*
  %66 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = bitcast %"class.SkSL::String"* %6 to i8*
  %70 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = bitcast %"class.SkSL::String"* %6 to i16*
  %73 = getelementptr inbounds i8, i8* %69, i64 2
  %74 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  br label %85

76:                                               ; preds = %105, %62
  %77 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %63, %62 ], [ %74, %105 ]
  %78 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEPKc(%"class.SkSL::String"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86, i64 0, i64 0)) #14
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  %80 = load i8, i8* %79, align 1
  %81 = icmp slt i8 %80, 0
  br i1 %81, label %82, label %84

82:                                               ; preds = %76
  %83 = load i8*, i8** %49, align 8
  call void @_ZdlPv(i8* %83) #15
  br label %84

84:                                               ; preds = %76, %82
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #14
  ret void

85:                                               ; preds = %64, %105
  %86 = phi %"class.std::__1::unique_ptr.157"* [ %52, %64 ], [ %106, %105 ]
  %87 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %4) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #14
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157"* %86, i64 0, i32 0, i32 0, i32 0
  %89 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %88, align 8
  %90 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %89, i64 0, i32 0
  %91 = bitcast %"class.SkSL::Expression"* %89 to void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)***
  %92 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)**, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*** %91, align 8
  %93 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %92, i64 2
  %94 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %93, align 8
  call void %94(%"class.SkSL::String"* nonnull sret %5, %"class.SkSL::IRNode"* %90) #14
  %95 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* %0, %"class.SkSL::String"* nonnull dereferenceable(24) %5) #14
  %96 = load i8, i8* %67, align 1
  %97 = icmp slt i8 %96, 0
  br i1 %97, label %98, label %100

98:                                               ; preds = %85
  %99 = load i8*, i8** %68, align 8
  call void @_ZdlPv(i8* %99) #15
  br label %100

100:                                              ; preds = %85, %98
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #14
  store i8 2, i8* %71, align 1
  store i16 8236, i16* %72, align 8
  store i8 0, i8* %73, align 2
  %101 = load i8, i8* %75, align 1
  %102 = icmp slt i8 %101, 0
  br i1 %102, label %103, label %105

103:                                              ; preds = %100
  %104 = load i8*, i8** %49, align 8
  call void @_ZdlPv(i8* %104) #15
  br label %105

105:                                              ; preds = %103, %100
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %48, i8* nonnull align 8 %69, i64 24, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #14
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157"* %86, i64 1
  %107 = icmp eq %"class.std::__1::unique_ptr.157"* %106, %60
  br i1 %107, label %76, label %85
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL20ExternalFunctionCall11hasPropertyENS_10Expression8PropertyE(%"class.SkSL::ExternalFunctionCall"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.SkSL::ExternalFunctionCall", %"class.SkSL::ExternalFunctionCall"* %0, i64 0, i32 2, i32 0, i32 0, i64 16
  %6 = bitcast i8* %5 to %"class.std::__1::unique_ptr.157"**
  %7 = load %"class.std::__1::unique_ptr.157"*, %"class.std::__1::unique_ptr.157"** %6, align 8
  %8 = icmp eq %"class.std::__1::unique_ptr.157"* %7, null
  br i1 %8, label %29, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.SkSL::ExternalFunctionCall", %"class.SkSL::ExternalFunctionCall"* %0, i64 0, i32 2, i32 0, i32 0, i64 24
  %11 = bitcast i8* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = lshr i64 %12, 1
  %14 = and i64 %13, 2147483647
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157"* %7, i64 %14
  %16 = icmp eq i64 %14, 0
  br i1 %16, label %29, label %19

17:                                               ; preds = %19
  %18 = icmp eq %"class.std::__1::unique_ptr.157"* %28, %15
  br i1 %18, label %29, label %19

19:                                               ; preds = %9, %17
  %20 = phi %"class.std::__1::unique_ptr.157"* [ %28, %17 ], [ %7, %9 ]
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %21, align 8
  %23 = bitcast %"class.SkSL::Expression"* %22 to i1 (%"class.SkSL::Expression"*, i32)***
  %24 = load i1 (%"class.SkSL::Expression"*, i32)**, i1 (%"class.SkSL::Expression"*, i32)*** %23, align 8
  %25 = getelementptr inbounds i1 (%"class.SkSL::Expression"*, i32)*, i1 (%"class.SkSL::Expression"*, i32)** %24, i64 7
  %26 = load i1 (%"class.SkSL::Expression"*, i32)*, i1 (%"class.SkSL::Expression"*, i32)** %25, align 8
  %27 = tail call zeroext i1 %26(%"class.SkSL::Expression"* %22, i32 %1) #14
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157"* %20, i64 1
  br i1 %27, label %29, label %17

29:                                               ; preds = %17, %19, %4, %9, %2
  %30 = phi i1 [ true, %2 ], [ false, %9 ], [ false, %4 ], [ false, %17 ], [ true, %19 ]
  ret i1 %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL20ExternalFunctionCall5cloneEv(%"class.SkSL::ExternalFunctionCall"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.SkSTArray.215, align 8
  %3 = alloca %class.SkSTArray.215, align 8
  %4 = getelementptr inbounds %class.SkSTArray.215, %class.SkSTArray.215* %3, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #14
  %5 = getelementptr inbounds %class.SkSTArray.215, %class.SkSTArray.215* %3, i64 0, i32 0, i32 0, i64 16
  %6 = getelementptr inbounds %class.SkSTArray.215, %class.SkSTArray.215* %3, i64 0, i32 0, i32 0, i64 24
  %7 = bitcast i8* %6 to i64*
  %8 = bitcast i8* %5 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 16, i1 false)
  store i8* %4, i8** %8, align 8
  store i64 17179869184, i64* %7, align 8
  %9 = bitcast i8* %5 to %class.SkTArray.217*
  %10 = getelementptr inbounds %"class.SkSL::ExternalFunctionCall", %"class.SkSL::ExternalFunctionCall"* %0, i64 0, i32 2, i32 0, i32 0, i64 16
  %11 = getelementptr inbounds %"class.SkSL::ExternalFunctionCall", %"class.SkSL::ExternalFunctionCall"* %0, i64 0, i32 2, i32 0, i32 0, i64 24
  %12 = bitcast i8* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = lshr i64 %13, 1
  %15 = trunc i64 %14 to i32
  %16 = and i32 %15, 2147483647
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %1
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.217* %9, i32 %16, i32 0) #14
  %19 = load i64, i64* %7, align 8
  %20 = shl i64 %19, 32
  %21 = and i64 %20, 4294967296
  %22 = and i64 %19, -4294967297
  %23 = or i64 %21, %22
  br label %24

24:                                               ; preds = %1, %18
  %25 = phi i64 [ %23, %18 ], [ 17179869184, %1 ]
  store i64 %25, i64* %7, align 8
  %26 = bitcast i8* %10 to %"class.std::__1::unique_ptr.157"**
  %27 = load %"class.std::__1::unique_ptr.157"*, %"class.std::__1::unique_ptr.157"** %26, align 8
  %28 = icmp eq %"class.std::__1::unique_ptr.157"* %27, null
  br i1 %28, label %37, label %29

29:                                               ; preds = %24
  %30 = load i64, i64* %12, align 8
  %31 = lshr i64 %30, 1
  %32 = and i64 %31, 2147483647
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157"* %27, i64 %32
  %34 = icmp eq i64 %32, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %29
  %36 = bitcast i8* %5 to %"class.std::__1::unique_ptr.157"**
  br label %128

37:                                               ; preds = %128, %24, %29
  %38 = getelementptr inbounds %"class.SkSL::ExternalFunctionCall", %"class.SkSL::ExternalFunctionCall"* %0, i64 0, i32 0, i32 0, i32 1
  %39 = getelementptr inbounds %"class.SkSL::ExternalFunctionCall", %"class.SkSL::ExternalFunctionCall"* %0, i64 0, i32 1
  %40 = load %"class.SkSL::ExternalFunction"*, %"class.SkSL::ExternalFunction"** %39, align 8
  %41 = getelementptr inbounds %class.SkSTArray.215, %class.SkSTArray.215* %2, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %41)
  %42 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 64) #14
  %43 = load i32, i32* %38, align 4
  %44 = getelementptr inbounds %class.SkSTArray.215, %class.SkSTArray.215* %2, i64 0, i32 0, i32 0, i64 16
  %45 = getelementptr inbounds %class.SkSTArray.215, %class.SkSTArray.215* %2, i64 0, i32 0, i32 0, i64 24
  %46 = bitcast i8* %45 to i64*
  %47 = bitcast i8* %44 to i8**
  store i8* %41, i8** %47, align 8
  store i64 17179869184, i64* %46, align 8
  %48 = bitcast i8* %44 to %class.SkTArray.217*
  %49 = call dereferenceable(16) %class.SkTArray.217* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray.217* %48, %class.SkTArray.217* dereferenceable(16) %9) #14
  %50 = getelementptr inbounds %"class.SkSL::ExternalFunction", %"class.SkSL::ExternalFunction"* %40, i64 0, i32 0, i32 2
  %51 = bitcast %"class.SkSL::Type"** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast i8* %42 to i32 (...)***
  %54 = getelementptr inbounds i8, i8* %42, i64 8
  %55 = bitcast i8* %54 to i32*
  store i32 %43, i32* %55, align 8
  %56 = getelementptr inbounds i8, i8* %42, i64 12
  %57 = bitcast i8* %56 to i32*
  store i32 41, i32* %57, align 4
  %58 = getelementptr inbounds i8, i8* %42, i64 16
  %59 = bitcast i8* %58 to i64*
  store i64 %52, i64* %59, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL20ExternalFunctionCallE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %53, align 8
  %60 = getelementptr inbounds i8, i8* %42, i64 24
  %61 = bitcast i8* %60 to %"class.SkSL::ExternalFunction"**
  store %"class.SkSL::ExternalFunction"* %40, %"class.SkSL::ExternalFunction"** %61, align 8
  %62 = getelementptr inbounds i8, i8* %42, i64 48
  %63 = getelementptr inbounds i8, i8* %42, i64 32
  %64 = getelementptr inbounds i8, i8* %42, i64 56
  %65 = bitcast i8* %64 to i64*
  %66 = bitcast i8* %62 to i8**
  store i8* %63, i8** %66, align 8
  store i64 17179869184, i64* %65, align 8
  %67 = bitcast i8* %62 to %class.SkTArray.217*
  %68 = call dereferenceable(16) %class.SkTArray.217* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray.217* %67, %class.SkTArray.217* dereferenceable(16) %48) #14
  %69 = load i64, i64* %46, align 8
  %70 = and i64 %69, 4294967294
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %74, label %72

72:                                               ; preds = %37
  %73 = bitcast i8* %44 to %"class.std::__1::unique_ptr.157"**
  br label %78

74:                                               ; preds = %89, %37
  %75 = phi i64 [ %69, %37 ], [ %91, %89 ]
  %76 = and i64 %75, 1
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %97, label %95

78:                                               ; preds = %89, %72
  %79 = phi i64 [ 0, %72 ], [ %90, %89 ]
  %80 = load %"class.std::__1::unique_ptr.157"*, %"class.std::__1::unique_ptr.157"** %73, align 8
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157"* %80, i64 %79, i32 0, i32 0, i32 0
  %82 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %81, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %81, align 8
  %83 = icmp eq %"class.SkSL::Expression"* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %78
  %85 = bitcast %"class.SkSL::Expression"* %82 to void (%"class.SkSL::Expression"*)***
  %86 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %85, align 8
  %87 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %86, i64 1
  %88 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %87, align 8
  call void %88(%"class.SkSL::Expression"* nonnull %82) #14
  br label %89

89:                                               ; preds = %84, %78
  %90 = add nuw nsw i64 %79, 1
  %91 = load i64, i64* %46, align 8
  %92 = lshr i64 %91, 1
  %93 = and i64 %92, 2147483647
  %94 = icmp ult i64 %90, %93
  br i1 %94, label %78, label %74

95:                                               ; preds = %74
  %96 = load i8*, i8** %47, align 8
  call void @_Z7sk_freePv(i8* %96) #14
  br label %97

97:                                               ; preds = %95, %74
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %41)
  %98 = load i64, i64* %7, align 8
  %99 = and i64 %98, 4294967294
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %103, label %101

101:                                              ; preds = %97
  %102 = bitcast i8* %5 to %"class.std::__1::unique_ptr.157"**
  br label %107

103:                                              ; preds = %118, %97
  %104 = phi i64 [ %98, %97 ], [ %120, %118 ]
  %105 = and i64 %104, 1
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %126, label %124

107:                                              ; preds = %118, %101
  %108 = phi i64 [ 0, %101 ], [ %119, %118 ]
  %109 = load %"class.std::__1::unique_ptr.157"*, %"class.std::__1::unique_ptr.157"** %102, align 8
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157"* %109, i64 %108, i32 0, i32 0, i32 0
  %111 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %110, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %110, align 8
  %112 = icmp eq %"class.SkSL::Expression"* %111, null
  br i1 %112, label %118, label %113

113:                                              ; preds = %107
  %114 = bitcast %"class.SkSL::Expression"* %111 to void (%"class.SkSL::Expression"*)***
  %115 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %114, align 8
  %116 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %115, i64 1
  %117 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %116, align 8
  call void %117(%"class.SkSL::Expression"* nonnull %111) #14
  br label %118

118:                                              ; preds = %113, %107
  %119 = add nuw nsw i64 %108, 1
  %120 = load i64, i64* %7, align 8
  %121 = lshr i64 %120, 1
  %122 = and i64 %121, 2147483647
  %123 = icmp ult i64 %119, %122
  br i1 %123, label %107, label %103

124:                                              ; preds = %103
  %125 = load i8*, i8** %8, align 8
  call void @_Z7sk_freePv(i8* %125) #14
  br label %126

126:                                              ; preds = %103, %124
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #14
  %127 = bitcast i8* %42 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %127

128:                                              ; preds = %35, %128
  %129 = phi %"class.std::__1::unique_ptr.157"* [ %27, %35 ], [ %148, %128 ]
  %130 = getelementptr inbounds %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157"* %129, i64 0, i32 0, i32 0, i32 0
  %131 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %130, align 8
  %132 = bitcast %"class.SkSL::Expression"* %131 to %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)***
  %133 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*** %132, align 8
  %134 = getelementptr inbounds %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %133, i64 10
  %135 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %134, align 8
  %136 = call %"class.SkSL::Expression"* %135(%"class.SkSL::Expression"* %131) #14
  %137 = ptrtoint %"class.SkSL::Expression"* %136 to i64
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.217* %9, i32 1, i32 1) #14
  %138 = load %"class.std::__1::unique_ptr.157"*, %"class.std::__1::unique_ptr.157"** %36, align 8
  %139 = load i64, i64* %7, align 8
  %140 = lshr i64 %139, 1
  %141 = and i64 %140, 2147483647
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157"* %138, i64 %141
  %143 = add i64 %139, 2
  %144 = and i64 %143, 4294967294
  %145 = and i64 %139, -4294967295
  %146 = or i64 %144, %145
  store i64 %146, i64* %7, align 8
  %147 = bitcast %"class.std::__1::unique_ptr.157"* %142 to i64*
  store i64 %137, i64* %147, align 8
  %148 = getelementptr inbounds %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157"* %129, i64 1
  %149 = icmp eq %"class.std::__1::unique_ptr.157"* %148, %33
  br i1 %149, label %37, label %128
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZZN4SkSL11IRGenerator26getNormalizeSkPositionCodeEvENK3$_1clEv: argument 0"}
!5 = distinct !{!5, !"_ZZN4SkSL11IRGenerator26getNormalizeSkPositionCodeEvENK3$_1clEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZZN4SkSL11IRGenerator26getNormalizeSkPositionCodeEvENK3$_2clEv: argument 0"}
!8 = distinct !{!8, !"_ZZN4SkSL11IRGenerator26getNormalizeSkPositionCodeEvENK3$_2clEv"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZZN4SkSL11IRGenerator26getNormalizeSkPositionCodeEvENK3$_1clEv: argument 0"}
!11 = distinct !{!11, !"_ZZN4SkSL11IRGenerator26getNormalizeSkPositionCodeEvENK3$_1clEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZZN4SkSL11IRGenerator26getNormalizeSkPositionCodeEvENK3$_2clEv: argument 0"}
!14 = distinct !{!14, !"_ZZN4SkSL11IRGenerator26getNormalizeSkPositionCodeEvENK3$_2clEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZZN4SkSL11IRGenerator26getNormalizeSkPositionCodeEvENK3$_1clEv: argument 0"}
!17 = distinct !{!17, !"_ZZN4SkSL11IRGenerator26getNormalizeSkPositionCodeEvENK3$_1clEv"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZZN4SkSL11IRGenerator26getNormalizeSkPositionCodeEvENK3$_1clEv: argument 0"}
!20 = distinct !{!20, !"_ZZN4SkSL11IRGenerator26getNormalizeSkPositionCodeEvENK3$_1clEv"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNK4SkSL4Type11displayNameEv: argument 0"}
!23 = distinct !{!23, !"_ZNK4SkSL4Type11displayNameEv"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNK4SkSL4Type11displayNameEv: argument 0"}
!26 = distinct !{!26, !"_ZNK4SkSL4Type11displayNameEv"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!29 = distinct !{!29, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!32 = distinct !{!32, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!35 = distinct !{!35, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!38 = distinct !{!38, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!41 = distinct !{!41, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!44 = distinct !{!44, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!47 = distinct !{!47, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!50 = distinct !{!50, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!51 = !{!52}
!52 = distinct !{!52, !53, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!53 = distinct !{!53, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!54 = !{!55}
!55 = distinct !{!55, !56, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!56 = distinct !{!56, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!57 = !{!58}
!58 = distinct !{!58, !59, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!59 = distinct !{!59, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!60 = !{!61}
!61 = distinct !{!61, !62, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!62 = distinct !{!62, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!63 = !{!64}
!64 = distinct !{!64, !65, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!65 = distinct !{!65, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!66 = !{!67}
!67 = distinct !{!67, !68, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!68 = distinct !{!68, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!69 = !{!70}
!70 = distinct !{!70, !71, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!71 = distinct !{!71, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!72 = !{!73}
!73 = distinct !{!73, !74, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!74 = distinct !{!74, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!75 = !{!76}
!76 = distinct !{!76, !77, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!77 = distinct !{!77, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!78 = !{!79}
!79 = distinct !{!79, !80, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!80 = distinct !{!80, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!81 = !{!82}
!82 = distinct !{!82, !83, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!83 = distinct !{!83, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!84 = !{!85}
!85 = distinct !{!85, !86, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!86 = distinct !{!86, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!87 = !{!88}
!88 = distinct !{!88, !89, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv: argument 0"}
!89 = distinct !{!89, !"_ZZNK4SkSL6Layout11descriptionEvENUlvE_clEv"}
!90 = !{!91}
!91 = distinct !{!91, !92, !"_ZN4SkSL3dsl6DSLVaraSEi: argument 0"}
!92 = distinct !{!92, !"_ZN4SkSL3dsl6DSLVaraSEi"}
!93 = !{!94}
!94 = distinct !{!94, !95, !"_ZN4SkSL3dsl6DSLVarppEi: argument 0"}
!95 = distinct !{!95, !"_ZN4SkSL3dsl6DSLVarppEi"}
!96 = !{!97}
!97 = distinct !{!97, !98, !"_ZNK4SkSL4Type11displayNameEv: argument 0"}
!98 = distinct !{!98, !"_ZNK4SkSL4Type11displayNameEv"}
!99 = !{i64 0, i64 65}
!100 = !{!101}
!101 = distinct !{!101, !102, !"_ZNK4SkSL4Type11displayNameEv: argument 0"}
!102 = distinct !{!102, !"_ZNK4SkSL4Type11displayNameEv"}
!103 = !{!104}
!104 = distinct !{!104, !105, !"_ZNK4SkSL4Type11displayNameEv: argument 0"}
!105 = distinct !{!105, !"_ZNK4SkSL4Type11displayNameEv"}
!106 = !{!107}
!107 = distinct !{!107, !108, !"_ZNK4SkSL4Type11displayNameEv: argument 0"}
!108 = distinct !{!108, !"_ZNK4SkSL4Type11displayNameEv"}
!109 = !{!110}
!110 = distinct !{!110, !111}
!111 = distinct !{!111, !"LVerDomain"}
!112 = !{!113}
!113 = distinct !{!113, !111}
!114 = distinct !{!114, !115}
!115 = !{!"llvm.loop.isvectorized", i32 1}
!116 = distinct !{!116, !117}
!117 = !{!"llvm.loop.unroll.disable"}
!118 = distinct !{!118, !117}
!119 = distinct !{!119, !115}
!120 = !{!121}
!121 = distinct !{!121, !122}
!122 = distinct !{!122, !"LVerDomain"}
!123 = !{!124}
!124 = distinct !{!124, !122}
!125 = distinct !{!125, !115}
!126 = distinct !{!126, !117}
!127 = distinct !{!127, !115}
!128 = !{!129}
!129 = distinct !{!129, !130}
!130 = distinct !{!130, !"LVerDomain"}
!131 = !{!132}
!132 = distinct !{!132, !130}
!133 = distinct !{!133, !115}
!134 = distinct !{!134, !117}
!135 = distinct !{!135, !117}
!136 = distinct !{!136, !115}
!137 = !{!138}
!138 = distinct !{!138, !139}
!139 = distinct !{!139, !"LVerDomain"}
!140 = !{!141}
!141 = distinct !{!141, !139}
!142 = distinct !{!142, !115}
!143 = distinct !{!143, !117}
!144 = distinct !{!144, !117}
!145 = distinct !{!145, !115}
!146 = distinct !{!146, !117}
!147 = !{!148}
!148 = distinct !{!148, !149, !"_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE21__construct_node_hashIRKS2_JEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINS7_ISG_EEEEEEmOT_DpOT0_: argument 0"}
!149 = distinct !{!149, !"_ZNSt3__112__hash_tableIN4SkSL9ModifiersENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE21__construct_node_hashIRKS2_JEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINS7_ISG_EEEEEEmOT_DpOT0_"}
!150 = distinct !{!150, !117}
!151 = !{!152}
!152 = distinct !{!152, !153, !"_ZNK4SkSL4Type11displayNameEv: argument 0"}
!153 = distinct !{!153, !"_ZNK4SkSL4Type11displayNameEv"}
!154 = !{!155, !157}
!155 = distinct !{!155, !156, !"_ZNK4SkSL4Type11displayNameEv: argument 0"}
!156 = distinct !{!156, !"_ZNK4SkSL4Type11displayNameEv"}
!157 = distinct !{!157, !158, !"_ZNK4SkSL4Type11descriptionEv: argument 0"}
!158 = distinct !{!158, !"_ZNK4SkSL4Type11descriptionEv"}
!159 = distinct !{!159, !117}
!160 = distinct !{!160, !117}
!161 = !{!162}
!162 = distinct !{!162, !163, !"_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIRKS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISI_EEEEEEmOT_DpOT0_: argument 0"}
!163 = distinct !{!163, !"_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIRKS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISI_EEEEEEmOT_DpOT0_"}
!164 = distinct !{!164, !117}
!165 = distinct !{!165, !117}
!166 = distinct !{!166, !117}
!167 = !{!168}
!168 = distinct !{!168, !169, !"_ZNSt3__112__hash_tableIPKN4SkSL4TypeENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIRKS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISI_EEEEEEmOT_DpOT0_: argument 0"}
!169 = distinct !{!169, !"_ZNSt3__112__hash_tableIPKN4SkSL4TypeENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIRKS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISI_EEEEEEmOT_DpOT0_"}
!170 = distinct !{!170, !117}
!171 = !{!172}
!172 = distinct !{!172, !173, !"_ZNK4SkSL4Type11displayNameEv: argument 0"}
!173 = distinct !{!173, !"_ZNK4SkSL4Type11displayNameEv"}
!174 = distinct !{!174, !117}
!175 = !{!176}
!176 = distinct !{!176, !177, !"_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISG_EEEEEEmOT_DpOT0_: argument 0"}
!177 = distinct !{!177, !"_ZNSt3__112__hash_tableIPKN4SkSL19FunctionDeclarationENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISG_EEEEEEmOT_DpOT0_"}
