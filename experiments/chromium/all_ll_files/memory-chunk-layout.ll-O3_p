; ModuleID = '../../v8/src/heap/memory-chunk-layout.cc'
source_filename = "../../v8/src/heap/memory-chunk-layout.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

@_ZN2v88internal6Bitmap5kSizeE = external local_unnamed_addr constant i64, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal17MemoryChunkLayout24CodePageGuardStartOffsetEv() local_unnamed_addr #0 align 2 {
  %1 = load i64, i64* @_ZN2v88internal6Bitmap5kSizeE, align 8
  %2 = tail call i64 @_ZN2v88internal15MemoryAllocator17GetCommitPageSizeEv() #3
  %3 = add i64 %1, 271
  %4 = add i64 %3, %2
  %5 = sub nsw i64 0, %2
  %6 = and i64 %4, %5
  ret i64 %6
}

declare i64 @_ZN2v88internal15MemoryAllocator17GetCommitPageSizeEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal17MemoryChunkLayout17CodePageGuardSizeEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i64 @_ZN2v88internal15MemoryAllocator17GetCommitPageSizeEv() #3
  ret i64 %1
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal17MemoryChunkLayout27ObjectStartOffsetInCodePageEv() local_unnamed_addr #0 align 2 {
  %1 = load i64, i64* @_ZN2v88internal6Bitmap5kSizeE, align 8
  %2 = tail call i64 @_ZN2v88internal15MemoryAllocator17GetCommitPageSizeEv() #3
  %3 = add i64 %1, 271
  %4 = add i64 %3, %2
  %5 = sub nsw i64 0, %2
  %6 = and i64 %4, %5
  %7 = tail call i64 @_ZN2v88internal15MemoryAllocator17GetCommitPageSizeEv() #3
  %8 = add i64 %6, %7
  ret i64 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal17MemoryChunkLayout25ObjectEndOffsetInCodePageEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i64 @_ZN2v88internal15MemoryAllocator17GetCommitPageSizeEv() #3
  %2 = shl i64 %1, 32
  %3 = sub i64 1125899906842624, %2
  %4 = ashr exact i64 %3, 32
  ret i64 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal17MemoryChunkLayout27AllocatableMemoryInCodePageEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i64 @_ZN2v88internal15MemoryAllocator17GetCommitPageSizeEv() #3
  %2 = shl i64 %1, 32
  %3 = sub i64 1125899906842624, %2
  %4 = ashr exact i64 %3, 32
  %5 = load i64, i64* @_ZN2v88internal6Bitmap5kSizeE, align 8
  %6 = tail call i64 @_ZN2v88internal15MemoryAllocator17GetCommitPageSizeEv() #3
  %7 = add i64 %5, 271
  %8 = add i64 %7, %6
  %9 = sub nsw i64 0, %6
  %10 = and i64 %8, %9
  %11 = tail call i64 @_ZN2v88internal15MemoryAllocator17GetCommitPageSizeEv() #3
  %12 = sub i64 %4, %11
  %13 = sub i64 %12, %10
  ret i64 %13
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17MemoryChunkLayout27ObjectStartOffsetInDataPageEv() local_unnamed_addr #2 align 2 {
  %1 = load i64, i64* @_ZN2v88internal6Bitmap5kSizeE, align 8
  %2 = add i64 %1, 279
  %3 = and i64 %2, -8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal17MemoryChunkLayout30ObjectStartOffsetInMemoryChunkENS0_15AllocationSpaceE(i32) local_unnamed_addr #0 align 2 {
  %2 = icmp eq i32 %0, 2
  %3 = load i64, i64* @_ZN2v88internal6Bitmap5kSizeE, align 8
  br i1 %2, label %4, label %12

4:                                                ; preds = %1
  %5 = tail call i64 @_ZN2v88internal15MemoryAllocator17GetCommitPageSizeEv() #3
  %6 = add i64 %3, 271
  %7 = add i64 %6, %5
  %8 = sub nsw i64 0, %5
  %9 = and i64 %7, %8
  %10 = tail call i64 @_ZN2v88internal15MemoryAllocator17GetCommitPageSizeEv() #3
  %11 = add i64 %9, %10
  br label %15

12:                                               ; preds = %1
  %13 = add i64 %3, 279
  %14 = and i64 %13, -8
  br label %15

15:                                               ; preds = %12, %4
  %16 = phi i64 [ %11, %4 ], [ %14, %12 ]
  ret i64 %16
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17MemoryChunkLayout27AllocatableMemoryInDataPageEv() local_unnamed_addr #2 align 2 {
  %1 = load i64, i64* @_ZN2v88internal6Bitmap5kSizeE, align 8
  %2 = add i64 %1, 279
  %3 = and i64 %2, -8
  %4 = sub nsw i64 262144, %3
  ret i64 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal17MemoryChunkLayout30AllocatableMemoryInMemoryChunkENS0_15AllocationSpaceE(i32) local_unnamed_addr #0 align 2 {
  %2 = icmp eq i32 %0, 2
  br i1 %2, label %3, label %17

3:                                                ; preds = %1
  %4 = tail call i64 @_ZN2v88internal15MemoryAllocator17GetCommitPageSizeEv() #3
  %5 = shl i64 %4, 32
  %6 = sub i64 1125899906842624, %5
  %7 = ashr exact i64 %6, 32
  %8 = load i64, i64* @_ZN2v88internal6Bitmap5kSizeE, align 8
  %9 = tail call i64 @_ZN2v88internal15MemoryAllocator17GetCommitPageSizeEv() #3
  %10 = add i64 %8, 271
  %11 = add i64 %10, %9
  %12 = sub nsw i64 0, %9
  %13 = and i64 %11, %12
  %14 = tail call i64 @_ZN2v88internal15MemoryAllocator17GetCommitPageSizeEv() #3
  %15 = sub i64 %7, %14
  %16 = sub i64 %15, %13
  br label %22

17:                                               ; preds = %1
  %18 = load i64, i64* @_ZN2v88internal6Bitmap5kSizeE, align 8
  %19 = add i64 %18, 279
  %20 = and i64 %19, -8
  %21 = sub nsw i64 262144, %20
  br label %22

22:                                               ; preds = %17, %3
  %23 = phi i64 [ %16, %3 ], [ %21, %17 ]
  ret i64 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal17MemoryChunkLayout24MaxRegularCodeObjectSizeEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i64 @_ZN2v88internal15MemoryAllocator17GetCommitPageSizeEv() #3
  %2 = shl i64 %1, 32
  %3 = sub i64 1125899906842624, %2
  %4 = ashr exact i64 %3, 32
  %5 = load i64, i64* @_ZN2v88internal6Bitmap5kSizeE, align 8
  %6 = tail call i64 @_ZN2v88internal15MemoryAllocator17GetCommitPageSizeEv() #3
  %7 = add i64 %5, 271
  %8 = add i64 %7, %6
  %9 = sub nsw i64 0, %6
  %10 = and i64 %8, %9
  %11 = tail call i64 @_ZN2v88internal15MemoryAllocator17GetCommitPageSizeEv() #3
  %12 = sub i64 %4, %11
  %13 = sub i64 %12, %10
  %14 = lshr i64 %13, 1
  %15 = trunc i64 %14 to i32
  ret i32 %15
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
