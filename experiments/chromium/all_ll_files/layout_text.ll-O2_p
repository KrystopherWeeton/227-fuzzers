; ModuleID = '../../third_party/blink/renderer/core/layout/layout_text.cc'
source_filename = "../../third_party/blink/renderer/core/layout/layout_text.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<WTF::HashMap<blink::LayoutText *, blink::(anonymous namespace)::SecureTextTimer *, WTF::PtrHash<blink::LayoutText>, WTF::HashTraits<blink::LayoutText *>, WTF::HashTraits<blink::(anonymous namespace)::SecureTextTimer *>, WTF::PartitionAllocator> >::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::HashMap<blink::LayoutText *, blink::(anonymous namespace)::SecureTextTimer *, WTF::PtrHash<blink::LayoutText>, WTF::HashTraits<blink::LayoutText *>, WTF::HashTraits<blink::(anonymous namespace)::SecureTextTimer *>, WTF::PartitionAllocator> >::InstanceStorage" = type { [24 x i8] }
%"class.WTF::StaticSingleton.3329" = type { %"class.WTF::StaticSingleton<WTF::HashMap<const blink::LayoutText *, std::__1::unique_ptr<blink::(anonymous namespace)::SelectionDisplayItemClient, std::__1::default_delete<blink::(anonymous namespace)::SelectionDisplayItemClient> >, WTF::PtrHash<const blink::LayoutText>, WTF::HashTraits<const blink::LayoutText *>, WTF::HashTraits<std::__1::unique_ptr<blink::(anonymous namespace)::SelectionDisplayItemClient, std::__1::default_delete<blink::(anonymous namespace)::SelectionDisplayItemClient> > >, WTF::PartitionAllocator> >::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::HashMap<const blink::LayoutText *, std::__1::unique_ptr<blink::(anonymous namespace)::SelectionDisplayItemClient, std::__1::default_delete<blink::(anonymous namespace)::SelectionDisplayItemClient> >, WTF::PtrHash<const blink::LayoutText>, WTF::HashTraits<const blink::LayoutText *>, WTF::HashTraits<std::__1::unique_ptr<blink::(anonymous namespace)::SelectionDisplayItemClient, std::__1::default_delete<blink::(anonymous namespace)::SelectionDisplayItemClient> > >, WTF::PartitionAllocator> >::InstanceStorage" = type { [24 x i8] }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.41" }
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1740", i64 }
%"class.std::__1::vector.1740" = type { %"class.std::__1::__vector_base.1741" }
%"class.std::__1::__vector_base.1741" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1742" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1742" = type { %"struct.std::__1::__compressed_pair_elem.1743" }
%"struct.std::__1::__compressed_pair_elem.1743" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::LayoutText" = type { %"class.blink::LayoutObject", i16, i32, float, float, float, float, %"class.WTF::String", %"struct.blink::LogicalOffset", %union.anon.3033 }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1747", [4 x i8] }>
%"class.WTF::RefCounted.1747" = type { %"class.base::RefCounted.1748" }
%"class.base::RefCounted.1748" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.3202 }
%class.scoped_refptr.3202 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.3203", %"class.WTF::Vector.630", %"class.WTF::Vector.3205", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.3203" = type { %"class.base::RefCounted.3204" }
%"class.base::RefCounted.3204" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.3205" = type { %"class.WTF::VectorBuffer.3206" }
%"class.WTF::VectorBuffer.3206" = type { %"class.WTF::VectorBufferBase.3207" }
%"class.WTF::VectorBufferBase.3207" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.3208 }
%union.anon.3208 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1340", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1342", %"class.blink::HeapVector.1344", %"class.std::__1::unique_ptr.1352", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1358", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1371", %"class.WTF::Vector.1373", i8, i8, %"class.std::__1::unique_ptr.1378", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1384", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1392", i8, i32, %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::Member.1398", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1400", %"class.WTF::HashMap.1402", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.1413", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1415", i8, i32, %"class.blink::Member.1422", %"class.blink::Member.1424", i32, %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.blink::Member.1430", %"class.std::__1::unique_ptr.1432", i64, %"class.std::__1::unique_ptr.1438", i32, i32, %"class.blink::Member.1449", %"class.blink::Member.1451", %"class.blink::Member.1453", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1455", %"class.WTF::Vector.1457", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1462", %"class.blink::Member.1469", %"class.std::__1::unique_ptr.1471", %"class.blink::Member.1477", i8, i8, %"class.WTF::String", %"class.blink::Member.1479", i8, [7 x i8], %"class.blink::HeapHashMap.1481", %"class.blink::HeapObserverSet", %"class.blink::Member.1495", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1497", i32, i8, i8, %"class.blink::WeakMember.1499", %"class.blink::Member.1500" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1524", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1591", i32, i8, [3 x i8], %"class.blink::HeapVector.1593", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1601", %"class.blink::Member.1603", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1612", %"class.blink::Member.1735", %"class.blink::Member.1737", i8, [7 x i8] }>
%"class.blink::Supplementable.1524" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1525" }
%"class.blink::HeapHashMap.1525" = type { %"class.WTF::HashMap.1528" }
%"class.WTF::HashMap.1528" = type { %"class.WTF::HashTable.1529" }
%"class.WTF::HashTable.1529" = type <{ %"struct.WTF::KeyValuePair.1531"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1531" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1540" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1532" }
%"class.blink::HeapObserverSet.1532" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1533" }
%"class.blink::HeapHashSet.1533" = type { %"class.WTF::HashSet.1536" }
%"class.WTF::HashSet.1536" = type { %"class.WTF::HashTable.1537" }
%"class.WTF::HashTable.1537" = type <{ %"class.blink::WeakMember.1539"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1539" = type opaque
%"class.blink::Supplementable.1540" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1541" }
%"class.blink::HeapHashMap.1541" = type { %"class.WTF::HashMap.1544" }
%"class.WTF::HashMap.1544" = type { %"class.WTF::HashTable.1545" }
%"class.WTF::HashTable.1545" = type <{ %"struct.WTF::KeyValuePair.1547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1547" = type { i8*, %"class.blink::Member.3193" }
%"class.blink::Member.3193" = type { %"class.blink::MemberBase.3194" }
%"class.blink::MemberBase.3194" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.3195" }
%"class.blink::Member.3195" = type { %"class.blink::MemberBase.3196" }
%"class.blink::MemberBase.3196" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1548, %"class.std::__1::unique_ptr.1557", %"class.std::__1::unique_ptr.1557", %"class.std::__1::unique_ptr.1581", %"class.std::__1::unique_ptr.1581", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1587", i32, i32 }
%class.scoped_refptr.1548 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1549", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1551", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1556 }
%"class.WTF::RefCounted.1549" = type { %"class.base::RefCounted.1550" }
%"class.base::RefCounted.1550" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1551" = type { %"class.absl::optional_internal::optional_data.1552" }
%"class.absl::optional_internal::optional_data.1552" = type { %"class.absl::optional_internal::optional_data_base.1553" }
%"class.absl::optional_internal::optional_data_base.1553" = type { %"class.absl::optional_internal::optional_data_dtor_base.1554" }
%"class.absl::optional_internal::optional_data_dtor_base.1554" = type { i8, %union.anon.1555 }
%union.anon.1555 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1556 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1557" = type { %"class.std::__1::__compressed_pair.1558" }
%"class.std::__1::__compressed_pair.1558" = type { %"struct.std::__1::__compressed_pair_elem.1559" }
%"struct.std::__1::__compressed_pair_elem.1559" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.1568", %"class.std::__1::map.1577"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.1551" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1560", %"class.std::__1::__compressed_pair.1565" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1560" = type { %"struct.std::__1::__compressed_pair_elem.1561" }
%"struct.std::__1::__compressed_pair_elem.1561" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1565" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1568" = type { %"class.std::__1::__tree.1569" }
%"class.std::__1::__tree.1569" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1570", %"class.std::__1::__compressed_pair.1574" }
%"class.std::__1::__compressed_pair.1570" = type { %"struct.std::__1::__compressed_pair_elem.1561" }
%"class.std::__1::__compressed_pair.1574" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1577" = type opaque
%"class.std::__1::unique_ptr.1581" = type { %"class.std::__1::__compressed_pair.1582" }
%"class.std::__1::__compressed_pair.1582" = type { %"struct.std::__1::__compressed_pair_elem.1583" }
%"struct.std::__1::__compressed_pair_elem.1583" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1587" = type { %"class.WTF::HashTable.1588" }
%"class.WTF::HashTable.1588" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1591" = type { %"class.blink::MemberBase.1592" }
%"class.blink::MemberBase.1592" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1593" = type { %"class.WTF::Vector.1596" }
%"class.WTF::Vector.1596" = type { %"class.WTF::VectorBuffer.1597" }
%"class.WTF::VectorBuffer.1597" = type { %"class.WTF::VectorBufferBase.1598" }
%"class.WTF::VectorBufferBase.1598" = type { %"class.blink::Member.1599"*, i32, i32 }
%"class.blink::Member.1599" = type opaque
%"class.blink::Member.1601" = type { %"class.blink::MemberBase.1602" }
%"class.blink::MemberBase.1602" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1603" = type { %"class.blink::MemberBase.1604" }
%"class.blink::MemberBase.1604" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1605", i32, i32 }
%"class.blink::HeapHashMap.1605" = type { %"class.WTF::HashMap.1608" }
%"class.WTF::HashMap.1608" = type { %"class.WTF::HashTable.1609" }
%"class.WTF::HashTable.1609" = type <{ %"struct.WTF::KeyValuePair.1611"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1611" = type opaque
%"class.std::__1::unique_ptr.1612" = type { %"class.std::__1::__compressed_pair.1613" }
%"class.std::__1::__compressed_pair.1613" = type { %"struct.std::__1::__compressed_pair_elem.1614" }
%"struct.std::__1::__compressed_pair_elem.1614" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.1615" }
%"class.std::__1::unique_ptr.1615" = type { %"class.std::__1::__compressed_pair.1616" }
%"class.std::__1::__compressed_pair.1616" = type { %"struct.std::__1::__compressed_pair_elem.1617" }
%"struct.std::__1::__compressed_pair_elem.1617" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.1618" }
%"class.WTF::Vector.1618" = type { %"class.WTF::VectorBuffer.1619" }
%"class.WTF::VectorBuffer.1619" = type { %"class.WTF::VectorBufferBase.1620" }
%"class.WTF::VectorBufferBase.1620" = type { %"class.mojo::StructPtr.1621"*, i32, i32 }
%"class.mojo::StructPtr.1621" = type { %"class.std::__1::unique_ptr.1622" }
%"class.std::__1::unique_ptr.1622" = type { %"class.std::__1::__compressed_pair.1623" }
%"class.std::__1::__compressed_pair.1623" = type { %"struct.std::__1::__compressed_pair_elem.1624" }
%"struct.std::__1::__compressed_pair_elem.1624" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1625", %"class.WTF::HashMap.1632", %"class.WTF::HashMap.1637", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.630", i32, %"class.mojo::StructPtr.1642", %"class.WTF::Vector.630" }
%"class.mojo::StructPtr.1625" = type { %"class.std::__1::unique_ptr.1626" }
%"class.std::__1::unique_ptr.1626" = type { %"class.std::__1::__compressed_pair.1627" }
%"class.std::__1::__compressed_pair.1627" = type { %"struct.std::__1::__compressed_pair_elem.1628" }
%"struct.std::__1::__compressed_pair_elem.1628" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.1632" = type { %"class.WTF::HashTable.1633" }
%"class.WTF::HashTable.1633" = type <{ %"struct.WTF::KeyValuePair.1636"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1636" = type opaque
%"class.WTF::HashMap.1637" = type { %"class.WTF::HashTable.1638" }
%"class.WTF::HashTable.1638" = type <{ %"struct.WTF::KeyValuePair.1641"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1641" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.1642" = type { %"class.std::__1::unique_ptr.1643" }
%"class.std::__1::unique_ptr.1643" = type { %"class.std::__1::__compressed_pair.1644" }
%"class.std::__1::__compressed_pair.1644" = type { %"struct.std::__1::__compressed_pair_elem.1645" }
%"struct.std::__1::__compressed_pair_elem.1645" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.630", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1726" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.1657", i32 }>
%"class.std::__1::unique_ptr.1657" = type { %"class.std::__1::__compressed_pair.1658" }
%"class.std::__1::__compressed_pair.1658" = type { %"struct.std::__1::__compressed_pair_elem.1659" }
%"struct.std::__1::__compressed_pair_elem.1659" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.1660", %"class.absl::optional.1661", %"class.absl::optional.1666", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.1679", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.1701", %"class.std::__1::map.1712", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.1721", i8, %class.scoped_refptr.1671, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.1722" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.1660" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.1661" = type { %"class.absl::optional_internal::optional_data.1662" }
%"class.absl::optional_internal::optional_data.1662" = type { %"class.absl::optional_internal::optional_data_base.1663" }
%"class.absl::optional_internal::optional_data_base.1663" = type { %"class.absl::optional_internal::optional_data_dtor_base.1664" }
%"class.absl::optional_internal::optional_data_dtor_base.1664" = type { i8, %union.anon.1665 }
%union.anon.1665 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.1666" = type { %"class.absl::optional_internal::optional_data.1667" }
%"class.absl::optional_internal::optional_data.1667" = type { %"class.absl::optional_internal::optional_data_base.1668" }
%"class.absl::optional_internal::optional_data_base.1668" = type { %"class.absl::optional_internal::optional_data_dtor_base.1669" }
%"class.absl::optional_internal::optional_data_dtor_base.1669" = type { i8, %union.anon.1670 }
%union.anon.1670 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.1671, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.1672" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1672" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.1677 }
%class.scoped_refptr.1677 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1739", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.1671, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1739" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.1678 }
%class.scoped_refptr.1678 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.1679" = type { %"class.std::__1::__compressed_pair.1680" }
%"class.std::__1::__compressed_pair.1680" = type { %"struct.std::__1::__compressed_pair_elem.1681" }
%"struct.std::__1::__compressed_pair_elem.1681" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.1682", %class.scoped_refptr.1683 }
%"class.base::RepeatingCallback.1682" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1683 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1684", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1684" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.1688", %"class.std::__1::unique_ptr.1694", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.1700" }
%"class.std::__1::unique_ptr.1688" = type { %"class.std::__1::__compressed_pair.1689" }
%"class.std::__1::__compressed_pair.1689" = type { %"struct.std::__1::__compressed_pair_elem.1690" }
%"struct.std::__1::__compressed_pair_elem.1690" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.1694" = type { %"class.std::__1::__compressed_pair.1695" }
%"class.std::__1::__compressed_pair.1695" = type { %"struct.std::__1::__compressed_pair_elem.1696" }
%"struct.std::__1::__compressed_pair_elem.1696" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1700" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.1701" = type { %"class.std::__1::__tree.1702" }
%"class.std::__1::__tree.1702" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1703", %"class.std::__1::__compressed_pair.1707" }
%"class.std::__1::__compressed_pair.1703" = type { %"struct.std::__1::__compressed_pair_elem.1561" }
%"class.std::__1::__compressed_pair.1707" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1712" = type { %"class.std::__1::__tree.1713" }
%"class.std::__1::__tree.1713" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1714", %"class.std::__1::__compressed_pair.1718" }
%"class.std::__1::__compressed_pair.1714" = type { %"struct.std::__1::__compressed_pair_elem.1561" }
%"class.std::__1::__compressed_pair.1718" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::OnceCallback.1721" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.1671 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.1722" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.1726" = type { %"class.std::__1::__compressed_pair.1727" }
%"class.std::__1::__compressed_pair.1727" = type { %"struct.std::__1::__compressed_pair_elem.1728" }
%"struct.std::__1::__compressed_pair_elem.1728" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.1735" = type { %"class.blink::MemberBase.1736" }
%"class.blink::MemberBase.1736" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1737" = type { %"class.blink::MemberBase.1738" }
%"class.blink::MemberBase.1738" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1515", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1515" = type { %"class.WTF::Vector.1518" }
%"class.WTF::Vector.1518" = type { %"class.WTF::VectorBuffer.1519" }
%"class.WTF::VectorBuffer.1519" = type { %"class.WTF::VectorBufferBase.1520" }
%"class.WTF::VectorBufferBase.1520" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.3285 }
%class.scoped_refptr.3285 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.3295" }
%"class.blink::Member.3295" = type { %"class.blink::MemberBase.3296" }
%"class.blink::MemberBase.3296" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.3291" }
%"class.blink::MemberBase.3291" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.3292" }
%"class.blink::MemberBase.3292" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.3293" }
%"class.blink::MemberBase.3293" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.3294" }
%"class.blink::MemberBase.3294" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.3286", %"class.WTF::Vector.3286" }
%"class.WTF::Vector.3286" = type { %"class.WTF::VectorBuffer.3287" }
%"class.WTF::VectorBuffer.3287" = type { %"class.WTF::VectorBufferBase.3288" }
%"class.WTF::VectorBufferBase.3288" = type { %class.scoped_refptr.3285*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1342" = type { %"class.blink::MemberBase.1343" }
%"class.blink::MemberBase.1343" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1344" = type { %"class.WTF::Vector.1347" }
%"class.WTF::Vector.1347" = type { %"class.WTF::VectorBuffer.1348" }
%"class.WTF::VectorBuffer.1348" = type { %"class.WTF::VectorBufferBase.1349" }
%"class.WTF::VectorBufferBase.1349" = type { %"class.blink::Member.1350"*, i32, i32 }
%"class.blink::Member.1350" = type opaque
%"class.std::__1::unique_ptr.1352" = type { %"class.std::__1::__compressed_pair.1353" }
%"class.std::__1::__compressed_pair.1353" = type { %"struct.std::__1::__compressed_pair_elem.1354" }
%"struct.std::__1::__compressed_pair_elem.1354" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1358" = type { %"class.WTF::HashSet.1361" }
%"class.WTF::HashSet.1361" = type { %"class.WTF::HashTable.1362" }
%"class.WTF::HashTable.1362" = type <{ %"class.blink::WeakMember.1364"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1364" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1365", i32, [4 x i8] }>
%"class.WTF::Vector.1365" = type { %"class.WTF::VectorBuffer.1366" }
%"class.WTF::VectorBuffer.1366" = type { %"class.WTF::VectorBufferBase.1367" }
%"class.WTF::VectorBufferBase.1367" = type { %"struct.std::__1::pair.1368"*, i32, i32 }
%"struct.std::__1::pair.1368" = type opaque
%"class.blink::Member.1371" = type { %"class.blink::MemberBase.1372" }
%"class.blink::MemberBase.1372" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1373" = type { %"class.WTF::VectorBuffer.1374" }
%"class.WTF::VectorBuffer.1374" = type { %"class.WTF::VectorBufferBase.1375" }
%"class.WTF::VectorBufferBase.1375" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1378" = type { %"class.std::__1::__compressed_pair.1379" }
%"class.std::__1::__compressed_pair.1379" = type { %"struct.std::__1::__compressed_pair_elem.1380" }
%"struct.std::__1::__compressed_pair_elem.1380" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type { %"class.blink::LayoutBlockFlow", %"class.blink::UntracedMember.1860", %"class.blink::LayoutUnit", %"class.blink::LayoutState"*, %"class.std::__1::unique_ptr.2080", %"class.std::__1::unique_ptr.2086", %"class.std::__1::unique_ptr.2092", %class.scoped_refptr.1856, %"class.blink::LayoutQuote"*, i32, i32, i8, i32, i32, %"class.blink::Persistent.2098", i32, i32, %"struct.blink::PhysicalRect" }
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.1809", %"class.std::__1::unique_ptr.1829" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1765, %"class.WTF::Vector.1766", %"class.std::__1::unique_ptr.1771", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1792, %"class.blink::Persistent.1793" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1765 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type { %"class.WTF::RefCounted.2810", [4 x i8], %"class.blink::NGConstraintSpace", %class.scoped_refptr.2958, %union.anon.2976, %"class.blink::LayoutUnit", %"struct.blink::NGLayoutResult::Bitfields" }
%"class.WTF::RefCounted.2810" = type { %"class.base::RefCounted.2811" }
%"class.base::RefCounted.2811" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NGConstraintSpace" = type <{ %"struct.blink::LogicalSize", %union.anon.2812, %"class.blink::NGExclusionSpace", %"struct.blink::NGConstraintSpace::Bitfields", [4 x i8] }>
%"struct.blink::LogicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.2812 = type { %"struct.blink::NGConstraintSpace::RareData"* }
%"struct.blink::NGConstraintSpace::RareData" = type { %"struct.blink::LogicalSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGBfcOffset", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, %union.anon.2813 }
%"struct.blink::NGBfcOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.2813 = type { %"struct.blink::NGConstraintSpace::RareData::CustomData", [40 x i8] }
%"struct.blink::NGConstraintSpace::RareData::CustomData" = type { %class.scoped_refptr.2847 }
%class.scoped_refptr.2847 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.2848", [4 x i8], %"class.std::__1::unique_ptr.2850", i64, %"class.WTF::Vector.2854", %"class.WTF::Vector.2859", %"class.WTF::Vector.2865", %"class.WTF::Vector.2883", %class.scoped_refptr.1548, %"class.WTF::HashMap.2889", %"class.WTF::Vector.2894", %"class.WTF::Vector.2854", %"class.WTF::Vector.2900", %"class.WTF::HashMap.2905", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.2848" = type { %"class.base::RefCountedThreadSafe.2849" }
%"class.base::RefCountedThreadSafe.2849" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.2850" = type { %"class.std::__1::__compressed_pair.2851" }
%"class.std::__1::__compressed_pair.2851" = type { %"struct.std::__1::__compressed_pair_elem.2852" }
%"struct.std::__1::__compressed_pair_elem.2852" = type { i8* }
%"class.WTF::Vector.2859" = type { %"class.WTF::VectorBuffer.2860" }
%"class.WTF::VectorBuffer.2860" = type { %"class.WTF::VectorBufferBase.2861", [8 x i8] }
%"class.WTF::VectorBufferBase.2861" = type { %class.scoped_refptr.2862*, i32, i32 }
%class.scoped_refptr.2862 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.2865" = type { %"class.WTF::VectorBuffer.2866" }
%"class.WTF::VectorBuffer.2866" = type { %"class.WTF::VectorBufferBase.2867" }
%"class.WTF::VectorBufferBase.2867" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.2869", %"class.std::__1::unique_ptr.2875" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.2868 }
%class.scoped_refptr.2868 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.2869" = type { %"class.std::__1::__compressed_pair.2870" }
%"class.std::__1::__compressed_pair.2870" = type { %"struct.std::__1::__compressed_pair_elem.2871" }
%"struct.std::__1::__compressed_pair_elem.2871" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2875" = type { %"class.std::__1::__compressed_pair.2876" }
%"class.std::__1::__compressed_pair.2876" = type { %"struct.std::__1::__compressed_pair_elem.2877" }
%"struct.std::__1::__compressed_pair_elem.2877" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.2883" = type { %"class.WTF::VectorBuffer.2884" }
%"class.WTF::VectorBuffer.2884" = type { %"class.WTF::VectorBufferBase.2885" }
%"class.WTF::VectorBufferBase.2885" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.2886", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.2886" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.2889" = type { %"class.WTF::HashTable.2890" }
%"class.WTF::HashTable.2890" = type <{ %"struct.WTF::KeyValuePair.2893"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2893" = type opaque
%"class.WTF::Vector.2894" = type { %"class.WTF::VectorBuffer.2895" }
%"class.WTF::VectorBuffer.2895" = type { %"class.WTF::VectorBufferBase.2896" }
%"class.WTF::VectorBufferBase.2896" = type { %"class.mojo::ScopedHandleBase.2897"*, i32, i32 }
%"class.mojo::ScopedHandleBase.2897" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Vector.2854" = type { %"class.WTF::VectorBuffer.2855" }
%"class.WTF::VectorBuffer.2855" = type { %"class.WTF::VectorBufferBase.2856", [16 x i8] }
%"class.WTF::VectorBufferBase.2856" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.2900" = type { %"class.WTF::VectorBuffer.2901" }
%"class.WTF::VectorBuffer.2901" = type { %"class.WTF::VectorBufferBase.2902" }
%"class.WTF::VectorBufferBase.2902" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.WTF::HashMap.2905" = type { %"class.WTF::HashTable.2906" }
%"class.WTF::HashTable.2906" = type <{ %"struct.WTF::KeyValuePair.2909"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2909" = type { i8**, %"class.std::__1::unique_ptr.3216" }
%"class.std::__1::unique_ptr.3216" = type { %"class.std::__1::__compressed_pair.3217" }
%"class.std::__1::__compressed_pair.3217" = type { %"struct.std::__1::__compressed_pair_elem.3218" }
%"struct.std::__1::__compressed_pair_elem.3218" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::NGExclusionSpace" = type { %"class.std::__1::unique_ptr.2910" }
%"class.std::__1::unique_ptr.2910" = type { %"class.std::__1::__compressed_pair.2911" }
%"class.std::__1::__compressed_pair.2911" = type { %"struct.std::__1::__compressed_pair_elem.2912" }
%"struct.std::__1::__compressed_pair_elem.2912" = type { %"class.blink::NGExclusionSpaceInternal"* }
%"class.blink::NGExclusionSpaceInternal" = type { %class.scoped_refptr.2913, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.std::__1::unique_ptr.2930" }
%class.scoped_refptr.2913 = type { %"class.base::RefCountedData.2914"* }
%"class.base::RefCountedData.2914" = type { %"class.base::RefCountedThreadSafe.2915", %"class.WTF::Vector.2916" }
%"class.base::RefCountedThreadSafe.2915" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.2916" = type { %"class.WTF::VectorBuffer.2917" }
%"class.WTF::VectorBuffer.2917" = type { %"class.WTF::VectorBufferBase.2918" }
%"class.WTF::VectorBufferBase.2918" = type { %class.scoped_refptr.2919*, i32, i32 }
%class.scoped_refptr.2919 = type { %"struct.blink::NGExclusion"* }
%"struct.blink::NGExclusion" = type { %"class.WTF::RefCounted.2920", %"struct.blink::NGBfcRect", i32, i8, %"class.std::__1::unique_ptr.2922" }
%"class.WTF::RefCounted.2920" = type { %"class.base::RefCounted.2921" }
%"class.base::RefCounted.2921" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::NGBfcRect" = type { %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset" }
%"class.std::__1::unique_ptr.2922" = type { %"class.std::__1::__compressed_pair.2923" }
%"class.std::__1::__compressed_pair.2923" = type { %"struct.std::__1::__compressed_pair_elem.2924" }
%"struct.std::__1::__compressed_pair_elem.2924" = type { %"struct.blink::NGExclusionShapeData"* }
%"struct.blink::NGExclusionShapeData" = type { %"class.blink::LayoutBox"*, %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut" }
%"struct.blink::NGBoxStrut" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.2930" = type { %"class.std::__1::__compressed_pair.2931" }
%"class.std::__1::__compressed_pair.2931" = type { %"struct.std::__1::__compressed_pair_elem.2932" }
%"struct.std::__1::__compressed_pair_elem.2932" = type { %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* }
%"struct.blink::NGExclusionSpaceInternal::DerivedGeometry" = type <{ %"class.WTF::Vector.2933", %"class.WTF::Vector.2946", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.WTF::Vector.2933" = type { %"class.WTF::VectorBuffer.2934" }
%"class.WTF::VectorBuffer.2934" = type { %"class.WTF::VectorBufferBase.2935", [320 x i8] }
%"class.WTF::VectorBufferBase.2935" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelf" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", [4 x i8], %"class.WTF::Vector.2936", %"class.WTF::Vector.2936", %class.scoped_refptr.2941, i8, [7 x i8] }>
%"class.WTF::Vector.2936" = type { %"class.WTF::VectorBuffer.2937" }
%"class.WTF::VectorBuffer.2937" = type { %"class.WTF::VectorBufferBase.2938", [8 x i8] }
%"class.WTF::VectorBufferBase.2938" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelfEdge" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.2941 = type { %"class.blink::NGShapeExclusions"* }
%"class.blink::NGShapeExclusions" = type { %"class.WTF::RefCounted.2942", %"class.WTF::Vector.2916", %"class.WTF::Vector.2916" }
%"class.WTF::RefCounted.2942" = type { %"class.base::RefCounted.2943" }
%"class.base::RefCounted.2943" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2946" = type { %"class.WTF::VectorBuffer.2947" }
%"class.WTF::VectorBuffer.2947" = type { %"class.WTF::VectorBufferBase.2948", [288 x i8] }
%"class.WTF::VectorBufferBase.2948" = type { %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGClosedArea" = type { %"struct.blink::NGLayoutOpportunity", %"class.WTF::Vector.2936", %"class.WTF::Vector.2936" }
%"struct.blink::NGLayoutOpportunity" = type { %"struct.blink::NGBfcRect", %class.scoped_refptr.2949 }
%class.scoped_refptr.2949 = type { %"class.blink::NGShapeExclusions"* }
%"struct.blink::NGConstraintSpace::Bitfields" = type { i32 }
%class.scoped_refptr.2958 = type { %"class.blink::NGPhysicalFragment"* }
%"class.blink::NGPhysicalFragment" = type { %"class.WTF::RefCounted.2959", %"class.blink::LayoutObject"*, %"struct.blink::PhysicalSize", i24, %class.scoped_refptr.2961, %"class.std::__1::unique_ptr.2964" }
%"class.WTF::RefCounted.2959" = type { %"class.base::RefCounted.2960" }
%"class.base::RefCounted.2960" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.2961 = type { %"class.blink::NGBreakToken"* }
%"class.blink::NGBreakToken" = type <{ i32 (...)**, %"class.WTF::RefCounted.2962", [4 x i8], %"class.blink::LayoutBox"*, i16, [6 x i8] }>
%"class.WTF::RefCounted.2962" = type { %"class.base::RefCounted.2963" }
%"class.base::RefCounted.2963" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.2964" = type { %"class.std::__1::__compressed_pair.2965" }
%"class.std::__1::__compressed_pair.2965" = type { %"struct.std::__1::__compressed_pair_elem.2966" }
%"struct.std::__1::__compressed_pair_elem.2966" = type { %"class.WTF::Vector.2967"* }
%"class.WTF::Vector.2967" = type { %"class.WTF::VectorBuffer.2968" }
%"class.WTF::VectorBuffer.2968" = type { %"class.WTF::VectorBufferBase.2969" }
%"class.WTF::VectorBufferBase.2969" = type { %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, i32, i32 }
%"struct.blink::NGPhysicalOutOfFlowPositionedNode" = type { %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset", i8, %"class.blink::LayoutInline"* }
%"class.blink::LayoutInline" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutObjectChildList", %union.anon.2970 }
%union.anon.2970 = type { %"class.blink::LineBoxList" }
%union.anon.2976 = type { %"struct.blink::NGLayoutResult::RareData"* }
%"struct.blink::NGLayoutResult::RareData" = type { %"class.blink::LayoutUnit", %"class.absl::optional.2814", %class.scoped_refptr.2977, i32, %"struct.blink::LogicalOffset", %"struct.blink::NGMarginStrut", [4 x i8], %"class.blink::NGBlockNode", %union.anon.2978, %"class.blink::NGExclusionSpace", %class.scoped_refptr.2847, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i32, i32, %"class.std::__1::unique_ptr.2979", %"class.absl::optional.2995" }
%"class.absl::optional.2814" = type { %"class.absl::optional_internal::optional_data.2815" }
%"class.absl::optional_internal::optional_data.2815" = type { %"class.absl::optional_internal::optional_data_base.2816" }
%"class.absl::optional_internal::optional_data_base.2816" = type { %"class.absl::optional_internal::optional_data_dtor_base.2817" }
%"class.absl::optional_internal::optional_data_dtor_base.2817" = type { i8, %union.anon.2818 }
%union.anon.2818 = type { %"class.blink::LayoutUnit" }
%class.scoped_refptr.2977 = type { %"class.blink::NGEarlyBreak"* }
%"class.blink::NGEarlyBreak" = type <{ %"class.WTF::RefCounted.3000", [4 x i8], %union.anon.3002, %class.scoped_refptr.2977, i32, [4 x i8] }>
%"class.WTF::RefCounted.3000" = type { %"class.base::RefCounted.3001" }
%"class.base::RefCounted.3001" = type { %"class.base::subtle::RefCountedBase" }
%union.anon.3002 = type { %"class.blink::LayoutBox"* }
%"struct.blink::NGMarginStrut" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i8, [2 x i8] }>
%"class.blink::NGBlockNode" = type { %"class.blink::NGLayoutInputNode.base", [7 x i8] }
%"class.blink::NGLayoutInputNode.base" = type <{ %"class.blink::LayoutBox"*, i8 }>
%union.anon.2978 = type { %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.2979" = type { %"class.std::__1::__compressed_pair.2980" }
%"class.std::__1::__compressed_pair.2980" = type { %"struct.std::__1::__compressed_pair_elem.2981" }
%"struct.std::__1::__compressed_pair_elem.2981" = type { %"struct.blink::NGGridData"* }
%"struct.blink::NGGridData" = type { i32, i32, i32, i32, %"struct.blink::NGGridData::TrackCollectionGeometry", %"struct.blink::NGGridData::TrackCollectionGeometry" }
%"struct.blink::NGGridData::TrackCollectionGeometry" = type { %"class.WTF::Vector.2982", %"class.WTF::Vector.2987", %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.2982" = type { %"class.WTF::VectorBuffer.2983" }
%"class.WTF::VectorBuffer.2983" = type { %"class.WTF::VectorBufferBase.2984" }
%"class.WTF::VectorBufferBase.2984" = type { %"struct.blink::NGGridData::SetData"*, i32, i32 }
%"struct.blink::NGGridData::SetData" = type { %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.2987" = type { %"class.WTF::VectorBuffer.2988" }
%"class.WTF::VectorBuffer.2988" = type { %"class.WTF::VectorBufferBase.2989" }
%"class.WTF::VectorBufferBase.2989" = type { %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"*, i32, i32 }
%"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range" = type <{ i32, i32, i32, i32, %"struct.blink::TrackSpanProperties", [3 x i8] }>
%"struct.blink::TrackSpanProperties" = type { i8 }
%"class.absl::optional.2995" = type { %"class.absl::optional_internal::optional_data.2996" }
%"class.absl::optional_internal::optional_data.2996" = type { %"class.absl::optional_internal::optional_data_base.2997" }
%"class.absl::optional_internal::optional_data_base.2997" = type { %"class.absl::optional_internal::optional_data_dtor_base.2998" }
%"class.absl::optional_internal::optional_data_dtor_base.2998" = type { i8, %union.anon.2999 }
%union.anon.2999 = type { %"struct.blink::NGLayoutResult::MathData" }
%"struct.blink::NGLayoutResult::MathData" = type { %"class.blink::LayoutUnit" }
%"struct.blink::NGLayoutResult::Bitfields" = type { i32 }
%"class.WTF::Vector.1766" = type { %"class.WTF::VectorBuffer.1767" }
%"class.WTF::VectorBuffer.1767" = type { %"class.WTF::VectorBufferBase.1768", [8 x i8] }
%"class.WTF::VectorBufferBase.1768" = type { %class.scoped_refptr.1765*, i32, i32 }
%"class.std::__1::unique_ptr.1771" = type { %"class.std::__1::__compressed_pair.1772" }
%"class.std::__1::__compressed_pair.1772" = type { %"struct.std::__1::__compressed_pair_elem.1773" }
%"struct.std::__1::__compressed_pair_elem.1773" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1774", %"class.absl::optional.1779", %"class.absl::optional.1784" }
%"class.absl::optional.1774" = type { %"class.absl::optional_internal::optional_data.1775" }
%"class.absl::optional_internal::optional_data.1775" = type { %"class.absl::optional_internal::optional_data_base.1776" }
%"class.absl::optional_internal::optional_data_base.1776" = type { %"class.absl::optional_internal::optional_data_dtor_base.1777" }
%"class.absl::optional_internal::optional_data_dtor_base.1777" = type { i8, %union.anon.1778 }
%union.anon.1778 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1779" = type { %"class.absl::optional_internal::optional_data.1780" }
%"class.absl::optional_internal::optional_data.1780" = type { %"class.absl::optional_internal::optional_data_base.1781" }
%"class.absl::optional_internal::optional_data_base.1781" = type { %"class.absl::optional_internal::optional_data_dtor_base.1782" }
%"class.absl::optional_internal::optional_data_dtor_base.1782" = type { i8, [3 x i8], %union.anon.1783 }
%union.anon.1783 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1784" = type { %"class.absl::optional_internal::optional_data.1785" }
%"class.absl::optional_internal::optional_data.1785" = type { %"class.absl::optional_internal::optional_data_base.1786" }
%"class.absl::optional_internal::optional_data_base.1786" = type { %"class.absl::optional_internal::optional_data_dtor_base.1787" }
%"class.absl::optional_internal::optional_data_dtor_base.1787" = type { i8, %union.anon.1788 }
%union.anon.1788 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1792 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1749", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1749" = type { %"class.std::__1::__compressed_pair.1750" }
%"class.std::__1::__compressed_pair.1750" = type { %"struct.std::__1::__compressed_pair_elem.1751" }
%"struct.std::__1::__compressed_pair_elem.1751" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1752", %"class.absl::optional.1757" }
%"class.absl::optional.1752" = type { %"class.absl::optional_internal::optional_data.1753" }
%"class.absl::optional_internal::optional_data.1753" = type { %"class.absl::optional_internal::optional_data_base.1754" }
%"class.absl::optional_internal::optional_data_base.1754" = type { %"class.absl::optional_internal::optional_data_dtor_base.1755" }
%"class.absl::optional_internal::optional_data_dtor_base.1755" = type { i8, %union.anon.1756 }
%union.anon.1756 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1757" = type { %"class.absl::optional_internal::optional_data.1758" }
%"class.absl::optional_internal::optional_data.1758" = type { %"class.absl::optional_internal::optional_data_base.1759" }
%"class.absl::optional_internal::optional_data_base.1759" = type { %"class.absl::optional_internal::optional_data_dtor_base.1760" }
%"class.absl::optional_internal::optional_data_dtor_base.1760" = type { i8, %union.anon.1761 }
%union.anon.1761 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::Persistent.1793" = type { %"class.blink::PersistentBase.1794" }
%"class.blink::PersistentBase.1794" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1797", %"struct.blink::PhysicalRect", %"class.blink::Member.1807" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.std::__1::unique_ptr.1797" = type { %"class.std::__1::__compressed_pair.1798" }
%"class.std::__1::__compressed_pair.1798" = type { %"struct.std::__1::__compressed_pair_elem.1799" }
%"struct.std::__1::__compressed_pair_elem.1799" = type { %"class.WTF::HashSet.1800"* }
%"class.WTF::HashSet.1800" = type { %"class.WTF::HashTable.1801" }
%"class.WTF::HashTable.1801" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1807" = type { %"class.blink::MemberBase.1808" }
%"class.blink::MemberBase.1808" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::Persistent.1809" = type { %"class.blink::PersistentBase.1810" }
%"class.blink::PersistentBase.1810" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.1813", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type opaque
%"class.std::__1::unique_ptr.1813" = type { %"class.std::__1::__compressed_pair.1814" }
%"class.std::__1::__compressed_pair.1814" = type { %"struct.std::__1::__compressed_pair_elem.1815" }
%"struct.std::__1::__compressed_pair_elem.1815" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type { %"class.WTF::Vector.1816", %"class.WTF::HashMap.1821", %"class.WTF::String" }
%"class.WTF::Vector.1816" = type { %"class.WTF::VectorBuffer.1817" }
%"class.WTF::VectorBuffer.1817" = type { %"class.WTF::VectorBufferBase.1818" }
%"class.WTF::VectorBufferBase.1818" = type { %"class.blink::NGOffsetMappingUnit"*, i32, i32 }
%"class.blink::NGOffsetMappingUnit" = type { i32, %"class.blink::LayoutObject"*, i32, i32, i32, i32 }
%"class.WTF::HashMap.1821" = type { %"class.WTF::HashTable.1822" }
%"class.WTF::HashTable.1822" = type <{ %"struct.WTF::KeyValuePair.1825"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1825" = type opaque
%"class.std::__1::unique_ptr.1829" = type { %"class.std::__1::__compressed_pair.1830" }
%"class.std::__1::__compressed_pair.1830" = type { %"struct.std::__1::__compressed_pair_elem.1831" }
%"struct.std::__1::__compressed_pair_elem.1831" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.1832", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.1832" = type { %"class.WTF::HashTable.1835", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.1835" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.1838", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.1838" = type { %"class.std::__1::__compressed_pair.1839" }
%"class.std::__1::__compressed_pair.1839" = type { %"struct.std::__1::__compressed_pair_elem.1840" }
%"struct.std::__1::__compressed_pair_elem.1840" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.1841, %"class.std::__1::unique_ptr.1842", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1749", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.1841 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.2808", i16, %class.scoped_refptr.1841 }
%"class.WTF::ThreadSafeRefCounted.2808" = type { %"class.base::RefCountedThreadSafe.2809" }
%"class.base::RefCountedThreadSafe.2809" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1842" = type { %"class.std::__1::__compressed_pair.1843" }
%"class.std::__1::__compressed_pair.1843" = type { %"struct.std::__1::__compressed_pair_elem.1844" }
%"struct.std::__1::__compressed_pair_elem.1844" = type { %"class.WTF::Vector.1845"* }
%"class.WTF::Vector.1845" = type { %"class.WTF::VectorBuffer.1846" }
%"class.WTF::VectorBuffer.1846" = type { %"class.WTF::VectorBufferBase.1847" }
%"class.WTF::VectorBufferBase.1847" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.1856, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"class.blink::UntracedMember.1860" = type { %"class.blink::MemberBase.1861" }
%"class.blink::MemberBase.1861" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1864", %"class.blink::Member.1869", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1871", i8, i32, %"class.blink::Color", %"class.absl::optional.1874", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1879", %"class.blink::Member.1881", %"class.blink::Member.1881", %"class.std::__1::unique_ptr.1884", i32, [4 x i8], %"class.WTF::HashSet.1887", %"class.blink::Member.1894", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1896", %"class.blink::HeapHashSet.1903", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1911", i8, %"class.blink::Member.1917", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1929", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1943", i8, %"class.std::__1::unique_ptr.1949", %"class.std::__1::unique_ptr.2030", %"class.WTF::Vector.2036", i32, %class.scoped_refptr.2041, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2042", %"class.blink::Member.2044", %"class.blink::Member.2046", %"class.blink::HeapHashSet.2048", %"class.blink::HeapHashSet.2055", %"class.std::__1::unique_ptr.2062", %"class.std::__1::unique_ptr.2069", %"class.WTF::Vector.906" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.WTF::HashSet.1864" = type { %"class.WTF::HashTable.1865" }
%"class.WTF::HashTable.1865" = type <{ %class.scoped_refptr.1868*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1868 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::Member.1869" = type { %"class.blink::MemberBase.1870" }
%"class.blink::MemberBase.1870" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.2298", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.2306", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.2320", %"class.blink::FrameLoader", %"class.blink::Member.2341", %"class.blink::Member.343", %"class.blink::Member.2342", %"class.blink::Member.2344", %"class.blink::Member.2360", %"class.blink::Member.2362", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.2364", %class.scoped_refptr.2588, %"class.blink::Member.2589", %"class.blink::Member.2591", %"class.blink::Member.2593", %"class.blink::Member.2595", %"class.blink::Member.2597", %"class.blink::Member.2601", %"class.blink::Member.2603", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.2629", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.2650", %"class.std::__1::unique_ptr.2651", %"class.absl::optional.2286", i32, [4 x i8], %"class.std::__1::unique_ptr.2657", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.2665", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.2670", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.2675", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.2678", %"class.blink::Member.2680", %"class.blink::Member.2682", %"class.blink::Member.2684", %"class.mojo::StructPtr.2687", %"class.blink::Member.2696", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.2698", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.2131", %"class.blink::Member.2133", %"class.blink::Member.2135", i8, i32, i8, i32, %"class.blink::Member.2268", %"class.blink::Member.2158", %"class.blink::FrameLifecycle", %"class.blink::Member.2129", %"class.blink::Member.2129", %"class.blink::Member.2129", %"class.blink::Member.2129", %"class.blink::Member.2129", %"class.blink::Member.2129", %"class.blink::Member.1869", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.2279", i8, %"class.base::UnguessableToken", %"class.absl::optional.2281", %"class.absl::optional.2286", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.2129", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.2131" = type { %"class.blink::MemberBase.2132" }
%"class.blink::MemberBase.2132" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.2133" = type { %"class.blink::MemberBase.2134" }
%"class.blink::MemberBase.2134" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.2135" = type { %"class.blink::MemberBase.2136" }
%"class.blink::MemberBase.2136" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.2129", %"class.blink::Member.2158", %"class.blink::Member.2160", %"class.blink::Member.2162", i8, %"class.WTF::Vector.2164" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.2151" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.2139" }
%"class.blink::HeapVector.2139" = type { %"class.WTF::Vector.2142" }
%"class.WTF::Vector.2142" = type { %"class.WTF::VectorBuffer.2143" }
%"class.WTF::VectorBuffer.2143" = type { %"class.WTF::VectorBufferBase.2144", [32 x i8] }
%"class.WTF::VectorBufferBase.2144" = type { %"struct.std::__1::pair.2145"*, i32, i32 }
%"struct.std::__1::pair.2145" = type { %"class.WTF::AtomicString", %"class.blink::Member.2146" }
%"class.blink::Member.2146" = type { %"class.blink::MemberBase.2147" }
%"class.blink::MemberBase.2147" = type { %"class.blink::HeapVector.2148"* }
%"class.blink::HeapVector.2148" = type opaque
%"class.std::__1::unique_ptr.2151" = type { %"class.std::__1::__compressed_pair.2152" }
%"class.std::__1::__compressed_pair.2152" = type { %"struct.std::__1::__compressed_pair_elem.2153" }
%"struct.std::__1::__compressed_pair_elem.2153" = type { %"class.WTF::Vector.2154"* }
%"class.WTF::Vector.2154" = type opaque
%"class.blink::Member.2160" = type { %"class.blink::MemberBase.2161" }
%"class.blink::MemberBase.2161" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.2162" = type { %"class.blink::MemberBase.2163" }
%"class.blink::MemberBase.2163" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.2164" = type { %"class.WTF::VectorBuffer.2165" }
%"class.WTF::VectorBuffer.2165" = type { %"class.WTF::VectorBufferBase.2166" }
%"class.WTF::VectorBufferBase.2166" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2260" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.2167, %"class.std::__1::unique_ptr.1657", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.1671, i32 }>
%class.scoped_refptr.2167 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.1671, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.2226", %"class.absl::optional.2231", %"class.absl::optional.2184", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.2251", i8, [7 x i8], %class.scoped_refptr.1671, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1684" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.1671, %"class.std::__1::unique_ptr.2168", %"class.absl::optional.2178", %"struct.std::__1::atomic.238", i8, i8, i8, i8, i32, i32, %"class.absl::optional.2184", %"class.std::__1::unique_ptr.2189", i8, i64, %class.scoped_refptr.2223, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.2224", %"class.base::WeakPtrFactory.2225" }
%"class.std::__1::unique_ptr.2168" = type { %"class.std::__1::__compressed_pair.2169" }
%"class.std::__1::__compressed_pair.2169" = type { %"struct.std::__1::__compressed_pair_elem.2170" }
%"struct.std::__1::__compressed_pair_elem.2170" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.1671, i8, %"class.mojo::ScopedHandleBase.2171", %class.scoped_refptr.2172, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2173", i8*, %"class.base::WeakPtrFactory.2174" }
%"class.mojo::ScopedHandleBase.2171" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.2172 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback.2173" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.2174" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2178" = type { %"class.absl::optional_internal::optional_data.2179" }
%"class.absl::optional_internal::optional_data.2179" = type { %"class.absl::optional_internal::optional_data_base.2180" }
%"class.absl::optional_internal::optional_data_base.2180" = type { %"class.absl::optional_internal::optional_data_dtor_base.2181" }
%"class.absl::optional_internal::optional_data_dtor_base.2181" = type { i8, %union.anon.2182 }
%union.anon.2182 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.2183", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.2183" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.2189" = type { %"class.std::__1::__compressed_pair.2190" }
%"class.std::__1::__compressed_pair.2190" = type { %"struct.std::__1::__compressed_pair_elem.2191" }
%"struct.std::__1::__compressed_pair_elem.2191" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2192", i8, i64, %class.scoped_refptr.2193, %class.scoped_refptr.2218 }
%"class.base::RepeatingCallback.2192" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.2193 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.2194", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.2196", %"class.std::__1::map.2207", i8, [7 x i8] }>
%"class.base::RefCounted.2194" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.2195 }
%class.scoped_refptr.2195 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.2196" = type { %"class.std::__1::__tree.2197" }
%"class.std::__1::__tree.2197" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2198", %"class.std::__1::__compressed_pair.2202" }
%"class.std::__1::__compressed_pair.2198" = type { %"struct.std::__1::__compressed_pair_elem.1561" }
%"class.std::__1::__compressed_pair.2202" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.2207" = type { %"class.std::__1::__tree.2208" }
%"class.std::__1::__tree.2208" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2209", %"class.std::__1::__compressed_pair.2213" }
%"class.std::__1::__compressed_pair.2209" = type { %"struct.std::__1::__compressed_pair_elem.1561" }
%"class.std::__1::__compressed_pair.2213" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%class.scoped_refptr.2218 = type { %"class.base::RefCountedData.2219"* }
%"class.base::RefCountedData.2219" = type opaque
%class.scoped_refptr.2223 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.2224" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.2225" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2226" = type { %"class.absl::optional_internal::optional_data.2227" }
%"class.absl::optional_internal::optional_data.2227" = type { %"class.absl::optional_internal::optional_data_base.2228" }
%"class.absl::optional_internal::optional_data_base.2228" = type { %"class.absl::optional_internal::optional_data_dtor_base.2229" }
%"class.absl::optional_internal::optional_data_dtor_base.2229" = type { i8, %union.anon.2230 }
%union.anon.2230 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.2231" = type { %"class.absl::optional_internal::optional_data.2232" }
%"class.absl::optional_internal::optional_data.2232" = type { %"class.absl::optional_internal::optional_data_base.2233" }
%"class.absl::optional_internal::optional_data_base.2233" = type { %"class.absl::optional_internal::optional_data_dtor_base.2234" }
%"class.absl::optional_internal::optional_data_dtor_base.2234" = type { i8, [7 x i8], %union.anon.2235 }
%union.anon.2235 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.2184" = type { %"class.absl::optional_internal::optional_data.2185" }
%"class.absl::optional_internal::optional_data.2185" = type { %"class.absl::optional_internal::optional_data_base.2186" }
%"class.absl::optional_internal::optional_data_base.2186" = type { %"class.absl::optional_internal::optional_data_dtor_base.2187" }
%"class.absl::optional_internal::optional_data_dtor_base.2187" = type { i8, %union.anon.2188 }
%union.anon.2188 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.2236 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.2236 = type { %"class.std::__1::map.2239" }
%"class.std::__1::map.2239" = type { %"class.std::__1::__tree.2240" }
%"class.std::__1::__tree.2240" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2241", %"class.std::__1::__compressed_pair.2245" }
%"class.std::__1::__compressed_pair.2241" = type { %"struct.std::__1::__compressed_pair_elem.1561" }
%"class.std::__1::__compressed_pair.2245" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.2250"*, i64 }
%"class.std::__1::unique_ptr.2250" = type opaque
%"class.std::__1::map.2251" = type { %"class.std::__1::__tree.2252" }
%"class.std::__1::__tree.2252" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2253", %"class.std::__1::__compressed_pair.2257" }
%"class.std::__1::__compressed_pair.2253" = type { %"struct.std::__1::__compressed_pair_elem.1561" }
%"class.std::__1::__compressed_pair.2257" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::unique_ptr.2260" = type { %"class.std::__1::__compressed_pair.2261" }
%"class.std::__1::__compressed_pair.2261" = type { %"struct.std::__1::__compressed_pair_elem.2262" }
%"struct.std::__1::__compressed_pair_elem.2262" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.2268" = type { %"class.blink::MemberBase.2269" }
%"class.blink::MemberBase.2269" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.2158" = type { %"class.blink::MemberBase.2159" }
%"class.blink::MemberBase.2159" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.2129" = type { %"class.blink::MemberBase.2130" }
%"class.blink::MemberBase.2130" = type { %"class.blink::Frame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.2129", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.2270" }
%"class.base::internal::flat_tree.2270" = type { %"class.std::__1::vector.2271" }
%"class.std::__1::vector.2271" = type { %"class.std::__1::__vector_base.2272" }
%"class.std::__1::__vector_base.2272" = type { %"struct.std::__1::pair.2273"*, %"struct.std::__1::pair.2273"*, %"class.std::__1::__compressed_pair.2274" }
%"struct.std::__1::pair.2273" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.2274" = type { %"struct.std::__1::__compressed_pair_elem.2275" }
%"struct.std::__1::__compressed_pair_elem.2275" = type { %"struct.std::__1::pair.2273"* }
%"class.blink::Member.2279" = type { %"class.blink::MemberBase.2280" }
%"class.blink::MemberBase.2280" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.2281" = type { %"class.absl::optional_internal::optional_data.2282" }
%"class.absl::optional_internal::optional_data.2282" = type { %"class.absl::optional_internal::optional_data_base.2283" }
%"class.absl::optional_internal::optional_data_base.2283" = type { %"class.absl::optional_internal::optional_data_dtor_base.2284" }
%"class.absl::optional_internal::optional_data_dtor_base.2284" = type { i8, %union.anon.2285 }
%union.anon.2285 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.2291" }
%"class.blink::HeapHashSet.2291" = type { %"class.WTF::HashSet.2294" }
%"class.WTF::HashSet.2294" = type { %"class.WTF::HashTable.2295" }
%"class.WTF::HashTable.2295" = type <{ %"class.blink::WeakMember.2297"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2297" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.2298" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2299" }
%"class.blink::HeapHashMap.2299" = type { %"class.WTF::HashMap.2302" }
%"class.WTF::HashMap.2302" = type { %"class.WTF::HashTable.2303" }
%"class.WTF::HashTable.2303" = type <{ %"struct.WTF::KeyValuePair.2305"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2305" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2306" = type { %"class.std::__1::__compressed_pair.2307" }
%"class.std::__1::__compressed_pair.2307" = type { %"struct.std::__1::__compressed_pair_elem.2308" }
%"struct.std::__1::__compressed_pair_elem.2308" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.2309", %"class.base::WeakPtrFactory.2314" }
%"class.WTF::HashMap.2309" = type { %"class.WTF::HashTable.2310" }
%"class.WTF::HashTable.2310" = type <{ %"struct.WTF::KeyValuePair.2313"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2313" = type opaque
%"class.base::WeakPtrFactory.2314" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.2318" }
%"class.blink::Member.2318" = type { %"class.blink::MemberBase.2319" }
%"class.blink::MemberBase.2319" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.3224" }
%"class.blink::WeakMember.3224" = type { %"class.blink::MemberBase.3225" }
%"class.blink::MemberBase.3225" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.3226", i64, %"class.std::__1::map.3227", i8*, i64, %"class.base::WeakPtrFactory.3236" }
%"class.base::RepeatingCallback.3226" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.3227" = type { %"class.std::__1::__tree.3228" }
%"class.std::__1::__tree.3228" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.3229", %"class.std::__1::__compressed_pair.3233" }
%"class.std::__1::__compressed_pair.3229" = type { %"struct.std::__1::__compressed_pair_elem.1561" }
%"class.std::__1::__compressed_pair.3233" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::WeakPtrFactory.3236" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.2320" = type { %"class.WTF::HashSet.2323" }
%"class.WTF::HashSet.2323" = type { %"class.WTF::HashTable.2324" }
%"class.WTF::HashTable.2324" = type <{ %"class.blink::WeakMember.2326"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2326" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.1869", %"class.blink::Member.2327", %"class.blink::Member.2329", %"class.std::__1::unique_ptr.2331", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.2337" }
%"class.blink::Member.2327" = type { %"class.blink::MemberBase.2328" }
%"class.blink::MemberBase.2328" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.2329" = type { %"class.blink::MemberBase.2330" }
%"class.blink::MemberBase.2330" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.2331" = type { %"class.std::__1::__compressed_pair.2332" }
%"class.std::__1::__compressed_pair.2332" = type { %"struct.std::__1::__compressed_pair_elem.2333" }
%"struct.std::__1::__compressed_pair_elem.2333" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::HashSet.2337" = type { %"class.WTF::HashTable.2338" }
%"class.WTF::HashTable.2338" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2341" = type { %"class.blink::MemberBase.1873" }
%"class.blink::MemberBase.1873" = type { %"class.blink::LocalFrameView"* }
%"class.blink::Member.2342" = type { %"class.blink::MemberBase.2343" }
%"class.blink::MemberBase.2343" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.2344" = type { %"class.blink::MemberBase.2345" }
%"class.blink::MemberBase.2345" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type { %"class.blink::SynchronousMutationObserver", %"class.blink::Member.1869", %"class.blink::Member.2348", %"class.blink::Member.2350", i32, %"class.blink::LayoutUnit", i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.2352", %"class.blink::Member.2358" }
%"class.blink::SynchronousMutationObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.966" }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::Member.2348" = type { %"class.blink::MemberBase.2349" }
%"class.blink::MemberBase.2349" = type { %"class.blink::LayoutSelection"* }
%"class.blink::LayoutSelection" = type opaque
%"class.blink::Member.2350" = type { %"class.blink::MemberBase.2351" }
%"class.blink::MemberBase.2351" = type { %"class.blink::SelectionEditor"* }
%"class.blink::SelectionEditor" = type opaque
%"class.std::__1::unique_ptr.2352" = type { %"class.std::__1::__compressed_pair.2353" }
%"class.std::__1::__compressed_pair.2353" = type { %"struct.std::__1::__compressed_pair_elem.2354" }
%"struct.std::__1::__compressed_pair_elem.2354" = type { %"class.blink::GranularityStrategy"* }
%"class.blink::GranularityStrategy" = type opaque
%"class.blink::Member.2358" = type { %"class.blink::MemberBase.2359" }
%"class.blink::MemberBase.2359" = type { %"class.blink::FrameCaret"* }
%"class.blink::FrameCaret" = type opaque
%"class.blink::Member.2360" = type { %"class.blink::MemberBase.2361" }
%"class.blink::MemberBase.2361" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.2362" = type { %"class.blink::MemberBase.2363" }
%"class.blink::MemberBase.2363" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.2364" = type { %"class.blink::MemberBase.2365" }
%"class.blink::MemberBase.2365" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet.2368", %"class.blink::HeapListHashSet.2379", %"class.blink::HeapListHashSet.2390", %"class.blink::HeapListHashSet.2401", %"class.blink::HeapListHashSet.2412", %"class.blink::HeapListHashSet.2423", %"class.blink::HeapListHashSet.2434", %"class.blink::HeapListHashSet.2445", %"class.blink::HeapListHashSet.2456", %"class.blink::HeapListHashSet.2467", %"class.blink::HeapListHashSet.2478", %"class.blink::HeapListHashSet.2489", %"class.blink::HeapListHashSet.2500", %"class.blink::HeapListHashSet.2511", %"class.blink::HeapListHashSet.2522", %"class.blink::HeapListHashSet.2533", %"class.blink::HeapListHashSet.2544", %"class.blink::HeapListHashSet.2555", %"class.blink::HeapListHashSet.2566", %"class.blink::HeapListHashSet.2577" }
%"class.blink::HeapListHashSet.2368" = type { %"class.WTF::ListHashSet.base.2378", [7 x i8] }
%"class.WTF::ListHashSet.base.2378" = type <{ %"class.WTF::HashTable.2373", %"class.blink::Member.2375", %"class.blink::Member.2375", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2373" = type <{ %"class.blink::Member.2375"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2375" = type { %"class.blink::MemberBase.2376" }
%"class.blink::MemberBase.2376" = type { %"class.blink::HeapListHashSetNode.2377"* }
%"class.blink::HeapListHashSetNode.2377" = type { %"class.blink::Member.2591", %"class.blink::Member.2375", %"class.blink::Member.2375" }
%"class.blink::HeapListHashSet.2379" = type { %"class.WTF::ListHashSet.base.2389", [7 x i8] }
%"class.WTF::ListHashSet.base.2389" = type <{ %"class.WTF::HashTable.2384", %"class.blink::Member.2386", %"class.blink::Member.2386", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2384" = type <{ %"class.blink::Member.2386"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2386" = type { %"class.blink::MemberBase.2387" }
%"class.blink::MemberBase.2387" = type { %"class.blink::HeapListHashSetNode.2388"* }
%"class.blink::HeapListHashSetNode.2388" = type { %"class.blink::Member.2804", %"class.blink::Member.2386", %"class.blink::Member.2386" }
%"class.blink::Member.2804" = type { %"class.blink::MemberBase.2805" }
%"class.blink::MemberBase.2805" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.2390" = type { %"class.WTF::ListHashSet.base.2400", [7 x i8] }
%"class.WTF::ListHashSet.base.2400" = type <{ %"class.WTF::HashTable.2395", %"class.blink::Member.2397", %"class.blink::Member.2397", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2395" = type <{ %"class.blink::Member.2397"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2397" = type { %"class.blink::MemberBase.2398" }
%"class.blink::MemberBase.2398" = type { %"class.blink::HeapListHashSetNode.2399"* }
%"class.blink::HeapListHashSetNode.2399" = type { %"class.blink::Member.2800", %"class.blink::Member.2397", %"class.blink::Member.2397" }
%"class.blink::Member.2800" = type { %"class.blink::MemberBase.2801" }
%"class.blink::MemberBase.2801" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.2401" = type { %"class.WTF::ListHashSet.base.2411", [7 x i8] }
%"class.WTF::ListHashSet.base.2411" = type <{ %"class.WTF::HashTable.2406", %"class.blink::Member.2408", %"class.blink::Member.2408", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2406" = type <{ %"class.blink::Member.2408"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2408" = type { %"class.blink::MemberBase.2409" }
%"class.blink::MemberBase.2409" = type { %"class.blink::HeapListHashSetNode.2410"* }
%"class.blink::HeapListHashSetNode.2410" = type { %"class.blink::Member.2796", %"class.blink::Member.2408", %"class.blink::Member.2408" }
%"class.blink::Member.2796" = type { %"class.blink::MemberBase.2797" }
%"class.blink::MemberBase.2797" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.2412" = type { %"class.WTF::ListHashSet.base.2422", [7 x i8] }
%"class.WTF::ListHashSet.base.2422" = type <{ %"class.WTF::HashTable.2417", %"class.blink::Member.2419", %"class.blink::Member.2419", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2417" = type <{ %"class.blink::Member.2419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2419" = type { %"class.blink::MemberBase.2420" }
%"class.blink::MemberBase.2420" = type { %"class.blink::HeapListHashSetNode.2421"* }
%"class.blink::HeapListHashSetNode.2421" = type { %"class.blink::Member.2792", %"class.blink::Member.2419", %"class.blink::Member.2419" }
%"class.blink::Member.2792" = type { %"class.blink::MemberBase.2793" }
%"class.blink::MemberBase.2793" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.2423" = type { %"class.WTF::ListHashSet.base.2433", [7 x i8] }
%"class.WTF::ListHashSet.base.2433" = type <{ %"class.WTF::HashTable.2428", %"class.blink::Member.2430", %"class.blink::Member.2430", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2428" = type <{ %"class.blink::Member.2430"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2430" = type { %"class.blink::MemberBase.2431" }
%"class.blink::MemberBase.2431" = type { %"class.blink::HeapListHashSetNode.2432"* }
%"class.blink::HeapListHashSetNode.2432" = type { %"class.blink::Member.2788", %"class.blink::Member.2430", %"class.blink::Member.2430" }
%"class.blink::Member.2788" = type { %"class.blink::MemberBase.2789" }
%"class.blink::MemberBase.2789" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.2434" = type { %"class.WTF::ListHashSet.base.2444", [7 x i8] }
%"class.WTF::ListHashSet.base.2444" = type <{ %"class.WTF::HashTable.2439", %"class.blink::Member.2441", %"class.blink::Member.2441", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2439" = type <{ %"class.blink::Member.2441"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2441" = type { %"class.blink::MemberBase.2442" }
%"class.blink::MemberBase.2442" = type { %"class.blink::HeapListHashSetNode.2443"* }
%"class.blink::HeapListHashSetNode.2443" = type { %"class.blink::Member.2784", %"class.blink::Member.2441", %"class.blink::Member.2441" }
%"class.blink::Member.2784" = type { %"class.blink::MemberBase.2785" }
%"class.blink::MemberBase.2785" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.2445" = type { %"class.WTF::ListHashSet.base.2455", [7 x i8] }
%"class.WTF::ListHashSet.base.2455" = type <{ %"class.WTF::HashTable.2450", %"class.blink::Member.2452", %"class.blink::Member.2452", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2450" = type <{ %"class.blink::Member.2452"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2452" = type { %"class.blink::MemberBase.2453" }
%"class.blink::MemberBase.2453" = type { %"class.blink::HeapListHashSetNode.2454"* }
%"class.blink::HeapListHashSetNode.2454" = type { %"class.blink::Member.2780", %"class.blink::Member.2452", %"class.blink::Member.2452" }
%"class.blink::Member.2780" = type { %"class.blink::MemberBase.2781" }
%"class.blink::MemberBase.2781" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.2456" = type { %"class.WTF::ListHashSet.base.2466", [7 x i8] }
%"class.WTF::ListHashSet.base.2466" = type <{ %"class.WTF::HashTable.2461", %"class.blink::Member.2463", %"class.blink::Member.2463", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2461" = type <{ %"class.blink::Member.2463"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2463" = type { %"class.blink::MemberBase.2464" }
%"class.blink::MemberBase.2464" = type { %"class.blink::HeapListHashSetNode.2465"* }
%"class.blink::HeapListHashSetNode.2465" = type { %"class.blink::Member.2776", %"class.blink::Member.2463", %"class.blink::Member.2463" }
%"class.blink::Member.2776" = type { %"class.blink::MemberBase.2777" }
%"class.blink::MemberBase.2777" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.2467" = type { %"class.WTF::ListHashSet.base.2477", [7 x i8] }
%"class.WTF::ListHashSet.base.2477" = type <{ %"class.WTF::HashTable.2472", %"class.blink::Member.2474", %"class.blink::Member.2474", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2472" = type <{ %"class.blink::Member.2474"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2474" = type { %"class.blink::MemberBase.2475" }
%"class.blink::MemberBase.2475" = type { %"class.blink::HeapListHashSetNode.2476"* }
%"class.blink::HeapListHashSetNode.2476" = type { %"class.blink::Member.2772", %"class.blink::Member.2474", %"class.blink::Member.2474" }
%"class.blink::Member.2772" = type { %"class.blink::MemberBase.2773" }
%"class.blink::MemberBase.2773" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.2478" = type { %"class.WTF::ListHashSet.base.2488", [7 x i8] }
%"class.WTF::ListHashSet.base.2488" = type <{ %"class.WTF::HashTable.2483", %"class.blink::Member.2485", %"class.blink::Member.2485", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2483" = type <{ %"class.blink::Member.2485"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2485" = type { %"class.blink::MemberBase.2486" }
%"class.blink::MemberBase.2486" = type { %"class.blink::HeapListHashSetNode.2487"* }
%"class.blink::HeapListHashSetNode.2487" = type { %"class.blink::Member.2595", %"class.blink::Member.2485", %"class.blink::Member.2485" }
%"class.blink::HeapListHashSet.2489" = type { %"class.WTF::ListHashSet.base.2499", [7 x i8] }
%"class.WTF::ListHashSet.base.2499" = type <{ %"class.WTF::HashTable.2494", %"class.blink::Member.2496", %"class.blink::Member.2496", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2494" = type <{ %"class.blink::Member.2496"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2496" = type { %"class.blink::MemberBase.2497" }
%"class.blink::MemberBase.2497" = type { %"class.blink::HeapListHashSetNode.2498"* }
%"class.blink::HeapListHashSetNode.2498" = type { %"class.blink::Member.2766", %"class.blink::Member.2496", %"class.blink::Member.2496" }
%"class.blink::Member.2766" = type { %"class.blink::MemberBase.2767" }
%"class.blink::MemberBase.2767" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.2500" = type { %"class.WTF::ListHashSet.base.2510", [7 x i8] }
%"class.WTF::ListHashSet.base.2510" = type <{ %"class.WTF::HashTable.2505", %"class.blink::Member.2507", %"class.blink::Member.2507", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2505" = type <{ %"class.blink::Member.2507"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2507" = type { %"class.blink::MemberBase.2508" }
%"class.blink::MemberBase.2508" = type { %"class.blink::HeapListHashSetNode.2509"* }
%"class.blink::HeapListHashSetNode.2509" = type { %"class.blink::Member.2762", %"class.blink::Member.2507", %"class.blink::Member.2507" }
%"class.blink::Member.2762" = type { %"class.blink::MemberBase.2763" }
%"class.blink::MemberBase.2763" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.2511" = type { %"class.WTF::ListHashSet.base.2521", [7 x i8] }
%"class.WTF::ListHashSet.base.2521" = type <{ %"class.WTF::HashTable.2516", %"class.blink::Member.2518", %"class.blink::Member.2518", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2516" = type <{ %"class.blink::Member.2518"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2518" = type { %"class.blink::MemberBase.2519" }
%"class.blink::MemberBase.2519" = type { %"class.blink::HeapListHashSetNode.2520"* }
%"class.blink::HeapListHashSetNode.2520" = type { %"class.blink::Member.2758", %"class.blink::Member.2518", %"class.blink::Member.2518" }
%"class.blink::Member.2758" = type { %"class.blink::MemberBase.2759" }
%"class.blink::MemberBase.2759" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.2522" = type { %"class.WTF::ListHashSet.base.2532", [7 x i8] }
%"class.WTF::ListHashSet.base.2532" = type <{ %"class.WTF::HashTable.2527", %"class.blink::Member.2529", %"class.blink::Member.2529", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2527" = type <{ %"class.blink::Member.2529"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2529" = type { %"class.blink::MemberBase.2530" }
%"class.blink::MemberBase.2530" = type { %"class.blink::HeapListHashSetNode.2531"* }
%"class.blink::HeapListHashSetNode.2531" = type { %"class.blink::Member.2754", %"class.blink::Member.2529", %"class.blink::Member.2529" }
%"class.blink::Member.2754" = type { %"class.blink::MemberBase.2755" }
%"class.blink::MemberBase.2755" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.2533" = type { %"class.WTF::ListHashSet.base.2543", [7 x i8] }
%"class.WTF::ListHashSet.base.2543" = type <{ %"class.WTF::HashTable.2538", %"class.blink::Member.2540", %"class.blink::Member.2540", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2538" = type <{ %"class.blink::Member.2540"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2540" = type { %"class.blink::MemberBase.2541" }
%"class.blink::MemberBase.2541" = type { %"class.blink::HeapListHashSetNode.2542"* }
%"class.blink::HeapListHashSetNode.2542" = type { %"class.blink::Member.2750", %"class.blink::Member.2540", %"class.blink::Member.2540" }
%"class.blink::Member.2750" = type { %"class.blink::MemberBase.2751" }
%"class.blink::MemberBase.2751" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.2544" = type { %"class.WTF::ListHashSet.base.2554", [7 x i8] }
%"class.WTF::ListHashSet.base.2554" = type <{ %"class.WTF::HashTable.2549", %"class.blink::Member.2551", %"class.blink::Member.2551", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2549" = type <{ %"class.blink::Member.2551"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2551" = type { %"class.blink::MemberBase.2552" }
%"class.blink::MemberBase.2552" = type { %"class.blink::HeapListHashSetNode.2553"* }
%"class.blink::HeapListHashSetNode.2553" = type { %"class.blink::Member.2746", %"class.blink::Member.2551", %"class.blink::Member.2551" }
%"class.blink::Member.2746" = type { %"class.blink::MemberBase.2747" }
%"class.blink::MemberBase.2747" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.2555" = type { %"class.WTF::ListHashSet.base.2565", [7 x i8] }
%"class.WTF::ListHashSet.base.2565" = type <{ %"class.WTF::HashTable.2560", %"class.blink::Member.2562", %"class.blink::Member.2562", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2560" = type <{ %"class.blink::Member.2562"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2562" = type { %"class.blink::MemberBase.2563" }
%"class.blink::MemberBase.2563" = type { %"class.blink::HeapListHashSetNode.2564"* }
%"class.blink::HeapListHashSetNode.2564" = type { %"class.blink::Member.2742", %"class.blink::Member.2562", %"class.blink::Member.2562" }
%"class.blink::Member.2742" = type { %"class.blink::MemberBase.2743" }
%"class.blink::MemberBase.2743" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.2566" = type { %"class.WTF::ListHashSet.base.2576", [7 x i8] }
%"class.WTF::ListHashSet.base.2576" = type <{ %"class.WTF::HashTable.2571", %"class.blink::Member.2573", %"class.blink::Member.2573", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2571" = type <{ %"class.blink::Member.2573"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2573" = type { %"class.blink::MemberBase.2574" }
%"class.blink::MemberBase.2574" = type { %"class.blink::HeapListHashSetNode.2575"* }
%"class.blink::HeapListHashSetNode.2575" = type { %"class.blink::Member.2597", %"class.blink::Member.2573", %"class.blink::Member.2573" }
%"class.blink::HeapListHashSet.2577" = type { %"class.WTF::ListHashSet.base.2587", [7 x i8] }
%"class.WTF::ListHashSet.base.2587" = type <{ %"class.WTF::HashTable.2582", %"class.blink::Member.2584", %"class.blink::Member.2584", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2582" = type <{ %"class.blink::Member.2584"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2584" = type { %"class.blink::MemberBase.2585" }
%"class.blink::MemberBase.2585" = type { %"class.blink::HeapListHashSetNode.2586"* }
%"class.blink::HeapListHashSetNode.2586" = type { %"class.blink::Member.2589", %"class.blink::Member.2584", %"class.blink::Member.2584" }
%class.scoped_refptr.2588 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.2589" = type { %"class.blink::MemberBase.2590" }
%"class.blink::MemberBase.2590" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.2591" = type { %"class.blink::MemberBase.2592" }
%"class.blink::MemberBase.2592" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.2593" = type { %"class.blink::MemberBase.2594" }
%"class.blink::MemberBase.2594" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.2595" = type { %"class.blink::MemberBase.2596" }
%"class.blink::MemberBase.2596" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.2597" = type { %"class.blink::MemberBase.2598" }
%"class.blink::MemberBase.2598" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.2601" = type { %"class.blink::MemberBase.2602" }
%"class.blink::MemberBase.2602" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.2603" = type { %"class.blink::MemberBase.2604" }
%"class.blink::MemberBase.2604" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type { i32 (...)**, %"class.blink::Member.2607", %"class.blink::Member.1869", i8, %"class.blink::Member.2609", %"class.blink::Member.2621" }
%"class.blink::Member.2607" = type { %"class.blink::MemberBase.2608" }
%"class.blink::MemberBase.2608" = type { %"class.blink::ContentCaptureTask"* }
%"class.blink::ContentCaptureTask" = type { i32 (...)**, i8, %"class.blink::Member.1869", %"class.blink::Member.2609", %"class.blink::HeapTaskRunnerTimer.2705", i32, %"class.std::__1::unique_ptr.2707", %class.scoped_refptr.2713, %"class.absl::optional.2721", %"class.absl::optional.2726" }
%"class.blink::HeapTaskRunnerTimer.2705" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2706", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.2706" = type { %"class.blink::MemberBase.2608" }
%"class.std::__1::unique_ptr.2707" = type { %"class.std::__1::__compressed_pair.2708" }
%"class.std::__1::__compressed_pair.2708" = type { %"struct.std::__1::__compressed_pair_elem.2709" }
%"struct.std::__1::__compressed_pair_elem.2709" = type { %"class.blink::ContentCaptureTask::TaskDelay"* }
%"class.blink::ContentCaptureTask::TaskDelay" = type <{ %"class.base::TimeDelta", i32, [4 x i8] }>
%class.scoped_refptr.2713 = type { %"class.blink::ContentCaptureTaskHistogramReporter"* }
%"class.blink::ContentCaptureTaskHistogramReporter" = type { %"class.WTF::RefCounted.2714", %"class.absl::optional.2716", %"class.absl::optional.2716", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i64, %"class.blink::CustomCountHistogram", %"class.blink::CustomCountHistogram", %"class.blink::CustomCountHistogram" }
%"class.WTF::RefCounted.2714" = type { %"class.base::RefCounted.2715" }
%"class.base::RefCounted.2715" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.2716" = type { %"class.absl::optional_internal::optional_data.2717" }
%"class.absl::optional_internal::optional_data.2717" = type { %"class.absl::optional_internal::optional_data_base.2718" }
%"class.absl::optional_internal::optional_data_base.2718" = type { %"class.absl::optional_internal::optional_data_dtor_base.2719" }
%"class.absl::optional_internal::optional_data_dtor_base.2719" = type { i8, %union.anon.2720 }
%union.anon.2720 = type { %"class.base::TimeTicks" }
%"class.blink::CustomCountHistogram" = type { %"class.base::HistogramBase"* }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic", [4 x i8] }>
%"class.absl::optional.2721" = type { %"class.absl::optional_internal::optional_data.2722" }
%"class.absl::optional_internal::optional_data.2722" = type { %"class.absl::optional_internal::optional_data_base.2723" }
%"class.absl::optional_internal::optional_data_base.2723" = type { %"class.absl::optional_internal::optional_data_dtor_base.2724" }
%"class.absl::optional_internal::optional_data_dtor_base.2724" = type { i8, %union.anon.2725 }
%union.anon.2725 = type { i32 }
%"class.absl::optional.2726" = type { %"class.absl::optional_internal::optional_data.2727" }
%"class.absl::optional_internal::optional_data.2727" = type { %"class.absl::optional_internal::optional_data_base.2728" }
%"class.absl::optional_internal::optional_data_base.2728" = type { %"class.absl::optional_internal::optional_data_dtor_base.2729" }
%"class.absl::optional_internal::optional_data_dtor_base.2729" = type { i8, %union.anon.2730 }
%union.anon.2730 = type { %"class.WTF::Vector.2731" }
%"class.WTF::Vector.2731" = type { %"class.WTF::VectorBuffer.2732" }
%"class.WTF::VectorBuffer.2732" = type { %"class.WTF::VectorBufferBase.2733" }
%"class.WTF::VectorBufferBase.2733" = type { %"struct.cc::NodeInfo"*, i32, i32 }
%"struct.cc::NodeInfo" = type { i32, %"class.gfx::Rect" }
%"class.blink::Member.2609" = type { %"class.blink::MemberBase.2610" }
%"class.blink::MemberBase.2610" = type { %"class.blink::TaskSession"* }
%"class.blink::TaskSession" = type { %"class.blink::HeapHashMap.2613", i8, %"class.base::RepeatingCallback.2620" }
%"class.blink::HeapHashMap.2613" = type { %"class.WTF::HashMap.2616" }
%"class.WTF::HashMap.2616" = type { %"class.WTF::HashTable.2617" }
%"class.WTF::HashTable.2617" = type <{ %"struct.WTF::KeyValuePair.2619"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2619" = type opaque
%"class.base::RepeatingCallback.2620" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.blink::Member.2621" = type { %"class.blink::MemberBase.2622" }
%"class.blink::MemberBase.2622" = type { %"struct.blink::ContentCaptureManager::UserActivation"* }
%"struct.blink::ContentCaptureManager::UserActivation" = type { i32 (...)**, %"class.blink::WeakMember.2625", %"class.base::TimeTicks" }
%"class.blink::WeakMember.2625" = type { %"class.blink::MemberBase.2626" }
%"class.blink::MemberBase.2626" = type { %"class.blink::LocalFrame"* }
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.2627" }
%"class.blink::Member.2627" = type { %"class.blink::MemberBase.2628" }
%"class.blink::MemberBase.2628" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.3239" }
%"class.mojo::Remote.3239" = type { %"class.mojo::internal::InterfacePtrState.3240" }
%"class.mojo::internal::InterfacePtrState.3240" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3241" }
%"class.std::__1::unique_ptr.3241" = type { %"class.std::__1::__compressed_pair.3242" }
%"class.std::__1::__compressed_pair.3242" = type { %"struct.std::__1::__compressed_pair_elem.3243" }
%"struct.std::__1::__compressed_pair_elem.3243" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2629" = type { %"class.std::__1::__compressed_pair.2630" }
%"class.std::__1::__compressed_pair.2630" = type { %"struct.std::__1::__compressed_pair_elem.2631" }
%"struct.std::__1::__compressed_pair_elem.2631" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type { i32 (...)**, %class.scoped_refptr.2632, %"class.blink::WebVector", %"class.base::WaitableEvent"* }
%class.scoped_refptr.2632 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type <{ %"class.network::mojom::URLLoaderFactory", %"class.base::RefCounted.2633", [4 x i8] }>
%"class.network::mojom::URLLoaderFactory" = type { i32 (...)** }
%"class.base::RefCounted.2633" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebVector" = type { %"class.std::__1::vector.2634" }
%"class.std::__1::vector.2634" = type { %"class.std::__1::__vector_base.2635" }
%"class.std::__1::__vector_base.2635" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.2636" }
%"class.std::__1::__compressed_pair.2636" = type { %"struct.std::__1::__compressed_pair_elem.2637" }
%"struct.std::__1::__compressed_pair_elem.2637" = type { %"class.blink::WebString"* }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.2641, i8, [7 x i8] }>
%class.scoped_refptr.2641 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.2642", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.2642" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.2643" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.2643" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.2650" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.2651" = type { %"class.std::__1::__compressed_pair.2652" }
%"class.std::__1::__compressed_pair.2652" = type { %"struct.std::__1::__compressed_pair_elem.2653" }
%"struct.std::__1::__compressed_pair_elem.2653" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.2286" = type { %"class.absl::optional_internal::optional_data.2287" }
%"class.absl::optional_internal::optional_data.2287" = type { %"class.absl::optional_internal::optional_data_base.2288" }
%"class.absl::optional_internal::optional_data_base.2288" = type { %"class.absl::optional_internal::optional_data_dtor_base.2289" }
%"class.absl::optional_internal::optional_data_dtor_base.2289" = type { i8, %union.anon.2290 }
%union.anon.2290 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.2657" = type { %"class.std::__1::__compressed_pair.2658" }
%"class.std::__1::__compressed_pair.2658" = type { %"struct.std::__1::__compressed_pair_elem.2659" }
%"struct.std::__1::__compressed_pair_elem.2659" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.2663" }
%"class.blink::Member.2663" = type { %"class.blink::MemberBase.2664" }
%"class.blink::MemberBase.2664" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3249" }
%"class.mojo::AssociatedRemote.3249" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3250" }
%"class.mojo::internal::AssociatedInterfacePtrState.3250" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3251" }
%"class.std::__1::unique_ptr.3251" = type { %"class.std::__1::__compressed_pair.3252" }
%"class.std::__1::__compressed_pair.3252" = type { %"struct.std::__1::__compressed_pair_elem.3253" }
%"struct.std::__1::__compressed_pair_elem.3253" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.2665" = type { %"class.blink::Member.2666" }
%"class.blink::Member.2666" = type { %"class.blink::MemberBase.2667" }
%"class.blink::MemberBase.2667" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3259" }
%"class.mojo::AssociatedRemote.3259" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3260" }
%"class.mojo::internal::AssociatedInterfacePtrState.3260" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3261" }
%"class.std::__1::unique_ptr.3261" = type { %"class.std::__1::__compressed_pair.3262" }
%"class.std::__1::__compressed_pair.3262" = type { %"struct.std::__1::__compressed_pair_elem.3263" }
%"struct.std::__1::__compressed_pair_elem.3263" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.2668" }
%"class.blink::Member.2668" = type { %"class.blink::MemberBase.2669" }
%"class.blink::MemberBase.2669" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3269", %"class.blink::Member.1869", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3269" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.3270" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.1657" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.3270" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.2670" = type { %"class.blink::Member.2671" }
%"class.blink::Member.2671" = type { %"class.blink::MemberBase.2672" }
%"class.blink::MemberBase.2672" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3273", %"class.blink::Member.1869", %"class.mojo::AssociatedReceiver.3274" }
%"class.blink::ThreadState::PrefinalizerRegistration.3273" = type { i8 }
%"class.mojo::AssociatedReceiver.3274" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.3275" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.3275" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.2673" }
%"class.blink::Member.2673" = type { %"class.blink::MemberBase.2674" }
%"class.blink::MemberBase.2674" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3278", %"class.blink::Member.1869", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3278" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.2167, %"class.std::__1::unique_ptr.1657", %"class.base::WeakPtrFactory.3279" }
%"class.base::WeakPtrFactory.3279" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.2675" = type { %"class.blink::Member.2676" }
%"class.blink::Member.2676" = type { %"class.blink::MemberBase.2677" }
%"class.blink::MemberBase.2677" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3282", %"class.blink::Member.1869", %"class.mojo::AssociatedReceiver.3283" }
%"class.blink::ThreadState::PrefinalizerRegistration.3282" = type { i8 }
%"class.mojo::AssociatedReceiver.3283" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.3284" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.3284" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.2678" = type { %"class.blink::MemberBase.2679" }
%"class.blink::MemberBase.2679" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.2680" = type { %"class.blink::MemberBase.2681" }
%"class.blink::MemberBase.2681" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.2682" = type { %"class.blink::MemberBase.2683" }
%"class.blink::MemberBase.2683" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.2684" = type { %"class.blink::MemberBase.2685" }
%"class.blink::MemberBase.2685" = type { %"class.blink::HeapHashMap.2686"* }
%"class.blink::HeapHashMap.2686" = type opaque
%"class.mojo::StructPtr.2687" = type { %"class.std::__1::unique_ptr.2688" }
%"class.std::__1::unique_ptr.2688" = type { %"class.std::__1::__compressed_pair.2689" }
%"class.std::__1::__compressed_pair.2689" = type { %"struct.std::__1::__compressed_pair_elem.2690" }
%"struct.std::__1::__compressed_pair_elem.2690" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.2691", %"class.mojo::InlinedStructPtr.2692" }
%"class.mojo::InlinedStructPtr.2691" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.2692" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.2696" = type { %"class.blink::MemberBase.2697" }
%"class.blink::MemberBase.2697" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.2698" = type { %"class.absl::optional_internal::optional_data.2699" }
%"class.absl::optional_internal::optional_data.2699" = type { %"class.absl::optional_internal::optional_data_base.2700" }
%"class.absl::optional_internal::optional_data_base.2700" = type { %"class.absl::optional_internal::optional_data_dtor_base.2701" }
%"class.absl::optional_internal::optional_data_dtor_base.2701" = type { i8, %union.anon.2702 }
%union.anon.2702 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1871" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1872", { i64, i64 } }
%"class.blink::WeakMember.1872" = type { %"class.blink::MemberBase.1873" }
%"class.absl::optional.1874" = type { %"class.absl::optional_internal::optional_data.1875" }
%"class.absl::optional_internal::optional_data.1875" = type { %"class.absl::optional_internal::optional_data_base.1876" }
%"class.absl::optional_internal::optional_data_base.1876" = type { %"class.absl::optional_internal::optional_data_dtor_base.1877" }
%"class.absl::optional_internal::optional_data_dtor_base.1877" = type { i8, %union.anon.1878 }
%union.anon.1878 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1879" = type { %"class.blink::MemberBase.1880" }
%"class.blink::MemberBase.1880" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1881" = type { %"class.blink::MemberBase.1882" }
%"class.blink::MemberBase.1882" = type { %"class.blink::HeapHashSet.1883"* }
%"class.blink::HeapHashSet.1883" = type opaque
%"class.std::__1::unique_ptr.1884" = type { %"class.std::__1::__compressed_pair.1885" }
%"class.std::__1::__compressed_pair.1885" = type { %"struct.std::__1::__compressed_pair_elem.1886" }
%"struct.std::__1::__compressed_pair_elem.1886" = type { %"class.WTF::HashSet.1887"* }
%"class.WTF::HashSet.1887" = type { %"class.WTF::HashTable.1888" }
%"class.WTF::HashTable.1888" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1894" = type { %"class.blink::MemberBase.1895" }
%"class.blink::MemberBase.1895" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1896" = type { %"class.WTF::HashSet.1899" }
%"class.WTF::HashSet.1899" = type { %"class.WTF::HashTable.1900" }
%"class.WTF::HashTable.1900" = type <{ %"class.blink::Member.1902"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1902" = type opaque
%"class.blink::HeapHashSet.1903" = type { %"class.WTF::HashSet.1906" }
%"class.WTF::HashSet.1906" = type { %"class.WTF::HashTable.1907" }
%"class.WTF::HashTable.1907" = type <{ %"class.blink::Member.1909"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1909" = type { %"class.blink::MemberBase.1910" }
%"class.blink::MemberBase.1910" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2115", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.2125", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::Member.2115" = type { %"class.blink::MemberBase.2116" }
%"class.blink::MemberBase.2116" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.2117", %"class.blink::Member.2119", %"class.blink::Member.2121", %"class.blink::Member.2123", %"class.WTF::Vector.906", i16, %class.scoped_refptr.963 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.2117" = type { %"class.blink::MemberBase.2118" }
%"class.blink::MemberBase.2118" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.2119" = type { %"class.blink::MemberBase.2120" }
%"class.blink::MemberBase.2120" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.2121" = type { %"class.blink::MemberBase.2122" }
%"class.blink::MemberBase.2122" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.2123" = type { %"class.blink::MemberBase.2124" }
%"class.blink::MemberBase.2124" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.2125" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2126", { i64, i64 } }
%"class.blink::WeakMember.2126" = type { %"class.blink::MemberBase.1910" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1911" = type { %"class.std::__1::__compressed_pair.1912" }
%"class.std::__1::__compressed_pair.1912" = type { %"struct.std::__1::__compressed_pair_elem.1913" }
%"struct.std::__1::__compressed_pair_elem.1913" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1917" = type { %"class.blink::MemberBase.1918" }
%"class.blink::MemberBase.1918" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1921", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1921" = type { %"class.WTF::HashTable.1922" }
%"class.WTF::HashTable.1922" = type <{ %"struct.WTF::KeyValuePair.1924"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1924" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1925", i32, i32 }
%"class.WTF::Vector.1925" = type { %"class.WTF::VectorBuffer.1926" }
%"class.WTF::VectorBuffer.1926" = type { %"class.WTF::VectorBufferBase.1927" }
%"class.WTF::VectorBufferBase.1927" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1929" = type { %"class.WTF::LinkedHashSet.1932" }
%"class.WTF::LinkedHashSet.1932" = type { %"class.WTF::HashMap.1933", %"class.WTF::VectorBackedLinkedList.1937" }
%"class.WTF::HashMap.1933" = type { %"class.WTF::HashTable.1934" }
%"class.WTF::HashTable.1934" = type <{ %"struct.WTF::KeyValuePair.1936"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1936" = type opaque
%"class.WTF::VectorBackedLinkedList.1937" = type { %"class.WTF::Vector.1938", i32, i32 }
%"class.WTF::Vector.1938" = type { %"class.WTF::VectorBuffer.1939" }
%"class.WTF::VectorBuffer.1939" = type { %"class.WTF::VectorBufferBase.1940" }
%"class.WTF::VectorBufferBase.1940" = type { %"class.WTF::VectorBackedLinkedListNode.1941"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1941" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1943" = type { %"class.std::__1::__compressed_pair.1944" }
%"class.std::__1::__compressed_pair.1944" = type { %"struct.std::__1::__compressed_pair_elem.1945" }
%"struct.std::__1::__compressed_pair_elem.1945" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1949" = type { %"class.std::__1::__compressed_pair.1950" }
%"class.std::__1::__compressed_pair.1950" = type { %"struct.std::__1::__compressed_pair_elem.1951" }
%"struct.std::__1::__compressed_pair_elem.1951" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1952, %class.scoped_refptr.1952, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.2007", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2012", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1952 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1953", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1960" }
%"class.WTF::RefCounted.1953" = type { %"class.base::RefCounted.1954" }
%"class.base::RefCounted.1954" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1955", i32, [4 x i8] }>
%"class.WTF::Vector.1955" = type { %"class.WTF::VectorBuffer.1956" }
%"class.WTF::VectorBuffer.1956" = type { %"class.WTF::VectorBufferBase.1957" }
%"class.WTF::VectorBufferBase.1957" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1960" = type { %"class.WTF::VectorBuffer.1961" }
%"class.WTF::VectorBuffer.1961" = type { %"class.WTF::VectorBufferBase.1962" }
%"class.WTF::VectorBufferBase.1962" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1963", %"class.std::__1::unique_ptr.1979", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1963" = type { %"class.std::__1::__compressed_pair.1964" }
%"class.std::__1::__compressed_pair.1964" = type { %"struct.std::__1::__compressed_pair_elem.1965" }
%"struct.std::__1::__compressed_pair_elem.1965" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1966", %"class.WTF::Vector.1971", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1966" = type { %"class.WTF::VectorBuffer.1967" }
%"class.WTF::VectorBuffer.1967" = type { %"class.WTF::VectorBufferBase.1968" }
%"class.WTF::VectorBufferBase.1968" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1971" = type { %"class.WTF::VectorBuffer.1972" }
%"class.WTF::VectorBuffer.1972" = type { %"class.WTF::VectorBufferBase.1973" }
%"class.WTF::VectorBufferBase.1973" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1979" = type { %"class.std::__1::__compressed_pair.1980" }
%"class.std::__1::__compressed_pair.1980" = type { %"struct.std::__1::__compressed_pair_elem.1981" }
%"struct.std::__1::__compressed_pair_elem.1981" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1982", %"class.absl::optional.1982" }
%"class.absl::optional.1982" = type { %"class.absl::optional_internal::optional_data.1983" }
%"class.absl::optional_internal::optional_data.1983" = type { %"class.absl::optional_internal::optional_data_base.1984" }
%"class.absl::optional_internal::optional_data_base.1984" = type { %"class.absl::optional_internal::optional_data_dtor_base.1985" }
%"class.absl::optional_internal::optional_data_dtor_base.1985" = type { i8, [3 x i8], %union.anon.1986 }
%union.anon.1986 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1960"*, %"class.absl::optional.1992", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1992" = type { %"class.absl::optional_internal::optional_data.1993" }
%"class.absl::optional_internal::optional_data.1993" = type { %"class.absl::optional_internal::optional_data_base.1994" }
%"class.absl::optional_internal::optional_data_base.1994" = type { %"class.absl::optional_internal::optional_data_dtor_base.1995" }
%"class.absl::optional_internal::optional_data_dtor_base.1995" = type { i8, %union.anon.1996 }
%union.anon.1996 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1997", %"class.WTF::Vector.2002" }
%"class.WTF::Vector.1997" = type { %"class.WTF::VectorBuffer.1998" }
%"class.WTF::VectorBuffer.1998" = type { %"class.WTF::VectorBufferBase.1999", [128 x i8] }
%"class.WTF::VectorBufferBase.1999" = type { i32*, i32, i32 }
%"class.WTF::Vector.2002" = type { %"class.WTF::VectorBuffer.2003" }
%"class.WTF::VectorBuffer.2003" = type { %"class.WTF::VectorBufferBase.2004", [128 x i8] }
%"class.WTF::VectorBufferBase.2004" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.2007" = type { %"class.WTF::VectorBuffer.2008" }
%"class.WTF::VectorBuffer.2008" = type { %"class.WTF::VectorBufferBase.2009" }
%"class.WTF::VectorBufferBase.2009" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2012" = type { %"class.WTF::HashTable.2013" }
%"class.WTF::HashTable.2013" = type <{ %"struct.WTF::KeyValuePair.2016"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2016" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2017", %"class.WTF::Vector.2022" }
%"class.WTF::HashMap.2017" = type { %"class.WTF::HashTable.2018" }
%"class.WTF::HashTable.2018" = type <{ %"struct.WTF::KeyValuePair.2021"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2021" = type opaque
%"class.WTF::Vector.2022" = type { %"class.WTF::VectorBuffer.2023" }
%"class.WTF::VectorBuffer.2023" = type { %"class.WTF::VectorBufferBase.2024" }
%"class.WTF::VectorBufferBase.2024" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2030" = type { %"class.std::__1::__compressed_pair.2031" }
%"class.std::__1::__compressed_pair.2031" = type { %"struct.std::__1::__compressed_pair_elem.2032" }
%"struct.std::__1::__compressed_pair_elem.2032" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2036" = type { %"class.WTF::VectorBuffer.2037" }
%"class.WTF::VectorBuffer.2037" = type { %"class.WTF::VectorBufferBase.2038" }
%"class.WTF::VectorBufferBase.2038" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2041 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2042" = type { %"class.blink::MemberBase.2043" }
%"class.blink::MemberBase.2043" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2044" = type { %"class.blink::MemberBase.2045" }
%"class.blink::MemberBase.2045" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2046" = type { %"class.blink::MemberBase.2047" }
%"class.blink::MemberBase.2047" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2048" = type { %"class.WTF::HashSet.2051" }
%"class.WTF::HashSet.2051" = type { %"class.WTF::HashTable.2052" }
%"class.WTF::HashTable.2052" = type <{ %"class.blink::WeakMember.2054"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2054" = type opaque
%"class.blink::HeapHashSet.2055" = type { %"class.WTF::HashSet.2058" }
%"class.WTF::HashSet.2058" = type { %"class.WTF::HashTable.2059" }
%"class.WTF::HashTable.2059" = type <{ %"class.blink::WeakMember.2061"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2061" = type opaque
%"class.std::__1::unique_ptr.2062" = type { %"class.std::__1::__compressed_pair.2063" }
%"class.std::__1::__compressed_pair.2063" = type { %"struct.std::__1::__compressed_pair_elem.2064" }
%"struct.std::__1::__compressed_pair_elem.2064" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.2065" }
%"class.base::time_internal::TimeBase.2065" = type { i64 }
%"class.std::__1::unique_ptr.2069" = type { %"class.std::__1::__compressed_pair.2070" }
%"class.std::__1::__compressed_pair.2070" = type { %"struct.std::__1::__compressed_pair_elem.2071" }
%"struct.std::__1::__compressed_pair_elem.2071" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.2072", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.2072" = type { %"class.absl::optional_internal::optional_data.2073" }
%"class.absl::optional_internal::optional_data.2073" = type { %"class.absl::optional_internal::optional_data_base.2074" }
%"class.absl::optional_internal::optional_data_base.2074" = type { %"class.absl::optional_internal::optional_data_dtor_base.2075" }
%"class.absl::optional_internal::optional_data_dtor_base.2075" = type { i8, %union.anon.2076 }
%union.anon.2076 = type { %"class.base::Time" }
%"class.blink::LayoutState" = type { i8, %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutState"*, %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.WTF::AtomicString", %"class.blink::LayoutObject"* }
%"class.blink::LayoutFlowThread" = type opaque
%"class.std::__1::unique_ptr.2080" = type { %"class.std::__1::__compressed_pair.2081" }
%"class.std::__1::__compressed_pair.2081" = type { %"struct.std::__1::__compressed_pair_elem.2082" }
%"struct.std::__1::__compressed_pair_elem.2082" = type { %"class.blink::ViewFragmentationContext"* }
%"class.blink::ViewFragmentationContext" = type opaque
%"class.std::__1::unique_ptr.2086" = type { %"class.std::__1::__compressed_pair.2087" }
%"class.std::__1::__compressed_pair.2087" = type { %"struct.std::__1::__compressed_pair_elem.2088" }
%"struct.std::__1::__compressed_pair_elem.2088" = type { %"class.blink::NamedPagesMapper"* }
%"class.blink::NamedPagesMapper" = type opaque
%"class.std::__1::unique_ptr.2092" = type { %"class.std::__1::__compressed_pair.2093" }
%"class.std::__1::__compressed_pair.2093" = type { %"struct.std::__1::__compressed_pair_elem.2094" }
%"struct.std::__1::__compressed_pair_elem.2094" = type { %"class.blink::PaintLayerCompositor"* }
%"class.blink::PaintLayerCompositor" = type opaque
%class.scoped_refptr.1856 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.blink::LayoutQuote" = type opaque
%"class.blink::Persistent.2098" = type { %"class.blink::PersistentBase.2099" }
%"class.blink::PersistentBase.2099" = type { %"class.blink::HitTestCache"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HitTestCache" = type { i32, %"class.blink::HeapVector.2102", i64 }
%"class.blink::HeapVector.2102" = type { %"class.WTF::Vector.2105" }
%"class.WTF::Vector.2105" = type { %"class.WTF::VectorBuffer.2106" }
%"class.WTF::VectorBuffer.2106" = type { %"class.WTF::VectorBufferBase.2107", [368 x i8] }
%"class.WTF::VectorBufferBase.2107" = type { %"struct.blink::HitTestCacheEntry"*, i32, i32 }
%"struct.blink::HitTestCacheEntry" = type { %"class.blink::HitTestLocation", %"class.blink::HitTestResult" }
%"class.blink::HitTestLocation" = type <{ %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalRect", %"class.blink::FloatPoint", %"class.blink::FloatQuad", i32, i8, i8, [2 x i8] }>
%"class.blink::FloatQuad" = type { %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint" }
%"class.blink::HitTestResult" = type { %"class.blink::HitTestRequest", i8, %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.343", %"class.blink::Member.318", %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset", %"class.blink::Member.343", %"class.blink::Member.1909", i8, %"class.blink::Member.2108", %"class.WTF::String" }
%"class.blink::HitTestRequest" = type { i32, %"class.blink::LayoutObject"* }
%"class.blink::Member.2108" = type { %"class.blink::MemberBase.2109" }
%"class.blink::MemberBase.2109" = type { %"class.blink::HeapLinkedHashSet.2110"* }
%"class.blink::HeapLinkedHashSet.2110" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1384" = type { %"class.WTF::Vector.1387" }
%"class.WTF::Vector.1387" = type { %"class.WTF::VectorBuffer.1388" }
%"class.WTF::VectorBuffer.1388" = type { %"class.WTF::VectorBufferBase.1389" }
%"class.WTF::VectorBufferBase.1389" = type { %"class.blink::Member.1390"*, i32, i32 }
%"class.blink::Member.1390" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type <{ %"class.blink::Member.3005", %"class.blink::LayoutBlock"*, %"class.WTF::Vector.3007", %"class.blink::TextAutosizer::FingerprintMapper", %"struct.blink::TextAutosizer::PageInfo", i8, i8, [2 x i8] }>
%"class.blink::Member.3005" = type { %"class.blink::MemberBase.3006" }
%"class.blink::MemberBase.3006" = type { %"class.blink::Document"* }
%"class.WTF::Vector.3007" = type { %"class.WTF::VectorBuffer.3008" }
%"class.WTF::VectorBuffer.3008" = type { %"class.WTF::VectorBufferBase.3009" }
%"class.WTF::VectorBufferBase.3009" = type { %"class.std::__1::unique_ptr.3010"*, i32, i32 }
%"class.std::__1::unique_ptr.3010" = type opaque
%"class.blink::TextAutosizer::FingerprintMapper" = type { %"class.WTF::HashMap.3013", %"class.WTF::HashMap.3018", %"class.WTF::HashMap.3023", %"class.WTF::HashSet.3028" }
%"class.WTF::HashMap.3013" = type { %"class.WTF::HashTable.3014" }
%"class.WTF::HashTable.3014" = type <{ %"struct.WTF::KeyValuePair.3017"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3017" = type opaque
%"class.WTF::HashMap.3018" = type { %"class.WTF::HashTable.3019" }
%"class.WTF::HashTable.3019" = type <{ %"struct.WTF::KeyValuePair.3022"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3022" = type opaque
%"class.WTF::HashMap.3023" = type { %"class.WTF::HashTable.3024" }
%"class.WTF::HashTable.3024" = type <{ %"struct.WTF::KeyValuePair.3027"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3027" = type opaque
%"class.WTF::HashSet.3028" = type { %"class.WTF::HashTable.3029" }
%"class.WTF::HashTable.3029" = type <{ %"struct.blink::TextAutosizer::Supercluster"**, i32, i32, i32, [4 x i8] }>
%"struct.blink::TextAutosizer::Supercluster" = type <{ %"class.WTF::HashSet.3032"*, i32, float, i32, [4 x i8] }>
%"class.WTF::HashSet.3032" = type opaque
%"struct.blink::TextAutosizer::PageInfo" = type <{ %"class.blink::mojom::blink::TextAutosizerPageInfo", float, i8, i8, i8, i8 }>
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::Member.1400" = type { %"class.blink::MemberBase.1401" }
%"class.blink::MemberBase.1401" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1402" = type { %"class.WTF::HashTable.1403" }
%"class.WTF::HashTable.1403" = type <{ %"struct.WTF::KeyValuePair.1406"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1406" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1413" = type { %"class.blink::MemberBase.1414" }
%"class.blink::MemberBase.1414" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::HeapHashSet.1415" = type { %"class.WTF::HashSet.1418" }
%"class.WTF::HashSet.1418" = type { %"class.WTF::HashTable.1419" }
%"class.WTF::HashTable.1419" = type <{ %"class.blink::Member.1421"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1421" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1430" = type { %"class.blink::MemberBase.1431" }
%"class.blink::MemberBase.1431" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1432" = type { %"class.std::__1::__compressed_pair.1433" }
%"class.std::__1::__compressed_pair.1433" = type { %"struct.std::__1::__compressed_pair_elem.1434" }
%"struct.std::__1::__compressed_pair_elem.1434" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1438" = type { %"class.std::__1::__compressed_pair.1439" }
%"class.std::__1::__compressed_pair.1439" = type { %"struct.std::__1::__compressed_pair_elem.1440" }
%"struct.std::__1::__compressed_pair_elem.1440" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1441", %"class.WTF::HashMap.1441", %"class.WTF::HashMap.1441", %"class.WTF::HashMap.1441", %"class.WTF::HashMap.1441", %"class.WTF::HashMap.1441", %"class.WTF::HashMap.1441", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1441" = type { %"class.WTF::HashTable.1442" }
%"class.WTF::HashTable.1442" = type <{ %"struct.WTF::KeyValuePair.1445"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1445" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1455" = type { %"class.blink::MemberBase.1456" }
%"class.blink::MemberBase.1456" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1457" = type { %"class.WTF::VectorBuffer.1458" }
%"class.WTF::VectorBuffer.1458" = type { %"class.WTF::VectorBufferBase.1459" }
%"class.WTF::VectorBufferBase.1459" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1462" = type { %"class.WTF::HashMap.1465" }
%"class.WTF::HashMap.1465" = type { %"class.WTF::HashTable.1466" }
%"class.WTF::HashTable.1466" = type <{ %"struct.WTF::KeyValuePair.1468"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1468" = type opaque
%"class.blink::Member.1469" = type { %"class.blink::MemberBase.1470" }
%"class.blink::MemberBase.1470" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1471" = type { %"class.std::__1::__compressed_pair.1472" }
%"class.std::__1::__compressed_pair.1472" = type { %"struct.std::__1::__compressed_pair_elem.1473" }
%"struct.std::__1::__compressed_pair_elem.1473" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1479" = type { %"class.blink::MemberBase.1480" }
%"class.blink::MemberBase.1480" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1481" = type { %"class.WTF::HashMap.1484" }
%"class.WTF::HashMap.1484" = type { %"class.WTF::HashTable.1485" }
%"class.WTF::HashTable.1485" = type <{ %"struct.WTF::KeyValuePair.1487"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1487" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1488" }
%"class.blink::HeapHashSet.1488" = type { %"class.WTF::HashSet.1491" }
%"class.WTF::HashSet.1491" = type { %"class.WTF::HashTable.1492" }
%"class.WTF::HashTable.1492" = type <{ %"class.blink::WeakMember.1494"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1494" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1497" = type { %"class.blink::MemberBase.1498" }
%"class.blink::MemberBase.1498" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1504", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1511", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1504" = type { %"class.WTF::HashSet.1507" }
%"class.WTF::HashSet.1507" = type { %"class.WTF::HashTable.1508" }
%"class.WTF::HashTable.1508" = type <{ %"class.blink::Member.1510"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1510" = type opaque
%"class.blink::HeapTaskRunnerTimer.1511" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1512", { i64, i64 } }
%"class.blink::WeakMember.1512" = type { %"class.blink::MemberBase.1498" }
%"class.blink::WeakMember.1499" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1500" = type { %"class.blink::MemberBase.1501" }
%"class.blink::MemberBase.1501" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.3197" }
%"class.WTF::Vector.3197" = type { %"class.WTF::VectorBuffer.3198" }
%"class.WTF::VectorBuffer.3198" = type { %"class.WTF::VectorBufferBase.3199" }
%"class.WTF::VectorBufferBase.3199" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.2819", %"class.absl::optional.2819", %"class.absl::optional.2819" }
%"class.absl::optional.2819" = type { %"class.absl::optional_internal::optional_data.2820" }
%"class.absl::optional_internal::optional_data.2820" = type { %"class.absl::optional_internal::optional_data_base.2821" }
%"class.absl::optional_internal::optional_data_base.2821" = type { %"class.absl::optional_internal::optional_data_dtor_base.2822" }
%"class.absl::optional_internal::optional_data_dtor_base.2822" = type { i8, %union.anon.2823 }
%union.anon.2823 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.3212" }
%"class.WTF::VectorBuffer.3212" = type { %"class.WTF::VectorBufferBase.3213", [32 x i8] }
%"class.WTF::VectorBufferBase.3213" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.3033 = type { %"class.blink::InlineTextBoxList" }
%"class.blink::InlineTextBoxList" = type { %"class.blink::InlineBoxList.3034" }
%"class.blink::InlineBoxList.3034" = type { %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"* }
%"class.blink::InlineTextBox" = type { %"class.blink::InlineBox", %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*, i32, i16, i16 }
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8], [4 x i8] }>
%"class.blink::SubtreeLayoutScope" = type { %"class.blink::LayoutObject"* }
%"class.blink::NGInlineCursor" = type <{ %"class.blink::NGInlineCursorPosition", %"class.base::span", %"class.blink::NGFragmentItems"*, %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGInlineCursor::CulledInlineTraversal", %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutUnit", i32, i32, [4 x i8] }>
%"class.blink::NGInlineCursorPosition" = type { %"class.blink::NGFragmentItem"*, %"class.base::CheckedContiguousIterator" }
%"class.blink::NGFragmentItem" = type <{ %"class.blink::LayoutObject"*, %union.anon.3051, %"struct.blink::PhysicalRect", %"class.blink::NGInkOverflow", i32, i32, i16, [6 x i8] }>
%union.anon.3051 = type { %"struct.blink::NGFragmentItem::TextItem" }
%"struct.blink::NGFragmentItem::TextItem" = type { %class.scoped_refptr.3052, %"struct.blink::NGTextOffset" }
%class.scoped_refptr.3052 = type { %"class.blink::ShapeResultView"* }
%"class.blink::ShapeResultView" = type { %"class.WTF::RefCounted.3053", %class.scoped_refptr.3055, i32, i32, i32, i32, float, i32, [0 x %struct.anon.3056] }
%"class.WTF::RefCounted.3053" = type { %"class.base::RefCounted.3054" }
%"class.base::RefCounted.3054" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.3055 = type { %"class.blink::SimpleFontData"* }
%struct.anon.3056 = type { i8* }
%"struct.blink::NGTextOffset" = type { i32, i32 }
%"class.blink::NGInkOverflow" = type { %union.anon.3065 }
%union.anon.3065 = type { %"struct.blink::NGSingleInkOverflow"* }
%"struct.blink::NGSingleInkOverflow" = type { %"struct.blink::PhysicalRect" }
%"class.base::CheckedContiguousIterator" = type { %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"* }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", %"class.blink::NGFragmentItem"* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.blink::NGFragmentItems" = type { %"class.WTF::String", %"class.WTF::String", i32, i32, [0 x %"class.blink::NGFragmentItem"] }
%"class.blink::NGPhysicalBoxFragment" = type { %"class.blink::NGPhysicalFragment", i24, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::NGInkOverflow", [0 x %"struct.blink::NGLink"] }
%"struct.blink::NGLink" = type { %"class.blink::NGPhysicalFragment"*, %"struct.blink::PhysicalOffset" }
%"class.blink::NGInlineCursor::CulledInlineTraversal" = type <{ %"class.blink::LayoutObject"*, %"class.blink::LayoutInline"*, i8, [7 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.WTF::KeyValuePair.3039" = type { %"class.blink::LayoutText"*, %"class.blink::(anonymous namespace)::SecureTextTimer"* }
%"class.blink::(anonymous namespace)::SecureTextTimer" = type <{ %"class.blink::TimerBase", %"class.blink::LayoutText"*, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3044" = type { %"class.blink::LayoutText"*, %"class.std::__1::unique_ptr.3045" }
%"class.std::__1::unique_ptr.3045" = type { %"class.std::__1::__compressed_pair.3046" }
%"class.std::__1::__compressed_pair.3046" = type { %"struct.std::__1::__compressed_pair_elem.3047" }
%"struct.std::__1::__compressed_pair_elem.3047" = type { %"class.blink::(anonymous namespace)::SelectionDisplayItemClient"* }
%"class.blink::(anonymous namespace)::SelectionDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", [7 x i8] }
%"class.WTF::Vector.3066" = type { %"class.WTF::VectorBuffer.3067" }
%"class.WTF::VectorBuffer.3067" = type { %"class.WTF::VectorBufferBase.3068" }
%"class.WTF::VectorBufferBase.3068" = type { %"struct.blink::LayoutText::TextBoxInfo"*, i32, i32 }
%"struct.blink::LayoutText::TextBoxInfo" = type { %"class.blink::LayoutRect", i32, i32 }
%"class.base::CheckedContiguousIterator.3072" = type { %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"* }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.318", i32, i32 }
%"class.blink::FontCache" = type <{ i8, [3 x i8], i32, %class.sk_sp.3334, i16, i8, [5 x i8], %"class.blink::Persistent.3335", %"class.WTF::HashMap.3338", %"class.WTF::HashMap.3343", %"class.blink::FontDataCache", %"class.blink::Persistent.3366", float, [4 x i8] }>
%class.sk_sp.3334 = type { %class.SkFontMgr* }
%class.SkFontMgr = type { %class.SkRefCnt.base, [4 x i8] }
%"class.blink::Persistent.3335" = type { %"class.blink::PersistentBase.3336" }
%"class.blink::PersistentBase.3336" = type { %"class.blink::HeapHashSet.3337"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashSet.3337" = type opaque
%"class.WTF::HashMap.3338" = type { %"class.WTF::HashTable.3339" }
%"class.WTF::HashTable.3339" = type <{ %"struct.WTF::KeyValuePair.3342"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3342" = type opaque
%"class.WTF::HashMap.3343" = type { %"class.WTF::HashTable.3344" }
%"class.WTF::HashTable.3344" = type <{ %"struct.WTF::KeyValuePair.3347"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3347" = type opaque
%"class.blink::FontDataCache" = type { %"class.WTF::HashMap.3348", %"class.WTF::LinkedHashSet.3353" }
%"class.WTF::HashMap.3348" = type { %"class.WTF::HashTable.3349" }
%"class.WTF::HashTable.3349" = type <{ %"struct.WTF::KeyValuePair.3352"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3352" = type opaque
%"class.WTF::LinkedHashSet.3353" = type { %"class.WTF::HashMap.3354", %"class.WTF::VectorBackedLinkedList.3359" }
%"class.WTF::HashMap.3354" = type { %"class.WTF::HashTable.3355" }
%"class.WTF::HashTable.3355" = type <{ %"struct.WTF::KeyValuePair.3358"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3358" = type opaque
%"class.WTF::VectorBackedLinkedList.3359" = type { %"class.WTF::Vector.3360", i32, i32 }
%"class.WTF::Vector.3360" = type { %"class.WTF::VectorBuffer.3361" }
%"class.WTF::VectorBuffer.3361" = type { %"class.WTF::VectorBufferBase.3362" }
%"class.WTF::VectorBufferBase.3362" = type { %"class.WTF::VectorBackedLinkedListNode.3363"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.3363" = type opaque
%"class.blink::Persistent.3366" = type { %"class.blink::PersistentBase.3367" }
%"class.blink::PersistentBase.3367" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::ParkableString" = type { %class.scoped_refptr.3078 }
%class.scoped_refptr.3078 = type { %"class.blink::ParkableStringImpl"* }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.3079", %"class.WTF::String", %"class.std::__1::unique_ptr.3081" }
%"class.WTF::RefCounted.3079" = type { %"class.base::RefCounted.3080" }
%"class.base::RefCounted.3080" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.3081" = type { %"class.std::__1::__compressed_pair.3082" }
%"class.std::__1::__compressed_pair.3082" = type { %"struct.std::__1::__compressed_pair_elem.3083" }
%"struct.std::__1::__compressed_pair_elem.3083" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.3084", %"class.std::__1::unique_ptr.3095", %"class.WTF::Vector.3101", i8, i32 }
%"class.std::__1::unique_ptr.3084" = type { %"class.std::__1::__compressed_pair.3085" }
%"class.std::__1::__compressed_pair.3085" = type { %"struct.std::__1::__compressed_pair_elem.3086" }
%"struct.std::__1::__compressed_pair_elem.3086" = type { %"class.WTF::Vector.3087"* }
%"class.WTF::Vector.3087" = type { %"class.WTF::VectorBuffer.3088" }
%"class.WTF::VectorBuffer.3088" = type { %"class.WTF::VectorBufferBase.3089" }
%"class.WTF::VectorBufferBase.3089" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.3095" = type { %"class.std::__1::__compressed_pair.3096" }
%"class.std::__1::__compressed_pair.3096" = type { %"struct.std::__1::__compressed_pair_elem.3097" }
%"struct.std::__1::__compressed_pair_elem.3097" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.3101" = type { %"class.WTF::VectorBuffer.3102" }
%"class.WTF::VectorBuffer.3102" = type { %"class.WTF::VectorBufferBase.3089", [32 x i8] }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.3108, i32, i8, i8, [2 x i8] }>
%union.anon.3108 = type { %"class.WTF::Vector.3109" }
%"class.WTF::Vector.3109" = type { %"class.WTF::VectorBuffer.3110" }
%"class.WTF::VectorBuffer.3110" = type { %"class.WTF::VectorBufferBase.3089", [16 x i8] }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::EphemeralRangeTemplate" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate" }
%"class.blink::TextIteratorBehavior" = type { %union.anon.3118 }
%union.anon.3118 = type { i32 }
%"class.WTF::Vector.3113" = type { %"class.WTF::VectorBuffer.3114" }
%"class.WTF::VectorBuffer.3114" = type { %"class.WTF::VectorBufferBase.3115", [16 x i8] }
%"class.WTF::VectorBufferBase.3115" = type { i16*, i32, i32 }
%"class.WTF::Vector.3120" = type { %"class.WTF::VectorBuffer.3121" }
%"class.WTF::VectorBuffer.3121" = type { %"class.WTF::VectorBufferBase.3122" }
%"class.WTF::VectorBufferBase.3122" = type { %"class.blink::FloatQuad"*, i32, i32 }
%"class.blink::LayoutObject::AncestorSkipInfo" = type <{ %"class.blink::LayoutObject"*, i8, i8, i8, [5 x i8] }>
%"class.WTF::Vector.3125" = type { %"class.WTF::VectorBuffer.3126" }
%"class.WTF::VectorBuffer.3126" = type { %"class.WTF::VectorBufferBase.3122", [32 x i8] }
%"class.blink::EllipsisBox" = type { %"class.blink::InlineBox", %"class.blink::LayoutUnit", %"class.WTF::AtomicString" }
%"class.blink::PositionWithAffinityTemplate" = type <{ %"class.blink::PositionTemplate", i32, [4 x i8] }>
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.3384", %"class.blink::Member.3386", %"class.blink::Member.3388", %"class.blink::Member.3407", %"class.blink::Member.3409" }
%"class.blink::Member.3384" = type { %"class.blink::MemberBase.3385" }
%"class.blink::MemberBase.3385" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr }
%"class.blink::Member.3386" = type { %"class.blink::MemberBase.3387" }
%"class.blink::MemberBase.3387" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.3388" = type { %"class.blink::MemberBase.3389" }
%"class.blink::MemberBase.3389" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.3392", %"class.blink::HeapHashSet.3401" }
%"class.blink::HeapVector.3392" = type { %"class.WTF::Vector.3395" }
%"class.WTF::Vector.3395" = type { %"class.WTF::VectorBuffer.3396" }
%"class.WTF::VectorBuffer.3396" = type { %"class.WTF::VectorBufferBase.3397" }
%"class.WTF::VectorBufferBase.3397" = type { %"class.blink::Member.3398"*, i32, i32 }
%"class.blink::Member.3398" = type { %"class.blink::MemberBase.3399" }
%"class.blink::MemberBase.3399" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.3401" = type { %"class.WTF::HashSet.3404" }
%"class.WTF::HashSet.3404" = type { %"class.WTF::HashTable.3405" }
%"class.WTF::HashTable.3405" = type <{ %"class.blink::Member.3398"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.3407" = type { %"class.blink::MemberBase.3408" }
%"class.blink::MemberBase.3408" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.3409" = type { %"class.blink::MemberBase.3410" }
%"class.blink::MemberBase.3410" = type { %"class.blink::HeapHashSet.3411"* }
%"class.blink::HeapHashSet.3411" = type opaque
%"struct.blink::InlineBoxPosition" = type <{ %"class.blink::InlineBox"*, i32, [4 x i8] }>
%"class.blink::LineLayoutText" = type { %"class.blink::LineLayoutItem" }
%"class.WTF::HashSet.3131" = type { %"class.WTF::HashTable.3132" }
%"class.WTF::HashTable.3132" = type <{ %"class.blink::SimpleFontData"**, i32, i32, i32, [4 x i8] }>
%"class.blink::TextRun" = type <{ %union.anon.3130, i32, i32, float, float, i16, [2 x i8], %"struct.blink::TabSize", [4 x i8] }>
%union.anon.3130 = type { i8* }
%"class.WTF::Vector.3414" = type { %"class.WTF::VectorBuffer.3415" }
%"class.WTF::VectorBuffer.3415" = type { %"class.WTF::VectorBufferBase.1071", [32 x i8] }
%"class.blink::LazyLineBreakIterator" = type <{ %"class.WTF::String", %"class.WTF::AtomicString", %"class.icu_69::BreakIterator"*, [2 x i16], [4 x i8], %"struct.blink::LazyLineBreakIterator::PriorContext", i32, i32, i32, [4 x i8] }>
%"class.icu_69::BreakIterator" = type <{ %"class.icu_69::UObject", [157 x i8], [157 x i8], [6 x i8] }>
%"class.icu_69::UObject" = type { i32 (...)** }
%"struct.blink::LazyLineBreakIterator::PriorContext" = type <{ i16*, i32, [4 x i8] }>
%"class.blink::BidiResolver" = type { %"class.blink::TextRunIterator", %"class.blink::TextRunIterator", %"class.blink::TextRunIterator", %"class.blink::TextRunIterator", %"struct.blink::BidiStatus", i32, %"class.blink::TextRunIterator", %"class.blink::TextRunIterator", i8, %"class.blink::TextRunIterator", i8, [7 x i8], %"class.blink::BidiRunList", %"class.blink::MidpointState", i32, %"class.WTF::Vector.3140", %"struct.blink::BidiCharacterRun"*, i8, i8, %"class.WTF::Vector.3145", %"class.WTF::HashMap.3150" }
%"struct.blink::BidiStatus" = type { i32, i32, i32, %class.scoped_refptr.1841 }
%"class.blink::TextRunIterator" = type { %"class.blink::TextRun"*, i32, i32 }
%"class.blink::BidiRunList" = type <{ %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"*, i32, [4 x i8] }>
%"class.blink::MidpointState" = type <{ %"class.WTF::Vector.3135", i32, i32, i8, [7 x i8] }>
%"class.WTF::Vector.3135" = type { %"class.WTF::VectorBuffer.3136" }
%"class.WTF::VectorBuffer.3136" = type { %"class.WTF::VectorBufferBase.3137" }
%"class.WTF::VectorBufferBase.3137" = type { %"class.blink::TextRunIterator"*, i32, i32 }
%"class.WTF::Vector.3140" = type { %"class.WTF::VectorBuffer.3141" }
%"class.WTF::VectorBuffer.3141" = type { %"class.WTF::VectorBufferBase.3142" }
%"class.WTF::VectorBufferBase.3142" = type { %"class.blink::NoIsolatedRun"*, i32, i32 }
%"class.blink::NoIsolatedRun" = type { i8 }
%"struct.blink::BidiCharacterRun" = type { i8, i8, %"struct.blink::BidiCharacterRun"*, i32, i32 }
%"class.WTF::Vector.3145" = type { %"class.WTF::VectorBuffer.3146" }
%"class.WTF::VectorBuffer.3146" = type { %"class.WTF::VectorBufferBase.3147", [64 x i8] }
%"class.WTF::VectorBufferBase.3147" = type { %"class.blink::BidiEmbedding"*, i32, i32 }
%"class.blink::BidiEmbedding" = type { i32, i32 }
%"class.WTF::HashMap.3150" = type { %"class.WTF::HashTable.3151" }
%"class.WTF::HashTable.3151" = type <{ %"struct.WTF::KeyValuePair.3154"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3154" = type { %"struct.blink::BidiCharacterRun"*, %"class.blink::MidpointState" }
%"struct.blink::GlyphOverflow" = type { float, float, float, float }
%"class.blink::WritingModeConverter" = type { %"class.blink::WritingDirectionMode", %"struct.blink::PhysicalSize" }
%"class.blink::WritingDirectionMode" = type { i8, i8 }
%"class.blink::PaintLayerScrollableArea" = type { %"class.blink::ScrollableArea", %"class.blink::PaintLayer"*, i24, %"class.blink::IntPoint", %"struct.blink::PhysicalRect", [4 x i8], %"class.blink::PaintLayerScrollableArea::ScrollbarManager", %"class.blink::FloatSize", i8, %"class.blink::FloatSize", %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::ScrollAnchor", %"class.std::__1::unique_ptr.3423", i32, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient", %"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient", %"class.absl::optional.3436" }
%"class.blink::PaintLayerScrollableArea::ScrollbarManager" = type <{ %"class.blink::Member.3421", %"class.blink::Member.1909", %"class.blink::Member.1909", i8, [7 x i8] }>
%"class.blink::Member.3421" = type { %"class.blink::MemberBase.3422" }
%"class.blink::MemberBase.3422" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::LayoutCustomScrollbarPart" = type opaque
%"class.blink::ScrollAnchor" = type <{ %"class.blink::Member.2115", %"class.blink::LayoutObject"*, i32, %"class.blink::LayoutPoint", [4 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.3423" = type { %"class.std::__1::__compressed_pair.3424" }
%"class.std::__1::__compressed_pair.3424" = type { %"struct.std::__1::__compressed_pair_elem.3425" }
%"struct.std::__1::__compressed_pair_elem.3425" = type { %"struct.blink::PaintLayerScrollableAreaRareData"* }
%"struct.blink::PaintLayerScrollableAreaRareData" = type { %"class.WTF::HashMap.3426", %"class.absl::optional.798", i8, i8, %"class.WTF::Vector.1971" }
%"class.WTF::HashMap.3426" = type { %"class.WTF::HashTable.3427" }
%"class.WTF::HashTable.3427" = type <{ %"struct.WTF::KeyValuePair.3430"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3430" = type { %"class.blink::PaintLayer"*, %"struct.blink::StickyPositionScrollingConstraints" }
%"struct.blink::StickyPositionScrollingConstraints" = type { i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset" }
%"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.3434" }
%"class.blink::Member.3434" = type { %"class.blink::MemberBase.3435" }
%"class.blink::MemberBase.3435" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.3434" }
%"class.absl::optional.3436" = type { %"class.absl::optional_internal::optional_data.3437" }
%"class.absl::optional_internal::optional_data.3437" = type { %"class.absl::optional_internal::optional_data_base.3438" }
%"class.absl::optional_internal::optional_data_base.3438" = type { %"class.absl::optional_internal::optional_data_dtor_base.3439" }
%"class.absl::optional_internal::optional_data_dtor_base.3439" = type { i8, %union.anon.3440 }
%union.anon.3440 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"struct.blink::LayoutSelectionStatus" = type { i32, i32, i32 }
%"class.blink::Settings" = type <{ %"class.blink::SettingsDelegate"*, %"class.blink::GenericFontFamilySettings", double, i32, [4 x i8], double, i32, i32, i32, i32, i32, [4 x i8], %"class.WTF::String", %"class.WTF::String", double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", i32, i32, double, i32, i32, i32, i32, i32, %"class.blink::IntSize", [4 x i8], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], double, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", [14 x i8], [2 x i8] }>
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.3452" }
%"class.std::__1::unique_ptr.3452" = type { %"class.std::__1::__compressed_pair.3453" }
%"class.std::__1::__compressed_pair.3453" = type { %"struct.std::__1::__compressed_pair_elem.3454" }
%"struct.std::__1::__compressed_pair_elem.3454" = type { %"class.blink::Settings"* }
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap.3458", %"class.WTF::HashMap.3458", %"class.WTF::HashMap.3458", %"class.WTF::HashMap.3458", %"class.WTF::HashMap.3458", %"class.WTF::HashMap.3458", %"class.WTF::HashMap.3458", %"class.std::__1::unique_ptr.3463" }
%"class.WTF::HashMap.3458" = type { %"class.WTF::HashTable.3459" }
%"class.WTF::HashTable.3459" = type <{ %"struct.WTF::KeyValuePair.3462"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3462" = type opaque
%"class.std::__1::unique_ptr.3463" = type { %"class.std::__1::__compressed_pair.3464" }
%"class.std::__1::__compressed_pair.3464" = type { %"struct.std::__1::__compressed_pair_elem.3465" }
%"struct.std::__1::__compressed_pair_elem.3465" = type { %"class.WTF::Vector.3466"* }
%"class.WTF::Vector.3466" = type opaque
%"class.blink::AbstractInlineTextBox" = type { i32 (...)**, %"class.WTF::RefCounted.3162", %"class.blink::LineLayoutText" }
%"class.WTF::RefCounted.3162" = type { %"class.base::RefCounted.3163" }
%"class.base::RefCounted.3163" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::PaintInvalidatorContext" = type opaque
%"class.blink::ObjectPaintInvalidator" = type { %"class.blink::LayoutObject"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::NGInlineItem" = type { i32, i32, %class.scoped_refptr.3165, %"class.blink::LayoutObject"*, i32, i32 }
%class.scoped_refptr.3165 = type { %"class.blink::ShapeResult"* }
%"class.blink::ShapeResult" = type <{ %"class.WTF::RefCounted.3166", float, %"class.blink::FloatRect", %"class.WTF::Vector.3168", %class.scoped_refptr.3055, %"class.std::__1::unique_ptr.3174", i32, i32, i32, [4 x i8] }>
%"class.WTF::RefCounted.3166" = type { %"class.base::RefCounted.3167" }
%"class.base::RefCounted.3167" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.3168" = type { %"class.WTF::VectorBuffer.3169" }
%"class.WTF::VectorBuffer.3169" = type { %"class.WTF::VectorBufferBase.3170" }
%"class.WTF::VectorBufferBase.3170" = type { %class.scoped_refptr.3171*, i32, i32 }
%class.scoped_refptr.3171 = type opaque
%"class.std::__1::unique_ptr.3174" = type { %"class.std::__1::__compressed_pair.3175" }
%"class.std::__1::__compressed_pair.3175" = type { %"struct.std::__1::__compressed_pair_elem.3176" }
%"struct.std::__1::__compressed_pair_elem.3176" = type { %"class.blink::ShapeResult::CharacterPositionData"* }
%"class.blink::ShapeResult::CharacterPositionData" = type { %"class.WTF::Vector.3177", i32, float }
%"class.WTF::Vector.3177" = type { %"class.WTF::VectorBuffer.3178" }
%"class.WTF::VectorBuffer.3178" = type { %"class.WTF::VectorBufferBase.3179" }
%"class.WTF::VectorBufferBase.3179" = type { %"struct.blink::ShapeResultCharacterData"*, i32, i32 }
%"struct.blink::ShapeResultCharacterData" = type { float, i8 }
%"class.base::span.3185" = type { %"struct.base::internal::ExtentStorage", %"class.blink::NGInlineItem"* }
%"class.blink::ImageResourceContent" = type opaque
%"class.blink::LayoutNGTableInterface" = type { i32 (...)** }
%"class.blink::LayoutNGTableSectionInterface" = type { i32 (...)** }
%"class.blink::LayoutNGTableRowInterface" = type { i32 (...)** }
%"class.blink::LayoutNGTableCellInterface" = type { i32 (...)** }
%"class.blink::LayoutNGGridInterface" = type { i32 (...)** }
%"class.blink::AffineTransform" = type { [6 x double] }
%"struct.blink::PaintInfo" = type opaque
%"class.ui::Cursor" = type opaque
%"class.blink::TransformState" = type { %"class.blink::FloatPoint", %"class.blink::FloatQuad", %"class.std::__1::unique_ptr.3186", %"struct.blink::PhysicalOffset", i8, i8, i8, i8, i32 }
%"class.std::__1::unique_ptr.3186" = type { %"class.std::__1::__compressed_pair.3187" }
%"class.std::__1::__compressed_pair.3187" = type { %"struct.std::__1::__compressed_pair_elem.3188" }
%"struct.std::__1::__compressed_pair_elem.3188" = type { %"class.blink::TransformationMatrix"* }
%"class.WTF::Vector.3192" = type opaque
%class.anon.3297 = type { %"class.blink::LayoutObject"*, i8** }
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list.3310" }
%"class.std::__1::list.3310" = type { %"class.std::__1::__list_imp.3311" }
%"class.std::__1::__list_imp.3311" = type { %"struct.std::__1::__list_node_base.3312", %"class.std::__1::__compressed_pair.3313" }
%"struct.std::__1::__list_node_base.3312" = type { %"struct.std::__1::__list_node_base.3312"*, %"struct.std::__1::__list_node_base.3312"* }
%"class.std::__1::__compressed_pair.3313" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.3298", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.std::__1::vector.3298" = type { %"class.std::__1::__vector_base.3299" }
%"class.std::__1::__vector_base.3299" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.3305" }
%"class.std::__1::__compressed_pair.3305" = type { %"struct.std::__1::__compressed_pair_elem.3306" }
%"struct.std::__1::__compressed_pair_elem.3306" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.3300", i64, i64 }
%"class.std::__1::unique_ptr.3300" = type { %"class.std::__1::__compressed_pair.3301" }
%"class.std::__1::__compressed_pair.3301" = type { %"struct.std::__1::__compressed_pair_elem.2852" }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base.3312", %"struct.protozero::MessageArena::Block" }
%"struct.protozero::MessageArena::Block" = type { [16 x %"struct.std::__1::aligned_storage<48, 8>::type"], i32, [4 x i8] }
%"struct.std::__1::aligned_storage<48, 8>::type" = type { [48 x i8] }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.base::WeakPtr.3446" = type { %"class.base::internal::WeakPtrBase" }
%"class.WTF::VectorBuffer.302" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8], [4 x i8] }>
%"struct.std::__1::default_delete.473" = type { i8 }

$_ZN5blink17DisplayItemClientD2Ev = comdat any

$_ZN13scoped_refptrIKN5blink13ComputedStyleEED2Ev = comdat any

$_ZNK5blink10LayoutText28FirstInlineFragmentItemIndexEv = comdat any

$_ZNK4base25CheckedContiguousIteratorIKN5blink19NGOffsetMappingUnitEEdeEv = comdat any

$_ZN4base25CheckedContiguousIteratorIKN5blink19NGOffsetMappingUnitEEppEv = comdat any

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZN3WTF13StringBuilder6AppendEDs = comdat any

$_ZNK5blink14LineLayoutItem5StyleEb = comdat any

$_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9SetStatusENS_10BidiStatusE = comdat any

$_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE21CreateBidiRunsForLineERKS1_NS_23VisualDirectionOverrideEbb = comdat any

$_ZN5blink13GlyphOverflow13SetFromBoundsERKNS_9FloatRectERKNS_4FontEf = comdat any

$_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEED2Ev = comdat any

$_ZNK5blink11LayoutBlock27LogicalLeftOffsetForContentEv = comdat any

$_ZNK5blink9LayoutBox19ContentLogicalWidthEv = comdat any

$_ZN5blink22ObjectPaintInvalidator27InvalidateDisplayItemClientERKNS_17DisplayItemClientENS_23PaintInvalidationReasonE = comdat any

$_ZNK5blink17DisplayItemClient32VisualRectOutsetForRasterEffectsEv = comdat any

$_ZN5blink12LayoutObject12ImageChangedEPvNS_21ImageResourceObserver20CanDeferInvalidationE = comdat any

$_ZNK5blink21ImageResourceObserver23ComputeResourcePriorityEv = comdat any

$_ZNK5blink10LayoutText7GetNameEv = comdat any

$_ZN5blink12LayoutObject15VirtualChildrenEv = comdat any

$_ZNK5blink12LayoutObject15VirtualChildrenEv = comdat any

$_ZNK5blink12LayoutObject15CanHaveChildrenEv = comdat any

$_ZNK5blink12LayoutObject14IsChildAllowedEPS0_RKNS_13ComputedStyleE = comdat any

$_ZN5blink12LayoutObject28AddChildIgnoringContinuationEPS0_S1_ = comdat any

$_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv = comdat any

$_ZNK5blink12LayoutObject16IsBoxModelObjectEv = comdat any

$_ZNK5blink12LayoutObject7IsImageEv = comdat any

$_ZNK5blink12LayoutObject26IsInlineBlockOrInlineTableEv = comdat any

$_ZNK5blink12LayoutObject13IsLayoutBlockEv = comdat any

$_ZNK5blink12LayoutObject17IsLayoutBlockFlowEv = comdat any

$_ZNK5blink12LayoutObject18IsLayoutFlowThreadEv = comdat any

$_ZNK5blink12LayoutObject14IsLayoutInlineEv = comdat any

$_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv = comdat any

$_ZNK5blink12LayoutObject16IsLayoutNGObjectEv = comdat any

$_ZNK5blink12LayoutObject24ToLayoutNGTableInterfaceEv = comdat any

$_ZNK5blink12LayoutObject31ToLayoutNGTableSectionInterfaceEv = comdat any

$_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv = comdat any

$_ZNK5blink12LayoutObject28ToLayoutNGTableCellInterfaceEv = comdat any

$_ZNK5blink12LayoutObject23ToLayoutNGGridInterfaceEv = comdat any

$_ZN5blink12LayoutObject23SetNeedsTransformUpdateEv = comdat any

$_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv = comdat any

$_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE = comdat any

$_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv = comdat any

$_ZNK5blink12LayoutObject19VirtualContinuationEv = comdat any

$_ZNK5blink12LayoutObject18SpannerPlaceholderEv = comdat any

$_ZNK5blink12LayoutObject13HoverAncestorEv = comdat any

$_ZNK5blink10LayoutText5PaintERKNS_9PaintInfoE = comdat any

$_ZN5blink10LayoutText12UpdateLayoutEv = comdat any

$_ZN5blink12LayoutObject16SubtreeDidChangeEv = comdat any

$_ZN5blink12LayoutObject17UpdateFromElementEv = comdat any

$_ZN5blink10LayoutText11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE = comdat any

$_ZNK5blink12LayoutObject22PreferredLogicalWidthsEv = comdat any

$_ZNK5blink12LayoutObject12ColumnOffsetERKNS_11LayoutPointE = comdat any

$_ZNK5blink10LayoutText6lengthEv = comdat any

$_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv = comdat any

$_ZNK5blink12LayoutObject13IsFlexibleBoxEv = comdat any

$_ZNK5blink12LayoutObject37IsFlexibleBoxIncludingDeprecatedAndNGEv = comdat any

$_ZNK5blink12LayoutObject24IsFlexibleBoxIncludingNGEv = comdat any

$_ZNK5blink12LayoutObject13IsCombineTextEv = comdat any

$_ZNK5blink12LayoutObject15AddOutlineRectsERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE = comdat any

$_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE = comdat any

$_ZNK5blink12LayoutObject28VisualRectRespectsVisibilityEv = comdat any

$_ZNK5blink12LayoutObject8IsOfTypeENS0_16LayoutObjectTypeE = comdat any

$_ZN5blink10LayoutText15StyleWillChangeENS_15StyleDifferenceERKNS_13ComputedStyleE = comdat any

$_ZN5blink12LayoutObject36AnonymousHasStylePropagationOverrideEv = comdat any

$_ZNK5blink10LayoutText26CanBeSelectionLeafInternalEv = comdat any

$_ZNK5blink10LayoutText15TextStartOffsetEv = comdat any

$_ZNK5blink10LayoutText18GetFirstLetterPartEv = comdat any

$_ZNK5blink10LayoutText16GetNGInlineItemsEv = comdat any

$_ZN5blink10LayoutText16GetNGInlineItemsEv = comdat any

$_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE = comdat any

$_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_ = comdat any

$_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm = comdat any

$_ZZN7logging15CheckOpValueStrIPKN5blink19NGOffsetMappingUnitEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_ = comdat any

$_ZN4base25CheckedContiguousIteratorIKN5blink19NGOffsetMappingUnitEEC2EPS3_S5_S5_ = comdat any

$_ZNK4base25CheckedContiguousIteratorIKN5blink19NGOffsetMappingUnitEE15CheckComparableERKS4_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

$_ZN3WTF12VectorBufferIN5blink9FloatQuadELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN5blink11BidiContextD2Ev = comdat any

$_ZN3WTF6VectorIjLj8ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF12VectorBufferIjLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPj = comdat any

$_ZN3WTF12VectorBufferIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZNK5blink17DisplayItemClient11OwnerNodeIdEv = comdat any

$_ZN5blink9TimerBase16BindTimerClosureEN4base7WeakPtrIS0_EE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE = comdat any

$_ZN20trace_event_internal13AddTraceEventINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKcEEN4base11trace_event16TraceEventHandleEcPKhS9_S9_yjyS9_OT_S9_OT0_ = comdat any

$_ZN5blink17ComputedStyleBaseD2Ev = comdat any

$_ZN3WTF6VectorI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE8FinalizeEv = comdat any

$_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_ = comdat any

$_ZN5blink23StyleInheritedVariablesD2Ev = comdat any

$_ZN5blink14StyleVariablesD2Ev = comdat any

$_ZN5blink15CSSVariableDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase17StyleSurroundDataD2Ev = comdat any

$_ZN5blink18NinePieceImageDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase12StyleBoxDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase12StyleSVGDataD2Ev = comdat any

$_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev = comdat any

$_ZN5blink17ComputedStyleBase15StyleStrokeDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase17StyleGeometryDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan14PercentDataD2Ev = comdat any

$_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN5blink17ComputedStyleBase50StyleRareNonInheritedUsageLessThan14PercentSubDataD2Ev = comdat any

$_ZNSt3__110unique_ptrIN5blink11PaintImagesENS_14default_deleteIS2_EEE5resetEPS2_ = comdat any

$_ZN5blink13CSSTimingDataD2Ev = comdat any

$_ZN5blink16CSSAnimationDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase13StyleGridDataD2Ev = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j = comdat any

$_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan22PercentDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase48StyleRareNonInheritedUsageLessThan100PercentDataD2Ev = comdat any

$_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_ = comdat any

$_ZN5blink17ComputedStyleBase44StyleRareInheritedUsageLessThan64PercentDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase47StyleRareInheritedUsageLessThan64PercentSubDataD2Ev = comdat any

$_ZN3WTF6VectorIN5blink10LayoutText11TextBoxInfoELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10LayoutText11TextBoxInfoEEEmm = comdat any

$_ZN3WTF6VectorIN5blink9FloatQuadELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink9FloatQuadELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS2_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9FloatQuadEEEmm = comdat any

$_ZN3WTF6VectorIN5blink9FloatQuadELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink9FloatQuadELj1ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink9FloatQuadELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink9FloatQuadELj1ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF6VectorIN5blink9FloatQuadELj0ENS_18PartitionAllocatorEE6AppendIS2_EEvPKT_j = comdat any

$_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE = comdat any

$_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE23CommitExplicitEmbeddingERNS_11BidiRunListIS2_EE = comdat any

$_ZNK5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE21ReorderRunsFromLevelsERNS_11BidiRunListIS2_EE = comdat any

$_ZN3WTF6VectorIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13BidiEmbeddingEEEmm = comdat any

$_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE27RaiseExplicitEmbeddingLevelERNS_11BidiRunListIS2_EEN3WTF7unicode13CharDirectionESA_ = comdat any

$_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE27LowerExplicitEmbeddingLevelERNS_11BidiRunListIS2_EEN3WTF7unicode13CharDirectionE = comdat any

@_ZTVN5blink10LayoutTextE = hidden unnamed_addr constant { [126 x i8*], [7 x i8*] } { [126 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::LayoutText"*)* @_ZN5blink10LayoutTextD2Ev to i8*), i8* bitcast (void (%"class.blink::LayoutText"*)* @_ZN5blink10LayoutTextD0Ev to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*, i32)* @_ZN5blink12LayoutObject12ImageChangedEPNS_20ImageResourceContentENS_21ImageResourceObserver20CanDeferInvalidationE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, i8*, i32)* @_ZN5blink12LayoutObject12ImageChangedEPvNS_21ImageResourceObserver20CanDeferInvalidationE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*)* @_ZN5blink12LayoutObject19ImageNotifyFinishedEPNS_20ImageResourceContentE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*)* @_ZN5blink12LayoutObject23NotifyImageFullyRemovedEPNS_20ImageResourceContentE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject15WillRenderImageEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*, i32*)* @_ZN5blink12LayoutObject23GetImageAnimationPolicyERNS_5mojom20ImageAnimationPolicyE to i8*), i8* bitcast (i64 (%"class.blink::ImageResourceObserver"*)* @_ZNK5blink21ImageResourceObserver23ComputeResourcePriorityEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject9DebugNameEv to i8*), i8* bitcast (i8* (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText7GetNameEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject11OwnerNodeIdEv to i8*), i8* bitcast (%"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject15VirtualChildrenEv to i8*), i8* bitcast (%"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject15VirtualChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject15CanHaveChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink12LayoutObject14IsChildAllowedEPS0_RKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject8AddChildEPS0_S1_ to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject28AddChildIgnoringContinuationEPS0_S1_ to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject11RemoveChildEPS0_ to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject16IsBoxModelObjectEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject7IsImageEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject26IsInlineBlockOrInlineTableEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13IsLayoutBlockEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17IsLayoutBlockFlowEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject18IsLayoutFlowThreadEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject14IsLayoutInlineEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject16IsLayoutNGObjectEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject24ToLayoutNGTableInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject31ToLayoutNGTableSectionInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28ToLayoutNGTableCellInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23ToLayoutNGGridInterfaceEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject23SetNeedsTransformUpdateEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject24SetNeedsBoundariesUpdateEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, i32)* @_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17ObjectBoundingBoxEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject31VisualRectInLocalSVGCoordinatesEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17StrokeBoundingBoxEv to i8*), i8* bitcast (void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17LocalSVGTransformEv to i8*), i8* bitcast (void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv to i8*), i8* bitcast (%"class.blink::LayoutBoxModelObject"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject19VirtualContinuationEv to i8*), i8* bitcast (%"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject18SpannerPlaceholderEv to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13HoverAncestorEv to i8*), i8* bitcast (void (%"class.blink::LayoutText"*)* @_ZN5blink10LayoutText37InvalidateSubtreeLayoutForFontUpdatesEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText18HasInlineFragmentsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText28FirstInlineFragmentItemIndexEv to i8*), i8* bitcast (void (%"class.blink::LayoutText"*)* @_ZN5blink10LayoutText33ClearFirstInlineFragmentItemIndexEv to i8*), i8* bitcast (void (%"class.blink::LayoutText"*, i32)* @_ZN5blink10LayoutText31SetFirstInlineFragmentItemIndexEj to i8*), i8* bitcast (void (%"class.blink::LayoutText"*, %"struct.blink::PaintInfo"*)* @_ZNK5blink10LayoutText5PaintERKNS_9PaintInfoE to i8*), i8* bitcast (i16 (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject20RecalcLayoutOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject20RecalcVisualOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutText"*)* @_ZN5blink10LayoutText12UpdateLayoutEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject16SubtreeDidChangeEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject17UpdateFromElementEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.1373"*)* @_ZN5blink12LayoutObject19AddAnnotatedRegionsERN3WTF6VectorINS_20AnnotatedRegionValueELj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject35CanHaveAdditionalCompositingReasonsEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28AdditionalCompositingReasonsEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZN5blink12LayoutObject16HitTestAllPhasesERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestFilterE to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject14NodeForHitTestEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink12LayoutObject19UpdateHitTestResultERNS_13HitTestResultERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i1 (%"class.blink::LayoutText"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZN5blink10LayoutText11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE to i8*), i8* bitcast (void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutText"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink10LayoutText16PositionForPointERKNS_14PhysicalOffsetE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32)* @_ZN5blink12LayoutObject26DirtyLinesFromChangedChildEPS0_NS_15MarkingBehaviorE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*, i32)* @_ZNK5blink12LayoutObject42AbsoluteBoundingBoxRectHandlingEmptyInlineEj to i8*), i8* bitcast (void (%"class.blink::LayoutText"*, %"class.WTF::Vector.3120"*, i32)* @_ZNK5blink10LayoutText13AbsoluteQuadsERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText36LocalBoundingBoxRectForAccessibilityEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject22PreferredLogicalWidthsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*, %"class.ui::Cursor"*)* @_ZNK5blink12LayoutObject9GetCursorERKNS_14PhysicalOffsetERN2ui6CursorE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*, i32)* @_ZNK5blink12LayoutObject20VisualRectInDocumentENS_15VisualRectFlagsE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink12LayoutObject38MapToVisualRectInAncestorSpaceInternalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateENS_15VisualRectFlagsE to i8*), i8* bitcast (i64 (%"class.blink::LayoutObject"*, %"class.blink::LayoutPoint"*)* @_ZNK5blink12LayoutObject12ColumnOffsetERKNS_11LayoutPointE to i8*), i8* bitcast (i32 (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText6lengthEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText24LocalSelectionVisualRectEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutText"*, %"class.blink::InlineBox"*, i32, %"class.blink::LayoutUnit"*)* @_ZNK5blink10LayoutText14LocalCaretRectEPKNS_9InlineBoxEiPNS_10LayoutUnitE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13IsFlexibleBoxEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject37IsFlexibleBoxIncludingDeprecatedAndNGEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject24IsFlexibleBoxIncludingNGEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13IsCombineTextEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink12LayoutObject18MapLocalToAncestorEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink12LayoutObject18MapAncestorToLocalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.3192"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZNK5blink12LayoutObject15AddOutlineRectsERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject8ViewRectEv to i8*), i8* bitcast (void (%"class.blink::LayoutText"*, %"struct.blink::PaintInvalidatorContext"*)* @_ZNK5blink10LayoutText15InvalidatePaintERKNS_23PaintInvalidatorContextE to i8*), i8* bitcast (void (%"class.blink::LayoutText"*, i8)* @_ZNK5blink10LayoutText28InvalidateDisplayItemClientsENS_23PaintInvalidationReasonE to i8*), i8* bitcast (%"class.blink::DisplayItemClient"* (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText29GetSelectionDisplayItemClientEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText9DebugRectEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28VisualRectRespectsVisibilityEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*, i32)* @_ZNK5blink12LayoutObject8IsOfTypeENS0_16LayoutObjectTypeE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject10DeleteThisEv to i8*), i8* bitcast (void (%"class.blink::LayoutText"*, i32, %"class.blink::ComputedStyle"*)* @_ZN5blink10LayoutText15StyleWillChangeENS_15StyleDifferenceERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutText"*, i32, %"class.blink::ComputedStyle"*)* @_ZN5blink10LayoutText14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject36AnonymousHasStylePropagationOverrideEv to i8*), i8* bitcast (void (%"class.blink::LayoutText"*, i1)* @_ZN5blink10LayoutText43InLayoutNGInlineFormattingContextWillChangeEb to i8*), i8* bitcast (void (%"class.blink::LayoutText"*)* @_ZN5blink10LayoutText15WillBeDestroyedEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject16InsertedIntoTreeEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject21WillBeRemovedFromTreeEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject33EnsureIsReadyForPaintInvalidationEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject15ClearPaintFlagsEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText33LocalVisualRectIgnoringVisibilityEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText26CanBeSelectionLeafInternalEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)* @_ZNK5blink12LayoutObject27OffsetFromContainerInternalEPKS0_b to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)* @_ZNK5blink12LayoutObject26FlipForWritingModeInternalENS_10LayoutUnitES1_PKNS_9LayoutBoxE to i8*), i8* bitcast (i1 (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText11IsWordBreakEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText12OriginalTextEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText15TextStartOffsetEv to i8*), i8* bitcast (%"class.blink::LayoutText"* (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText18GetFirstLetterPartEv to i8*), i8* bitcast (float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.3131"*, %"class.blink::FloatRect"*, float)* @_ZNK5blink10LayoutText5WidthEjjRKNS_4FontENS_10LayoutUnitENS_13TextDirectionEPN3WTF7HashSetIPKNS_14SimpleFontDataENS6_7PtrHashIS9_EENS6_10HashTraitsISA_EENS6_18PartitionAllocatorEEEPNS_9FloatRectEf to i8*), i8* bitcast (float (%"class.blink::LayoutText"*, i32, i32, i32, i8, i1, %"class.WTF::HashSet.3131"*, %"class.blink::FloatRect"*, float)* @_ZNK5blink10LayoutText5WidthEjjNS_10LayoutUnitENS_13TextDirectionEbPN3WTF7HashSetIPKNS_14SimpleFontDataENS3_7PtrHashIS6_EENS3_10HashTraitsIS7_EENS3_18PartitionAllocatorEEEPNS_9FloatRectEf to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText24PhysicalLinesBoundingBoxEv to i8*), i8* bitcast (void (%"class.blink::LayoutText"*)* @_ZN5blink10LayoutText13TransformTextEv to i8*), i8* bitcast (void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)* @_ZNK5blink10LayoutText22PositionForCaretOffsetEj to i8*), i8* bitcast (i64 (%"class.blink::LayoutText"*, %"class.blink::PositionTemplate"*)* @_ZNK5blink10LayoutText22CaretOffsetForPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE to i8*), i8* bitcast (i32 (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText14CaretMinOffsetEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText14CaretMaxOffsetEv to i8*), i8* bitcast (i16 (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText17PreviousCharacterEv to i8*), i8* bitcast (%"class.base::span.3185"* (%"class.blink::LayoutText"*)* @_ZNK5blink10LayoutText16GetNGInlineItemsEv to i8*), i8* bitcast (%"class.base::span.3185"* (%"class.blink::LayoutText"*)* @_ZN5blink10LayoutText16GetNGInlineItemsEv to i8*), i8* bitcast (void (%"class.blink::LayoutText"*)* @_ZN5blink10LayoutText13TextDidChangeEv to i8*), i8* bitcast (%"class.blink::InlineTextBox"* (%"class.blink::LayoutText"*, i32, i16)* @_ZN5blink10LayoutText13CreateTextBoxEit to i8*)], [7 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::LayoutText"*)* @_ZThn8_N5blink10LayoutTextD1Ev to i8*), i8* bitcast (void (%"class.blink::LayoutText"*)* @_ZThn8_N5blink10LayoutTextD0Ev to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutObject"*)* @_ZThn8_NK5blink12LayoutObject9DebugNameEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*)* @_ZThn8_NK5blink12LayoutObject11OwnerNodeIdEv to i8*), i8* bitcast (i8 (%"class.blink::DisplayItemClient"*)* @_ZNK5blink17DisplayItemClient32VisualRectOutsetForRasterEffectsEv to i8*)] }, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink26layout_invalidation_reason12kStyleChangeE = external constant [0 x i8], align 1
@.str = private unnamed_addr constant [60 x i8] c"../../third_party/blink/renderer/core/layout/layout_text.cc\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"IsInLayoutNGInlineFormattingContext()\00", align 1
@_ZN3WTF7unicodeL15kSpaceCharacterE = internal constant i16 32, align 2
@_ZN5blink26layout_invalidation_reason12kTextChangedE = external constant [0 x i8], align 1
@_ZN5blink26layout_invalidation_reason13kFontsChangedE = external constant [0 x i8], align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.2 = private unnamed_addr constant [27 x i8] c"LayoutInvalidationTracking\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@_ZZN5blink12_GLOBAL__N_119GetSecureTextTimersEvE5s_map = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink12_GLOBAL__N_119GetSecureTextTimersEvE5s_map = internal global i64 0, align 8
@_ZZN5blink12_GLOBAL__N_132GetSelectionDisplayItemClientMapEvE5s_map = internal unnamed_addr global %"class.WTF::StaticSingleton.3329" zeroinitializer, align 8
@_ZGVZN5blink12_GLOBAL__N_132GetSelectionDisplayItemClientMapEvE5s_map = internal global i64 0, align 8
@.str.5 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/core/layout/layout_text.h\00", align 1
@.str.6 = private unnamed_addr constant [39 x i8] c"!IsInLayoutNGInlineFormattingContext()\00", align 1
@.str.7 = private unnamed_addr constant [17 x i8] c"start <= current\00", align 1
@.str.8 = private unnamed_addr constant [42 x i8] c"../../base/containers/checked_iterators.h\00", align 1
@.str.9 = private unnamed_addr constant [15 x i8] c"current <= end\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"start_ == other.start_\00", align 1
@.str.11 = private unnamed_addr constant [19 x i8] c"end_ == other.end_\00", align 1
@.str.12 = private unnamed_addr constant [17 x i8] c"current_ != end_\00", align 1
@.str.13 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.14 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.16 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.17 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.18 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.19 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1
@.str.20 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@_ZTVN5blink13InlineTextBoxE = external unnamed_addr constant { [41 x i8*] }, align 8
@.str.21 = private unnamed_addr constant [64 x i8] c"../../third_party/blink/renderer/core/css/css_global_rule_set.h\00", align 1
@.str.22 = private unnamed_addr constant [20 x i8] c"features_.IsAlive()\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase21is_layout_ng_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase26is_layout_ng_grid_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase31is_bidi_caret_affinity_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase33is_css_container_queries_enabled_E = external local_unnamed_addr global i8, align 1
@_ZTVN5blink12_GLOBAL__N_115SecureTextTimerE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::TimerBase"*)* @_ZN5blink9TimerBaseD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::SecureTextTimer"*)* @_ZN5blink12_GLOBAL__N_115SecureTextTimerD0Ev to i8*), i8* bitcast (void (%"class.blink::TimerBase"*)* @_ZN5blink9TimerBase4StopEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::SecureTextTimer"*)* @_ZN5blink12_GLOBAL__N_115SecureTextTimer5FiredEv to i8*), i8* bitcast (void (%"class.base::OnceCallback"*, %"class.blink::TimerBase"*, %"class.base::WeakPtr.3446"*)* @_ZN5blink9TimerBase16BindTimerClosureEN4base7WeakPtrIS0_EE to i8*)] }, align 8
@.str.23 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.24 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1
@.str.25 = private unnamed_addr constant [19 x i8] c"RestartWithNewText\00", align 1
@.str.26 = private unnamed_addr constant [28 x i8] c"InvalidateDisplayItemClient\00", align 1
@.str.27 = private unnamed_addr constant [7 x i8] c"client\00", align 1
@.str.28 = private unnamed_addr constant [7 x i8] c"reason\00", align 1
@.str.29 = private unnamed_addr constant [29 x i8] c"../../base/containers/span.h\00", align 1
@.str.30 = private unnamed_addr constant [13 x i8] c"begin <= end\00", align 1
@.str.31 = private unnamed_addr constant [11 x i8] c"LayoutText\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPN5blink10LayoutTextEPNS2_12_GLOBAL__N_115SecureTextTimerEEEEEPKcv = private unnamed_addr constant [135 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<blink::LayoutText *, blink::(anonymous namespace)::SecureTextTimer *>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink10LayoutTextENSt3__110unique_ptrINS2_12_GLOBAL__N_126SelectionDisplayItemClientENS6_14default_deleteIS9_EEEEEEEEPKcv = private unnamed_addr constant [258 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<const blink::LayoutText *, std::__1::unique_ptr<blink::(anonymous namespace)::SelectionDisplayItemClient, std::__1::default_delete<blink::(anonymous namespace)::SelectionDisplayItemClient> > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10LayoutText11TextBoxInfoEEEPKcv = private unnamed_addr constant [78 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::LayoutText::TextBoxInfo]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9FloatQuadEEEPKcv = private unnamed_addr constant [64 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::FloatQuad]\00", align 1
@.str.32 = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13BidiEmbeddingEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::BidiEmbedding]\00", align 1
@.str.33 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.34 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@_ZTVN5blink12_GLOBAL__N_126SelectionDisplayItemClientE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::DisplayItemClient"*)* @_ZN5blink17DisplayItemClientD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::SelectionDisplayItemClient"*)* @_ZN5blink12_GLOBAL__N_126SelectionDisplayItemClientD0Ev to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::(anonymous namespace)::SelectionDisplayItemClient"*)* @_ZNK5blink12_GLOBAL__N_126SelectionDisplayItemClient9DebugNameEv to i8*), i8* bitcast (i32 (%"class.blink::DisplayItemClient"*)* @_ZNK5blink17DisplayItemClient11OwnerNodeIdEv to i8*), i8* bitcast (i8 (%"class.blink::DisplayItemClient"*)* @_ZNK5blink17DisplayItemClient32VisualRectOutsetForRasterEffectsEv to i8*)] }, align 8
@.str.35 = private unnamed_addr constant [10 x i8] c"Selection\00", align 1

@_ZN5blink10LayoutTextC1EPNS_4NodeE13scoped_refptrIN3WTF10StringImplEE = hidden unnamed_addr alias void (%"class.blink::LayoutText"*, %"class.blink::Node"*, %"class.WTF::StringImpl"*), void (%"class.blink::LayoutText"*, %"class.blink::Node"*, %"class.WTF::StringImpl"*)* @_ZN5blink10LayoutTextC2EPNS_4NodeE13scoped_refptrIN3WTF10StringImplEE
@_ZN5blink10LayoutTextD1Ev = hidden unnamed_addr alias void (%"class.blink::LayoutText"*), void (%"class.blink::LayoutText"*)* @_ZN5blink10LayoutTextD2Ev

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17DisplayItemClientD2Ev(%"class.blink::DisplayItemClient"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutTextC2EPNS_4NodeE13scoped_refptrIN3WTF10StringImplEE(%"class.blink::LayoutText"*, %"class.blink::Node"*, %"class.WTF::StringImpl"*) unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.WTF::StringImpl"* %2 to i64
  %5 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  tail call void @_ZN5blink12LayoutObjectC2EPNS_4NodeE(%"class.blink::LayoutObject"* %5, %"class.blink::Node"* %1) #19
  %6 = bitcast %"class.blink::LayoutText"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [126 x i8*], [7 x i8*] }, { [126 x i8*], [7 x i8*] }* @_ZTVN5blink10LayoutTextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [126 x i8*], [7 x i8*] }, { [126 x i8*], [7 x i8*] }* @_ZTVN5blink10LayoutTextE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %6, align 8
  %7 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 1
  %8 = load i16, i16* %7, align 8
  %9 = and i16 %8, -32709
  store i16 %9, i16* %7, align 8
  %10 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 2
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 3
  %12 = bitcast float* %11 to <4 x float>*
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %12, align 8
  %13 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 7
  %14 = bitcast %"class.WTF::String"* %13 to i64*
  store i64 %4, i64* %14, align 8
  %15 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 8
  %16 = bitcast %"struct.blink::LogicalOffset"* %15 to i64*
  store i64 9223372034707292159, i64* %16, align 8
  %17 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0
  %18 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %19 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %18 to i96*
  %20 = bitcast %"class.blink::InlineTextBoxList"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false)
  %21 = load i96, i96* %19, align 4
  %22 = or i96 %21, 33554432
  store i96 %22, i96* %19, align 4
  %23 = icmp eq %"class.blink::Node"* %1, null
  br i1 %23, label %59, label %24

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  %26 = load %"class.blink::Node"*, %"class.blink::Node"** %25, align 8
  %27 = icmp eq %"class.blink::Node"* %26, null
  br i1 %27, label %28, label %35

28:                                               ; preds = %24, %28
  %29 = phi %"class.blink::LayoutObject"* [ %31, %28 ], [ %5, %24 ]
  %30 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %29, i64 0, i32 7
  %31 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %31, i64 0, i32 6, i32 0, i32 0
  %33 = load %"class.blink::Node"*, %"class.blink::Node"** %32, align 8
  %34 = icmp eq %"class.blink::Node"* %33, null
  br i1 %34, label %28, label %35

35:                                               ; preds = %28, %24
  %36 = phi %"class.blink::Node"* [ %26, %24 ], [ %33, %28 ]
  %37 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %36, i64 0, i32 3, i32 0, i32 0
  %38 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %38, i64 0, i32 2, i32 0, i32 0
  %40 = load %"class.blink::Document"*, %"class.blink::Document"** %39, align 8
  %41 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %40) #19
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %35
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 1
  %47 = load i32, i32* %46, align 4
  br label %48

48:                                               ; preds = %35, %45
  %49 = phi i32 [ %47, %45 ], [ 0, %35 ]
  %50 = getelementptr inbounds %"class.blink::LocalFrameView", %"class.blink::LocalFrameView"* %41, i64 0, i32 21
  %51 = load i8, i8* %50, align 8, !range !2
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %59

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.blink::LocalFrameView", %"class.blink::LocalFrameView"* %41, i64 0, i32 19
  %55 = load i32, i32* %54, align 4
  %56 = add i32 %55, %49
  store i32 %56, i32* %54, align 4
  %57 = icmp ugt i32 %56, 200
  br i1 %57, label %58, label %59

58:                                               ; preds = %53
  store i8 1, i8* %50, align 8
  br label %59

59:                                               ; preds = %3, %48, %53, %58
  ret void
}

declare void @_ZN5blink12LayoutObjectC2EPNS_4NodeE(%"class.blink::LayoutObject"*, %"class.blink::Node"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutTextD2Ev(%"class.blink::LayoutText"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::LayoutText"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [126 x i8*], [7 x i8*] }, { [126 x i8*], [7 x i8*] }* @_ZTVN5blink10LayoutTextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [126 x i8*], [7 x i8*] }, { [126 x i8*], [7 x i8*] }* @_ZTVN5blink10LayoutTextE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #19
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  tail call void @_ZN5blink12LayoutObjectD2Ev(%"class.blink::LayoutObject"* %20) #19
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink12LayoutObjectD2Ev(%"class.blink::LayoutObject"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink10LayoutTextD1Ev(%"class.blink::LayoutText"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 -1, i32 9, i32 0, i32 0, i32 1
  %3 = bitcast %"class.blink::InlineTextBox"** %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [126 x i8*], [7 x i8*] }, { [126 x i8*], [7 x i8*] }* @_ZTVN5blink10LayoutTextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [126 x i8*], [7 x i8*] }, { [126 x i8*], [7 x i8*] }* @_ZTVN5blink10LayoutTextE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %2, i64 14
  %5 = bitcast %"class.blink::InlineTextBox"** %4 to %"class.WTF::StringImpl"**
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  br i1 %12, label %15, label %17

15:                                               ; preds = %8
  %16 = add i32 %14, -1
  store i32 %16, i32* %13, align 4
  br label %17

17:                                               ; preds = %15, %8
  %18 = phi i32 [ %16, %15 ], [ %14, %8 ]
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %17
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %6) #19
  br label %21

21:                                               ; preds = %1, %17, %20
  %22 = bitcast %"class.blink::InlineTextBox"** %2 to %"class.blink::LayoutObject"*
  tail call void @_ZN5blink12LayoutObjectD2Ev(%"class.blink::LayoutObject"* %22) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutTextD0Ev(%"class.blink::LayoutText"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::LayoutText"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [126 x i8*], [7 x i8*] }, { [126 x i8*], [7 x i8*] }* @_ZTVN5blink10LayoutTextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [126 x i8*], [7 x i8*] }, { [126 x i8*], [7 x i8*] }* @_ZTVN5blink10LayoutTextE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #19
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  tail call void @_ZN5blink12LayoutObjectD2Ev(%"class.blink::LayoutObject"* %20) #19
  %21 = bitcast %"class.blink::LayoutText"* %0 to i8*
  tail call void @_ZN5blink12LayoutObjectdlEPv(i8* %21) #19
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink12LayoutObjectdlEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink10LayoutTextD0Ev(%"class.blink::LayoutText"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 -1, i32 9, i32 0, i32 0, i32 1
  %3 = bitcast %"class.blink::InlineTextBox"** %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [126 x i8*], [7 x i8*] }, { [126 x i8*], [7 x i8*] }* @_ZTVN5blink10LayoutTextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [126 x i8*], [7 x i8*] }, { [126 x i8*], [7 x i8*] }* @_ZTVN5blink10LayoutTextE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %2, i64 14
  %5 = bitcast %"class.blink::InlineTextBox"** %4 to %"class.WTF::StringImpl"**
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  br i1 %12, label %15, label %17

15:                                               ; preds = %8
  %16 = add i32 %14, -1
  store i32 %16, i32* %13, align 4
  br label %17

17:                                               ; preds = %15, %8
  %18 = phi i32 [ %16, %15 ], [ %14, %8 ]
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %17
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %6) #19
  br label %21

21:                                               ; preds = %1, %17, %20
  %22 = bitcast %"class.blink::InlineTextBox"** %2 to %"class.blink::LayoutObject"*
  tail call void @_ZN5blink12LayoutObjectD2Ev(%"class.blink::LayoutObject"* %22) #19
  %23 = bitcast %"class.blink::InlineTextBox"** %2 to i8*
  tail call void @_ZN5blink12LayoutObjectdlEPv(i8* %23) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutText"* @_ZN5blink10LayoutText20CreateEmptyAnonymousERNS_8DocumentE13scoped_refptrIKNS_13ComputedStyleEENS_12LegacyLayoutE(%"class.blink::Document"* dereferenceable(2848), %"class.blink::ComputedStyle"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.scoped_refptr, align 8
  %5 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %4, i64 0, i32 0
  store %"class.blink::ComputedStyle"* %1, %"class.blink::ComputedStyle"** %5, align 8
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %26, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %26

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #19
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !3

22:                                               ; preds = %13
  tail call void @llvm.trap() #19
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  %25 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  br label %26

26:                                               ; preds = %3, %8, %23
  %27 = phi %"class.blink::ComputedStyle"* [ %1, %3 ], [ %1, %8 ], [ %25, %23 ]
  %28 = tail call %"class.blink::LayoutText"* @_ZN5blink19LayoutObjectFactory10CreateTextEPNS_4NodeE13scoped_refptrIN3WTF10StringImplEENS_12LegacyLayoutE(%"class.blink::Node"* null, %"class.WTF::StringImpl"* %6, i32 %2) #19
  %29 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %28, i64 0, i32 0
  %30 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %0, i64 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %28, i64 0, i32 0, i32 6, i32 0, i32 0
  store %"class.blink::Node"* %30, %"class.blink::Node"** %31, align 8
  store %"class.blink::ComputedStyle"* null, %"class.blink::ComputedStyle"** %5, align 8
  tail call void @_ZN5blink12LayoutObject8SetStyleE13scoped_refptrIKNS_13ComputedStyleEENS0_17ApplyStyleChangesE(%"class.blink::LayoutObject"* %29, %"class.blink::ComputedStyle"* %27, i32 1) #19
  call void @_ZN13scoped_refptrIKN5blink13ComputedStyleEED2Ev(%class.scoped_refptr* nonnull %4) #19
  ret %"class.blink::LayoutText"* %28
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.blink::LayoutText"* @_ZN5blink19LayoutObjectFactory10CreateTextEPNS_4NodeE13scoped_refptrIN3WTF10StringImplEENS_12LegacyLayoutE(%"class.blink::Node"*, %"class.WTF::StringImpl"*, i32) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject8SetStyleE13scoped_refptrIKNS_13ComputedStyleEENS0_17ApplyStyleChangesE(%"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13scoped_refptrIKN5blink13ComputedStyleEED2Ev(%class.scoped_refptr*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %0, i64 0, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = icmp eq %"class.blink::ComputedStyle"* %3, null
  br i1 %4, label %28, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %6, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #19
  %8 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %6, i64 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %28

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %6, i64 -23
  %13 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %6, i64 1
  %14 = bitcast %"class.base::RefCounted.732"* %13 to %"class.blink::StyleCachedData"**
  %15 = load %"class.blink::StyleCachedData"*, %"class.blink::StyleCachedData"** %14, align 8
  store %"class.blink::StyleCachedData"* null, %"class.blink::StyleCachedData"** %14, align 8
  %16 = icmp eq %"class.blink::StyleCachedData"* %15, null
  br i1 %16, label %25, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.blink::StyleCachedData", %"class.blink::StyleCachedData"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::Vector.739"*, %"class.WTF::Vector.739"** %18, align 8
  store %"class.WTF::Vector.739"* null, %"class.WTF::Vector.739"** %18, align 8
  %20 = icmp eq %"class.WTF::Vector.739"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %17
  tail call void @_ZN3WTF6VectorI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE8FinalizeEv(%"class.WTF::Vector.739"* nonnull %19) #19
  %22 = bitcast %"class.WTF::Vector.739"* %19 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %22) #19
  br label %23

23:                                               ; preds = %21, %17
  %24 = bitcast %"class.blink::StyleCachedData"* %15 to i8*
  tail call void @_ZdlPv(i8* %24) #20
  br label %25

25:                                               ; preds = %23, %11
  %26 = bitcast %"class.base::RefCounted.732"* %12 to %"class.blink::ComputedStyleBase"*
  tail call void @_ZN5blink17ComputedStyleBaseD2Ev(%"class.blink::ComputedStyleBase"* %26) #19
  %27 = bitcast %"class.base::RefCounted.732"* %12 to i8*
  tail call void @free(i8* %27) #19
  br label %28

28:                                               ; preds = %25, %5, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutText"* @_ZN5blink10LayoutText15CreateAnonymousERNS_8DocumentE13scoped_refptrIKNS_13ComputedStyleEES3_IN3WTF10StringImplEENS_12LegacyLayoutE(%"class.blink::Document"* dereferenceable(2848), %"class.blink::ComputedStyle"*, %"class.WTF::StringImpl"*, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.scoped_refptr, align 8
  %6 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %5, i64 0, i32 0
  %7 = tail call %"class.blink::LayoutText"* @_ZN5blink19LayoutObjectFactory10CreateTextEPNS_4NodeE13scoped_refptrIN3WTF10StringImplEENS_12LegacyLayoutE(%"class.blink::Node"* null, %"class.WTF::StringImpl"* %2, i32 %3) #19
  %8 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %7, i64 0, i32 0
  %9 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %0, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %7, i64 0, i32 0, i32 6, i32 0, i32 0
  store %"class.blink::Node"* %9, %"class.blink::Node"** %10, align 8
  store %"class.blink::ComputedStyle"* null, %"class.blink::ComputedStyle"** %6, align 8
  tail call void @_ZN5blink12LayoutObject8SetStyleE13scoped_refptrIKNS_13ComputedStyleEENS0_17ApplyStyleChangesE(%"class.blink::LayoutObject"* %8, %"class.blink::ComputedStyle"* %1, i32 1) #19
  call void @_ZN13scoped_refptrIKN5blink13ComputedStyleEED2Ev(%class.scoped_refptr* nonnull %5) #19
  ret %"class.blink::LayoutText"* %7
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink10LayoutText11IsWordBreakEv(%"class.blink::LayoutText"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutText14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE(%"class.blink::LayoutText"*, i32, %"class.blink::ComputedStyle"* readonly) unnamed_addr #0 align 2 {
  %4 = trunc i32 %1 to i24
  %5 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  %6 = and i24 %4, 6
  %7 = icmp eq i24 %6, 4
  br i1 %7, label %8, label %12

8:                                                ; preds = %3
  tail call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %5, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason12kStyleChangeE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null) #19
  tail call void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"* %5, i32 1) #19
  %9 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 1
  %10 = load i16, i16* %9, align 8
  %11 = and i16 %10, -1025
  store i16 %11, i16* %9, align 8
  br label %12

12:                                               ; preds = %8, %3
  %13 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 5, i32 0
  %14 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %13, align 8
  %15 = icmp eq %"class.blink::ComputedStyle"* %2, null
  br i1 %15, label %31, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %2, i64 0, i32 0, i32 9
  %18 = bitcast [20 x i8]* %17 to i160*
  %19 = load i160, i160* %18, align 8
  %20 = lshr i160 %19, 83
  %21 = trunc i160 %20 to i32
  %22 = and i32 %21, 7
  %23 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %24 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %24, i64 0, i32 23
  %26 = bitcast [5 x i8]* %25 to i40*
  %27 = load i40, i40* %26, align 8
  %28 = lshr i40 %27, 24
  %29 = trunc i40 %28 to i32
  %30 = and i32 %29, 3
  br label %31

31:                                               ; preds = %12, %16
  %32 = phi i32 [ %22, %16 ], [ 0, %12 ]
  %33 = phi i32 [ %30, %16 ], [ 0, %12 ]
  %34 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %14, i64 0, i32 0, i32 9
  %35 = bitcast [20 x i8]* %34 to i160*
  %36 = load i160, i160* %35, align 8
  %37 = lshr i160 %36, 83
  %38 = trunc i160 %37 to i32
  %39 = and i32 %38, 7
  %40 = icmp eq i32 %32, %39
  br i1 %40, label %41, label %51

41:                                               ; preds = %31
  %42 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %14, i64 0, i32 0, i32 1, i32 0, i32 0
  %43 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %43, i64 0, i32 23
  %45 = bitcast [5 x i8]* %44 to i40*
  %46 = load i40, i40* %45, align 8
  %47 = lshr i40 %46, 24
  %48 = trunc i40 %47 to i32
  %49 = and i32 %48, 3
  %50 = icmp eq i32 %33, %49
  br i1 %50, label %56, label %51

51:                                               ; preds = %41, %31
  %52 = bitcast %"class.blink::LayoutText"* %0 to void (%"class.blink::LayoutText"*)***
  %53 = load void (%"class.blink::LayoutText"*)**, void (%"class.blink::LayoutText"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.blink::LayoutText"*)*, void (%"class.blink::LayoutText"*)** %53, i64 114
  %55 = load void (%"class.blink::LayoutText"*)*, void (%"class.blink::LayoutText"*)** %54, align 8
  tail call void %55(%"class.blink::LayoutText"* %0) #19
  br label %56

56:                                               ; preds = %41, %51
  %57 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 7
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %57, i64 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %69, label %61

61:                                               ; preds = %56
  %62 = tail call zeroext i1 @_ZN3WTF10StringImpl29ContainsOnlyWhitespaceOrEmptyEv(%"class.WTF::StringImpl"* nonnull %59) #19
  br i1 %62, label %69, label %63

63:                                               ; preds = %61
  %64 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %65, i64 0, i32 1, i32 0, i32 0
  %67 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %67, i64 0, i32 1
  tail call void @_ZNK5blink4Font15WillUseFontDataERKN3WTF6StringE(%"class.blink::Font"* %68, %"class.WTF::String"* dereferenceable(8) %57) #19
  br label %69

69:                                               ; preds = %56, %63, %61
  %70 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  %71 = load %"class.blink::Node"*, %"class.blink::Node"** %70, align 8
  %72 = icmp eq %"class.blink::Node"* %71, null
  br i1 %72, label %73, label %80

73:                                               ; preds = %69, %73
  %74 = phi %"class.blink::LayoutObject"* [ %76, %73 ], [ %5, %69 ]
  %75 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %74, i64 0, i32 7
  %76 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %76, i64 0, i32 6, i32 0, i32 0
  %78 = load %"class.blink::Node"*, %"class.blink::Node"** %77, align 8
  %79 = icmp eq %"class.blink::Node"* %78, null
  br i1 %79, label %73, label %80

80:                                               ; preds = %73, %69
  %81 = phi %"class.blink::Node"* [ %71, %69 ], [ %78, %73 ]
  %82 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %81, i64 0, i32 3, i32 0, i32 0
  %83 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %83, i64 0, i32 2, i32 0, i32 0
  %85 = load %"class.blink::Document"*, %"class.blink::Document"** %84, align 8
  %86 = tail call %"class.blink::TextAutosizer"* @_ZN5blink8Document16GetTextAutosizerEv(%"class.blink::Document"* %85) #19
  %87 = icmp ne %"class.blink::TextAutosizer"* %86, null
  %88 = and i1 %15, %87
  br i1 %88, label %89, label %90

89:                                               ; preds = %80
  tail call void @_ZN5blink13TextAutosizer6RecordEPNS_10LayoutTextE(%"class.blink::TextAutosizer"* nonnull %86, %"class.blink::LayoutText"* %0) #19
  br label %90

90:                                               ; preds = %80, %89
  %91 = and i24 %4, 8
  %92 = icmp eq i24 %91, 0
  br i1 %92, label %97, label %93

93:                                               ; preds = %90
  %94 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 1
  %95 = load i16, i16* %94, align 8
  %96 = and i16 %95, -129
  store i16 %96, i16* %94, align 8
  tail call void @_ZN5blink12LayoutObject22SetNeedsCollectInlinesEv(%"class.blink::LayoutObject"* %5) #19
  br label %97

97:                                               ; preds = %90, %93
  %98 = load i160, i160* %35, align 8
  %99 = and i160 %98, 15211807202738752817960438464512
  %100 = icmp eq i160 %99, 0
  %101 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %102 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %101 to i96*
  %103 = zext i1 %100 to i96
  %104 = load i96, i96* %102, align 4
  %105 = shl nuw nsw i96 %103, 31
  %106 = and i96 %104, -2147483649
  %107 = or i96 %105, %106
  store i96 %107, i96* %102, align 4
  ret void
}

declare void @_ZNK5blink4Font15WillUseFontDataERKN3WTF6StringE(%"class.blink::Font"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.blink::TextAutosizer"* @_ZN5blink8Document16GetTextAutosizerEv(%"class.blink::Document"*) local_unnamed_addr #1

declare void @_ZN5blink13TextAutosizer6RecordEPNS_10LayoutTextE(%"class.blink::TextAutosizer"*, %"class.blink::LayoutText"*) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject22SetNeedsCollectInlinesEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutText25RemoveAndDestroyTextBoxesEv(%"class.blink::LayoutText"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::NGInlineCursor", align 8
  %3 = alloca %"class.blink::NGInlineCursor", align 8
  %4 = alloca %"class.blink::NGInlineCursor", align 8
  %5 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  %7 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %8 = icmp eq %"class.blink::Node"* %7, null
  br i1 %8, label %9, label %16

9:                                                ; preds = %1, %9
  %10 = phi %"class.blink::LayoutObject"* [ %12, %9 ], [ %5, %1 ]
  %11 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %10, i64 0, i32 7
  %12 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %12, i64 0, i32 6, i32 0, i32 0
  %14 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %9, label %16

16:                                               ; preds = %9, %1
  %17 = phi %"class.blink::Node"* [ %7, %1 ], [ %14, %9 ]
  %18 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %17, i64 0, i32 3, i32 0, i32 0
  %19 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %19, i64 0, i32 2, i32 0, i32 0
  %21 = load %"class.blink::Document"*, %"class.blink::Document"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %21, i64 0, i32 5, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp sgt i32 %23, 19
  %25 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %26 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %25 to i96*
  %27 = load i96, i96* %26, align 4
  %28 = and i96 %27, 268435456
  %29 = icmp eq i96 %28, 0
  br i1 %24, label %125, label %30

30:                                               ; preds = %16
  br i1 %29, label %33, label %31

31:                                               ; preds = %30
  %32 = tail call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #19
  br label %35

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0
  br label %35

35:                                               ; preds = %31, %33
  %36 = phi %"class.blink::InlineTextBoxList"* [ %32, %31 ], [ %34, %33 ]
  %37 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %36, i64 0, i32 0, i32 0
  %38 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %37, align 8
  %39 = icmp eq %"class.blink::InlineTextBox"* %38, null
  br i1 %39, label %89, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.blink::LayoutText"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %42 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %41, align 8
  %43 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %42, i64 92
  %44 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %43, align 8
  %45 = tail call zeroext i1 %44(%"class.blink::LayoutObject"* %5, i32 0) #19
  br i1 %45, label %46, label %70

46:                                               ; preds = %40
  %47 = load i96, i96* %26, align 4
  %48 = and i96 %47, 268435456
  %49 = icmp eq i96 %48, 0
  br i1 %49, label %52, label %50

50:                                               ; preds = %46
  %51 = tail call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #19
  br label %54

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0
  br label %54

54:                                               ; preds = %50, %52
  %55 = phi %"class.blink::InlineTextBoxList"* [ %51, %50 ], [ %53, %52 ]
  %56 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %55, i64 0, i32 0, i32 0
  %57 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %57, i64 0, i32 0
  %59 = tail call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZN5blink9InlineBox4RootEv(%"class.blink::InlineBox"* %58) #19
  %60 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %59, i64 0, i32 0, i32 5
  %61 = bitcast %"class.blink::InlineFlowBox"** %60 to %"class.blink::RootInlineBox"**
  %62 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %61, align 8
  %63 = icmp eq %"class.blink::RootInlineBox"* %62, null
  br i1 %63, label %70, label %64

64:                                               ; preds = %54
  %65 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %62, i64 0, i32 0, i32 0
  %66 = bitcast %"class.blink::RootInlineBox"* %62 to void (%"class.blink::InlineBox"*)***
  %67 = load void (%"class.blink::InlineBox"*)**, void (%"class.blink::InlineBox"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %67, i64 28
  %69 = load void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %68, align 8
  tail call void %69(%"class.blink::InlineBox"* %65) #19
  br label %70

70:                                               ; preds = %64, %54, %40
  %71 = load i96, i96* %26, align 4
  %72 = and i96 %71, 268435456
  %73 = icmp eq i96 %72, 0
  br i1 %73, label %76, label %74

74:                                               ; preds = %70
  %75 = tail call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #19
  br label %78

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0
  br label %78

78:                                               ; preds = %74, %76
  %79 = phi %"class.blink::InlineTextBoxList"* [ %75, %74 ], [ %77, %76 ]
  %80 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %79, i64 0, i32 0, i32 0
  %81 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %80, align 8
  %82 = icmp eq %"class.blink::InlineTextBox"* %81, null
  br i1 %82, label %149, label %83

83:                                               ; preds = %78, %83
  %84 = phi %"class.blink::InlineTextBox"* [ %87, %83 ], [ %81, %78 ]
  %85 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %84, i64 0, i32 0
  tail call void @_ZN5blink9InlineBox6RemoveENS_13MarkLineBoxesE(%"class.blink::InlineBox"* %85, i32 0) #19
  %86 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %84, i64 0, i32 2
  %87 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %86, align 8
  %88 = icmp eq %"class.blink::InlineTextBox"* %87, null
  br i1 %88, label %149, label %83

89:                                               ; preds = %35
  %90 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 7
  %91 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %90, align 8
  %92 = icmp eq %"class.blink::LayoutObject"* %91, null
  br i1 %92, label %98, label %93

93:                                               ; preds = %89
  %94 = bitcast %"class.blink::LayoutObject"* %91 to void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32)***
  %95 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32)**, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32)*** %94, align 8
  %96 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32)** %95, i64 65
  %97 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32)** %96, align 8
  tail call void %97(%"class.blink::LayoutObject"* nonnull %91, %"class.blink::LayoutObject"* %5, i32 1) #19
  br label %98

98:                                               ; preds = %89, %93
  %99 = load i96, i96* %26, align 4
  %100 = and i96 %99, 268435456
  %101 = icmp eq i96 %100, 0
  br i1 %101, label %149, label %102

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9
  %104 = bitcast %union.anon.3033* %103 to i32*
  %105 = load i32, i32* %104, align 8
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %149, label %107

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 1
  %109 = load i16, i16* %108, align 8
  %110 = and i16 %109, 16384
  %111 = icmp eq i16 %110, 0
  br i1 %111, label %124, label %112, !prof !4

112:                                              ; preds = %107
  %113 = and i16 %109, -16385
  store i16 %113, i16* %108, align 8
  %114 = bitcast %"class.blink::NGInlineCursor"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %114) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %114, i8 -86, i64 112, i1 false) #19
  %115 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %2, i64 0, i32 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %114, i8 0, i64 81, i1 false) #19
  %116 = bitcast %"class.blink::LayoutBlockFlow"** %115 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %116, i8 0, i64 20, i1 false) #19
  call void @_ZN5blink14NGInlineCursor6MoveToERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"* nonnull %2, %"class.blink::LayoutObject"* dereferenceable(88) %5) #19
  %117 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %2, i64 0, i32 0, i32 0
  %118 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %117, align 8
  %119 = icmp eq %"class.blink::NGFragmentItem"* %118, null
  br i1 %119, label %123, label %120

120:                                              ; preds = %112, %120
  call void @_ZN5blink23NGAbstractInlineTextBox11WillDestroyERKNS_14NGInlineCursorE(%"class.blink::NGInlineCursor"* nonnull dereferenceable(112) %2) #19
  call void @_ZN5blink14NGInlineCursor29MoveToNextForSameLayoutObjectEv(%"class.blink::NGInlineCursor"* nonnull %2) #19
  %121 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %117, align 8
  %122 = icmp eq %"class.blink::NGFragmentItem"* %121, null
  br i1 %122, label %123, label %120

123:                                              ; preds = %120, %112
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %114) #19
  br label %124

124:                                              ; preds = %107, %123
  call void @_ZN5blink15NGFragmentItems27LayoutObjectWillBeDestroyedERKNS_12LayoutObjectE(%"class.blink::LayoutObject"* dereferenceable(88) %5) #19
  call void @_ZN5blink10LayoutText33ClearFirstInlineFragmentItemIndexEv(%"class.blink::LayoutText"* %0)
  br label %149

125:                                              ; preds = %16
  br i1 %29, label %149, label %126

126:                                              ; preds = %125
  %127 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9
  %128 = bitcast %union.anon.3033* %127 to i32*
  %129 = load i32, i32* %128, align 8
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %149, label %131

131:                                              ; preds = %126
  %132 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 1
  %133 = load i16, i16* %132, align 8
  %134 = and i16 %133, 16384
  %135 = icmp eq i16 %134, 0
  br i1 %135, label %148, label %136, !prof !4

136:                                              ; preds = %131
  %137 = and i16 %133, -16385
  store i16 %137, i16* %132, align 8
  %138 = bitcast %"class.blink::NGInlineCursor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %138) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %138, i8 -86, i64 112, i1 false) #19
  %139 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %3, i64 0, i32 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %138, i8 0, i64 81, i1 false) #19
  %140 = bitcast %"class.blink::LayoutBlockFlow"** %139 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %140, i8 0, i64 20, i1 false) #19
  call void @_ZN5blink14NGInlineCursor6MoveToERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"* nonnull %3, %"class.blink::LayoutObject"* dereferenceable(88) %5) #19
  %141 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %3, i64 0, i32 0, i32 0
  %142 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %141, align 8
  %143 = icmp eq %"class.blink::NGFragmentItem"* %142, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %136, %144
  call void @_ZN5blink23NGAbstractInlineTextBox11WillDestroyERKNS_14NGInlineCursorE(%"class.blink::NGInlineCursor"* nonnull dereferenceable(112) %3) #19
  call void @_ZN5blink14NGInlineCursor29MoveToNextForSameLayoutObjectEv(%"class.blink::NGInlineCursor"* nonnull %3) #19
  %145 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %141, align 8
  %146 = icmp eq %"class.blink::NGFragmentItem"* %145, null
  br i1 %146, label %147, label %144

147:                                              ; preds = %144, %136
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %138) #19
  br label %148

148:                                              ; preds = %131, %147
  call void @_ZN5blink10LayoutText33ClearFirstInlineFragmentItemIndexEv(%"class.blink::LayoutText"* %0)
  br label %149

149:                                              ; preds = %83, %78, %125, %98, %126, %102, %148, %124
  %150 = load i96, i96* %26, align 4
  %151 = and i96 %150, 268435456
  %152 = icmp eq i96 %151, 0
  br i1 %152, label %153, label %155

153:                                              ; preds = %149
  %154 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0, i32 0
  call void @_ZN5blink13InlineBoxListINS_13InlineTextBoxEE15DeleteLineBoxesEv(%"class.blink::InlineBoxList.3034"* %154) #19
  br label %172

155:                                              ; preds = %149
  %156 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 1
  %157 = load i16, i16* %156, align 8
  %158 = and i16 %157, 16384
  %159 = icmp eq i16 %158, 0
  br i1 %159, label %172, label %160, !prof !4

160:                                              ; preds = %155
  %161 = and i16 %157, -16385
  store i16 %161, i16* %156, align 8
  %162 = bitcast %"class.blink::NGInlineCursor"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %162) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %162, i8 -86, i64 112, i1 false) #19
  %163 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %4, i64 0, i32 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %162, i8 0, i64 81, i1 false) #19
  %164 = bitcast %"class.blink::LayoutBlockFlow"** %163 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %164, i8 0, i64 20, i1 false) #19
  call void @_ZN5blink14NGInlineCursor6MoveToERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"* nonnull %4, %"class.blink::LayoutObject"* dereferenceable(88) %5) #19
  %165 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %4, i64 0, i32 0, i32 0
  %166 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %165, align 8
  %167 = icmp eq %"class.blink::NGFragmentItem"* %166, null
  br i1 %167, label %171, label %168

168:                                              ; preds = %160, %168
  call void @_ZN5blink23NGAbstractInlineTextBox11WillDestroyERKNS_14NGInlineCursorE(%"class.blink::NGInlineCursor"* nonnull dereferenceable(112) %4) #19
  call void @_ZN5blink14NGInlineCursor29MoveToNextForSameLayoutObjectEv(%"class.blink::NGInlineCursor"* nonnull %4) #19
  %169 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %165, align 8
  %170 = icmp eq %"class.blink::NGFragmentItem"* %169, null
  br i1 %170, label %171, label %168

171:                                              ; preds = %168, %160
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %162) #19
  br label %172

172:                                              ; preds = %153, %155, %171
  ret void
}

declare dereferenceable(160) %"class.blink::RootInlineBox"* @_ZN5blink9InlineBox4RootEv(%"class.blink::InlineBox"*) local_unnamed_addr #1

declare void @_ZN5blink9InlineBox6RemoveENS_13MarkLineBoxesE(%"class.blink::InlineBox"*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink10LayoutText28FirstInlineFragmentItemIndexEv(%"class.blink::LayoutText"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 268435456
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9
  %9 = bitcast %union.anon.3033* %8 to i32*
  %10 = load i32, i32* %9, align 8
  br label %11

11:                                               ; preds = %1, %7
  %12 = phi i32 [ %10, %7 ], [ 0, %1 ]
  ret i32 %12
}

declare void @_ZN5blink15NGFragmentItems27LayoutObjectWillBeDestroyedERKNS_12LayoutObjectE(%"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutText33ClearFirstInlineFragmentItemIndexEv(%"class.blink::LayoutText"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::NGInlineCursor", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %6 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %5 to i96*
  %7 = load i96, i96* %6, align 4
  %8 = and i96 %7, 268435456
  %9 = icmp eq i96 %8, 0
  br i1 %9, label %10, label %14

10:                                               ; preds = %1
  %11 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #19
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0), i32 329, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #19
  %12 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #19
  %13 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN5blinklsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_12LayoutObjectE(%"class.std::__1::basic_ostream"* dereferenceable(160) %12, %"class.blink::LayoutObject"* dereferenceable(88) %4) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #19
  br label %14

14:                                               ; preds = %1, %10
  %15 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 1
  %16 = load i16, i16* %15, align 8
  %17 = and i16 %16, 16384
  %18 = icmp eq i16 %17, 0
  br i1 %18, label %31, label %19, !prof !4

19:                                               ; preds = %14
  %20 = and i16 %16, -16385
  store i16 %20, i16* %15, align 8
  %21 = bitcast %"class.blink::NGInlineCursor"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %21) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 112, i1 false) #19
  %22 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %2, i64 0, i32 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 81, i1 false) #19
  %23 = bitcast %"class.blink::LayoutBlockFlow"** %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 20, i1 false) #19
  call void @_ZN5blink14NGInlineCursor6MoveToERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"* nonnull %2, %"class.blink::LayoutObject"* dereferenceable(88) %4) #19
  %24 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %2, i64 0, i32 0, i32 0
  %25 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %24, align 8
  %26 = icmp eq %"class.blink::NGFragmentItem"* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %27
  call void @_ZN5blink23NGAbstractInlineTextBox11WillDestroyERKNS_14NGInlineCursorE(%"class.blink::NGInlineCursor"* nonnull dereferenceable(112) %2) #19
  call void @_ZN5blink14NGInlineCursor29MoveToNextForSameLayoutObjectEv(%"class.blink::NGInlineCursor"* nonnull %2) #19
  %28 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %24, align 8
  %29 = icmp eq %"class.blink::NGFragmentItem"* %28, null
  br i1 %29, label %30, label %27

30:                                               ; preds = %27, %19
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %21) #19
  br label %31

31:                                               ; preds = %14, %30
  %32 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9
  %33 = bitcast %union.anon.3033* %32 to i32*
  store i32 0, i32* %33, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutText15DeleteTextBoxesEv(%"class.blink::LayoutText"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::NGInlineCursor", align 8
  %3 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %5 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %4 to i96*
  %6 = load i96, i96* %5, align 4
  %7 = and i96 %6, 268435456
  %8 = icmp eq i96 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0, i32 0
  call void @_ZN5blink13InlineBoxListINS_13InlineTextBoxEE15DeleteLineBoxesEv(%"class.blink::InlineBoxList.3034"* %10) #19
  br label %28

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 1
  %13 = load i16, i16* %12, align 8
  %14 = and i16 %13, 16384
  %15 = icmp eq i16 %14, 0
  br i1 %15, label %28, label %16, !prof !4

16:                                               ; preds = %11
  %17 = and i16 %13, -16385
  store i16 %17, i16* %12, align 8
  %18 = bitcast %"class.blink::NGInlineCursor"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %18) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 112, i1 false) #19
  %19 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %2, i64 0, i32 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 81, i1 false) #19
  %20 = bitcast %"class.blink::LayoutBlockFlow"** %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 20, i1 false) #19
  call void @_ZN5blink14NGInlineCursor6MoveToERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"* nonnull %2, %"class.blink::LayoutObject"* dereferenceable(88) %3) #19
  %21 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %2, i64 0, i32 0, i32 0
  %22 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %21, align 8
  %23 = icmp eq %"class.blink::NGFragmentItem"* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %16, %24
  call void @_ZN5blink23NGAbstractInlineTextBox11WillDestroyERKNS_14NGInlineCursorE(%"class.blink::NGInlineCursor"* nonnull dereferenceable(112) %2) #19
  call void @_ZN5blink14NGInlineCursor29MoveToNextForSameLayoutObjectEv(%"class.blink::NGInlineCursor"* nonnull %2) #19
  %25 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %21, align 8
  %26 = icmp eq %"class.blink::NGFragmentItem"* %25, null
  br i1 %26, label %27, label %24

27:                                               ; preds = %24, %16
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %18) #19
  br label %28

28:                                               ; preds = %27, %11, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutText15WillBeDestroyedEv(%"class.blink::LayoutText"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::LayoutText"*, align 8
  %3 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  %4 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_119GetSecureTextTimersEvE5s_map to i8*) acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %10, !prof !5

6:                                                ; preds = %1
  %7 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_119GetSecureTextTimersEvE5s_map) #19
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %6
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_119GetSecureTextTimersEvE5s_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #19
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_119GetSecureTextTimersEvE5s_map) #19
  br label %10

10:                                               ; preds = %1, %6, %9
  %11 = ptrtoint %"class.blink::LayoutText"* %0 to i64
  %12 = load %"struct.WTF::KeyValuePair.3039"*, %"struct.WTF::KeyValuePair.3039"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_119GetSecureTextTimersEvE5s_map to %"struct.WTF::KeyValuePair.3039"**), align 8
  %13 = icmp eq %"struct.WTF::KeyValuePair.3039"* %12, null
  %14 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_119GetSecureTextTimersEvE5s_map, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  br i1 %13, label %76, label %15

15:                                               ; preds = %10
  %16 = add i32 %14, -1
  %17 = zext i32 %16 to i64
  %18 = shl i64 %11, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %19, %11
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %16, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.3039", %"struct.WTF::KeyValuePair.3039"* %12, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.3039", %"struct.WTF::KeyValuePair.3039"* %39, i64 0, i32 0
  %41 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %40, align 8
  %42 = icmp eq %"class.blink::LayoutText"* %41, %0
  br i1 %42, label %71, label %43

43:                                               ; preds = %15
  %44 = xor i32 %36, -1
  %45 = lshr i32 %36, 23
  %46 = add i32 %45, %44
  %47 = shl i32 %46, 12
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 7
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 2
  %52 = xor i32 %51, %50
  %53 = lshr i32 %52, 20
  %54 = xor i32 %53, %52
  %55 = or i32 %54, 1
  %56 = zext i32 %55 to i64
  br label %57

57:                                               ; preds = %62, %43
  %58 = phi %"class.blink::LayoutText"* [ %41, %43 ], [ %69, %62 ]
  %59 = phi i64 [ %38, %43 ], [ %66, %62 ]
  %60 = phi i64 [ 0, %43 ], [ %64, %62 ]
  %61 = icmp eq %"class.blink::LayoutText"* %58, null
  br i1 %61, label %76, label %62

62:                                               ; preds = %57
  %63 = icmp eq i64 %60, 0
  %64 = select i1 %63, i64 %56, i64 %60
  %65 = add i64 %64, %59
  %66 = and i64 %65, %17
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.3039", %"struct.WTF::KeyValuePair.3039"* %12, i64 %66
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.3039", %"struct.WTF::KeyValuePair.3039"* %67, i64 0, i32 0
  %69 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %68, align 8
  %70 = icmp eq %"class.blink::LayoutText"* %69, %0
  br i1 %70, label %71, label %57

71:                                               ; preds = %62, %15
  %72 = phi %"struct.WTF::KeyValuePair.3039"* [ %39, %15 ], [ %67, %62 ]
  %73 = icmp eq %"struct.WTF::KeyValuePair.3039"* %72, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %71
  %75 = zext i32 %14 to i64
  br label %79

76:                                               ; preds = %57, %71, %10
  %77 = zext i32 %14 to i64
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.3039", %"struct.WTF::KeyValuePair.3039"* %12, i64 %77
  br label %79

79:                                               ; preds = %76, %74
  %80 = phi i64 [ %75, %74 ], [ %77, %76 ]
  %81 = phi %"struct.WTF::KeyValuePair.3039"* [ %72, %74 ], [ %78, %76 ]
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.3039", %"struct.WTF::KeyValuePair.3039"* %12, i64 %80
  %83 = icmp eq %"struct.WTF::KeyValuePair.3039"* %81, %82
  br i1 %83, label %110, label %84

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.3039", %"struct.WTF::KeyValuePair.3039"* %81, i64 0, i32 1
  %86 = load %"class.blink::(anonymous namespace)::SecureTextTimer"*, %"class.blink::(anonymous namespace)::SecureTextTimer"** %85, align 8
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair.3039", %"struct.WTF::KeyValuePair.3039"* %81, i64 0, i32 0
  store %"class.blink::LayoutText"* inttoptr (i64 -1 to %"class.blink::LayoutText"*), %"class.blink::LayoutText"** %87, align 8
  %88 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_119GetSecureTextTimersEvE5s_map, i64 0, i32 0, i32 0, i64 16) to i32*), align 8
  %89 = add i32 %88, 1
  %90 = and i32 %89, 2147483647
  %91 = and i32 %88, -2147483648
  %92 = or i32 %90, %91
  store i32 %92, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_119GetSecureTextTimersEvE5s_map, i64 0, i32 0, i32 0, i64 16) to i32*), align 8
  %93 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_119GetSecureTextTimersEvE5s_map, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %94 = add i32 %93, -1
  store i32 %94, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_119GetSecureTextTimersEvE5s_map, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %95 = mul i32 %94, 6
  %96 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_119GetSecureTextTimersEvE5s_map, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %97 = icmp ult i32 %95, %96
  %98 = icmp ugt i32 %96, 8
  %99 = and i1 %97, %98
  br i1 %99, label %100, label %103

100:                                              ; preds = %84
  %101 = lshr i32 %96, 1
  %102 = tail call fastcc %"struct.WTF::KeyValuePair.3039"* @_ZN3WTF9HashTableIPN5blink10LayoutTextENS_12KeyValuePairIS3_PNS1_12_GLOBAL__N_115SecureTextTimerEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6RehashEjPS8_(i32 %101, %"struct.WTF::KeyValuePair.3039"* null) #19
  br label %103

103:                                              ; preds = %84, %100
  %104 = icmp eq %"class.blink::(anonymous namespace)::SecureTextTimer"* %86, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %103
  %106 = bitcast %"class.blink::(anonymous namespace)::SecureTextTimer"* %86 to void (%"class.blink::(anonymous namespace)::SecureTextTimer"*)***
  %107 = load void (%"class.blink::(anonymous namespace)::SecureTextTimer"*)**, void (%"class.blink::(anonymous namespace)::SecureTextTimer"*)*** %106, align 8
  %108 = getelementptr inbounds void (%"class.blink::(anonymous namespace)::SecureTextTimer"*)*, void (%"class.blink::(anonymous namespace)::SecureTextTimer"*)** %107, i64 1
  %109 = load void (%"class.blink::(anonymous namespace)::SecureTextTimer"*)*, void (%"class.blink::(anonymous namespace)::SecureTextTimer"*)** %108, align 8
  tail call void %109(%"class.blink::(anonymous namespace)::SecureTextTimer"* nonnull %86) #19
  br label %110

110:                                              ; preds = %79, %103, %105
  %111 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_132GetSelectionDisplayItemClientMapEvE5s_map to i8*) acquire, align 8
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %113, label %117, !prof !5

113:                                              ; preds = %110
  %114 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_132GetSelectionDisplayItemClientMapEvE5s_map) #19
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %117, label %116

116:                                              ; preds = %113
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton.3329", %"class.WTF::StaticSingleton.3329"* @_ZZN5blink12_GLOBAL__N_132GetSelectionDisplayItemClientMapEvE5s_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #19
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_132GetSelectionDisplayItemClientMapEvE5s_map) #19
  br label %117

117:                                              ; preds = %110, %113, %116
  %118 = bitcast %"class.blink::LayoutText"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118) #19
  store %"class.blink::LayoutText"* %0, %"class.blink::LayoutText"** %2, align 8
  call fastcc void @_ZN3WTF7HashMapIPKN5blink10LayoutTextENSt3__110unique_ptrINS1_12_GLOBAL__N_126SelectionDisplayItemClientENS5_14default_deleteIS8_EEEENS_7PtrHashIS3_EENS_10HashTraitsIS4_EENSE_ISB_EENS_18PartitionAllocatorEE5eraseERKS4_(%"class.blink::LayoutText"** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #19
  %119 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 2
  %120 = load i32, i32* %119, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %152, label %122

122:                                              ; preds = %117
  %123 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %124 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %123 to i96*
  %125 = load i96, i96* %124, align 4
  %126 = and i96 %125, 16777216
  %127 = icmp eq i96 %126, 0
  br i1 %127, label %128, label %151

128:                                              ; preds = %122
  %129 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  %130 = load %"class.blink::Node"*, %"class.blink::Node"** %129, align 8
  %131 = icmp eq %"class.blink::Node"* %130, null
  br i1 %131, label %151, label %132

132:                                              ; preds = %128
  %133 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %130, i64 0, i32 3, i32 0, i32 0
  %134 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %133, align 8
  %135 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %134, i64 0, i32 2, i32 0, i32 0
  %136 = load %"class.blink::Document"*, %"class.blink::Document"** %135, align 8
  %137 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %136) #19
  %138 = icmp eq %"class.blink::LocalFrame"* %137, null
  br i1 %138, label %151, label %139

139:                                              ; preds = %132
  %140 = tail call dereferenceable(1176) %"class.blink::LocalFrame"* @_ZNK5blink10LocalFrame14LocalFrameRootEv(%"class.blink::LocalFrame"* nonnull %137) #19
  %141 = tail call %"class.blink::ContentCaptureManager"* @_ZN5blink10LocalFrame24GetContentCaptureManagerEv(%"class.blink::LocalFrame"* %140) #19
  %142 = icmp eq %"class.blink::ContentCaptureManager"* %141, null
  br i1 %142, label %151, label %143

143:                                              ; preds = %139
  %144 = load i96, i96* %124, align 4
  %145 = and i96 %144, 16777216
  %146 = icmp eq i96 %145, 0
  br i1 %146, label %147, label %149

147:                                              ; preds = %143
  %148 = load %"class.blink::Node"*, %"class.blink::Node"** %129, align 8
  br label %149

149:                                              ; preds = %143, %147
  %150 = phi %"class.blink::Node"* [ %148, %147 ], [ null, %143 ]
  tail call void @_ZN5blink21ContentCaptureManager27OnLayoutTextWillBeDestroyedERKNS_4NodeE(%"class.blink::ContentCaptureManager"* nonnull %141, %"class.blink::Node"* dereferenceable(64) %150) #19
  br label %151

151:                                              ; preds = %132, %122, %128, %139, %149
  store i32 0, i32* %119, align 4
  br label %152

152:                                              ; preds = %117, %151
  tail call void @_ZN5blink10LayoutText25RemoveAndDestroyTextBoxesEv(%"class.blink::LayoutText"* %0)
  tail call void @_ZN5blink12LayoutObject15WillBeDestroyedEv(%"class.blink::LayoutObject"* %3) #19
  %153 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 1
  %154 = load i16, i16* %153, align 8
  %155 = and i16 %154, -129
  store i16 %155, i16* %153, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @_ZN3WTF7HashMapIPKN5blink10LayoutTextENSt3__110unique_ptrINS1_12_GLOBAL__N_126SelectionDisplayItemClientENS5_14default_deleteIS8_EEEENS_7PtrHashIS3_EENS_10HashTraitsIS4_EENSE_ISB_EENS_18PartitionAllocatorEE5eraseERKS4_(%"class.blink::LayoutText"** nocapture readonly dereferenceable(8)) unnamed_addr #5 align 2 {
  %2 = load %"struct.WTF::KeyValuePair.3044"*, %"struct.WTF::KeyValuePair.3044"** bitcast (%"class.WTF::StaticSingleton.3329"* @_ZZN5blink12_GLOBAL__N_132GetSelectionDisplayItemClientMapEvE5s_map to %"struct.WTF::KeyValuePair.3044"**), align 8
  %3 = icmp eq %"struct.WTF::KeyValuePair.3044"* %2, null
  %4 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.3329", %"class.WTF::StaticSingleton.3329"* @_ZZN5blink12_GLOBAL__N_132GetSelectionDisplayItemClientMapEvE5s_map, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  br i1 %3, label %69, label %5

5:                                                ; preds = %1
  %6 = add i32 %4, -1
  %7 = zext i32 %6 to i64
  %8 = bitcast %"class.blink::LayoutText"** %0 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = shl i64 %9, 32
  %11 = xor i64 %10, -1
  %12 = add i64 %9, %11
  %13 = lshr i64 %12, 22
  %14 = xor i64 %13, %12
  %15 = shl i64 %14, 13
  %16 = xor i64 %15, -1
  %17 = add i64 %14, %16
  %18 = lshr i64 %17, 8
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, 9
  %21 = lshr i64 %20, 15
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 27
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 31
  %27 = xor i64 %26, %25
  %28 = trunc i64 %27 to i32
  %29 = and i32 %6, %28
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.3044", %"struct.WTF::KeyValuePair.3044"* %2, i64 %30
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.3044", %"struct.WTF::KeyValuePair.3044"* %31, i64 0, i32 0
  %33 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %32, align 8
  %34 = inttoptr i64 %9 to %"class.blink::LayoutText"*
  %35 = icmp eq %"class.blink::LayoutText"* %33, %34
  br i1 %35, label %64, label %36

36:                                               ; preds = %5
  %37 = xor i32 %28, -1
  %38 = lshr i32 %28, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %55, %36
  %51 = phi %"class.blink::LayoutText"* [ %33, %36 ], [ %62, %55 ]
  %52 = phi i64 [ %30, %36 ], [ %59, %55 ]
  %53 = phi i64 [ 0, %36 ], [ %57, %55 ]
  %54 = icmp eq %"class.blink::LayoutText"* %51, null
  br i1 %54, label %69, label %55

55:                                               ; preds = %50
  %56 = icmp eq i64 %53, 0
  %57 = select i1 %56, i64 %49, i64 %53
  %58 = add i64 %57, %52
  %59 = and i64 %58, %7
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair.3044", %"struct.WTF::KeyValuePair.3044"* %2, i64 %59
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.3044", %"struct.WTF::KeyValuePair.3044"* %60, i64 0, i32 0
  %62 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %61, align 8
  %63 = icmp eq %"class.blink::LayoutText"* %62, %34
  br i1 %63, label %64, label %50

64:                                               ; preds = %55, %5
  %65 = phi %"struct.WTF::KeyValuePair.3044"* [ %31, %5 ], [ %60, %55 ]
  %66 = icmp eq %"struct.WTF::KeyValuePair.3044"* %65, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %64
  %68 = zext i32 %4 to i64
  br label %72

69:                                               ; preds = %50, %64, %1
  %70 = zext i32 %4 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.3044", %"struct.WTF::KeyValuePair.3044"* %2, i64 %70
  br label %72

72:                                               ; preds = %67, %69
  %73 = phi i64 [ %68, %67 ], [ %70, %69 ]
  %74 = phi %"struct.WTF::KeyValuePair.3044"* [ %65, %67 ], [ %71, %69 ]
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.3044", %"struct.WTF::KeyValuePair.3044"* %2, i64 %73
  %76 = icmp eq %"struct.WTF::KeyValuePair.3044"* %75, %74
  br i1 %76, label %103, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.3044", %"struct.WTF::KeyValuePair.3044"* %74, i64 0, i32 1, i32 0, i32 0, i32 0
  %79 = load %"class.blink::(anonymous namespace)::SelectionDisplayItemClient"*, %"class.blink::(anonymous namespace)::SelectionDisplayItemClient"** %78, align 8
  store %"class.blink::(anonymous namespace)::SelectionDisplayItemClient"* null, %"class.blink::(anonymous namespace)::SelectionDisplayItemClient"** %78, align 8
  %80 = icmp eq %"class.blink::(anonymous namespace)::SelectionDisplayItemClient"* %79, null
  br i1 %80, label %86, label %81

81:                                               ; preds = %77
  %82 = bitcast %"class.blink::(anonymous namespace)::SelectionDisplayItemClient"* %79 to void (%"class.blink::(anonymous namespace)::SelectionDisplayItemClient"*)***
  %83 = load void (%"class.blink::(anonymous namespace)::SelectionDisplayItemClient"*)**, void (%"class.blink::(anonymous namespace)::SelectionDisplayItemClient"*)*** %82, align 8
  %84 = getelementptr inbounds void (%"class.blink::(anonymous namespace)::SelectionDisplayItemClient"*)*, void (%"class.blink::(anonymous namespace)::SelectionDisplayItemClient"*)** %83, i64 1
  %85 = load void (%"class.blink::(anonymous namespace)::SelectionDisplayItemClient"*)*, void (%"class.blink::(anonymous namespace)::SelectionDisplayItemClient"*)** %84, align 8
  tail call void %85(%"class.blink::(anonymous namespace)::SelectionDisplayItemClient"* nonnull %79) #19
  br label %86

86:                                               ; preds = %81, %77
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair.3044", %"struct.WTF::KeyValuePair.3044"* %74, i64 0, i32 0
  store %"class.blink::LayoutText"* inttoptr (i64 -1 to %"class.blink::LayoutText"*), %"class.blink::LayoutText"** %87, align 8
  %88 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.3329", %"class.WTF::StaticSingleton.3329"* @_ZZN5blink12_GLOBAL__N_132GetSelectionDisplayItemClientMapEvE5s_map, i64 0, i32 0, i32 0, i64 16) to i32*), align 8
  %89 = add i32 %88, 1
  %90 = and i32 %89, 2147483647
  %91 = and i32 %88, -2147483648
  %92 = or i32 %90, %91
  store i32 %92, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.3329", %"class.WTF::StaticSingleton.3329"* @_ZZN5blink12_GLOBAL__N_132GetSelectionDisplayItemClientMapEvE5s_map, i64 0, i32 0, i32 0, i64 16) to i32*), align 8
  %93 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.3329", %"class.WTF::StaticSingleton.3329"* @_ZZN5blink12_GLOBAL__N_132GetSelectionDisplayItemClientMapEvE5s_map, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %94 = add i32 %93, -1
  store i32 %94, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.3329", %"class.WTF::StaticSingleton.3329"* @_ZZN5blink12_GLOBAL__N_132GetSelectionDisplayItemClientMapEvE5s_map, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %95 = mul i32 %94, 6
  %96 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.3329", %"class.WTF::StaticSingleton.3329"* @_ZZN5blink12_GLOBAL__N_132GetSelectionDisplayItemClientMapEvE5s_map, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %97 = icmp ult i32 %95, %96
  %98 = icmp ugt i32 %96, 8
  %99 = and i1 %97, %98
  br i1 %99, label %100, label %103

100:                                              ; preds = %86
  %101 = lshr i32 %96, 1
  %102 = tail call fastcc %"struct.WTF::KeyValuePair.3044"* @_ZN3WTF9HashTableIPKN5blink10LayoutTextENS_12KeyValuePairIS4_NSt3__110unique_ptrINS1_12_GLOBAL__N_126SelectionDisplayItemClientENS6_14default_deleteIS9_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSI_ISC_EEEESJ_NS_18PartitionAllocatorEE6RehashEjPSD_(i32 %101, %"struct.WTF::KeyValuePair.3044"* null) #19
  br label %103

103:                                              ; preds = %72, %86, %100
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ContentCaptureManager"* @_ZN5blink10LayoutText24GetContentCaptureManagerEv(%"class.blink::LayoutText"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 16777216
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %7, label %21

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  %9 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  %10 = icmp eq %"class.blink::Node"* %9, null
  br i1 %10, label %21, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  %16 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %15) #19
  %17 = icmp eq %"class.blink::LocalFrame"* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %11
  %19 = tail call dereferenceable(1176) %"class.blink::LocalFrame"* @_ZNK5blink10LocalFrame14LocalFrameRootEv(%"class.blink::LocalFrame"* nonnull %16) #19
  %20 = tail call %"class.blink::ContentCaptureManager"* @_ZN5blink10LocalFrame24GetContentCaptureManagerEv(%"class.blink::LocalFrame"* %19) #19
  br label %21

21:                                               ; preds = %11, %1, %7, %18
  %22 = phi %"class.blink::ContentCaptureManager"* [ %20, %18 ], [ null, %7 ], [ null, %1 ], [ null, %11 ]
  ret %"class.blink::ContentCaptureManager"* %22
}

declare void @_ZN5blink21ContentCaptureManager27OnLayoutTextWillBeDestroyedERKNS_4NodeE(%"class.blink::ContentCaptureManager"*, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject15WillBeDestroyedEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutText14ExtractTextBoxEPNS_13InlineTextBoxE(%"class.blink::LayoutText"*, %"class.blink::InlineTextBox"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %5 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %4 to i96*
  %6 = load i96, i96* %5, align 4
  %7 = and i96 %6, 268435456
  %8 = icmp eq i96 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #19
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0), i32 604, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.6, i64 0, i64 0)) #19
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #19
  br label %12

12:                                               ; preds = %2, %9
  %13 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0, i32 0
  call void @_ZN5blink13InlineBoxListINS_13InlineTextBoxEE14ExtractLineBoxEPS1_(%"class.blink::InlineBoxList.3034"* %13, %"class.blink::InlineTextBox"* %1) #19
  ret void
}

declare void @_ZN5blink13InlineBoxListINS_13InlineTextBoxEE14ExtractLineBoxEPS1_(%"class.blink::InlineBoxList.3034"*, %"class.blink::InlineTextBox"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutText13AttachTextBoxEPNS_13InlineTextBoxE(%"class.blink::LayoutText"*, %"class.blink::InlineTextBox"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %5 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %4 to i96*
  %6 = load i96, i96* %5, align 4
  %7 = and i96 %6, 268435456
  %8 = icmp eq i96 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #19
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0), i32 604, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.6, i64 0, i64 0)) #19
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #19
  br label %12

12:                                               ; preds = %2, %9
  %13 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0, i32 0
  call void @_ZN5blink13InlineBoxListINS_13InlineTextBoxEE13AttachLineBoxEPS1_(%"class.blink::InlineBoxList.3034"* %13, %"class.blink::InlineTextBox"* %1) #19
  ret void
}

declare void @_ZN5blink13InlineBoxListINS_13InlineTextBoxEE13AttachLineBoxEPS1_(%"class.blink::InlineBoxList.3034"*, %"class.blink::InlineTextBox"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutText13RemoveTextBoxEPNS_13InlineTextBoxE(%"class.blink::LayoutText"*, %"class.blink::InlineTextBox"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %5 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %4 to i96*
  %6 = load i96, i96* %5, align 4
  %7 = and i96 %6, 268435456
  %8 = icmp eq i96 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #19
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0), i32 604, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.6, i64 0, i64 0)) #19
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #19
  br label %12

12:                                               ; preds = %2, %9
  %13 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0, i32 0
  call void @_ZN5blink13InlineBoxListINS_13InlineTextBoxEE13RemoveLineBoxEPS1_(%"class.blink::InlineBoxList.3034"* %13, %"class.blink::InlineTextBox"* %1) #19
  ret void
}

declare void @_ZN5blink13InlineBoxListINS_13InlineTextBoxEE13RemoveLineBoxEPS1_(%"class.blink::InlineBoxList.3034"*, %"class.blink::InlineTextBox"*) local_unnamed_addr #1

declare void @_ZN5blink13InlineBoxListINS_13InlineTextBoxEE15DeleteLineBoxesEv(%"class.blink::InlineBoxList.3034"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutText29DetachAbstractInlineTextBoxesEv(%"class.blink::LayoutText"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::NGInlineCursor", align 8
  %3 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 1
  %5 = load i16, i16* %4, align 8
  %6 = and i16 %5, -16385
  store i16 %6, i16* %4, align 8
  %7 = bitcast %"class.blink::NGInlineCursor"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %7) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 112, i1 false)
  %8 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %2, i64 0, i32 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 81, i1 false) #19
  %9 = bitcast %"class.blink::LayoutBlockFlow"** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 20, i1 false) #19
  call void @_ZN5blink14NGInlineCursor6MoveToERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"* nonnull %2, %"class.blink::LayoutObject"* dereferenceable(88) %3) #19
  %10 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %2, i64 0, i32 0, i32 0
  %11 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %10, align 8
  %12 = icmp eq %"class.blink::NGFragmentItem"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %1, %13
  call void @_ZN5blink23NGAbstractInlineTextBox11WillDestroyERKNS_14NGInlineCursorE(%"class.blink::NGInlineCursor"* nonnull dereferenceable(112) %2) #19
  call void @_ZN5blink14NGInlineCursor29MoveToNextForSameLayoutObjectEv(%"class.blink::NGInlineCursor"* nonnull %2) #19
  %14 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %10, align 8
  %15 = icmp eq %"class.blink::NGFragmentItem"* %14, null
  br i1 %15, label %16, label %13

16:                                               ; preds = %13, %1
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %7) #19
  ret void
}

declare void @_ZN5blink14NGInlineCursor6MoveToERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"*, %"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #1

declare void @_ZN5blink23NGAbstractInlineTextBox11WillDestroyERKNS_14NGInlineCursorE(%"class.blink::NGInlineCursor"* dereferenceable(112)) local_unnamed_addr #1

declare void @_ZN5blink14NGInlineCursor29MoveToNextForSameLayoutObjectEv(%"class.blink::NGInlineCursor"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN5blinklsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_12LayoutObjectE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutText31SetFirstInlineFragmentItemIndexEj(%"class.blink::LayoutText"*, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::NGInlineCursor", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %7 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %6 to i96*
  %8 = load i96, i96* %7, align 4
  %9 = and i96 %8, 268435456
  %10 = icmp eq i96 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %2
  %12 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #19
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0), i32 336, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #19
  %13 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #19
  br label %14

14:                                               ; preds = %2, %11
  %15 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 1
  %16 = load i16, i16* %15, align 8
  %17 = and i16 %16, 16384
  %18 = icmp eq i16 %17, 0
  br i1 %18, label %31, label %19, !prof !4

19:                                               ; preds = %14
  %20 = and i16 %16, -16385
  store i16 %20, i16* %15, align 8
  %21 = bitcast %"class.blink::NGInlineCursor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %21) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 112, i1 false) #19
  %22 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %3, i64 0, i32 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 81, i1 false) #19
  %23 = bitcast %"class.blink::LayoutBlockFlow"** %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 20, i1 false) #19
  call void @_ZN5blink14NGInlineCursor6MoveToERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"* nonnull %3, %"class.blink::LayoutObject"* dereferenceable(88) %5) #19
  %24 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %3, i64 0, i32 0, i32 0
  %25 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %24, align 8
  %26 = icmp eq %"class.blink::NGFragmentItem"* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %27
  call void @_ZN5blink23NGAbstractInlineTextBox11WillDestroyERKNS_14NGInlineCursorE(%"class.blink::NGInlineCursor"* nonnull dereferenceable(112) %3) #19
  call void @_ZN5blink14NGInlineCursor29MoveToNextForSameLayoutObjectEv(%"class.blink::NGInlineCursor"* nonnull %3) #19
  %28 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %24, align 8
  %29 = icmp eq %"class.blink::NGFragmentItem"* %28, null
  br i1 %29, label %30, label %27

30:                                               ; preds = %27, %19
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %21) #19
  br label %31

31:                                               ; preds = %14, %30
  %32 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9
  %33 = bitcast %union.anon.3033* %32 to i32*
  store i32 %1, i32* %33, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutText43InLayoutNGInlineFormattingContextWillChangeEb(%"class.blink::LayoutText"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = and i96 %5, 268435456
  %7 = icmp eq i96 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %2
  tail call void @_ZN5blink10LayoutText33ClearFirstInlineFragmentItemIndexEv(%"class.blink::LayoutText"* %0)
  br label %11

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0, i32 0
  tail call void @_ZN5blink13InlineBoxListINS_13InlineTextBoxEE15DeleteLineBoxesEv(%"class.blink::InlineBoxList.3034"* %10) #19
  br label %11

11:                                               ; preds = %9, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink10LayoutText14GetTextBoxInfoEv(%"class.WTF::Vector.3066"* noalias sret, %"class.blink::LayoutText"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::NGInlineCursor", align 8
  %4 = alloca %"class.base::CheckedContiguousIterator.3072", align 8
  %5 = alloca %"class.base::CheckedContiguousIterator.3072", align 8
  %6 = alloca %"class.blink::PositionTemplate", align 8
  %7 = alloca %"struct.blink::LayoutText::TextBoxInfo", align 8
  %8 = alloca %"struct.blink::LayoutText::TextBoxInfo", align 8
  %9 = alloca %"struct.blink::LayoutText::TextBoxInfo", align 8
  %10 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %1, i64 0, i32 0
  %11 = tail call %"class.blink::FontCache"* @_ZN5blink9FontCache12GetFontCacheENS_14CreateIfNeededE(i32 1) #19
  %12 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %11, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = add nsw i32 %13, 1
  store i32 %14, i32* %12, align 4
  %15 = getelementptr inbounds %"class.WTF::Vector.3066", %"class.WTF::Vector.3066"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.WTF::Vector.3066", %"class.WTF::Vector.3066"* %0, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::Vector.3066", %"class.WTF::Vector.3066"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = bitcast %"class.WTF::Vector.3066"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false) #19
  %19 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase33is_css_container_queries_enabled_E, align 1, !range !2
  %20 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase26is_layout_ng_grid_enabled_E, align 1
  %21 = or i8 %20, %19
  %22 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase31is_bidi_caret_affinity_enabled_E, align 1
  %23 = or i8 %21, %22
  %24 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase21is_layout_ng_enabled_E, align 1
  %25 = or i8 %23, %24
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %181, label %27

27:                                               ; preds = %2
  %28 = tail call %"class.blink::NGOffsetMapping"* @_ZN5blink15NGOffsetMapping6GetForEPKNS_12LayoutObjectE(%"class.blink::LayoutObject"* %10) #19
  %29 = icmp eq %"class.blink::NGOffsetMapping"* %28, null
  br i1 %29, label %181, label %30

30:                                               ; preds = %27
  %31 = bitcast %"class.blink::NGInlineCursor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %31) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 112, i1 false)
  %32 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %3, i64 0, i32 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 81, i1 false) #19
  %33 = bitcast %"class.blink::LayoutBlockFlow"** %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 20, i1 false) #19
  call void @_ZN5blink14NGInlineCursor6MoveToERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"* nonnull %3, %"class.blink::LayoutObject"* dereferenceable(88) %10) #19
  %34 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %3, i64 0, i32 0, i32 0
  %35 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %34, align 8
  %36 = icmp eq %"class.blink::NGFragmentItem"* %35, null
  br i1 %36, label %260, label %37

37:                                               ; preds = %30
  %38 = bitcast %"class.base::CheckedContiguousIterator.3072"* %4 to i8*
  %39 = getelementptr inbounds %"class.base::CheckedContiguousIterator.3072", %"class.base::CheckedContiguousIterator.3072"* %4, i64 0, i32 1
  %40 = bitcast %"class.base::CheckedContiguousIterator.3072"* %5 to i8*
  %41 = getelementptr inbounds %"class.base::CheckedContiguousIterator.3072", %"class.base::CheckedContiguousIterator.3072"* %5, i64 0, i32 1
  %42 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  %43 = bitcast %"class.blink::LayoutText"* %1 to i64 (%"class.blink::LayoutText"*, %"class.blink::PositionTemplate"*)***
  %44 = bitcast %"struct.blink::LayoutText::TextBoxInfo"* %7 to i8*
  %45 = bitcast %"struct.blink::LayoutText::TextBoxInfo"* %7 to i64*
  %46 = getelementptr inbounds %"struct.blink::LayoutText::TextBoxInfo", %"struct.blink::LayoutText::TextBoxInfo"* %7, i64 0, i32 0, i32 1
  %47 = bitcast %"class.blink::LayoutSize"* %46 to i64*
  %48 = getelementptr inbounds %"struct.blink::LayoutText::TextBoxInfo", %"struct.blink::LayoutText::TextBoxInfo"* %7, i64 0, i32 1
  %49 = getelementptr inbounds %"struct.blink::LayoutText::TextBoxInfo", %"struct.blink::LayoutText::TextBoxInfo"* %7, i64 0, i32 2
  %50 = bitcast %"struct.blink::LayoutText::TextBoxInfo"* %8 to i8*
  %51 = bitcast %"struct.blink::LayoutText::TextBoxInfo"* %8 to i64*
  %52 = getelementptr inbounds %"struct.blink::LayoutText::TextBoxInfo", %"struct.blink::LayoutText::TextBoxInfo"* %8, i64 0, i32 0, i32 1
  %53 = bitcast %"class.blink::LayoutSize"* %52 to i64*
  %54 = getelementptr inbounds %"struct.blink::LayoutText::TextBoxInfo", %"struct.blink::LayoutText::TextBoxInfo"* %8, i64 0, i32 1
  %55 = getelementptr inbounds %"struct.blink::LayoutText::TextBoxInfo", %"struct.blink::LayoutText::TextBoxInfo"* %8, i64 0, i32 2
  %56 = bitcast %"class.base::CheckedContiguousIterator.3072"* %4 to i8*
  %57 = bitcast %"class.base::CheckedContiguousIterator.3072"* %5 to i8*
  br label %58

58:                                               ; preds = %37, %178
  %59 = phi %"class.blink::NGFragmentItem"* [ %35, %37 ], [ %179, %178 ]
  %60 = phi i8 [ 0, %37 ], [ %69, %178 ]
  %61 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %59, i64 0, i32 6
  %62 = load i16, i16* %61, align 8
  %63 = and i16 %62, 256
  %64 = icmp eq i16 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %58
  %66 = and i8 %60, 1
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %68, label %260

68:                                               ; preds = %58, %65
  %69 = phi i8 [ %60, %65 ], [ 1, %58 ]
  %70 = and i16 %62, 7
  %71 = icmp eq i16 %70, 2
  br i1 %71, label %178, label %72

72:                                               ; preds = %68
  %73 = call i64 @_ZNK5blink14NGFragmentItem10TextOffsetEv(%"class.blink::NGFragmentItem"* nonnull %59) #19
  %74 = trunc i64 %73 to i32
  %75 = lshr i64 %73, 32
  %76 = trunc i64 %75 to i32
  %77 = call { i64, %"class.blink::NGOffsetMappingUnit"* } @_ZNK5blink15NGOffsetMapping40GetMappingUnitsForTextContentOffsetRangeEjj(%"class.blink::NGOffsetMapping"* nonnull %28, i32 %74, i32 %76) #19
  %78 = extractvalue { i64, %"class.blink::NGOffsetMappingUnit"* } %77, 0
  %79 = extractvalue { i64, %"class.blink::NGOffsetMappingUnit"* } %77, 1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #19
  %80 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %79, i64 %78
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIKN5blink19NGOffsetMappingUnitEEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator.3072"* nonnull %4, %"class.blink::NGOffsetMappingUnit"* %79, %"class.blink::NGOffsetMappingUnit"* %79, %"class.blink::NGOffsetMappingUnit"* %80) #19
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIKN5blink19NGOffsetMappingUnitEEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator.3072"* nonnull %5, %"class.blink::NGOffsetMappingUnit"* %79, %"class.blink::NGOffsetMappingUnit"* %80, %"class.blink::NGOffsetMappingUnit"* %80) #19
  call void @_ZNK4base25CheckedContiguousIteratorIKN5blink19NGOffsetMappingUnitEE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator.3072"* nonnull %4, %"class.base::CheckedContiguousIterator.3072"* nonnull dereferenceable(24) %5) #19
  %81 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %39, align 8
  %82 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %41, align 8
  %83 = icmp eq %"class.blink::NGOffsetMappingUnit"* %81, %82
  br i1 %83, label %84, label %85

84:                                               ; preds = %173, %72
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #19
  br label %178

85:                                               ; preds = %72, %173
  %86 = call dereferenceable(32) %"class.blink::NGOffsetMappingUnit"* @_ZNK4base25CheckedContiguousIteratorIKN5blink19NGOffsetMappingUnitEEdeEv(%"class.base::CheckedContiguousIterator.3072"* nonnull %4)
  %87 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %86, i64 0, i32 0
  %88 = load i32, i32* %87, align 8
  %89 = icmp eq i32 %88, 1
  br i1 %89, label %173, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %86, i64 0, i32 4
  %92 = load i32, i32* %91, align 8
  %93 = icmp ult i32 %92, %74
  %94 = select i1 %93, i32 %74, i32 %92
  %95 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %86, i64 0, i32 5
  %96 = load i32, i32* %95, align 4
  %97 = icmp ugt i32 %96, %76
  %98 = select i1 %97, i32 %76, i32 %96
  %99 = sub i32 %98, %94
  %100 = call { i64, i64 } @_ZNK5blink14NGInlineCursor16CurrentLocalRectEjj(%"class.blink::NGInlineCursor"* nonnull %3, i32 %94, i32 %98) #19
  %101 = extractvalue { i64, i64 } %100, 0
  %102 = lshr i64 %101, 32
  %103 = trunc i64 %102 to i32
  %104 = extractvalue { i64, i64 } %100, 1
  %105 = trunc i64 %101 to i32
  %106 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %34, align 8
  %107 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %106, i64 0, i32 2, i32 0
  %108 = bitcast %"struct.blink::PhysicalOffset"* %107 to i64*
  %109 = load i64, i64* %108, align 4
  %110 = lshr i64 %109, 32
  %111 = trunc i64 %110 to i32
  %112 = trunc i64 %109 to i32
  %113 = icmp slt i32 %112, 0
  %114 = select i1 %113, i32 -2147483648, i32 2147483647
  %115 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %105, i32 %112) #19
  %116 = extractvalue { i32, i1 } %115, 1
  %117 = extractvalue { i32, i1 } %115, 0
  %118 = select i1 %116, i32 %114, i32 %117, !prof !3
  %119 = icmp slt i32 %111, 0
  %120 = select i1 %119, i32 -2147483648, i32 2147483647
  %121 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %103, i32 %111) #19
  %122 = extractvalue { i32, i1 } %121, 1
  %123 = extractvalue { i32, i1 } %121, 0
  %124 = select i1 %122, i32 %120, i32 %123, !prof !3
  %125 = call %"class.blink::Node"* @_ZNK5blink19NGOffsetMappingUnit14AssociatedNodeEv(%"class.blink::NGOffsetMappingUnit"* %86) #19
  %126 = icmp eq %"class.blink::Node"* %125, null
  br i1 %126, label %153, label %127

127:                                              ; preds = %90
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #19
  call void @_ZNK5blink15NGOffsetMapping15GetLastPositionEj(%"class.blink::PositionTemplate"* nonnull sret %6, %"class.blink::NGOffsetMapping"* nonnull %28, i32 %94) #19
  %128 = load i64 (%"class.blink::LayoutText"*, %"class.blink::PositionTemplate"*)**, i64 (%"class.blink::LayoutText"*, %"class.blink::PositionTemplate"*)*** %43, align 8
  %129 = getelementptr inbounds i64 (%"class.blink::LayoutText"*, %"class.blink::PositionTemplate"*)*, i64 (%"class.blink::LayoutText"*, %"class.blink::PositionTemplate"*)** %128, i64 116
  %130 = load i64 (%"class.blink::LayoutText"*, %"class.blink::PositionTemplate"*)*, i64 (%"class.blink::LayoutText"*, %"class.blink::PositionTemplate"*)** %129, align 8
  %131 = call i64 %130(%"class.blink::LayoutText"* %1, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6) #19
  %132 = trunc i64 %131 to i8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #19
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #19
  %133 = zext i32 %124 to i64
  %134 = shl nuw i64 %133, 32
  %135 = zext i32 %118 to i64
  %136 = or i64 %134, %135
  store i64 %136, i64* %45, align 8
  store i64 %104, i64* %47, align 8
  %137 = icmp eq i8 %132, 0
  br i1 %137, label %138, label %139, !prof !3

138:                                              ; preds = %127
  call void @llvm.trap() #19
  unreachable

139:                                              ; preds = %127
  %140 = lshr i64 %131, 32
  %141 = trunc i64 %140 to i32
  store i32 %141, i32* %48, align 8
  store i32 %99, i32* %49, align 4
  %142 = load i32, i32* %17, align 4
  %143 = load i32, i32* %16, align 8
  %144 = icmp eq i32 %142, %143
  br i1 %144, label %152, label %145, !prof !3

145:                                              ; preds = %139
  %146 = load %"struct.blink::LayoutText::TextBoxInfo"*, %"struct.blink::LayoutText::TextBoxInfo"** %15, align 8
  %147 = zext i32 %142 to i64
  %148 = getelementptr inbounds %"struct.blink::LayoutText::TextBoxInfo", %"struct.blink::LayoutText::TextBoxInfo"* %146, i64 %147
  %149 = bitcast %"struct.blink::LayoutText::TextBoxInfo"* %148 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %149, i8* nonnull align 8 %44, i64 24, i1 false) #19
  %150 = load i32, i32* %17, align 4
  %151 = add i32 %150, 1
  store i32 %151, i32* %17, align 4
  br label %171

152:                                              ; preds = %139
  call void @_ZN3WTF6VectorIN5blink10LayoutText11TextBoxInfoELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.3066"* %0, %"struct.blink::LayoutText::TextBoxInfo"* nonnull dereferenceable(24) %7) #19
  br label %171

153:                                              ; preds = %90
  %154 = call %"class.blink::NGOffsetMappingUnit"* @_ZNK5blink15NGOffsetMapping18GetLastMappingUnitEj(%"class.blink::NGOffsetMapping"* nonnull %28, i32 %94) #19
  %155 = call i32 @_ZNK5blink19NGOffsetMappingUnit33ConvertTextContentToLastDOMOffsetEj(%"class.blink::NGOffsetMappingUnit"* %154, i32 %94) #19
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #19
  %156 = zext i32 %124 to i64
  %157 = shl nuw i64 %156, 32
  %158 = zext i32 %118 to i64
  %159 = or i64 %157, %158
  store i64 %159, i64* %51, align 8
  store i64 %104, i64* %53, align 8
  store i32 %155, i32* %54, align 8
  store i32 %99, i32* %55, align 4
  %160 = load i32, i32* %17, align 4
  %161 = load i32, i32* %16, align 8
  %162 = icmp eq i32 %160, %161
  br i1 %162, label %170, label %163, !prof !3

163:                                              ; preds = %153
  %164 = load %"struct.blink::LayoutText::TextBoxInfo"*, %"struct.blink::LayoutText::TextBoxInfo"** %15, align 8
  %165 = zext i32 %160 to i64
  %166 = getelementptr inbounds %"struct.blink::LayoutText::TextBoxInfo", %"struct.blink::LayoutText::TextBoxInfo"* %164, i64 %165
  %167 = bitcast %"struct.blink::LayoutText::TextBoxInfo"* %166 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %167, i8* nonnull align 8 %50, i64 24, i1 false) #19
  %168 = load i32, i32* %17, align 4
  %169 = add i32 %168, 1
  store i32 %169, i32* %17, align 4
  br label %171

170:                                              ; preds = %153
  call void @_ZN3WTF6VectorIN5blink10LayoutText11TextBoxInfoELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.3066"* %0, %"struct.blink::LayoutText::TextBoxInfo"* nonnull dereferenceable(24) %8) #19
  br label %171

171:                                              ; preds = %170, %163, %152, %145
  %172 = phi i8* [ %44, %145 ], [ %44, %152 ], [ %50, %163 ], [ %50, %170 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %172) #19
  br label %173

173:                                              ; preds = %171, %85
  %174 = call dereferenceable(24) %"class.base::CheckedContiguousIterator.3072"* @_ZN4base25CheckedContiguousIteratorIKN5blink19NGOffsetMappingUnitEEppEv(%"class.base::CheckedContiguousIterator.3072"* nonnull %4)
  call void @_ZNK4base25CheckedContiguousIteratorIKN5blink19NGOffsetMappingUnitEE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator.3072"* nonnull %4, %"class.base::CheckedContiguousIterator.3072"* nonnull dereferenceable(24) %5) #19
  %175 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %39, align 8
  %176 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %41, align 8
  %177 = icmp eq %"class.blink::NGOffsetMappingUnit"* %175, %176
  br i1 %177, label %84, label %85

178:                                              ; preds = %68, %84
  call void @_ZN5blink14NGInlineCursor29MoveToNextForSameLayoutObjectEv(%"class.blink::NGInlineCursor"* nonnull %3) #19
  %179 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %34, align 8
  %180 = icmp eq %"class.blink::NGFragmentItem"* %179, null
  br i1 %180, label %260, label %58

181:                                              ; preds = %2, %27
  %182 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %1, i64 0, i32 0, i32 4
  %183 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %182 to i96*
  %184 = load i96, i96* %183, align 4
  %185 = and i96 %184, 268435456
  %186 = icmp eq i96 %185, 0
  br i1 %186, label %189, label %187

187:                                              ; preds = %181
  %188 = tail call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #19
  br label %191

189:                                              ; preds = %181
  %190 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %1, i64 0, i32 9, i32 0
  br label %191

191:                                              ; preds = %187, %189
  %192 = phi %"class.blink::InlineTextBoxList"* [ %188, %187 ], [ %190, %189 ]
  %193 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %192, i64 0, i32 0, i32 0
  %194 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %193, align 8
  %195 = icmp eq %"class.blink::InlineTextBox"* %194, null
  br i1 %195, label %261, label %196

196:                                              ; preds = %191
  %197 = bitcast %"struct.blink::LayoutText::TextBoxInfo"* %9 to i8*
  %198 = bitcast %"struct.blink::LayoutText::TextBoxInfo"* %9 to i64*
  %199 = getelementptr inbounds %"struct.blink::LayoutText::TextBoxInfo", %"struct.blink::LayoutText::TextBoxInfo"* %9, i64 0, i32 0, i32 1
  %200 = bitcast %"class.blink::LayoutSize"* %199 to i64*
  %201 = getelementptr inbounds %"struct.blink::LayoutText::TextBoxInfo", %"struct.blink::LayoutText::TextBoxInfo"* %9, i64 0, i32 1
  %202 = getelementptr inbounds %"struct.blink::LayoutText::TextBoxInfo", %"struct.blink::LayoutText::TextBoxInfo"* %9, i64 0, i32 2
  br label %203

203:                                              ; preds = %196, %256
  %204 = phi %"class.blink::InlineTextBox"* [ %194, %196 ], [ %258, %256 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %197) #19
  %205 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %204, i64 0, i32 0
  %206 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %204, i64 0, i32 0, i32 5, i32 0, i32 0
  %207 = load i32, i32* %206, align 4
  %208 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %204, i64 0, i32 0, i32 5, i32 1, i32 0
  %209 = load i32, i32* %208, align 4
  %210 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %204, i64 0, i32 0, i32 7, i32 0
  %211 = load i32, i32* %210, align 4
  %212 = and i32 %211, 2048
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %217, label %214

214:                                              ; preds = %203
  %215 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %204, i64 0, i32 0, i32 6, i32 0
  %216 = load i32, i32* %215, align 8
  br label %220

217:                                              ; preds = %203
  %218 = call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* %205) #19
  %219 = load i32, i32* %210, align 4
  br label %220

220:                                              ; preds = %217, %214
  %221 = phi i32 [ %211, %214 ], [ %219, %217 ]
  %222 = phi i32 [ %216, %214 ], [ %218, %217 ]
  %223 = and i32 %221, 2048
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %227, label %225

225:                                              ; preds = %220
  %226 = call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* %205) #19
  br label %230

227:                                              ; preds = %220
  %228 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %204, i64 0, i32 0, i32 6, i32 0
  %229 = load i32, i32* %228, align 8
  br label %230

230:                                              ; preds = %225, %227
  %231 = phi i32 [ %226, %225 ], [ %229, %227 ]
  %232 = zext i32 %209 to i64
  %233 = shl nuw i64 %232, 32
  %234 = zext i32 %207 to i64
  %235 = or i64 %233, %234
  %236 = zext i32 %231 to i64
  %237 = shl nuw i64 %236, 32
  %238 = zext i32 %222 to i64
  %239 = or i64 %237, %238
  store i64 %235, i64* %198, align 8
  store i64 %239, i64* %200, align 8
  %240 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %204, i64 0, i32 3
  %241 = load i32, i32* %240, align 8
  store i32 %241, i32* %201, align 8
  %242 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %204, i64 0, i32 4
  %243 = load i16, i16* %242, align 4
  %244 = zext i16 %243 to i32
  store i32 %244, i32* %202, align 4
  %245 = load i32, i32* %17, align 4
  %246 = load i32, i32* %16, align 8
  %247 = icmp eq i32 %245, %246
  br i1 %247, label %255, label %248, !prof !3

248:                                              ; preds = %230
  %249 = load %"struct.blink::LayoutText::TextBoxInfo"*, %"struct.blink::LayoutText::TextBoxInfo"** %15, align 8
  %250 = zext i32 %245 to i64
  %251 = getelementptr inbounds %"struct.blink::LayoutText::TextBoxInfo", %"struct.blink::LayoutText::TextBoxInfo"* %249, i64 %250
  %252 = bitcast %"struct.blink::LayoutText::TextBoxInfo"* %251 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %252, i8* nonnull align 8 %197, i64 24, i1 false) #19
  %253 = load i32, i32* %17, align 4
  %254 = add i32 %253, 1
  store i32 %254, i32* %17, align 4
  br label %256

255:                                              ; preds = %230
  call void @_ZN3WTF6VectorIN5blink10LayoutText11TextBoxInfoELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.3066"* %0, %"struct.blink::LayoutText::TextBoxInfo"* nonnull dereferenceable(24) %9) #19
  br label %256

256:                                              ; preds = %248, %255
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %197) #19
  %257 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %204, i64 0, i32 2
  %258 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %257, align 8
  %259 = icmp eq %"class.blink::InlineTextBox"* %258, null
  br i1 %259, label %261, label %203

260:                                              ; preds = %65, %178, %30
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %31) #19
  br label %261

261:                                              ; preds = %256, %191, %260
  %262 = call %"class.blink::FontCache"* @_ZN5blink9FontCache12GetFontCacheENS_14CreateIfNeededE(i32 1) #19
  %263 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %262, i64 0, i32 2
  %264 = load i32, i32* %263, align 4
  %265 = add nsw i32 %264, -1
  store i32 %265, i32* %263, align 4
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %267, label %268

267:                                              ; preds = %261
  call void @_ZN5blink9FontCache5PurgeENS_13PurgeSeverityE(%"class.blink::FontCache"* %262, i32 0) #19
  br label %268

268:                                              ; preds = %261, %267
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::NGOffsetMapping"* @_ZNK5blink10LayoutText18GetNGOffsetMappingEv(%"class.blink::LayoutText"*) local_unnamed_addr #0 align 2 {
  %2 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase33is_css_container_queries_enabled_E, align 1, !range !2
  %3 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase26is_layout_ng_grid_enabled_E, align 1
  %4 = or i8 %3, %2
  %5 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase31is_bidi_caret_affinity_enabled_E, align 1
  %6 = or i8 %4, %5
  %7 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase21is_layout_ng_enabled_E, align 1
  %8 = or i8 %6, %7
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  %12 = tail call %"class.blink::NGOffsetMapping"* @_ZN5blink15NGOffsetMapping6GetForEPKNS_12LayoutObjectE(%"class.blink::LayoutObject"* %11) #19
  br label %13

13:                                               ; preds = %1, %10
  %14 = phi %"class.blink::NGOffsetMapping"* [ %12, %10 ], [ null, %1 ]
  ret %"class.blink::NGOffsetMapping"* %14
}

declare { i64, %"class.blink::NGOffsetMappingUnit"* } @_ZNK5blink15NGOffsetMapping40GetMappingUnitsForTextContentOffsetRangeEjj(%"class.blink::NGOffsetMapping"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.blink::NGOffsetMappingUnit"* @_ZNK4base25CheckedContiguousIteratorIKN5blink19NGOffsetMappingUnitEEdeEv(%"class.base::CheckedContiguousIterator.3072"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #19
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator.3072", %"class.base::CheckedContiguousIterator.3072"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator.3072", %"class.base::CheckedContiguousIterator.3072"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %7, align 8
  %11 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %8, align 8
  %12 = icmp eq %"class.blink::NGOffsetMappingUnit"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"class.blink::NGOffsetMappingUnit"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink19NGOffsetMappingUnitEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #19
  %17 = bitcast %"class.blink::NGOffsetMappingUnit"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink19NGOffsetMappingUnitEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* %16, i8* %18) #19
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.8, i64 0, i64 0), i32 173, %"class.logging::CheckOpResult"* nonnull %3) #19
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #19
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #19
  %26 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %7, align 8
  ret %"class.blink::NGOffsetMappingUnit"* %26
}

declare { i64, i64 } @_ZNK5blink14NGInlineCursor16CurrentLocalRectEjj(%"class.blink::NGInlineCursor"*, i32, i32) local_unnamed_addr #1

declare %"class.blink::Node"* @_ZNK5blink19NGOffsetMappingUnit14AssociatedNodeEv(%"class.blink::NGOffsetMappingUnit"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZNK5blink15NGOffsetMapping15GetLastPositionEj(%"class.blink::PositionTemplate"* sret, %"class.blink::NGOffsetMapping"*, i32) local_unnamed_addr #1

declare %"class.blink::NGOffsetMappingUnit"* @_ZNK5blink15NGOffsetMapping18GetLastMappingUnitEj(%"class.blink::NGOffsetMapping"*, i32) local_unnamed_addr #1

declare i32 @_ZNK5blink19NGOffsetMappingUnit33ConvertTextContentToLastDOMOffsetEj(%"class.blink::NGOffsetMappingUnit"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator.3072"* @_ZN4base25CheckedContiguousIteratorIKN5blink19NGOffsetMappingUnitEEppEv(%"class.base::CheckedContiguousIterator.3072"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #19
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator.3072", %"class.base::CheckedContiguousIterator.3072"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator.3072", %"class.base::CheckedContiguousIterator.3072"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %7, align 8
  %11 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %8, align 8
  %12 = icmp eq %"class.blink::NGOffsetMappingUnit"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"class.blink::NGOffsetMappingUnit"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink19NGOffsetMappingUnitEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #19
  %17 = bitcast %"class.blink::NGOffsetMappingUnit"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink19NGOffsetMappingUnitEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* %16, i8* %18) #19
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.8, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %3) #19
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #19
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #19
  %26 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %7, align 8
  %27 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %26, i64 1
  store %"class.blink::NGOffsetMappingUnit"* %27, %"class.blink::NGOffsetMappingUnit"** %7, align 8
  ret %"class.base::CheckedContiguousIterator.3072"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink10LayoutText18HasInlineFragmentsEv(%"class.blink::LayoutText"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 268435456
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9
  %9 = bitcast %union.anon.3033* %8 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = icmp ne i32 %10, 0
  br label %16

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %14 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %13, align 8
  %15 = icmp ne %"class.blink::InlineTextBox"* %14, null
  br label %16

16:                                               ; preds = %12, %7
  %17 = phi i1 [ %11, %7 ], [ %15, %12 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink10LayoutText12OriginalTextEv(%"class.blink::LayoutText"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 16777216
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %7, label %50

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  %9 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  %10 = icmp eq %"class.blink::Node"* %9, null
  br i1 %10, label %50, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 12
  %15 = icmp eq i32 %14, 4
  br i1 %15, label %16, label %50

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 1
  %18 = bitcast %"class.blink::Node"* %17 to i8*
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 1, i32 0, i32 0, i32 1
  %23 = bitcast %"class.blink::TraceWrapperV8Reference"* %22 to %"class.blink::ParkableString"*
  %24 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %23) #19
  br label %28

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 1, i32 1
  %27 = bitcast i32* %26 to %"class.WTF::String"*
  br label %28

28:                                               ; preds = %25, %21
  %29 = phi %"class.WTF::String"* [ %24, %21 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %29, i64 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %50, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %50

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i33
  %42 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %41, i33 1) #19
  %43 = extractvalue { i33, i1 } %42, 1
  %44 = extractvalue { i33, i1 } %42, 0
  %45 = icmp slt i33 %44, 0
  %46 = or i1 %43, %45
  br i1 %46, label %47, label %48, !prof !3

47:                                               ; preds = %38
  tail call void @llvm.trap() #19
  unreachable

48:                                               ; preds = %38
  %49 = trunc i33 %44 to i32
  store i32 %49, i32* %39, align 4
  br label %50

50:                                               ; preds = %11, %1, %7, %28, %33, %48
  %51 = phi %"class.WTF::StringImpl"* [ null, %28 ], [ %31, %33 ], [ %31, %48 ], [ null, %11 ], [ null, %7 ], [ null, %1 ]
  ret %"class.WTF::StringImpl"* %51
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink10LayoutText9PlainTextEv(%"class.blink::LayoutText"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringBuilder", align 8
  %3 = alloca %"class.base::CheckedContiguousIterator.3072", align 8
  %4 = alloca %"class.base::CheckedContiguousIterator.3072", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %7 = alloca %"class.blink::TextIteratorBehavior", align 4
  %8 = alloca %"class.WTF::StringBuilder", align 8
  %9 = alloca %"class.WTF::Vector.3066", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  %13 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %14 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %13 to i96*
  %15 = load i96, i96* %14, align 4
  %16 = and i96 %15, 16777216
  %17 = icmp eq i96 %16, 0
  br i1 %17, label %18, label %131

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  %20 = load %"class.blink::Node"*, %"class.blink::Node"** %19, align 8
  %21 = icmp eq %"class.blink::Node"* %20, null
  br i1 %21, label %131, label %22

22:                                               ; preds = %18
  %23 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase33is_css_container_queries_enabled_E, align 1, !range !2
  %24 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase26is_layout_ng_grid_enabled_E, align 1
  %25 = or i8 %24, %23
  %26 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase31is_bidi_caret_affinity_enabled_E, align 1
  %27 = or i8 %25, %26
  %28 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase21is_layout_ng_enabled_E, align 1
  %29 = or i8 %27, %28
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %120, label %31

31:                                               ; preds = %22
  %32 = tail call %"class.blink::NGOffsetMapping"* @_ZN5blink15NGOffsetMapping6GetForEPKNS_12LayoutObjectE(%"class.blink::LayoutObject"* %12) #19
  %33 = icmp eq %"class.blink::NGOffsetMapping"* %32, null
  br i1 %33, label %34, label %36

34:                                               ; preds = %31
  %35 = load i96, i96* %14, align 4
  br label %120

36:                                               ; preds = %31
  %37 = bitcast %"class.WTF::StringBuilder"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %37) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 48, i1 false)
  %38 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %38, align 8
  %39 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 1
  %40 = bitcast %union.anon.3108* %39 to i8*
  store i8 0, i8* %40, align 8
  %41 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 2
  store i32 0, i32* %41, align 8
  %42 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 3
  store i8 1, i8* %42, align 4
  %43 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 4
  store i8 0, i8* %43, align 1
  %44 = load i96, i96* %14, align 4
  %45 = and i96 %44, 16777216
  %46 = icmp eq i96 %45, 0
  br i1 %46, label %47, label %49

47:                                               ; preds = %36
  %48 = load %"class.blink::Node"*, %"class.blink::Node"** %19, align 8
  br label %49

49:                                               ; preds = %36, %47
  %50 = phi %"class.blink::Node"* [ %48, %47 ], [ null, %36 ]
  %51 = tail call { i64, %"class.blink::NGOffsetMappingUnit"* } @_ZNK5blink15NGOffsetMapping22GetMappingUnitsForNodeERKNS_4NodeE(%"class.blink::NGOffsetMapping"* nonnull %32, %"class.blink::Node"* dereferenceable(64) %50) #19
  %52 = extractvalue { i64, %"class.blink::NGOffsetMappingUnit"* } %51, 0
  %53 = extractvalue { i64, %"class.blink::NGOffsetMappingUnit"* } %51, 1
  %54 = bitcast %"class.base::CheckedContiguousIterator.3072"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #19
  %55 = getelementptr inbounds %"class.base::CheckedContiguousIterator.3072", %"class.base::CheckedContiguousIterator.3072"* %3, i64 0, i32 1
  %56 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %53, i64 %52
  %57 = bitcast %"class.base::CheckedContiguousIterator.3072"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIKN5blink19NGOffsetMappingUnitEEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator.3072"* nonnull %3, %"class.blink::NGOffsetMappingUnit"* %53, %"class.blink::NGOffsetMappingUnit"* %53, %"class.blink::NGOffsetMappingUnit"* %56) #19
  %58 = bitcast %"class.base::CheckedContiguousIterator.3072"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #19
  %59 = getelementptr inbounds %"class.base::CheckedContiguousIterator.3072", %"class.base::CheckedContiguousIterator.3072"* %4, i64 0, i32 1
  %60 = bitcast %"class.base::CheckedContiguousIterator.3072"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIKN5blink19NGOffsetMappingUnitEEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator.3072"* nonnull %4, %"class.blink::NGOffsetMappingUnit"* %53, %"class.blink::NGOffsetMappingUnit"* %56, %"class.blink::NGOffsetMappingUnit"* %56) #19
  call void @_ZNK4base25CheckedContiguousIteratorIKN5blink19NGOffsetMappingUnitEE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator.3072"* nonnull %3, %"class.base::CheckedContiguousIterator.3072"* nonnull dereferenceable(24) %4) #19
  %61 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %55, align 8
  %62 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %59, align 8
  %63 = icmp eq %"class.blink::NGOffsetMappingUnit"* %61, %62
  br i1 %63, label %72, label %64

64:                                               ; preds = %49
  %65 = bitcast %"class.WTF::StringView"* %5 to i8*
  %66 = getelementptr inbounds %"class.blink::NGOffsetMapping", %"class.blink::NGOffsetMapping"* %32, i64 0, i32 2, i32 0, i32 0
  %67 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %68 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  %69 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %70 = bitcast i8** %69 to i16**
  %71 = bitcast %"class.WTF::StringView"* %5 to i64*
  br label %89

72:                                               ; preds = %114, %49
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #19
  %73 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %2) #19
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %2) #19
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %119, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  br i1 %80, label %83, label %85

83:                                               ; preds = %76
  %84 = add i32 %82, -1
  store i32 %84, i32* %81, align 4
  br label %85

85:                                               ; preds = %83, %76
  %86 = phi i32 [ %84, %83 ], [ %82, %76 ]
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %119

88:                                               ; preds = %85
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #19
  br label %119

89:                                               ; preds = %64, %114
  %90 = call dereferenceable(32) %"class.blink::NGOffsetMappingUnit"* @_ZNK4base25CheckedContiguousIteratorIKN5blink19NGOffsetMappingUnitEEdeEv(%"class.base::CheckedContiguousIterator.3072"* nonnull %3)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #19
  %91 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %90, i64 0, i32 4
  %92 = load i32, i32* %91, align 8
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %112, label %95

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %90, i64 0, i32 5
  %97 = load i32, i32* %96, align 4
  %98 = sub i32 %97, %92
  store i32 %98, i32* %67, align 8
  store %"class.WTF::StringImpl"* %93, %"class.WTF::StringImpl"** %68, align 8
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load atomic i32, i32* %99 monotonic, align 4
  %101 = and i32 %100, 1
  %102 = icmp eq i32 %101, 0
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 1
  br i1 %102, label %108, label %104

104:                                              ; preds = %95
  %105 = bitcast %"class.WTF::StringImpl"* %103 to i8*
  %106 = zext i32 %92 to i64
  %107 = getelementptr inbounds i8, i8* %105, i64 %106
  store i8* %107, i8** %69, align 8
  br label %114

108:                                              ; preds = %95
  %109 = bitcast %"class.WTF::StringImpl"* %103 to i16*
  %110 = zext i32 %92 to i64
  %111 = getelementptr inbounds i16, i16* %109, i64 %110
  store i16* %111, i16** %70, align 8
  br label %114

112:                                              ; preds = %89
  store i32 0, i32* %67, align 8
  store i8* null, i8** %69, align 8
  %113 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %113, i64* %71, align 8
  br label %114

114:                                              ; preds = %104, %108, %112
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #19
  %115 = call dereferenceable(24) %"class.base::CheckedContiguousIterator.3072"* @_ZN4base25CheckedContiguousIteratorIKN5blink19NGOffsetMappingUnitEEppEv(%"class.base::CheckedContiguousIterator.3072"* nonnull %3)
  call void @_ZNK4base25CheckedContiguousIteratorIKN5blink19NGOffsetMappingUnitEE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator.3072"* nonnull %3, %"class.base::CheckedContiguousIterator.3072"* nonnull dereferenceable(24) %4) #19
  %116 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %55, align 8
  %117 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %59, align 8
  %118 = icmp eq %"class.blink::NGOffsetMappingUnit"* %116, %117
  br i1 %118, label %72, label %89

119:                                              ; preds = %88, %85, %72
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %37) #19
  br label %279

120:                                              ; preds = %34, %22
  %121 = phi i96 [ %35, %34 ], [ %15, %22 ]
  %122 = bitcast %"class.blink::EphemeralRangeTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %122) #19
  %123 = and i96 %121, 16777216
  %124 = icmp eq i96 %123, 0
  br i1 %124, label %125, label %127

125:                                              ; preds = %120
  %126 = load %"class.blink::Node"*, %"class.blink::Node"** %19, align 8
  br label %127

127:                                              ; preds = %120, %125
  %128 = phi %"class.blink::Node"* [ %126, %125 ], [ null, %120 ]
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE15RangeOfContentsERKNS_4NodeE(%"class.blink::EphemeralRangeTemplate"* nonnull sret %6, %"class.blink::Node"* dereferenceable(64) %128) #19
  %129 = bitcast %"class.blink::TextIteratorBehavior"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %129) #19
  call void @_ZN5blink20TextIteratorBehaviorC1Ev(%"class.blink::TextIteratorBehavior"* nonnull %7) #19
  %130 = call %"class.WTF::StringImpl"* @_ZN5blink9PlainTextERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_20TextIteratorBehaviorE(%"class.blink::EphemeralRangeTemplate"* nonnull dereferenceable(32) %6, %"class.blink::TextIteratorBehavior"* nonnull dereferenceable(4) %7) #19
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %129) #19
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %122) #19
  br label %279

131:                                              ; preds = %1, %18
  %132 = bitcast %"class.WTF::StringBuilder"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %132) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %132, i8 -86, i64 48, i1 false)
  %133 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %133, align 8
  %134 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %8, i64 0, i32 1
  %135 = bitcast %union.anon.3108* %134 to i8*
  store i8 0, i8* %135, align 8
  %136 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %8, i64 0, i32 2
  store i32 0, i32* %136, align 8
  %137 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %8, i64 0, i32 3
  store i8 1, i8* %137, align 4
  %138 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %8, i64 0, i32 4
  store i8 0, i8* %138, align 1
  %139 = bitcast %"class.WTF::Vector.3066"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %139) #19
  call void @_ZNK5blink10LayoutText14GetTextBoxInfoEv(%"class.WTF::Vector.3066"* nonnull sret %9, %"class.blink::LayoutText"* %0)
  %140 = getelementptr inbounds %"class.WTF::Vector.3066", %"class.WTF::Vector.3066"* %9, i64 0, i32 0, i32 0, i32 0
  %141 = load %"struct.blink::LayoutText::TextBoxInfo"*, %"struct.blink::LayoutText::TextBoxInfo"** %140, align 8
  %142 = getelementptr inbounds %"class.WTF::Vector.3066", %"class.WTF::Vector.3066"* %9, i64 0, i32 0, i32 0, i32 2
  %143 = load i32, i32* %142, align 4
  %144 = zext i32 %143 to i64
  %145 = getelementptr inbounds %"struct.blink::LayoutText::TextBoxInfo", %"struct.blink::LayoutText::TextBoxInfo"* %141, i64 %144
  %146 = icmp eq i32 %143, 0
  br i1 %146, label %160, label %147

147:                                              ; preds = %131
  %148 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 7, i32 0, i32 0
  %149 = bitcast %"class.WTF::String"* %10 to i8*
  %150 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 7
  %151 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %152 = bitcast %"class.WTF::StringView"* %11 to i8*
  %153 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 0
  %154 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %155 = bitcast i8** %154 to %"class.WTF::StringImpl"**
  %156 = bitcast %"class.WTF::StringView"* %11 to i64*
  %157 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  br label %187

158:                                              ; preds = %275
  %159 = load %"struct.blink::LayoutText::TextBoxInfo"*, %"struct.blink::LayoutText::TextBoxInfo"** %140, align 8
  br label %160

160:                                              ; preds = %158, %131
  %161 = phi %"struct.blink::LayoutText::TextBoxInfo"* [ %159, %158 ], [ %141, %131 ]
  %162 = icmp eq %"struct.blink::LayoutText::TextBoxInfo"* %161, null
  %163 = bitcast %"struct.blink::LayoutText::TextBoxInfo"* %161 to i8*
  br i1 %162, label %169, label %164, !prof !4

164:                                              ; preds = %160
  %165 = load i32, i32* %142, align 4
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %168, label %167, !prof !3

167:                                              ; preds = %164
  store i32 0, i32* %142, align 4
  br label %168

168:                                              ; preds = %167, %164
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %163) #19
  store %"struct.blink::LayoutText::TextBoxInfo"* null, %"struct.blink::LayoutText::TextBoxInfo"** %140, align 8
  br label %169

169:                                              ; preds = %160, %168
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %139) #19
  %170 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %8) #19
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %8) #19
  %171 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %133, align 8
  %172 = icmp eq %"class.WTF::StringImpl"* %171, null
  br i1 %172, label %186, label %173

173:                                              ; preds = %169
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = load atomic i32, i32* %174 monotonic, align 4
  %176 = and i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 0
  %179 = load i32, i32* %178, align 4
  br i1 %177, label %180, label %182

180:                                              ; preds = %173
  %181 = add i32 %179, -1
  store i32 %181, i32* %178, align 4
  br label %182

182:                                              ; preds = %180, %173
  %183 = phi i32 [ %181, %180 ], [ %179, %173 ]
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %186

185:                                              ; preds = %182
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %171) #19
  br label %186

186:                                              ; preds = %169, %182, %185
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %132) #19
  br label %279

187:                                              ; preds = %147, %275
  %188 = phi %"struct.blink::LayoutText::TextBoxInfo"* [ %141, %147 ], [ %277, %275 ]
  %189 = phi i32 [ 0, %147 ], [ %276, %275 ]
  %190 = getelementptr inbounds %"struct.blink::LayoutText::TextBoxInfo", %"struct.blink::LayoutText::TextBoxInfo"* %188, i64 0, i32 2
  %191 = load i32, i32* %190, align 4
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %275, label %193

193:                                              ; preds = %187
  %194 = getelementptr inbounds %"struct.blink::LayoutText::TextBoxInfo", %"struct.blink::LayoutText::TextBoxInfo"* %188, i64 0, i32 1
  %195 = load i32, i32* %194, align 4
  %196 = add i32 %195, %191
  %197 = icmp ne i32 %189, 0
  %198 = icmp ugt i32 %195, %189
  %199 = and i1 %197, %198
  br i1 %199, label %200, label %232

200:                                              ; preds = %193
  %201 = add i32 %196, -1
  %202 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %148, align 8
  %203 = icmp eq %"class.WTF::StringImpl"* %202, null
  br i1 %203, label %229, label %204

204:                                              ; preds = %200
  %205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %202, i64 0, i32 1
  %206 = load i32, i32* %205, align 4
  %207 = icmp ugt i32 %206, %201
  br i1 %207, label %208, label %229

208:                                              ; preds = %204
  %209 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %202, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %210 = load atomic i32, i32* %209 monotonic, align 4
  %211 = and i32 %210, 1
  %212 = icmp eq i32 %211, 0
  %213 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %202, i64 1
  br i1 %212, label %220, label %214

214:                                              ; preds = %208
  %215 = bitcast %"class.WTF::StringImpl"* %213 to i8*
  %216 = zext i32 %201 to i64
  %217 = getelementptr inbounds i8, i8* %215, i64 %216
  %218 = load i8, i8* %217, align 1
  %219 = zext i8 %218 to i16
  br label %225

220:                                              ; preds = %208
  %221 = bitcast %"class.WTF::StringImpl"* %213 to i16*
  %222 = zext i32 %201 to i64
  %223 = getelementptr inbounds i16, i16* %221, i64 %222
  %224 = load i16, i16* %223, align 2
  br label %225

225:                                              ; preds = %214, %220
  %226 = phi i16 [ %219, %214 ], [ %224, %220 ]
  %227 = icmp ult i16 %226, 33
  br i1 %227, label %228, label %229

228:                                              ; preds = %225
  switch i16 %226, label %229 [
    i16 32, label %232
    i16 13, label %232
    i16 12, label %232
    i16 11, label %232
    i16 10, label %232
    i16 9, label %232
  ]

229:                                              ; preds = %228, %225, %200, %204
  call void @_ZN3WTF13StringBuilder6AppendEDs(%"class.WTF::StringBuilder"* nonnull %8, i16 zeroext 32)
  %230 = load i32, i32* %194, align 4
  %231 = load i32, i32* %190, align 4
  br label %232

232:                                              ; preds = %228, %228, %228, %228, %228, %228, %193, %229
  %233 = phi i32 [ %191, %228 ], [ %191, %228 ], [ %191, %228 ], [ %191, %228 ], [ %191, %228 ], [ %191, %228 ], [ %191, %193 ], [ %231, %229 ]
  %234 = phi i32 [ %195, %228 ], [ %195, %228 ], [ %195, %228 ], [ %195, %228 ], [ %195, %228 ], [ %195, %228 ], [ %195, %193 ], [ %230, %229 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %149) #19
  %235 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %150, i32 %234, i32 %233) #19
  store %"class.WTF::StringImpl"* %235, %"class.WTF::StringImpl"** %151, align 8
  %236 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String18SimplifyWhiteSpaceENS_13StripBehaviorE(%"class.WTF::String"* nonnull %10, i32 1) #19
  %237 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %151, align 8
  %238 = icmp eq %"class.WTF::StringImpl"* %237, null
  br i1 %238, label %252, label %239

239:                                              ; preds = %232
  %240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %237, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %241 = load atomic i32, i32* %240 monotonic, align 4
  %242 = and i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %237, i64 0, i32 0
  %245 = load i32, i32* %244, align 4
  br i1 %243, label %246, label %248

246:                                              ; preds = %239
  %247 = add i32 %245, -1
  store i32 %247, i32* %244, align 4
  br label %248

248:                                              ; preds = %246, %239
  %249 = phi i32 [ %247, %246 ], [ %245, %239 ]
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %252

251:                                              ; preds = %248
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %237) #19
  br label %252

252:                                              ; preds = %232, %248, %251
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %149) #19
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %152) #19
  %253 = icmp eq %"class.WTF::StringImpl"* %236, null
  br i1 %253, label %254, label %256

254:                                              ; preds = %252
  store i8* null, i8** %154, align 8
  %255 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %255, i64* %156, align 8
  br label %260

256:                                              ; preds = %252
  store %"class.WTF::StringImpl"* %236, %"class.WTF::StringImpl"** %153, align 8
  %257 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 0, i32 1
  %258 = load i32, i32* %257, align 4
  %259 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 1
  store %"class.WTF::StringImpl"* %259, %"class.WTF::StringImpl"** %155, align 8
  br label %260

260:                                              ; preds = %254, %256
  %261 = phi i32 [ %258, %256 ], [ 0, %254 ]
  store i32 %261, i32* %157, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %8, %"class.WTF::StringView"* nonnull dereferenceable(24) %11)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %152) #19
  br i1 %253, label %275, label %262

262:                                              ; preds = %260
  %263 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %264 = load atomic i32, i32* %263 monotonic, align 4
  %265 = and i32 %264, 2
  %266 = icmp eq i32 %265, 0
  %267 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 0, i32 0
  %268 = load i32, i32* %267, align 4
  br i1 %266, label %269, label %271

269:                                              ; preds = %262
  %270 = add i32 %268, -1
  store i32 %270, i32* %267, align 4
  br label %271

271:                                              ; preds = %269, %262
  %272 = phi i32 [ %270, %269 ], [ %268, %262 ]
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %274, label %275

274:                                              ; preds = %271
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %236) #19
  br label %275

275:                                              ; preds = %274, %271, %260, %187
  %276 = phi i32 [ %189, %187 ], [ %196, %260 ], [ %196, %271 ], [ %196, %274 ]
  %277 = getelementptr inbounds %"struct.blink::LayoutText::TextBoxInfo", %"struct.blink::LayoutText::TextBoxInfo"* %188, i64 1
  %278 = icmp eq %"struct.blink::LayoutText::TextBoxInfo"* %277, %145
  br i1 %278, label %158, label %187

279:                                              ; preds = %119, %186, %127
  %280 = phi %"class.WTF::StringImpl"* [ %130, %127 ], [ %73, %119 ], [ %170, %186 ]
  ret %"class.WTF::StringImpl"* %280
}

declare { i64, %"class.blink::NGOffsetMappingUnit"* } @_ZNK5blink15NGOffsetMapping22GetMappingUnitsForNodeERKNS_4NodeE(%"class.blink::NGOffsetMapping"*, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !2
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #19
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !3

46:                                               ; preds = %37
  tail call void @llvm.trap() #19
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #19
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #19
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #19
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink9PlainTextERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_20TextIteratorBehaviorE(%"class.blink::EphemeralRangeTemplate"* dereferenceable(32), %"class.blink::TextIteratorBehavior"* dereferenceable(4)) local_unnamed_addr #1

declare void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE15RangeOfContentsERKNS_4NodeE(%"class.blink::EphemeralRangeTemplate"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

declare void @_ZN5blink20TextIteratorBehaviorC1Ev(%"class.blink::TextIteratorBehavior"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendEDs(%"class.WTF::StringBuilder"*, i16 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i8, align 1
  %4 = alloca i16, align 2
  store i16 %1, i16* %4, align 2
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp ult i16 %1, 256
  %9 = and i1 %8, %7
  br i1 %9, label %10, label %35

10:                                               ; preds = %2
  %11 = trunc i16 %1 to i8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3)
  store i8 %11, i8* %3, align 1
  %12 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %13 = load i8, i8* %12, align 1, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %10
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #19
  br label %16

16:                                               ; preds = %15, %10
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %18 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %19, %21
  br i1 %22, label %30, label %23, !prof !3

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.WTF::Vector.3109", %"class.WTF::Vector.3109"* %17, i64 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = zext i32 %19 to i64
  %27 = getelementptr inbounds i8, i8* %25, i64 %26
  store i8 %11, i8* %27, align 1
  %28 = load i32, i32* %18, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %18, align 4
  br label %31

30:                                               ; preds = %16
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.3109"* %17, i8* nonnull dereferenceable(1) %3) #19
  br label %31

31:                                               ; preds = %23, %30
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3)
  br label %62

35:                                               ; preds = %2
  %36 = icmp eq i8 %6, 0
  br i1 %36, label %37, label %41

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %39 = load i8, i8* %38, align 1, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %37, %35
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #19
  br label %42

42:                                               ; preds = %37, %41
  %43 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %45, %47
  br i1 %48, label %56, label %49, !prof !3

49:                                               ; preds = %42
  %50 = bitcast %union.anon.3108* %43 to i16**
  %51 = load i16*, i16** %50, align 8
  %52 = zext i32 %45 to i64
  %53 = getelementptr inbounds i16, i16* %51, i64 %52
  store i16 %1, i16* %53, align 2
  %54 = load i32, i32* %44, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %44, align 4
  br label %58

56:                                               ; preds = %42
  %57 = bitcast %union.anon.3108* %43 to %"class.WTF::Vector.3113"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.3113"* %57, i16* nonnull dereferenceable(2) %4) #19
  br label %58

58:                                               ; preds = %49, %56
  %59 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %60 = load i32, i32* %59, align 8
  %61 = add i32 %60, 1
  store i32 %61, i32* %59, align 8
  br label %62

62:                                               ; preds = %58, %31
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String18SimplifyWhiteSpaceENS_13StripBehaviorE(%"class.WTF::String"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink10LayoutText13AbsoluteQuadsERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj(%"class.blink::LayoutText"*, %"class.WTF::Vector.3120"* dereferenceable(16), i32) unnamed_addr #6 align 2 {
  %4 = alloca %"class.blink::FloatQuad", align 8
  %5 = alloca %"class.blink::FloatQuad", align 4
  %6 = alloca %"class.blink::FloatQuad", align 8
  %7 = alloca %"class.blink::FloatQuad", align 4
  %8 = alloca %"class.blink::NGInlineCursor", align 8
  %9 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  %10 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  %13 = and i96 %12, 268435456
  %14 = icmp eq i96 %13, 0
  br i1 %14, label %76, label %15

15:                                               ; preds = %3
  %16 = bitcast %"class.blink::NGInlineCursor"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %16) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 112, i1 false) #19
  %17 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %8, i64 0, i32 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 81, i1 false) #19
  %18 = bitcast %"class.blink::LayoutBlockFlow"** %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 20, i1 false) #19
  call void @_ZN5blink14NGInlineCursor6MoveToERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"* nonnull %8, %"class.blink::LayoutObject"* dereferenceable(88) %9) #19
  %19 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %8, i64 0, i32 0, i32 0
  %20 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %19, align 8
  %21 = icmp eq %"class.blink::NGFragmentItem"* %20, null
  br i1 %21, label %75, label %22

22:                                               ; preds = %15
  %23 = bitcast %"class.blink::FloatQuad"* %5 to i8*
  %24 = bitcast %"class.blink::FloatQuad"* %4 to i8*
  %25 = bitcast %"class.blink::FloatQuad"* %4 to <2 x float>*
  %26 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %4, i64 0, i32 1, i32 0
  %27 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %4, i64 0, i32 1, i32 1
  %28 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %4, i64 0, i32 2, i32 0
  %29 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %4, i64 0, i32 2, i32 1
  %30 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %4, i64 0, i32 3, i32 0
  %31 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %4, i64 0, i32 3, i32 1
  %32 = getelementptr inbounds %"class.WTF::Vector.3120", %"class.WTF::Vector.3120"* %1, i64 0, i32 0, i32 0, i32 2
  %33 = getelementptr inbounds %"class.WTF::Vector.3120", %"class.WTF::Vector.3120"* %1, i64 0, i32 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.WTF::Vector.3120", %"class.WTF::Vector.3120"* %1, i64 0, i32 0, i32 0, i32 0
  br label %35

35:                                               ; preds = %72, %22
  %36 = phi %"class.blink::NGFragmentItem"* [ %20, %22 ], [ %73, %72 ]
  %37 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %36, i64 0, i32 2
  %38 = bitcast %"struct.blink::PhysicalRect"* %37 to i64*
  %39 = load i64, i64* %38, align 4
  %40 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %36, i64 0, i32 2, i32 1
  %41 = bitcast %"struct.blink::PhysicalSize"* %40 to i64*
  %42 = load i64, i64* %41, align 4
  %43 = trunc i64 %39 to i32
  %44 = lshr i64 %39, 32
  %45 = trunc i64 %44 to i32
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #19
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #19, !noalias !6
  %46 = sitofp i32 %43 to float
  %47 = fmul float %46, 1.562500e-02
  %48 = sitofp i32 %45 to float
  %49 = fmul float %48, 1.562500e-02
  %50 = trunc i64 %42 to i32
  %51 = sitofp i32 %50 to float
  %52 = fmul float %51, 1.562500e-02
  %53 = lshr i64 %42, 32
  %54 = trunc i64 %53 to i32
  %55 = sitofp i32 %54 to float
  %56 = fmul float %55, 1.562500e-02
  %57 = insertelement <2 x float> undef, float %47, i32 0
  %58 = insertelement <2 x float> %57, float %49, i32 1
  store <2 x float> %58, <2 x float>* %25, align 8, !noalias !6
  %59 = fadd float %47, %52
  store float %59, float* %26, align 8, !noalias !6
  store float %49, float* %27, align 4, !noalias !6
  %60 = fadd float %49, %56
  store float %59, float* %28, align 8, !noalias !6
  store float %60, float* %29, align 4, !noalias !6
  store float %47, float* %30, align 8, !noalias !6
  store float %60, float* %31, align 4, !noalias !6
  call void @_ZNK5blink12LayoutObject19LocalToAncestorQuadERKNS_9FloatQuadEPKNS_20LayoutBoxModelObjectEj(%"class.blink::FloatQuad"* nonnull sret %5, %"class.blink::LayoutObject"* %9, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %4, %"class.blink::LayoutBoxModelObject"* null, i32 %2) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #19, !noalias !6
  %61 = load i32, i32* %32, align 4
  %62 = load i32, i32* %33, align 8
  %63 = icmp eq i32 %61, %62
  br i1 %63, label %71, label %64, !prof !3

64:                                               ; preds = %35
  %65 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %34, align 8
  %66 = zext i32 %61 to i64
  %67 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %65, i64 %66
  %68 = bitcast %"class.blink::FloatQuad"* %67 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %68, i8* nonnull align 4 %23, i64 32, i1 false) #19
  %69 = load i32, i32* %32, align 4
  %70 = add i32 %69, 1
  store i32 %70, i32* %32, align 4
  br label %72

71:                                               ; preds = %35
  call void @_ZN3WTF6VectorIN5blink9FloatQuadELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3120"* %1, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %5) #19
  br label %72

72:                                               ; preds = %71, %64
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #19
  call void @_ZN5blink14NGInlineCursor29MoveToNextForSameLayoutObjectEv(%"class.blink::NGInlineCursor"* nonnull %8) #19
  %73 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %19, align 8
  %74 = icmp eq %"class.blink::NGFragmentItem"* %73, null
  br i1 %74, label %75, label %35

75:                                               ; preds = %72, %15
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %16) #19
  br label %185

76:                                               ; preds = %3
  %77 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 5, i32 0
  %78 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %78, i64 0, i32 0, i32 9
  %80 = bitcast [20 x i8]* %79 to i160*
  %81 = load i160, i160* %80, align 8
  %82 = and i160 %81, 15211807202738752817960438464512
  %83 = icmp eq i160 %82, 5070602400912917605986812821504
  br i1 %83, label %84, label %87, !prof !3

84:                                               ; preds = %76
  %85 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %9, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #19
  %86 = load i96, i96* %11, align 4
  br label %87

87:                                               ; preds = %84, %76
  %88 = phi i96 [ %86, %84 ], [ %12, %76 ]
  %89 = phi %"class.blink::LayoutBlock"* [ %85, %84 ], [ null, %76 ]
  %90 = and i96 %88, 268435456
  %91 = icmp eq i96 %90, 0
  br i1 %91, label %94, label %92

92:                                               ; preds = %87
  %93 = tail call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #19
  br label %96

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0
  br label %96

96:                                               ; preds = %94, %92
  %97 = phi %"class.blink::InlineTextBoxList"* [ %93, %92 ], [ %95, %94 ]
  %98 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %97, i64 0, i32 0, i32 0
  %99 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %98, align 8
  %100 = icmp eq %"class.blink::InlineTextBox"* %99, null
  br i1 %100, label %185, label %101

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %89, i64 0, i32 0
  %103 = bitcast %"class.blink::LayoutText"* %0 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %104 = bitcast %"class.blink::FloatQuad"* %7 to i8*
  %105 = bitcast %"class.blink::FloatQuad"* %6 to i8*
  %106 = bitcast %"class.blink::FloatQuad"* %6 to <2 x float>*
  %107 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %6, i64 0, i32 1, i32 0
  %108 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %6, i64 0, i32 1, i32 1
  %109 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %6, i64 0, i32 2, i32 0
  %110 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %6, i64 0, i32 2, i32 1
  %111 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %6, i64 0, i32 3, i32 0
  %112 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %6, i64 0, i32 3, i32 1
  %113 = getelementptr inbounds %"class.WTF::Vector.3120", %"class.WTF::Vector.3120"* %1, i64 0, i32 0, i32 0, i32 2
  %114 = getelementptr inbounds %"class.WTF::Vector.3120", %"class.WTF::Vector.3120"* %1, i64 0, i32 0, i32 0, i32 1
  %115 = getelementptr inbounds %"class.WTF::Vector.3120", %"class.WTF::Vector.3120"* %1, i64 0, i32 0, i32 0, i32 0
  br label %116

116:                                              ; preds = %181, %101
  %117 = phi %"class.blink::InlineTextBox"* [ %99, %101 ], [ %183, %181 ]
  %118 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %117, i64 0, i32 0
  %119 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %117, i64 0, i32 0, i32 5, i32 0, i32 0
  %120 = load i32, i32* %119, align 4
  %121 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %117, i64 0, i32 0, i32 5, i32 1, i32 0
  %122 = load i32, i32* %121, align 4
  %123 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %117, i64 0, i32 0, i32 7, i32 0
  %124 = load i32, i32* %123, align 4
  %125 = and i32 %124, 2048
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %130, label %127

127:                                              ; preds = %116
  %128 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %117, i64 0, i32 0, i32 6, i32 0
  %129 = load i32, i32* %128, align 8
  br label %133

130:                                              ; preds = %116
  %131 = call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* %118) #19
  %132 = load i32, i32* %123, align 4
  br label %133

133:                                              ; preds = %130, %127
  %134 = phi i32 [ %124, %127 ], [ %132, %130 ]
  %135 = phi i32 [ %129, %127 ], [ %131, %130 ]
  %136 = and i32 %134, 2048
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %140, label %138

138:                                              ; preds = %133
  %139 = call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* %118) #19
  br label %143

140:                                              ; preds = %133
  %141 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %117, i64 0, i32 0, i32 6, i32 0
  %142 = load i32, i32* %141, align 8
  br label %143

143:                                              ; preds = %140, %138
  %144 = phi i32 [ %139, %138 ], [ %142, %140 ]
  %145 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %77, align 8
  %146 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %145, i64 0, i32 0, i32 9
  %147 = bitcast [20 x i8]* %146 to i160*
  %148 = load i160, i160* %147, align 8
  %149 = and i160 %148, 15211807202738752817960438464512
  %150 = icmp eq i160 %149, 5070602400912917605986812821504
  br i1 %150, label %151, label %156, !prof !3

151:                                              ; preds = %143
  %152 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %103, align 8
  %153 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %152, i64 106
  %154 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %153, align 8
  %155 = call i32 %154(%"class.blink::LayoutObject"* %9, i32 %120, i32 %135, %"class.blink::LayoutBox"* %102) #19
  br label %156

156:                                              ; preds = %151, %143
  %157 = phi i32 [ %155, %151 ], [ %120, %143 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %104) #19
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %105) #19, !noalias !11
  %158 = sitofp i32 %157 to float
  %159 = fmul float %158, 1.562500e-02
  %160 = sitofp i32 %122 to float
  %161 = fmul float %160, 1.562500e-02
  %162 = sitofp i32 %135 to float
  %163 = fmul float %162, 1.562500e-02
  %164 = sitofp i32 %144 to float
  %165 = fmul float %164, 1.562500e-02
  %166 = insertelement <2 x float> undef, float %159, i32 0
  %167 = insertelement <2 x float> %166, float %161, i32 1
  store <2 x float> %167, <2 x float>* %106, align 8, !noalias !11
  %168 = fadd float %163, %159
  store float %168, float* %107, align 8, !noalias !11
  store float %161, float* %108, align 4, !noalias !11
  %169 = fadd float %161, %165
  store float %168, float* %109, align 8, !noalias !11
  store float %169, float* %110, align 4, !noalias !11
  store float %159, float* %111, align 8, !noalias !11
  store float %169, float* %112, align 4, !noalias !11
  call void @_ZNK5blink12LayoutObject19LocalToAncestorQuadERKNS_9FloatQuadEPKNS_20LayoutBoxModelObjectEj(%"class.blink::FloatQuad"* nonnull sret %7, %"class.blink::LayoutObject"* %9, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %6, %"class.blink::LayoutBoxModelObject"* null, i32 %2) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %105) #19, !noalias !11
  %170 = load i32, i32* %113, align 4
  %171 = load i32, i32* %114, align 8
  %172 = icmp eq i32 %170, %171
  br i1 %172, label %180, label %173, !prof !3

173:                                              ; preds = %156
  %174 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %115, align 8
  %175 = zext i32 %170 to i64
  %176 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %174, i64 %175
  %177 = bitcast %"class.blink::FloatQuad"* %176 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %177, i8* nonnull align 4 %104, i64 32, i1 false) #19
  %178 = load i32, i32* %113, align 4
  %179 = add i32 %178, 1
  store i32 %179, i32* %113, align 4
  br label %181

180:                                              ; preds = %156
  call void @_ZN3WTF6VectorIN5blink9FloatQuadELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3120"* %1, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %7) #19
  br label %181

181:                                              ; preds = %180, %173
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %104) #19
  %182 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %117, i64 0, i32 2
  %183 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %182, align 8
  %184 = icmp eq %"class.blink::InlineTextBox"* %183, null
  br i1 %184, label %185, label %116

185:                                              ; preds = %181, %75, %96
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink10LayoutText31MapDOMOffsetToTextContentOffsetERKNS_15NGOffsetMappingEPjS4_(%"class.blink::LayoutText"*, %"class.blink::NGOffsetMapping"* dereferenceable(48), i32* nocapture, i32* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::PositionTemplate", align 8
  %6 = alloca %"class.blink::PositionTemplate", align 8
  %7 = alloca %"class.blink::PositionTemplate", align 8
  %8 = alloca %"class.blink::PositionTemplate", align 8
  %9 = alloca %"class.blink::PositionTemplate", align 8
  %10 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #19
  %11 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 7, i32 0, i32 0
  %12 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  br label %18

18:                                               ; preds = %4, %15
  %19 = phi i32 [ %17, %15 ], [ 0, %4 ]
  %20 = load i32, i32* %2, align 4
  %21 = icmp ult i32 %19, %20
  %22 = select i1 %21, i32 %19, i32 %20
  %23 = bitcast %"class.blink::LayoutText"* %0 to void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)***
  %24 = load void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)**, void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)*, void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)** %24, i64 115
  %26 = load void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)*, void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)** %25, align 8
  call void %26(%"class.blink::PositionTemplate"* nonnull sret %5, %"class.blink::LayoutText"* %0, i32 %22) #19
  %27 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #19
  %28 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %6, i64 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %6, i64 0, i32 1
  %30 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 16, i1 false)
  call void @_ZNK5blink15NGOffsetMapping30StartOfNextNonCollapsedContentERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* nonnull sret %6, %"class.blink::NGOffsetMapping"* %1, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %5) #19
  %31 = load %"class.blink::Node"*, %"class.blink::Node"** %28, align 8
  %32 = icmp eq %"class.blink::Node"* %31, null
  br i1 %32, label %33, label %52

33:                                               ; preds = %18
  %34 = bitcast %"class.blink::PositionTemplate"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #19
  call void @_ZNK5blink15NGOffsetMapping28EndOfLastNonCollapsedContentERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* nonnull sret %7, %"class.blink::NGOffsetMapping"* %1, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %5) #19
  %35 = bitcast %"class.blink::PositionTemplate"* %7 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.blink::PositionTemplate"* %6 to i64*
  store atomic i64 %36, i64* %37 monotonic, align 8
  %38 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %39 = icmp eq i32 %38, 0
  %40 = inttoptr i64 %36 to %"class.blink::Node"*
  br i1 %39, label %45, label %41

41:                                               ; preds = %33
  %42 = inttoptr i64 %36 to i8*
  %43 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %42) #19
  %44 = load %"class.blink::Node"*, %"class.blink::Node"** %28, align 8
  br label %45

45:                                               ; preds = %33, %41
  %46 = phi %"class.blink::Node"* [ %40, %33 ], [ %44, %41 ]
  %47 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %7, i64 0, i32 1
  %48 = bitcast i32* %47 to i64*
  %49 = bitcast i32* %29 to i64*
  %50 = load i64, i64* %48, align 8
  store i64 %50, i64* %49, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #19
  %51 = icmp eq %"class.blink::Node"* %46, null
  br i1 %51, label %97, label %52

52:                                               ; preds = %45, %18
  %53 = call i64 @_ZNK5blink15NGOffsetMapping20GetTextContentOffsetERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::NGOffsetMapping"* %1, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6) #19
  %54 = trunc i64 %53 to i8
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %52
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #21
  unreachable

57:                                               ; preds = %52
  %58 = lshr i64 %53, 32
  %59 = trunc i64 %58 to i32
  store i32 %59, i32* %2, align 4
  %60 = bitcast %"class.blink::PositionTemplate"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %60) #19
  %61 = bitcast %"class.blink::PositionTemplate"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 -86, i64 16, i1 false)
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %67, label %64

64:                                               ; preds = %57
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 1
  %66 = load i32, i32* %65, align 4
  br label %67

67:                                               ; preds = %57, %64
  %68 = phi i32 [ %66, %64 ], [ 0, %57 ]
  %69 = load i32, i32* %3, align 4
  %70 = icmp ult i32 %68, %69
  %71 = select i1 %70, i32 %68, i32 %69
  %72 = load void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)**, void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)*** %23, align 8
  %73 = getelementptr inbounds void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)*, void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)** %72, i64 115
  %74 = load void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)*, void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)** %73, align 8
  call void %74(%"class.blink::PositionTemplate"* nonnull sret %8, %"class.blink::LayoutText"* %0, i32 %71) #19
  %75 = bitcast %"class.blink::PositionTemplate"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %75) #19
  %76 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %9, i64 0, i32 0, i32 0, i32 0
  %77 = bitcast %"class.blink::PositionTemplate"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 -86, i64 16, i1 false)
  call void @_ZNK5blink15NGOffsetMapping28EndOfLastNonCollapsedContentERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* nonnull sret %9, %"class.blink::NGOffsetMapping"* %1, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %8) #19
  %78 = load %"class.blink::Node"*, %"class.blink::Node"** %76, align 8
  %79 = icmp eq %"class.blink::Node"* %78, null
  br i1 %79, label %85, label %80

80:                                               ; preds = %67
  %81 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %9, i64 0, i32 1
  %82 = load i32, i32* %81, align 8
  %83 = load i32, i32* %29, align 8
  %84 = icmp sgt i32 %82, %83
  br i1 %84, label %87, label %85

85:                                               ; preds = %80, %67
  %86 = load i32, i32* %2, align 4
  br label %95

87:                                               ; preds = %80
  %88 = call i64 @_ZNK5blink15NGOffsetMapping20GetTextContentOffsetERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::NGOffsetMapping"* %1, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %9) #19
  %89 = trunc i64 %88 to i8
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %87
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #21
  unreachable

92:                                               ; preds = %87
  %93 = lshr i64 %88, 32
  %94 = trunc i64 %93 to i32
  br label %95

95:                                               ; preds = %92, %85
  %96 = phi i32 [ %86, %85 ], [ %94, %92 ]
  store i32 %96, i32* %3, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %75) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %60) #19
  br label %97

97:                                               ; preds = %45, %95
  %98 = phi i1 [ true, %95 ], [ false, %45 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #19
  ret i1 %98
}

declare void @_ZNK5blink15NGOffsetMapping30StartOfNextNonCollapsedContentERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* sret, %"class.blink::NGOffsetMapping"*, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNK5blink15NGOffsetMapping28EndOfLastNonCollapsedContentERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* sret, %"class.blink::NGOffsetMapping"*, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #1

declare i64 @_ZNK5blink15NGOffsetMapping20GetTextContentOffsetERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::NGOffsetMapping"*, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink10LayoutText21AbsoluteQuadsForRangeERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEjj(%"class.blink::LayoutText"*, %"class.WTF::Vector.3120"* dereferenceable(16), i32, i32) local_unnamed_addr #6 align 2 {
  %5 = alloca %"class.blink::FloatQuad", align 8
  %6 = alloca %"class.blink::FloatQuad", align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %"class.WTF::Vector.3125", align 8
  %10 = alloca %"class.blink::NGInlineCursor", align 8
  %11 = alloca %"class.blink::FloatQuad", align 4
  %12 = alloca %"class.blink::FloatQuad", align 4
  %13 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  %14 = icmp ult i32 %2, 2147483647
  %15 = select i1 %14, i32 %2, i32 2147483647
  store i32 %15, i32* %7, align 4
  %16 = icmp ult i32 %3, 2147483647
  %17 = select i1 %16, i32 %3, i32 2147483647
  store i32 %17, i32* %8, align 4
  %18 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase33is_css_container_queries_enabled_E, align 1, !range !2
  %19 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase26is_layout_ng_grid_enabled_E, align 1
  %20 = or i8 %19, %18
  %21 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase31is_bidi_caret_affinity_enabled_E, align 1
  %22 = or i8 %20, %21
  %23 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase21is_layout_ng_enabled_E, align 1
  %24 = or i8 %22, %23
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %198, label %26

26:                                               ; preds = %4
  %27 = tail call %"class.blink::NGOffsetMapping"* @_ZN5blink15NGOffsetMapping6GetForEPKNS_12LayoutObjectE(%"class.blink::LayoutObject"* %13) #19
  %28 = icmp eq %"class.blink::NGOffsetMapping"* %27, null
  br i1 %28, label %198, label %29

29:                                               ; preds = %26
  %30 = call zeroext i1 @_ZNK5blink10LayoutText31MapDOMOffsetToTextContentOffsetERKNS_15NGOffsetMappingEPjS4_(%"class.blink::LayoutText"* %0, %"class.blink::NGOffsetMapping"* nonnull dereferenceable(48) %27, i32* nonnull %7, i32* nonnull %8)
  br i1 %30, label %31, label %519

31:                                               ; preds = %29
  %32 = bitcast %"class.WTF::Vector.3125"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %32) #19
  %33 = getelementptr inbounds %"class.WTF::Vector.3125", %"class.WTF::Vector.3125"* %9, i64 0, i32 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 32, i1 false)
  %34 = getelementptr inbounds %"class.WTF::Vector.3125", %"class.WTF::Vector.3125"* %9, i64 0, i32 0, i32 1, i64 0
  %35 = bitcast %"class.WTF::Vector.3125"* %9 to i8**
  store i8* %34, i8** %35, align 8
  %36 = getelementptr inbounds %"class.WTF::Vector.3125", %"class.WTF::Vector.3125"* %9, i64 0, i32 0, i32 0, i32 1
  store i32 1, i32* %36, align 8
  %37 = getelementptr inbounds %"class.WTF::Vector.3125", %"class.WTF::Vector.3125"* %9, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %37, align 4
  %38 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 5, i32 0
  %39 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %39, i64 0, i32 0, i32 9
  %41 = bitcast [20 x i8]* %40 to i160*
  %42 = load i160, i160* %41, align 8
  %43 = and i160 %42, 15211807202738752817960438464512
  %44 = icmp eq i160 %43, 5070602400912917605986812821504
  br i1 %44, label %45, label %47, !prof !3

45:                                               ; preds = %31
  %46 = call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %13, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #19
  br label %47

47:                                               ; preds = %45, %31
  %48 = bitcast %"class.blink::NGInlineCursor"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %48) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 112, i1 false)
  %49 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %10, i64 0, i32 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 0, i64 81, i1 false) #19
  %50 = bitcast %"class.blink::LayoutBlockFlow"** %49 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 20, i1 false) #19
  call void @_ZN5blink14NGInlineCursor6MoveToERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"* nonnull %10, %"class.blink::LayoutObject"* dereferenceable(88) %13) #19
  %51 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %10, i64 0, i32 0, i32 0
  %52 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %51, align 8
  %53 = icmp eq %"class.blink::NGFragmentItem"* %52, null
  br i1 %53, label %182, label %54

54:                                               ; preds = %47
  %55 = load i32, i32* %7, align 4
  %56 = load i32, i32* %8, align 4
  %57 = bitcast %"class.blink::FloatQuad"* %11 to i8*
  %58 = bitcast %"class.blink::FloatQuad"* %5 to i8*
  %59 = bitcast %"class.blink::FloatQuad"* %5 to <2 x float>*
  %60 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %5, i64 0, i32 1, i32 0
  %61 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %5, i64 0, i32 1, i32 1
  %62 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %5, i64 0, i32 2, i32 0
  %63 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %5, i64 0, i32 2, i32 1
  %64 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %5, i64 0, i32 3, i32 0
  %65 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %5, i64 0, i32 3, i32 1
  %66 = getelementptr inbounds %"class.WTF::Vector.3120", %"class.WTF::Vector.3120"* %1, i64 0, i32 0, i32 0, i32 2
  %67 = getelementptr inbounds %"class.WTF::Vector.3120", %"class.WTF::Vector.3120"* %1, i64 0, i32 0, i32 0, i32 1
  %68 = getelementptr inbounds %"class.WTF::Vector.3120", %"class.WTF::Vector.3120"* %1, i64 0, i32 0, i32 0, i32 0
  %69 = getelementptr inbounds %"class.WTF::Vector.3125", %"class.WTF::Vector.3125"* %9, i64 0, i32 0, i32 0, i32 0
  %70 = bitcast %"class.blink::FloatQuad"* %11 to i8*
  br label %71

71:                                               ; preds = %54, %174
  %72 = phi %"class.blink::NGFragmentItem"* [ %52, %54 ], [ %177, %174 ]
  %73 = phi i8 [ 0, %54 ], [ %176, %174 ]
  %74 = phi i8 [ 0, %54 ], [ %175, %174 ]
  %75 = call zeroext i1 @_ZNK5blink14NGFragmentItem15IsGeneratedTextEv(%"class.blink::NGFragmentItem"* nonnull %72) #19
  br i1 %75, label %96, label %76

76:                                               ; preds = %71
  %77 = call i64 @_ZNK5blink14NGFragmentItem10TextOffsetEv(%"class.blink::NGFragmentItem"* nonnull %72) #19
  %78 = trunc i64 %77 to i32
  %79 = lshr i64 %77, 32
  %80 = trunc i64 %79 to i32
  %81 = icmp ugt i32 %55, %80
  %82 = icmp ult i32 %56, %78
  %83 = or i1 %81, %82
  br i1 %83, label %174, label %84

84:                                               ; preds = %76
  %85 = icmp uge i32 %56, %80
  %86 = zext i1 %85 to i8
  %87 = icmp ult i32 %55, %78
  %88 = select i1 %87, i32 %78, i32 %55
  %89 = icmp ugt i32 %56, %80
  %90 = select i1 %89, i32 %80, i32 %56
  %91 = call { i64, i64 } @_ZNK5blink14NGInlineCursor16CurrentLocalRectEjj(%"class.blink::NGInlineCursor"* nonnull %10, i32 %88, i32 %90) #19
  %92 = extractvalue { i64, i64 } %91, 0
  %93 = extractvalue { i64, i64 } %91, 1
  %94 = lshr i64 %92, 32
  %95 = icmp uge i32 %88, %90
  br label %108

96:                                               ; preds = %71
  %97 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %72, i64 0, i32 6
  %98 = load i16, i16* %97, align 8
  %99 = and i16 %98, 192
  %100 = icmp eq i16 %99, 128
  %101 = and i8 %74, 1
  %102 = icmp eq i8 %101, 0
  %103 = or i1 %102, %100
  br i1 %103, label %174, label %104

104:                                              ; preds = %96
  %105 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %72, i64 0, i32 2, i32 1
  %106 = bitcast %"struct.blink::PhysicalSize"* %105 to i64*
  %107 = load i64, i64* %106, align 4
  br label %108

108:                                              ; preds = %84, %104
  %109 = phi i64 [ %107, %104 ], [ %93, %84 ]
  %110 = phi i64 [ 0, %104 ], [ %94, %84 ]
  %111 = phi i64 [ 0, %104 ], [ %92, %84 ]
  %112 = phi i1 [ false, %104 ], [ %95, %84 ]
  %113 = phi i8 [ %74, %104 ], [ %86, %84 ]
  %114 = trunc i64 %111 to i32
  %115 = trunc i64 %110 to i32
  %116 = call { i64, i64 } @_ZNK5blink14NGInlineCursor22CurrentRectInBlockFlowEv(%"class.blink::NGInlineCursor"* nonnull %10) #19
  %117 = extractvalue { i64, i64 } %116, 0
  %118 = trunc i64 %117 to i32
  %119 = lshr i64 %117, 32
  %120 = trunc i64 %119 to i32
  %121 = icmp slt i32 %118, 0
  %122 = select i1 %121, i32 -2147483648, i32 2147483647
  %123 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %114, i32 %118) #19
  %124 = extractvalue { i32, i1 } %123, 1
  %125 = extractvalue { i32, i1 } %123, 0
  %126 = select i1 %124, i32 %122, i32 %125, !prof !3
  %127 = icmp slt i32 %120, 0
  %128 = select i1 %127, i32 -2147483648, i32 2147483647
  %129 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %115, i32 %120) #19
  %130 = extractvalue { i32, i1 } %129, 1
  %131 = extractvalue { i32, i1 } %129, 0
  %132 = select i1 %130, i32 %128, i32 %131, !prof !3
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %57) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %70, i8 -1, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %58) #19, !noalias !16
  %133 = sitofp i32 %126 to float
  %134 = fmul float %133, 1.562500e-02
  %135 = sitofp i32 %132 to float
  %136 = fmul float %135, 1.562500e-02
  %137 = trunc i64 %109 to i32
  %138 = sitofp i32 %137 to float
  %139 = fmul float %138, 1.562500e-02
  %140 = lshr i64 %109, 32
  %141 = trunc i64 %140 to i32
  %142 = sitofp i32 %141 to float
  %143 = fmul float %142, 1.562500e-02
  %144 = insertelement <2 x float> undef, float %134, i32 0
  %145 = insertelement <2 x float> %144, float %136, i32 1
  store <2 x float> %145, <2 x float>* %59, align 8, !noalias !16
  %146 = fadd float %139, %134
  store float %146, float* %60, align 8, !noalias !16
  store float %136, float* %61, align 4, !noalias !16
  %147 = fadd float %143, %136
  store float %146, float* %62, align 8, !noalias !16
  store float %147, float* %63, align 4, !noalias !16
  store float %134, float* %64, align 8, !noalias !16
  store float %147, float* %65, align 4, !noalias !16
  call void @_ZNK5blink12LayoutObject19LocalToAncestorQuadERKNS_9FloatQuadEPKNS_20LayoutBoxModelObjectEj(%"class.blink::FloatQuad"* nonnull sret %11, %"class.blink::LayoutObject"* %13, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %5, %"class.blink::LayoutBoxModelObject"* null, i32 0) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %58) #19, !noalias !16
  br i1 %112, label %160, label %148

148:                                              ; preds = %108
  %149 = load i32, i32* %66, align 4
  %150 = load i32, i32* %67, align 8
  %151 = icmp eq i32 %149, %150
  br i1 %151, label %159, label %152, !prof !3

152:                                              ; preds = %148
  %153 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %68, align 8
  %154 = zext i32 %149 to i64
  %155 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %153, i64 %154
  %156 = bitcast %"class.blink::FloatQuad"* %155 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %156, i8* nonnull align 4 %57, i64 32, i1 false) #19
  %157 = load i32, i32* %66, align 4
  %158 = add i32 %157, 1
  store i32 %158, i32* %66, align 4
  br label %172

159:                                              ; preds = %148
  call void @_ZN3WTF6VectorIN5blink9FloatQuadELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.3120"* %1, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %11) #19
  br label %172

160:                                              ; preds = %108
  %161 = load i32, i32* %37, align 4
  %162 = load i32, i32* %36, align 8
  %163 = icmp eq i32 %161, %162
  br i1 %163, label %171, label %164, !prof !3

164:                                              ; preds = %160
  %165 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %69, align 8
  %166 = zext i32 %161 to i64
  %167 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %165, i64 %166
  %168 = bitcast %"class.blink::FloatQuad"* %167 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %168, i8* nonnull align 4 %57, i64 32, i1 false) #19
  %169 = load i32, i32* %37, align 4
  %170 = add i32 %169, 1
  store i32 %170, i32* %37, align 4
  br label %172

171:                                              ; preds = %160
  call void @_ZN3WTF6VectorIN5blink9FloatQuadELj1ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.3125"* nonnull %9, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %11) #19
  br label %172

172:                                              ; preds = %171, %164, %159, %152
  %173 = phi i8 [ 1, %152 ], [ 1, %159 ], [ %73, %164 ], [ %73, %171 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %57) #19
  br label %174

174:                                              ; preds = %76, %96, %172
  %175 = phi i8 [ %113, %172 ], [ %74, %96 ], [ 0, %76 ]
  %176 = phi i8 [ %173, %172 ], [ %73, %96 ], [ %73, %76 ]
  call void @_ZN5blink14NGInlineCursor29MoveToNextForSameLayoutObjectEv(%"class.blink::NGInlineCursor"* nonnull %10) #19
  %177 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %51, align 8
  %178 = icmp eq %"class.blink::NGFragmentItem"* %177, null
  br i1 %178, label %179, label %71

179:                                              ; preds = %174
  %180 = and i8 %176, 1
  %181 = icmp eq i8 %180, 0
  br i1 %181, label %182, label %186

182:                                              ; preds = %47, %179
  %183 = getelementptr inbounds %"class.WTF::Vector.3125", %"class.WTF::Vector.3125"* %9, i64 0, i32 0, i32 0, i32 0
  %184 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %183, align 8
  %185 = load i32, i32* %37, align 4
  call void @_ZN3WTF6VectorIN5blink9FloatQuadELj0ENS_18PartitionAllocatorEE6AppendIS2_EEvPKT_j(%"class.WTF::Vector.3120"* %1, %"class.blink::FloatQuad"* %184, i32 %185) #19
  br label %186

186:                                              ; preds = %179, %182
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %48) #19
  %187 = load i32, i32* %37, align 4
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %190, label %189, !prof !3

189:                                              ; preds = %186
  store i32 0, i32* %37, align 4
  br label %190

190:                                              ; preds = %189, %186
  %191 = getelementptr inbounds %"class.WTF::Vector.3125", %"class.WTF::Vector.3125"* %9, i64 0, i32 0, i32 0, i32 0
  %192 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %191, align 8
  %193 = bitcast i8* %34 to %"class.blink::FloatQuad"*
  %194 = icmp eq %"class.blink::FloatQuad"* %192, %193
  br i1 %194, label %197, label %195, !prof !4

195:                                              ; preds = %190
  %196 = getelementptr inbounds %"class.WTF::Vector.3125", %"class.WTF::Vector.3125"* %9, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink9FloatQuadELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.3126"* nonnull %196, %"class.blink::FloatQuad"* %192) #19
  br label %197

197:                                              ; preds = %190, %195
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %32) #19
  br label %519

198:                                              ; preds = %4, %26
  %199 = bitcast %"class.blink::LayoutText"* %0 to i32 (%"class.blink::LayoutText"*)***
  %200 = load i32 (%"class.blink::LayoutText"*)**, i32 (%"class.blink::LayoutText"*)*** %199, align 8
  %201 = getelementptr inbounds i32 (%"class.blink::LayoutText"*)*, i32 (%"class.blink::LayoutText"*)** %200, i64 117
  %202 = load i32 (%"class.blink::LayoutText"*)*, i32 (%"class.blink::LayoutText"*)** %201, align 8
  %203 = tail call i32 %202(%"class.blink::LayoutText"* %0) #19
  %204 = load i32 (%"class.blink::LayoutText"*)**, i32 (%"class.blink::LayoutText"*)*** %199, align 8
  %205 = getelementptr inbounds i32 (%"class.blink::LayoutText"*)*, i32 (%"class.blink::LayoutText"*)** %204, i64 118
  %206 = load i32 (%"class.blink::LayoutText"*)*, i32 (%"class.blink::LayoutText"*)** %205, align 8
  %207 = tail call i32 %206(%"class.blink::LayoutText"* %0) #19
  %208 = icmp ult i32 %203, %15
  %209 = select i1 %208, i32 %15, i32 %203
  %210 = icmp ult i32 %207, %209
  %211 = select i1 %210, i32 %207, i32 %209
  store i32 %211, i32* %7, align 4
  %212 = icmp ult i32 %203, %17
  %213 = select i1 %212, i32 %17, i32 %203
  %214 = icmp ult i32 %207, %213
  %215 = select i1 %214, i32 %207, i32 %213
  store i32 %215, i32* %8, align 4
  %216 = getelementptr inbounds %"class.WTF::Vector.3120", %"class.WTF::Vector.3120"* %1, i64 0, i32 0, i32 0, i32 2
  %217 = load i32, i32* %216, align 4
  %218 = icmp ne i32 %217, 0
  %219 = zext i1 %218 to i8
  %220 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 5, i32 0
  %221 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %220, align 8
  %222 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %221, i64 0, i32 0, i32 9
  %223 = bitcast [20 x i8]* %222 to i160*
  %224 = load i160, i160* %223, align 8
  %225 = and i160 %224, 15211807202738752817960438464512
  %226 = icmp eq i160 %225, 5070602400912917605986812821504
  br i1 %226, label %227, label %229, !prof !3

227:                                              ; preds = %198
  %228 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %13, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #19
  br label %229

229:                                              ; preds = %198, %227
  %230 = phi %"class.blink::LayoutBlock"* [ %228, %227 ], [ null, %198 ]
  %231 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %232 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %231 to i96*
  %233 = load i96, i96* %232, align 4
  %234 = and i96 %233, 268435456
  %235 = icmp eq i96 %234, 0
  br i1 %235, label %238, label %236

236:                                              ; preds = %229
  %237 = tail call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #19
  br label %240

238:                                              ; preds = %229
  %239 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0
  br label %240

240:                                              ; preds = %236, %238
  %241 = phi %"class.blink::InlineTextBoxList"* [ %237, %236 ], [ %239, %238 ]
  %242 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %241, i64 0, i32 0, i32 0
  %243 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %242, align 8
  %244 = icmp eq %"class.blink::InlineTextBox"* %243, null
  br i1 %244, label %519, label %245

245:                                              ; preds = %240
  %246 = getelementptr inbounds %"class.WTF::Vector.3120", %"class.WTF::Vector.3120"* %1, i64 0, i32 0, i32 0, i32 1
  %247 = bitcast %"class.WTF::Vector.3120"* %1 to i8**
  %248 = bitcast %"class.WTF::Vector.3120"* %1 to i64*
  %249 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %230, i64 0, i32 0
  %250 = bitcast %"class.blink::LayoutText"* %0 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %251 = bitcast %"class.blink::FloatQuad"* %12 to i8*
  %252 = bitcast %"class.blink::FloatQuad"* %6 to i8*
  %253 = bitcast %"class.blink::FloatQuad"* %6 to <2 x float>*
  %254 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %6, i64 0, i32 1, i32 0
  %255 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %6, i64 0, i32 1, i32 1
  %256 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %6, i64 0, i32 2, i32 0
  %257 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %6, i64 0, i32 2, i32 1
  %258 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %6, i64 0, i32 3, i32 0
  %259 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %6, i64 0, i32 3, i32 1
  %260 = getelementptr inbounds %"class.WTF::Vector.3120", %"class.WTF::Vector.3120"* %1, i64 0, i32 0, i32 0, i32 0
  br label %261

261:                                              ; preds = %245, %514
  %262 = phi %"class.blink::InlineTextBox"* [ %243, %245 ], [ %517, %514 ]
  %263 = phi i8 [ %219, %245 ], [ %515, %514 ]
  %264 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %262, i64 0, i32 3
  %265 = load i32, i32* %264, align 8
  %266 = icmp ugt i32 %211, %265
  br i1 %266, label %319, label %267

267:                                              ; preds = %261
  %268 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %262, i64 0, i32 4
  %269 = load i16, i16* %268, align 4
  %270 = icmp eq i16 %269, 0
  %271 = zext i16 %269 to i32
  %272 = add nsw i32 %271, -1
  %273 = select i1 %270, i32 0, i32 %272
  %274 = add i32 %273, %265
  %275 = icmp ult i32 %274, %215
  br i1 %275, label %276, label %319

276:                                              ; preds = %267
  %277 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %262, i64 0, i32 0
  %278 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %262, i64 0, i32 0, i32 5, i32 0, i32 0
  %279 = load i32, i32* %278, align 4
  %280 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %262, i64 0, i32 0, i32 5, i32 1, i32 0
  %281 = load i32, i32* %280, align 4
  %282 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %262, i64 0, i32 0, i32 7, i32 0
  %283 = load i32, i32* %282, align 4
  %284 = and i32 %283, 2048
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %289, label %286

286:                                              ; preds = %276
  %287 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %262, i64 0, i32 0, i32 6, i32 0
  %288 = load i32, i32* %287, align 8
  br label %292

289:                                              ; preds = %276
  %290 = call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* %277) #19
  %291 = load i32, i32* %282, align 4
  br label %292

292:                                              ; preds = %289, %286
  %293 = phi i32 [ %283, %286 ], [ %291, %289 ]
  %294 = phi i32 [ %288, %286 ], [ %290, %289 ]
  %295 = and i32 %293, 2048
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %299, label %297

297:                                              ; preds = %292
  %298 = call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* %277) #19
  br label %302

299:                                              ; preds = %292
  %300 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %262, i64 0, i32 0, i32 6, i32 0
  %301 = load i32, i32* %300, align 8
  br label %302

302:                                              ; preds = %297, %299
  %303 = phi i32 [ %298, %297 ], [ %301, %299 ]
  %304 = zext i32 %303 to i64
  %305 = shl nuw i64 %304, 32
  %306 = zext i32 %294 to i64
  %307 = or i64 %305, %306
  %308 = and i8 %263, 1
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %310, label %465

310:                                              ; preds = %302
  %311 = load i32, i32* %246, align 8
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %465, label %313

313:                                              ; preds = %310
  %314 = load i32, i32* %216, align 4
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %317, label %316

316:                                              ; preds = %313
  store i32 0, i32* %216, align 4
  br label %317

317:                                              ; preds = %316, %313
  %318 = load i8*, i8** %247, align 8
  store atomic i64 0, i64* %248 monotonic, align 8
  store i32 0, i32* %246, align 8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %318) #19
  br label %465

319:                                              ; preds = %261, %267
  %320 = icmp ugt i32 %265, %211
  br i1 %320, label %330, label %321

321:                                              ; preds = %319
  %322 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %262, i64 0, i32 4
  %323 = load i16, i16* %322, align 4
  %324 = icmp eq i16 %323, 0
  %325 = zext i16 %323 to i32
  %326 = add nsw i32 %325, -1
  %327 = select i1 %324, i32 0, i32 %326
  %328 = add i32 %327, %265
  %329 = icmp ugt i32 %211, %328
  br i1 %329, label %330, label %341

330:                                              ; preds = %321, %319
  %331 = icmp ult i32 %265, %215
  br i1 %331, label %332, label %407

332:                                              ; preds = %330
  %333 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %262, i64 0, i32 4
  %334 = load i16, i16* %333, align 4
  %335 = icmp eq i16 %334, 0
  %336 = zext i16 %334 to i32
  %337 = add nsw i32 %336, -1
  %338 = select i1 %335, i32 0, i32 %337
  %339 = add i32 %338, %265
  %340 = icmp ugt i32 %215, %339
  br i1 %340, label %407, label %341

341:                                              ; preds = %321, %332
  %342 = phi i32 [ %327, %321 ], [ %338, %332 ]
  %343 = add i32 %265, 1
  %344 = add i32 %343, %342
  %345 = icmp ugt i32 %344, %215
  %346 = select i1 %345, i32 %215, i32 %344
  %347 = bitcast %"class.blink::InlineTextBox"* %262 to { i64, i64 } (%"class.blink::InlineTextBox"*, i32, i32, i1)***
  %348 = load { i64, i64 } (%"class.blink::InlineTextBox"*, i32, i32, i1)**, { i64, i64 } (%"class.blink::InlineTextBox"*, i32, i32, i1)*** %347, align 8
  %349 = getelementptr inbounds { i64, i64 } (%"class.blink::InlineTextBox"*, i32, i32, i1)*, { i64, i64 } (%"class.blink::InlineTextBox"*, i32, i32, i1)** %348, i64 33
  %350 = load { i64, i64 } (%"class.blink::InlineTextBox"*, i32, i32, i1)*, { i64, i64 } (%"class.blink::InlineTextBox"*, i32, i32, i1)** %349, align 8
  %351 = call { i64, i64 } %350(%"class.blink::InlineTextBox"* nonnull %262, i32 %211, i32 %346, i1 zeroext false) #19
  %352 = extractvalue { i64, i64 } %351, 0
  %353 = trunc i64 %352 to i32
  %354 = lshr i64 %352, 32
  %355 = trunc i64 %354 to i32
  %356 = extractvalue { i64, i64 } %351, 1
  %357 = icmp ugt i64 %356, 4294967295
  br i1 %357, label %358, label %385

358:                                              ; preds = %341
  %359 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %262, i64 0, i32 0
  %360 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %262, i64 0, i32 0, i32 7, i32 0
  %361 = load i32, i32* %360, align 4
  %362 = and i32 %361, 2048
  %363 = icmp eq i32 %362, 0
  %364 = call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* %359) #19
  %365 = zext i32 %364 to i64
  br i1 %363, label %372, label %366

366:                                              ; preds = %358
  %367 = shl nuw i64 %365, 32
  %368 = and i64 %356, 4294967295
  %369 = or i64 %367, %368
  %370 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %262, i64 0, i32 0, i32 5, i32 1, i32 0
  %371 = load i32, i32* %370, align 4
  br label %377

372:                                              ; preds = %358
  %373 = and i64 %356, -4294967296
  %374 = or i64 %373, %365
  %375 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %262, i64 0, i32 0, i32 5, i32 0, i32 0
  %376 = load i32, i32* %375, align 4
  br label %377

377:                                              ; preds = %372, %366
  %378 = phi i32 [ %371, %366 ], [ %355, %372 ]
  %379 = phi i32 [ %353, %366 ], [ %376, %372 ]
  %380 = phi i64 [ %369, %366 ], [ %374, %372 ]
  %381 = zext i32 %378 to i64
  %382 = shl nuw i64 %381, 32
  %383 = zext i32 %379 to i64
  %384 = or i64 %382, %383
  br label %385

385:                                              ; preds = %341, %377
  %386 = phi i64 [ %380, %377 ], [ 0, %341 ]
  %387 = phi i64 [ %384, %377 ], [ 0, %341 ]
  %388 = trunc i64 %387 to i32
  %389 = lshr i64 %387, 32
  %390 = trunc i64 %389 to i32
  %391 = trunc i64 %386 to i32
  %392 = icmp ne i32 %391, 0
  %393 = icmp ugt i64 %386, 4294967295
  %394 = or i1 %393, %392
  %395 = and i8 %263, 1
  %396 = icmp eq i8 %395, 0
  %397 = and i1 %396, %394
  br i1 %397, label %398, label %465

398:                                              ; preds = %385
  %399 = load i32, i32* %246, align 8
  %400 = icmp eq i32 %399, 0
  br i1 %400, label %465, label %401

401:                                              ; preds = %398
  %402 = load i32, i32* %216, align 4
  %403 = icmp eq i32 %402, 0
  br i1 %403, label %405, label %404

404:                                              ; preds = %401
  store i32 0, i32* %216, align 4
  br label %405

405:                                              ; preds = %404, %401
  %406 = load i8*, i8** %247, align 8
  store atomic i64 0, i64* %248 monotonic, align 8
  store i32 0, i32* %246, align 8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %406) #19
  br label %465

407:                                              ; preds = %332, %330
  %408 = and i8 %263, 1
  %409 = icmp eq i8 %408, 0
  br i1 %409, label %410, label %514

410:                                              ; preds = %407
  %411 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %262, i64 0, i32 4
  %412 = load i16, i16* %411, align 4
  %413 = icmp eq i16 %412, 0
  %414 = zext i16 %412 to i32
  %415 = add nsw i32 %414, -1
  %416 = select i1 %413, i32 0, i32 %415
  %417 = add i32 %265, 1
  %418 = add i32 %417, %416
  %419 = icmp ugt i32 %418, %215
  %420 = select i1 %419, i32 %215, i32 %418
  %421 = bitcast %"class.blink::InlineTextBox"* %262 to { i64, i64 } (%"class.blink::InlineTextBox"*, i32, i32, i1)***
  %422 = load { i64, i64 } (%"class.blink::InlineTextBox"*, i32, i32, i1)**, { i64, i64 } (%"class.blink::InlineTextBox"*, i32, i32, i1)*** %421, align 8
  %423 = getelementptr inbounds { i64, i64 } (%"class.blink::InlineTextBox"*, i32, i32, i1)*, { i64, i64 } (%"class.blink::InlineTextBox"*, i32, i32, i1)** %422, i64 33
  %424 = load { i64, i64 } (%"class.blink::InlineTextBox"*, i32, i32, i1)*, { i64, i64 } (%"class.blink::InlineTextBox"*, i32, i32, i1)** %423, align 8
  %425 = call { i64, i64 } %424(%"class.blink::InlineTextBox"* nonnull %262, i32 %211, i32 %420, i1 zeroext false) #19
  %426 = extractvalue { i64, i64 } %425, 0
  %427 = trunc i64 %426 to i32
  %428 = lshr i64 %426, 32
  %429 = trunc i64 %428 to i32
  %430 = extractvalue { i64, i64 } %425, 1
  %431 = icmp ugt i64 %430, 4294967295
  br i1 %431, label %432, label %459

432:                                              ; preds = %410
  %433 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %262, i64 0, i32 0
  %434 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %262, i64 0, i32 0, i32 7, i32 0
  %435 = load i32, i32* %434, align 4
  %436 = and i32 %435, 2048
  %437 = icmp eq i32 %436, 0
  %438 = call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* %433) #19
  %439 = zext i32 %438 to i64
  br i1 %437, label %446, label %440

440:                                              ; preds = %432
  %441 = shl nuw i64 %439, 32
  %442 = and i64 %430, 4294967295
  %443 = or i64 %441, %442
  %444 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %262, i64 0, i32 0, i32 5, i32 1, i32 0
  %445 = load i32, i32* %444, align 4
  br label %451

446:                                              ; preds = %432
  %447 = and i64 %430, -4294967296
  %448 = or i64 %447, %439
  %449 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %262, i64 0, i32 0, i32 5, i32 0, i32 0
  %450 = load i32, i32* %449, align 4
  br label %451

451:                                              ; preds = %446, %440
  %452 = phi i32 [ %445, %440 ], [ %429, %446 ]
  %453 = phi i32 [ %427, %440 ], [ %450, %446 ]
  %454 = phi i64 [ %443, %440 ], [ %448, %446 ]
  %455 = zext i32 %452 to i64
  %456 = shl nuw i64 %455, 32
  %457 = zext i32 %453 to i64
  %458 = or i64 %456, %457
  br label %459

459:                                              ; preds = %410, %451
  %460 = phi i64 [ %454, %451 ], [ 0, %410 ]
  %461 = phi i64 [ %458, %451 ], [ 0, %410 ]
  %462 = trunc i64 %461 to i32
  %463 = lshr i64 %461, 32
  %464 = trunc i64 %463 to i32
  br label %465

465:                                              ; preds = %405, %398, %317, %310, %385, %302, %459
  %466 = phi i32 [ %462, %459 ], [ %388, %385 ], [ %279, %302 ], [ %279, %310 ], [ %279, %317 ], [ %388, %398 ], [ %388, %405 ]
  %467 = phi i32 [ %464, %459 ], [ %390, %385 ], [ %281, %302 ], [ %281, %310 ], [ %281, %317 ], [ %390, %398 ], [ %390, %405 ]
  %468 = phi i64 [ %460, %459 ], [ %386, %385 ], [ %307, %302 ], [ %307, %310 ], [ %307, %317 ], [ %386, %398 ], [ %386, %405 ]
  %469 = phi i8 [ %263, %459 ], [ %263, %385 ], [ %263, %302 ], [ 1, %310 ], [ 1, %317 ], [ 1, %398 ], [ 1, %405 ]
  %470 = trunc i64 %468 to i32
  %471 = lshr i64 %468, 32
  %472 = trunc i64 %471 to i32
  %473 = or i64 %471, %468
  %474 = trunc i64 %473 to i32
  %475 = icmp eq i32 %474, 0
  br i1 %475, label %514, label %476

476:                                              ; preds = %465
  %477 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %220, align 8
  %478 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %477, i64 0, i32 0, i32 9
  %479 = bitcast [20 x i8]* %478 to i160*
  %480 = load i160, i160* %479, align 8
  %481 = and i160 %480, 15211807202738752817960438464512
  %482 = icmp eq i160 %481, 5070602400912917605986812821504
  br i1 %482, label %483, label %488, !prof !3

483:                                              ; preds = %476
  %484 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %250, align 8
  %485 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %484, i64 106
  %486 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %485, align 8
  %487 = call i32 %486(%"class.blink::LayoutObject"* %13, i32 %466, i32 %470, %"class.blink::LayoutBox"* %249) #19
  br label %488

488:                                              ; preds = %476, %483
  %489 = phi i32 [ %487, %483 ], [ %466, %476 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %251) #19
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %252) #19, !noalias !21
  %490 = sitofp i32 %489 to float
  %491 = fmul float %490, 1.562500e-02
  %492 = sitofp i32 %467 to float
  %493 = fmul float %492, 1.562500e-02
  %494 = sitofp i32 %470 to float
  %495 = fmul float %494, 1.562500e-02
  %496 = sitofp i32 %472 to float
  %497 = fmul float %496, 1.562500e-02
  %498 = insertelement <2 x float> undef, float %491, i32 0
  %499 = insertelement <2 x float> %498, float %493, i32 1
  store <2 x float> %499, <2 x float>* %253, align 8, !noalias !21
  %500 = fadd float %495, %491
  store float %500, float* %254, align 8, !noalias !21
  store float %493, float* %255, align 4, !noalias !21
  %501 = fadd float %493, %497
  store float %500, float* %256, align 8, !noalias !21
  store float %501, float* %257, align 4, !noalias !21
  store float %491, float* %258, align 8, !noalias !21
  store float %501, float* %259, align 4, !noalias !21
  call void @_ZNK5blink12LayoutObject19LocalToAncestorQuadERKNS_9FloatQuadEPKNS_20LayoutBoxModelObjectEj(%"class.blink::FloatQuad"* nonnull sret %12, %"class.blink::LayoutObject"* %13, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %6, %"class.blink::LayoutBoxModelObject"* null, i32 0) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %252) #19, !noalias !21
  %502 = load i32, i32* %216, align 4
  %503 = load i32, i32* %246, align 8
  %504 = icmp eq i32 %502, %503
  br i1 %504, label %512, label %505, !prof !3

505:                                              ; preds = %488
  %506 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %260, align 8
  %507 = zext i32 %502 to i64
  %508 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %506, i64 %507
  %509 = bitcast %"class.blink::FloatQuad"* %508 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %509, i8* nonnull align 4 %251, i64 32, i1 false) #19
  %510 = load i32, i32* %216, align 4
  %511 = add i32 %510, 1
  store i32 %511, i32* %216, align 4
  br label %513

512:                                              ; preds = %488
  call void @_ZN3WTF6VectorIN5blink9FloatQuadELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3120"* %1, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %12) #19
  br label %513

513:                                              ; preds = %505, %512
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %251) #19
  br label %514

514:                                              ; preds = %465, %407, %513
  %515 = phi i8 [ %469, %513 ], [ %263, %407 ], [ %469, %465 ]
  %516 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %262, i64 0, i32 2
  %517 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %516, align 8
  %518 = icmp eq %"class.blink::InlineTextBox"* %517, null
  br i1 %518, label %519, label %261

519:                                              ; preds = %514, %240, %29, %197
  ret void
}

declare %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject::AncestorSkipInfo"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink14NGFragmentItem15IsGeneratedTextEv(%"class.blink::NGFragmentItem"*) local_unnamed_addr #1

declare i64 @_ZNK5blink14NGFragmentItem10TextOffsetEv(%"class.blink::NGFragmentItem"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK5blink10LayoutText36LocalBoundingBoxRectForAccessibilityEv(%"class.blink::LayoutText"*) unnamed_addr #0 align 2 {
  %2 = alloca { <2 x float>, <2 x float> }, align 8
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = alloca %"class.blink::NGInlineCursor", align 8
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = bitcast { <2 x float>, <2 x float> }* %5 to %"class.blink::FloatRect"*
  %7 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  %8 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false) #19
  %9 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 5, i32 0
  %10 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %10, i64 0, i32 0, i32 9
  %12 = bitcast [20 x i8]* %11 to i160*
  %13 = load i160, i160* %12, align 8
  %14 = and i160 %13, 15211807202738752817960438464512
  %15 = icmp eq i160 %14, 5070602400912917605986812821504
  br i1 %15, label %16, label %18, !prof !3

16:                                               ; preds = %1
  %17 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %7, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #19
  br label %18

18:                                               ; preds = %1, %16
  %19 = phi %"class.blink::LayoutBlock"* [ %17, %16 ], [ null, %1 ]
  %20 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %21 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %20 to i96*
  %22 = load i96, i96* %21, align 4
  %23 = and i96 %22, 268435456
  %24 = icmp eq i96 %23, 0
  br i1 %24, label %87, label %25

25:                                               ; preds = %18
  %26 = bitcast %"class.blink::NGInlineCursor"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %26) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 112, i1 false) #19
  %27 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %4, i64 0, i32 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 81, i1 false) #19
  %28 = bitcast %"class.blink::LayoutBlockFlow"** %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 20, i1 false) #19
  call void @_ZN5blink14NGInlineCursor6MoveToERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"* nonnull %4, %"class.blink::LayoutObject"* dereferenceable(88) %7) #19
  %29 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %4, i64 0, i32 0, i32 0
  %30 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %29, align 8
  %31 = icmp eq %"class.blink::NGFragmentItem"* %30, null
  br i1 %31, label %86, label %32

32:                                               ; preds = %25
  %33 = bitcast { <2 x float>, <2 x float> }* %2 to %"class.blink::FloatRect"*
  %34 = bitcast { <2 x float>, <2 x float> }* %2 to i8*
  %35 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 0
  %36 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 1
  %37 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %19, i64 0, i32 0
  %38 = bitcast %"class.blink::LayoutText"* %0 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  br label %39

39:                                               ; preds = %83, %32
  %40 = phi %"class.blink::NGFragmentItem"* [ %30, %32 ], [ %84, %83 ]
  %41 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %40, i64 0, i32 6
  %42 = load i16, i16* %41, align 8
  %43 = and i16 %42, 256
  %44 = icmp eq i16 %43, 0
  br i1 %44, label %45, label %83

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %40, i64 0, i32 2
  %47 = bitcast %"struct.blink::PhysicalRect"* %46 to i64*
  %48 = load i64, i64* %47, align 4
  %49 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %40, i64 0, i32 2, i32 1
  %50 = bitcast %"struct.blink::PhysicalSize"* %49 to i64*
  %51 = load i64, i64* %50, align 4
  %52 = trunc i64 %48 to i32
  %53 = lshr i64 %48, 32
  %54 = trunc i64 %53 to i32
  %55 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %56 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %55, i64 0, i32 0, i32 9
  %57 = bitcast [20 x i8]* %56 to i160*
  %58 = load i160, i160* %57, align 8
  %59 = and i160 %58, 15211807202738752817960438464512
  %60 = icmp eq i160 %59, 5070602400912917605986812821504
  %61 = trunc i64 %51 to i32
  br i1 %60, label %62, label %67, !prof !3

62:                                               ; preds = %45
  %63 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %38, align 8
  %64 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %63, i64 106
  %65 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %64, align 8
  %66 = call i32 %65(%"class.blink::LayoutObject"* %7, i32 %52, i32 %61, %"class.blink::LayoutBox"* %37) #19
  br label %67

67:                                               ; preds = %45, %62
  %68 = phi i32 [ %66, %62 ], [ %52, %45 ]
  %69 = lshr i64 %51, 32
  %70 = trunc i64 %69 to i32
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #19
  %71 = sitofp i32 %68 to float
  %72 = fmul float %71, 1.562500e-02
  %73 = sitofp i32 %54 to float
  %74 = fmul float %73, 1.562500e-02
  %75 = sitofp i32 %61 to float
  %76 = fmul float %75, 1.562500e-02
  %77 = sitofp i32 %70 to float
  %78 = fmul float %77, 1.562500e-02
  %79 = insertelement <2 x float> undef, float %72, i32 0
  %80 = insertelement <2 x float> %79, float %74, i32 1
  %81 = insertelement <2 x float> undef, float %76, i32 0
  %82 = insertelement <2 x float> %81, float %78, i32 1
  store <2 x float> %80, <2 x float>* %35, align 8
  store <2 x float> %82, <2 x float>* %36, align 8
  call void @_ZN5blink9FloatRect5UniteERKS0_(%"class.blink::FloatRect"* nonnull %6, %"class.blink::FloatRect"* nonnull dereferenceable(16) %33) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #19
  br label %83

83:                                               ; preds = %67, %39
  call void @_ZN5blink14NGInlineCursor29MoveToNextForSameLayoutObjectEv(%"class.blink::NGInlineCursor"* nonnull %4) #19
  %84 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %29, align 8
  %85 = icmp eq %"class.blink::NGFragmentItem"* %84, null
  br i1 %85, label %86, label %39

86:                                               ; preds = %83, %25
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %26) #19
  br label %282

87:                                               ; preds = %18
  %88 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %89 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %88, i64 0, i32 0, i32 9
  %90 = bitcast [20 x i8]* %89 to i160*
  %91 = load i160, i160* %90, align 8
  %92 = and i160 %91, 15211807202738752817960438464512
  %93 = icmp eq i160 %92, 5070602400912917605986812821504
  br i1 %93, label %94, label %97, !prof !3

94:                                               ; preds = %87
  %95 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %7, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #19
  %96 = load i96, i96* %21, align 4
  br label %97

97:                                               ; preds = %94, %87
  %98 = phi i96 [ %96, %94 ], [ %22, %87 ]
  %99 = phi %"class.blink::LayoutBlock"* [ %95, %94 ], [ null, %87 ]
  %100 = and i96 %98, 268435456
  %101 = icmp eq i96 %100, 0
  br i1 %101, label %104, label %102

102:                                              ; preds = %97
  %103 = tail call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #19
  br label %106

104:                                              ; preds = %97
  %105 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0
  br label %106

106:                                              ; preds = %104, %102
  %107 = phi %"class.blink::InlineTextBoxList"* [ %103, %102 ], [ %105, %104 ]
  %108 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %107, i64 0, i32 0, i32 0
  %109 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %108, align 8
  %110 = icmp eq %"class.blink::InlineTextBox"* %109, null
  br i1 %110, label %282, label %111

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 7, i32 0, i32 0
  %113 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %99, i64 0, i32 0
  %114 = bitcast %"class.blink::LayoutText"* %0 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %115 = bitcast { <2 x float>, <2 x float> }* %3 to %"class.blink::FloatRect"*
  %116 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  %117 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  %118 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  %119 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %19, i64 0, i32 0
  br label %120

120:                                              ; preds = %265, %111
  %121 = phi %"class.blink::InlineTextBox"* [ %109, %111 ], [ %280, %265 ]
  %122 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %121, i64 0, i32 0
  %123 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %121, i64 0, i32 0, i32 5, i32 0, i32 0
  %124 = load i32, i32* %123, align 4
  %125 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %121, i64 0, i32 0, i32 5, i32 1, i32 0
  %126 = load i32, i32* %125, align 4
  %127 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %121, i64 0, i32 0, i32 7, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = and i32 %128, 2048
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %134, label %131

131:                                              ; preds = %120
  %132 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %121, i64 0, i32 0, i32 6, i32 0
  %133 = load i32, i32* %132, align 8
  br label %137

134:                                              ; preds = %120
  %135 = call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* %122) #19
  %136 = load i32, i32* %127, align 4
  br label %137

137:                                              ; preds = %134, %131
  %138 = phi i32 [ %128, %131 ], [ %136, %134 ]
  %139 = phi i32 [ %133, %131 ], [ %135, %134 ]
  %140 = and i32 %138, 2048
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %144, label %142

142:                                              ; preds = %137
  %143 = call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* %122) #19
  br label %147

144:                                              ; preds = %137
  %145 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %121, i64 0, i32 0, i32 6, i32 0
  %146 = load i32, i32* %145, align 8
  br label %147

147:                                              ; preds = %144, %142
  %148 = phi i32 [ %143, %142 ], [ %146, %144 ]
  %149 = zext i32 %148 to i64
  %150 = shl nuw i64 %149, 32
  %151 = zext i32 %139 to i64
  %152 = or i64 %150, %151
  %153 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %112, align 8
  %154 = icmp eq %"class.WTF::StringImpl"* %153, null
  br i1 %154, label %158, label %155

155:                                              ; preds = %147
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 1
  %157 = load i32, i32* %156, align 4
  br label %158

158:                                              ; preds = %155, %147
  %159 = phi i32 [ %157, %155 ], [ 0, %147 ]
  %160 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %121, i64 0, i32 5
  %161 = load i16, i16* %160, align 2
  %162 = zext i16 %161 to i32
  %163 = icmp eq i16 %161, -1
  br i1 %163, label %235, label %164

164:                                              ; preds = %158
  %165 = call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZN5blink9InlineBox4RootEv(%"class.blink::InlineBox"* %122) #19
  %166 = call %"class.blink::EllipsisBox"* @_ZNK5blink13RootInlineBox14GetEllipsisBoxEv(%"class.blink::RootInlineBox"* %165) #19
  %167 = icmp eq %"class.blink::EllipsisBox"* %166, null
  br i1 %167, label %235, label %168

168:                                              ; preds = %164
  %169 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %121, i64 0, i32 3
  %170 = load i32, i32* %169, align 8
  %171 = sub i32 0, %170
  %172 = icmp sgt i32 %171, 0
  %173 = select i1 %172, i32 %171, i32 0
  %174 = sub i32 %159, %170
  %175 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %121, i64 0, i32 4
  %176 = load i16, i16* %175, align 4
  %177 = zext i16 %176 to i32
  %178 = icmp sgt i32 %174, %177
  %179 = select i1 %178, i32 %177, i32 %174
  %180 = icmp slt i32 %179, %162
  %181 = icmp sgt i32 %173, %162
  %182 = or i1 %181, %180
  br i1 %182, label %235, label %183

183:                                              ; preds = %168
  %184 = call { i64, i64 } @_ZNK5blink11EllipsisBox13SelectionRectEv(%"class.blink::EllipsisBox"* nonnull %166) #19
  %185 = extractvalue { i64, i64 } %184, 0
  %186 = extractvalue { i64, i64 } %184, 1
  %187 = trunc i64 %185 to i32
  %188 = lshr i64 %185, 32
  %189 = trunc i64 %188 to i32
  %190 = trunc i64 %186 to i32
  %191 = icmp slt i32 %190, 1
  br i1 %191, label %235, label %192

192:                                              ; preds = %183
  %193 = lshr i64 %186, 32
  %194 = trunc i64 %193 to i32
  %195 = icmp slt i32 %194, 1
  br i1 %195, label %235, label %196

196:                                              ; preds = %192
  %197 = load i96, i96* %21, align 4
  %198 = trunc i96 %197 to i32
  %199 = icmp slt i32 %198, 0
  br i1 %199, label %200, label %217

200:                                              ; preds = %196
  %201 = add nsw i32 %187, %190
  %202 = icmp sgt i32 %201, 33554431
  br i1 %202, label %207, label %203

203:                                              ; preds = %200
  %204 = icmp slt i32 %201, -33554432
  %205 = shl i32 %201, 6
  %206 = select i1 %204, i32 -2147483648, i32 %205
  br label %207

207:                                              ; preds = %203, %200
  %208 = phi i32 [ 2147483647, %200 ], [ %206, %203 ]
  %209 = icmp sgt i32 %124, -1
  %210 = select i1 %209, i32 -2147483648, i32 2147483647
  %211 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %208, i32 %124) #19
  %212 = extractvalue { i32, i1 } %211, 1
  %213 = extractvalue { i32, i1 } %211, 0
  %214 = select i1 %212, i32 %210, i32 %213, !prof !3
  %215 = zext i32 %214 to i64
  %216 = or i64 %150, %215
  br label %235

217:                                              ; preds = %196
  %218 = add nsw i32 %189, %194
  %219 = icmp sgt i32 %218, 33554431
  br i1 %219, label %224, label %220

220:                                              ; preds = %217
  %221 = icmp slt i32 %218, -33554432
  %222 = shl i32 %218, 6
  %223 = select i1 %221, i32 -2147483648, i32 %222
  br label %224

224:                                              ; preds = %220, %217
  %225 = phi i32 [ 2147483647, %217 ], [ %223, %220 ]
  %226 = icmp sgt i32 %126, -1
  %227 = select i1 %226, i32 -2147483648, i32 2147483647
  %228 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %225, i32 %126) #19
  %229 = extractvalue { i32, i1 } %228, 1
  %230 = extractvalue { i32, i1 } %228, 0
  %231 = select i1 %229, i32 %227, i32 %230, !prof !3
  %232 = zext i32 %231 to i64
  %233 = shl nuw i64 %232, 32
  %234 = or i64 %233, %151
  br label %235

235:                                              ; preds = %224, %207, %192, %183, %168, %164, %158
  %236 = phi i64 [ %152, %192 ], [ %216, %207 ], [ %234, %224 ], [ %152, %183 ], [ %152, %158 ], [ %152, %164 ], [ %152, %168 ]
  %237 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %238 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %237, i64 0, i32 0, i32 9
  %239 = bitcast [20 x i8]* %238 to i160*
  %240 = load i160, i160* %239, align 8
  %241 = and i160 %240, 15211807202738752817960438464512
  %242 = icmp eq i160 %241, 5070602400912917605986812821504
  %243 = trunc i64 %236 to i32
  br i1 %242, label %244, label %253, !prof !3

244:                                              ; preds = %235
  %245 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %114, align 8
  %246 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %245, i64 106
  %247 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %246, align 8
  %248 = call i32 %247(%"class.blink::LayoutObject"* %7, i32 %124, i32 %243, %"class.blink::LayoutBox"* %113) #19
  %249 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %250 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %249, i64 0, i32 0, i32 9
  %251 = bitcast [20 x i8]* %250 to i160*
  %252 = load i160, i160* %251, align 8
  br label %253

253:                                              ; preds = %235, %244
  %254 = phi i160 [ %252, %244 ], [ %240, %235 ]
  %255 = phi i32 [ %248, %244 ], [ %124, %235 ]
  %256 = lshr i64 %236, 32
  %257 = trunc i64 %256 to i32
  %258 = and i160 %254, 15211807202738752817960438464512
  %259 = icmp eq i160 %258, 5070602400912917605986812821504
  br i1 %259, label %260, label %265, !prof !3

260:                                              ; preds = %253
  %261 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %114, align 8
  %262 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %261, i64 106
  %263 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %262, align 8
  %264 = call i32 %263(%"class.blink::LayoutObject"* %7, i32 %255, i32 %243, %"class.blink::LayoutBox"* %119) #19
  br label %265

265:                                              ; preds = %253, %260
  %266 = phi i32 [ %264, %260 ], [ %255, %253 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %116) #19
  %267 = sitofp i32 %266 to float
  %268 = fmul float %267, 1.562500e-02
  %269 = sitofp i32 %126 to float
  %270 = fmul float %269, 1.562500e-02
  %271 = sitofp i32 %243 to float
  %272 = fmul float %271, 1.562500e-02
  %273 = sitofp i32 %257 to float
  %274 = fmul float %273, 1.562500e-02
  %275 = insertelement <2 x float> undef, float %268, i32 0
  %276 = insertelement <2 x float> %275, float %270, i32 1
  %277 = insertelement <2 x float> undef, float %272, i32 0
  %278 = insertelement <2 x float> %277, float %274, i32 1
  store <2 x float> %276, <2 x float>* %117, align 8
  store <2 x float> %278, <2 x float>* %118, align 8
  call void @_ZN5blink9FloatRect5UniteERKS0_(%"class.blink::FloatRect"* nonnull %6, %"class.blink::FloatRect"* nonnull dereferenceable(16) %115) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %116) #19
  %279 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %121, i64 0, i32 2
  %280 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %279, align 8
  %281 = icmp eq %"class.blink::InlineTextBox"* %280, null
  br i1 %281, label %282, label %120

282:                                              ; preds = %265, %86, %106
  %283 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  %284 = load <2 x float>, <2 x float>* %283, align 8
  %285 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %284, 0
  %286 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  %287 = load <2 x float>, <2 x float>* %286, align 8
  %288 = insertvalue { <2 x float>, <2 x float> } %285, <2 x float> %287, 1
  ret { <2 x float>, <2 x float> } %288
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink10LayoutText16PositionForPointERKNS_14PhysicalOffsetE(%"class.blink::PositionWithAffinityTemplate"* noalias sret, %"class.blink::LayoutText"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::NGInlineCursor", align 8
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"struct.blink::PhysicalOffset"*
  %7 = alloca %"class.blink::PositionWithAffinityTemplate", align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %1, i64 0, i32 0
  %11 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %1, i64 0, i32 0, i32 4
  %12 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %11 to i96*
  %13 = load i96, i96* %12, align 4
  %14 = and i96 %13, 268435456
  %15 = icmp eq i96 %14, 0
  br i1 %15, label %203, label %16

16:                                               ; preds = %3
  %17 = bitcast %"class.blink::NGInlineCursor"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %17) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 112, i1 false)
  %18 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %4, i64 0, i32 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 81, i1 false) #19
  %19 = bitcast %"class.blink::LayoutBlockFlow"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 20, i1 false) #19
  call void @_ZN5blink14NGInlineCursor6MoveToERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"* nonnull %4, %"class.blink::LayoutObject"* dereferenceable(88) %10) #19
  %20 = call %"class.blink::LayoutBlockFlow"* @_ZNK5blink14NGInlineCursor18GetLayoutBlockFlowEv(%"class.blink::NGInlineCursor"* nonnull %4) #19
  %21 = bitcast %"struct.blink::PhysicalOffset"* %2 to i64*
  %22 = load i64, i64* %21, align 4
  %23 = trunc i64 %22 to i32
  %24 = lshr i64 %22, 32
  %25 = trunc i64 %24 to i32
  %26 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %27 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %26 to i96*
  %28 = load i96, i96* %27, align 4
  %29 = and i96 %28, 8589934592
  %30 = icmp eq i96 %29, 0
  br i1 %30, label %58, label %31

31:                                               ; preds = %16
  %32 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %33 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %33, i64 0, i32 0, i32 9
  %35 = bitcast [20 x i8]* %34 to i160*
  %36 = load i160, i160* %35, align 8
  %37 = lshr i160 %36, 74
  %38 = trunc i160 %37 to i32
  %39 = and i32 %38, 7
  switch i32 %39, label %40 [
    i32 5, label %58
    i32 2, label %58
  ]

40:                                               ; preds = %31
  %41 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %20, i64 0, i32 0, i32 0
  %42 = call i64 @_ZNK5blink9LayoutBox33PixelSnappedScrolledContentOffsetEv(%"class.blink::LayoutBox"* %41) #19
  %43 = trunc i64 %42 to i32
  %44 = lshr i64 %42, 32
  %45 = trunc i64 %44 to i32
  %46 = icmp slt i32 %43, 0
  %47 = select i1 %46, i32 -2147483648, i32 2147483647
  %48 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %23, i32 %43) #19
  %49 = extractvalue { i32, i1 } %48, 1
  %50 = extractvalue { i32, i1 } %48, 0
  %51 = select i1 %49, i32 %47, i32 %50, !prof !3
  %52 = icmp slt i32 %45, 0
  %53 = select i1 %52, i32 -2147483648, i32 2147483647
  %54 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %25, i32 %45) #19
  %55 = extractvalue { i32, i1 } %54, 1
  %56 = extractvalue { i32, i1 } %54, 0
  %57 = select i1 %55, i32 %53, i32 %56, !prof !3
  br label %58

58:                                               ; preds = %31, %31, %16, %40
  %59 = phi i32 [ %51, %40 ], [ %23, %31 ], [ %23, %16 ], [ %23, %31 ]
  %60 = phi i32 [ %57, %40 ], [ %25, %31 ], [ %25, %16 ], [ %25, %31 ]
  %61 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #19
  %62 = bitcast i64* %5 to i32*
  %63 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %6, i64 0, i32 1, i32 0
  store i32 0, i32* %62, align 8
  store i32 0, i32* %63, align 4
  %64 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %4, i64 0, i32 0, i32 0
  %65 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %64, align 8
  %66 = icmp eq %"class.blink::NGFragmentItem"* %65, null
  br i1 %66, label %197, label %67

67:                                               ; preds = %58
  %68 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %4, i64 0, i32 3
  %69 = bitcast %"class.blink::PositionWithAffinityTemplate"* %7 to i8*
  %70 = getelementptr inbounds %"class.blink::PositionWithAffinityTemplate", %"class.blink::PositionWithAffinityTemplate"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %71 = getelementptr inbounds %"class.blink::PositionWithAffinityTemplate", %"class.blink::PositionWithAffinityTemplate"* %7, i64 0, i32 0, i32 1
  %72 = getelementptr inbounds %"class.blink::PositionWithAffinityTemplate", %"class.blink::PositionWithAffinityTemplate"* %7, i64 0, i32 1
  %73 = bitcast %"class.blink::PositionWithAffinityTemplate"* %7 to i8*
  br label %74

74:                                               ; preds = %67, %194
  %75 = phi %"class.blink::NGFragmentItem"* [ %65, %67 ], [ %195, %194 ]
  %76 = phi %"class.blink::NGPhysicalBoxFragment"* [ null, %67 ], [ %103, %194 ]
  %77 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %68, align 8
  %78 = icmp eq %"class.blink::NGPhysicalBoxFragment"* %76, %77
  br i1 %78, label %101, label %79

79:                                               ; preds = %74
  %80 = call i64 @_ZNK5blink21NGPhysicalBoxFragment24OffsetFromOwnerLayoutBoxEv(%"class.blink::NGPhysicalBoxFragment"* %77) #19
  %81 = trunc i64 %80 to i32
  %82 = lshr i64 %80, 32
  %83 = trunc i64 %82 to i32
  %84 = icmp sgt i32 %81, -1
  %85 = select i1 %84, i32 -2147483648, i32 2147483647
  %86 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %59, i32 %81) #19
  %87 = extractvalue { i32, i1 } %86, 1
  %88 = extractvalue { i32, i1 } %86, 0
  %89 = select i1 %87, i32 %85, i32 %88, !prof !3
  %90 = icmp sgt i32 %83, -1
  %91 = select i1 %90, i32 -2147483648, i32 2147483647
  %92 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %60, i32 %83) #19
  %93 = extractvalue { i32, i1 } %92, 1
  %94 = extractvalue { i32, i1 } %92, 0
  %95 = select i1 %93, i32 %91, i32 %94, !prof !3
  %96 = zext i32 %95 to i64
  %97 = shl nuw i64 %96, 32
  %98 = zext i32 %89 to i64
  %99 = or i64 %97, %98
  store i64 %99, i64* %5, align 8
  %100 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %64, align 8
  br label %101

101:                                              ; preds = %74, %79
  %102 = phi %"class.blink::NGFragmentItem"* [ %100, %79 ], [ %75, %74 ]
  %103 = phi %"class.blink::NGPhysicalBoxFragment"* [ %77, %79 ], [ %76, %74 ]
  %104 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %102, i64 0, i32 2
  %105 = bitcast %"struct.blink::PhysicalRect"* %104 to i64*
  %106 = load i64, i64* %105, align 4
  %107 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %102, i64 0, i32 2, i32 1
  %108 = bitcast %"struct.blink::PhysicalSize"* %107 to i64*
  %109 = load i64, i64* %108, align 4
  %110 = trunc i64 %106 to i32
  %111 = lshr i64 %106, 32
  %112 = trunc i64 %111 to i32
  %113 = icmp slt i32 %110, -2147483584
  %114 = ashr i32 %110, 6
  %115 = select i1 %113, i32 -33554432, i32 %114, !prof !3
  %116 = icmp slt i32 %112, -2147483584
  %117 = ashr i32 %112, 6
  %118 = select i1 %116, i32 -33554432, i32 %117, !prof !3
  %119 = trunc i64 %109 to i32
  %120 = icmp slt i32 %119, 0
  %121 = select i1 %120, i32 -2147483648, i32 2147483647
  %122 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %110, i32 %119) #19
  %123 = extractvalue { i32, i1 } %122, 1
  %124 = extractvalue { i32, i1 } %122, 0
  %125 = select i1 %123, i32 %121, i32 %124, !prof !3
  %126 = lshr i64 %109, 32
  %127 = trunc i64 %126 to i32
  %128 = icmp slt i32 %127, 0
  %129 = select i1 %128, i32 -2147483648, i32 2147483647
  %130 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %112, i32 %127) #19
  %131 = extractvalue { i32, i1 } %130, 1
  %132 = extractvalue { i32, i1 } %130, 0
  %133 = select i1 %131, i32 %129, i32 %132, !prof !3
  %134 = icmp sgt i32 %125, 2147483583
  br i1 %134, label %142, label %135, !prof !3

135:                                              ; preds = %101
  %136 = icmp sgt i32 %125, -1
  br i1 %136, label %137, label %140

137:                                              ; preds = %135
  %138 = add nuw nsw i32 %125, 63
  %139 = sdiv i32 %138, 64
  br label %142

140:                                              ; preds = %135
  %141 = sdiv i32 %125, 64
  br label %142

142:                                              ; preds = %140, %137, %101
  %143 = phi i32 [ %139, %137 ], [ %141, %140 ], [ 33554431, %101 ]
  %144 = icmp sgt i32 %133, 2147483583
  br i1 %144, label %152, label %145, !prof !3

145:                                              ; preds = %142
  %146 = icmp sgt i32 %133, -1
  br i1 %146, label %147, label %150

147:                                              ; preds = %145
  %148 = add nuw nsw i32 %133, 63
  %149 = sdiv i32 %148, 64
  br label %152

150:                                              ; preds = %145
  %151 = sdiv i32 %133, 64
  br label %152

152:                                              ; preds = %142, %147, %150
  %153 = phi i32 [ %149, %147 ], [ %151, %150 ], [ 33554431, %142 ]
  %154 = load i32, i32* %62, align 8
  %155 = icmp slt i32 %154, -2147483584
  %156 = ashr i32 %154, 6
  %157 = select i1 %155, i32 -33554432, i32 %156, !prof !3
  %158 = load i32, i32* %63, align 4
  %159 = icmp slt i32 %158, -2147483584
  %160 = ashr i32 %158, 6
  %161 = select i1 %159, i32 -33554432, i32 %160, !prof !3
  %162 = icmp sgt i32 %115, %157
  br i1 %162, label %194, label %163

163:                                              ; preds = %152
  %164 = icmp sgt i32 %143, %157
  %165 = icmp sle i32 %118, %161
  %166 = and i1 %164, %165
  %167 = icmp sgt i32 %153, %161
  %168 = and i1 %167, %166
  br i1 %168, label %169, label %194

169:                                              ; preds = %163
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 -86, i64 24, i1 false)
  call void @_ZNK5blink14NGInlineCursor23PositionForPointInChildERKNS_14PhysicalOffsetE(%"class.blink::PositionWithAffinityTemplate"* nonnull sret %7, %"class.blink::NGInlineCursor"* nonnull %4, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %6) #19
  %170 = load %"class.blink::Node"*, %"class.blink::Node"** %70, align 8
  %171 = icmp eq %"class.blink::Node"* %170, null
  br i1 %171, label %193, label %172

172:                                              ; preds = %169
  %173 = getelementptr inbounds %"class.blink::PositionWithAffinityTemplate", %"class.blink::PositionWithAffinityTemplate"* %7, i64 0, i32 0
  %174 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %173) #19
  %175 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %174, i64 0, i32 1
  %176 = load i32, i32* %175, align 8
  %177 = and i32 %176, 1
  %178 = icmp eq i32 %177, 0
  %179 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %174, i64 0, i32 6, i32 0, i32 0
  br i1 %178, label %184, label %180

180:                                              ; preds = %172
  %181 = bitcast %"class.blink::NodeData"** %179 to %"class.blink::NodeRareData"**
  %182 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %181, align 8
  %183 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %182, i64 0, i32 1, i32 0, i32 0
  br label %186

184:                                              ; preds = %172
  %185 = bitcast %"class.blink::NodeData"** %179 to %"class.blink::NodeRenderingData"**
  br label %186

186:                                              ; preds = %180, %184
  %187 = phi %"class.blink::NodeRenderingData"** [ %183, %180 ], [ %185, %184 ]
  %188 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %187, align 8
  %189 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %188, i64 0, i32 1
  %190 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %189, align 8
  %191 = load i32, i32* %71, align 8
  %192 = load i32, i32* %72, align 8
  call void @_ZNK5blink12LayoutObject26CreatePositionWithAffinityEiNS_12TextAffinityE(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::LayoutObject"* %190, i32 %191, i32 %192) #19
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %7) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #19
  br label %202

193:                                              ; preds = %169
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %7) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #19
  br label %194

194:                                              ; preds = %163, %152, %193
  call void @_ZN5blink14NGInlineCursor29MoveToNextForSameLayoutObjectEv(%"class.blink::NGInlineCursor"* nonnull %4) #19
  %195 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %64, align 8
  %196 = icmp eq %"class.blink::NGFragmentItem"* %195, null
  br i1 %196, label %197, label %74

197:                                              ; preds = %194, %58
  %198 = bitcast %"class.blink::LayoutBlockFlow"* %20 to void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBlockFlow"*, %"struct.blink::PhysicalOffset"*)***
  %199 = load void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBlockFlow"*, %"struct.blink::PhysicalOffset"*)**, void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBlockFlow"*, %"struct.blink::PhysicalOffset"*)*** %198, align 8
  %200 = getelementptr inbounds void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBlockFlow"*, %"struct.blink::PhysicalOffset"*)*, void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBlockFlow"*, %"struct.blink::PhysicalOffset"*)** %199, i64 64
  %201 = load void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBlockFlow"*, %"struct.blink::PhysicalOffset"*)*, void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBlockFlow"*, %"struct.blink::PhysicalOffset"*)** %200, align 8
  call void %201(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::LayoutBlockFlow"* %20, %"struct.blink::PhysicalOffset"* dereferenceable(8) %2) #19
  br label %202

202:                                              ; preds = %186, %197
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #19
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %17) #19
  br label %341

203:                                              ; preds = %3
  %204 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %1, i64 0, i32 9, i32 0, i32 0, i32 0
  %205 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %204, align 8
  %206 = icmp eq %"class.blink::InlineTextBox"* %205, null
  br i1 %206, label %215, label %207

207:                                              ; preds = %203
  %208 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %1, i64 0, i32 7, i32 0, i32 0
  %209 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %208, align 8
  %210 = icmp eq %"class.WTF::StringImpl"* %209, null
  br i1 %210, label %215, label %211

211:                                              ; preds = %207
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %209, i64 0, i32 1
  %213 = load i32, i32* %212, align 4
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %215, label %216

215:                                              ; preds = %207, %203, %211
  tail call void @_ZNK5blink12LayoutObject26CreatePositionWithAffinityEi(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::LayoutObject"* %10, i32 0) #19
  br label %341

216:                                              ; preds = %211
  %217 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %1, i64 0, i32 0, i32 5, i32 0
  %218 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %217, align 8
  %219 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %218, i64 0, i32 0, i32 9
  %220 = bitcast [20 x i8]* %219 to i160*
  %221 = load i160, i160* %220, align 8
  %222 = and i160 %221, 15211807202738752817960438464512
  %223 = icmp eq i160 %222, 5070602400912917605986812821504
  %224 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 0, i32 0
  %225 = load i32, i32* %224, align 4
  br i1 %223, label %226, label %238, !prof !3

226:                                              ; preds = %216
  %227 = bitcast %"class.blink::LayoutText"* %1 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %228 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %227, align 8
  %229 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %228, i64 106
  %230 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %229, align 8
  %231 = tail call i32 %230(%"class.blink::LayoutObject"* %10, i32 %225, i32 0, %"class.blink::LayoutBox"* null) #19
  %232 = load i96, i96* %12, align 4
  %233 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %217, align 8
  %234 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %233, i64 0, i32 0, i32 9
  %235 = bitcast [20 x i8]* %234 to i160*
  %236 = load i160, i160* %235, align 8
  %237 = and i160 %236, 15211807202738752817960438464512
  br label %238

238:                                              ; preds = %216, %226
  %239 = phi i160 [ %222, %216 ], [ %237, %226 ]
  %240 = phi i96 [ %13, %216 ], [ %232, %226 ]
  %241 = phi i32 [ %225, %216 ], [ %231, %226 ]
  %242 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 1, i32 0
  %243 = load i32, i32* %242, align 4
  %244 = trunc i96 %240 to i32
  %245 = icmp slt i32 %244, 0
  %246 = select i1 %245, i32 %241, i32 %243
  %247 = select i1 %245, i32 %243, i32 %241
  %248 = icmp eq i160 %239, 5070602400912917605986812821504
  %249 = and i96 %240, 268435456
  %250 = icmp eq i96 %249, 0
  br i1 %250, label %253, label %251

251:                                              ; preds = %238
  %252 = tail call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #19
  br label %255

253:                                              ; preds = %238
  %254 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %1, i64 0, i32 9, i32 0
  br label %255

255:                                              ; preds = %251, %253
  %256 = phi %"class.blink::InlineTextBoxList"* [ %252, %251 ], [ %254, %253 ]
  %257 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %256, i64 0, i32 0, i32 0
  %258 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %257, align 8
  %259 = icmp eq %"class.blink::InlineTextBox"* %258, null
  br i1 %259, label %340, label %260

260:                                              ; preds = %255
  %261 = xor i1 %248, true
  %262 = bitcast i32* %8 to i8*
  %263 = sdiv i32 %246, 64
  br label %264

264:                                              ; preds = %260, %317
  %265 = phi %"class.blink::InlineTextBox"* [ %258, %260 ], [ %319, %317 ]
  %266 = tail call zeroext i1 @_ZNK5blink13InlineTextBox11IsLineBreakEv(%"class.blink::InlineTextBox"* nonnull %265) #19
  br i1 %266, label %267, label %284

267:                                              ; preds = %264
  %268 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %265, i64 0, i32 0
  %269 = tail call %"class.blink::InlineBox"* @_ZNK5blink9InlineBox13PrevLeafChildEv(%"class.blink::InlineBox"* %268) #19
  %270 = icmp eq %"class.blink::InlineBox"* %269, null
  br i1 %270, label %271, label %284

271:                                              ; preds = %267
  %272 = tail call %"class.blink::InlineBox"* @_ZNK5blink9InlineBox13NextLeafChildEv(%"class.blink::InlineBox"* %268) #19
  %273 = icmp eq %"class.blink::InlineBox"* %272, null
  br i1 %273, label %284, label %274

274:                                              ; preds = %271
  %275 = tail call %"class.blink::InlineBox"* @_ZNK5blink9InlineBox13NextLeafChildEv(%"class.blink::InlineBox"* %268) #19
  %276 = bitcast %"class.blink::InlineBox"* %275 to i1 (%"class.blink::InlineBox"*)***
  %277 = load i1 (%"class.blink::InlineBox"*)**, i1 (%"class.blink::InlineBox"*)*** %276, align 8
  %278 = getelementptr inbounds i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %277, i64 9
  %279 = load i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %278, align 8
  %280 = tail call zeroext i1 %279(%"class.blink::InlineBox"* %275) #19
  br i1 %280, label %284, label %281

281:                                              ; preds = %274
  %282 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %265, i64 0, i32 2
  %283 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %282, align 8
  br label %284

284:                                              ; preds = %271, %267, %281, %274, %264
  %285 = phi %"class.blink::InlineTextBox"* [ %265, %267 ], [ %265, %274 ], [ %283, %281 ], [ %265, %271 ], [ %265, %264 ]
  %286 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %285, i64 0, i32 0
  %287 = tail call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZN5blink9InlineBox4RootEv(%"class.blink::InlineBox"* %286) #19
  %288 = tail call i32 @_ZNK5blink13RootInlineBox12SelectionTopEv(%"class.blink::RootInlineBox"* %287) #19
  %289 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %287, i64 0, i32 5, i32 0
  %290 = load i32, i32* %289, align 8
  %291 = icmp slt i32 %290, %288
  %292 = select i1 %291, i32 %290, i32 %288
  %293 = icmp sgt i32 %247, %292
  %294 = icmp eq i32 %247, %292
  %295 = and i1 %294, %261
  %296 = or i1 %293, %295
  br i1 %296, label %297, label %317

297:                                              ; preds = %284
  %298 = tail call i32 @_ZNK5blink13RootInlineBox15SelectionBottomEv(%"class.blink::RootInlineBox"* %287) #19
  %299 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %287, i64 0, i32 0, i32 5
  %300 = bitcast %"class.blink::InlineFlowBox"** %299 to %"class.blink::RootInlineBox"**
  %301 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %300, align 8
  %302 = icmp eq %"class.blink::RootInlineBox"* %301, null
  br i1 %302, label %308, label %303

303:                                              ; preds = %297
  %304 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %301, i64 0, i32 5, i32 0
  %305 = load i32, i32* %304, align 8
  %306 = icmp slt i32 %305, %298
  %307 = select i1 %306, i32 %305, i32 %298
  br label %308

308:                                              ; preds = %297, %303
  %309 = phi i32 [ %298, %297 ], [ %307, %303 ]
  %310 = icmp slt i32 %247, %309
  %311 = icmp eq i32 %247, %309
  %312 = and i1 %248, %311
  %313 = or i1 %310, %312
  br i1 %313, label %314, label %317

314:                                              ; preds = %308
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %262) #19
  store i32 -1431655766, i32* %8, align 4
  %315 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_127LineDirectionPointFitsInBoxEiPNS_13InlineTextBoxERNS0_26ShouldAffinityBeDownstreamE(i32 %263, %"class.blink::InlineTextBox"* %285, i32* nonnull dereferenceable(4) %8)
  br i1 %315, label %321, label %316

316:                                              ; preds = %314
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %262) #19
  br label %317

317:                                              ; preds = %316, %308, %284
  %318 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %265, i64 0, i32 2
  %319 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %318, align 8
  %320 = icmp eq %"class.blink::InlineTextBox"* %319, null
  br i1 %320, label %328, label %264

321:                                              ; preds = %314
  %322 = bitcast %"class.blink::InlineTextBox"* %285 to i32 (%"class.blink::InlineTextBox"*, i32, i32, i32)***
  %323 = load i32 (%"class.blink::InlineTextBox"*, i32, i32, i32)**, i32 (%"class.blink::InlineTextBox"*, i32, i32, i32)*** %322, align 8
  %324 = getelementptr inbounds i32 (%"class.blink::InlineTextBox"*, i32, i32, i32)*, i32 (%"class.blink::InlineTextBox"*, i32, i32, i32)** %323, i64 37
  %325 = load i32 (%"class.blink::InlineTextBox"*, i32, i32, i32)*, i32 (%"class.blink::InlineTextBox"*, i32, i32, i32)** %324, align 8
  %326 = tail call i32 %325(%"class.blink::InlineTextBox"* %285, i32 %246, i32 1, i32 1) #19
  %327 = load i32, i32* %8, align 4
  tail call fastcc void @_ZN5blink12_GLOBAL__N_159CreatePositionWithAffinityForBoxAfterAdjustingOffsetForBiDiEPKNS_13InlineTextBoxEiNS0_26ShouldAffinityBeDownstreamE(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::InlineTextBox"* %285, i32 %326, i32 %327)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %262) #19
  br label %341

328:                                              ; preds = %317
  %329 = icmp eq %"class.blink::InlineTextBox"* %285, null
  br i1 %329, label %340, label %330

330:                                              ; preds = %328
  %331 = bitcast %"class.blink::InlineTextBox"* %285 to i32 (%"class.blink::InlineTextBox"*, i32, i32, i32)***
  %332 = load i32 (%"class.blink::InlineTextBox"*, i32, i32, i32)**, i32 (%"class.blink::InlineTextBox"*, i32, i32, i32)*** %331, align 8
  %333 = getelementptr inbounds i32 (%"class.blink::InlineTextBox"*, i32, i32, i32)*, i32 (%"class.blink::InlineTextBox"*, i32, i32, i32)** %332, i64 37
  %334 = load i32 (%"class.blink::InlineTextBox"*, i32, i32, i32)*, i32 (%"class.blink::InlineTextBox"*, i32, i32, i32)** %333, align 8
  %335 = tail call i32 %334(%"class.blink::InlineTextBox"* nonnull %285, i32 %246, i32 1, i32 1) #19
  %336 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %336) #19
  store i32 -1431655766, i32* %9, align 4
  %337 = sdiv i32 %246, 64
  %338 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_127LineDirectionPointFitsInBoxEiPNS_13InlineTextBoxERNS0_26ShouldAffinityBeDownstreamE(i32 %337, %"class.blink::InlineTextBox"* nonnull %285, i32* nonnull dereferenceable(4) %9)
  %339 = load i32, i32* %9, align 4
  tail call fastcc void @_ZN5blink12_GLOBAL__N_159CreatePositionWithAffinityForBoxAfterAdjustingOffsetForBiDiEPKNS_13InlineTextBoxEiNS0_26ShouldAffinityBeDownstreamE(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::InlineTextBox"* nonnull %285, i32 %335, i32 %339)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %336) #19
  br label %341

340:                                              ; preds = %255, %328
  tail call void @_ZNK5blink12LayoutObject26CreatePositionWithAffinityEi(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::LayoutObject"* %10, i32 0) #19
  br label %341

341:                                              ; preds = %330, %340, %321, %215, %202
  ret void
}

declare %"class.blink::LayoutBlockFlow"* @_ZNK5blink14NGInlineCursor18GetLayoutBlockFlowEv(%"class.blink::NGInlineCursor"*) local_unnamed_addr #1

declare i64 @_ZNK5blink9LayoutBox33PixelSnappedScrolledContentOffsetEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i64 @_ZNK5blink21NGPhysicalBoxFragment24OffsetFromOwnerLayoutBoxEv(%"class.blink::NGPhysicalBoxFragment"*) local_unnamed_addr #1

declare void @_ZNK5blink14NGInlineCursor23PositionForPointInChildERKNS_14PhysicalOffsetE(%"class.blink::PositionWithAffinityTemplate"* sret, %"class.blink::NGInlineCursor"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #1

declare void @_ZNK5blink12LayoutObject26CreatePositionWithAffinityEiNS_12TextAffinityE(%"class.blink::PositionWithAffinityTemplate"* sret, %"class.blink::LayoutObject"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"*) unnamed_addr #3

declare void @_ZNK5blink12LayoutObject26CreatePositionWithAffinityEi(%"class.blink::PositionWithAffinityTemplate"* sret, %"class.blink::LayoutObject"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink13InlineTextBox11IsLineBreakEv(%"class.blink::InlineTextBox"*) unnamed_addr #1

declare %"class.blink::InlineBox"* @_ZNK5blink9InlineBox13PrevLeafChildEv(%"class.blink::InlineBox"*) local_unnamed_addr #1

declare %"class.blink::InlineBox"* @_ZNK5blink9InlineBox13NextLeafChildEv(%"class.blink::InlineBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink13RootInlineBox12SelectionTopEv(%"class.blink::RootInlineBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink13RootInlineBox15SelectionBottomEv(%"class.blink::RootInlineBox"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_127LineDirectionPointFitsInBoxEiPNS_13InlineTextBoxERNS0_26ShouldAffinityBeDownstreamE(i32, %"class.blink::InlineTextBox"*, i32* nocapture dereferenceable(4)) unnamed_addr #0 {
  store i32 0, i32* %2, align 4
  %4 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %1, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %1, i64 0, i32 0, i32 7, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 2048
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %1, i64 0, i32 0, i32 5, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %1, i64 0, i32 0, i32 5, i32 1, i32 0
  %11 = select i1 %8, i32* %10, i32* %9
  %12 = load i32, i32* %11, align 4
  %13 = icmp sgt i32 %0, 33554431
  br i1 %13, label %18, label %14

14:                                               ; preds = %3
  %15 = icmp slt i32 %0, -33554432
  %16 = shl i32 %0, 6
  %17 = select i1 %15, i32 -2147483648, i32 %16
  br label %18

18:                                               ; preds = %3, %14
  %19 = phi i32 [ 2147483647, %3 ], [ %17, %14 ]
  %20 = icmp sgt i32 %19, %12
  br i1 %20, label %25, label %21

21:                                               ; preds = %18
  %22 = tail call %"class.blink::InlineBox"* @_ZNK5blink9InlineBox13PrevLeafChildEv(%"class.blink::InlineBox"* %4) #19
  %23 = icmp eq %"class.blink::InlineBox"* %22, null
  %24 = select i1 %23, i32 2, i32 0
  store i32 %24, i32* %2, align 4
  br label %60

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %1, i64 0, i32 0, i32 6, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %12, i32 %27) #19
  br i1 %13, label %29, label %31

29:                                               ; preds = %25
  %30 = tail call %"class.blink::InlineBox"* @_ZNK5blink9InlineBox30PrevLeafChildIgnoringLineBreakEv(%"class.blink::InlineBox"* %4) #19
  br label %56

31:                                               ; preds = %25
  %32 = extractvalue { i32, i1 } %28, 1
  %33 = icmp slt i32 %27, 0
  %34 = select i1 %33, i32 -2147483648, i32 2147483647
  %35 = extractvalue { i32, i1 } %28, 0
  %36 = select i1 %32, i32 %34, i32 %35, !prof !3
  %37 = icmp slt i32 %0, -33554432
  %38 = shl i32 %0, 6
  %39 = select i1 %37, i32 -2147483648, i32 %38
  %40 = icmp slt i32 %39, %36
  br i1 %40, label %41, label %42

41:                                               ; preds = %31
  store i32 2, i32* %2, align 4
  br label %60

42:                                               ; preds = %31
  %43 = tail call %"class.blink::InlineBox"* @_ZNK5blink9InlineBox30PrevLeafChildIgnoringLineBreakEv(%"class.blink::InlineBox"* %4) #19
  %44 = icmp ne %"class.blink::InlineBox"* %43, null
  %45 = or i1 %13, %44
  br i1 %45, label %56, label %46

46:                                               ; preds = %42
  %47 = load i32, i32* %5, align 4
  %48 = and i32 %47, 2048
  %49 = icmp eq i32 %48, 0
  %50 = select i1 %49, i32* %10, i32* %9
  %51 = load i32, i32* %50, align 4
  %52 = icmp slt i32 %0, -33554432
  %53 = shl i32 %0, 6
  %54 = select i1 %52, i32 -2147483648, i32 %53
  %55 = icmp slt i32 %54, %51
  br i1 %55, label %60, label %56

56:                                               ; preds = %29, %42, %46
  %57 = tail call %"class.blink::InlineBox"* @_ZNK5blink9InlineBox30NextLeafChildIgnoringLineBreakEv(%"class.blink::InlineBox"* %4) #19
  %58 = icmp eq %"class.blink::InlineBox"* %57, null
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  store i32 2, i32* %2, align 4
  br label %60

60:                                               ; preds = %56, %46, %59, %41, %21
  %61 = phi i1 [ true, %21 ], [ true, %41 ], [ true, %59 ], [ true, %46 ], [ false, %56 ]
  ret i1 %61
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_159CreatePositionWithAffinityForBoxAfterAdjustingOffsetForBiDiEPKNS_13InlineTextBoxEiNS0_26ShouldAffinityBeDownstreamE(%"class.blink::PositionWithAffinityTemplate"* noalias sret, %"class.blink::InlineTextBox"*, i32, i32) unnamed_addr #0 {
  %5 = alloca %"struct.blink::InlineBoxPosition", align 8
  %6 = icmp eq i32 %2, 0
  br i1 %6, label %47, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %1, i64 0, i32 4
  %9 = load i16, i16* %8, align 4
  %10 = zext i16 %9 to i32
  %11 = icmp ugt i32 %10, %2
  br i1 %11, label %12, label %47

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %1, i64 0, i32 3
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, %2
  switch i32 %3, label %26 [
    i32 2, label %17
    i32 1, label %16
  ]

16:                                               ; preds = %12
  br label %26

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %1, i64 0, i32 0
  %19 = bitcast %"class.blink::InlineTextBox"* %1 to i32 (%"class.blink::InlineBox"*)***
  %20 = load i32 (%"class.blink::InlineBox"*)**, i32 (%"class.blink::InlineBox"*)*** %19, align 8, !noalias !26
  %21 = getelementptr inbounds i32 (%"class.blink::InlineBox"*)*, i32 (%"class.blink::InlineBox"*)** %20, i64 25
  %22 = load i32 (%"class.blink::InlineBox"*)*, i32 (%"class.blink::InlineBox"*)** %21, align 8
  %23 = tail call i32 %22(%"class.blink::InlineBox"* %18) #19
  %24 = icmp sge i32 %23, %15
  %25 = zext i1 %24 to i32
  br label %26

26:                                               ; preds = %17, %16, %12
  %27 = phi i32 [ %25, %17 ], [ 0, %16 ], [ 1, %12 ]
  %28 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %1, i64 0, i32 0, i32 4, i32 0
  %29 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %28, align 8, !noalias !26
  %30 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %29, i64 0, i32 4
  %31 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %30 to i96*
  %32 = load i96, i96* %31, align 4, !noalias !26
  %33 = and i96 %32, 33554432
  %34 = icmp eq i96 %33, 0
  br i1 %34, label %43, label %35

35:                                               ; preds = %26
  %36 = bitcast %"class.blink::LayoutObject"* %29 to %"class.blink::LayoutText"*
  %37 = bitcast %"class.blink::LayoutObject"* %29 to i32 (%"class.blink::LayoutText"*)***
  %38 = load i32 (%"class.blink::LayoutText"*)**, i32 (%"class.blink::LayoutText"*)*** %37, align 8
  %39 = getelementptr inbounds i32 (%"class.blink::LayoutText"*)*, i32 (%"class.blink::LayoutText"*)** %38, i64 109
  %40 = load i32 (%"class.blink::LayoutText"*)*, i32 (%"class.blink::LayoutText"*)** %39, align 8
  %41 = tail call i32 %40(%"class.blink::LayoutText"* %36) #19
  %42 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %28, align 8, !noalias !26
  br label %43

43:                                               ; preds = %26, %35
  %44 = phi %"class.blink::LayoutObject"* [ %42, %35 ], [ %29, %26 ]
  %45 = phi i32 [ %41, %35 ], [ 0, %26 ]
  %46 = add nsw i32 %45, %15
  tail call void @_ZNK5blink12LayoutObject26CreatePositionWithAffinityEiNS_12TextAffinityE(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::LayoutObject"* %44, i32 %46, i32 %27) #19
  br label %88

47:                                               ; preds = %4, %7
  %48 = bitcast %"struct.blink::InlineBoxPosition"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #19
  %49 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %1, i64 0, i32 0
  %50 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %1, i64 0, i32 3
  %51 = load i32, i32* %50, align 8
  %52 = add i32 %51, %2
  %53 = getelementptr inbounds %"struct.blink::InlineBoxPosition", %"struct.blink::InlineBoxPosition"* %5, i64 0, i32 0
  store %"class.blink::InlineBox"* %49, %"class.blink::InlineBox"** %53, align 8
  %54 = getelementptr inbounds %"struct.blink::InlineBoxPosition", %"struct.blink::InlineBoxPosition"* %5, i64 0, i32 1
  store i32 %52, i32* %54, align 8
  %55 = call { %"class.blink::InlineBox"*, i32 } @_ZN5blink14BidiAdjustment16AdjustForHitTestERKNS_17InlineBoxPositionE(%"struct.blink::InlineBoxPosition"* nonnull dereferenceable(16) %5) #19
  %56 = extractvalue { %"class.blink::InlineBox"*, i32 } %55, 0
  %57 = extractvalue { %"class.blink::InlineBox"*, i32 } %55, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #19
  switch i32 %3, label %67 [
    i32 2, label %59
    i32 1, label %58
  ]

58:                                               ; preds = %47
  br label %67

59:                                               ; preds = %47
  %60 = bitcast %"class.blink::InlineBox"* %56 to i32 (%"class.blink::InlineBox"*)***
  %61 = load i32 (%"class.blink::InlineBox"*)**, i32 (%"class.blink::InlineBox"*)*** %60, align 8, !noalias !29
  %62 = getelementptr inbounds i32 (%"class.blink::InlineBox"*)*, i32 (%"class.blink::InlineBox"*)** %61, i64 25
  %63 = load i32 (%"class.blink::InlineBox"*)*, i32 (%"class.blink::InlineBox"*)** %62, align 8
  %64 = call i32 %63(%"class.blink::InlineBox"* %56) #19
  %65 = icmp sge i32 %64, %57
  %66 = zext i1 %65 to i32
  br label %67

67:                                               ; preds = %59, %58, %47
  %68 = phi i32 [ %66, %59 ], [ 0, %58 ], [ 1, %47 ]
  %69 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %56, i64 0, i32 4, i32 0
  %70 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %69, align 8, !noalias !29
  %71 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %70, i64 0, i32 4
  %72 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %71 to i96*
  %73 = load i96, i96* %72, align 4, !noalias !29
  %74 = and i96 %73, 33554432
  %75 = icmp eq i96 %74, 0
  br i1 %75, label %84, label %76

76:                                               ; preds = %67
  %77 = bitcast %"class.blink::LayoutObject"* %70 to %"class.blink::LayoutText"*
  %78 = bitcast %"class.blink::LayoutObject"* %70 to i32 (%"class.blink::LayoutText"*)***
  %79 = load i32 (%"class.blink::LayoutText"*)**, i32 (%"class.blink::LayoutText"*)*** %78, align 8
  %80 = getelementptr inbounds i32 (%"class.blink::LayoutText"*)*, i32 (%"class.blink::LayoutText"*)** %79, i64 109
  %81 = load i32 (%"class.blink::LayoutText"*)*, i32 (%"class.blink::LayoutText"*)** %80, align 8
  %82 = call i32 %81(%"class.blink::LayoutText"* %77) #19
  %83 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %69, align 8, !noalias !29
  br label %84

84:                                               ; preds = %67, %76
  %85 = phi %"class.blink::LayoutObject"* [ %83, %76 ], [ %70, %67 ]
  %86 = phi i32 [ %82, %76 ], [ 0, %67 ]
  %87 = add nsw i32 %86, %57
  call void @_ZNK5blink12LayoutObject26CreatePositionWithAffinityEiNS_12TextAffinityE(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::LayoutObject"* %85, i32 %87, i32 %68) #19
  br label %88

88:                                               ; preds = %84, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink10LayoutText14LocalCaretRectEPKNS_9InlineBoxEiPNS_10LayoutUnitE(%"class.blink::LayoutText"*, %"class.blink::InlineBox"*, i32, %"class.blink::LayoutUnit"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::LineLayoutText", align 8
  %6 = alloca %"class.blink::LineLayoutItem", align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  %14 = icmp eq %"class.blink::InlineBox"* %1, null
  br i1 %14, label %341, label %15

15:                                               ; preds = %4
  %16 = bitcast %"class.blink::InlineBox"* %1 to i1 (%"class.blink::InlineBox"*)***
  %17 = load i1 (%"class.blink::InlineBox"*)**, i1 (%"class.blink::InlineBox"*)*** %16, align 8
  %18 = getelementptr inbounds i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %17, i64 15
  %19 = load i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %18, align 8
  %20 = tail call zeroext i1 %19(%"class.blink::InlineBox"* nonnull %1) #19
  br i1 %20, label %21, label %341

21:                                               ; preds = %15
  %22 = bitcast %"class.blink::InlineBox"* %1 to %"class.blink::InlineTextBox"*
  %23 = bitcast %"class.blink::LineLayoutText"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #19
  %24 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %1, i64 0, i32 4, i32 0
  %25 = bitcast %"class.blink::LayoutObject"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.blink::LineLayoutText"* %5 to i64*
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds %"class.blink::LineLayoutText", %"class.blink::LineLayoutText"* %5, i64 0, i32 0
  %29 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %1, i64 0, i32 7, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = and i32 %30, 1
  %32 = icmp ne i32 %31, 0
  %33 = call %"class.blink::ComputedStyle"* @_ZNK5blink14LineLayoutItem5StyleEb(%"class.blink::LineLayoutItem"* nonnull %28, i1 zeroext %32)
  %34 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %33, i64 0, i32 0, i32 9
  %35 = bitcast [20 x i8]* %34 to i160*
  %36 = load i160, i160* %35, align 8
  %37 = and i160 %36, 41538374868278621028243970633760768
  %38 = icmp eq i160 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #19
  br i1 %38, label %39, label %46

39:                                               ; preds = %21
  %40 = call %"class.blink::InlineBox"* @_ZNK5blink9InlineBox13PrevLeafChildEv(%"class.blink::InlineBox"* nonnull %1) #19
  %41 = icmp ne %"class.blink::InlineBox"* %40, null
  %42 = icmp eq i32 %2, 0
  %43 = and i1 %42, %41
  br i1 %43, label %44, label %53

44:                                               ; preds = %39
  %45 = call %"class.blink::InlineBox"* @_ZNK5blink9InlineBox13PrevLeafChildEv(%"class.blink::InlineBox"* nonnull %1) #19
  br label %53

46:                                               ; preds = %21
  %47 = call %"class.blink::InlineBox"* @_ZNK5blink9InlineBox13NextLeafChildEv(%"class.blink::InlineBox"* nonnull %1) #19
  %48 = icmp ne %"class.blink::InlineBox"* %47, null
  %49 = icmp eq i32 %2, 0
  %50 = and i1 %49, %48
  br i1 %50, label %51, label %53

51:                                               ; preds = %46
  %52 = call %"class.blink::InlineBox"* @_ZNK5blink9InlineBox13NextLeafChildEv(%"class.blink::InlineBox"* nonnull %1) #19
  br label %53

53:                                               ; preds = %46, %51, %39, %44
  %54 = phi %"class.blink::InlineBox"* [ %45, %44 ], [ %1, %39 ], [ %52, %51 ], [ %1, %46 ]
  %55 = bitcast %"class.blink::LineLayoutItem"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #19
  %56 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %54, i64 0, i32 4, i32 0
  %57 = bitcast %"class.blink::LayoutObject"** %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"class.blink::LineLayoutItem"* %6 to i64*
  store i64 %58, i64* %59, align 8
  %60 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %54, i64 0, i32 7, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = and i32 %61, 1
  %63 = icmp ne i32 %62, 0
  %64 = call %"class.blink::ComputedStyle"* @_ZNK5blink14LineLayoutItem5StyleEb(%"class.blink::LineLayoutItem"* nonnull %6, i1 zeroext %63)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #19
  %65 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %64, i64 0, i32 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %66, i64 0, i32 1, i32 0, i32 0
  %68 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %68, i64 0, i32 1
  %70 = call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* %69) #19
  %71 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %70, i64 0, i32 2
  %72 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %71, align 8
  %73 = icmp eq %"class.blink::SimpleFontData"* %72, null
  br i1 %73, label %74, label %78

74:                                               ; preds = %53
  %75 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %69, i64 0, i32 0
  %76 = call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %70, %"class.blink::FontDescription"* dereferenceable(80) %75) #19
  store %"class.blink::SimpleFontData"* %76, %"class.blink::SimpleFontData"** %71, align 8
  %77 = icmp eq %"class.blink::SimpleFontData"* %76, null
  br i1 %77, label %341, label %78

78:                                               ; preds = %53, %74
  %79 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %65, align 8
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %79, i64 0, i32 1, i32 0, i32 0
  %81 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %80, align 8
  %82 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %81, i64 0, i32 1
  %83 = call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* %82) #19
  %84 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %83, i64 0, i32 2
  %85 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %84, align 8
  %86 = icmp eq %"class.blink::SimpleFontData"* %85, null
  br i1 %86, label %87, label %90

87:                                               ; preds = %78
  %88 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %82, i64 0, i32 0
  %89 = call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %83, %"class.blink::FontDescription"* dereferenceable(80) %88) #19
  store %"class.blink::SimpleFontData"* %89, %"class.blink::SimpleFontData"** %84, align 8
  br label %90

90:                                               ; preds = %78, %87
  %91 = phi %"class.blink::SimpleFontData"* [ %85, %78 ], [ %89, %87 ]
  %92 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %91, i64 0, i32 1, i32 9
  %93 = load i32, i32* %92, align 4
  %94 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %91, i64 0, i32 1, i32 10
  %95 = load i32, i32* %94, align 4
  %96 = add nsw i32 %95, %93
  %97 = load i32, i32* %60, align 4
  %98 = and i32 %97, 2048
  %99 = icmp eq i32 %98, 0
  %100 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %54, i64 0, i32 5, i32 1, i32 0
  %101 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %54, i64 0, i32 5, i32 0, i32 0
  %102 = select i1 %99, i32* %101, i32* %100
  %103 = load i32, i32* %102, align 4
  %104 = sdiv i32 %103, 64
  %105 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %105)
  %106 = bitcast %"class.blink::InlineBox"* %1 to i32 (%"class.blink::InlineTextBox"*, i32)***
  %107 = load i32 (%"class.blink::InlineTextBox"*, i32)**, i32 (%"class.blink::InlineTextBox"*, i32)*** %106, align 8
  %108 = getelementptr inbounds i32 (%"class.blink::InlineTextBox"*, i32)*, i32 (%"class.blink::InlineTextBox"*, i32)** %107, i64 38
  %109 = load i32 (%"class.blink::InlineTextBox"*, i32)*, i32 (%"class.blink::InlineTextBox"*, i32)** %108, align 8
  %110 = call i32 %109(%"class.blink::InlineTextBox"* nonnull %22, i32 %2) #19
  store i32 %110, i32* %7, align 4
  %111 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  %112 = load %"class.blink::Node"*, %"class.blink::Node"** %111, align 8
  %113 = icmp eq %"class.blink::Node"* %112, null
  br i1 %113, label %114, label %121

114:                                              ; preds = %90, %114
  %115 = phi %"class.blink::LayoutObject"* [ %117, %114 ], [ %13, %90 ]
  %116 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %115, i64 0, i32 7
  %117 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %116, align 8
  %118 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %117, i64 0, i32 6, i32 0, i32 0
  %119 = load %"class.blink::Node"*, %"class.blink::Node"** %118, align 8
  %120 = icmp eq %"class.blink::Node"* %119, null
  br i1 %120, label %114, label %121

121:                                              ; preds = %114, %90
  %122 = phi %"class.blink::Node"* [ %112, %90 ], [ %119, %114 ]
  %123 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %122, i64 0, i32 3, i32 0, i32 0
  %124 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %123, align 8
  %125 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %124, i64 0, i32 2, i32 0, i32 0
  %126 = load %"class.blink::Document"*, %"class.blink::Document"** %125, align 8
  %127 = call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %126) #19
  %128 = call i32 @_ZNK5blink14LocalFrameView10CaretWidthEv(%"class.blink::LocalFrameView"* %127) #19
  %129 = sdiv i32 %128, 2
  %130 = sext i32 %129 to i64
  %131 = call i1 @llvm.is.constant.i64(i64 %130) #19
  br i1 %131, label %138, label %132

132:                                              ; preds = %121
  %133 = icmp slt i32 %128, -1
  %134 = select i1 %133, i32 -2147483648, i32 2147483647
  %135 = add nsw i64 %130, 2147483648
  %136 = icmp ult i64 %135, 4294967296
  %137 = select i1 %136, i32 %129, i32 %134, !prof !4
  br label %138

138:                                              ; preds = %121, %132
  %139 = phi i32 [ %137, %132 ], [ %129, %121 ]
  %140 = icmp sgt i32 %139, -1
  %141 = select i1 %140, i32 -2147483648, i32 2147483647
  %142 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %110, i32 %139) #19
  %143 = extractvalue { i32, i1 } %142, 1
  %144 = extractvalue { i32, i1 } %142, 0
  %145 = select i1 %143, i32 %141, i32 %144, !prof !3
  store i32 %145, i32* %7, align 4
  %146 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %128, i32 %139) #19
  %147 = extractvalue { i32, i1 } %146, 1
  %148 = extractvalue { i32, i1 } %146, 0
  %149 = select i1 %147, i32 %141, i32 %148, !prof !3
  %150 = sdiv i32 %145, 64
  %151 = srem i32 %145, 64
  %152 = add nsw i32 %151, 32
  %153 = ashr i32 %152, 6
  %154 = add nsw i32 %153, %150
  %155 = icmp sgt i32 %154, 33554431
  br i1 %155, label %160, label %156

156:                                              ; preds = %138
  %157 = icmp slt i32 %154, -33554432
  %158 = shl i32 %154, 6
  %159 = select i1 %157, i32 -2147483648, i32 %158
  br label %160

160:                                              ; preds = %156, %138
  %161 = phi i32 [ 2147483647, %138 ], [ %159, %156 ]
  store i32 %161, i32* %7, align 4
  %162 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %162)
  %163 = call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZNK5blink9InlineBox4RootEv(%"class.blink::InlineBox"* nonnull %1) #19
  %164 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %163, i64 0, i32 0, i32 0, i32 7, i32 0
  %165 = load i32, i32* %164, align 4
  %166 = and i32 %165, 2048
  %167 = icmp eq i32 %166, 0
  %168 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %163, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %169 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %163, i64 0, i32 0, i32 0, i32 5, i32 1, i32 0
  %170 = load i32, i32* %169, align 4
  %171 = load i32, i32* %168, align 4
  %172 = select i1 %167, i32 %170, i32 %171
  store i32 %172, i32* %8, align 4
  %173 = call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZNK5blink9InlineBox4RootEv(%"class.blink::InlineBox"* nonnull %1) #19
  %174 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %173, i64 0, i32 0, i32 0, i32 7, i32 0
  %175 = load i32, i32* %174, align 4
  %176 = and i32 %175, 2048
  %177 = icmp eq i32 %176, 0
  %178 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %173, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %179 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %173, i64 0, i32 0, i32 0, i32 5, i32 1, i32 0
  %180 = load i32, i32* %179, align 4
  %181 = load i32, i32* %178, align 4
  %182 = select i1 %177, i32 %180, i32 %181
  %183 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %173, i64 0, i32 0, i32 0, i32 6, i32 0
  %184 = load i32, i32* %183, align 8
  %185 = icmp slt i32 %184, 0
  %186 = select i1 %185, i32 -2147483648, i32 2147483647
  %187 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %182, i32 %184) #19
  %188 = extractvalue { i32, i1 } %187, 1
  %189 = extractvalue { i32, i1 } %187, 0
  %190 = select i1 %188, i32 %186, i32 %189, !prof !3
  %191 = icmp eq %"class.blink::LayoutUnit"* %3, null
  br i1 %191, label %213, label %192

192:                                              ; preds = %160
  %193 = call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZNK5blink9InlineBox4RootEv(%"class.blink::InlineBox"* nonnull %1) #19
  %194 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %193, i64 0, i32 0, i32 0, i32 6, i32 0
  %195 = load i32, i32* %194, align 8
  %196 = icmp slt i32 %172, 0
  %197 = select i1 %196, i32 -2147483648, i32 2147483647
  %198 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %195, i32 %172) #19
  %199 = extractvalue { i32, i1 } %198, 1
  %200 = extractvalue { i32, i1 } %198, 0
  %201 = select i1 %199, i32 %197, i32 %200, !prof !3
  %202 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %161, i32 64) #19
  %203 = extractvalue { i32, i1 } %202, 1
  %204 = extractvalue { i32, i1 } %202, 0
  %205 = select i1 %203, i32 2147483647, i32 %204, !prof !3
  %206 = icmp sgt i32 %205, -1
  %207 = select i1 %206, i32 -2147483648, i32 2147483647
  %208 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %201, i32 %205) #19
  %209 = extractvalue { i32, i1 } %208, 1
  %210 = extractvalue { i32, i1 } %208, 0
  %211 = select i1 %209, i32 %207, i32 %210, !prof !3
  %212 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %3, i64 0, i32 0
  store i32 %211, i32* %212, align 4
  br label %213

213:                                              ; preds = %160, %192
  %214 = call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %13, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #19
  %215 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %214, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %216 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %215, align 8
  %217 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %217)
  %218 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %218)
  store i32 0, i32* %10, align 4
  %219 = icmp slt i32 %172, 0
  %220 = bitcast i32* %10 to %"class.blink::LayoutUnit"*
  %221 = bitcast i32* %8 to %"class.blink::LayoutUnit"*
  %222 = select i1 %219, %"class.blink::LayoutUnit"* %221, %"class.blink::LayoutUnit"* %220
  %223 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %222, i64 0, i32 0
  %224 = load i32, i32* %223, align 4
  store i32 %224, i32* %9, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %218)
  %225 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %216, i64 0, i32 0, i32 9
  %226 = bitcast [20 x i8]* %225 to i160*
  %227 = load i160, i160* %226, align 8
  %228 = and i160 %227, 15211807202738752817960438464512
  %229 = icmp eq i160 %228, 0
  %230 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %214, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %231 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %214, i64 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %232 = select i1 %229, i32* %230, i32* %231
  %233 = load i32, i32* %232, align 4
  %234 = icmp slt i32 %233, %190
  %235 = select i1 %234, i32 %190, i32 %233
  %236 = lshr i160 %227, 58
  %237 = trunc i160 %236 to i32
  %238 = and i32 %237, 15
  switch i32 %238, label %278 [
    i32 1, label %245
    i32 5, label %245
    i32 8, label %242
    i32 7, label %239
    i32 3, label %239
  ]

239:                                              ; preds = %213, %213
  %240 = and i160 %227, 41538374868278621028243970633760768
  %241 = icmp eq i160 %240, 0
  br i1 %241, label %278, label %245

242:                                              ; preds = %213
  %243 = and i160 %227, 41538374868278621028243970633760768
  %244 = icmp eq i160 %243, 0
  br i1 %244, label %245, label %278

245:                                              ; preds = %239, %213, %213, %242
  %246 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 5, i32 0
  %247 = bitcast %"class.blink::ComputedStyle"** %246 to %"class.blink::ComputedStyleBase"**
  %248 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %247, align 8
  %249 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %248, i64 0, i32 9
  %250 = bitcast [20 x i8]* %249 to i160*
  %251 = load i160, i160* %250, align 8
  %252 = and i160 %251, 541598767187353870268366848
  %253 = icmp eq i160 %252, 309485009821345068724781056
  %254 = bitcast %"class.blink::ComputedStyleBase"* %248 to %"class.blink::ComputedStyle"*
  br i1 %253, label %255, label %259

255:                                              ; preds = %245
  %256 = load i32, i32* %29, align 4
  %257 = and i32 %256, 4
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %278, label %259

259:                                              ; preds = %255, %245
  %260 = icmp slt i32 %161, %224
  %261 = bitcast i32* %9 to %"class.blink::LayoutUnit"*
  %262 = bitcast i32* %7 to %"class.blink::LayoutUnit"*
  %263 = select i1 %260, %"class.blink::LayoutUnit"* %261, %"class.blink::LayoutUnit"* %262
  %264 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %263, i64 0, i32 0
  %265 = load i32, i32* %264, align 4
  store i32 %265, i32* %7, align 4
  %266 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %266)
  %267 = icmp sgt i32 %128, -1
  %268 = select i1 %267, i32 -2147483648, i32 2147483647
  %269 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %190, i32 %128) #19
  %270 = extractvalue { i32, i1 } %269, 1
  %271 = extractvalue { i32, i1 } %269, 0
  %272 = select i1 %270, i32 %268, i32 %271, !prof !3
  store i32 %272, i32* %11, align 4
  %273 = icmp slt i32 %272, %265
  %274 = bitcast i32* %11 to %"class.blink::LayoutUnit"*
  %275 = select i1 %273, %"class.blink::LayoutUnit"* %274, %"class.blink::LayoutUnit"* %262
  %276 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %275, i64 0, i32 0
  %277 = load i32, i32* %276, align 4
  store i32 %277, i32* %7, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %266)
  br label %298

278:                                              ; preds = %255, %239, %213, %242
  %279 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %279)
  %280 = icmp sgt i32 %149, -1
  %281 = select i1 %280, i32 -2147483648, i32 2147483647
  %282 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %235, i32 %149) #19
  %283 = extractvalue { i32, i1 } %282, 1
  %284 = extractvalue { i32, i1 } %282, 0
  %285 = select i1 %283, i32 %281, i32 %284, !prof !3
  store i32 %285, i32* %12, align 4
  %286 = icmp slt i32 %285, %161
  %287 = bitcast i32* %12 to %"class.blink::LayoutUnit"*
  %288 = bitcast i32* %7 to %"class.blink::LayoutUnit"*
  %289 = select i1 %286, %"class.blink::LayoutUnit"* %287, %"class.blink::LayoutUnit"* %288
  %290 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %289, i64 0, i32 0
  %291 = load i32, i32* %290, align 4
  store i32 %291, i32* %7, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %279)
  %292 = icmp slt i32 %291, %172
  %293 = select i1 %292, %"class.blink::LayoutUnit"* %221, %"class.blink::LayoutUnit"* %288
  %294 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %293, i64 0, i32 0
  %295 = load i32, i32* %294, align 4
  store i32 %295, i32* %7, align 4
  %296 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 5, i32 0
  %297 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %296, align 8
  br label %298

298:                                              ; preds = %278, %259
  %299 = phi i32 [ %295, %278 ], [ %277, %259 ]
  %300 = phi %"class.blink::ComputedStyle"* [ %297, %278 ], [ %254, %259 ]
  %301 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %300, i64 0, i32 0, i32 9
  %302 = bitcast [20 x i8]* %301 to i160*
  %303 = load i160, i160* %302, align 8
  %304 = and i160 %303, 15211807202738752817960438464512
  %305 = icmp eq i160 %304, 0
  %306 = sdiv i32 %299, 64
  %307 = sdiv i32 %128, 64
  %308 = zext i32 %307 to i64
  %309 = zext i32 %96 to i64
  %310 = shl nuw i64 %309, 32
  %311 = or i64 %310, %308
  %312 = shl nuw i64 %308, 32
  %313 = or i64 %312, %309
  %314 = select i1 %305, i32 %104, i32 %306
  %315 = select i1 %305, i32 %306, i32 %104
  %316 = select i1 %305, i64 %311, i64 %313
  %317 = zext i32 %314 to i64
  %318 = zext i32 %315 to i64
  %319 = shl nuw nsw i64 %318, 6
  %320 = shl i64 %317, 38
  %321 = trunc i64 %316 to i32
  %322 = lshr i64 %316, 32
  %323 = trunc i64 %322 to i32
  %324 = icmp sgt i32 %321, 33554431
  br i1 %324, label %330, label %325

325:                                              ; preds = %298
  %326 = icmp slt i32 %321, -33554432
  br i1 %326, label %330, label %327

327:                                              ; preds = %325
  %328 = shl i64 %316, 6
  %329 = and i64 %328, 4294967232
  br label %330

330:                                              ; preds = %325, %298, %327
  %331 = phi i64 [ %329, %327 ], [ 2147483647, %298 ], [ 2147483648, %325 ]
  %332 = icmp sgt i32 %323, 33554431
  br i1 %332, label %337, label %333

333:                                              ; preds = %330
  %334 = icmp slt i32 %323, -33554432
  %335 = shl i64 %322, 38
  %336 = select i1 %334, i64 -9223372036854775808, i64 %335
  br label %337

337:                                              ; preds = %333, %330
  %338 = phi i64 [ 9223372032559808512, %330 ], [ %336, %333 ]
  %339 = or i64 %331, %338
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %217)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %162)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %105)
  %340 = and i64 %319, 4294967232
  br label %341

341:                                              ; preds = %74, %15, %4, %337
  %342 = phi i64 [ %339, %337 ], [ 0, %4 ], [ 0, %15 ], [ 0, %74 ]
  %343 = phi i64 [ %320, %337 ], [ 0, %4 ], [ 0, %15 ], [ 0, %74 ]
  %344 = phi i64 [ %340, %337 ], [ 0, %4 ], [ 0, %15 ], [ 0, %74 ]
  %345 = or i64 %344, %343
  %346 = insertvalue { i64, i64 } undef, i64 %345, 0
  %347 = insertvalue { i64, i64 } %346, i64 %342, 1
  ret { i64, i64 } %347
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ComputedStyle"* @_ZNK5blink14LineLayoutItem5StyleEb(%"class.blink::LineLayoutItem"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::LineLayoutItem", %"class.blink::LineLayoutItem"* %0, i64 0, i32 0
  %5 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  br i1 %1, label %6, label %41

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 6, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %10, label %17

10:                                               ; preds = %6, %10
  %11 = phi %"class.blink::LayoutObject"* [ %13, %10 ], [ %5, %6 ]
  %12 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 0, i32 7
  %13 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %13, i64 0, i32 6, i32 0, i32 0
  %15 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  %16 = icmp eq %"class.blink::Node"* %15, null
  br i1 %16, label %10, label %17

17:                                               ; preds = %10, %6
  %18 = phi %"class.blink::Node"* [ %8, %6 ], [ %15, %10 ]
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 0, i32 3, i32 0, i32 0
  %20 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %20, i64 0, i32 2, i32 0, i32 0
  %22 = load %"class.blink::Document"*, %"class.blink::Document"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %22, i64 0, i32 59, i32 0, i32 0
  %24 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %24, i64 0, i32 31, i32 0, i32 0
  %26 = load %"class.blink::CSSGlobalRuleSet"*, %"class.blink::CSSGlobalRuleSet"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %26, i64 0, i32 0, i32 11
  %28 = load i8, i8* %27, align 8
  %29 = and i8 %28, 1
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %17
  %32 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #19
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.21, i64 0, i64 0), i32 37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.22, i64 0, i64 0)) #19
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #19
  br label %34

34:                                               ; preds = %31, %17
  %35 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %26, i64 0, i32 0, i32 0, i32 0
  %36 = load i8, i8* %35, align 8, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %34
  %39 = call %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"* %5) #19
  %40 = icmp eq %"class.blink::ComputedStyle"* %39, null
  br i1 %40, label %41, label %44

41:                                               ; preds = %2, %34, %38
  %42 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 5, i32 0
  %43 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %42, align 8
  br label %44

44:                                               ; preds = %41, %38
  %45 = phi %"class.blink::ComputedStyle"* [ %39, %38 ], [ %43, %41 ]
  ret %"class.blink::ComputedStyle"* %45
}

declare i32 @_ZNK5blink14LocalFrameView10CaretWidthEv(%"class.blink::LocalFrameView"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.blink::RootInlineBox"* @_ZNK5blink9InlineBox4RootEv(%"class.blink::InlineBox"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutText17TrimmedPrefWidthsENS_10LayoutUnitERS1_RbS2_S3_S3_S3_S2_S2_S2_S2_S3_NS_13TextDirectionE(%"class.blink::LayoutText"*, i32, %"class.blink::LayoutUnit"* nocapture dereferenceable(4), i8* nocapture dereferenceable(1), %"class.blink::LayoutUnit"* nocapture dereferenceable(4), i8* nocapture dereferenceable(1), i8* nocapture dereferenceable(1), i8* nocapture dereferenceable(1), %"class.blink::LayoutUnit"* nocapture dereferenceable(4), %"class.blink::LayoutUnit"* nocapture dereferenceable(4), %"class.blink::LayoutUnit"* nocapture dereferenceable(4), %"class.blink::LayoutUnit"* nocapture dereferenceable(4), i8* nocapture dereferenceable(1), i8 zeroext) local_unnamed_addr #0 align 2 {
  %15 = alloca %"class.WTF::HashSet.3131", align 8
  %16 = alloca %"class.blink::FloatRect", align 4
  %17 = alloca %"class.blink::TextRun", align 8
  %18 = alloca i16, align 2
  %19 = alloca %"class.blink::TextRun", align 8
  %20 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  %21 = sitofp i32 %1 to float
  %22 = fmul float %21, 1.562500e-02
  %23 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 5, i32 0
  %24 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %24, i64 0, i32 0, i32 9
  %26 = bitcast [20 x i8]* %25 to i160*
  %27 = load i160, i160* %26, align 8
  %28 = and i160 %27, 286720
  %29 = icmp eq i160 %28, 0
  br i1 %29, label %31, label %30

30:                                               ; preds = %14
  store i8 0, i8* %12, align 1
  br label %31

31:                                               ; preds = %30, %14
  %32 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 1
  %33 = load i16, i16* %32, align 8
  %34 = and i16 %33, 4
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %42

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %38 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %37 to i96*
  %39 = load i96, i96* %38, align 4
  %40 = and i96 %39, 256
  %41 = icmp eq i96 %40, 0
  br i1 %41, label %51, label %42

42:                                               ; preds = %36, %31
  %43 = bitcast %"class.WTF::HashSet.3131"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #19
  %44 = getelementptr inbounds %"class.WTF::HashSet.3131", %"class.WTF::HashSet.3131"* %15, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 24, i1 false) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 0, i64 20, i1 false) #19
  %45 = bitcast %"class.blink::FloatRect"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %45, i8 0, i64 16, i1 false) #19
  call void @_ZN5blink10LayoutText29ComputePreferredLogicalWidthsEfRN3WTF7HashSetIPKNS_14SimpleFontDataENS1_7PtrHashIS4_EENS1_10HashTraitsIS5_EENS1_18PartitionAllocatorEEERNS_9FloatRectE(%"class.blink::LayoutText"* %0, float %22, %"class.WTF::HashSet.3131"* nonnull dereferenceable(24) %15, %"class.blink::FloatRect"* nonnull dereferenceable(16) %16) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #19
  %46 = load %"class.blink::SimpleFontData"**, %"class.blink::SimpleFontData"*** %44, align 8
  %47 = icmp eq %"class.blink::SimpleFontData"** %46, null
  br i1 %47, label %50, label %48, !prof !4

48:                                               ; preds = %42
  %49 = bitcast %"class.blink::SimpleFontData"** %46 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %49) #19
  store %"class.blink::SimpleFontData"** null, %"class.blink::SimpleFontData"*** %44, align 8
  br label %50

50:                                               ; preds = %42, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #19
  br label %51

51:                                               ; preds = %36, %50
  %52 = load i8, i8* %12, align 1, !range !2
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %59

54:                                               ; preds = %51
  %55 = load i16, i16* %32, align 8
  %56 = lshr i16 %55, 3
  %57 = trunc i16 %56 to i8
  %58 = and i8 %57, 1
  br label %59

59:                                               ; preds = %51, %54
  %60 = phi i8 [ 0, %51 ], [ %58, %54 ]
  store i8 %60, i8* %3, align 1
  %61 = load i16, i16* %32, align 8
  %62 = lshr i16 %61, 4
  %63 = trunc i16 %62 to i8
  %64 = and i8 %63, 1
  store i8 %64, i8* %5, align 1
  %65 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 7, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %77, label %68

68:                                               ; preds = %59
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %77, label %72

72:                                               ; preds = %68
  %73 = load i8, i8* %12, align 1, !range !2
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %84, label %75

75:                                               ; preds = %72
  %76 = call zeroext i1 @_ZN3WTF10StringImpl29ContainsOnlyWhitespaceOrEmptyEv(%"class.WTF::StringImpl"* nonnull %66) #19
  br i1 %76, label %77, label %84

77:                                               ; preds = %59, %68, %75
  %78 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %2, i64 0, i32 0
  store i32 0, i32* %78, align 4
  %79 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %4, i64 0, i32 0
  store i32 0, i32* %79, align 4
  %80 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %8, i64 0, i32 0
  store i32 0, i32* %80, align 4
  %81 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %9, i64 0, i32 0
  store i32 0, i32* %81, align 4
  %82 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %10, i64 0, i32 0
  store i32 0, i32* %82, align 4
  %83 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %11, i64 0, i32 0
  store i32 0, i32* %83, align 4
  store i8 0, i8* %7, align 1
  br label %392

84:                                               ; preds = %72, %75
  %85 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 3
  %86 = load float, float* %85, align 8
  %87 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 4
  %88 = load float, float* %87, align 4
  %89 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 5
  %90 = load float, float* %89, align 8
  %91 = fmul float %90, 6.400000e+01
  %92 = fcmp ult float %91, 0xC1E0000000000000
  %93 = fcmp ugt float %91, 0x41DFFFFFE0000000
  %94 = fcmp ogt float %91, 0xC1E0000000000000
  %95 = select i1 %94, float %91, float 0xC1E0000000000000
  %96 = fptosi float %95 to i32
  %97 = select i1 %92, i32 0, i32 2147483647
  %98 = select i1 %93, i32 %97, i32 %96
  %99 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %2, i64 0, i32 0
  store i32 %98, i32* %99, align 4
  %100 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 6
  %101 = load float, float* %100, align 4
  %102 = fmul float %101, 6.400000e+01
  %103 = fcmp ult float %102, 0xC1E0000000000000
  %104 = fcmp ugt float %102, 0x41DFFFFFE0000000
  %105 = fcmp ogt float %102, 0xC1E0000000000000
  %106 = select i1 %105, float %102, float 0xC1E0000000000000
  %107 = fptosi float %106 to i32
  %108 = select i1 %103, i32 0, i32 2147483647
  %109 = select i1 %104, i32 %108, i32 %107
  %110 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %4, i64 0, i32 0
  store i32 %109, i32* %110, align 4
  %111 = load i16, i16* %32, align 8
  %112 = trunc i16 %111 to i8
  %113 = and i8 %112, 1
  store i8 %113, i8* %6, align 1
  %114 = load i16, i16* %32, align 8
  %115 = lshr i16 %114, 1
  %116 = trunc i16 %115 to i8
  %117 = and i8 %116, 1
  store i8 %117, i8* %7, align 1
  %118 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 1
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 1
  br i1 %122, label %128, label %124

124:                                              ; preds = %84
  %125 = bitcast %"class.WTF::StringImpl"* %123 to i8*
  %126 = load i8, i8* %125, align 1
  %127 = zext i8 %126 to i16
  br label %132

128:                                              ; preds = %84
  %129 = bitcast %"class.WTF::StringImpl"* %123 to i16*
  %130 = load i16, i16* %129, align 2
  %131 = trunc i16 %130 to i8
  br label %132

132:                                              ; preds = %124, %128
  %133 = phi i8 [ %126, %124 ], [ %131, %128 ]
  %134 = phi i16 [ %127, %124 ], [ %130, %128 ]
  %135 = icmp eq i16 %134, 32
  br i1 %135, label %170, label %136

136:                                              ; preds = %132
  %137 = load atomic i32, i32* %119 monotonic, align 4
  %138 = and i32 %137, 1
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %142, label %140

140:                                              ; preds = %136
  %141 = zext i8 %133 to i16
  br label %146

142:                                              ; preds = %136
  %143 = bitcast %"class.WTF::StringImpl"* %123 to i16*
  %144 = load i16, i16* %143, align 2
  %145 = trunc i16 %144 to i8
  br label %146

146:                                              ; preds = %140, %142
  %147 = phi i8 [ %133, %140 ], [ %145, %142 ]
  %148 = phi i16 [ %141, %140 ], [ %144, %142 ]
  %149 = icmp eq i16 %148, 10
  br i1 %149, label %150, label %158

150:                                              ; preds = %146
  %151 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %23, align 8
  %152 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %151, i64 0, i32 0, i32 9
  %153 = bitcast [20 x i8]* %152 to i160*
  %154 = load i160, i160* %153, align 8
  %155 = lshr i160 %154, 12
  %156 = trunc i160 %155 to i32
  %157 = and i32 %156, 127
  switch i32 %157, label %158 [
    i32 16, label %170
    i32 1, label %170
  ]

158:                                              ; preds = %150, %146
  %159 = load atomic i32, i32* %119 monotonic, align 4
  %160 = and i32 %159, 1
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %164, label %162

162:                                              ; preds = %158
  %163 = zext i8 %147 to i16
  br label %167

164:                                              ; preds = %158
  %165 = bitcast %"class.WTF::StringImpl"* %123 to i16*
  %166 = load i16, i16* %165, align 2
  br label %167

167:                                              ; preds = %162, %164
  %168 = phi i16 [ %163, %162 ], [ %166, %164 ]
  %169 = icmp eq i16 %168, 9
  br i1 %169, label %170, label %197

170:                                              ; preds = %150, %150, %167, %132
  %171 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %23, align 8
  %172 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %171, i64 0, i32 0, i32 0, i32 0, i32 0
  %173 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %172, align 8
  %174 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %173, i64 0, i32 1, i32 0, i32 0
  %175 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %174, align 8
  %176 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %175, i64 0, i32 1
  %177 = load i8, i8* %12, align 1, !range !2
  %178 = icmp eq i8 %177, 0
  br i1 %178, label %193, label %179

179:                                              ; preds = %170
  %180 = bitcast i16* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %180) #19
  store i16 32, i16* %18, align 2
  %181 = bitcast %"class.blink::TextRun"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %181) #19
  %182 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %19, i64 0, i32 3
  %183 = bitcast %"class.blink::TextRun"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %183, i8 -86, i64 16, i1 false)
  store float 0xFFFFFFFFE0000000, float* %182, align 8
  %184 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %19, i64 0, i32 4
  store float 0xFFFFFFFFE0000000, float* %184, align 4
  %185 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %19, i64 0, i32 5
  store i16 -21846, i16* %185, align 8
  %186 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %19, i64 0, i32 6, i64 0
  store i8 -86, i8* %186, align 2
  %187 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %19, i64 0, i32 6, i64 1
  store i8 -86, i8* %187, align 1
  %188 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %19, i64 0, i32 7, i32 0
  store float 0xFFFFFFFFE0000000, float* %188, align 4
  %189 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %19, i64 0, i32 7, i32 1
  %190 = bitcast i8* %189 to i64*
  store i64 -6148914691236517206, i64* %190, align 4
  call void @_ZN5blink16ConstructTextRunERKNS_4FontEPKDsiRKNS_13ComputedStyleENS_13TextDirectionE(%"class.blink::TextRun"* nonnull sret %19, %"class.blink::Font"* dereferenceable(88) %176, i16* nonnull %18, i32 1, %"class.blink::ComputedStyle"* dereferenceable(104) %171, i8 zeroext %13) #19
  %191 = call float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"* %176, %"class.blink::TextRun"* nonnull dereferenceable(40) %19, %"class.WTF::HashSet.3131"* null, %"class.blink::FloatRect"* null) #19
  %192 = fsub float %88, %191
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %181) #19
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %180) #19
  br label %197

193:                                              ; preds = %170
  %194 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %175, i64 0, i32 1, i32 0, i32 9
  %195 = load float, float* %194, align 4
  %196 = fadd float %88, %195
  br label %197

197:                                              ; preds = %179, %193, %167
  %198 = phi float [ %88, %167 ], [ %192, %179 ], [ %196, %193 ]
  br i1 %29, label %199, label %204

199:                                              ; preds = %197
  %200 = load i16, i16* %32, align 8
  %201 = lshr i16 %200, 5
  %202 = trunc i16 %201 to i8
  %203 = and i8 %202, 1
  br label %204

204:                                              ; preds = %199, %197
  %205 = phi i8 [ 0, %197 ], [ %203, %199 ]
  store i8 %205, i8* %12, align 1
  %206 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %23, align 8
  %207 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %206, i64 0, i32 0, i32 9
  %208 = bitcast [20 x i8]* %207 to i160*
  %209 = load i160, i160* %208, align 8
  %210 = and i160 %209, 73728
  %211 = icmp ne i160 %210, 0
  %212 = fcmp ogt float %86, %198
  %213 = or i1 %212, %211
  %214 = select i1 %213, float %198, float %86
  %215 = load i8, i8* %7, align 1, !range !2
  %216 = icmp eq i8 %215, 0
  br i1 %216, label %217, label %219

217:                                              ; preds = %204
  %218 = fmul float %198, 6.400000e+01
  br label %371

219:                                              ; preds = %204
  %220 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %206, i64 0, i32 0, i32 0, i32 0, i32 0
  %221 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %220, align 8
  %222 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %221, i64 0, i32 1, i32 0, i32 0
  %223 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %222, align 8
  %224 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %223, i64 0, i32 1
  %225 = fmul float %198, 6.400000e+01
  %226 = fcmp ult float %225, 0xC1E0000000000000
  %227 = fcmp ugt float %225, 0x41DFFFFFE0000000
  %228 = fcmp ogt float %225, 0xC1E0000000000000
  %229 = select i1 %228, float %225, float 0xC1E0000000000000
  %230 = fptosi float %229 to i32
  %231 = select i1 %226, i32 0, i32 2147483647
  %232 = select i1 %227, i32 %231, i32 %230
  %233 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %8, i64 0, i32 0
  store i32 %232, i32* %233, align 4
  %234 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %9, i64 0, i32 0
  store i32 %232, i32* %234, align 4
  %235 = icmp sgt i32 %70, 0
  br i1 %235, label %236, label %371

236:                                              ; preds = %219
  %237 = bitcast %"class.WTF::StringImpl"* %123 to i8*
  %238 = bitcast %"class.WTF::StringImpl"* %123 to i16*
  %239 = bitcast %"class.blink::LayoutText"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %240 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 1, i32 0, i32 1
  %241 = bitcast %"class.blink::DisplayItemClient.base"* %240 to i8*
  %242 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %223, i64 0, i32 1, i32 0, i32 5
  %243 = bitcast %"class.blink::TextRun"* %17 to i8*
  %244 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %17, i64 0, i32 1
  %245 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %17, i64 0, i32 3
  %246 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %17, i64 0, i32 4
  %247 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %17, i64 0, i32 5
  %248 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %17, i64 0, i32 6, i64 0
  %249 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %17, i64 0, i32 6, i64 1
  %250 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %17, i64 0, i32 7, i32 0
  %251 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %17, i64 0, i32 7, i32 1
  %252 = bitcast i8* %251 to i64*
  %253 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %17, i64 0, i32 7
  %254 = bitcast %"struct.blink::TabSize"* %253 to i40*
  %255 = add nsw i32 %70, -1
  br label %256

256:                                              ; preds = %236, %368
  %257 = phi i32 [ 0, %236 ], [ %369, %368 ]
  %258 = phi i8 [ 1, %236 ], [ %364, %368 ]
  %259 = phi float [ %22, %236 ], [ %363, %368 ]
  %260 = icmp sgt i32 %70, %257
  br i1 %260, label %261, label %358

261:                                              ; preds = %256
  %262 = sub i32 %70, %257
  %263 = zext i32 %262 to i64
  br label %264

264:                                              ; preds = %282, %261
  %265 = phi i64 [ 0, %261 ], [ %283, %282 ]
  %266 = phi i32 [ %257, %261 ], [ %286, %282 ]
  %267 = phi i32 [ 0, %261 ], [ %284, %282 ]
  %268 = load atomic i32, i32* %119 monotonic, align 4
  %269 = and i32 %268, 1
  %270 = icmp eq i32 %269, 0
  %271 = zext i32 %266 to i64
  br i1 %270, label %276, label %272

272:                                              ; preds = %264
  %273 = getelementptr inbounds i8, i8* %237, i64 %271
  %274 = load i8, i8* %273, align 1
  %275 = zext i8 %274 to i16
  br label %279

276:                                              ; preds = %264
  %277 = getelementptr inbounds i16, i16* %238, i64 %271
  %278 = load i16, i16* %277, align 2
  br label %279

279:                                              ; preds = %272, %276
  %280 = phi i16 [ %275, %272 ], [ %278, %276 ]
  %281 = icmp eq i16 %280, 10
  br i1 %281, label %288, label %282

282:                                              ; preds = %279
  %283 = add nuw nsw i64 %265, 1
  %284 = add nuw nsw i32 %267, 1
  %285 = trunc i64 %283 to i32
  %286 = add nsw i32 %257, %285
  %287 = icmp eq i64 %283, %263
  br i1 %287, label %291, label %264

288:                                              ; preds = %279
  %289 = trunc i64 %265 to i32
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %358, label %291

291:                                              ; preds = %282, %288
  %292 = phi i32 [ %266, %288 ], [ %286, %282 ]
  %293 = phi i32 [ %289, %288 ], [ %284, %282 ]
  %294 = load i32, i32* %234, align 4
  %295 = sitofp i32 %294 to float
  %296 = fmul float %295, 1.562500e-02
  %297 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %23, align 8
  %298 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %297, i64 0, i32 0, i32 1, i32 0, i32 0
  %299 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %298, align 8
  %300 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %299, i64 0, i32 23
  %301 = bitcast [5 x i8]* %300 to i40*
  %302 = load i40, i40* %301, align 8
  %303 = and i40 %302, 4294967296
  %304 = icmp eq i40 %303, 0
  br i1 %304, label %316, label %305

305:                                              ; preds = %291
  %306 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %239, align 8
  %307 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %306, i64 81
  %308 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %307, align 8
  %309 = call zeroext i1 %308(%"class.blink::LayoutObject"* %20) #19
  br i1 %309, label %310, label %316

310:                                              ; preds = %305
  %311 = load i8, i8* %241, align 8
  %312 = and i8 %311, 1
  %313 = icmp eq i8 %312, 0
  br i1 %313, label %316, label %314

314:                                              ; preds = %310
  %315 = load float, float* %242, align 4
  br label %345

316:                                              ; preds = %310, %305, %291
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %243) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %243, i8 -86, i64 16, i1 false) #19
  store float 0xFFFFFFFFE0000000, float* %245, align 8
  store float 0xFFFFFFFFE0000000, float* %246, align 4
  store i16 -21846, i16* %247, align 8
  store i8 -86, i8* %248, align 2
  store i8 -86, i8* %249, align 1
  store float 0xFFFFFFFFE0000000, float* %250, align 4
  store i64 -6148914691236517206, i64* %252, align 4
  %317 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %23, align 8
  call void @_ZN5blink16ConstructTextRunERKNS_4FontEPKNS_10LayoutTextEjjRKNS_13ComputedStyleENS_13TextDirectionE(%"class.blink::TextRun"* nonnull sret %17, %"class.blink::Font"* dereferenceable(88) %224, %"class.blink::LayoutText"* %0, i32 %257, i32 %293, %"class.blink::ComputedStyle"* dereferenceable(104) %317, i8 zeroext %13) #19
  %318 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %319 = icmp eq %"class.WTF::StringImpl"* %318, null
  br i1 %319, label %323, label %320

320:                                              ; preds = %316
  %321 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %318, i64 0, i32 1
  %322 = load i32, i32* %321, align 4
  br label %323

323:                                              ; preds = %320, %316
  %324 = phi i32 [ %322, %320 ], [ 0, %316 ]
  %325 = sub i32 %324, %257
  store i32 %325, i32* %244, align 8
  %326 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %23, align 8
  %327 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %326, i64 0, i32 0, i32 9
  %328 = bitcast [20 x i8]* %327 to i160*
  %329 = load i160, i160* %328, align 8
  %330 = and i160 %329, 286720
  %331 = icmp ne i160 %330, 0
  %332 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %326, i64 0, i32 0, i32 1, i32 0, i32 0
  %333 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %332, align 8
  %334 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %333, i64 0, i32 15
  %335 = bitcast %"struct.blink::TabSize"* %334 to i64*
  %336 = load i64, i64* %335, align 4
  %337 = zext i1 %331 to i16
  %338 = load i16, i16* %247, align 8
  %339 = shl nuw nsw i16 %337, 3
  %340 = and i16 %338, -9
  %341 = or i16 %340, %339
  store i16 %341, i16* %247, align 8
  %342 = trunc i64 %336 to i40
  store i40 %342, i40* %254, align 4
  %343 = fadd float %259, %296
  store float %343, float* %245, align 8
  store float 0.000000e+00, float* %246, align 4
  %344 = call float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"* %224, %"class.blink::TextRun"* nonnull dereferenceable(40) %17, %"class.WTF::HashSet.3131"* null, %"class.blink::FloatRect"* null) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %243) #19
  br label %345

345:                                              ; preds = %314, %323
  %346 = phi float [ %344, %323 ], [ %315, %314 ]
  %347 = fmul float %346, 6.400000e+01
  %348 = fcmp ult float %347, 0xC1E0000000000000
  %349 = fcmp ugt float %347, 0x41DFFFFFE0000000
  %350 = fcmp ogt float %347, 0xC1E0000000000000
  %351 = select i1 %350, float %347, float 0xC1E0000000000000
  %352 = fptosi float %351 to i32
  %353 = select i1 %348, i32 0, i32 2147483647
  %354 = select i1 %349, i32 %353, i32 %352
  store i32 %354, i32* %234, align 4
  %355 = and i8 %258, 1
  %356 = icmp eq i8 %355, 0
  br i1 %356, label %362, label %357

357:                                              ; preds = %345
  store i32 %354, i32* %233, align 4
  br label %362

358:                                              ; preds = %256, %288
  %359 = and i8 %258, 1
  %360 = icmp eq i8 %359, 0
  br i1 %360, label %362, label %361

361:                                              ; preds = %358
  store i32 0, i32* %233, align 4
  br label %362

362:                                              ; preds = %357, %345, %358, %361
  %363 = phi float [ 0.000000e+00, %361 ], [ %259, %358 ], [ 0.000000e+00, %357 ], [ %259, %345 ]
  %364 = phi i8 [ 0, %361 ], [ %258, %358 ], [ 0, %357 ], [ %258, %345 ]
  %365 = phi i32 [ %257, %361 ], [ %257, %358 ], [ %292, %357 ], [ %292, %345 ]
  %366 = icmp eq i32 %365, %255
  br i1 %366, label %367, label %368

367:                                              ; preds = %362
  store i32 0, i32* %234, align 4
  br label %368

368:                                              ; preds = %367, %362
  %369 = add nsw i32 %365, 1
  %370 = icmp slt i32 %369, %70
  br i1 %370, label %256, label %371

371:                                              ; preds = %368, %217, %219
  %372 = phi float [ %218, %217 ], [ %225, %219 ], [ %225, %368 ]
  %373 = fmul float %214, 6.400000e+01
  %374 = call float @llvm.ceil.f32(float %373) #19
  %375 = fcmp ult float %374, 0xC1E0000000000000
  %376 = fcmp ugt float %374, 0x41DFFFFFE0000000
  %377 = fcmp ogt float %374, 0xC1E0000000000000
  %378 = select i1 %377, float %374, float 0xC1E0000000000000
  %379 = fptosi float %378 to i32
  %380 = select i1 %375, i32 0, i32 2147483647
  %381 = select i1 %376, i32 %380, i32 %379
  %382 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %10, i64 0, i32 0
  store i32 %381, i32* %382, align 4
  %383 = call float @llvm.ceil.f32(float %372) #19
  %384 = fcmp ult float %383, 0xC1E0000000000000
  %385 = fcmp ugt float %383, 0x41DFFFFFE0000000
  %386 = fcmp ogt float %383, 0xC1E0000000000000
  %387 = select i1 %386, float %383, float 0xC1E0000000000000
  %388 = fptosi float %387 to i32
  %389 = select i1 %384, i32 0, i32 2147483647
  %390 = select i1 %385, i32 %389, i32 %388
  %391 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %11, i64 0, i32 0
  store i32 %390, i32* %391, align 4
  br label %392

392:                                              ; preds = %371, %77
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutText29ComputePreferredLogicalWidthsEf(%"class.blink::LayoutText"*, float) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::HashSet.3131", align 8
  %4 = alloca %"class.blink::FloatRect", align 4
  %5 = bitcast %"class.WTF::HashSet.3131"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #19
  %6 = getelementptr inbounds %"class.WTF::HashSet.3131", %"class.WTF::HashSet.3131"* %3, i64 0, i32 0, i32 0
  %7 = bitcast %"class.WTF::HashSet.3131"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 20, i1 false) #19
  %8 = bitcast %"class.blink::FloatRect"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %8, i8 0, i64 16, i1 false) #19
  call void @_ZN5blink10LayoutText29ComputePreferredLogicalWidthsEfRN3WTF7HashSetIPKNS_14SimpleFontDataENS1_7PtrHashIS4_EENS1_10HashTraitsIS5_EENS1_18PartitionAllocatorEEERNS_9FloatRectE(%"class.blink::LayoutText"* %0, float %1, %"class.WTF::HashSet.3131"* nonnull dereferenceable(24) %3, %"class.blink::FloatRect"* nonnull dereferenceable(16) %4)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #19
  %9 = load %"class.blink::SimpleFontData"**, %"class.blink::SimpleFontData"*** %6, align 8
  %10 = icmp eq %"class.blink::SimpleFontData"** %9, null
  br i1 %10, label %13, label %11, !prof !4

11:                                               ; preds = %2
  %12 = bitcast %"class.blink::SimpleFontData"** %9 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %12) #19
  store %"class.blink::SimpleFontData"** null, %"class.blink::SimpleFontData"*** %6, align 8
  br label %13

13:                                               ; preds = %2, %11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #19
  ret void
}

declare zeroext i1 @_ZN3WTF10StringImpl29ContainsOnlyWhitespaceOrEmptyEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN5blink16ConstructTextRunERKNS_4FontEPKDsiRKNS_13ComputedStyleENS_13TextDirectionE(%"class.blink::TextRun"* sret, %"class.blink::Font"* dereferenceable(88), i16*, i32, %"class.blink::ComputedStyle"* dereferenceable(104), i8 zeroext) local_unnamed_addr #1

declare float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"*, %"class.blink::TextRun"* dereferenceable(40), %"class.WTF::HashSet.3131"*, %"class.blink::FloatRect"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK5blink10LayoutText15MinLogicalWidthEv(%"class.blink::LayoutText"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::HashSet.3131", align 8
  %3 = alloca %"class.blink::FloatRect", align 4
  %4 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %5 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %4 to i96*
  %6 = load i96, i96* %5, align 4
  %7 = and i96 %6, 256
  %8 = icmp eq i96 %7, 0
  br i1 %8, label %18, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.WTF::HashSet.3131"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #19
  %11 = getelementptr inbounds %"class.WTF::HashSet.3131", %"class.WTF::HashSet.3131"* %2, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 20, i1 false) #19
  %12 = bitcast %"class.blink::FloatRect"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %12, i8 0, i64 16, i1 false) #19
  call void @_ZN5blink10LayoutText29ComputePreferredLogicalWidthsEfRN3WTF7HashSetIPKNS_14SimpleFontDataENS1_7PtrHashIS4_EENS1_10HashTraitsIS5_EENS1_18PartitionAllocatorEEERNS_9FloatRectE(%"class.blink::LayoutText"* %0, float 0.000000e+00, %"class.WTF::HashSet.3131"* nonnull dereferenceable(24) %2, %"class.blink::FloatRect"* nonnull dereferenceable(16) %3) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #19
  %13 = load %"class.blink::SimpleFontData"**, %"class.blink::SimpleFontData"*** %11, align 8
  %14 = icmp eq %"class.blink::SimpleFontData"** %13, null
  br i1 %14, label %17, label %15, !prof !4

15:                                               ; preds = %9
  %16 = bitcast %"class.blink::SimpleFontData"** %13 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %16) #19
  store %"class.blink::SimpleFontData"** null, %"class.blink::SimpleFontData"*** %11, align 8
  br label %17

17:                                               ; preds = %9, %15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #19
  br label %18

18:                                               ; preds = %1, %17
  %19 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 3
  %20 = load float, float* %19, align 8
  ret float %20
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK5blink10LayoutText15MaxLogicalWidthEv(%"class.blink::LayoutText"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::HashSet.3131", align 8
  %3 = alloca %"class.blink::FloatRect", align 4
  %4 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %5 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %4 to i96*
  %6 = load i96, i96* %5, align 4
  %7 = and i96 %6, 256
  %8 = icmp eq i96 %7, 0
  br i1 %8, label %18, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.WTF::HashSet.3131"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #19
  %11 = getelementptr inbounds %"class.WTF::HashSet.3131", %"class.WTF::HashSet.3131"* %2, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 20, i1 false) #19
  %12 = bitcast %"class.blink::FloatRect"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %12, i8 0, i64 16, i1 false) #19
  call void @_ZN5blink10LayoutText29ComputePreferredLogicalWidthsEfRN3WTF7HashSetIPKNS_14SimpleFontDataENS1_7PtrHashIS4_EENS1_10HashTraitsIS5_EENS1_18PartitionAllocatorEEERNS_9FloatRectE(%"class.blink::LayoutText"* %0, float 0.000000e+00, %"class.WTF::HashSet.3131"* nonnull dereferenceable(24) %2, %"class.blink::FloatRect"* nonnull dereferenceable(16) %3) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #19
  %13 = load %"class.blink::SimpleFontData"**, %"class.blink::SimpleFontData"*** %11, align 8
  %14 = icmp eq %"class.blink::SimpleFontData"** %13, null
  br i1 %14, label %17, label %15, !prof !4

15:                                               ; preds = %9
  %16 = bitcast %"class.blink::SimpleFontData"** %13 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %16) #19
  store %"class.blink::SimpleFontData"** null, %"class.blink::SimpleFontData"*** %11, align 8
  br label %17

17:                                               ; preds = %9, %15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #19
  br label %18

18:                                               ; preds = %1, %17
  %19 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 4
  %20 = load float, float* %19, align 4
  ret float %20
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutText29ComputePreferredLogicalWidthsEfRN3WTF7HashSetIPKNS_14SimpleFontDataENS1_7PtrHashIS4_EENS1_10HashTraitsIS5_EENS1_18PartitionAllocatorEEERNS_9FloatRectE(%"class.blink::LayoutText"*, float, %"class.WTF::HashSet.3131"* dereferenceable(24), %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::TextRun", align 8
  %6 = alloca %"class.blink::FloatRect", align 4
  %7 = alloca %"class.blink::TextRun", align 8
  %8 = alloca %"class.blink::FloatRect", align 4
  %9 = alloca %"class.blink::TextRun", align 8
  %10 = alloca %"class.blink::TextRun", align 8
  %11 = alloca %"class.blink::FloatRect", align 4
  %12 = alloca %"class.blink::TextRun", align 8
  %13 = alloca %"class.WTF::Vector.3414", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.blink::TextRun", align 8
  %16 = alloca %"class.blink::TextRun", align 8
  %17 = alloca %"class.blink::FloatRect", align 4
  %18 = alloca %"class.logging::CheckError", align 8
  %19 = alloca %"class.blink::TextRun", align 8
  %20 = alloca %"class.blink::FloatRect", align 4
  %21 = alloca %"class.blink::LazyLineBreakIterator", align 8
  %22 = alloca %"class.blink::TextRun", align 8
  %23 = alloca %"class.blink::TextRun", align 8
  %24 = alloca %"class.blink::FloatRect", align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca %"class.blink::LazyLineBreakIterator", align 8
  %28 = alloca i64, align 8
  %29 = bitcast i64* %28 to [2 x float]*
  %30 = alloca i32, align 4
  %31 = alloca %"class.blink::BidiResolver", align 8
  %32 = alloca %"class.blink::TextRun", align 8
  %33 = alloca %"struct.blink::BidiStatus", align 8
  %34 = alloca %"class.blink::TextRunIterator", align 8
  %35 = alloca %"class.blink::TextRun", align 8
  %36 = alloca %"class.blink::TextRun", align 8
  %37 = alloca %"struct.blink::GlyphOverflow", align 4
  %38 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  %39 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 3
  %40 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 4
  %41 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 5
  %42 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 6
  %43 = bitcast %"class.blink::LayoutText"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %44 = bitcast float* %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 16, i1 false)
  %45 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %43, align 8
  %46 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %45, i64 92
  %47 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %46, align 8
  %48 = tail call zeroext i1 %47(%"class.blink::LayoutObject"* %38, i32 0) #19
  br i1 %48, label %1694, label %49

49:                                               ; preds = %4
  %50 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %50)
  store i32 0, i32* %25, align 4
  %51 = bitcast i32* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %51)
  store i32 0, i32* %26, align 4
  %52 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 1
  %53 = load i16, i16* %52, align 8
  %54 = and i16 %53, -6208
  %55 = or i16 %54, 4096
  store i16 %55, i16* %52, align 8
  %56 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 5, i32 0
  %57 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %57, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %59, i64 0, i32 1, i32 0, i32 0
  %61 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %61, i64 0, i32 1
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %61, i64 0, i32 1, i32 0, i32 9
  %64 = load float, float* %63, align 4
  %65 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 7, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %88, label %68

68:                                               ; preds = %49
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = bitcast %"class.blink::LazyLineBreakIterator"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %71) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 -86, i64 64, i1 false)
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %94

76:                                               ; preds = %68
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = zext i32 %78 to i33
  %80 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %79, i33 1) #19
  %81 = extractvalue { i33, i1 } %80, 1
  %82 = extractvalue { i33, i1 } %80, 0
  %83 = icmp slt i33 %82, 0
  %84 = or i1 %81, %83
  br i1 %84, label %85, label %86, !prof !3

85:                                               ; preds = %76
  tail call void @llvm.trap() #19
  unreachable

86:                                               ; preds = %76
  %87 = trunc i33 %82 to i32
  store i32 %87, i32* %77, align 4
  br label %94

88:                                               ; preds = %49
  %89 = bitcast %"class.blink::LazyLineBreakIterator"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %89) #19
  %90 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %27, i64 0, i32 1
  %91 = bitcast %"class.WTF::AtomicString"* %90 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %91, i8 -86, i64 56, i1 false)
  %92 = tail call %"class.WTF::StringImpl"* @_ZNK5blink13ComputedStyle26LocaleForLineBreakIteratorEv(%"class.blink::ComputedStyle"* %57) #19
  %93 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %27, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %93, align 8
  br label %112

94:                                               ; preds = %68, %86
  %95 = tail call %"class.WTF::StringImpl"* @_ZNK5blink13ComputedStyle26LocaleForLineBreakIteratorEv(%"class.blink::ComputedStyle"* %57) #19
  %96 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %27, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %66, %"class.WTF::StringImpl"** %96, align 8
  %97 = load atomic i32, i32* %72 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %112

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  %103 = zext i32 %102 to i33
  %104 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %103, i33 1) #19
  %105 = extractvalue { i33, i1 } %104, 1
  %106 = extractvalue { i33, i1 } %104, 0
  %107 = icmp slt i33 %106, 0
  %108 = or i1 %105, %107
  br i1 %108, label %109, label %110, !prof !3

109:                                              ; preds = %100
  tail call void @llvm.trap() #19
  unreachable

110:                                              ; preds = %100
  %111 = trunc i33 %106 to i32
  store i32 %111, i32* %101, align 4
  br label %112

112:                                              ; preds = %88, %110, %94
  %113 = phi i8* [ %71, %110 ], [ %71, %94 ], [ %89, %88 ]
  %114 = phi i32 [ %70, %110 ], [ %70, %94 ], [ 0, %88 ]
  %115 = phi %"class.WTF::StringImpl"** [ %96, %110 ], [ %96, %94 ], [ %93, %88 ]
  %116 = phi %"class.WTF::StringImpl"* [ %95, %110 ], [ %95, %94 ], [ %92, %88 ]
  %117 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %27, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %116, %"class.WTF::StringImpl"** %117, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %118, label %136, label %119

119:                                              ; preds = %112
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = and i32 %121, 2
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %136

124:                                              ; preds = %119
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %126 = load i32, i32* %125, align 4
  %127 = zext i32 %126 to i33
  %128 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %127, i33 1) #19
  %129 = extractvalue { i33, i1 } %128, 1
  %130 = extractvalue { i33, i1 } %128, 0
  %131 = icmp slt i33 %130, 0
  %132 = or i1 %129, %131
  br i1 %132, label %133, label %134, !prof !3

133:                                              ; preds = %124
  tail call void @llvm.trap() #19
  unreachable

134:                                              ; preds = %124
  %135 = trunc i33 %130 to i32
  store i32 %135, i32* %125, align 4
  br label %136

136:                                              ; preds = %134, %119, %112
  %137 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %27, i64 0, i32 2
  store %"class.icu_69::BreakIterator"* null, %"class.icu_69::BreakIterator"** %137, align 8
  %138 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %27, i64 0, i32 5, i32 0
  store i16* null, i16** %138, align 8
  %139 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %27, i64 0, i32 5, i32 1
  store i32 0, i32* %139, align 8
  %140 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %27, i64 0, i32 6
  store i32 0, i32* %140, align 8
  %141 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %27, i64 0, i32 7
  store i32 0, i32* %141, align 4
  %142 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %27, i64 0, i32 8
  store i32 0, i32* %142, align 8
  %143 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %27, i64 0, i32 3, i64 0
  store i16 0, i16* %143, align 8
  %144 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %27, i64 0, i32 3, i64 1
  store i16 0, i16* %144, align 2
  br i1 %67, label %158, label %145

145:                                              ; preds = %136
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load atomic i32, i32* %146 monotonic, align 4
  %148 = and i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %151 = load i32, i32* %150, align 4
  br i1 %149, label %152, label %154

152:                                              ; preds = %145
  %153 = add i32 %151, -1
  store i32 %153, i32* %150, align 4
  br label %154

154:                                              ; preds = %152, %145
  %155 = phi i32 [ %153, %152 ], [ %151, %145 ]
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %154
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #19
  br label %158

158:                                              ; preds = %136, %154, %157
  br i1 %118, label %172, label %159

159:                                              ; preds = %158
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = load atomic i32, i32* %160 monotonic, align 4
  %162 = and i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %165 = load i32, i32* %164, align 4
  br i1 %163, label %166, label %168

166:                                              ; preds = %159
  %167 = add i32 %165, -1
  store i32 %167, i32* %164, align 4
  br label %168

168:                                              ; preds = %166, %159
  %169 = phi i32 [ %167, %166 ], [ %165, %159 ]
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %172

171:                                              ; preds = %168
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #19
  br label %172

172:                                              ; preds = %158, %168, %171
  %173 = bitcast i64* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %173) #19
  store i64 0, i64* %28, align 8
  %174 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %57, i64 0, i32 0, i32 9
  %175 = bitcast [20 x i8]* %174 to i160*
  %176 = load i160, i160* %175, align 8
  %177 = and i160 %176, 73728
  %178 = icmp eq i160 %177, 0
  br i1 %178, label %179, label %199

179:                                              ; preds = %172
  %180 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %57, i64 0, i32 0, i32 1, i32 0, i32 0
  %181 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %180, align 8
  %182 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %181, i64 0, i32 23
  %183 = bitcast [5 x i8]* %182 to i40*
  %184 = load i40, i40* %183, align 8
  %185 = lshr i40 %184, 30
  %186 = trunc i40 %185 to i32
  %187 = and i32 %186, 3
  switch i32 %187, label %188 [
    i32 1, label %192
    i32 3, label %191
  ]

188:                                              ; preds = %179
  %189 = icmp eq i32 %187, 2
  %190 = select i1 %189, i32 3, i32 0
  br label %192

191:                                              ; preds = %179
  br label %192

192:                                              ; preds = %179, %191, %188
  %193 = phi i32 [ 0, %188 ], [ %187, %179 ], [ 3, %191 ]
  %194 = phi i32 [ %190, %188 ], [ 0, %179 ], [ 0, %191 ]
  %195 = and i40 %184, 786432
  %196 = icmp eq i40 %195, 524288
  %197 = select i1 %196, i32 3, i32 %193
  %198 = tail call %"class.blink::Hyphenation"* @_ZNK5blink13ComputedStyle14GetHyphenationEv(%"class.blink::ComputedStyle"* %57) #19
  br label %199

199:                                              ; preds = %172, %192
  %200 = phi i32 [ %194, %192 ], [ 0, %172 ]
  %201 = phi i32 [ %197, %192 ], [ 0, %172 ]
  %202 = phi %"class.blink::Hyphenation"* [ %198, %192 ], [ null, %172 ]
  %203 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %57, i64 0, i32 0, i32 1, i32 0, i32 0
  %204 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %203, align 8
  %205 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %204, i64 0, i32 23
  %206 = bitcast [5 x i8]* %205 to i40*
  %207 = load i40, i40* %206, align 8
  %208 = and i40 %207, 196608
  %209 = icmp eq i40 %208, 0
  %210 = bitcast i32* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %210)
  %211 = icmp eq %"class.blink::Hyphenation"* %202, null
  %212 = select i1 %211, i32 2139095040, i32 0
  store i32 %212, i32* %30, align 4
  %213 = bitcast %"class.blink::BidiResolver"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 368, i8* nonnull %213) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %213, i8 -86, i64 368, i1 false)
  %214 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %31, i64 0, i32 4, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %213, i8 0, i64 64, i1 false) #19
  store i32 10, i32* %214, align 8
  %215 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %31, i64 0, i32 4, i32 1
  store i32 10, i32* %215, align 4
  %216 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %31, i64 0, i32 4, i32 2
  store i32 10, i32* %216, align 8
  %217 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %31, i64 0, i32 4, i32 3, i32 0
  store %"class.blink::BidiContext"* null, %"class.blink::BidiContext"** %217, align 8
  %218 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %31, i64 0, i32 5
  store i32 10, i32* %218, align 8
  %219 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %31, i64 0, i32 6
  %220 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %31, i64 0, i32 9
  %221 = bitcast %"class.blink::TextRunIterator"* %220 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %221, i8 0, i64 16, i1 false) #19
  %222 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %31, i64 0, i32 10
  %223 = bitcast %"class.blink::TextRunIterator"* %219 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %223, i8 0, i64 33, i1 false) #19
  store i8 1, i8* %222, align 8
  %224 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %31, i64 0, i32 12
  %225 = bitcast %"class.blink::BidiRunList"* %224 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %225, i8 0, i64 28, i1 false) #19
  %226 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %31, i64 0, i32 13
  %227 = bitcast %"class.blink::MidpointState"* %226 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %227, i8 0, i64 25, i1 false) #19
  %228 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %31, i64 0, i32 14
  store i32 0, i32* %228, align 8
  %229 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %31, i64 0, i32 15
  %230 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %31, i64 0, i32 19
  %231 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %31, i64 0, i32 19, i32 0, i32 1, i64 0
  %232 = bitcast %"class.WTF::Vector.3145"* %230 to i8**
  %233 = bitcast %"class.WTF::Vector.3140"* %229 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %233, i8 0, i64 25, i1 false) #19
  store i8* %231, i8** %232, align 8
  %234 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %31, i64 0, i32 19, i32 0, i32 0, i32 1
  store i32 8, i32* %234, align 8
  %235 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %31, i64 0, i32 19, i32 0, i32 0, i32 2
  store i32 0, i32* %235, align 4
  %236 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %31, i64 0, i32 20
  %237 = bitcast %"class.WTF::HashMap.3150"* %236 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %237, i8 0, i64 20, i1 false) #19
  %238 = load i160, i160* %175, align 8
  %239 = lshr i160 %238, 115
  %240 = trunc i160 %239 to i8
  %241 = and i8 %240, 1
  %242 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %243 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %242, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %244 = load atomic i32, i32* %243 monotonic, align 4
  %245 = and i32 %244, 1
  %246 = icmp ne i32 %245, 0
  %247 = icmp eq i8 %241, 0
  %248 = and i1 %246, %247
  br i1 %248, label %322, label %249

249:                                              ; preds = %199
  %250 = lshr i160 %238, 86
  %251 = trunc i160 %250 to i32
  %252 = and i32 %251, 7
  switch i32 %252, label %253 [
    i32 5, label %322
    i32 2, label %322
  ]

253:                                              ; preds = %249
  %254 = bitcast %"class.blink::TextRun"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %254) #19
  %255 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %32, i64 0, i32 0, i32 0
  %256 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %32, i64 0, i32 1
  %257 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %32, i64 0, i32 2
  %258 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %32, i64 0, i32 3
  %259 = bitcast %"class.blink::TextRun"* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %259, i8 -86, i64 16, i1 false)
  store float 0xFFFFFFFFE0000000, float* %258, align 8
  %260 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %32, i64 0, i32 4
  store float 0xFFFFFFFFE0000000, float* %260, align 4
  %261 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %32, i64 0, i32 5
  store i16 -21846, i16* %261, align 8
  %262 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %32, i64 0, i32 6, i64 0
  store i8 -86, i8* %262, align 2
  %263 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %32, i64 0, i32 6, i64 1
  store i8 -86, i8* %263, align 1
  %264 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %32, i64 0, i32 7, i32 0
  store float 0xFFFFFFFFE0000000, float* %264, align 4
  %265 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %32, i64 0, i32 7, i32 1
  %266 = icmp eq %"class.WTF::StringImpl"* %242, null
  %267 = bitcast i8* %265 to i64*
  store i64 -6148914691236517206, i64* %267, align 4
  br i1 %266, label %268, label %270

268:                                              ; preds = %253
  %269 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  br label %275

270:                                              ; preds = %253
  %271 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %242, i64 0, i32 1
  %272 = load i32, i32* %271, align 4
  %273 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %242, i64 1
  %274 = ptrtoint %"class.WTF::StringImpl"* %273 to i64
  br label %275

275:                                              ; preds = %268, %270
  %276 = phi %"class.WTF::StringImpl"* [ %269, %268 ], [ %242, %270 ]
  %277 = phi i64 [ 0, %268 ], [ %274, %270 ]
  %278 = phi i32 [ 0, %268 ], [ %272, %270 ]
  store i32 %278, i32* %256, align 8
  store i32 %278, i32* %257, align 4
  store float 0.000000e+00, float* %258, align 8
  store float 0.000000e+00, float* %260, align 4
  store i16 -22527, i16* %261, align 8
  store float 0.000000e+00, float* %264, align 4
  store i8 -85, i8* %265, align 4
  %279 = icmp eq i32 %278, 0
  br i1 %279, label %280, label %281

280:                                              ; preds = %275
  store i16 -22523, i16* %261, align 8
  store i8* null, i8** %255, align 8
  br label %289

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %276, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %283 = load atomic i32, i32* %282 monotonic, align 4
  %284 = and i32 %283, 1
  %285 = icmp eq i32 %284, 0
  %286 = bitcast %"class.blink::TextRun"* %32 to i64*
  store i64 %277, i64* %286, align 8
  br i1 %285, label %288, label %287

287:                                              ; preds = %281
  store i16 -22523, i16* %261, align 8
  br label %289

288:                                              ; preds = %281
  store i16 -22527, i16* %261, align 8
  br label %289

289:                                              ; preds = %288, %287, %280
  %290 = zext i8 %241 to i32
  %291 = call %"class.blink::BidiContext"* @_ZN5blink11BidiContext6CreateEhN3WTF7unicode13CharDirectionEbNS_19BidiEmbeddingSourceEPS0_(i8 zeroext %241, i32 %290, i1 zeroext false, i32 0, %"class.blink::BidiContext"* null) #19
  %292 = getelementptr inbounds %"struct.blink::BidiStatus", %"struct.blink::BidiStatus"* %33, i64 0, i32 0
  store i32 %290, i32* %292, align 8
  %293 = getelementptr inbounds %"struct.blink::BidiStatus", %"struct.blink::BidiStatus"* %33, i64 0, i32 1
  store i32 %290, i32* %293, align 4
  %294 = getelementptr inbounds %"struct.blink::BidiStatus", %"struct.blink::BidiStatus"* %33, i64 0, i32 2
  store i32 %290, i32* %294, align 8
  %295 = getelementptr inbounds %"struct.blink::BidiStatus", %"struct.blink::BidiStatus"* %33, i64 0, i32 3, i32 0
  store %"class.blink::BidiContext"* %291, %"class.blink::BidiContext"** %295, align 8
  %296 = icmp eq %"class.blink::BidiContext"* %291, null
  br i1 %296, label %304, label %297

297:                                              ; preds = %289
  %298 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %291, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %299 = atomicrmw add i32* %298, i32 1 monotonic
  %300 = icmp sgt i32 %299, 0
  br i1 %300, label %304, label %301

301:                                              ; preds = %297
  %302 = bitcast %"class.logging::CheckError"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %302) #19
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %18, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.18, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0)) #19
  %303 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %18) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %18) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %302) #19
  br label %304

304:                                              ; preds = %289, %297, %301
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9SetStatusENS_10BidiStatusE(%"class.blink::BidiResolver"* nonnull %31, %"struct.blink::BidiStatus"* nonnull byval(%"struct.blink::BidiStatus") align 8 %33)
  %305 = load i32, i32* %257, align 4
  %306 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %31, i64 0, i32 0, i32 0
  store %"class.blink::TextRun"* %32, %"class.blink::TextRun"** %306, align 8
  %307 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %31, i64 0, i32 0, i32 1
  store i32 0, i32* %307, align 8
  %308 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %31, i64 0, i32 0, i32 2
  store i32 %305, i32* %308, align 4
  %309 = bitcast %"class.blink::TextRunIterator"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %309) #19
  %310 = getelementptr inbounds %"class.blink::TextRunIterator", %"class.blink::TextRunIterator"* %34, i64 0, i32 0
  store %"class.blink::TextRun"* %32, %"class.blink::TextRun"** %310, align 8
  %311 = getelementptr inbounds %"class.blink::TextRunIterator", %"class.blink::TextRunIterator"* %34, i64 0, i32 1
  store i32 %305, i32* %311, align 8
  %312 = getelementptr inbounds %"class.blink::TextRunIterator", %"class.blink::TextRunIterator"* %34, i64 0, i32 2
  store i32 %305, i32* %312, align 4
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE21CreateBidiRunsForLineERKS1_NS_23VisualDirectionOverrideEbb(%"class.blink::BidiResolver"* nonnull %31, %"class.blink::TextRunIterator"* nonnull dereferenceable(16) %34, i32 0, i1 zeroext false, i1 zeroext false)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %309) #19
  %313 = getelementptr inbounds %"class.blink::BidiRunList", %"class.blink::BidiRunList"* %224, i64 0, i32 0
  %314 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %313, align 8
  br i1 %296, label %321, label %315

315:                                              ; preds = %304
  %316 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %291, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %317 = atomicrmw sub i32* %316, i32 1 acq_rel
  %318 = icmp eq i32 %317, 1
  br i1 %318, label %319, label %321

319:                                              ; preds = %315
  call void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"* nonnull %291) #19
  %320 = bitcast %"class.blink::BidiContext"* %291 to i8*
  call void @free(i8* %320) #19
  br label %321

321:                                              ; preds = %304, %315, %319
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %254) #19
  br label %322

322:                                              ; preds = %249, %249, %199, %321
  %323 = phi %"struct.blink::BidiCharacterRun"* [ %314, %321 ], [ null, %199 ], [ null, %249 ], [ null, %249 ]
  %324 = icmp sgt i32 %114, 0
  br i1 %324, label %325, label %501

325:                                              ; preds = %322
  %326 = icmp eq i32 %201, 3
  %327 = add nsw i32 %114, -1
  %328 = bitcast i32* %26 to float*
  %329 = bitcast %"class.blink::LayoutText"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %330 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 1, i32 0, i32 1
  %331 = bitcast %"class.blink::DisplayItemClient.base"* %330 to i8*
  %332 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %61, i64 0, i32 1, i32 0, i32 5
  %333 = bitcast %"class.blink::TextRun"* %10 to i8*
  %334 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %10, i64 0, i32 1
  %335 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %10, i64 0, i32 3
  %336 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %10, i64 0, i32 4
  %337 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %10, i64 0, i32 5
  %338 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %10, i64 0, i32 6, i64 0
  %339 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %10, i64 0, i32 6, i64 1
  %340 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %10, i64 0, i32 7, i32 0
  %341 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %10, i64 0, i32 7, i32 1
  %342 = bitcast i8* %341 to i64*
  %343 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %10, i64 0, i32 7
  %344 = bitcast %"struct.blink::TabSize"* %343 to i40*
  %345 = bitcast %"class.blink::FloatRect"* %11 to i8*
  %346 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %11, i64 0, i32 0, i32 0
  %347 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %11, i64 0, i32 0, i32 1
  %348 = icmp ne %"class.blink::FloatRect"* %3, null
  %349 = select i1 %348, %"class.blink::FloatRect"* %11, %"class.blink::FloatRect"* null
  %350 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %61, i64 0, i32 1, i32 0, i32 12, i32 0
  %351 = bitcast %"struct.blink::FontDescription::BitFields"* %350 to i64*
  %352 = bitcast %"class.blink::TextRun"* %35 to i8*
  %353 = bitcast %"class.blink::TextRun"* %7 to i8*
  %354 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %7, i64 0, i32 1
  %355 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %7, i64 0, i32 3
  %356 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %7, i64 0, i32 4
  %357 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %7, i64 0, i32 5
  %358 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %7, i64 0, i32 6, i64 0
  %359 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %7, i64 0, i32 6, i64 1
  %360 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %7, i64 0, i32 7, i32 0
  %361 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %7, i64 0, i32 7, i32 1
  %362 = bitcast i8* %361 to i64*
  %363 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %7, i64 0, i32 7
  %364 = bitcast %"struct.blink::TabSize"* %363 to i40*
  %365 = bitcast %"class.blink::FloatRect"* %8 to i8*
  %366 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %8, i64 0, i32 0, i32 0
  %367 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %8, i64 0, i32 0, i32 1
  %368 = select i1 %348, %"class.blink::FloatRect"* %8, %"class.blink::FloatRect"* null
  %369 = bitcast %"class.blink::TextRun"* %5 to i8*
  %370 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %5, i64 0, i32 1
  %371 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %5, i64 0, i32 3
  %372 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %5, i64 0, i32 4
  %373 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %5, i64 0, i32 5
  %374 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %5, i64 0, i32 6, i64 0
  %375 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %5, i64 0, i32 6, i64 1
  %376 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %5, i64 0, i32 7, i32 0
  %377 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %5, i64 0, i32 7, i32 1
  %378 = bitcast i8* %377 to i64*
  %379 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %5, i64 0, i32 7
  %380 = bitcast %"struct.blink::TabSize"* %379 to i40*
  %381 = bitcast %"class.blink::FloatRect"* %6 to i8*
  %382 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %6, i64 0, i32 0, i32 0
  %383 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %6, i64 0, i32 0, i32 1
  %384 = select i1 %348, %"class.blink::FloatRect"* %6, %"class.blink::FloatRect"* null
  %385 = bitcast %"class.blink::TextRun"* %9 to i8*
  %386 = bitcast i32* %25 to float*
  %387 = bitcast i32* %30 to float*
  %388 = bitcast %"class.WTF::Vector.3414"* %13 to i8*
  %389 = bitcast %"class.WTF::StringView"* %14 to i8*
  %390 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  %391 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 0
  %392 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  %393 = bitcast i8** %392 to i16**
  %394 = bitcast %"class.WTF::StringView"* %14 to i64*
  %395 = bitcast %"class.blink::Hyphenation"* %202 to void (%"class.WTF::Vector.3414"*, %"class.blink::Hyphenation"*, %"class.WTF::StringView"*)***
  %396 = getelementptr inbounds %"class.WTF::Vector.3414", %"class.WTF::Vector.3414"* %13, i64 0, i32 0, i32 0, i32 2
  %397 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %62, i64 0, i32 0
  %398 = bitcast %"class.blink::TextRun"* %15 to i8*
  %399 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %15, i64 0, i32 3
  %400 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %15, i64 0, i32 4
  %401 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %15, i64 0, i32 5
  %402 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %15, i64 0, i32 6, i64 0
  %403 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %15, i64 0, i32 6, i64 1
  %404 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %15, i64 0, i32 7, i32 0
  %405 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %15, i64 0, i32 7, i32 1
  %406 = bitcast i8* %405 to i64*
  %407 = getelementptr inbounds %"class.WTF::Vector.3414", %"class.WTF::Vector.3414"* %13, i64 0, i32 0, i32 0, i32 0
  %408 = bitcast %"class.blink::TextRun"* %12 to i8*
  %409 = getelementptr inbounds %"class.WTF::Vector.3414", %"class.WTF::Vector.3414"* %13, i64 0, i32 0, i32 1, i64 0
  %410 = bitcast i8* %409 to i32*
  %411 = getelementptr inbounds %"class.WTF::Vector.3414", %"class.WTF::Vector.3414"* %13, i64 0, i32 0
  %412 = bitcast %"class.blink::TextRun"* %16 to i8*
  %413 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %16, i64 0, i32 1
  %414 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %16, i64 0, i32 3
  %415 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %16, i64 0, i32 4
  %416 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %16, i64 0, i32 5
  %417 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %16, i64 0, i32 6, i64 0
  %418 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %16, i64 0, i32 6, i64 1
  %419 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %16, i64 0, i32 7, i32 0
  %420 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %16, i64 0, i32 7, i32 1
  %421 = bitcast i8* %420 to i64*
  %422 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %16, i64 0, i32 7
  %423 = bitcast %"struct.blink::TabSize"* %422 to i40*
  %424 = bitcast %"class.blink::FloatRect"* %17 to i8*
  %425 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %17, i64 0, i32 0, i32 0
  %426 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %17, i64 0, i32 0, i32 1
  %427 = select i1 %348, %"class.blink::FloatRect"* %17, %"class.blink::FloatRect"* null
  %428 = bitcast %"class.blink::TextRun"* %19 to i8*
  %429 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %19, i64 0, i32 1
  %430 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %19, i64 0, i32 3
  %431 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %19, i64 0, i32 4
  %432 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %19, i64 0, i32 5
  %433 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %19, i64 0, i32 6, i64 0
  %434 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %19, i64 0, i32 6, i64 1
  %435 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %19, i64 0, i32 7, i32 0
  %436 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %19, i64 0, i32 7, i32 1
  %437 = bitcast i8* %436 to i64*
  %438 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %19, i64 0, i32 7
  %439 = bitcast %"struct.blink::TabSize"* %438 to i40*
  %440 = bitcast %"class.blink::FloatRect"* %20 to i8*
  %441 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %20, i64 0, i32 0, i32 0
  %442 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %20, i64 0, i32 0, i32 1
  %443 = select i1 %348, %"class.blink::FloatRect"* %20, %"class.blink::FloatRect"* null
  %444 = icmp eq i32 %201, 0
  %445 = bitcast %"class.blink::LazyLineBreakIterator"* %21 to i8*
  %446 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %21, i64 0, i32 0, i32 0, i32 0
  %447 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %21, i64 0, i32 1, i32 0, i32 0, i32 0
  %448 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %21, i64 0, i32 2
  %449 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %21, i64 0, i32 5, i32 0
  %450 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %21, i64 0, i32 5, i32 1
  %451 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %21, i64 0, i32 6
  %452 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %21, i64 0, i32 7
  %453 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %21, i64 0, i32 8
  %454 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %21, i64 0, i32 3, i64 0
  %455 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %21, i64 0, i32 3, i64 1
  %456 = icmp eq i32 %201, 1
  %457 = select i1 %456, i32 1, i32 2
  %458 = bitcast %"class.blink::TextRun"* %22 to i8*
  %459 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %22, i64 0, i32 3
  %460 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %22, i64 0, i32 4
  %461 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %22, i64 0, i32 5
  %462 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %22, i64 0, i32 6, i64 0
  %463 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %22, i64 0, i32 6, i64 1
  %464 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %22, i64 0, i32 7, i32 0
  %465 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %22, i64 0, i32 7, i32 1
  %466 = bitcast i8* %465 to i64*
  %467 = bitcast %"class.blink::TextRun"* %23 to i8*
  %468 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %23, i64 0, i32 1
  %469 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %23, i64 0, i32 3
  %470 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %23, i64 0, i32 4
  %471 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %23, i64 0, i32 5
  %472 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %23, i64 0, i32 6, i64 0
  %473 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %23, i64 0, i32 6, i64 1
  %474 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %23, i64 0, i32 7, i32 0
  %475 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %23, i64 0, i32 7, i32 1
  %476 = bitcast i8* %475 to i64*
  %477 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %23, i64 0, i32 7
  %478 = bitcast %"struct.blink::TabSize"* %477 to i40*
  %479 = bitcast %"class.blink::FloatRect"* %24 to i8*
  %480 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %24, i64 0, i32 0, i32 0
  %481 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %24, i64 0, i32 0, i32 1
  %482 = select i1 %348, %"class.blink::FloatRect"* %24, %"class.blink::FloatRect"* null
  %483 = fcmp une float %64, 0.000000e+00
  %484 = bitcast %"class.blink::TextRun"* %36 to i8*
  %485 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %36, i64 0, i32 1
  %486 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %36, i64 0, i32 3
  %487 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %36, i64 0, i32 4
  %488 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %36, i64 0, i32 5
  %489 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %36, i64 0, i32 6, i64 0
  %490 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %36, i64 0, i32 6, i64 1
  %491 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %36, i64 0, i32 7, i32 0
  %492 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %36, i64 0, i32 7, i32 1
  %493 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %36, i64 0, i32 7
  %494 = bitcast %"struct.blink::TabSize"* %493 to i40*
  %495 = bitcast float* %41 to i32*
  %496 = bitcast i32* %30 to float*
  %497 = bitcast %"class.blink::TextRun"* %36 to i8*
  %498 = bitcast i8* %492 to i64*
  br label %508

499:                                              ; preds = %1557
  %500 = and i8 %638, 1
  br label %501

501:                                              ; preds = %499, %322
  %502 = phi i8 [ 0, %322 ], [ %1559, %499 ]
  %503 = phi i8 [ 0, %322 ], [ %500, %499 ]
  %504 = phi i8 [ 1, %322 ], [ %1560, %499 ]
  %505 = phi i8 [ 1, %322 ], [ %1561, %499 ]
  %506 = phi %"struct.blink::BidiCharacterRun"* [ %323, %322 ], [ %565, %499 ]
  %507 = icmp eq %"struct.blink::BidiCharacterRun"* %506, null
  br i1 %507, label %1578, label %1567

508:                                              ; preds = %325, %1557
  %509 = phi float [ %1, %325 ], [ %1564, %1557 ]
  %510 = phi i32 [ 0, %325 ], [ %1565, %1557 ]
  %511 = phi i8 [ %241, %325 ], [ %566, %1557 ]
  %512 = phi %"struct.blink::BidiCharacterRun"* [ %323, %325 ], [ %565, %1557 ]
  %513 = phi i32 [ 0, %325 ], [ %1562, %1557 ]
  %514 = phi i8 [ 1, %325 ], [ %1561, %1557 ]
  %515 = phi i8 [ 1, %325 ], [ %1560, %1557 ]
  %516 = phi i8 [ 0, %325 ], [ %597, %1557 ]
  %517 = phi i8 [ 0, %325 ], [ %638, %1557 ]
  %518 = phi i8 [ 0, %325 ], [ %1559, %1557 ]
  %519 = phi i32 [ -1, %325 ], [ %1558, %1557 ]
  %520 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %521 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %520, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %522 = load atomic i32, i32* %521 monotonic, align 4
  %523 = and i32 %522, 1
  %524 = icmp eq i32 %523, 0
  %525 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %520, i64 1
  br i1 %524, label %532, label %526

526:                                              ; preds = %508
  %527 = bitcast %"class.WTF::StringImpl"* %525 to i8*
  %528 = zext i32 %510 to i64
  %529 = getelementptr inbounds i8, i8* %527, i64 %528
  %530 = load i8, i8* %529, align 1
  %531 = zext i8 %530 to i16
  br label %537

532:                                              ; preds = %508
  %533 = bitcast %"class.WTF::StringImpl"* %525 to i16*
  %534 = zext i32 %510 to i64
  %535 = getelementptr inbounds i16, i16* %533, i64 %534
  %536 = load i16, i16* %535, align 2
  br label %537

537:                                              ; preds = %526, %532
  %538 = phi i16 [ %531, %526 ], [ %536, %532 ]
  %539 = icmp eq %"struct.blink::BidiCharacterRun"* %512, null
  br i1 %539, label %564, label %540

540:                                              ; preds = %537, %547
  %541 = phi %"struct.blink::BidiCharacterRun"* [ %546, %547 ], [ %512, %537 ]
  %542 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %541, i64 0, i32 4
  %543 = load i32, i32* %542, align 4
  %544 = icmp slt i32 %510, %543
  %545 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %541, i64 0, i32 2
  %546 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %545, align 8
  br i1 %544, label %548, label %547

547:                                              ; preds = %540, %553
  br label %540

548:                                              ; preds = %540
  %549 = icmp eq %"struct.blink::BidiCharacterRun"* %546, null
  br i1 %549, label %550, label %553

550:                                              ; preds = %548
  %551 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %541, i64 0, i32 1
  %552 = load i8, i8* %551, align 1
  br label %561

553:                                              ; preds = %548
  %554 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %546, i64 0, i32 1
  %555 = load i8, i8* %554, align 1
  %556 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %541, i64 0, i32 1
  %557 = load i8, i8* %556, align 1
  %558 = xor i8 %557, %555
  %559 = and i8 %558, 1
  %560 = icmp eq i8 %559, 0
  br i1 %560, label %547, label %561

561:                                              ; preds = %553, %550
  %562 = phi i8 [ %552, %550 ], [ %557, %553 ]
  %563 = and i8 %562, 1
  br label %564

564:                                              ; preds = %537, %561
  %565 = phi %"struct.blink::BidiCharacterRun"* [ %541, %561 ], [ null, %537 ]
  %566 = phi i8 [ %563, %561 ], [ %511, %537 ]
  %567 = icmp ne i8 %516, 0
  switch i16 %538, label %582 [
    i16 10, label %570
    i16 9, label %575
    i16 32, label %568
    i16 160, label %593
  ]

568:                                              ; preds = %564
  %569 = load i160, i160* %175, align 8
  br label %589

570:                                              ; preds = %564
  %571 = load i160, i160* %175, align 8
  %572 = lshr i160 %571, 12
  %573 = trunc i160 %572 to i32
  %574 = and i32 %573, 127
  switch i32 %574, label %586 [
    i32 16, label %589
    i32 1, label %589
  ]

575:                                              ; preds = %564
  %576 = load i160, i160* %175, align 8
  %577 = and i160 %576, 286720
  %578 = icmp eq i160 %577, 0
  br i1 %578, label %589, label %579

579:                                              ; preds = %575
  %580 = load i16, i16* %52, align 8
  %581 = or i16 %580, 4
  store i16 %581, i16* %52, align 8
  br label %593

582:                                              ; preds = %564
  %583 = load i16, i16* %52, align 8
  %584 = and i16 %583, -6145
  %585 = or i16 %584, 2048
  store i16 %585, i16* %52, align 8
  br label %593

586:                                              ; preds = %570
  %587 = load i16, i16* %52, align 8
  %588 = or i16 %587, 2
  store i16 %588, i16* %52, align 8
  br label %595

589:                                              ; preds = %568, %570, %570, %575
  %590 = phi i160 [ %569, %568 ], [ %571, %570 ], [ %571, %570 ], [ %576, %575 ]
  %591 = and i160 %590, 73728
  %592 = icmp eq i160 %591, 0
  br i1 %592, label %595, label %593

593:                                              ; preds = %564, %579, %582, %589
  %594 = phi i8 [ 1, %589 ], [ 0, %582 ], [ 0, %579 ], [ 0, %564 ]
  br label %595

595:                                              ; preds = %586, %593, %589
  %596 = phi i1 [ false, %589 ], [ true, %586 ], [ false, %593 ]
  %597 = phi i8 [ 1, %589 ], [ 0, %586 ], [ %594, %593 ]
  %598 = phi i1 [ true, %589 ], [ true, %586 ], [ %326, %593 ]
  %599 = icmp eq i32 %510, 0
  br i1 %599, label %600, label %606

600:                                              ; preds = %595
  %601 = zext i1 %598 to i16
  %602 = load i16, i16* %52, align 8
  %603 = shl nuw nsw i16 %601, 3
  %604 = and i16 %602, -9
  %605 = or i16 %604, %603
  store i16 %605, i16* %52, align 8
  br label %606

606:                                              ; preds = %595, %600
  %607 = icmp eq i32 %510, %327
  br i1 %607, label %608, label %619

608:                                              ; preds = %606
  %609 = zext i1 %598 to i16
  %610 = load i16, i16* %52, align 8
  %611 = shl nuw nsw i16 %609, 4
  %612 = and i16 %610, -49
  %613 = icmp ne i8 %597, 0
  %614 = or i1 %596, %613
  %615 = zext i1 %614 to i16
  %616 = shl nuw nsw i16 %615, 5
  %617 = or i16 %616, %611
  %618 = or i16 %617, %612
  store i16 %618, i16* %52, align 8
  br label %619

619:                                              ; preds = %608, %606
  %620 = and i8 %517, 1
  %621 = icmp eq i8 %620, 0
  br i1 %621, label %622, label %632

622:                                              ; preds = %619
  %623 = load i160, i160* %175, align 8
  %624 = and i160 %623, 286720
  %625 = icmp ne i160 %624, 0
  %626 = xor i1 %567, true
  %627 = or i1 %625, %626
  %628 = icmp eq i8 %597, 0
  %629 = or i1 %628, %627
  %630 = select i1 %629, i8 %517, i8 1
  %631 = and i8 %630, 1
  br label %632

632:                                              ; preds = %622, %619
  %633 = phi i8 [ %631, %622 ], [ 1, %619 ]
  %634 = phi i8 [ %630, %622 ], [ %517, %619 ]
  %635 = icmp ne i8 %633, 0
  %636 = icmp eq i8 %597, 0
  %637 = and i1 %636, %635
  %638 = select i1 %637, i8 0, i8 %634
  %639 = and i8 %638, 1
  %640 = icmp eq i8 %639, 0
  br i1 %640, label %643, label %641

641:                                              ; preds = %632
  %642 = add nsw i32 %513, 1
  br label %1557

643:                                              ; preds = %632
  %644 = icmp ne i16 %538, 173
  %645 = or i1 %209, %644
  br i1 %645, label %707, label %646

646:                                              ; preds = %643
  %647 = sub nsw i32 %510, %513
  %648 = load float, float* %328, align 4
  %649 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %56, align 8
  %650 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %649, i64 0, i32 0, i32 1, i32 0, i32 0
  %651 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %650, align 8
  %652 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %651, i64 0, i32 23
  %653 = bitcast [5 x i8]* %652 to i40*
  %654 = load i40, i40* %653, align 8
  %655 = and i40 %654, 4294967296
  %656 = icmp eq i40 %655, 0
  br i1 %656, label %668, label %657

657:                                              ; preds = %646
  %658 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %329, align 8
  %659 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %658, i64 81
  %660 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %659, align 8
  %661 = call zeroext i1 %660(%"class.blink::LayoutObject"* %38) #19
  br i1 %661, label %662, label %668

662:                                              ; preds = %657
  %663 = load i8, i8* %331, align 8
  %664 = and i8 %663, 1
  %665 = icmp eq i8 %664, 0
  br i1 %665, label %668, label %666

666:                                              ; preds = %662
  %667 = load float, float* %332, align 4
  br label %703

668:                                              ; preds = %662, %657, %646
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %333) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %333, i8 -86, i64 16, i1 false) #19
  store float 0xFFFFFFFFE0000000, float* %335, align 8
  store float 0xFFFFFFFFE0000000, float* %336, align 4
  store i16 -21846, i16* %337, align 8
  store i8 -86, i8* %338, align 2
  store i8 -86, i8* %339, align 1
  store float 0xFFFFFFFFE0000000, float* %340, align 4
  store i64 -6148914691236517206, i64* %342, align 4
  %669 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %56, align 8
  call void @_ZN5blink16ConstructTextRunERKNS_4FontEPKNS_10LayoutTextEjjRKNS_13ComputedStyleENS_13TextDirectionE(%"class.blink::TextRun"* nonnull sret %10, %"class.blink::Font"* dereferenceable(88) %62, %"class.blink::LayoutText"* %0, i32 %513, i32 %647, %"class.blink::ComputedStyle"* dereferenceable(104) %669, i8 zeroext %566) #19
  %670 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %671 = icmp eq %"class.WTF::StringImpl"* %670, null
  br i1 %671, label %675, label %672

672:                                              ; preds = %668
  %673 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %670, i64 0, i32 1
  %674 = load i32, i32* %673, align 4
  br label %675

675:                                              ; preds = %672, %668
  %676 = phi i32 [ %674, %672 ], [ 0, %668 ]
  %677 = sub i32 %676, %513
  store i32 %677, i32* %334, align 8
  %678 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %56, align 8
  %679 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %678, i64 0, i32 0, i32 9
  %680 = bitcast [20 x i8]* %679 to i160*
  %681 = load i160, i160* %680, align 8
  %682 = and i160 %681, 286720
  %683 = icmp ne i160 %682, 0
  %684 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %678, i64 0, i32 0, i32 1, i32 0, i32 0
  %685 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %684, align 8
  %686 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %685, i64 0, i32 15
  %687 = bitcast %"struct.blink::TabSize"* %686 to i64*
  %688 = load i64, i64* %687, align 4
  %689 = zext i1 %683 to i16
  %690 = load i16, i16* %337, align 8
  %691 = shl nuw nsw i16 %689, 3
  %692 = and i16 %690, -9
  %693 = or i16 %692, %691
  store i16 %693, i16* %337, align 8
  %694 = trunc i64 %688 to i40
  store i40 %694, i40* %344, align 4
  %695 = fadd float %509, %648
  store float %695, float* %335, align 8
  store float 0.000000e+00, float* %336, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %345) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %345, i8 0, i64 16, i1 false) #19
  %696 = call float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"* %62, %"class.blink::TextRun"* nonnull dereferenceable(40) %10, %"class.WTF::HashSet.3131"* %2, %"class.blink::FloatRect"* %349) #19
  br i1 %348, label %697, label %702

697:                                              ; preds = %675
  %698 = load float, float* %346, align 4
  %699 = fadd float %648, %698
  store float %699, float* %346, align 4
  %700 = load float, float* %347, align 4
  %701 = fadd float %700, 0.000000e+00
  store float %701, float* %347, align 4
  call void @_ZN5blink9FloatRect5UniteERKS0_(%"class.blink::FloatRect"* nonnull %3, %"class.blink::FloatRect"* nonnull dereferenceable(16) %11) #19
  br label %702

702:                                              ; preds = %697, %675
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %345) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %333) #19
  br label %703

703:                                              ; preds = %666, %702
  %704 = phi float [ %696, %702 ], [ %667, %666 ]
  %705 = fadd float %704, %648
  store float %705, float* %328, align 4
  %706 = add nsw i32 %510, 1
  br label %1557

707:                                              ; preds = %643
  %708 = icmp slt i32 %519, %510
  br i1 %708, label %709, label %711

709:                                              ; preds = %707
  %710 = call i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionEiNS_13LineBreakTypeE(%"class.blink::LazyLineBreakIterator"* nonnull %27, i32 %510, i32 %200) #19
  br label %711

711:                                              ; preds = %707, %709
  %712 = phi i32 [ %710, %709 ], [ %519, %707 ]
  %713 = icmp eq i32 %712, %510
  br label %714

714:                                              ; preds = %778, %711
  %715 = phi i32 [ %510, %711 ], [ %722, %778 ]
  %716 = phi i32 [ %712, %711 ], [ %749, %778 ]
  %717 = phi i16 [ %538, %711 ], [ %743, %778 ]
  switch i16 %717, label %718 [
    i16 10, label %779
    i16 32, label %779
    i16 9, label %779
  ]

718:                                              ; preds = %714
  %719 = icmp ne i16 %717, 173
  %720 = or i1 %209, %719
  br i1 %720, label %721, label %779

721:                                              ; preds = %718
  %722 = add nsw i32 %715, 1
  %723 = icmp eq i32 %722, %114
  br i1 %723, label %779, label %724

724:                                              ; preds = %721
  %725 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %726 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %725, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %727 = load atomic i32, i32* %726 monotonic, align 4
  %728 = and i32 %727, 1
  %729 = icmp eq i32 %728, 0
  %730 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %725, i64 1
  br i1 %729, label %737, label %731

731:                                              ; preds = %724
  %732 = bitcast %"class.WTF::StringImpl"* %730 to i8*
  %733 = zext i32 %722 to i64
  %734 = getelementptr inbounds i8, i8* %732, i64 %733
  %735 = load i8, i8* %734, align 1
  %736 = zext i8 %735 to i16
  br label %742

737:                                              ; preds = %724
  %738 = bitcast %"class.WTF::StringImpl"* %730 to i16*
  %739 = zext i32 %722 to i64
  %740 = getelementptr inbounds i16, i16* %738, i64 %739
  %741 = load i16, i16* %740, align 2
  br label %742

742:                                              ; preds = %731, %737
  %743 = phi i16 [ %736, %731 ], [ %741, %737 ]
  %744 = icmp sgt i32 %716, %715
  br i1 %744, label %748, label %745

745:                                              ; preds = %742
  %746 = load i32, i32* %141, align 4
  %747 = call i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionEiNS_13LineBreakTypeE(%"class.blink::LazyLineBreakIterator"* nonnull %27, i32 %722, i32 %746) #19
  br label %748

748:                                              ; preds = %742, %745
  %749 = phi i32 [ %747, %745 ], [ %716, %742 ]
  %750 = icmp eq i32 %749, %722
  br i1 %750, label %751, label %778

751:                                              ; preds = %748
  %752 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %753 = icmp eq %"class.WTF::StringImpl"* %752, null
  br i1 %753, label %779, label %754

754:                                              ; preds = %751
  %755 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %752, i64 0, i32 1
  %756 = load i32, i32* %755, align 4
  %757 = icmp ugt i32 %756, %715
  br i1 %757, label %758, label %779

758:                                              ; preds = %754
  %759 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %752, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %760 = load atomic i32, i32* %759 monotonic, align 4
  %761 = and i32 %760, 1
  %762 = icmp eq i32 %761, 0
  %763 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %752, i64 1
  br i1 %762, label %770, label %764

764:                                              ; preds = %758
  %765 = bitcast %"class.WTF::StringImpl"* %763 to i8*
  %766 = zext i32 %715 to i64
  %767 = getelementptr inbounds i8, i8* %765, i64 %766
  %768 = load i8, i8* %767, align 1
  %769 = zext i8 %768 to i16
  br label %775

770:                                              ; preds = %758
  %771 = bitcast %"class.WTF::StringImpl"* %763 to i16*
  %772 = zext i32 %715 to i64
  %773 = getelementptr inbounds i16, i16* %771, i64 %772
  %774 = load i16, i16* %773, align 2
  br label %775

775:                                              ; preds = %764, %770
  %776 = phi i16 [ %769, %764 ], [ %774, %770 ]
  %777 = icmp eq i16 %776, 173
  br i1 %777, label %778, label %779

778:                                              ; preds = %775, %748
  br label %714

779:                                              ; preds = %751, %754, %714, %714, %714, %775, %721, %718
  %780 = phi i32 [ %114, %721 ], [ %722, %775 ], [ %715, %718 ], [ %715, %714 ], [ %715, %714 ], [ %715, %714 ], [ %722, %754 ], [ %722, %751 ]
  %781 = phi i32 [ %716, %721 ], [ %722, %775 ], [ %716, %718 ], [ %716, %714 ], [ %716, %714 ], [ %716, %714 ], [ %722, %754 ], [ %722, %751 ]
  %782 = phi i16 [ %717, %721 ], [ %743, %775 ], [ 173, %718 ], [ %717, %714 ], [ %717, %714 ], [ %717, %714 ], [ %743, %754 ], [ %743, %751 ]
  %783 = icmp eq %"struct.blink::BidiCharacterRun"* %565, null
  br i1 %783, label %790, label %784

784:                                              ; preds = %779
  %785 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %565, i64 0, i32 4
  %786 = load i32, i32* %785, align 4
  %787 = add nsw i32 %786, 1
  %788 = icmp slt i32 %787, %780
  %789 = select i1 %788, i32 %787, i32 %780
  br label %790

790:                                              ; preds = %779, %784
  %791 = phi i32 [ %780, %779 ], [ %789, %784 ]
  %792 = sub nsw i32 %791, %510
  %793 = icmp eq i32 %792, 0
  br i1 %793, label %1490, label %794

794:                                              ; preds = %790
  %795 = icmp slt i32 %791, %114
  %796 = icmp eq i16 %782, 32
  %797 = and i1 %796, %795
  br i1 %797, label %798, label %873

798:                                              ; preds = %794
  %799 = load i64, i64* %351, align 8
  %800 = and i64 %799, 8589934592
  %801 = icmp eq i64 %800, 0
  br i1 %801, label %873, label %802

802:                                              ; preds = %798
  %803 = zext i8 %566 to i64
  %804 = getelementptr inbounds [2 x float], [2 x float]* %29, i64 0, i64 %803
  %805 = load float, float* %804, align 4
  %806 = fcmp une float %805, 0.000000e+00
  br i1 %806, label %810, label %807

807:                                              ; preds = %802
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %352) #19
  call void @_ZN5blink16ConstructTextRunERKNS_4FontEPKDsiRKNS_13ComputedStyleENS_13TextDirectionE(%"class.blink::TextRun"* nonnull sret %35, %"class.blink::Font"* dereferenceable(88) %62, i16* nonnull @_ZN3WTF7unicodeL15kSpaceCharacterE, i32 1, %"class.blink::ComputedStyle"* dereferenceable(104) %57, i8 zeroext %566) #19
  %808 = call float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"* %62, %"class.blink::TextRun"* nonnull dereferenceable(40) %35, %"class.WTF::HashSet.3131"* null, %"class.blink::FloatRect"* null) #19
  %809 = fadd float %64, %808
  store float %809, float* %804, align 4
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %352) #19
  br label %810

810:                                              ; preds = %802, %807
  %811 = phi float [ %805, %802 ], [ %809, %807 ]
  %812 = fcmp oeq float %811, 0.000000e+00
  br i1 %812, label %873, label %813

813:                                              ; preds = %810
  %814 = add nsw i32 %792, 1
  %815 = load float, float* %328, align 4
  %816 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %56, align 8
  %817 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %816, i64 0, i32 0, i32 1, i32 0, i32 0
  %818 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %817, align 8
  %819 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %818, i64 0, i32 23
  %820 = bitcast [5 x i8]* %819 to i40*
  %821 = load i40, i40* %820, align 8
  %822 = and i40 %821, 4294967296
  %823 = icmp eq i40 %822, 0
  br i1 %823, label %835, label %824

824:                                              ; preds = %813
  %825 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %329, align 8
  %826 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %825, i64 81
  %827 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %826, align 8
  %828 = call zeroext i1 %827(%"class.blink::LayoutObject"* %38) #19
  br i1 %828, label %829, label %835

829:                                              ; preds = %824
  %830 = load i8, i8* %331, align 8
  %831 = and i8 %830, 1
  %832 = icmp eq i8 %831, 0
  br i1 %832, label %835, label %833

833:                                              ; preds = %829
  %834 = load float, float* %332, align 4
  br label %870

835:                                              ; preds = %829, %824, %813
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %353) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %353, i8 -86, i64 16, i1 false) #19
  store float 0xFFFFFFFFE0000000, float* %355, align 8
  store float 0xFFFFFFFFE0000000, float* %356, align 4
  store i16 -21846, i16* %357, align 8
  store i8 -86, i8* %358, align 2
  store i8 -86, i8* %359, align 1
  store float 0xFFFFFFFFE0000000, float* %360, align 4
  store i64 -6148914691236517206, i64* %362, align 4
  %836 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %56, align 8
  call void @_ZN5blink16ConstructTextRunERKNS_4FontEPKNS_10LayoutTextEjjRKNS_13ComputedStyleENS_13TextDirectionE(%"class.blink::TextRun"* nonnull sret %7, %"class.blink::Font"* dereferenceable(88) %62, %"class.blink::LayoutText"* %0, i32 %510, i32 %814, %"class.blink::ComputedStyle"* dereferenceable(104) %836, i8 zeroext %566) #19
  %837 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %838 = icmp eq %"class.WTF::StringImpl"* %837, null
  br i1 %838, label %842, label %839

839:                                              ; preds = %835
  %840 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %837, i64 0, i32 1
  %841 = load i32, i32* %840, align 4
  br label %842

842:                                              ; preds = %839, %835
  %843 = phi i32 [ %841, %839 ], [ 0, %835 ]
  %844 = sub i32 %843, %510
  store i32 %844, i32* %354, align 8
  %845 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %56, align 8
  %846 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %845, i64 0, i32 0, i32 9
  %847 = bitcast [20 x i8]* %846 to i160*
  %848 = load i160, i160* %847, align 8
  %849 = and i160 %848, 286720
  %850 = icmp ne i160 %849, 0
  %851 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %845, i64 0, i32 0, i32 1, i32 0, i32 0
  %852 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %851, align 8
  %853 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %852, i64 0, i32 15
  %854 = bitcast %"struct.blink::TabSize"* %853 to i64*
  %855 = load i64, i64* %854, align 4
  %856 = zext i1 %850 to i16
  %857 = load i16, i16* %357, align 8
  %858 = shl nuw nsw i16 %856, 3
  %859 = and i16 %857, -9
  %860 = or i16 %859, %858
  store i16 %860, i16* %357, align 8
  %861 = trunc i64 %855 to i40
  store i40 %861, i40* %364, align 4
  %862 = fadd float %509, %815
  store float %862, float* %355, align 8
  store float 0.000000e+00, float* %356, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %365) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %365, i8 0, i64 16, i1 false) #19
  %863 = call float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"* %62, %"class.blink::TextRun"* nonnull dereferenceable(40) %7, %"class.WTF::HashSet.3131"* %2, %"class.blink::FloatRect"* %368) #19
  br i1 %348, label %864, label %869

864:                                              ; preds = %842
  %865 = load float, float* %366, align 4
  %866 = fadd float %815, %865
  store float %866, float* %366, align 4
  %867 = load float, float* %367, align 4
  %868 = fadd float %867, 0.000000e+00
  store float %868, float* %367, align 4
  call void @_ZN5blink9FloatRect5UniteERKS0_(%"class.blink::FloatRect"* nonnull %3, %"class.blink::FloatRect"* nonnull dereferenceable(16) %8) #19
  br label %869

869:                                              ; preds = %864, %842
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %365) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %353) #19
  br label %870

870:                                              ; preds = %833, %869
  %871 = phi float [ %863, %869 ], [ %834, %833 ]
  %872 = fsub float %871, %811
  br label %941

873:                                              ; preds = %794, %798, %810
  %874 = phi float [ %811, %810 ], [ 0.000000e+00, %798 ], [ 0.000000e+00, %794 ]
  %875 = load float, float* %328, align 4
  %876 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %56, align 8
  %877 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %876, i64 0, i32 0, i32 1, i32 0, i32 0
  %878 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %877, align 8
  %879 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %878, i64 0, i32 23
  %880 = bitcast [5 x i8]* %879 to i40*
  %881 = load i40, i40* %880, align 8
  %882 = and i40 %881, 4294967296
  %883 = icmp eq i40 %882, 0
  br i1 %883, label %895, label %884

884:                                              ; preds = %873
  %885 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %329, align 8
  %886 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %885, i64 81
  %887 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %886, align 8
  %888 = call zeroext i1 %887(%"class.blink::LayoutObject"* %38) #19
  br i1 %888, label %889, label %895

889:                                              ; preds = %884
  %890 = load i8, i8* %331, align 8
  %891 = and i8 %890, 1
  %892 = icmp eq i8 %891, 0
  br i1 %892, label %895, label %893

893:                                              ; preds = %889
  %894 = load float, float* %332, align 4
  br label %930

895:                                              ; preds = %889, %884, %873
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %369) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %369, i8 -86, i64 16, i1 false) #19
  store float 0xFFFFFFFFE0000000, float* %371, align 8
  store float 0xFFFFFFFFE0000000, float* %372, align 4
  store i16 -21846, i16* %373, align 8
  store i8 -86, i8* %374, align 2
  store i8 -86, i8* %375, align 1
  store float 0xFFFFFFFFE0000000, float* %376, align 4
  store i64 -6148914691236517206, i64* %378, align 4
  %896 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %56, align 8
  call void @_ZN5blink16ConstructTextRunERKNS_4FontEPKNS_10LayoutTextEjjRKNS_13ComputedStyleENS_13TextDirectionE(%"class.blink::TextRun"* nonnull sret %5, %"class.blink::Font"* dereferenceable(88) %62, %"class.blink::LayoutText"* %0, i32 %510, i32 %792, %"class.blink::ComputedStyle"* dereferenceable(104) %896, i8 zeroext %566) #19
  %897 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %898 = icmp eq %"class.WTF::StringImpl"* %897, null
  br i1 %898, label %902, label %899

899:                                              ; preds = %895
  %900 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %897, i64 0, i32 1
  %901 = load i32, i32* %900, align 4
  br label %902

902:                                              ; preds = %899, %895
  %903 = phi i32 [ %901, %899 ], [ 0, %895 ]
  %904 = sub i32 %903, %510
  store i32 %904, i32* %370, align 8
  %905 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %56, align 8
  %906 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %905, i64 0, i32 0, i32 9
  %907 = bitcast [20 x i8]* %906 to i160*
  %908 = load i160, i160* %907, align 8
  %909 = and i160 %908, 286720
  %910 = icmp ne i160 %909, 0
  %911 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %905, i64 0, i32 0, i32 1, i32 0, i32 0
  %912 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %911, align 8
  %913 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %912, i64 0, i32 15
  %914 = bitcast %"struct.blink::TabSize"* %913 to i64*
  %915 = load i64, i64* %914, align 4
  %916 = zext i1 %910 to i16
  %917 = load i16, i16* %373, align 8
  %918 = shl nuw nsw i16 %916, 3
  %919 = and i16 %917, -9
  %920 = or i16 %919, %918
  store i16 %920, i16* %373, align 8
  %921 = trunc i64 %915 to i40
  store i40 %921, i40* %380, align 4
  %922 = fadd float %509, %875
  store float %922, float* %371, align 8
  store float 0.000000e+00, float* %372, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %381) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %381, i8 0, i64 16, i1 false) #19
  %923 = call float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"* %62, %"class.blink::TextRun"* nonnull dereferenceable(40) %5, %"class.WTF::HashSet.3131"* %2, %"class.blink::FloatRect"* %384) #19
  br i1 %348, label %924, label %929

924:                                              ; preds = %902
  %925 = load float, float* %382, align 4
  %926 = fadd float %875, %925
  store float %926, float* %382, align 4
  %927 = load float, float* %383, align 4
  %928 = fadd float %927, 0.000000e+00
  store float %928, float* %383, align 4
  call void @_ZN5blink9FloatRect5UniteERKS0_(%"class.blink::FloatRect"* nonnull %3, %"class.blink::FloatRect"* nonnull dereferenceable(16) %6) #19
  br label %929

929:                                              ; preds = %924, %902
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %381) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %369) #19
  br label %930

930:                                              ; preds = %893, %929
  %931 = phi float [ %923, %929 ], [ %894, %893 ]
  %932 = icmp ne i16 %782, 173
  %933 = or i1 %209, %932
  br i1 %933, label %941, label %934

934:                                              ; preds = %930
  %935 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %56, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %385) #19
  %936 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink13ComputedStyle12HyphenStringEv(%"class.blink::ComputedStyle"* %935) #19
  %937 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %936, i64 0, i32 0
  call void @_ZN5blink16ConstructTextRunERKNS_4FontERKN3WTF6StringERKNS_13ComputedStyleENS_13TextDirectionEj(%"class.blink::TextRun"* nonnull sret %9, %"class.blink::Font"* dereferenceable(88) %62, %"class.WTF::String"* dereferenceable(8) %937, %"class.blink::ComputedStyle"* dereferenceable(104) %935, i8 zeroext %566, i32 0) #19
  %938 = call float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"* %62, %"class.blink::TextRun"* nonnull dereferenceable(40) %9, %"class.WTF::HashSet.3131"* null, %"class.blink::FloatRect"* null) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %385) #19
  %939 = load float, float* %386, align 4
  %940 = fadd float %938, %939
  store float %940, float* %386, align 4
  br label %941

941:                                              ; preds = %930, %934, %870
  %942 = phi float [ %815, %870 ], [ %875, %934 ], [ %875, %930 ]
  %943 = phi i1 [ false, %870 ], [ true, %934 ], [ true, %930 ]
  %944 = phi float [ %811, %870 ], [ %874, %934 ], [ %874, %930 ]
  %945 = phi float [ %872, %870 ], [ %931, %934 ], [ %931, %930 ]
  %946 = load float, float* %387, align 4
  %947 = fcmp ogt float %945, %946
  br i1 %947, label %948, label %1155

948:                                              ; preds = %941
  %949 = icmp ult i32 %792, 3
  br i1 %949, label %1154, label %950

950:                                              ; preds = %948
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %388) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %388, i8 -86, i64 48, i1 false) #19
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %389) #19
  %951 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %952 = icmp eq %"class.WTF::StringImpl"* %951, null
  br i1 %952, label %967, label %953

953:                                              ; preds = %950
  store i32 %792, i32* %390, align 8
  store %"class.WTF::StringImpl"* %951, %"class.WTF::StringImpl"** %391, align 8
  %954 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %951, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %955 = load atomic i32, i32* %954 monotonic, align 4
  %956 = and i32 %955, 1
  %957 = icmp eq i32 %956, 0
  %958 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %951, i64 1
  br i1 %957, label %963, label %959

959:                                              ; preds = %953
  %960 = bitcast %"class.WTF::StringImpl"* %958 to i8*
  %961 = zext i32 %510 to i64
  %962 = getelementptr inbounds i8, i8* %960, i64 %961
  store i8* %962, i8** %392, align 8
  br label %969

963:                                              ; preds = %953
  %964 = bitcast %"class.WTF::StringImpl"* %958 to i16*
  %965 = zext i32 %510 to i64
  %966 = getelementptr inbounds i16, i16* %964, i64 %965
  store i16* %966, i16** %393, align 8
  br label %969

967:                                              ; preds = %950
  store i32 0, i32* %390, align 8
  store i8* null, i8** %392, align 8
  %968 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %968, i64* %394, align 8
  br label %969

969:                                              ; preds = %967, %963, %959
  %970 = load void (%"class.WTF::Vector.3414"*, %"class.blink::Hyphenation"*, %"class.WTF::StringView"*)**, void (%"class.WTF::Vector.3414"*, %"class.blink::Hyphenation"*, %"class.WTF::StringView"*)*** %395, align 8
  %971 = getelementptr inbounds void (%"class.WTF::Vector.3414"*, %"class.blink::Hyphenation"*, %"class.WTF::StringView"*)*, void (%"class.WTF::Vector.3414"*, %"class.blink::Hyphenation"*, %"class.WTF::StringView"*)** %970, i64 4
  %972 = load void (%"class.WTF::Vector.3414"*, %"class.blink::Hyphenation"*, %"class.WTF::StringView"*)*, void (%"class.WTF::Vector.3414"*, %"class.blink::Hyphenation"*, %"class.WTF::StringView"*)** %971, align 8
  call void %972(%"class.WTF::Vector.3414"* nonnull sret %13, %"class.blink::Hyphenation"* %202, %"class.WTF::StringView"* nonnull dereferenceable(24) %14) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %389) #19
  %973 = load i32, i32* %396, align 4
  %974 = icmp eq i32 %973, 0
  br i1 %974, label %1020, label %975, !prof !32

975:                                              ; preds = %969
  %976 = call i32 @_ZNK5blink15FontDescription29MinimumPrefixWidthToHyphenateEv(%"class.blink::FontDescription"* %397) #19
  %977 = sitofp i32 %976 to float
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %398) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %398, i8 -86, i64 16, i1 false) #19
  store float 0xFFFFFFFFE0000000, float* %399, align 8
  store float 0xFFFFFFFFE0000000, float* %400, align 4
  store i16 -21846, i16* %401, align 8
  store i8 -86, i8* %402, align 2
  store i8 -86, i8* %403, align 1
  store float 0xFFFFFFFFE0000000, float* %404, align 4
  store i64 -6148914691236517206, i64* %406, align 4
  call void @_ZN5blink16ConstructTextRunERKNS_4FontEPKNS_10LayoutTextEjjRKNS_13ComputedStyleENS_13TextDirectionE(%"class.blink::TextRun"* nonnull sret %15, %"class.blink::Font"* dereferenceable(88) %62, %"class.blink::LayoutText"* %0, i32 %510, i32 %792, %"class.blink::ComputedStyle"* dereferenceable(104) %57, i8 zeroext %566) #19
  %978 = load i32*, i32** %407, align 8
  %979 = load i32, i32* %396, align 4
  %980 = zext i32 %979 to i64
  %981 = getelementptr inbounds i32, i32* %978, i64 %980
  %982 = icmp eq i32 %979, 0
  br i1 %982, label %1008, label %983

983:                                              ; preds = %975, %1001
  %984 = phi float [ %1002, %1001 ], [ 0.000000e+00, %975 ]
  %985 = phi i32 [ %1003, %1001 ], [ 0, %975 ]
  %986 = phi float [ %1004, %1001 ], [ 0.000000e+00, %975 ]
  %987 = phi i32* [ %1006, %1001 ], [ %978, %975 ]
  %988 = phi i32 [ %1005, %1001 ], [ %792, %975 ]
  %989 = load i32, i32* %987, align 4
  %990 = call { <2 x float>, <2 x float> } @_ZNK5blink4Font17GetCharacterRangeERKNS_7TextRunEjj(%"class.blink::Font"* %62, %"class.blink::TextRun"* nonnull dereferenceable(40) %15, i32 %989, i32 %988) #19
  %991 = extractvalue { <2 x float>, <2 x float> } %990, 0
  %992 = extractelement <2 x float> %991, i32 1
  %993 = extractelement <2 x float> %991, i32 0
  %994 = fsub float %992, %993
  %995 = fcmp ugt float %994, %977
  br i1 %995, label %996, label %1001

996:                                              ; preds = %983
  %997 = bitcast float %994 to i32
  %998 = fcmp olt float %986, %994
  %999 = select i1 %998, i32 %997, i32 %985
  %1000 = bitcast i32 %999 to float
  br label %1001

1001:                                             ; preds = %996, %983
  %1002 = phi float [ %1000, %996 ], [ %984, %983 ]
  %1003 = phi i32 [ %999, %996 ], [ %985, %983 ]
  %1004 = phi float [ %1000, %996 ], [ %986, %983 ]
  %1005 = phi i32 [ %989, %996 ], [ %988, %983 ]
  %1006 = getelementptr inbounds i32, i32* %987, i64 1
  %1007 = icmp eq i32* %1006, %981
  br i1 %1007, label %1008, label %983

1008:                                             ; preds = %1001, %975
  %1009 = phi float [ 0.000000e+00, %975 ], [ %1002, %1001 ]
  %1010 = call dereferenceable(4) i32* @_ZN3WTF6VectorIjLj8ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3414"* nonnull %13, i32 0) #19
  %1011 = load i32, i32* %1010, align 4
  %1012 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %56, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %408) #19
  %1013 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink13ComputedStyle12HyphenStringEv(%"class.blink::ComputedStyle"* %1012) #19
  %1014 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1013, i64 0, i32 0
  call void @_ZN5blink16ConstructTextRunERKNS_4FontERKN3WTF6StringERKNS_13ComputedStyleENS_13TextDirectionEj(%"class.blink::TextRun"* nonnull sret %12, %"class.blink::Font"* dereferenceable(88) %62, %"class.WTF::String"* dereferenceable(8) %1014, %"class.blink::ComputedStyle"* dereferenceable(104) %1012, i8 zeroext %566, i32 0) #19
  %1015 = call float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"* %62, %"class.blink::TextRun"* nonnull dereferenceable(40) %12, %"class.WTF::HashSet.3131"* null, %"class.blink::FloatRect"* null) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %408) #19
  %1016 = fadd float %1009, %1015
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %398) #19
  %1017 = load i32, i32* %396, align 4
  %1018 = icmp eq i32 %1017, 0
  br i1 %1018, label %1020, label %1019, !prof !3

1019:                                             ; preds = %1008
  store i32 0, i32* %396, align 4
  br label %1020

1020:                                             ; preds = %1019, %1008, %969
  %1021 = phi i32 [ 0, %969 ], [ %1011, %1008 ], [ %1011, %1019 ]
  %1022 = phi float [ 0.000000e+00, %969 ], [ %1016, %1008 ], [ %1016, %1019 ]
  %1023 = load i32*, i32** %407, align 8
  %1024 = icmp eq i32* %1023, %410
  br i1 %1024, label %1026, label %1025, !prof !4

1025:                                             ; preds = %1020
  call void @_ZN3WTF12VectorBufferIjLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPj(%"class.WTF::VectorBuffer.3415"* nonnull %411, i32* %1023) #19
  br label %1026

1026:                                             ; preds = %1020, %1025
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %388) #19
  %1027 = icmp eq i32 %1021, 0
  br i1 %1027, label %1154, label %1028

1028:                                             ; preds = %1026
  %1029 = add nsw i32 %1021, %510
  %1030 = sub nsw i32 %792, %1021
  br i1 %943, label %1090, label %1031

1031:                                             ; preds = %1028
  %1032 = add nsw i32 %1030, 1
  %1033 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %56, align 8
  %1034 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1033, i64 0, i32 0, i32 1, i32 0, i32 0
  %1035 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %1034, align 8
  %1036 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %1035, i64 0, i32 23
  %1037 = bitcast [5 x i8]* %1036 to i40*
  %1038 = load i40, i40* %1037, align 8
  %1039 = and i40 %1038, 4294967296
  %1040 = icmp eq i40 %1039, 0
  br i1 %1040, label %1052, label %1041

1041:                                             ; preds = %1031
  %1042 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %329, align 8
  %1043 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %1042, i64 81
  %1044 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %1043, align 8
  %1045 = call zeroext i1 %1044(%"class.blink::LayoutObject"* %38) #19
  br i1 %1045, label %1046, label %1052

1046:                                             ; preds = %1041
  %1047 = load i8, i8* %331, align 8
  %1048 = and i8 %1047, 1
  %1049 = icmp eq i8 %1048, 0
  br i1 %1049, label %1052, label %1050

1050:                                             ; preds = %1046
  %1051 = load float, float* %332, align 4
  br label %1087

1052:                                             ; preds = %1046, %1041, %1031
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %412) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %412, i8 -86, i64 16, i1 false) #19
  store float 0xFFFFFFFFE0000000, float* %414, align 8
  store float 0xFFFFFFFFE0000000, float* %415, align 4
  store i16 -21846, i16* %416, align 8
  store i8 -86, i8* %417, align 2
  store i8 -86, i8* %418, align 1
  store float 0xFFFFFFFFE0000000, float* %419, align 4
  store i64 -6148914691236517206, i64* %421, align 4
  %1053 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %56, align 8
  call void @_ZN5blink16ConstructTextRunERKNS_4FontEPKNS_10LayoutTextEjjRKNS_13ComputedStyleENS_13TextDirectionE(%"class.blink::TextRun"* nonnull sret %16, %"class.blink::Font"* dereferenceable(88) %62, %"class.blink::LayoutText"* %0, i32 %1029, i32 %1032, %"class.blink::ComputedStyle"* dereferenceable(104) %1053, i8 zeroext %566) #19
  %1054 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %1055 = icmp eq %"class.WTF::StringImpl"* %1054, null
  br i1 %1055, label %1059, label %1056

1056:                                             ; preds = %1052
  %1057 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1054, i64 0, i32 1
  %1058 = load i32, i32* %1057, align 4
  br label %1059

1059:                                             ; preds = %1056, %1052
  %1060 = phi i32 [ %1058, %1056 ], [ 0, %1052 ]
  %1061 = sub i32 %1060, %1029
  store i32 %1061, i32* %413, align 8
  %1062 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %56, align 8
  %1063 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1062, i64 0, i32 0, i32 9
  %1064 = bitcast [20 x i8]* %1063 to i160*
  %1065 = load i160, i160* %1064, align 8
  %1066 = and i160 %1065, 286720
  %1067 = icmp ne i160 %1066, 0
  %1068 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1062, i64 0, i32 0, i32 1, i32 0, i32 0
  %1069 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %1068, align 8
  %1070 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %1069, i64 0, i32 15
  %1071 = bitcast %"struct.blink::TabSize"* %1070 to i64*
  %1072 = load i64, i64* %1071, align 4
  %1073 = zext i1 %1067 to i16
  %1074 = load i16, i16* %416, align 8
  %1075 = shl nuw nsw i16 %1073, 3
  %1076 = and i16 %1074, -9
  %1077 = or i16 %1076, %1075
  store i16 %1077, i16* %416, align 8
  %1078 = trunc i64 %1072 to i40
  store i40 %1078, i40* %423, align 4
  %1079 = fadd float %509, %942
  store float %1079, float* %414, align 8
  store float 0.000000e+00, float* %415, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %424) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %424, i8 0, i64 16, i1 false) #19
  %1080 = call float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"* %62, %"class.blink::TextRun"* nonnull dereferenceable(40) %16, %"class.WTF::HashSet.3131"* %2, %"class.blink::FloatRect"* %427) #19
  br i1 %348, label %1081, label %1086

1081:                                             ; preds = %1059
  %1082 = load float, float* %425, align 4
  %1083 = fadd float %942, %1082
  store float %1083, float* %425, align 4
  %1084 = load float, float* %426, align 4
  %1085 = fadd float %1084, 0.000000e+00
  store float %1085, float* %426, align 4
  call void @_ZN5blink9FloatRect5UniteERKS0_(%"class.blink::FloatRect"* nonnull %3, %"class.blink::FloatRect"* nonnull dereferenceable(16) %17) #19
  br label %1086

1086:                                             ; preds = %1081, %1059
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %424) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %412) #19
  br label %1087

1087:                                             ; preds = %1050, %1086
  %1088 = phi float [ %1080, %1086 ], [ %1051, %1050 ]
  %1089 = fsub float %1088, %944
  br label %1145

1090:                                             ; preds = %1028
  %1091 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %56, align 8
  %1092 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1091, i64 0, i32 0, i32 1, i32 0, i32 0
  %1093 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %1092, align 8
  %1094 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %1093, i64 0, i32 23
  %1095 = bitcast [5 x i8]* %1094 to i40*
  %1096 = load i40, i40* %1095, align 8
  %1097 = and i40 %1096, 4294967296
  %1098 = icmp eq i40 %1097, 0
  br i1 %1098, label %1110, label %1099

1099:                                             ; preds = %1090
  %1100 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %329, align 8
  %1101 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %1100, i64 81
  %1102 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %1101, align 8
  %1103 = call zeroext i1 %1102(%"class.blink::LayoutObject"* %38) #19
  br i1 %1103, label %1104, label %1110

1104:                                             ; preds = %1099
  %1105 = load i8, i8* %331, align 8
  %1106 = and i8 %1105, 1
  %1107 = icmp eq i8 %1106, 0
  br i1 %1107, label %1110, label %1108

1108:                                             ; preds = %1104
  %1109 = load float, float* %332, align 4
  br label %1145

1110:                                             ; preds = %1104, %1099, %1090
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %428) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %428, i8 -86, i64 16, i1 false) #19
  store float 0xFFFFFFFFE0000000, float* %430, align 8
  store float 0xFFFFFFFFE0000000, float* %431, align 4
  store i16 -21846, i16* %432, align 8
  store i8 -86, i8* %433, align 2
  store i8 -86, i8* %434, align 1
  store float 0xFFFFFFFFE0000000, float* %435, align 4
  store i64 -6148914691236517206, i64* %437, align 4
  %1111 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %56, align 8
  call void @_ZN5blink16ConstructTextRunERKNS_4FontEPKNS_10LayoutTextEjjRKNS_13ComputedStyleENS_13TextDirectionE(%"class.blink::TextRun"* nonnull sret %19, %"class.blink::Font"* dereferenceable(88) %62, %"class.blink::LayoutText"* %0, i32 %1029, i32 %1030, %"class.blink::ComputedStyle"* dereferenceable(104) %1111, i8 zeroext %566) #19
  %1112 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %1113 = icmp eq %"class.WTF::StringImpl"* %1112, null
  br i1 %1113, label %1117, label %1114

1114:                                             ; preds = %1110
  %1115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1112, i64 0, i32 1
  %1116 = load i32, i32* %1115, align 4
  br label %1117

1117:                                             ; preds = %1114, %1110
  %1118 = phi i32 [ %1116, %1114 ], [ 0, %1110 ]
  %1119 = sub i32 %1118, %1029
  store i32 %1119, i32* %429, align 8
  %1120 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %56, align 8
  %1121 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1120, i64 0, i32 0, i32 9
  %1122 = bitcast [20 x i8]* %1121 to i160*
  %1123 = load i160, i160* %1122, align 8
  %1124 = and i160 %1123, 286720
  %1125 = icmp ne i160 %1124, 0
  %1126 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1120, i64 0, i32 0, i32 1, i32 0, i32 0
  %1127 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %1126, align 8
  %1128 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %1127, i64 0, i32 15
  %1129 = bitcast %"struct.blink::TabSize"* %1128 to i64*
  %1130 = load i64, i64* %1129, align 4
  %1131 = zext i1 %1125 to i16
  %1132 = load i16, i16* %432, align 8
  %1133 = shl nuw nsw i16 %1131, 3
  %1134 = and i16 %1132, -9
  %1135 = or i16 %1134, %1133
  store i16 %1135, i16* %432, align 8
  %1136 = trunc i64 %1130 to i40
  store i40 %1136, i40* %439, align 4
  %1137 = fadd float %509, %942
  store float %1137, float* %430, align 8
  store float 0.000000e+00, float* %431, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %440) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %440, i8 0, i64 16, i1 false) #19
  %1138 = call float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"* %62, %"class.blink::TextRun"* nonnull dereferenceable(40) %19, %"class.WTF::HashSet.3131"* %2, %"class.blink::FloatRect"* %443) #19
  br i1 %348, label %1139, label %1144

1139:                                             ; preds = %1117
  %1140 = load float, float* %441, align 4
  %1141 = fadd float %942, %1140
  store float %1141, float* %441, align 4
  %1142 = load float, float* %442, align 4
  %1143 = fadd float %1142, 0.000000e+00
  store float %1143, float* %442, align 4
  call void @_ZN5blink9FloatRect5UniteERKS0_(%"class.blink::FloatRect"* nonnull %3, %"class.blink::FloatRect"* nonnull dereferenceable(16) %20) #19
  br label %1144

1144:                                             ; preds = %1139, %1117
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %440) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %428) #19
  br label %1145

1145:                                             ; preds = %1144, %1108, %1087
  %1146 = phi float [ %1089, %1087 ], [ %1138, %1144 ], [ %1109, %1108 ]
  %1147 = fcmp olt float %1022, %1146
  %1148 = select i1 %1147, float %1146, float %1022
  %1149 = fsub float %1148, %945
  %1150 = load float, float* %386, align 4
  %1151 = fadd float %1150, %1149
  store float %1151, float* %386, align 4
  %1152 = fcmp olt float %946, %1148
  %1153 = select i1 %1152, float %1148, float %946
  store float %1153, float* %496, align 4
  br label %1155

1154:                                             ; preds = %948, %1026
  store float %945, float* %387, align 4
  br label %1155

1155:                                             ; preds = %1145, %1154, %941
  br i1 %444, label %1317, label %1156

1156:                                             ; preds = %1155
  %1157 = load i16, i16* %52, align 8
  %1158 = or i16 %1157, 1
  store i16 %1158, i16* %52, align 8
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %445) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %445, i8 -86, i64 64, i1 false) #19
  %1159 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %1160 = icmp eq %"class.WTF::StringImpl"* %1159, null
  br i1 %1160, label %1178, label %1161

1161:                                             ; preds = %1156
  %1162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1159, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1163 = load atomic i32, i32* %1162 monotonic, align 4
  %1164 = and i32 %1163, 2
  %1165 = icmp eq i32 %1164, 0
  br i1 %1165, label %1166, label %1180

1166:                                             ; preds = %1161
  %1167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1159, i64 0, i32 0
  %1168 = load i32, i32* %1167, align 4
  %1169 = zext i32 %1168 to i33
  %1170 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1169, i33 1) #19
  %1171 = extractvalue { i33, i1 } %1170, 1
  %1172 = extractvalue { i33, i1 } %1170, 0
  %1173 = icmp slt i33 %1172, 0
  %1174 = or i1 %1171, %1173
  br i1 %1174, label %1175, label %1176, !prof !3

1175:                                             ; preds = %1166
  call void @llvm.trap() #19
  unreachable

1176:                                             ; preds = %1166
  %1177 = trunc i33 %1172 to i32
  store i32 %1177, i32* %1167, align 4
  br label %1180

1178:                                             ; preds = %1156
  %1179 = call %"class.WTF::StringImpl"* @_ZNK5blink13ComputedStyle26LocaleForLineBreakIteratorEv(%"class.blink::ComputedStyle"* %57) #19
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %446, align 8
  br label %1197

1180:                                             ; preds = %1176, %1161
  %1181 = call %"class.WTF::StringImpl"* @_ZNK5blink13ComputedStyle26LocaleForLineBreakIteratorEv(%"class.blink::ComputedStyle"* %57) #19
  store %"class.WTF::StringImpl"* %1159, %"class.WTF::StringImpl"** %446, align 8
  %1182 = load atomic i32, i32* %1162 monotonic, align 4
  %1183 = and i32 %1182, 2
  %1184 = icmp eq i32 %1183, 0
  br i1 %1184, label %1185, label %1197

1185:                                             ; preds = %1180
  %1186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1159, i64 0, i32 0
  %1187 = load i32, i32* %1186, align 4
  %1188 = zext i32 %1187 to i33
  %1189 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1188, i33 1) #19
  %1190 = extractvalue { i33, i1 } %1189, 1
  %1191 = extractvalue { i33, i1 } %1189, 0
  %1192 = icmp slt i33 %1191, 0
  %1193 = or i1 %1190, %1192
  br i1 %1193, label %1194, label %1195, !prof !3

1194:                                             ; preds = %1185
  call void @llvm.trap() #19
  unreachable

1195:                                             ; preds = %1185
  %1196 = trunc i33 %1191 to i32
  store i32 %1196, i32* %1186, align 4
  br label %1197

1197:                                             ; preds = %1195, %1180, %1178
  %1198 = phi %"class.WTF::StringImpl"* [ %1181, %1195 ], [ %1181, %1180 ], [ %1179, %1178 ]
  store %"class.WTF::StringImpl"* %1198, %"class.WTF::StringImpl"** %447, align 8
  %1199 = icmp eq %"class.WTF::StringImpl"* %1198, null
  br i1 %1199, label %1217, label %1200

1200:                                             ; preds = %1197
  %1201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1198, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1202 = load atomic i32, i32* %1201 monotonic, align 4
  %1203 = and i32 %1202, 2
  %1204 = icmp eq i32 %1203, 0
  br i1 %1204, label %1205, label %1217

1205:                                             ; preds = %1200
  %1206 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1198, i64 0, i32 0
  %1207 = load i32, i32* %1206, align 4
  %1208 = zext i32 %1207 to i33
  %1209 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1208, i33 1) #19
  %1210 = extractvalue { i33, i1 } %1209, 1
  %1211 = extractvalue { i33, i1 } %1209, 0
  %1212 = icmp slt i33 %1211, 0
  %1213 = or i1 %1210, %1212
  br i1 %1213, label %1214, label %1215, !prof !3

1214:                                             ; preds = %1205
  call void @llvm.trap() #19
  unreachable

1215:                                             ; preds = %1205
  %1216 = trunc i33 %1211 to i32
  store i32 %1216, i32* %1206, align 4
  br label %1217

1217:                                             ; preds = %1215, %1200, %1197
  store %"class.icu_69::BreakIterator"* null, %"class.icu_69::BreakIterator"** %448, align 8
  store i16* null, i16** %449, align 8
  store i32 0, i32* %450, align 8
  store i32 0, i32* %451, align 8
  store i32 0, i32* %452, align 4
  store i32 0, i32* %453, align 8
  store i16 0, i16* %454, align 8
  store i16 0, i16* %455, align 2
  br i1 %1160, label %1231, label %1218

1218:                                             ; preds = %1217
  %1219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1159, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1220 = load atomic i32, i32* %1219 monotonic, align 4
  %1221 = and i32 %1220, 2
  %1222 = icmp eq i32 %1221, 0
  %1223 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1159, i64 0, i32 0
  %1224 = load i32, i32* %1223, align 4
  br i1 %1222, label %1225, label %1227

1225:                                             ; preds = %1218
  %1226 = add i32 %1224, -1
  store i32 %1226, i32* %1223, align 4
  br label %1227

1227:                                             ; preds = %1225, %1218
  %1228 = phi i32 [ %1226, %1225 ], [ %1224, %1218 ]
  %1229 = icmp eq i32 %1228, 0
  br i1 %1229, label %1230, label %1231

1230:                                             ; preds = %1227
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1159) #19
  br label %1231

1231:                                             ; preds = %1230, %1227, %1217
  br i1 %1199, label %1245, label %1232

1232:                                             ; preds = %1231
  %1233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1198, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1234 = load atomic i32, i32* %1233 monotonic, align 4
  %1235 = and i32 %1234, 2
  %1236 = icmp eq i32 %1235, 0
  %1237 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1198, i64 0, i32 0
  %1238 = load i32, i32* %1237, align 4
  br i1 %1236, label %1239, label %1241

1239:                                             ; preds = %1232
  %1240 = add i32 %1238, -1
  store i32 %1240, i32* %1237, align 4
  br label %1241

1241:                                             ; preds = %1239, %1232
  %1242 = phi i32 [ %1240, %1239 ], [ %1238, %1232 ]
  %1243 = icmp eq i32 %1242, 0
  br i1 %1243, label %1244, label %1245

1244:                                             ; preds = %1241
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1198) #19
  br label %1245

1245:                                             ; preds = %1244, %1241, %1231
  %1246 = icmp sgt i32 %792, 0
  br i1 %1246, label %1284, label %1247

1247:                                             ; preds = %1309, %1245
  %1248 = phi float [ 0x47EFFFFFE0000000, %1245 ], [ %1313, %1309 ]
  %1249 = load %"class.icu_69::BreakIterator"*, %"class.icu_69::BreakIterator"** %448, align 8
  %1250 = icmp eq %"class.icu_69::BreakIterator"* %1249, null
  br i1 %1250, label %1252, label %1251

1251:                                             ; preds = %1247
  call void @_ZN5blink24ReleaseLineBreakIteratorEPN6icu_6913BreakIteratorE(%"class.icu_69::BreakIterator"* nonnull %1249) #19
  br label %1252

1252:                                             ; preds = %1251, %1247
  %1253 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %447, align 8
  %1254 = icmp eq %"class.WTF::StringImpl"* %1253, null
  br i1 %1254, label %1268, label %1255

1255:                                             ; preds = %1252
  %1256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1253, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1257 = load atomic i32, i32* %1256 monotonic, align 4
  %1258 = and i32 %1257, 2
  %1259 = icmp eq i32 %1258, 0
  %1260 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1253, i64 0, i32 0
  %1261 = load i32, i32* %1260, align 4
  br i1 %1259, label %1262, label %1264

1262:                                             ; preds = %1255
  %1263 = add i32 %1261, -1
  store i32 %1263, i32* %1260, align 4
  br label %1264

1264:                                             ; preds = %1262, %1255
  %1265 = phi i32 [ %1263, %1262 ], [ %1261, %1255 ]
  %1266 = icmp eq i32 %1265, 0
  br i1 %1266, label %1267, label %1268

1267:                                             ; preds = %1264
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1253) #19
  br label %1268

1268:                                             ; preds = %1267, %1264, %1252
  %1269 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %446, align 8
  %1270 = icmp eq %"class.WTF::StringImpl"* %1269, null
  br i1 %1270, label %1316, label %1271

1271:                                             ; preds = %1268
  %1272 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1269, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1273 = load atomic i32, i32* %1272 monotonic, align 4
  %1274 = and i32 %1273, 2
  %1275 = icmp eq i32 %1274, 0
  %1276 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1269, i64 0, i32 0
  %1277 = load i32, i32* %1276, align 4
  br i1 %1275, label %1278, label %1280

1278:                                             ; preds = %1271
  %1279 = add i32 %1277, -1
  store i32 %1279, i32* %1276, align 4
  br label %1280

1280:                                             ; preds = %1278, %1271
  %1281 = phi i32 [ %1279, %1278 ], [ %1277, %1271 ]
  %1282 = icmp eq i32 %1281, 0
  br i1 %1282, label %1283, label %1316

1283:                                             ; preds = %1280
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1269) #19
  br label %1316

1284:                                             ; preds = %1245, %1309
  %1285 = phi float [ %1313, %1309 ], [ 0x47EFFFFFE0000000, %1245 ]
  %1286 = phi i32 [ %1314, %1309 ], [ %510, %1245 ]
  %1287 = phi i32 [ %1293, %1309 ], [ -1, %1245 ]
  %1288 = icmp sgt i32 %1287, %1286
  br i1 %1288, label %1292, label %1289

1289:                                             ; preds = %1284
  %1290 = add nsw i32 %1286, 1
  %1291 = call i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionEiNS_13LineBreakTypeE(%"class.blink::LazyLineBreakIterator"* nonnull %21, i32 %1290, i32 %457) #19
  br label %1292

1292:                                             ; preds = %1289, %1284
  %1293 = phi i32 [ %1291, %1289 ], [ %1287, %1284 ]
  %1294 = icmp sgt i32 %1293, %1286
  %1295 = select i1 %1294, i32 %1293, i32 %792
  %1296 = sub nsw i32 %1295, %1286
  %1297 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %1298 = icmp eq %"class.WTF::StringImpl"* %1297, null
  br i1 %1298, label %1302, label %1299

1299:                                             ; preds = %1292
  %1300 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1297, i64 0, i32 1
  %1301 = load i32, i32* %1300, align 4
  br label %1302

1302:                                             ; preds = %1299, %1292
  %1303 = phi i32 [ %1301, %1299 ], [ 0, %1292 ]
  %1304 = icmp sgt i32 %1295, %1303
  br i1 %1304, label %1305, label %1309

1305:                                             ; preds = %1302
  %1306 = sub nsw i32 %1303, %1286
  %1307 = icmp sgt i32 %1306, 0
  %1308 = select i1 %1307, i32 %1306, i32 0
  br label %1309

1309:                                             ; preds = %1305, %1302
  %1310 = phi i32 [ %1308, %1305 ], [ %1296, %1302 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %458) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %458, i8 -86, i64 16, i1 false) #19
  store float 0xFFFFFFFFE0000000, float* %459, align 8
  store float 0xFFFFFFFFE0000000, float* %460, align 4
  store i16 -21846, i16* %461, align 8
  store i8 -86, i8* %462, align 2
  store i8 -86, i8* %463, align 1
  store float 0xFFFFFFFFE0000000, float* %464, align 4
  store i64 -6148914691236517206, i64* %466, align 4
  call void @_ZN5blink16ConstructTextRunERKNS_4FontEPKNS_10LayoutTextEjjRKNS_13ComputedStyleENS_13TextDirectionE(%"class.blink::TextRun"* nonnull sret %22, %"class.blink::Font"* dereferenceable(88) %62, %"class.blink::LayoutText"* %0, i32 %1286, i32 %1310, %"class.blink::ComputedStyle"* dereferenceable(104) %57, i8 zeroext %566) #19
  %1311 = call float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"* %62, %"class.blink::TextRun"* nonnull dereferenceable(40) %22, %"class.WTF::HashSet.3131"* null, %"class.blink::FloatRect"* null) #19
  %1312 = fcmp olt float %1311, %1285
  %1313 = select i1 %1312, float %1311, float %1285
  %1314 = add nsw i32 %1310, %1286
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %458) #19
  %1315 = icmp slt i32 %1314, %791
  br i1 %1315, label %1284, label %1247

1316:                                             ; preds = %1268, %1280, %1283
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %445) #19
  br label %1320

1317:                                             ; preds = %1155
  %1318 = load float, float* %386, align 4
  %1319 = fadd float %945, %1318
  br label %1320

1320:                                             ; preds = %1317, %1316
  %1321 = phi float [ %1319, %1317 ], [ %1248, %1316 ]
  store float %1321, float* %386, align 4
  %1322 = icmp eq i32 %510, %513
  br i1 %1322, label %1379, label %1323

1323:                                             ; preds = %1320
  %1324 = sub nsw i32 %791, %513
  %1325 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %56, align 8
  %1326 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1325, i64 0, i32 0, i32 1, i32 0, i32 0
  %1327 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %1326, align 8
  %1328 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %1327, i64 0, i32 23
  %1329 = bitcast [5 x i8]* %1328 to i40*
  %1330 = load i40, i40* %1329, align 8
  %1331 = and i40 %1330, 4294967296
  %1332 = icmp eq i40 %1331, 0
  br i1 %1332, label %1344, label %1333

1333:                                             ; preds = %1323
  %1334 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %329, align 8
  %1335 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %1334, i64 81
  %1336 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %1335, align 8
  %1337 = call zeroext i1 %1336(%"class.blink::LayoutObject"* %38) #19
  br i1 %1337, label %1338, label %1344

1338:                                             ; preds = %1333
  %1339 = load i8, i8* %331, align 8
  %1340 = and i8 %1339, 1
  %1341 = icmp eq i8 %1340, 0
  br i1 %1341, label %1344, label %1342

1342:                                             ; preds = %1338
  %1343 = load float, float* %332, align 4
  br label %1379

1344:                                             ; preds = %1338, %1333, %1323
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %467) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %467, i8 -86, i64 16, i1 false) #19
  store float 0xFFFFFFFFE0000000, float* %469, align 8
  store float 0xFFFFFFFFE0000000, float* %470, align 4
  store i16 -21846, i16* %471, align 8
  store i8 -86, i8* %472, align 2
  store i8 -86, i8* %473, align 1
  store float 0xFFFFFFFFE0000000, float* %474, align 4
  store i64 -6148914691236517206, i64* %476, align 4
  %1345 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %56, align 8
  call void @_ZN5blink16ConstructTextRunERKNS_4FontEPKNS_10LayoutTextEjjRKNS_13ComputedStyleENS_13TextDirectionE(%"class.blink::TextRun"* nonnull sret %23, %"class.blink::Font"* dereferenceable(88) %62, %"class.blink::LayoutText"* %0, i32 %513, i32 %1324, %"class.blink::ComputedStyle"* dereferenceable(104) %1345, i8 zeroext %566) #19
  %1346 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %1347 = icmp eq %"class.WTF::StringImpl"* %1346, null
  br i1 %1347, label %1351, label %1348

1348:                                             ; preds = %1344
  %1349 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1346, i64 0, i32 1
  %1350 = load i32, i32* %1349, align 4
  br label %1351

1351:                                             ; preds = %1348, %1344
  %1352 = phi i32 [ %1350, %1348 ], [ 0, %1344 ]
  %1353 = sub i32 %1352, %513
  store i32 %1353, i32* %468, align 8
  %1354 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %56, align 8
  %1355 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1354, i64 0, i32 0, i32 9
  %1356 = bitcast [20 x i8]* %1355 to i160*
  %1357 = load i160, i160* %1356, align 8
  %1358 = and i160 %1357, 286720
  %1359 = icmp ne i160 %1358, 0
  %1360 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1354, i64 0, i32 0, i32 1, i32 0, i32 0
  %1361 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %1360, align 8
  %1362 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %1361, i64 0, i32 15
  %1363 = bitcast %"struct.blink::TabSize"* %1362 to i64*
  %1364 = load i64, i64* %1363, align 4
  %1365 = zext i1 %1359 to i16
  %1366 = load i16, i16* %471, align 8
  %1367 = shl nuw nsw i16 %1365, 3
  %1368 = and i16 %1366, -9
  %1369 = or i16 %1368, %1367
  store i16 %1369, i16* %471, align 8
  %1370 = trunc i64 %1364 to i40
  store i40 %1370, i40* %478, align 4
  %1371 = fadd float %509, %942
  store float %1371, float* %469, align 8
  store float 0.000000e+00, float* %470, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %479) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %479, i8 0, i64 16, i1 false) #19
  %1372 = call float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"* %62, %"class.blink::TextRun"* nonnull dereferenceable(40) %23, %"class.WTF::HashSet.3131"* %2, %"class.blink::FloatRect"* %482) #19
  br i1 %348, label %1373, label %1378

1373:                                             ; preds = %1351
  %1374 = load float, float* %480, align 4
  %1375 = fadd float %942, %1374
  store float %1375, float* %480, align 4
  %1376 = load float, float* %481, align 4
  %1377 = fadd float %1376, 0.000000e+00
  store float %1377, float* %481, align 4
  call void @_ZN5blink9FloatRect5UniteERKS0_(%"class.blink::FloatRect"* nonnull %3, %"class.blink::FloatRect"* nonnull dereferenceable(16) %24) #19
  br label %1378

1378:                                             ; preds = %1373, %1351
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %479) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %467) #19
  br label %1379

1379:                                             ; preds = %1378, %1342, %1320
  %1380 = phi float [ %945, %1320 ], [ %1372, %1378 ], [ %1343, %1342 ]
  %1381 = fadd float %1380, %942
  store float %1381, float* %328, align 4
  br i1 %795, label %1382, label %1405

1382:                                             ; preds = %1379
  switch i16 %782, label %1383 [
    i16 32, label %1385
    i16 9, label %1385
    i16 10, label %1389
  ]

1383:                                             ; preds = %1382
  %1384 = load i160, i160* %175, align 8
  br label %1397

1385:                                             ; preds = %1382, %1382
  %1386 = load i160, i160* %175, align 8
  %1387 = and i160 %1386, 286720
  %1388 = icmp eq i160 %1387, 0
  br label %1397

1389:                                             ; preds = %1382
  %1390 = load i160, i160* %175, align 8
  %1391 = lshr i160 %1390, 12
  %1392 = trunc i160 %1391 to i32
  %1393 = and i32 %1392, 127
  %1394 = icmp eq i32 %1393, 1
  %1395 = icmp eq i32 %1393, 16
  %1396 = or i1 %1395, %1394
  br label %1397

1397:                                             ; preds = %1383, %1389, %1385
  %1398 = phi i160 [ %1384, %1383 ], [ %1386, %1385 ], [ %1390, %1389 ]
  %1399 = phi i1 [ false, %1383 ], [ %1388, %1385 ], [ %1396, %1389 ]
  %1400 = and i160 %1398, 73728
  %1401 = icmp eq i160 %1400, 0
  br i1 %1401, label %1402, label %1405

1402:                                             ; preds = %1397
  %1403 = load i16, i16* %52, align 8
  %1404 = or i16 %1403, 1
  store i16 %1404, i16* %52, align 8
  br label %1405

1405:                                             ; preds = %1379, %1402, %1397
  %1406 = phi i1 [ %1399, %1402 ], [ %1399, %1397 ], [ false, %1379 ]
  %1407 = or i1 %797, %1406
  %1408 = and i1 %483, %1407
  br i1 %1408, label %1409, label %1474

1409:                                             ; preds = %1405
  %1410 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %1411 = icmp ugt i32 %114, %791
  br i1 %1411, label %1412, label %1469

1412:                                             ; preds = %1409
  %1413 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1410, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1414 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1410, i64 1
  %1415 = bitcast %"class.WTF::StringImpl"* %1414 to i8*
  %1416 = bitcast %"class.WTF::StringImpl"* %1414 to i16*
  %1417 = zext i32 %791 to i64
  br label %1418

1418:                                             ; preds = %1462, %1412
  %1419 = phi i64 [ %1417, %1412 ], [ %1463, %1462 ]
  %1420 = phi i32 [ %791, %1412 ], [ %1464, %1462 ]
  %1421 = load atomic i32, i32* %1413 monotonic, align 4
  %1422 = and i32 %1421, 1
  %1423 = icmp eq i32 %1422, 0
  br i1 %1423, label %1428, label %1424

1424:                                             ; preds = %1418
  %1425 = getelementptr inbounds i8, i8* %1415, i64 %1419
  %1426 = load i8, i8* %1425, align 1
  %1427 = zext i8 %1426 to i16
  br label %1431

1428:                                             ; preds = %1418
  %1429 = getelementptr inbounds i16, i16* %1416, i64 %1419
  %1430 = load i16, i16* %1429, align 2
  br label %1431

1431:                                             ; preds = %1428, %1424
  %1432 = phi i16 [ %1427, %1424 ], [ %1430, %1428 ]
  %1433 = icmp eq i16 %1432, 10
  br i1 %1433, label %1462, label %1434

1434:                                             ; preds = %1431
  %1435 = load atomic i32, i32* %1413 monotonic, align 4
  %1436 = and i32 %1435, 1
  %1437 = icmp eq i32 %1436, 0
  br i1 %1437, label %1442, label %1438

1438:                                             ; preds = %1434
  %1439 = getelementptr inbounds i8, i8* %1415, i64 %1419
  %1440 = load i8, i8* %1439, align 1
  %1441 = zext i8 %1440 to i16
  br label %1445

1442:                                             ; preds = %1434
  %1443 = getelementptr inbounds i16, i16* %1416, i64 %1419
  %1444 = load i16, i16* %1443, align 2
  br label %1445

1445:                                             ; preds = %1442, %1438
  %1446 = phi i16 [ %1441, %1438 ], [ %1444, %1442 ]
  %1447 = icmp eq i16 %1446, 32
  br i1 %1447, label %1462, label %1448

1448:                                             ; preds = %1445
  %1449 = load atomic i32, i32* %1413 monotonic, align 4
  %1450 = and i32 %1449, 1
  %1451 = icmp eq i32 %1450, 0
  br i1 %1451, label %1456, label %1452

1452:                                             ; preds = %1448
  %1453 = getelementptr inbounds i8, i8* %1415, i64 %1419
  %1454 = load i8, i8* %1453, align 1
  %1455 = zext i8 %1454 to i16
  br label %1459

1456:                                             ; preds = %1448
  %1457 = getelementptr inbounds i16, i16* %1416, i64 %1419
  %1458 = load i16, i16* %1457, align 2
  br label %1459

1459:                                             ; preds = %1456, %1452
  %1460 = phi i16 [ %1455, %1452 ], [ %1458, %1456 ]
  %1461 = icmp eq i16 %1460, 9
  br i1 %1461, label %1462, label %1467

1462:                                             ; preds = %1459, %1445, %1431
  %1463 = add nuw nsw i64 %1419, 1
  %1464 = add nuw i32 %1420, 1
  %1465 = trunc i64 %1463 to i32
  %1466 = icmp eq i32 %114, %1465
  br i1 %1466, label %1469, label %1418

1467:                                             ; preds = %1459
  %1468 = trunc i64 %1419 to i32
  br label %1469

1469:                                             ; preds = %1462, %1409, %1467
  %1470 = phi i32 [ %791, %1409 ], [ %1468, %1467 ], [ %1464, %1462 ]
  %1471 = icmp ult i32 %1470, %114
  br i1 %1471, label %1472, label %1474

1472:                                             ; preds = %1469
  %1473 = fadd float %64, %1381
  store float %1473, float* %328, align 4
  br label %1474

1474:                                             ; preds = %1469, %1472, %1405
  %1475 = and i8 %515, 1
  %1476 = icmp eq i8 %1475, 0
  br i1 %1476, label %1483, label %1477

1477:                                             ; preds = %1474
  br i1 %713, label %1478, label %1481

1478:                                             ; preds = %1477
  %1479 = load i16, i16* %52, align 8
  %1480 = or i16 %1479, 1
  store i16 %1480, i16* %52, align 8
  br label %1481

1481:                                             ; preds = %1478, %1477
  %1482 = select i1 %713, float 0.000000e+00, float %1321
  store float %1482, float* %41, align 8
  br label %1483

1483:                                             ; preds = %1474, %1481
  %1484 = phi i8 [ 0, %1481 ], [ %515, %1474 ]
  store float %1321, float* %42, align 4
  %1485 = load float, float* %39, align 8
  %1486 = fcmp olt float %1485, %1321
  br i1 %1486, label %1487, label %1488

1487:                                             ; preds = %1483
  store float %1321, float* %39, align 8
  br label %1488

1488:                                             ; preds = %1487, %1483
  store i32 0, i32* %25, align 4
  %1489 = add i32 %791, -1
  br label %1557

1490:                                             ; preds = %790
  %1491 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %56, align 8
  %1492 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1491, i64 0, i32 0, i32 9
  %1493 = bitcast [20 x i8]* %1492 to i160*
  %1494 = load i160, i160* %1493, align 8
  %1495 = and i160 %1494, 73728
  %1496 = icmp eq i160 %1495, 0
  %1497 = or i1 %596, %1496
  br i1 %1497, label %1498, label %1501

1498:                                             ; preds = %1490
  %1499 = load i16, i16* %52, align 8
  %1500 = or i16 %1499, 1
  store i16 %1500, i16* %52, align 8
  br label %1501

1501:                                             ; preds = %1490, %1498
  %1502 = load float, float* %386, align 4
  %1503 = load float, float* %39, align 8
  %1504 = fcmp ogt float %1502, %1503
  br i1 %1504, label %1505, label %1506

1505:                                             ; preds = %1501
  store float %1502, float* %39, align 8
  br label %1506

1506:                                             ; preds = %1505, %1501
  store i32 0, i32* %25, align 4
  br i1 %596, label %1507, label %1524

1507:                                             ; preds = %1506
  %1508 = and i8 %514, 1
  %1509 = icmp eq i8 %1508, 0
  br i1 %1509, label %1516, label %1510

1510:                                             ; preds = %1507
  %1511 = load i160, i160* %175, align 8
  %1512 = and i160 %1511, 73728
  %1513 = icmp eq i160 %1512, 0
  br i1 %1513, label %1516, label %1514

1514:                                             ; preds = %1510
  %1515 = load i32, i32* %26, align 4
  store i32 %1515, i32* %495, align 8
  br label %1516

1516:                                             ; preds = %1507, %1510, %1514
  %1517 = phi i8 [ 0, %1510 ], [ 0, %1514 ], [ %514, %1507 ]
  %1518 = phi float [ 0.000000e+00, %1510 ], [ 0.000000e+00, %1514 ], [ %509, %1507 ]
  %1519 = load float, float* %328, align 4
  %1520 = load float, float* %40, align 4
  %1521 = fcmp ogt float %1519, %1520
  br i1 %1521, label %1522, label %1523

1522:                                             ; preds = %1516
  store float %1519, float* %40, align 4
  br label %1523

1523:                                             ; preds = %1522, %1516
  store i32 0, i32* %26, align 4
  br label %1552

1524:                                             ; preds = %1506
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %484) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %497, i8 -86, i64 16, i1 false)
  store float 0xFFFFFFFFE0000000, float* %486, align 8
  store float 0xFFFFFFFFE0000000, float* %487, align 4
  store i16 -21846, i16* %488, align 8
  store i8 -86, i8* %489, align 2
  store i8 -86, i8* %490, align 1
  store float 0xFFFFFFFFE0000000, float* %491, align 4
  store i64 -6148914691236517206, i64* %498, align 4
  call void @_ZN5blink16ConstructTextRunERKNS_4FontEPKNS_10LayoutTextEjjRKNS_13ComputedStyleENS_13TextDirectionE(%"class.blink::TextRun"* nonnull sret %36, %"class.blink::Font"* dereferenceable(88) %62, %"class.blink::LayoutText"* %0, i32 %510, i32 1, %"class.blink::ComputedStyle"* dereferenceable(104) %57, i8 zeroext %566) #19
  %1525 = sub nsw i32 %114, %510
  store i32 %1525, i32* %485, align 8
  %1526 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %56, align 8
  %1527 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1526, i64 0, i32 0, i32 9
  %1528 = bitcast [20 x i8]* %1527 to i160*
  %1529 = load i160, i160* %1528, align 8
  %1530 = and i160 %1529, 286720
  %1531 = icmp ne i160 %1530, 0
  %1532 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1526, i64 0, i32 0, i32 1, i32 0, i32 0
  %1533 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %1532, align 8
  %1534 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %1533, i64 0, i32 15
  %1535 = bitcast %"struct.blink::TabSize"* %1534 to i64*
  %1536 = load i64, i64* %1535, align 4
  %1537 = zext i1 %1531 to i16
  %1538 = load i16, i16* %488, align 8
  %1539 = shl nuw nsw i16 %1537, 3
  %1540 = and i16 %1538, -9
  %1541 = or i16 %1540, %1539
  store i16 %1541, i16* %488, align 8
  %1542 = trunc i64 %1536 to i40
  store i40 %1542, i40* %494, align 4
  %1543 = load float, float* %328, align 4
  %1544 = fadd float %509, %1543
  store float %1544, float* %486, align 8
  %1545 = call float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"* %62, %"class.blink::TextRun"* nonnull dereferenceable(40) %36, %"class.WTF::HashSet.3131"* null, %"class.blink::FloatRect"* null) #19
  %1546 = fadd float %1545, %1543
  store float %1546, float* %328, align 4
  %1547 = xor i1 %567, true
  %1548 = and i1 %607, %1547
  %1549 = xor i1 %636, true
  %1550 = and i1 %1548, %1549
  %1551 = zext i1 %1550 to i8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %484) #19
  br label %1552

1552:                                             ; preds = %1524, %1523
  %1553 = phi i8 [ %518, %1523 ], [ %1551, %1524 ]
  %1554 = phi i8 [ %1517, %1523 ], [ %514, %1524 ]
  %1555 = phi float [ %1518, %1523 ], [ %509, %1524 ]
  %1556 = add nsw i32 %513, 1
  br label %1557

1557:                                             ; preds = %1488, %1552, %703, %641
  %1558 = phi i32 [ %519, %703 ], [ %519, %641 ], [ %781, %1552 ], [ %781, %1488 ]
  %1559 = phi i8 [ %518, %703 ], [ %518, %641 ], [ %1553, %1552 ], [ %518, %1488 ]
  %1560 = phi i8 [ %515, %703 ], [ %515, %641 ], [ %515, %1552 ], [ %1484, %1488 ]
  %1561 = phi i8 [ %514, %703 ], [ %514, %641 ], [ %1554, %1552 ], [ %514, %1488 ]
  %1562 = phi i32 [ %706, %703 ], [ %642, %641 ], [ %1556, %1552 ], [ %791, %1488 ]
  %1563 = phi i32 [ %510, %703 ], [ %510, %641 ], [ %510, %1552 ], [ %1489, %1488 ]
  %1564 = phi float [ %509, %703 ], [ %509, %641 ], [ %1555, %1552 ], [ %509, %1488 ]
  %1565 = add nsw i32 %1563, 1
  %1566 = icmp sgt i32 %114, %1565
  br i1 %1566, label %508, label %499

1567:                                             ; preds = %501
  %1568 = getelementptr inbounds %"class.blink::BidiRunList", %"class.blink::BidiRunList"* %224, i64 0, i32 0
  %1569 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %1568, align 8
  %1570 = icmp eq %"struct.blink::BidiCharacterRun"* %1569, null
  br i1 %1570, label %1578, label %1571

1571:                                             ; preds = %1567, %1571
  %1572 = phi %"struct.blink::BidiCharacterRun"* [ %1574, %1571 ], [ %1569, %1567 ]
  %1573 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %1572, i64 0, i32 2
  %1574 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %1573, align 8
  %1575 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %1572, i64 0, i32 0
  call void @free(i8* %1575) #19
  %1576 = icmp eq %"struct.blink::BidiCharacterRun"* %1574, null
  br i1 %1576, label %1577, label %1571

1577:                                             ; preds = %1571
  call void @llvm.memset.p0i8.i64(i8* align 8 %225, i8 0, i64 28, i1 false) #19
  br label %1578

1578:                                             ; preds = %1577, %1567, %501
  %1579 = and i8 %502, 1
  %1580 = icmp ne i8 %1579, 0
  %1581 = icmp sgt i32 %114, 1
  %1582 = and i1 %1581, %1580
  br i1 %1582, label %1591, label %1583

1583:                                             ; preds = %1578
  %1584 = icmp ne i8 %503, 0
  %1585 = and i8 %504, 1
  %1586 = icmp eq i8 %1585, 0
  %1587 = and i1 %1584, %1586
  br i1 %1587, label %1591, label %1588

1588:                                             ; preds = %1583
  %1589 = load i32, i32* %26, align 4
  %1590 = bitcast i32 %1589 to float
  br label %1596

1591:                                             ; preds = %1583, %1578
  %1592 = bitcast i32* %26 to float*
  %1593 = load float, float* %1592, align 4
  %1594 = fadd float %64, %1593
  store float %1594, float* %1592, align 4
  %1595 = bitcast float %1594 to i32
  br label %1596

1596:                                             ; preds = %1588, %1591
  %1597 = phi float [ %1590, %1588 ], [ %1594, %1591 ]
  %1598 = phi i32 [ %1589, %1588 ], [ %1595, %1591 ]
  %1599 = bitcast i32* %25 to float*
  %1600 = load float, float* %1599, align 4
  %1601 = load float, float* %39, align 4
  %1602 = fcmp olt float %1600, %1601
  %1603 = select i1 %1602, float %1601, float %1600
  store float %1603, float* %39, align 8
  %1604 = load float, float* %40, align 4
  %1605 = fcmp ogt float %1604, %1597
  %1606 = bitcast float %1604 to i32
  %1607 = select i1 %1605, i32 %1606, i32 %1598
  %1608 = bitcast float* %40 to i32*
  store i32 %1607, i32* %1608, align 4
  %1609 = load i160, i160* %175, align 8
  %1610 = and i160 %1609, 73728
  %1611 = icmp eq i160 %1610, 0
  %1612 = bitcast i32 %1607 to float
  br i1 %1611, label %1616, label %1613

1613:                                             ; preds = %1596
  %1614 = bitcast float* %39 to i32*
  store i32 %1607, i32* %1614, align 8
  %1615 = load i160, i160* %175, align 8
  br label %1616

1616:                                             ; preds = %1613, %1596
  %1617 = phi i160 [ %1615, %1613 ], [ %1609, %1596 ]
  %1618 = and i160 %1617, 520192
  %1619 = icmp eq i160 %1618, 8192
  br i1 %1619, label %1620, label %1626

1620:                                             ; preds = %1616
  %1621 = and i8 %505, 1
  %1622 = icmp eq i8 %1621, 0
  br i1 %1622, label %1625, label %1623

1623:                                             ; preds = %1620
  %1624 = bitcast float* %41 to i32*
  store i32 %1607, i32* %1624, align 8
  br label %1625

1625:                                             ; preds = %1620, %1623
  store float %1597, float* %42, align 4
  br label %1626

1626:                                             ; preds = %1625, %1616
  %1627 = bitcast %"struct.blink::GlyphOverflow"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1627) #19
  %1628 = getelementptr inbounds %"struct.blink::GlyphOverflow", %"struct.blink::GlyphOverflow"* %37, i64 0, i32 1
  %1629 = getelementptr inbounds %"struct.blink::GlyphOverflow", %"struct.blink::GlyphOverflow"* %37, i64 0, i32 2
  %1630 = getelementptr inbounds %"struct.blink::GlyphOverflow", %"struct.blink::GlyphOverflow"* %37, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %1627, i8 0, i64 16, i1 false) #19
  call void @_ZN5blink13GlyphOverflow13SetFromBoundsERKNS_9FloatRectERKNS_4FontEf(%"struct.blink::GlyphOverflow"* nonnull %37, %"class.blink::FloatRect"* dereferenceable(16) %3, %"class.blink::Font"* dereferenceable(88) %62, float %1612)
  %1631 = getelementptr inbounds %"class.WTF::HashSet.3131", %"class.WTF::HashSet.3131"* %2, i64 0, i32 0, i32 2
  %1632 = load i32, i32* %1631, align 4
  %1633 = icmp eq i32 %1632, 0
  br i1 %1633, label %1634, label %1653

1634:                                             ; preds = %1626
  %1635 = getelementptr inbounds %"struct.blink::GlyphOverflow", %"struct.blink::GlyphOverflow"* %37, i64 0, i32 0
  %1636 = load float, float* %1635, align 4
  %1637 = call float @llvm.fabs.f32(float %1636) #19
  %1638 = fcmp olt float %1637, 6.250000e-02
  br i1 %1638, label %1639, label %1653

1639:                                             ; preds = %1634
  %1640 = load float, float* %1628, align 4
  %1641 = call float @llvm.fabs.f32(float %1640) #19
  %1642 = fcmp olt float %1641, 6.250000e-02
  br i1 %1642, label %1643, label %1653

1643:                                             ; preds = %1639
  %1644 = load float, float* %1629, align 4
  %1645 = call float @llvm.fabs.f32(float %1644) #19
  %1646 = fcmp olt float %1645, 6.250000e-02
  br i1 %1646, label %1647, label %1653

1647:                                             ; preds = %1643
  %1648 = load float, float* %1630, align 4
  %1649 = call float @llvm.fabs.f32(float %1648) #19
  %1650 = fcmp olt float %1649, 6.250000e-02
  %1651 = zext i1 %1650 to i16
  %1652 = shl nuw nsw i16 %1651, 10
  br label %1653

1653:                                             ; preds = %1647, %1643, %1639, %1634, %1626
  %1654 = phi i16 [ 0, %1626 ], [ 0, %1643 ], [ 0, %1639 ], [ 0, %1634 ], [ %1652, %1647 ]
  %1655 = load i16, i16* %52, align 8
  %1656 = and i16 %1655, -1025
  %1657 = or i16 %1656, %1654
  store i16 %1657, i16* %52, align 8
  call void @_ZN5blink12LayoutObject32ClearIntrinsicLogicalWidthsDirtyEv(%"class.blink::LayoutObject"* %38) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1627) #19
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEED2Ev(%"class.blink::BidiResolver"* nonnull %31) #19
  call void @llvm.lifetime.end.p0i8(i64 368, i8* nonnull %213) #19
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %210)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %173) #19
  %1658 = load %"class.icu_69::BreakIterator"*, %"class.icu_69::BreakIterator"** %137, align 8
  %1659 = icmp eq %"class.icu_69::BreakIterator"* %1658, null
  br i1 %1659, label %1661, label %1660

1660:                                             ; preds = %1653
  call void @_ZN5blink24ReleaseLineBreakIteratorEPN6icu_6913BreakIteratorE(%"class.icu_69::BreakIterator"* nonnull %1658) #19
  br label %1661

1661:                                             ; preds = %1660, %1653
  %1662 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %117, align 8
  %1663 = icmp eq %"class.WTF::StringImpl"* %1662, null
  br i1 %1663, label %1677, label %1664

1664:                                             ; preds = %1661
  %1665 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1662, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1666 = load atomic i32, i32* %1665 monotonic, align 4
  %1667 = and i32 %1666, 2
  %1668 = icmp eq i32 %1667, 0
  %1669 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1662, i64 0, i32 0
  %1670 = load i32, i32* %1669, align 4
  br i1 %1668, label %1671, label %1673

1671:                                             ; preds = %1664
  %1672 = add i32 %1670, -1
  store i32 %1672, i32* %1669, align 4
  br label %1673

1673:                                             ; preds = %1671, %1664
  %1674 = phi i32 [ %1672, %1671 ], [ %1670, %1664 ]
  %1675 = icmp eq i32 %1674, 0
  br i1 %1675, label %1676, label %1677

1676:                                             ; preds = %1673
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1662) #19
  br label %1677

1677:                                             ; preds = %1676, %1673, %1661
  %1678 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %1679 = icmp eq %"class.WTF::StringImpl"* %1678, null
  br i1 %1679, label %1693, label %1680

1680:                                             ; preds = %1677
  %1681 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1678, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1682 = load atomic i32, i32* %1681 monotonic, align 4
  %1683 = and i32 %1682, 2
  %1684 = icmp eq i32 %1683, 0
  %1685 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1678, i64 0, i32 0
  %1686 = load i32, i32* %1685, align 4
  br i1 %1684, label %1687, label %1689

1687:                                             ; preds = %1680
  %1688 = add i32 %1686, -1
  store i32 %1688, i32* %1685, align 4
  br label %1689

1689:                                             ; preds = %1687, %1680
  %1690 = phi i32 [ %1688, %1687 ], [ %1686, %1680 ]
  %1691 = icmp eq i32 %1690, 0
  br i1 %1691, label %1692, label %1693

1692:                                             ; preds = %1689
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1678) #19
  br label %1693

1693:                                             ; preds = %1677, %1689, %1692
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %113) #19
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %51)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %50)
  br label %1694

1694:                                             ; preds = %4, %1693
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK5blink13ComputedStyle26LocaleForLineBreakIteratorEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #1

declare %"class.blink::Hyphenation"* @_ZNK5blink13ComputedStyle14GetHyphenationEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9SetStatusENS_10BidiStatusE(%"class.blink::BidiResolver"*, %"struct.blink::BidiStatus"* byval(%"struct.blink::BidiStatus") align 8) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4
  %5 = bitcast %"struct.blink::BidiStatus"* %4 to i8*
  %6 = bitcast %"struct.blink::BidiStatus"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* nonnull align 8 %6, i64 12, i1 false) #19
  %7 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 3
  %8 = getelementptr inbounds %"struct.blink::BidiStatus", %"struct.blink::BidiStatus"* %1, i64 0, i32 3, i32 0
  %9 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %8, align 8
  %10 = icmp eq %"class.blink::BidiContext"* %9, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 1 monotonic
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #19
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.18, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0)) #19
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #19
  br label %18

18:                                               ; preds = %15, %11, %2
  %19 = ptrtoint %"class.blink::BidiContext"* %9 to i64
  %20 = bitcast %class.scoped_refptr.1841* %7 to i64*
  %21 = getelementptr inbounds %class.scoped_refptr.1841, %class.scoped_refptr.1841* %7, i64 0, i32 0
  %22 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %21, align 8
  store i64 %19, i64* %20, align 8
  %23 = icmp eq %"class.blink::BidiContext"* %22, null
  br i1 %23, label %30, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw sub i32* %25, i32 1 acq_rel
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %30

28:                                               ; preds = %24
  call void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"* nonnull %22) #19
  %29 = bitcast %"class.blink::BidiContext"* %22 to i8*
  call void @free(i8* %29) #19
  br label %30

30:                                               ; preds = %18, %24, %28
  %31 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %8, align 8
  %32 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %31, i64 0, i32 1
  %33 = load i16, i16* %32, align 4
  %34 = and i16 %33, 3968
  %35 = icmp ne i16 %34, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 18
  store i8 %36, i8* %37, align 1
  %38 = icmp eq %"class.blink::BidiContext"* %31, null
  br i1 %38, label %45, label %39

39:                                               ; preds = %30
  %40 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw sub i32* %40, i32 1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %45

43:                                               ; preds = %39
  call void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"* nonnull %31) #19
  %44 = bitcast %"class.blink::BidiContext"* %31 to i8*
  call void @free(i8* %44) #19
  br label %45

45:                                               ; preds = %30, %39, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE21CreateBidiRunsForLineERKS1_NS_23VisualDirectionOverrideEbb(%"class.blink::BidiResolver"*, %"class.blink::TextRunIterator"* dereferenceable(16), i32, i1 zeroext, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca i64, align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = alloca %"class.blink::BidiResolver", align 8
  %11 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 16
  store %"struct.blink::BidiCharacterRun"* null, %"struct.blink::BidiCharacterRun"** %11, align 8
  %12 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 7
  %13 = bitcast %"class.blink::TextRunIterator"* %12 to i8*
  %14 = bitcast %"class.blink::TextRunIterator"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 16, i1 false)
  %15 = icmp eq i32 %2, 0
  %16 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 10
  br i1 %15, label %116, label %17

17:                                               ; preds = %5
  store i8 0, i8* %16, align 8
  %18 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 1
  %19 = bitcast %"class.blink::TextRunIterator"* %18 to i8*
  %20 = bitcast %"class.blink::BidiResolver"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 16, i1 false)
  %21 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2
  %22 = bitcast %"class.blink::TextRunIterator"* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false)
  %23 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.blink::TextRunIterator", %"class.blink::TextRunIterator"* %1, i64 0, i32 1
  %26 = getelementptr inbounds %"class.blink::TextRunIterator", %"class.blink::TextRunIterator"* %1, i64 0, i32 0
  %27 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 0, i32 2
  %28 = load i32, i32* %24, align 8
  br label %29

29:                                               ; preds = %40, %17
  %30 = phi i32 [ %41, %40 ], [ %28, %17 ]
  %31 = load i32, i32* %25, align 8
  %32 = icmp eq i32 %30, %31
  br i1 %32, label %33, label %37

33:                                               ; preds = %29
  %34 = load %"class.blink::TextRun"*, %"class.blink::TextRun"** %23, align 8
  %35 = load %"class.blink::TextRun"*, %"class.blink::TextRun"** %26, align 8
  %36 = icmp eq %"class.blink::TextRun"* %34, %35
  br i1 %36, label %42, label %37

37:                                               ; preds = %33, %29
  %38 = load i32, i32* %27, align 4
  %39 = icmp ult i32 %30, %38
  br i1 %39, label %40, label %42

40:                                               ; preds = %37
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %20, i64 16, i1 false)
  %41 = add nuw i32 %30, 1
  store i32 %41, i32* %24, align 8
  br label %29

42:                                               ; preds = %33, %37
  %43 = icmp ne i32 %2, 1
  %44 = zext i1 %43 to i32
  %45 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 5
  store i32 %44, i32* %45, align 8
  %46 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 12
  tail call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %46)
  %47 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 12, i32 1
  %48 = bitcast %"struct.blink::BidiCharacterRun"** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 12, i32 2
  %51 = bitcast %"struct.blink::BidiCharacterRun"** %50 to i64*
  store i64 %49, i64* %51, align 8
  %52 = icmp eq i32 %2, 2
  br i1 %52, label %53, label %705

53:                                               ; preds = %42
  %54 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 12, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %705, label %57

57:                                               ; preds = %53
  %58 = add i32 %55, -1
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %705, label %60

60:                                               ; preds = %57
  %61 = getelementptr inbounds %"class.blink::BidiRunList", %"class.blink::BidiRunList"* %46, i64 0, i32 0
  %62 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %61, align 8
  %63 = add i32 %55, -2
  %64 = and i32 %58, 7
  %65 = icmp ult i32 %63, 7
  br i1 %65, label %89, label %66

66:                                               ; preds = %60
  %67 = sub i32 %58, %64
  br label %68

68:                                               ; preds = %68, %66
  %69 = phi %"struct.blink::BidiCharacterRun"* [ %62, %66 ], [ %86, %68 ]
  %70 = phi i32 [ %67, %66 ], [ %87, %68 ]
  %71 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %69, i64 0, i32 2
  %72 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %71, align 8
  %73 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %72, i64 0, i32 2
  %74 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %73, align 8
  %75 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %74, i64 0, i32 2
  %76 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %75, align 8
  %77 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %76, i64 0, i32 2
  %78 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %77, align 8
  %79 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %78, i64 0, i32 2
  %80 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %79, align 8
  %81 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %80, i64 0, i32 2
  %82 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %81, align 8
  %83 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %82, i64 0, i32 2
  %84 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %83, align 8
  %85 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %84, i64 0, i32 2
  %86 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %85, align 8
  %87 = add i32 %70, -8
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %68

89:                                               ; preds = %68, %60
  %90 = phi %"struct.blink::BidiCharacterRun"* [ undef, %60 ], [ %86, %68 ]
  %91 = phi %"struct.blink::BidiCharacterRun"* [ %62, %60 ], [ %86, %68 ]
  %92 = icmp eq i32 %64, 0
  br i1 %92, label %100, label %93

93:                                               ; preds = %89, %93
  %94 = phi %"struct.blink::BidiCharacterRun"* [ %97, %93 ], [ %91, %89 ]
  %95 = phi i32 [ %98, %93 ], [ %64, %89 ]
  %96 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %94, i64 0, i32 2
  %97 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %96, align 8
  %98 = add i32 %95, -1
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %93, !llvm.loop !33

100:                                              ; preds = %93, %89
  %101 = phi %"struct.blink::BidiCharacterRun"* [ %90, %89 ], [ %97, %93 ]
  %102 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %101, i64 0, i32 2
  %103 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %102, align 8
  br label %104

104:                                              ; preds = %104, %100
  %105 = phi %"struct.blink::BidiCharacterRun"* [ %109, %104 ], [ %62, %100 ]
  %106 = phi %"struct.blink::BidiCharacterRun"* [ %105, %104 ], [ %103, %100 ]
  %107 = phi i32 [ %110, %104 ], [ 0, %100 ]
  %108 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %105, i64 0, i32 2
  %109 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %108, align 8
  store %"struct.blink::BidiCharacterRun"* %106, %"struct.blink::BidiCharacterRun"** %108, align 8
  %110 = add i32 %107, 1
  %111 = icmp ugt i32 %110, %58
  br i1 %111, label %112, label %104

112:                                              ; preds = %104
  store %"struct.blink::BidiCharacterRun"* %101, %"struct.blink::BidiCharacterRun"** %61, align 8
  %113 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %62, i64 0, i32 2
  store %"struct.blink::BidiCharacterRun"* %103, %"struct.blink::BidiCharacterRun"** %113, align 8
  %114 = icmp eq %"struct.blink::BidiCharacterRun"* %103, null
  br i1 %114, label %115, label %705

115:                                              ; preds = %112
  store %"struct.blink::BidiCharacterRun"* %62, %"struct.blink::BidiCharacterRun"** %47, align 8
  br label %705

116:                                              ; preds = %5
  store i8 1, i8* %16, align 8
  %117 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2
  %118 = bitcast %"class.blink::TextRunIterator"* %117 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %118, i8 0, i64 16, i1 false)
  %119 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 3
  %120 = bitcast %"class.blink::TextRunIterator"* %119 to i8*
  %121 = bitcast %"class.blink::BidiResolver"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* align 8 %121, i64 16, i1 false)
  %122 = bitcast %"class.blink::BidiResolver"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 368, i8* nonnull %122) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %122, i8 -86, i64 368, i1 false)
  %123 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %10, i64 0, i32 4, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %122, i8 0, i64 64, i1 false) #19
  store i32 10, i32* %123, align 8
  %124 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %10, i64 0, i32 4, i32 1
  store i32 10, i32* %124, align 4
  %125 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %10, i64 0, i32 4, i32 2
  store i32 10, i32* %125, align 8
  %126 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %10, i64 0, i32 4, i32 3, i32 0
  store %"class.blink::BidiContext"* null, %"class.blink::BidiContext"** %126, align 8
  %127 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %10, i64 0, i32 5
  store i32 10, i32* %127, align 8
  %128 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %10, i64 0, i32 6
  %129 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %10, i64 0, i32 9
  %130 = bitcast %"class.blink::TextRunIterator"* %129 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %130, i8 0, i64 16, i1 false) #19
  %131 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %10, i64 0, i32 10
  %132 = bitcast %"class.blink::TextRunIterator"* %128 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %132, i8 0, i64 33, i1 false) #19
  store i8 1, i8* %131, align 8
  %133 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %10, i64 0, i32 12
  %134 = bitcast %"class.blink::BidiRunList"* %133 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %134, i8 0, i64 28, i1 false) #19
  %135 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %10, i64 0, i32 13
  %136 = bitcast %"class.blink::MidpointState"* %135 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %136, i8 0, i64 25, i1 false) #19
  %137 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %10, i64 0, i32 14
  store i32 0, i32* %137, align 8
  %138 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %10, i64 0, i32 15
  %139 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %10, i64 0, i32 19
  %140 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %10, i64 0, i32 19, i32 0, i32 1, i64 0
  %141 = bitcast %"class.WTF::Vector.3145"* %139 to i8**
  %142 = bitcast %"class.WTF::Vector.3140"* %138 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %142, i8 0, i64 25, i1 false) #19
  store i8* %140, i8** %141, align 8
  %143 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %10, i64 0, i32 19, i32 0, i32 0, i32 1
  store i32 8, i32* %143, align 8
  %144 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %10, i64 0, i32 19, i32 0, i32 0, i32 2
  store i32 0, i32* %144, align 4
  %145 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %10, i64 0, i32 20
  %146 = bitcast %"class.WTF::HashMap.3150"* %145 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %146, i8 0, i64 20, i1 false) #19
  %147 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 14
  %148 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 1
  %149 = bitcast %"class.blink::TextRunIterator"* %148 to i8*
  %150 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 0, i32 1
  %151 = getelementptr inbounds %"class.blink::TextRunIterator", %"class.blink::TextRunIterator"* %1, i64 0, i32 1
  %152 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 0, i32 0
  %153 = getelementptr inbounds %"class.blink::TextRunIterator", %"class.blink::TextRunIterator"* %1, i64 0, i32 0
  %154 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 0, i32 2
  %155 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4
  %156 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %10, i64 0, i32 4
  %157 = bitcast %"struct.blink::BidiStatus"* %156 to i8*
  %158 = bitcast %"struct.blink::BidiStatus"* %155 to i8*
  %159 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %10, i64 0, i32 4, i32 3
  %160 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 3, i32 0
  %161 = bitcast %"class.logging::CheckError"* %7 to i8*
  %162 = bitcast %class.scoped_refptr.1841* %159 to i64*
  %163 = getelementptr inbounds %class.scoped_refptr.1841, %class.scoped_refptr.1841* %159, i64 0, i32 0
  %164 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %10, i64 0, i32 1
  %165 = bitcast %"class.blink::TextRunIterator"* %164 to i8*
  %166 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %10, i64 0, i32 2
  %167 = bitcast %"class.blink::TextRunIterator"* %166 to i8*
  %168 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %10, i64 0, i32 3
  %169 = bitcast %"class.blink::TextRunIterator"* %168 to i8*
  %170 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 8
  %171 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %10, i64 0, i32 8
  %172 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 9
  %173 = bitcast %"class.blink::TextRunIterator"* %172 to i8*
  %174 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 6
  %175 = bitcast %"class.blink::TextRunIterator"* %174 to i8*
  %176 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 2
  %177 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 0
  %178 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2, i32 1
  %179 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 3, i32 1
  %180 = getelementptr inbounds %"class.blink::TextRunIterator", %"class.blink::TextRunIterator"* %117, i64 0, i32 0
  %181 = getelementptr inbounds %"class.blink::TextRunIterator", %"class.blink::TextRunIterator"* %119, i64 0, i32 0
  %182 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 1
  %183 = getelementptr inbounds %"struct.blink::BidiStatus", %"struct.blink::BidiStatus"* %155, i64 0, i32 0
  %184 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 12
  %185 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 5
  %186 = bitcast i64* %6 to %"class.blink::BidiEmbedding"*
  %187 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 19
  %188 = bitcast i64* %6 to i8*
  %189 = bitcast i64* %6 to i32*
  %190 = getelementptr inbounds %"class.blink::BidiEmbedding", %"class.blink::BidiEmbedding"* %186, i64 0, i32 1
  %191 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 19, i32 0, i32 0, i32 2
  %192 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 19, i32 0, i32 0, i32 1
  %193 = getelementptr inbounds %"class.WTF::Vector.3145", %"class.WTF::Vector.3145"* %187, i64 0, i32 0, i32 0, i32 0
  br label %194

194:                                              ; preds = %594, %116
  %195 = phi i8 [ 0, %116 ], [ %329, %594 ]
  %196 = load i32, i32* %147, align 8
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %202, label %198

198:                                              ; preds = %194
  %199 = load i8, i8* %16, align 8, !range !2
  %200 = icmp eq i8 %199, 0
  br i1 %200, label %202, label %201

201:                                              ; preds = %198
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %149, i8* align 8 %121, i64 16, i1 false)
  store i8 0, i8* %16, align 8
  br label %202

202:                                              ; preds = %194, %198, %201
  %203 = and i8 %195, 1
  %204 = icmp eq i8 %203, 0
  br i1 %204, label %205, label %244

205:                                              ; preds = %202
  %206 = load i32, i32* %150, align 8
  %207 = load i32, i32* %151, align 8
  %208 = icmp eq i32 %206, %207
  br i1 %208, label %209, label %213

209:                                              ; preds = %205
  %210 = load %"class.blink::TextRun"*, %"class.blink::TextRun"** %152, align 8
  %211 = load %"class.blink::TextRun"*, %"class.blink::TextRun"** %153, align 8
  %212 = icmp eq %"class.blink::TextRun"* %210, %211
  br i1 %212, label %216, label %213

213:                                              ; preds = %205, %209
  %214 = load i32, i32* %154, align 4
  %215 = icmp ult i32 %206, %214
  br i1 %215, label %241, label %216

216:                                              ; preds = %213, %209
  %217 = load i8, i8* %16, align 8, !range !2
  %218 = icmp eq i8 %217, 0
  br i1 %218, label %219, label %621

219:                                              ; preds = %216
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %157, i8* align 8 %158, i64 12, i1 false) #19
  %220 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %160, align 8
  %221 = icmp eq %"class.blink::BidiContext"* %220, null
  br i1 %221, label %228, label %222

222:                                              ; preds = %219
  %223 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %220, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %224 = atomicrmw add i32* %223, i32 1 monotonic
  %225 = icmp sgt i32 %224, 0
  br i1 %225, label %228, label %226

226:                                              ; preds = %222
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %161) #19
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.18, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0)) #19
  %227 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %161) #19
  br label %228

228:                                              ; preds = %226, %222, %219
  %229 = ptrtoint %"class.blink::BidiContext"* %220 to i64
  %230 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %163, align 8
  store i64 %229, i64* %162, align 8
  %231 = icmp eq %"class.blink::BidiContext"* %230, null
  br i1 %231, label %238, label %232

232:                                              ; preds = %228
  %233 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %230, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %234 = atomicrmw sub i32* %233, i32 1 acq_rel
  %235 = icmp eq i32 %234, 1
  br i1 %235, label %236, label %238

236:                                              ; preds = %232
  call void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"* nonnull %230) #19
  %237 = bitcast %"class.blink::BidiContext"* %230 to i8*
  call void @free(i8* %237) #19
  br label %238

238:                                              ; preds = %236, %232, %228
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %165, i8* align 8 %149, i64 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %167, i8* align 8 %118, i64 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %169, i8* align 8 %120, i64 16, i1 false)
  %239 = load i8, i8* %170, align 8, !range !2
  store i8 %239, i8* %171, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %130, i8* align 8 %173, i64 16, i1 false)
  %240 = load i8, i8* %16, align 8, !range !2
  store i8 %240, i8* %131, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %175, i8* align 8 %120, i64 16, i1 false)
  br label %244

241:                                              ; preds = %213
  %242 = load i32, i32* %150, align 8
  %243 = load i32, i32* %154, align 4
  br label %282

244:                                              ; preds = %202, %238
  %245 = phi i8 [ 1, %238 ], [ %195, %202 ]
  br i1 %3, label %252, label %246

246:                                              ; preds = %244
  %247 = load i32, i32* %150, align 8
  %248 = load i32, i32* %154, align 4
  %249 = icmp ult i32 %247, %248
  br i1 %249, label %282, label %250

250:                                              ; preds = %246
  %251 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %160, align 8
  br label %271

252:                                              ; preds = %244
  %253 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %160, align 8
  %254 = call %"class.blink::BidiContext"* @_ZN5blink11BidiContext41CopyStackRemovingUnicodeEmbeddingContextsEv(%"class.blink::BidiContext"* %253) #19
  %255 = ptrtoint %"class.blink::BidiContext"* %254 to i64
  %256 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %163, align 8
  store i64 %255, i64* %162, align 8
  %257 = icmp eq %"class.blink::BidiContext"* %256, null
  br i1 %257, label %264, label %258

258:                                              ; preds = %252
  %259 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %256, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %260 = atomicrmw sub i32* %259, i32 1 acq_rel
  %261 = icmp eq i32 %260, 1
  br i1 %261, label %262, label %264

262:                                              ; preds = %258
  call void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"* nonnull %256) #19
  %263 = bitcast %"class.blink::BidiContext"* %256 to i8*
  call void @free(i8* %263) #19
  br label %264

264:                                              ; preds = %252, %258, %262
  %265 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %126, align 8
  %266 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %265, i64 0, i32 1
  %267 = load i16, i16* %266, align 4
  %268 = lshr i16 %267, 7
  %269 = and i16 %268, 31
  %270 = zext i16 %269 to i32
  store i32 %270, i32* %123, align 8
  store i32 %270, i32* %125, align 8
  store i32 %270, i32* %124, align 4
  br label %327

271:                                              ; preds = %271, %250
  %272 = phi %"class.blink::BidiContext"* [ %251, %250 ], [ %274, %271 ]
  %273 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %272, i64 0, i32 2, i32 0
  %274 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %273, align 8
  %275 = icmp eq %"class.blink::BidiContext"* %274, null
  br i1 %275, label %276, label %271

276:                                              ; preds = %271
  %277 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %272, i64 0, i32 1
  %278 = load i16, i16* %277, align 4
  %279 = lshr i16 %278, 7
  %280 = and i16 %279, 31
  %281 = zext i16 %280 to i32
  br label %327

282:                                              ; preds = %241, %246
  %283 = phi i32 [ %248, %246 ], [ %243, %241 ]
  %284 = phi i32 [ %247, %246 ], [ %242, %241 ]
  %285 = phi i1 [ true, %246 ], [ false, %241 ]
  %286 = phi i8 [ %245, %246 ], [ %195, %241 ]
  %287 = icmp ult i32 %284, %283
  br i1 %287, label %288, label %311

288:                                              ; preds = %282
  %289 = load %"class.blink::TextRun"*, %"class.blink::TextRun"** %152, align 8
  %290 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %289, i64 0, i32 5
  %291 = load i16, i16* %290, align 8
  %292 = and i16 %291, 4
  %293 = icmp eq i16 %292, 0
  br i1 %293, label %301, label %294

294:                                              ; preds = %288
  %295 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %289, i64 0, i32 0, i32 0
  %296 = load i8*, i8** %295, align 8
  %297 = zext i32 %284 to i64
  %298 = getelementptr inbounds i8, i8* %296, i64 %297
  %299 = load i8, i8* %298, align 1
  %300 = zext i8 %299 to i16
  br label %307

301:                                              ; preds = %288
  %302 = bitcast %"class.blink::TextRun"* %289 to i16**
  %303 = load i16*, i16** %302, align 8
  %304 = zext i32 %284 to i64
  %305 = getelementptr inbounds i16, i16* %303, i64 %304
  %306 = load i16, i16* %305, align 2
  br label %307

307:                                              ; preds = %301, %294
  %308 = phi i16 [ %300, %294 ], [ %306, %301 ]
  %309 = zext i16 %308 to i32
  %310 = call i32 @u_charDirection_69(i32 %309) #19
  br label %311

311:                                              ; preds = %282, %307
  %312 = phi i32 [ %310, %307 ], [ 10, %282 ]
  %313 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %160, align 8
  %314 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %313, i64 0, i32 1
  %315 = load i16, i16* %314, align 4
  %316 = and i16 %315, 4096
  %317 = icmp eq i16 %316, 0
  br i1 %317, label %323, label %318

318:                                              ; preds = %311
  switch i32 %312, label %319 [
    i32 11, label %327
    i32 12, label %327
    i32 14, label %327
    i32 15, label %327
    i32 16, label %327
  ]

319:                                              ; preds = %318
  %320 = lshr i16 %315, 7
  %321 = and i16 %320, 31
  %322 = zext i16 %321 to i32
  br label %327

323:                                              ; preds = %311
  %324 = icmp eq i32 %312, 17
  br i1 %324, label %325, label %327

325:                                              ; preds = %323
  %326 = load i32, i32* %176, align 8
  br label %327

327:                                              ; preds = %318, %318, %318, %318, %318, %264, %276, %319, %325, %323
  %328 = phi i1 [ %285, %319 ], [ %285, %325 ], [ %285, %323 ], [ true, %264 ], [ true, %276 ], [ %285, %318 ], [ %285, %318 ], [ %285, %318 ], [ %285, %318 ], [ %285, %318 ]
  %329 = phi i8 [ %286, %319 ], [ %286, %325 ], [ %286, %323 ], [ %245, %264 ], [ %245, %276 ], [ %286, %318 ], [ %286, %318 ], [ %286, %318 ], [ %286, %318 ], [ %286, %318 ]
  %330 = phi i32 [ %322, %319 ], [ %326, %325 ], [ %312, %323 ], [ %270, %264 ], [ %281, %276 ], [ %312, %318 ], [ %312, %318 ], [ %312, %318 ], [ %312, %318 ], [ %312, %318 ]
  %331 = load i32, i32* %147, align 8
  %332 = icmp eq i32 %331, 0
  %333 = select i1 %332, i32 %330, i32 10
  switch i32 %333, label %527 [
    i32 14, label %334
    i32 11, label %334
    i32 15, label %334
    i32 12, label %334
    i32 16, label %334
    i32 0, label %349
    i32 13, label %386
    i32 1, label %386
    i32 2, label %415
    i32 5, label %460
    i32 18, label %518
    i32 4, label %510
  ]

334:                                              ; preds = %327, %327, %327, %327, %327
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %188) #19
  store i32 %333, i32* %189, align 8
  store i32 1, i32* %190, align 4
  %335 = load i32, i32* %191, align 4
  %336 = load i32, i32* %192, align 8
  %337 = icmp eq i32 %335, %336
  br i1 %337, label %346, label %338, !prof !3

338:                                              ; preds = %334
  %339 = load %"class.blink::BidiEmbedding"*, %"class.blink::BidiEmbedding"** %193, align 8
  %340 = zext i32 %335 to i64
  %341 = getelementptr inbounds %"class.blink::BidiEmbedding", %"class.blink::BidiEmbedding"* %339, i64 %340
  %342 = bitcast %"class.blink::BidiEmbedding"* %341 to i64*
  %343 = load i64, i64* %6, align 8
  store i64 %343, i64* %342, align 4
  %344 = load i32, i32* %191, align 4
  %345 = add i32 %344, 1
  store i32 %345, i32* %191, align 4
  br label %347

346:                                              ; preds = %334
  call void @_ZN3WTF6VectorIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3145"* %187, %"class.blink::BidiEmbedding"* nonnull dereferenceable(8) %186) #19
  br label %347

347:                                              ; preds = %338, %346
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %188) #19
  %348 = call zeroext i1 @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE23CommitExplicitEmbeddingERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %184)
  br label %527

349:                                              ; preds = %327
  %350 = load i32, i32* %176, align 8
  switch i32 %350, label %385 [
    i32 9, label %355
    i32 8, label %355
    i32 7, label %355
    i32 18, label %355
    i32 10, label %355
    i32 3, label %355
    i32 4, label %355
    i32 6, label %355
    i32 2, label %351
    i32 1, label %354
    i32 5, label %354
    i32 13, label %354
  ]

351:                                              ; preds = %349
  %352 = load i32, i32* %182, align 4
  %353 = icmp eq i32 %352, 0
  br i1 %353, label %385, label %354

354:                                              ; preds = %349, %349, %349, %351
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %184)
  br label %385

355:                                              ; preds = %349, %349, %349, %349, %349, %349, %349, %349
  %356 = load i32, i32* %183, align 8
  switch i32 %356, label %374 [
    i32 2, label %357
    i32 5, label %367
  ]

357:                                              ; preds = %355
  %358 = load i32, i32* %182, align 4
  %359 = icmp eq i32 %358, 0
  br i1 %359, label %385, label %360

360:                                              ; preds = %357
  store i32 2, i32* %185, align 8
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %184)
  %361 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %160, align 8
  %362 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %361, i64 0, i32 1
  %363 = load i16, i16* %362, align 4
  %364 = and i16 %363, 3968
  %365 = icmp eq i16 %364, 0
  br i1 %365, label %385, label %366

366:                                              ; preds = %360
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %120, i64 16, i1 false)
  store i32 1, i32* %185, align 8
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %184)
  br label %385

367:                                              ; preds = %355
  store i32 5, i32* %185, align 8
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %184)
  %368 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %160, align 8
  %369 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %368, i64 0, i32 1
  %370 = load i16, i16* %369, align 4
  %371 = and i16 %370, 3968
  %372 = icmp eq i16 %371, 0
  br i1 %372, label %385, label %373

373:                                              ; preds = %367
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %120, i64 16, i1 false)
  store i32 1, i32* %185, align 8
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %184)
  br label %385

374:                                              ; preds = %355
  %375 = load i32, i32* %182, align 4
  %376 = icmp eq i32 %375, 0
  br i1 %376, label %385, label %377

377:                                              ; preds = %374
  %378 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %160, align 8
  %379 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %378, i64 0, i32 1
  %380 = load i16, i16* %379, align 4
  %381 = and i16 %380, 3968
  %382 = icmp eq i16 %381, 128
  br i1 %382, label %383, label %384

383:                                              ; preds = %377
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %120, i64 16, i1 false)
  store i32 1, i32* %185, align 8
  br label %384

384:                                              ; preds = %383, %377
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %184)
  br label %385

385:                                              ; preds = %349, %351, %360, %357, %367, %374, %366, %384, %373, %354
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %121, i64 16, i1 false)
  store i32 0, i32* %183, align 8
  store i32 0, i32* %182, align 4
  store i32 0, i32* %185, align 8
  br label %527

386:                                              ; preds = %327, %327
  %387 = load i32, i32* %176, align 8
  switch i32 %387, label %414 [
    i32 0, label %388
    i32 2, label %388
    i32 5, label %388
    i32 10, label %389
    i32 9, label %389
    i32 3, label %389
    i32 4, label %389
    i32 6, label %389
    i32 18, label %389
    i32 7, label %389
    i32 8, label %389
  ]

388:                                              ; preds = %386, %386, %386
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %184)
  br label %414

389:                                              ; preds = %386, %386, %386, %386, %386, %386, %386, %386
  %390 = load i32, i32* %183, align 8
  switch i32 %390, label %403 [
    i32 2, label %391
    i32 5, label %402
  ]

391:                                              ; preds = %389
  %392 = load i32, i32* %182, align 4
  %393 = icmp eq i32 %392, 0
  br i1 %393, label %394, label %401

394:                                              ; preds = %391
  %395 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %160, align 8
  %396 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %395, i64 0, i32 1
  %397 = load i16, i16* %396, align 4
  %398 = and i16 %397, 3968
  %399 = icmp eq i16 %398, 0
  br i1 %399, label %400, label %401

400:                                              ; preds = %394
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %120, i64 16, i1 false)
  br label %401

401:                                              ; preds = %400, %394, %391
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %184)
  br label %414

402:                                              ; preds = %389
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %184)
  br label %414

403:                                              ; preds = %389
  %404 = load i32, i32* %182, align 4
  %405 = icmp eq i32 %404, 0
  br i1 %405, label %406, label %414

406:                                              ; preds = %403
  %407 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %160, align 8
  %408 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %407, i64 0, i32 1
  %409 = load i16, i16* %408, align 4
  %410 = and i16 %409, 3968
  %411 = icmp eq i16 %410, 0
  br i1 %411, label %412, label %413

412:                                              ; preds = %406
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %120, i64 16, i1 false)
  br label %413

413:                                              ; preds = %412, %406
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %184)
  br label %414

414:                                              ; preds = %386, %401, %403, %413, %402, %388
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %121, i64 16, i1 false)
  store i32 1, i32* %183, align 8
  store i32 %333, i32* %182, align 4
  store i32 1, i32* %185, align 8
  br label %527

415:                                              ; preds = %327
  %416 = load i32, i32* %182, align 4
  %417 = icmp eq i32 %416, 13
  br i1 %417, label %460, label %418

418:                                              ; preds = %415
  %419 = load i32, i32* %176, align 8
  switch i32 %419, label %456 [
    i32 10, label %424
    i32 9, label %424
    i32 1, label %420
    i32 13, label %420
    i32 5, label %420
    i32 3, label %421
    i32 6, label %421
    i32 4, label %424
    i32 18, label %424
    i32 7, label %424
    i32 8, label %424
  ]

420:                                              ; preds = %418, %418, %418
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %120, i64 16, i1 false)
  br label %455

421:                                              ; preds = %418, %418
  %422 = load i32, i32* %183, align 8
  %423 = icmp eq i32 %422, 2
  br i1 %423, label %456, label %426

424:                                              ; preds = %418, %418, %418, %418, %418, %418
  %425 = load i32, i32* %183, align 8
  br label %426

426:                                              ; preds = %424, %421
  %427 = phi i32 [ %425, %424 ], [ %422, %421 ]
  switch i32 %427, label %449 [
    i32 2, label %428
    i32 5, label %435
  ]

428:                                              ; preds = %426
  %429 = icmp eq i32 %416, 1
  br i1 %429, label %430, label %456

430:                                              ; preds = %428
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %184)
  %431 = load i32, i32* %176, align 8
  %432 = icmp eq i32 %431, 4
  %433 = select i1 %432, %"class.blink::TextRunIterator"* %172, %"class.blink::TextRunIterator"* %119
  %434 = bitcast %"class.blink::TextRunIterator"* %433 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %434, i64 16, i1 false)
  store i32 1, i32* %185, align 8
  br label %455

435:                                              ; preds = %426
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %184)
  %436 = load i32, i32* %182, align 4
  %437 = icmp eq i32 %436, 1
  br i1 %437, label %444, label %438

438:                                              ; preds = %435
  %439 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %160, align 8
  %440 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %439, i64 0, i32 1
  %441 = load i16, i16* %440, align 4
  %442 = and i16 %441, 3968
  %443 = icmp eq i16 %442, 128
  br i1 %443, label %444, label %456

444:                                              ; preds = %438, %435
  %445 = load i32, i32* %176, align 8
  %446 = icmp eq i32 %445, 4
  %447 = select i1 %446, %"class.blink::TextRunIterator"* %172, %"class.blink::TextRunIterator"* %119
  %448 = bitcast %"class.blink::TextRunIterator"* %447 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %448, i64 16, i1 false)
  store i32 1, i32* %185, align 8
  br label %455

449:                                              ; preds = %426
  %450 = icmp eq i32 %416, 1
  br i1 %450, label %451, label %456

451:                                              ; preds = %449
  %452 = icmp eq i32 %419, 4
  %453 = select i1 %452, %"class.blink::TextRunIterator"* %172, %"class.blink::TextRunIterator"* %119
  %454 = bitcast %"class.blink::TextRunIterator"* %453 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %454, i64 16, i1 false)
  store i32 1, i32* %185, align 8
  br label %455

455:                                              ; preds = %430, %451, %444, %420
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %184)
  store i32 2, i32* %185, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %121, i64 16, i1 false)
  store i32 2, i32* %183, align 8
  br label %527

456:                                              ; preds = %418, %428, %449, %438, %421
  %457 = load i32, i32* %185, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %121, i64 16, i1 false)
  store i32 2, i32* %183, align 8
  %458 = icmp eq i32 %457, 10
  br i1 %458, label %459, label %527

459:                                              ; preds = %456
  store i32 0, i32* %185, align 8
  br label %527

460:                                              ; preds = %415, %327
  %461 = load i32, i32* %176, align 8
  switch i32 %461, label %506 [
    i32 0, label %462
    i32 10, label %473
    i32 1, label %469
    i32 13, label %469
    i32 2, label %469
    i32 6, label %470
    i32 3, label %473
    i32 4, label %473
    i32 18, label %473
    i32 7, label %473
    i32 8, label %473
    i32 9, label %473
  ]

462:                                              ; preds = %460
  %463 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %160, align 8
  %464 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %463, i64 0, i32 1
  %465 = load i16, i16* %464, align 4
  %466 = and i16 %465, 3968
  %467 = icmp eq i16 %466, 0
  br i1 %467, label %468, label %506

468:                                              ; preds = %462
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %184)
  br label %506

469:                                              ; preds = %460, %460, %460
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %120, i64 16, i1 false)
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %184)
  br label %506

470:                                              ; preds = %460
  %471 = load i32, i32* %183, align 8
  %472 = icmp eq i32 %471, 5
  br i1 %472, label %506, label %475

473:                                              ; preds = %460, %460, %460, %460, %460, %460, %460
  %474 = load i32, i32* %183, align 8
  br label %475

475:                                              ; preds = %473, %470
  %476 = phi i32 [ %474, %473 ], [ %471, %470 ]
  switch i32 %476, label %486 [
    i32 5, label %495
    i32 2, label %477
  ]

477:                                              ; preds = %475
  %478 = load i32, i32* %182, align 4
  %479 = icmp eq i32 %478, 1
  br i1 %479, label %495, label %480

480:                                              ; preds = %477
  %481 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %160, align 8
  %482 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %481, i64 0, i32 1
  %483 = load i16, i16* %482, align 4
  %484 = and i16 %483, 3968
  %485 = icmp eq i16 %484, 128
  br i1 %485, label %495, label %496

486:                                              ; preds = %475
  %487 = load i32, i32* %182, align 4
  %488 = icmp eq i32 %487, 0
  br i1 %488, label %489, label %496

489:                                              ; preds = %486
  %490 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %160, align 8
  %491 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %490, i64 0, i32 1
  %492 = load i16, i16* %491, align 4
  %493 = and i16 %492, 3968
  %494 = icmp eq i16 %493, 128
  br i1 %494, label %495, label %496

495:                                              ; preds = %475, %489, %480, %477
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %184)
  br label %503

496:                                              ; preds = %480, %489, %486
  %497 = phi i32 [ %478, %480 ], [ 0, %489 ], [ %487, %486 ]
  %498 = load i32, i32* %185, align 8
  %499 = icmp eq i32 %498, 10
  br i1 %499, label %500, label %505

500:                                              ; preds = %496
  %501 = icmp ne i32 %497, 0
  %502 = zext i1 %501 to i32
  br label %503

503:                                              ; preds = %495, %500
  %504 = phi i32 [ %502, %500 ], [ 1, %495 ]
  store i32 %504, i32* %185, align 8
  br label %505

505:                                              ; preds = %503, %496
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %120, i64 16, i1 false)
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %184)
  br label %506

506:                                              ; preds = %460, %470, %462, %468, %505, %469
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %121, i64 16, i1 false)
  store i32 5, i32* %183, align 8
  %507 = load i32, i32* %185, align 8
  %508 = icmp eq i32 %507, 10
  br i1 %508, label %509, label %527

509:                                              ; preds = %506
  store i32 5, i32* %185, align 8
  br label %527

510:                                              ; preds = %327
  %511 = load i32, i32* %176, align 8
  switch i32 %511, label %513 [
    i32 2, label %512
    i32 4, label %527
  ]

512:                                              ; preds = %510
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %121, i64 16, i1 false)
  store i32 2, i32* %177, align 8
  br label %527

513:                                              ; preds = %510
  %514 = load i8, i8* %16, align 8, !range !2
  %515 = icmp eq i8 %514, 0
  %516 = select i1 %515, %"class.blink::TextRunIterator"* %119, %"class.blink::TextRunIterator"* %117
  %517 = bitcast %"class.blink::TextRunIterator"* %516 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %173, i8* align 8 %517, i64 16, i1 false)
  br label %527

518:                                              ; preds = %327
  %519 = load i32, i32* %178, align 8
  %520 = load i32, i32* %179, align 8
  %521 = icmp eq i32 %519, %520
  br i1 %521, label %522, label %527

522:                                              ; preds = %518
  %523 = load %"class.blink::TextRun"*, %"class.blink::TextRun"** %180, align 8
  %524 = load %"class.blink::TextRun"*, %"class.blink::TextRun"** %181, align 8
  %525 = icmp eq %"class.blink::TextRun"* %523, %524
  br i1 %525, label %526, label %527

526:                                              ; preds = %522
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %121, i64 16, i1 false)
  br label %527

527:                                              ; preds = %455, %518, %510, %327, %522, %526, %512, %513, %506, %509, %456, %459, %414, %385, %347
  %528 = phi i32 [ %333, %327 ], [ 2, %512 ], [ 4, %513 ], [ 18, %526 ], [ 18, %522 ], [ 5, %509 ], [ 5, %506 ], [ 2, %459 ], [ 2, %456 ], [ %333, %414 ], [ 0, %385 ], [ %330, %347 ], [ %511, %510 ], [ 18, %518 ], [ 2, %455 ]
  br i1 %328, label %529, label %572

529:                                              ; preds = %527
  %530 = load i32, i32* %178, align 8
  %531 = load i32, i32* %150, align 8
  %532 = icmp eq i32 %530, %531
  br i1 %532, label %533, label %572

533:                                              ; preds = %529
  %534 = load %"class.blink::TextRun"*, %"class.blink::TextRun"** %180, align 8
  %535 = load %"class.blink::TextRun"*, %"class.blink::TextRun"** %152, align 8
  %536 = icmp eq %"class.blink::TextRun"* %534, %535
  br i1 %536, label %537, label %572

537:                                              ; preds = %533
  %538 = load i8, i8* %170, align 8, !range !2
  %539 = icmp eq i8 %538, 0
  br i1 %539, label %540, label %549

540:                                              ; preds = %537
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %175, i64 16, i1 false)
  %541 = load i32, i32* %177, align 8
  switch i32 %541, label %548 [
    i32 0, label %546
    i32 1, label %546
    i32 5, label %546
    i32 2, label %542
  ]

542:                                              ; preds = %540
  %543 = load i32, i32* %182, align 4
  %544 = icmp eq i32 %543, 0
  %545 = select i1 %544, i32 0, i32 2
  br label %546

546:                                              ; preds = %540, %540, %540, %542
  %547 = phi i32 [ %545, %542 ], [ %541, %540 ], [ %541, %540 ], [ %541, %540 ]
  store i32 %547, i32* %185, align 8
  br label %548

548:                                              ; preds = %546, %540
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %184)
  br label %549

549:                                              ; preds = %537, %548
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 8 %14, i64 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %158, i8* align 8 %157, i64 12, i1 false) #19
  %550 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 3
  %551 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %126, align 8
  %552 = icmp eq %"class.blink::BidiContext"* %551, null
  br i1 %552, label %560, label %553

553:                                              ; preds = %549
  %554 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %551, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %555 = atomicrmw add i32* %554, i32 1 monotonic
  %556 = icmp sgt i32 %555, 0
  br i1 %556, label %560, label %557

557:                                              ; preds = %553
  %558 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %558) #19
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.18, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0)) #19
  %559 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %558) #19
  br label %560

560:                                              ; preds = %557, %553, %549
  %561 = ptrtoint %"class.blink::BidiContext"* %551 to i64
  %562 = bitcast %class.scoped_refptr.1841* %550 to i64*
  %563 = getelementptr inbounds %class.scoped_refptr.1841, %class.scoped_refptr.1841* %550, i64 0, i32 0
  %564 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %563, align 8
  store i64 %561, i64* %562, align 8
  %565 = icmp eq %"class.blink::BidiContext"* %564, null
  br i1 %565, label %618, label %566

566:                                              ; preds = %560
  %567 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %564, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %568 = atomicrmw sub i32* %567, i32 1 acq_rel
  %569 = icmp eq i32 %568, 1
  br i1 %569, label %570, label %618

570:                                              ; preds = %566
  call void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"* nonnull %564) #19
  %571 = bitcast %"class.blink::BidiContext"* %564 to i8*
  call void @free(i8* %571) #19
  br label %618

572:                                              ; preds = %529, %533, %527
  switch i32 %528, label %581 [
    i32 4, label %573
    i32 3, label %577
    i32 6, label %577
    i32 8, label %577
    i32 9, label %577
    i32 10, label %577
    i32 17, label %582
    i32 18, label %582
    i32 14, label %582
    i32 11, label %582
    i32 15, label %582
    i32 12, label %582
    i32 16, label %582
  ]

573:                                              ; preds = %572
  %574 = load i32, i32* %176, align 8
  %575 = icmp eq i32 %574, 2
  br i1 %575, label %582, label %576

576:                                              ; preds = %573
  store i32 4, i32* %176, align 8
  br label %582

577:                                              ; preds = %572, %572, %572, %572, %572
  %578 = load i32, i32* %176, align 8
  switch i32 %578, label %580 [
    i32 0, label %579
    i32 1, label %579
    i32 13, label %579
    i32 2, label %579
    i32 5, label %579
  ]

579:                                              ; preds = %577, %577, %577, %577, %577
  store i32 %528, i32* %176, align 8
  br label %582

580:                                              ; preds = %577
  store i32 10, i32* %176, align 8
  br label %582

581:                                              ; preds = %572
  store i32 %528, i32* %176, align 8
  br label %582

582:                                              ; preds = %572, %572, %572, %572, %572, %572, %572, %573, %576, %579, %580, %581
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* align 8 %121, i64 16, i1 false)
  %583 = load i8, i8* %16, align 8, !range !2
  %584 = icmp eq i8 %583, 0
  br i1 %584, label %586, label %585

585:                                              ; preds = %582
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %149, i8* align 8 %121, i64 16, i1 false)
  store i8 0, i8* %16, align 8
  br label %586

586:                                              ; preds = %582, %585
  %587 = load i32, i32* %150, align 8
  %588 = add i32 %587, 1
  store i32 %588, i32* %150, align 8
  %589 = load i32, i32* %191, align 4
  %590 = icmp eq i32 %589, 0
  br i1 %590, label %594, label %591

591:                                              ; preds = %586
  %592 = call zeroext i1 @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE23CommitExplicitEmbeddingERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %184)
  %593 = and i1 %328, %592
  br i1 %593, label %595, label %594

594:                                              ; preds = %591, %586
  br label %194

595:                                              ; preds = %591
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 8 %14, i64 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %158, i8* align 8 %157, i64 12, i1 false) #19
  %596 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 3
  %597 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %126, align 8
  %598 = icmp eq %"class.blink::BidiContext"* %597, null
  br i1 %598, label %606, label %599

599:                                              ; preds = %595
  %600 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %597, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %601 = atomicrmw add i32* %600, i32 1 monotonic
  %602 = icmp sgt i32 %601, 0
  br i1 %602, label %606, label %603

603:                                              ; preds = %599
  %604 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %604) #19
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.18, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0)) #19
  %605 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %604) #19
  br label %606

606:                                              ; preds = %603, %599, %595
  %607 = ptrtoint %"class.blink::BidiContext"* %597 to i64
  %608 = bitcast %class.scoped_refptr.1841* %596 to i64*
  %609 = getelementptr inbounds %class.scoped_refptr.1841, %class.scoped_refptr.1841* %596, i64 0, i32 0
  %610 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %609, align 8
  store i64 %607, i64* %608, align 8
  %611 = icmp eq %"class.blink::BidiContext"* %610, null
  br i1 %611, label %618, label %612

612:                                              ; preds = %606
  %613 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %610, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %614 = atomicrmw sub i32* %613, i32 1 acq_rel
  %615 = icmp eq i32 %614, 1
  br i1 %615, label %616, label %618

616:                                              ; preds = %612
  call void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"* nonnull %610) #19
  %617 = bitcast %"class.blink::BidiContext"* %610 to i8*
  call void @free(i8* %617) #19
  br label %618

618:                                              ; preds = %606, %612, %616, %570, %566, %560
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %149, i8* align 8 %165, i64 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %167, i64 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* align 8 %169, i64 16, i1 false)
  %619 = load i8, i8* %171, align 8, !range !2
  store i8 %619, i8* %170, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %173, i8* align 8 %130, i64 16, i1 false)
  %620 = load i8, i8* %131, align 8, !range !2
  store i8 %620, i8* %16, align 8
  store i32 10, i32* %185, align 8
  br label %621

621:                                              ; preds = %216, %618
  %622 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 12, i32 1
  %623 = bitcast %"struct.blink::BidiCharacterRun"** %622 to i64*
  %624 = load i64, i64* %623, align 8
  %625 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 12, i32 2
  %626 = bitcast %"struct.blink::BidiCharacterRun"** %625 to i64*
  store i64 %624, i64* %626, align 8
  br i1 %4, label %627, label %628

627:                                              ; preds = %621
  call void @_ZNK5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE21ReorderRunsFromLevelsERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %184)
  br label %628

628:                                              ; preds = %627, %621
  call void @llvm.memset.p0i8.i64(i8* align 8 %175, i8 0, i64 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false)
  br i1 %3, label %704, label %629

629:                                              ; preds = %628
  %630 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 12, i32 3
  %631 = load i32, i32* %630, align 8
  %632 = icmp eq i32 %631, 0
  br i1 %632, label %704, label %633

633:                                              ; preds = %629
  %634 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 17
  %635 = load i8, i8* %634, align 8, !range !2
  %636 = icmp eq i8 %635, 0
  br i1 %636, label %704, label %637

637:                                              ; preds = %633
  %638 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %625, align 8
  %639 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %638, i64 0, i32 4
  %640 = load i32, i32* %639, align 4
  %641 = icmp eq i32 %640, 0
  br i1 %641, label %704, label %642

642:                                              ; preds = %637
  %643 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 18
  %644 = load i8, i8* %643, align 1
  %645 = icmp eq i8 %644, 0
  %646 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %638, i64 0, i32 3
  %647 = load i32, i32* %646, align 8
  %648 = icmp eq i32 %647, 0
  br i1 %648, label %657, label %649

649:                                              ; preds = %642
  %650 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %160, align 8
  br label %651

651:                                              ; preds = %651, %649
  %652 = phi %"class.blink::BidiContext"* [ %650, %649 ], [ %654, %651 ]
  %653 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %652, i64 0, i32 2, i32 0
  %654 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %653, align 8
  %655 = icmp eq %"class.blink::BidiContext"* %654, null
  br i1 %655, label %656, label %651

656:                                              ; preds = %651
  store %"struct.blink::BidiCharacterRun"* null, %"struct.blink::BidiCharacterRun"** %11, align 8
  store i32 0, i32* %639, align 4
  br label %704

657:                                              ; preds = %642
  %658 = getelementptr inbounds %"class.blink::BidiRunList", %"class.blink::BidiRunList"* %184, i64 0, i32 0
  %659 = select i1 %645, %"struct.blink::BidiCharacterRun"** %622, %"struct.blink::BidiCharacterRun"** %658
  %660 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %659, align 8
  %661 = icmp eq %"struct.blink::BidiCharacterRun"* %638, %660
  br i1 %661, label %662, label %663

662:                                              ; preds = %657
  store %"struct.blink::BidiCharacterRun"* %638, %"struct.blink::BidiCharacterRun"** %11, align 8
  br label %704

663:                                              ; preds = %657
  br i1 %645, label %664, label %681

664:                                              ; preds = %663, %664
  %665 = phi %"struct.blink::BidiCharacterRun"* [ %667, %664 ], [ null, %663 ]
  %666 = phi %"struct.blink::BidiCharacterRun"** [ %669, %664 ], [ %658, %663 ]
  %667 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %666, align 8
  %668 = icmp eq %"struct.blink::BidiCharacterRun"* %667, %638
  %669 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %667, i64 0, i32 2
  br i1 %668, label %670, label %664

670:                                              ; preds = %664
  %671 = icmp eq %"struct.blink::BidiCharacterRun"* %665, null
  %672 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %638, i64 0, i32 2
  %673 = bitcast %"struct.blink::BidiCharacterRun"** %672 to i64*
  %674 = load i64, i64* %673, align 8
  %675 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %665, i64 0, i32 2
  %676 = bitcast %"struct.blink::BidiCharacterRun"** %675 to i64*
  %677 = bitcast %"class.blink::BidiRunList"* %184 to i64*
  %678 = select i1 %671, i64* %677, i64* %676
  store i64 %674, i64* %678, align 8
  store %"struct.blink::BidiCharacterRun"* null, %"struct.blink::BidiCharacterRun"** %672, align 8
  %679 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %622, align 8
  %680 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %679, i64 0, i32 2
  store %"struct.blink::BidiCharacterRun"* %638, %"struct.blink::BidiCharacterRun"** %680, align 8
  br label %700

681:                                              ; preds = %663
  %682 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %658, align 8
  br label %683

683:                                              ; preds = %683, %681
  %684 = phi %"struct.blink::BidiCharacterRun"* [ %682, %681 ], [ %686, %683 ]
  %685 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %684, i64 0, i32 2
  %686 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %685, align 8
  %687 = icmp eq %"struct.blink::BidiCharacterRun"* %686, %638
  br i1 %687, label %688, label %683

688:                                              ; preds = %683
  %689 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %684, i64 0, i32 2
  %690 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %638, i64 0, i32 2
  %691 = bitcast %"struct.blink::BidiCharacterRun"** %690 to i64*
  %692 = load i64, i64* %691, align 8
  %693 = bitcast %"struct.blink::BidiCharacterRun"** %689 to i64*
  store i64 %692, i64* %693, align 8
  %694 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %622, align 8
  %695 = icmp eq %"struct.blink::BidiCharacterRun"* %694, %638
  br i1 %695, label %696, label %697

696:                                              ; preds = %688
  store %"struct.blink::BidiCharacterRun"* %684, %"struct.blink::BidiCharacterRun"** %622, align 8
  br label %697

697:                                              ; preds = %696, %688
  %698 = bitcast %"class.blink::BidiRunList"* %184 to i64*
  %699 = load i64, i64* %698, align 8
  store i64 %699, i64* %691, align 8
  br label %700

700:                                              ; preds = %697, %670
  %701 = phi %"struct.blink::BidiCharacterRun"** [ %658, %697 ], [ %622, %670 ]
  %702 = phi i8 [ 1, %697 ], [ 0, %670 ]
  store %"struct.blink::BidiCharacterRun"* %638, %"struct.blink::BidiCharacterRun"** %701, align 8
  %703 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %638, i64 0, i32 1
  store i8 %702, i8* %703, align 1
  store %"struct.blink::BidiCharacterRun"* %638, %"struct.blink::BidiCharacterRun"** %11, align 8
  br label %704

704:                                              ; preds = %633, %700, %662, %656, %637, %629, %628
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEED2Ev(%"class.blink::BidiResolver"* nonnull %10) #19
  call void @llvm.lifetime.end.p0i8(i64 368, i8* nonnull %122) #19
  br label %705

705:                                              ; preds = %57, %115, %112, %53, %42, %704
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink10LayoutText22ContainsOnlyWhitespaceEjj(%"class.blink::LayoutText"* nocapture readonly, i32, i32) local_unnamed_addr #7 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 7, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = add i32 %2, %1
  %7 = icmp ugt i32 %6, %1
  br i1 %7, label %8, label %65

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 1
  %11 = bitcast %"class.WTF::StringImpl"* %10 to i8*
  %12 = bitcast %"class.WTF::StringImpl"* %10 to i16*
  %13 = zext i32 %1 to i64
  br label %14

14:                                               ; preds = %58, %8
  %15 = phi i64 [ %13, %8 ], [ %59, %58 ]
  %16 = phi i32 [ %1, %8 ], [ %60, %58 ]
  %17 = load atomic i32, i32* %9 monotonic, align 4
  %18 = and i32 %17, 1
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds i8, i8* %11, i64 %15
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i16
  br label %27

24:                                               ; preds = %14
  %25 = getelementptr inbounds i16, i16* %12, i64 %15
  %26 = load i16, i16* %25, align 2
  br label %27

27:                                               ; preds = %20, %24
  %28 = phi i16 [ %23, %20 ], [ %26, %24 ]
  %29 = icmp eq i16 %28, 10
  br i1 %29, label %58, label %30

30:                                               ; preds = %27
  %31 = load atomic i32, i32* %9 monotonic, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %38, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds i8, i8* %11, i64 %15
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i16
  br label %41

38:                                               ; preds = %30
  %39 = getelementptr inbounds i16, i16* %12, i64 %15
  %40 = load i16, i16* %39, align 2
  br label %41

41:                                               ; preds = %34, %38
  %42 = phi i16 [ %37, %34 ], [ %40, %38 ]
  %43 = icmp eq i16 %42, 32
  br i1 %43, label %58, label %44

44:                                               ; preds = %41
  %45 = load atomic i32, i32* %9 monotonic, align 4
  %46 = and i32 %45, 1
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %52, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds i8, i8* %11, i64 %15
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i16
  br label %55

52:                                               ; preds = %44
  %53 = getelementptr inbounds i16, i16* %12, i64 %15
  %54 = load i16, i16* %53, align 2
  br label %55

55:                                               ; preds = %48, %52
  %56 = phi i16 [ %51, %48 ], [ %54, %52 ]
  %57 = icmp eq i16 %56, 9
  br i1 %57, label %58, label %63

58:                                               ; preds = %27, %41, %55
  %59 = add nuw nsw i64 %15, 1
  %60 = add nuw i32 %16, 1
  %61 = trunc i64 %59 to i32
  %62 = icmp eq i32 %6, %61
  br i1 %62, label %65, label %14

63:                                               ; preds = %55
  %64 = trunc i64 %15 to i32
  br label %65

65:                                               ; preds = %58, %63, %3
  %66 = phi i32 [ %1, %3 ], [ %64, %63 ], [ %60, %58 ]
  %67 = icmp uge i32 %66, %6
  ret i1 %67
}

declare void @_ZN5blink16ConstructTextRunERKNS_4FontEPKNS_10LayoutTextEjjRKNS_13ComputedStyleENS_13TextDirectionE(%"class.blink::TextRun"* sret, %"class.blink::Font"* dereferenceable(88), %"class.blink::LayoutText"*, i32, i32, %"class.blink::ComputedStyle"* dereferenceable(104), i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13GlyphOverflow13SetFromBoundsERKNS_9FloatRectERKNS_4FontEf(%"struct.blink::GlyphOverflow"*, %"class.blink::FloatRect"* dereferenceable(16), %"class.blink::Font"* dereferenceable(88), float) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca float, align 4
  %6 = alloca float, align 4
  %7 = alloca float, align 4
  %8 = alloca float, align 4
  %9 = alloca float, align 4
  %10 = alloca float, align 4
  %11 = alloca float, align 4
  %12 = alloca float, align 4
  %13 = tail call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* %2) #19
  %14 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %13, i64 0, i32 2
  %15 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %14, align 8
  %16 = icmp eq %"class.blink::SimpleFontData"* %15, null
  br i1 %16, label %17, label %21

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %2, i64 0, i32 0
  %19 = tail call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %13, %"class.blink::FontDescription"* dereferenceable(80) %18) #19
  store %"class.blink::SimpleFontData"* %19, %"class.blink::SimpleFontData"** %14, align 8
  %20 = icmp eq %"class.blink::SimpleFontData"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %4, %17
  %22 = phi %"class.blink::SimpleFontData"* [ %19, %17 ], [ %15, %4 ]
  %23 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %22, i64 0, i32 1, i32 1
  %24 = load float, float* %23, align 4
  %25 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %22, i64 0, i32 1, i32 2
  %26 = load float, float* %25, align 4
  br label %27

27:                                               ; preds = %17, %21
  %28 = phi float [ %24, %21 ], [ 0.000000e+00, %17 ]
  %29 = phi float [ %26, %21 ], [ 0.000000e+00, %17 ]
  %30 = bitcast float* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30)
  store float 0.000000e+00, float* %5, align 4
  %31 = bitcast float* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %31)
  %32 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %1, i64 0, i32 0, i32 1
  %33 = load float, float* %32, align 4
  %34 = fsub float -0.000000e+00, %33
  %35 = fsub float %34, %28
  store float %35, float* %6, align 4
  %36 = fcmp ogt float %35, 0.000000e+00
  %37 = select i1 %36, float* %6, float* %5
  %38 = bitcast float* %37 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"struct.blink::GlyphOverflow", %"struct.blink::GlyphOverflow"* %0, i64 0, i32 2
  %41 = bitcast float* %40 to i32*
  store i32 %39, i32* %41, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30)
  %42 = bitcast float* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %42)
  store float 0.000000e+00, float* %7, align 4
  %43 = bitcast float* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %43)
  %44 = load float, float* %32, align 4
  %45 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %1, i64 0, i32 1, i32 1
  %46 = load float, float* %45, align 4
  %47 = fadd float %44, %46
  %48 = fsub float %47, %29
  store float %48, float* %8, align 4
  %49 = fcmp ogt float %48, 0.000000e+00
  %50 = select i1 %49, float* %8, float* %7
  %51 = bitcast float* %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %"struct.blink::GlyphOverflow", %"struct.blink::GlyphOverflow"* %0, i64 0, i32 3
  %54 = bitcast float* %53 to i32*
  store i32 %52, i32* %54, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %43)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %42)
  %55 = bitcast float* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %55)
  store float 0.000000e+00, float* %9, align 4
  %56 = bitcast float* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %56)
  %57 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %1, i64 0, i32 0, i32 0
  %58 = load float, float* %57, align 4
  %59 = fsub float -0.000000e+00, %58
  store float %59, float* %10, align 4
  %60 = fcmp olt float %58, 0.000000e+00
  %61 = select i1 %60, float* %10, float* %9
  %62 = bitcast float* %61 to i32*
  %63 = load i32, i32* %62, align 4
  %64 = bitcast %"struct.blink::GlyphOverflow"* %0 to i32*
  store i32 %63, i32* %64, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %56)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %55)
  %65 = bitcast float* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %65)
  store float 0.000000e+00, float* %11, align 4
  %66 = bitcast float* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %66)
  %67 = load float, float* %57, align 4
  %68 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %1, i64 0, i32 1, i32 0
  %69 = load float, float* %68, align 4
  %70 = fadd float %67, %69
  %71 = fsub float %70, %3
  store float %71, float* %12, align 4
  %72 = fcmp ogt float %71, 0.000000e+00
  %73 = select i1 %72, float* %12, float* %11
  %74 = bitcast float* %73 to i32*
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %"struct.blink::GlyphOverflow", %"struct.blink::GlyphOverflow"* %0, i64 0, i32 1
  %77 = bitcast float* %76 to i32*
  store i32 %75, i32* %77, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %66)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %65)
  ret void
}

declare void @_ZN5blink12LayoutObject32ClearIntrinsicLogicalWidthsDirtyEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEED2Ev(%"class.blink::BidiResolver"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 20, i32 0, i32 0
  %3 = load %"struct.WTF::KeyValuePair.3154"*, %"struct.WTF::KeyValuePair.3154"** %2, align 8
  %4 = icmp eq %"struct.WTF::KeyValuePair.3154"* %3, null
  br i1 %4, label %32, label %5, !prof !4

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 20, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %30, label %9

9:                                                ; preds = %5
  %10 = zext i32 %7 to i64
  br label %11

11:                                               ; preds = %27, %9
  %12 = phi i64 [ 0, %9 ], [ %28, %27 ]
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %3, i64 %12, i32 0
  %14 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %13, align 8
  %15 = icmp eq %"struct.blink::BidiCharacterRun"* %14, inttoptr (i64 -1 to %"struct.blink::BidiCharacterRun"*)
  br i1 %15, label %27, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %3, i64 %12, i32 1, i32 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::TextRunIterator"*, %"class.blink::TextRunIterator"** %17, align 8
  %19 = icmp eq %"class.blink::TextRunIterator"* %18, null
  %20 = bitcast %"class.blink::TextRunIterator"* %18 to i8*
  br i1 %19, label %27, label %21, !prof !4

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair.3154", %"struct.WTF::KeyValuePair.3154"* %3, i64 %12, i32 1, i32 0, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %26, label %25, !prof !3

25:                                               ; preds = %21
  store i32 0, i32* %22, align 4
  br label %26

26:                                               ; preds = %25, %21
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %20) #19
  store %"class.blink::TextRunIterator"* null, %"class.blink::TextRunIterator"** %17, align 8
  br label %27

27:                                               ; preds = %26, %16, %11
  %28 = add nuw nsw i64 %12, 1
  %29 = icmp eq i64 %28, %10
  br i1 %29, label %30, label %11

30:                                               ; preds = %27, %5
  %31 = bitcast %"struct.WTF::KeyValuePair.3154"* %3 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %31) #19
  store %"struct.WTF::KeyValuePair.3154"* null, %"struct.WTF::KeyValuePair.3154"** %2, align 8
  br label %32

32:                                               ; preds = %1, %30
  %33 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 19
  %34 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 19, i32 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %38, label %37, !prof !3

37:                                               ; preds = %32
  store i32 0, i32* %34, align 4
  br label %38

38:                                               ; preds = %37, %32
  %39 = getelementptr inbounds %"class.WTF::Vector.3145", %"class.WTF::Vector.3145"* %33, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.blink::BidiEmbedding"*, %"class.blink::BidiEmbedding"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 19, i32 0, i32 1, i64 0
  %42 = bitcast i8* %41 to %"class.blink::BidiEmbedding"*
  %43 = icmp eq %"class.blink::BidiEmbedding"* %40, %42
  br i1 %43, label %46, label %44, !prof !4

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.WTF::Vector.3145", %"class.WTF::Vector.3145"* %33, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.3146"* %45, %"class.blink::BidiEmbedding"* %40) #19
  br label %46

46:                                               ; preds = %38, %44
  store %"class.blink::BidiEmbedding"* null, %"class.blink::BidiEmbedding"** %39, align 8
  %47 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %48 = load %"class.blink::NoIsolatedRun"*, %"class.blink::NoIsolatedRun"** %47, align 8
  %49 = icmp eq %"class.blink::NoIsolatedRun"* %48, null
  br i1 %49, label %57, label %50, !prof !4

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 15, i32 0, i32 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %55, label %54, !prof !3

54:                                               ; preds = %50
  store i32 0, i32* %51, align 4
  br label %55

55:                                               ; preds = %54, %50
  %56 = getelementptr inbounds %"class.blink::NoIsolatedRun", %"class.blink::NoIsolatedRun"* %48, i64 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %56) #19
  store %"class.blink::NoIsolatedRun"* null, %"class.blink::NoIsolatedRun"** %47, align 8
  br label %57

57:                                               ; preds = %46, %55
  %58 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %59 = load %"class.blink::TextRunIterator"*, %"class.blink::TextRunIterator"** %58, align 8
  %60 = icmp eq %"class.blink::TextRunIterator"* %59, null
  %61 = bitcast %"class.blink::TextRunIterator"* %59 to i8*
  br i1 %60, label %68, label %62, !prof !4

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 2
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %67, label %66, !prof !3

66:                                               ; preds = %62
  store i32 0, i32* %63, align 4
  br label %67

67:                                               ; preds = %66, %62
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %61) #19
  store %"class.blink::TextRunIterator"* null, %"class.blink::TextRunIterator"** %58, align 8
  br label %68

68:                                               ; preds = %57, %67
  %69 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 3, i32 0
  %70 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %69, align 8
  %71 = icmp eq %"class.blink::BidiContext"* %70, null
  br i1 %71, label %78, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = atomicrmw sub i32* %73, i32 1 acq_rel
  %75 = icmp eq i32 %74, 1
  br i1 %75, label %76, label %78

76:                                               ; preds = %72
  tail call void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"* nonnull %70) #19
  %77 = bitcast %"class.blink::BidiContext"* %70 to i8*
  tail call void @free(i8* %77) #19
  br label %78

78:                                               ; preds = %68, %72, %76
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink10LayoutText26IsAllCollapsibleWhitespaceEv(%"class.blink::LayoutText"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %7, %5 ], [ 0, %1 ]
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = icmp ne i32 %9, 0
  br i1 %13, label %24, label %15

15:                                               ; preds = %8
  br i1 %14, label %16, label %49

16:                                               ; preds = %15
  %17 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 5, i32 0
  %18 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %17, align 8
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 1
  %20 = bitcast %"class.WTF::StringImpl"* %19 to i8*
  %21 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %18, i64 0, i32 0, i32 9
  %22 = bitcast [20 x i8]* %21 to i160*
  %23 = zext i32 %9 to i64
  br label %33

24:                                               ; preds = %8
  br i1 %14, label %25, label %49

25:                                               ; preds = %24
  %26 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 5, i32 0
  %27 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %26, align 8
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 1
  %29 = bitcast %"class.WTF::StringImpl"* %28 to i16*
  %30 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %27, i64 0, i32 0, i32 9
  %31 = bitcast [20 x i8]* %30 to i160*
  %32 = zext i32 %9 to i64
  br label %51

33:                                               ; preds = %46, %16
  %34 = phi i64 [ 0, %16 ], [ %47, %46 ]
  %35 = getelementptr inbounds i8, i8* %20, i64 %34
  %36 = load i8, i8* %35, align 1
  switch i8 %36, label %49 [
    i8 32, label %42
    i8 9, label %42
    i8 10, label %37
  ]

37:                                               ; preds = %33
  %38 = load i160, i160* %22, align 8
  %39 = lshr i160 %38, 12
  %40 = trunc i160 %39 to i32
  %41 = and i32 %40, 127
  switch i32 %41, label %49 [
    i32 16, label %46
    i32 1, label %46
  ]

42:                                               ; preds = %33, %33
  %43 = load i160, i160* %22, align 8
  %44 = and i160 %43, 286720
  %45 = icmp eq i160 %44, 0
  br i1 %45, label %46, label %49

46:                                               ; preds = %37, %37, %42
  %47 = add nuw nsw i64 %34, 1
  %48 = icmp eq i64 %47, %23
  br i1 %48, label %49, label %33

49:                                               ; preds = %42, %33, %37, %46, %55, %51, %60, %64, %15, %24
  %50 = phi i1 [ true, %24 ], [ true, %15 ], [ false, %55 ], [ false, %51 ], [ false, %60 ], [ true, %64 ], [ true, %46 ], [ false, %42 ], [ false, %33 ], [ false, %37 ]
  ret i1 %50

51:                                               ; preds = %64, %25
  %52 = phi i64 [ 0, %25 ], [ %65, %64 ]
  %53 = getelementptr inbounds i16, i16* %29, i64 %52
  %54 = load i16, i16* %53, align 2
  switch i16 %54, label %49 [
    i16 32, label %60
    i16 9, label %60
    i16 10, label %55
  ]

55:                                               ; preds = %51
  %56 = load i160, i160* %31, align 8
  %57 = lshr i160 %56, 12
  %58 = trunc i160 %57 to i32
  %59 = and i32 %58, 127
  switch i32 %59, label %49 [
    i32 16, label %64
    i32 1, label %64
  ]

60:                                               ; preds = %51, %51
  %61 = load i160, i160* %31, align 8
  %62 = and i160 %61, 286720
  %63 = icmp eq i160 %62, 0
  br i1 %63, label %64, label %49

64:                                               ; preds = %55, %55, %60
  %65 = add nuw nsw i64 %52, 1
  %66 = icmp eq i64 %65, %32
  br i1 %66, label %49, label %51
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink10LayoutText39FirstCharacterAfterWhitespaceCollapsingEv(%"class.blink::LayoutText"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.blink::NGInlineCursor", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %7 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %6 to i96*
  %8 = load i96, i96* %7, align 4
  %9 = and i96 %8, 268435456
  %10 = icmp eq i96 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %1
  %12 = tail call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #19
  br label %15

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0
  br label %15

15:                                               ; preds = %11, %13
  %16 = phi %"class.blink::InlineTextBoxList"* [ %12, %11 ], [ %14, %13 ]
  %17 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %17, align 8
  %19 = icmp eq %"class.blink::InlineTextBox"* %18, null
  br i1 %19, label %50, label %20

20:                                               ; preds = %15
  %21 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #19
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %23 = tail call %"class.WTF::StringImpl"* @_ZNK5blink13InlineTextBox7GetTextEv(%"class.blink::InlineTextBox"* nonnull %18) #19
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %48, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %33, label %29

29:                                               ; preds = %25
  %30 = call i32 @_ZNK3WTF6String19CharacterStartingAtEj(%"class.WTF::String"* nonnull %2, i32 0) #19
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %48, label %33

33:                                               ; preds = %25, %29
  %34 = phi i32 [ %30, %29 ], [ 0, %25 ]
  %35 = phi %"class.WTF::StringImpl"* [ %31, %29 ], [ %23, %25 ]
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %33
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %33
  %45 = phi i32 [ %43, %42 ], [ %41, %33 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #19
  br label %48

48:                                               ; preds = %20, %47, %44, %29
  %49 = phi i32 [ %30, %29 ], [ %34, %44 ], [ %34, %47 ], [ 0, %20 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #19
  br label %113

50:                                               ; preds = %15
  %51 = load i96, i96* %7, align 4
  %52 = and i96 %51, 268435456
  %53 = icmp eq i96 %52, 0
  br i1 %53, label %113, label %54

54:                                               ; preds = %50
  %55 = bitcast %"class.blink::NGInlineCursor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %55) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 112, i1 false)
  %56 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %3, i64 0, i32 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 0, i64 81, i1 false) #19
  %57 = bitcast %"class.blink::LayoutBlockFlow"** %56 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 20, i1 false) #19
  call void @_ZN5blink14NGInlineCursor6MoveToERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"* nonnull %3, %"class.blink::LayoutObject"* dereferenceable(88) %5) #19
  %58 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %3, i64 0, i32 0, i32 0
  %59 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %58, align 8
  %60 = icmp eq %"class.blink::NGFragmentItem"* %59, null
  br i1 %60, label %61, label %62

61:                                               ; preds = %54
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %55) #19
  br label %113

62:                                               ; preds = %54
  %63 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #19
  %64 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %65 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %66 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %3, i64 0, i32 0
  %67 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 -86, i64 24, i1 false)
  call void @_ZNK5blink22NGInlineCursorPosition4TextERKNS_14NGInlineCursorE(%"class.WTF::StringView"* nonnull sret %4, %"class.blink::NGInlineCursorPosition"* nonnull %66, %"class.blink::NGInlineCursor"* nonnull dereferenceable(112) %3) #19
  %68 = load i32, i32* %65, align 8
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %111, label %70

70:                                               ; preds = %62
  %71 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 1
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %92, label %77

77:                                               ; preds = %70
  %78 = load atomic i32, i32* %73 monotonic, align 4
  %79 = and i32 %78, 1
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %85, label %81

81:                                               ; preds = %77
  %82 = load i8*, i8** %64, align 8
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i16
  br label %89

85:                                               ; preds = %77
  %86 = bitcast i8** %64 to i16**
  %87 = load i16*, i16** %86, align 8
  %88 = load i16, i16* %87, align 2
  br label %89

89:                                               ; preds = %85, %81
  %90 = phi i16 [ %84, %81 ], [ %88, %85 ]
  %91 = zext i16 %90 to i32
  br label %111

92:                                               ; preds = %70
  %93 = bitcast i8** %64 to i16**
  %94 = load i16*, i16** %93, align 8
  %95 = load i16, i16* %94, align 2
  %96 = zext i16 %95 to i32
  %97 = and i32 %96, 64512
  %98 = icmp ne i32 %97, 55296
  %99 = icmp eq i32 %68, 1
  %100 = or i1 %99, %98
  br i1 %100, label %111, label %101

101:                                              ; preds = %92
  %102 = getelementptr inbounds i16, i16* %94, i64 1
  %103 = load i16, i16* %102, align 2
  %104 = zext i16 %103 to i32
  %105 = and i32 %104, 64512
  %106 = icmp eq i32 %105, 56320
  br i1 %106, label %107, label %111

107:                                              ; preds = %101
  %108 = shl nuw nsw i32 %96, 10
  %109 = add nsw i32 %108, -56613888
  %110 = add nsw i32 %109, %104
  br label %111

111:                                              ; preds = %92, %62, %89, %101, %107
  %112 = phi i32 [ 0, %62 ], [ %91, %89 ], [ %96, %92 ], [ %110, %107 ], [ %96, %101 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #19
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %55) #19
  br label %113

113:                                              ; preds = %50, %61, %111, %48
  %114 = phi i32 [ %112, %111 ], [ %49, %48 ], [ 0, %61 ], [ 0, %50 ]
  ret i32 %114
}

declare %"class.WTF::StringImpl"* @_ZNK5blink13InlineTextBox7GetTextEv(%"class.blink::InlineTextBox"*) local_unnamed_addr #1

declare i32 @_ZNK3WTF6String19CharacterStartingAtEj(%"class.WTF::String"*, i32) local_unnamed_addr #1

declare void @_ZNK5blink22NGInlineCursorPosition4TextERKNS_14NGInlineCursorE(%"class.WTF::StringView"* sret, %"class.blink::NGInlineCursorPosition"*, %"class.blink::NGInlineCursor"* dereferenceable(112)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink10LayoutText38LastCharacterAfterWhitespaceCollapsingEv(%"class.blink::LayoutText"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::NGInlineCursor", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %6 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %5 to i96*
  %7 = load i96, i96* %6, align 4
  %8 = and i96 %7, 268435456
  %9 = icmp eq i96 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %1
  %11 = tail call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #19
  br label %14

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0
  br label %14

14:                                               ; preds = %10, %12
  %15 = phi %"class.blink::InlineTextBoxList"* [ %11, %10 ], [ %13, %12 ]
  %16 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %15, i64 0, i32 0, i32 1
  %17 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %16, align 8
  %18 = icmp eq %"class.blink::InlineTextBox"* %17, null
  br i1 %18, label %90, label %19

19:                                               ; preds = %14
  %20 = tail call %"class.WTF::StringImpl"* @_ZNK5blink13InlineTextBox7GetTextEv(%"class.blink::InlineTextBox"* nonnull %17) #19
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %162, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %76, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  %29 = add i32 %24, -1
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %51, label %34

34:                                               ; preds = %26
  %35 = load atomic i32, i32* %30 monotonic, align 4
  %36 = and i32 %35, 1
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %34
  %39 = zext i32 %29 to i64
  %40 = getelementptr inbounds i8, i8* %28, i64 %39
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i16
  br label %48

43:                                               ; preds = %34
  %44 = bitcast %"class.WTF::StringImpl"* %27 to i16*
  %45 = zext i32 %29 to i64
  %46 = getelementptr inbounds i16, i16* %44, i64 %45
  %47 = load i16, i16* %46, align 2
  br label %48

48:                                               ; preds = %43, %38
  %49 = phi i16 [ %42, %38 ], [ %47, %43 ]
  %50 = zext i16 %49 to i32
  br label %76

51:                                               ; preds = %26
  %52 = bitcast %"class.WTF::StringImpl"* %27 to i16*
  %53 = zext i32 %29 to i64
  %54 = getelementptr inbounds i16, i16* %52, i64 %53
  %55 = load i16, i16* %54, align 2
  %56 = zext i16 %55 to i32
  %57 = and i32 %56, 63488
  %58 = icmp eq i32 %57, 55296
  br i1 %58, label %59, label %76

59:                                               ; preds = %51
  %60 = and i32 %56, 1024
  %61 = icmp eq i32 %60, 0
  %62 = icmp eq i32 %29, 0
  %63 = or i1 %62, %61
  br i1 %63, label %76, label %64

64:                                               ; preds = %59
  %65 = add i32 %24, -2
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds i16, i16* %52, i64 %66
  %68 = load i16, i16* %67, align 2
  %69 = zext i16 %68 to i32
  %70 = and i32 %69, 64512
  %71 = icmp eq i32 %70, 55296
  br i1 %71, label %72, label %76

72:                                               ; preds = %64
  %73 = shl nuw nsw i32 %69, 10
  %74 = add nuw nsw i32 %56, -56613888
  %75 = add nsw i32 %74, %73
  br label %76

76:                                               ; preds = %59, %72, %64, %51, %48, %22
  %77 = phi i32 [ %56, %64 ], [ %75, %72 ], [ %56, %51 ], [ %50, %48 ], [ 0, %22 ], [ %56, %59 ]
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  br i1 %81, label %84, label %86

84:                                               ; preds = %76
  %85 = add i32 %83, -1
  store i32 %85, i32* %82, align 4
  br label %86

86:                                               ; preds = %84, %76
  %87 = phi i32 [ %85, %84 ], [ %83, %76 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %162

89:                                               ; preds = %86
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #19
  br label %162

90:                                               ; preds = %14
  %91 = load i96, i96* %6, align 4
  %92 = and i96 %91, 268435456
  %93 = icmp eq i96 %92, 0
  br i1 %93, label %162, label %94

94:                                               ; preds = %90
  %95 = bitcast %"class.blink::NGInlineCursor"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %95) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %95, i8 -86, i64 112, i1 false)
  %96 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %2, i64 0, i32 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %95, i8 0, i64 81, i1 false) #19
  %97 = bitcast %"class.blink::LayoutBlockFlow"** %96 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %97, i8 0, i64 20, i1 false) #19
  call void @_ZN5blink14NGInlineCursor6MoveToERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"* nonnull %2, %"class.blink::LayoutObject"* dereferenceable(88) %4) #19
  %98 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %2, i64 0, i32 0, i32 0
  %99 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %98, align 8
  %100 = icmp eq %"class.blink::NGFragmentItem"* %99, null
  br i1 %100, label %101, label %102

101:                                              ; preds = %94
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %95) #19
  br label %162

102:                                              ; preds = %94
  %103 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %103) #19
  %104 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %105 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %106 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %2, i64 0, i32 0
  %107 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %107, i8 -86, i64 24, i1 false)
  call void @_ZNK5blink22NGInlineCursorPosition4TextERKNS_14NGInlineCursorE(%"class.WTF::StringView"* nonnull sret %3, %"class.blink::NGInlineCursorPosition"* nonnull %106, %"class.blink::NGInlineCursor"* nonnull dereferenceable(112) %2) #19
  %108 = load i32, i32* %105, align 8
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %160, label %110

110:                                              ; preds = %102
  %111 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  %112 = add i32 %108, -1
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 1
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %137, label %118

118:                                              ; preds = %110
  %119 = load atomic i32, i32* %114 monotonic, align 4
  %120 = and i32 %119, 1
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %128, label %122

122:                                              ; preds = %118
  %123 = load i8*, i8** %104, align 8
  %124 = zext i32 %112 to i64
  %125 = getelementptr inbounds i8, i8* %123, i64 %124
  %126 = load i8, i8* %125, align 1
  %127 = zext i8 %126 to i16
  br label %134

128:                                              ; preds = %118
  %129 = bitcast i8** %104 to i16**
  %130 = load i16*, i16** %129, align 8
  %131 = zext i32 %112 to i64
  %132 = getelementptr inbounds i16, i16* %130, i64 %131
  %133 = load i16, i16* %132, align 2
  br label %134

134:                                              ; preds = %128, %122
  %135 = phi i16 [ %127, %122 ], [ %133, %128 ]
  %136 = zext i16 %135 to i32
  br label %160

137:                                              ; preds = %110
  %138 = bitcast i8** %104 to i16**
  %139 = load i16*, i16** %138, align 8
  %140 = zext i32 %112 to i64
  %141 = getelementptr inbounds i16, i16* %139, i64 %140
  %142 = load i16, i16* %141, align 2
  %143 = zext i16 %142 to i32
  %144 = and i32 %143, 64512
  %145 = icmp ne i32 %144, 56320
  %146 = icmp eq i32 %112, 0
  %147 = or i1 %146, %145
  br i1 %147, label %160, label %148

148:                                              ; preds = %137
  %149 = add i32 %108, -2
  %150 = zext i32 %149 to i64
  %151 = getelementptr inbounds i16, i16* %139, i64 %150
  %152 = load i16, i16* %151, align 2
  %153 = zext i16 %152 to i32
  %154 = and i32 %153, 64512
  %155 = icmp eq i32 %154, 55296
  br i1 %155, label %156, label %160

156:                                              ; preds = %148
  %157 = shl nuw nsw i32 %153, 10
  %158 = add nuw nsw i32 %143, -56613888
  %159 = add nsw i32 %158, %157
  br label %160

160:                                              ; preds = %137, %102, %134, %148, %156
  %161 = phi i32 [ 0, %102 ], [ %136, %134 ], [ %143, %137 ], [ %159, %156 ], [ %143, %148 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %103) #19
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %95) #19
  br label %162

162:                                              ; preds = %90, %89, %86, %19, %101, %160
  %163 = phi i32 [ %161, %160 ], [ 0, %101 ], [ 0, %90 ], [ 0, %19 ], [ %77, %89 ], [ %77, %86 ]
  ret i32 %163
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink10LayoutText19FirstLineBoxTopLeftEv(%"class.blink::LayoutText"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::NGInlineCursor", align 8
  %3 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %5 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %4 to i96*
  %6 = load i96, i96* %5, align 4
  %7 = and i96 %6, 268435456
  %8 = icmp eq i96 %7, 0
  br i1 %8, label %26, label %9

9:                                                ; preds = %1
  %10 = tail call zeroext i1 @_ZNK5blink12LayoutObject25IsFirstInlineFragmentSafeEv(%"class.blink::LayoutObject"* %3) #19
  br i1 %10, label %11, label %80, !prof !4

11:                                               ; preds = %9
  %12 = bitcast %"class.blink::NGInlineCursor"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %12) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 112, i1 false)
  %13 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %2, i64 0, i32 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 81, i1 false) #19
  %14 = bitcast %"class.blink::LayoutBlockFlow"** %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 20, i1 false) #19
  call void @_ZN5blink14NGInlineCursor6MoveToERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"* nonnull %2, %"class.blink::LayoutObject"* dereferenceable(88) %3) #19
  %15 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %2, i64 0, i32 0, i32 0
  %16 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %15, align 8
  %17 = icmp eq %"class.blink::NGFragmentItem"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %16, i64 0, i32 2, i32 0
  %20 = bitcast %"struct.blink::PhysicalOffset"* %19 to i64*
  %21 = load i64, i64* %20, align 4
  %22 = lshr i64 %21, 32
  br label %23

23:                                               ; preds = %11, %18
  %24 = phi i64 [ %21, %18 ], [ 0, %11 ]
  %25 = phi i64 [ %22, %18 ], [ 0, %11 ]
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %12) #19
  br label %80

26:                                               ; preds = %1
  %27 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %28 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %27, align 8
  %29 = icmp eq %"class.blink::InlineTextBox"* %28, null
  br i1 %29, label %80, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %28, i64 0, i32 0
  %32 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %28, i64 0, i32 0, i32 5
  %33 = bitcast %"class.blink::LayoutPoint"* %32 to i64*
  %34 = load i64, i64* %33, align 4
  %35 = trunc i64 %34 to i32
  %36 = lshr i64 %34, 32
  %37 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 5, i32 0
  %38 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %38, i64 0, i32 0, i32 9
  %40 = bitcast [20 x i8]* %39 to i160*
  %41 = load i160, i160* %40, align 8
  %42 = and i160 %41, 15211807202738752817960438464512
  %43 = icmp eq i160 %42, 5070602400912917605986812821504
  br i1 %43, label %44, label %80, !prof !3

44:                                               ; preds = %30
  %45 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %28, i64 0, i32 0, i32 7, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = and i32 %46, 2048
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %28, i64 0, i32 0, i32 6, i32 0
  %51 = load i32, i32* %50, align 8
  br label %54

52:                                               ; preds = %44
  %53 = tail call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* %31) #19
  br label %54

54:                                               ; preds = %49, %52
  %55 = phi i32 [ %51, %49 ], [ %53, %52 ]
  %56 = icmp slt i32 %55, 0
  %57 = select i1 %56, i32 -2147483648, i32 2147483647
  %58 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %35, i32 %55) #19
  %59 = extractvalue { i32, i1 } %58, 1
  %60 = extractvalue { i32, i1 } %58, 0
  %61 = select i1 %59, i32 %57, i32 %60, !prof !3
  %62 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %3, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #19
  %63 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %62, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %64 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %64, i64 0, i32 0, i32 9
  %66 = bitcast [20 x i8]* %65 to i160*
  %67 = load i160, i160* %66, align 8
  %68 = and i160 %67, 15211807202738752817960438464512
  %69 = icmp eq i160 %68, 5070602400912917605986812821504
  br i1 %69, label %70, label %77, !prof !3

70:                                               ; preds = %54
  %71 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %62, i64 0, i32 0, i32 0, i32 0
  %72 = bitcast %"class.blink::LayoutBlock"* %62 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %73 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %72, align 8
  %74 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %73, i64 106
  %75 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %74, align 8
  %76 = tail call i32 %75(%"class.blink::LayoutObject"* %71, i32 %61, i32 0, %"class.blink::LayoutBox"* null) #19
  br label %77

77:                                               ; preds = %54, %70
  %78 = phi i32 [ %76, %70 ], [ %61, %54 ]
  %79 = zext i32 %78 to i64
  br label %80

80:                                               ; preds = %26, %77, %30, %9, %23
  %81 = phi i64 [ %24, %23 ], [ 0, %9 ], [ %79, %77 ], [ %34, %30 ], [ 0, %26 ]
  %82 = phi i64 [ %25, %23 ], [ 0, %9 ], [ %36, %77 ], [ %36, %30 ], [ 0, %26 ]
  %83 = shl i64 %82, 32
  %84 = and i64 %81, 4294967295
  %85 = or i64 %83, %84
  ret i64 %85
}

declare zeroext i1 @_ZNK5blink12LayoutObject25IsFirstInlineFragmentSafeEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink10LayoutText29LogicalStartingPointAndHeightERNS_13LogicalOffsetERNS_10LayoutUnitE(%"class.blink::LayoutText"*, %"struct.blink::LogicalOffset"* nocapture dereferenceable(8), %"class.blink::LayoutUnit"* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::NGInlineCursor", align 8
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"struct.blink::PhysicalOffset"*
  %7 = alloca { i64, i64 }, align 8
  %8 = bitcast { i64, i64 }* %7 to %"struct.blink::PhysicalRect"*
  %9 = alloca %"class.blink::WritingModeConverter", align 4
  %10 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  %11 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %12 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %11 to i96*
  %13 = load i96, i96* %12, align 4
  %14 = and i96 %13, 268435456
  %15 = icmp eq i96 %14, 0
  br i1 %15, label %146, label %16

16:                                               ; preds = %3
  %17 = bitcast %"class.blink::NGInlineCursor"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %17) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 112, i1 false)
  %18 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %4, i64 0, i32 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 81, i1 false) #19
  %19 = bitcast %"class.blink::LayoutBlockFlow"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 20, i1 false) #19
  call void @_ZN5blink14NGInlineCursor6MoveToERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"* nonnull %4, %"class.blink::LayoutObject"* dereferenceable(88) %10) #19
  %20 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %4, i64 0, i32 0, i32 0
  %21 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %20, align 8
  %22 = icmp eq %"class.blink::NGFragmentItem"* %21, null
  br i1 %22, label %145, label %23

23:                                               ; preds = %16
  %24 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #19
  %25 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %21, i64 0, i32 2, i32 0
  %26 = bitcast %"struct.blink::PhysicalOffset"* %25 to i64*
  %27 = load i64, i64* %26, align 4
  store i64 %27, i64* %5, align 8
  %28 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 5, i32 0
  %29 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %29, i64 0, i32 0, i32 9
  %31 = bitcast [20 x i8]* %30 to i160*
  %32 = load i160, i160* %31, align 8
  %33 = and i160 %32, 41553586675481359781061931072225280
  %34 = icmp eq i160 %33, 0
  br i1 %34, label %35, label %69

35:                                               ; preds = %23
  %36 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %6, i64 0, i32 1, i32 0
  %37 = bitcast i64* %5 to i32*
  call void @_ZN5blink14NGInlineCursor29MoveToLastForSameLayoutObjectEv(%"class.blink::NGInlineCursor"* nonnull %4) #19
  %38 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %20, align 8
  %39 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %38, i64 0, i32 2
  %40 = bitcast %"struct.blink::PhysicalRect"* %39 to i64*
  %41 = load i64, i64* %40, align 4
  %42 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %38, i64 0, i32 2, i32 1
  %43 = bitcast %"struct.blink::PhysicalSize"* %42 to i64*
  %44 = load i64, i64* %43, align 4
  %45 = lshr i64 %41, 32
  %46 = trunc i64 %45 to i32
  %47 = lshr i64 %44, 32
  %48 = trunc i64 %47 to i32
  %49 = icmp slt i32 %48, 0
  %50 = select i1 %49, i32 -2147483648, i32 2147483647
  %51 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %46, i32 %48) #19
  %52 = extractvalue { i32, i1 } %51, 1
  %53 = extractvalue { i32, i1 } %51, 0
  %54 = select i1 %52, i32 %50, i32 %53, !prof !3
  %55 = load i32, i32* %36, align 4
  %56 = icmp sgt i32 %55, -1
  %57 = select i1 %56, i32 -2147483648, i32 2147483647
  %58 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %54, i32 %55) #19
  %59 = extractvalue { i32, i1 } %58, 1
  %60 = extractvalue { i32, i1 } %58, 0
  %61 = select i1 %59, i32 %57, i32 %60, !prof !3
  %62 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %2, i64 0, i32 0
  store i32 %61, i32* %62, align 4
  %63 = load i32, i32* %37, align 8
  %64 = bitcast %"struct.blink::LogicalOffset"* %1 to i64*
  %65 = zext i32 %55 to i64
  %66 = shl nuw i64 %65, 32
  %67 = zext i32 %63 to i64
  %68 = or i64 %66, %67
  store i64 %68, i64* %64, align 4
  br label %144

69:                                               ; preds = %23
  %70 = call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %10, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #19
  %71 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %70, i64 0, i32 0, i32 2, i32 1
  %72 = bitcast %"class.blink::LayoutSize"* %71 to i64*
  %73 = load i64, i64* %72, align 4
  %74 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %28, align 8
  %75 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %74, i64 0, i32 0, i32 9
  %76 = bitcast [20 x i8]* %75 to i160*
  %77 = load i160, i160* %76, align 8
  %78 = lshr i160 %77, 102
  %79 = trunc i160 %78 to i16
  %80 = and i16 %79, 3
  %81 = lshr i160 %77, 107
  %82 = trunc i160 %81 to i16
  %83 = and i16 %82, 256
  %84 = or i16 %83, %80
  %85 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %20, align 8
  %86 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %85, i64 0, i32 2, i32 1
  %87 = bitcast %"struct.blink::PhysicalSize"* %86 to i64*
  %88 = load i64, i64* %87, align 4
  %89 = call i64 @_ZNK5blink14PhysicalOffset16ConvertToLogicalENS_20WritingDirectionModeENS_12PhysicalSizeES2_(%"struct.blink::PhysicalOffset"* nonnull %6, i16 %84, i64 %73, i64 %88) #19
  %90 = bitcast %"struct.blink::LogicalOffset"* %1 to i64*
  store i64 %89, i64* %90, align 4
  call void @_ZN5blink14NGInlineCursor29MoveToLastForSameLayoutObjectEv(%"class.blink::NGInlineCursor"* nonnull %4) #19
  %91 = bitcast { i64, i64 }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %91) #19
  %92 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %93 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %20, align 8
  %94 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %93, i64 0, i32 2
  %95 = bitcast %"struct.blink::PhysicalRect"* %94 to i64*
  %96 = load i64, i64* %95, align 4
  %97 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %93, i64 0, i32 2, i32 1
  %98 = bitcast %"struct.blink::PhysicalSize"* %97 to i64*
  %99 = load i64, i64* %98, align 4
  %100 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  store i64 %96, i64* %100, align 8
  store i64 %99, i64* %92, align 8
  %101 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %9, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %101) #19
  %102 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %28, align 8
  %103 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %102, i64 0, i32 0, i32 9
  %104 = bitcast [20 x i8]* %103 to i160*
  %105 = load i160, i160* %104, align 8
  %106 = lshr i160 %105, 102
  %107 = trunc i160 %106 to i16
  %108 = and i16 %107, 3
  %109 = lshr i160 %105, 107
  %110 = trunc i160 %109 to i16
  %111 = and i16 %110, 256
  %112 = or i16 %111, %108
  %113 = bitcast %"class.blink::WritingModeConverter"* %9 to i16*
  store i16 %112, i16* %113, align 4
  %114 = getelementptr inbounds %"class.blink::WritingModeConverter", %"class.blink::WritingModeConverter"* %9, i64 0, i32 1
  %115 = bitcast %"struct.blink::PhysicalSize"* %114 to i64*
  store i64 %73, i64* %115, align 4
  %116 = or i16 %108, %111
  %117 = icmp eq i16 %116, 0
  br i1 %117, label %122, label %118

118:                                              ; preds = %69
  %119 = call { i64, i64 } @_ZNK5blink20WritingModeConverter13SlowToLogicalERKNS_12PhysicalRectE(%"class.blink::WritingModeConverter"* nonnull %9, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %8) #19
  %120 = extractvalue { i64, i64 } %119, 0
  %121 = extractvalue { i64, i64 } %119, 1
  br label %122

122:                                              ; preds = %69, %118
  %123 = phi i64 [ %121, %118 ], [ %99, %69 ]
  %124 = phi i64 [ %120, %118 ], [ %96, %69 ]
  %125 = lshr i64 %124, 32
  %126 = trunc i64 %125 to i32
  %127 = lshr i64 %123, 32
  %128 = trunc i64 %127 to i32
  %129 = icmp slt i32 %128, 0
  %130 = select i1 %129, i32 -2147483648, i32 2147483647
  %131 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %126, i32 %128) #19
  %132 = extractvalue { i32, i1 } %131, 1
  %133 = extractvalue { i32, i1 } %131, 0
  %134 = select i1 %132, i32 %130, i32 %133, !prof !3
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %101) #19
  %135 = getelementptr inbounds %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset"* %1, i64 0, i32 1, i32 0
  %136 = load i32, i32* %135, align 4
  %137 = icmp sgt i32 %136, -1
  %138 = select i1 %137, i32 -2147483648, i32 2147483647
  %139 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %134, i32 %136) #19
  %140 = extractvalue { i32, i1 } %139, 1
  %141 = extractvalue { i32, i1 } %139, 0
  %142 = select i1 %140, i32 %138, i32 %141, !prof !3
  %143 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %2, i64 0, i32 0
  store i32 %142, i32* %143, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %91) #19
  br label %144

144:                                              ; preds = %122, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #19
  br label %145

145:                                              ; preds = %16, %144
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %17) #19
  br label %205

146:                                              ; preds = %3
  %147 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %148 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %147, align 8
  %149 = icmp eq %"class.blink::InlineTextBox"* %148, null
  br i1 %149, label %205, label %150

150:                                              ; preds = %146
  %151 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %148, i64 0, i32 0, i32 7, i32 0
  %152 = load i32, i32* %151, align 4
  %153 = and i32 %152, 2048
  %154 = icmp eq i32 %153, 0
  %155 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %148, i64 0, i32 0, i32 5, i32 0, i32 0
  %156 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %148, i64 0, i32 0, i32 5, i32 1, i32 0
  %157 = select i1 %154, i32* %156, i32* %155
  %158 = load i32, i32* %157, align 4
  %159 = select i1 %154, i32* %155, i32* %156
  %160 = load i32, i32* %159, align 4
  %161 = bitcast %"struct.blink::LogicalOffset"* %1 to i64*
  %162 = zext i32 %160 to i64
  %163 = shl nuw i64 %162, 32
  %164 = zext i32 %158 to i64
  %165 = or i64 %163, %164
  store i64 %165, i64* %161, align 4
  %166 = load i96, i96* %12, align 4
  %167 = and i96 %166, 268435456
  %168 = icmp eq i96 %167, 0
  br i1 %168, label %171, label %169

169:                                              ; preds = %150
  %170 = tail call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #19
  br label %173

171:                                              ; preds = %150
  %172 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0
  br label %173

173:                                              ; preds = %169, %171
  %174 = phi %"class.blink::InlineTextBoxList"* [ %170, %169 ], [ %172, %171 ]
  %175 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %174, i64 0, i32 0, i32 1
  %176 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %175, align 8
  %177 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %176, i64 0, i32 0
  %178 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %176, i64 0, i32 0, i32 7, i32 0
  %179 = load i32, i32* %178, align 4
  %180 = and i32 %179, 2048
  %181 = icmp eq i32 %180, 0
  %182 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %176, i64 0, i32 0, i32 5, i32 1, i32 0
  %183 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %176, i64 0, i32 0, i32 5, i32 0, i32 0
  %184 = select i1 %181, i32* %183, i32* %182
  %185 = load i32, i32* %184, align 4
  %186 = tail call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* %177) #19
  %187 = icmp slt i32 %186, 0
  %188 = select i1 %187, i32 -2147483648, i32 2147483647
  %189 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %185, i32 %186) #19
  %190 = extractvalue { i32, i1 } %189, 1
  %191 = extractvalue { i32, i1 } %189, 0
  %192 = select i1 %190, i32 %188, i32 %191, !prof !3
  %193 = load i32, i32* %151, align 4
  %194 = and i32 %193, 2048
  %195 = icmp eq i32 %194, 0
  %196 = select i1 %195, i32* %155, i32* %156
  %197 = load i32, i32* %196, align 4
  %198 = icmp sgt i32 %197, -1
  %199 = select i1 %198, i32 -2147483648, i32 2147483647
  %200 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %192, i32 %197) #19
  %201 = extractvalue { i32, i1 } %200, 1
  %202 = extractvalue { i32, i1 } %200, 0
  %203 = select i1 %201, i32 %199, i32 %202, !prof !3
  %204 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %2, i64 0, i32 0
  store i32 %203, i32* %204, align 4
  br label %205

205:                                              ; preds = %173, %146, %145
  ret void
}

declare void @_ZN5blink14NGInlineCursor29MoveToLastForSameLayoutObjectEv(%"class.blink::NGInlineCursor"*) local_unnamed_addr #1

declare i64 @_ZNK5blink14PhysicalOffset16ConvertToLogicalENS_20WritingDirectionModeENS_12PhysicalSizeES2_(%"struct.blink::PhysicalOffset"*, i16, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink10LayoutText16PhysicalAreaSizeEv(%"class.blink::LayoutText"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::NGInlineCursor", align 8
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to { i64, i64 }*
  %5 = bitcast <2 x i64>* %3 to %"struct.blink::PhysicalRect"*
  %6 = alloca <2 x i64>, align 16
  %7 = bitcast <2 x i64>* %6 to %"struct.blink::PhysicalRect"*
  %8 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %9 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %8 to i96*
  %10 = load i96, i96* %9, align 4
  %11 = and i96 %10, 268435456
  %12 = icmp eq i96 %11, 0
  br i1 %12, label %53, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  %15 = bitcast %"class.blink::NGInlineCursor"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %15) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 112, i1 false)
  %16 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %2, i64 0, i32 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 81, i1 false) #19
  %17 = bitcast %"class.blink::LayoutBlockFlow"** %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 20, i1 false) #19
  call void @_ZN5blink14NGInlineCursor6MoveToERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"* nonnull %2, %"class.blink::LayoutObject"* dereferenceable(88) %14) #19
  %18 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %2, i64 0, i32 0, i32 0
  %19 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %18, align 8
  %20 = icmp eq %"class.blink::NGFragmentItem"* %19, null
  br i1 %20, label %51, label %21

21:                                               ; preds = %13
  %22 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #19
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %24 = bitcast i64* %23 to i32*
  %25 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %5, i64 0, i32 1, i32 1, i32 0
  %26 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %19, i64 0, i32 2
  %27 = bitcast %"struct.blink::PhysicalRect"* %26 to <2 x i64>*
  %28 = load <2 x i64>, <2 x i64>* %27, align 4
  store <2 x i64> %28, <2 x i64>* %3, align 16
  call void @_ZN5blink14NGInlineCursor29MoveToLastForSameLayoutObjectEv(%"class.blink::NGInlineCursor"* nonnull %2) #19
  %29 = bitcast <2 x i64>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #19
  %30 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %18, align 8
  %31 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %30, i64 0, i32 2
  %32 = bitcast %"struct.blink::PhysicalRect"* %31 to <2 x i64>*
  %33 = load <2 x i64>, <2 x i64>* %32, align 4
  store <2 x i64> %33, <2 x i64>* %6, align 16
  call void @_ZN5blink12PhysicalRect5UniteERKS0_(%"struct.blink::PhysicalRect"* nonnull %5, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %7) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #19
  %34 = load i32, i32* %24, align 8
  %35 = load i32, i32* %25, align 4
  %36 = sext i32 %34 to i64
  %37 = sext i32 %35 to i64
  %38 = mul nsw i64 %37, %36
  %39 = sdiv i64 %38, 64
  %40 = ashr i64 %39, 32
  %41 = trunc i64 %40 to i32
  %42 = trunc i64 %39 to i32
  %43 = ashr i32 %42, 31
  %44 = icmp eq i32 %43, %41
  br i1 %44, label %49, label %45

45:                                               ; preds = %21
  %46 = xor i32 %35, %34
  %47 = lshr i32 %46, 31
  %48 = add nuw i32 %47, 2147483647
  br label %49

49:                                               ; preds = %21, %45
  %50 = phi i32 [ %42, %21 ], [ %48, %45 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #19
  br label %51

51:                                               ; preds = %13, %49
  %52 = phi i32 [ %50, %49 ], [ 0, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %15) #19
  br label %138

53:                                               ; preds = %1
  %54 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %55 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %54, align 8
  %56 = icmp eq %"class.blink::InlineTextBox"* %55, null
  br i1 %56, label %138, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %59 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %58, align 8
  %60 = icmp eq %"class.blink::InlineTextBox"* %59, null
  br i1 %60, label %138, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %55, i64 0, i32 0, i32 7, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = and i32 %63, 2048
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %55, i64 0, i32 0, i32 5, i32 0, i32 0
  %67 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %55, i64 0, i32 0, i32 5, i32 1, i32 0
  %68 = select i1 %65, i32* %67, i32* %66
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %55, i64 0, i32 0, i32 6, i32 0
  %71 = load i32, i32* %70, align 8
  %72 = icmp slt i32 %71, 0
  %73 = select i1 %72, i32 -2147483648, i32 2147483647
  %74 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %69, i32 %71) #19
  %75 = extractvalue { i32, i1 } %74, 1
  %76 = extractvalue { i32, i1 } %74, 0
  %77 = select i1 %75, i32 %73, i32 %76
  %78 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %59, i64 0, i32 0
  %79 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %59, i64 0, i32 0, i32 7, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = and i32 %80, 2048
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %59, i64 0, i32 0, i32 5, i32 0, i32 0
  %84 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %59, i64 0, i32 0, i32 5, i32 1, i32 0
  %85 = select i1 %82, i32* %84, i32* %83
  %86 = load i32, i32* %85, align 4
  %87 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %59, i64 0, i32 0, i32 6, i32 0
  %88 = load i32, i32* %87, align 8
  %89 = icmp slt i32 %88, 0
  %90 = select i1 %89, i32 -2147483648, i32 2147483647
  %91 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %86, i32 %88) #19
  %92 = extractvalue { i32, i1 } %91, 1
  %93 = extractvalue { i32, i1 } %91, 0
  %94 = select i1 %92, i32 %90, i32 %93, !prof !3
  %95 = icmp slt i32 %77, %94
  %96 = icmp slt i32 %86, %69
  %97 = select i1 %95, i32 %94, i32 %77
  %98 = select i1 %96, i32 %86, i32 %69
  %99 = icmp sgt i32 %98, -1
  %100 = select i1 %99, i32 -2147483648, i32 2147483647
  %101 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %97, i32 %98) #19
  %102 = extractvalue { i32, i1 } %101, 1
  %103 = extractvalue { i32, i1 } %101, 0
  %104 = select i1 %102, i32 %100, i32 %103, !prof !3
  %105 = select i1 %82, i32* %83, i32* %84
  %106 = load i32, i32* %105, align 4
  %107 = tail call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* %78) #19
  %108 = icmp slt i32 %107, 0
  %109 = select i1 %108, i32 -2147483648, i32 2147483647
  %110 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %106, i32 %107) #19
  %111 = extractvalue { i32, i1 } %110, 1
  %112 = extractvalue { i32, i1 } %110, 0
  %113 = select i1 %111, i32 %109, i32 %112, !prof !3
  %114 = load i32, i32* %62, align 4
  %115 = and i32 %114, 2048
  %116 = icmp eq i32 %115, 0
  %117 = select i1 %116, i32* %66, i32* %67
  %118 = load i32, i32* %117, align 4
  %119 = icmp sgt i32 %118, -1
  %120 = select i1 %119, i32 -2147483648, i32 2147483647
  %121 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %113, i32 %118) #19
  %122 = extractvalue { i32, i1 } %121, 1
  %123 = extractvalue { i32, i1 } %121, 0
  %124 = select i1 %122, i32 %120, i32 %123, !prof !3
  %125 = sext i32 %104 to i64
  %126 = sext i32 %124 to i64
  %127 = mul nsw i64 %126, %125
  %128 = sdiv i64 %127, 64
  %129 = ashr i64 %128, 32
  %130 = trunc i64 %129 to i32
  %131 = trunc i64 %128 to i32
  %132 = ashr i32 %131, 31
  %133 = icmp eq i32 %132, %130
  br i1 %133, label %138, label %134

134:                                              ; preds = %61
  %135 = xor i32 %124, %104
  %136 = lshr i32 %135, 31
  %137 = add nuw i32 %136, 2147483647
  br label %138

138:                                              ; preds = %53, %57, %134, %61, %51
  %139 = phi i32 [ %52, %51 ], [ %137, %134 ], [ %131, %61 ], [ 0, %57 ], [ 0, %53 ]
  ret i32 %139
}

declare void @_ZN5blink12PhysicalRect5UniteERKS0_(%"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink10LayoutText19PhysicalRightOffsetEv(%"class.blink::LayoutText"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::NGInlineCursor", align 8
  %3 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = and i96 %5, 268435456
  %7 = icmp eq i96 %6, 0
  br i1 %7, label %33, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  %10 = bitcast %"class.blink::NGInlineCursor"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %10) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 112, i1 false)
  %11 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %2, i64 0, i32 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 81, i1 false) #19
  %12 = bitcast %"class.blink::LayoutBlockFlow"** %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 20, i1 false) #19
  call void @_ZN5blink14NGInlineCursor6MoveToERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"* nonnull %2, %"class.blink::LayoutObject"* dereferenceable(88) %9) #19
  %13 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %2, i64 0, i32 0, i32 0
  %14 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %13, align 8
  %15 = icmp eq %"class.blink::NGFragmentItem"* %14, null
  br i1 %15, label %31, label %16

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %14, i64 0, i32 2
  %18 = bitcast %"struct.blink::PhysicalRect"* %17 to i64*
  %19 = load i64, i64* %18, align 4
  %20 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %14, i64 0, i32 2, i32 1
  %21 = bitcast %"struct.blink::PhysicalSize"* %20 to i64*
  %22 = load i64, i64* %21, align 4
  %23 = trunc i64 %19 to i32
  %24 = trunc i64 %22 to i32
  %25 = icmp slt i32 %24, 0
  %26 = select i1 %25, i32 -2147483648, i32 2147483647
  %27 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %23, i32 %24) #19
  %28 = extractvalue { i32, i1 } %27, 1
  %29 = extractvalue { i32, i1 } %27, 0
  %30 = select i1 %28, i32 %26, i32 %29, !prof !3
  br label %31

31:                                               ; preds = %8, %16
  %32 = phi i32 [ %30, %16 ], [ 0, %8 ]
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %10) #19
  br label %96

33:                                               ; preds = %1
  %34 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %35 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %34, align 8
  %36 = icmp eq %"class.blink::InlineTextBox"* %35, null
  br i1 %36, label %96, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %39 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %38, align 8
  %40 = icmp eq %"class.blink::InlineTextBox"* %39, null
  br i1 %40, label %96, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %35, i64 0, i32 0
  %43 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %35, i64 0, i32 0, i32 5, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %35, i64 0, i32 0, i32 7, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = and i32 %46, 2048
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %35, i64 0, i32 0, i32 6, i32 0
  %51 = load i32, i32* %50, align 8
  br label %57

52:                                               ; preds = %41
  %53 = tail call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* %42) #19
  %54 = load i32, i32* %45, align 4
  %55 = and i32 %54, 2048
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %49, %52
  %58 = phi i32 [ %51, %49 ], [ %53, %52 ]
  %59 = tail call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* %42) #19
  br label %60

60:                                               ; preds = %52, %57
  %61 = phi i32 [ %53, %52 ], [ %58, %57 ]
  %62 = icmp slt i32 %61, 0
  %63 = select i1 %62, i32 -2147483648, i32 2147483647
  %64 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %44, i32 %61) #19
  %65 = extractvalue { i32, i1 } %64, 1
  %66 = extractvalue { i32, i1 } %64, 0
  %67 = select i1 %65, i32 %63, i32 %66, !prof !3
  %68 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %39, i64 0, i32 0
  %69 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %39, i64 0, i32 0, i32 5, i32 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %39, i64 0, i32 0, i32 7, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = and i32 %72, 2048
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %78, label %75

75:                                               ; preds = %60
  %76 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %39, i64 0, i32 0, i32 6, i32 0
  %77 = load i32, i32* %76, align 8
  br label %83

78:                                               ; preds = %60
  %79 = tail call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* %68) #19
  %80 = load i32, i32* %71, align 4
  %81 = and i32 %80, 2048
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %86, label %83

83:                                               ; preds = %75, %78
  %84 = phi i32 [ %77, %75 ], [ %79, %78 ]
  %85 = tail call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* %68) #19
  br label %86

86:                                               ; preds = %78, %83
  %87 = phi i32 [ %79, %78 ], [ %84, %83 ]
  %88 = icmp slt i32 %87, 0
  %89 = select i1 %88, i32 -2147483648, i32 2147483647
  %90 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %70, i32 %87) #19
  %91 = extractvalue { i32, i1 } %90, 1
  %92 = extractvalue { i32, i1 } %90, 0
  %93 = select i1 %91, i32 %89, i32 %92, !prof !3
  %94 = icmp slt i32 %67, %93
  %95 = select i1 %94, i32 %93, i32 %67
  br label %96

96:                                               ; preds = %37, %33, %86, %31
  %97 = phi i32 [ %32, %31 ], [ %95, %86 ], [ 0, %33 ], [ 0, %37 ]
  ret i32 %97
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink10LayoutText18CanOptimizeSetTextEv(%"class.blink::LayoutText"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::Length", align 4
  %3 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 7
  %4 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %3, align 8
  %5 = icmp eq %"class.blink::LayoutObject"* %4, null
  br i1 %5, label %215, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::LayoutObject"* %4 to i1 (%"class.blink::LayoutObject"*)***
  %8 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %8, i64 24
  %10 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::LayoutObject"* nonnull %4) #19
  %12 = bitcast %"class.blink::LayoutObject"* %4 to %"class.blink::LayoutBlockFlow"*
  br i1 %11, label %13, label %215

13:                                               ; preds = %6
  %14 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %3, align 8
  %15 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %14, i64 0, i32 5, i32 0
  %16 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %16, i64 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %18, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %20, i64 0, i32 2, i32 0, i32 0
  %22 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %22, i64 0, i32 45
  %24 = load i32, i32* %23, align 4
  %25 = and i32 %24, 1
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %215, label %27

27:                                               ; preds = %13
  %28 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %14, i64 0, i32 4
  %29 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %28 to i96*
  %30 = load i96, i96* %29, align 4
  %31 = and i96 %30, 1207959552
  %32 = icmp eq i96 %31, 134217728
  br i1 %32, label %215, label %33

33:                                               ; preds = %27
  %34 = bitcast %"class.blink::LayoutObject"* %14 to i1 (%"class.blink::LayoutObject"*, i32)***
  %35 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %34, align 8
  %36 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %35, i64 92
  %37 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %36, align 8
  %38 = tail call zeroext i1 %37(%"class.blink::LayoutObject"* %14, i32 43) #19
  br i1 %38, label %215, label %39

39:                                               ; preds = %33
  %40 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %34, align 8
  %41 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %40, i64 92
  %42 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %41, align 8
  %43 = tail call zeroext i1 %42(%"class.blink::LayoutObject"* %14, i32 46) #19
  br i1 %43, label %64, label %44

44:                                               ; preds = %39
  %45 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %34, align 8
  %46 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %45, i64 92
  %47 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %46, align 8
  %48 = tail call zeroext i1 %47(%"class.blink::LayoutObject"* %14, i32 48) #19
  br i1 %48, label %64, label %49

49:                                               ; preds = %44
  %50 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %34, align 8
  %51 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %50, i64 92
  %52 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %51, align 8
  %53 = tail call zeroext i1 %52(%"class.blink::LayoutObject"* %14, i32 45) #19
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  %55 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %34, align 8
  %56 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %55, i64 92
  %57 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %56, align 8
  %58 = tail call zeroext i1 %57(%"class.blink::LayoutObject"* %14, i32 49) #19
  br i1 %58, label %64, label %59

59:                                               ; preds = %54
  %60 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %34, align 8
  %61 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %60, i64 92
  %62 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %61, align 8
  %63 = tail call zeroext i1 %62(%"class.blink::LayoutObject"* %14, i32 50) #19
  br i1 %63, label %64, label %70

64:                                               ; preds = %39, %44, %49, %54, %59
  %65 = bitcast %"class.blink::LayoutObject"* %14 to i1 (%"class.blink::LayoutObject"*)***
  %66 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %65, align 8
  %67 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %66, i64 24
  %68 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %67, align 8
  %69 = tail call zeroext i1 %68(%"class.blink::LayoutObject"* %14) #19
  br i1 %69, label %70, label %215

70:                                               ; preds = %59, %64
  %71 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %3, align 8
  %72 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %71, i64 0, i32 5, i32 0
  %73 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %73, i64 0, i32 0, i32 3, i32 0, i32 0
  %75 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %75, i64 0, i32 2, i32 0, i32 0
  %77 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %77, i64 0, i32 2, i32 0, i32 0
  %79 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %79, i64 0, i32 45
  %81 = load i32, i32* %80, align 4
  %82 = and i32 %81, 24
  %83 = icmp eq i32 %82, 24
  br i1 %83, label %84, label %215

84:                                               ; preds = %70
  %85 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %71, i64 0, i32 4
  %86 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %85 to i96*
  %87 = load i96, i96* %86, align 4
  %88 = and i96 %87, 1207959552
  %89 = icmp eq i96 %88, 134217728
  br i1 %89, label %215, label %90

90:                                               ; preds = %84
  %91 = bitcast %"class.blink::LayoutObject"* %71 to i1 (%"class.blink::LayoutObject"*, i32)***
  %92 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %91, align 8
  %93 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %92, i64 92
  %94 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %93, align 8
  %95 = tail call zeroext i1 %94(%"class.blink::LayoutObject"* %71, i32 43) #19
  br i1 %95, label %215, label %96

96:                                               ; preds = %90
  %97 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %91, align 8
  %98 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %97, i64 92
  %99 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %98, align 8
  %100 = tail call zeroext i1 %99(%"class.blink::LayoutObject"* %71, i32 46) #19
  br i1 %100, label %121, label %101

101:                                              ; preds = %96
  %102 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %91, align 8
  %103 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %102, i64 92
  %104 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %103, align 8
  %105 = tail call zeroext i1 %104(%"class.blink::LayoutObject"* %71, i32 48) #19
  br i1 %105, label %121, label %106

106:                                              ; preds = %101
  %107 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %91, align 8
  %108 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %107, i64 92
  %109 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %108, align 8
  %110 = tail call zeroext i1 %109(%"class.blink::LayoutObject"* %71, i32 45) #19
  br i1 %110, label %121, label %111

111:                                              ; preds = %106
  %112 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %91, align 8
  %113 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %112, i64 92
  %114 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %113, align 8
  %115 = tail call zeroext i1 %114(%"class.blink::LayoutObject"* %71, i32 49) #19
  br i1 %115, label %121, label %116

116:                                              ; preds = %111
  %117 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %91, align 8
  %118 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %117, i64 92
  %119 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %118, align 8
  %120 = tail call zeroext i1 %119(%"class.blink::LayoutObject"* %71, i32 50) #19
  br i1 %120, label %121, label %126

121:                                              ; preds = %116, %111, %106, %101, %96
  %122 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %91, align 8
  %123 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %122, i64 92
  %124 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %123, align 8
  %125 = tail call zeroext i1 %124(%"class.blink::LayoutObject"* %71, i32 45) #19
  br i1 %125, label %126, label %215

126:                                              ; preds = %116, %121
  %127 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %91, align 8
  %128 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %127, i64 92
  %129 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %128, align 8
  %130 = tail call zeroext i1 %129(%"class.blink::LayoutObject"* %71, i32 44) #19
  br i1 %130, label %215, label %131

131:                                              ; preds = %126
  %132 = tail call zeroext i1 @_ZNK5blink15LayoutBlockFlow29ShouldTruncateOverflowingTextEv(%"class.blink::LayoutBlockFlow"* nonnull %12) #19
  br i1 %132, label %215, label %133

133:                                              ; preds = %131
  %134 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 8
  %135 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %134, align 8
  %136 = icmp eq %"class.blink::LayoutObject"* %135, null
  br i1 %136, label %137, label %215

137:                                              ; preds = %133
  %138 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 9
  %139 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %138, align 8
  %140 = icmp eq %"class.blink::LayoutObject"* %139, null
  br i1 %140, label %141, label %215

141:                                              ; preds = %137
  %142 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %143 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %142 to i96*
  %144 = load i96, i96* %143, align 4
  %145 = and i96 %144, 268435456
  %146 = icmp eq i96 %145, 0
  br i1 %146, label %149, label %147

147:                                              ; preds = %141
  %148 = tail call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #19
  br label %151

149:                                              ; preds = %141
  %150 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0
  br label %151

151:                                              ; preds = %147, %149
  %152 = phi %"class.blink::InlineTextBoxList"* [ %148, %147 ], [ %150, %149 ]
  %153 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %152, i64 0, i32 0, i32 0
  %154 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %153, align 8
  %155 = icmp eq %"class.blink::InlineTextBox"* %154, null
  br i1 %155, label %215, label %156

156:                                              ; preds = %151
  %157 = load i96, i96* %143, align 4
  %158 = and i96 %157, 268435456
  %159 = icmp eq i96 %158, 0
  br i1 %159, label %163, label %160

160:                                              ; preds = %156
  %161 = tail call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #19
  %162 = load i96, i96* %143, align 4
  br label %165

163:                                              ; preds = %156
  %164 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0
  br label %165

165:                                              ; preds = %160, %163
  %166 = phi i96 [ %162, %160 ], [ %157, %163 ]
  %167 = phi %"class.blink::InlineTextBoxList"* [ %161, %160 ], [ %164, %163 ]
  %168 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %167, i64 0, i32 0, i32 0
  %169 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %168, align 8
  %170 = and i96 %166, 268435456
  %171 = icmp eq i96 %170, 0
  br i1 %171, label %174, label %172

172:                                              ; preds = %165
  %173 = tail call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #19
  br label %176

174:                                              ; preds = %165
  %175 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0
  br label %176

176:                                              ; preds = %172, %174
  %177 = phi %"class.blink::InlineTextBoxList"* [ %173, %172 ], [ %175, %174 ]
  %178 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %177, i64 0, i32 0, i32 1
  %179 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %178, align 8
  %180 = icmp eq %"class.blink::InlineTextBox"* %169, %179
  br i1 %180, label %181, label %215

181:                                              ; preds = %176
  %182 = bitcast %"class.blink::Length"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %182) #19
  %183 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 5, i32 0
  %184 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %183, align 8
  call void @_ZNK5blink13ComputedStyle10LineHeightEv(%"class.blink::Length"* nonnull sret %2, %"class.blink::ComputedStyle"* %184) #19
  %185 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %2, i64 0, i32 2
  %186 = load i8, i8* %185, align 1
  switch i8 %186, label %187 [
    i8 12, label %197
    i8 8, label %197
  ]

187:                                              ; preds = %181
  %188 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %2, i64 0, i32 3
  %189 = load i8, i8* %188, align 2, !range !2
  %190 = icmp eq i8 %189, 0
  %191 = bitcast %"class.blink::Length"* %2 to float*
  %192 = load float, float* %191, align 4
  %193 = bitcast float %192 to i32
  %194 = sitofp i32 %193 to float
  %195 = select i1 %190, float %194, float %192
  %196 = fcmp olt float %195, 0.000000e+00
  br i1 %196, label %213, label %197

197:                                              ; preds = %181, %181, %187
  %198 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %183, align 8
  %199 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %198, i64 0, i32 0, i32 9
  %200 = bitcast [20 x i8]* %199 to i160*
  %201 = load i160, i160* %200, align 8
  %202 = and i160 %201, 41538374868278621028243970633760768
  %203 = icmp eq i160 %202, 0
  br i1 %203, label %204, label %208

204:                                              ; preds = %197
  %205 = call i32 @_ZNK5blink13ComputedStyle12GetTextAlignEb(%"class.blink::ComputedStyle"* %198, i1 zeroext true) #19
  %206 = icmp ne i32 %205, 3
  %207 = load i8, i8* %185, align 1
  br label %208

208:                                              ; preds = %197, %204
  %209 = phi i8 [ %207, %204 ], [ %186, %197 ]
  %210 = phi i1 [ %206, %204 ], [ false, %197 ]
  %211 = icmp eq i8 %209, 8
  br i1 %211, label %212, label %213

212:                                              ; preds = %208
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %2) #19
  br label %213

213:                                              ; preds = %187, %208, %212
  %214 = phi i1 [ %210, %208 ], [ %210, %212 ], [ false, %187 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %182) #19
  br label %215

215:                                              ; preds = %126, %6, %84, %90, %121, %70, %27, %33, %13, %1, %64, %151, %176, %137, %133, %131, %213
  %216 = phi i1 [ %214, %213 ], [ false, %131 ], [ false, %133 ], [ false, %137 ], [ false, %176 ], [ false, %151 ], [ false, %126 ], [ false, %64 ], [ false, %6 ], [ false, %1 ], [ false, %13 ], [ false, %33 ], [ false, %27 ], [ false, %70 ], [ false, %121 ], [ false, %90 ], [ false, %84 ]
  ret i1 %216
}

declare zeroext i1 @_ZNK5blink15LayoutBlockFlow29ShouldTruncateOverflowingTextEv(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #1

declare void @_ZNK5blink13ComputedStyle10LineHeightEv(%"class.blink::Length"* sret, %"class.blink::ComputedStyle"*) local_unnamed_addr #1

declare i32 @_ZNK5blink13ComputedStyle12GetTextAlignEb(%"class.blink::ComputedStyle"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink10LayoutText26SetFirstTextBoxLogicalLeftEf(%"class.blink::LayoutText"*, float) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  %4 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %3, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #19
  %5 = tail call i32 @_ZNK5blink11LayoutBlock27LogicalLeftOffsetForContentEv(%"class.blink::LayoutBlock"* %4)
  %6 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %3, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #19
  %7 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %6, i64 0, i32 0
  %8 = tail call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %7)
  %9 = sitofp i32 %8 to float
  %10 = fmul float %9, 1.562500e-02
  %11 = fcmp ogt float %10, %1
  br i1 %11, label %12, label %43

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 5, i32 0
  %14 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %13, align 8
  %15 = tail call i32 @_ZNK5blink13ComputedStyle12GetTextAlignEb(%"class.blink::ComputedStyle"* %14, i1 zeroext true) #19
  switch i32 %15, label %43 [
    i32 6, label %29
    i32 2, label %29
    i32 8, label %16
    i32 5, label %16
    i32 1, label %16
  ]

16:                                               ; preds = %12, %12, %12
  %17 = fsub float %10, %1
  %18 = sitofp i32 %5 to float
  %19 = fmul float %18, 1.562500e-02
  %20 = fadd float %19, %17
  %21 = fmul float %20, 6.400000e+01
  %22 = fcmp ult float %21, 0xC1E0000000000000
  %23 = fcmp ugt float %21, 0x41DFFFFFE0000000
  %24 = fcmp ogt float %21, 0xC1E0000000000000
  %25 = select i1 %24, float %21, float 0xC1E0000000000000
  %26 = fptosi float %25 to i32
  %27 = select i1 %22, i32 0, i32 2147483647
  %28 = select i1 %23, i32 %27, i32 %26
  br label %43

29:                                               ; preds = %12, %12
  %30 = fsub float %10, %1
  %31 = fmul float %30, 5.000000e-01
  %32 = sitofp i32 %5 to float
  %33 = fmul float %32, 1.562500e-02
  %34 = fadd float %33, %31
  %35 = fmul float %34, 6.400000e+01
  %36 = fcmp ult float %35, 0xC1E0000000000000
  %37 = fcmp ugt float %35, 0x41DFFFFFE0000000
  %38 = fcmp ogt float %35, 0xC1E0000000000000
  %39 = select i1 %38, float %35, float 0xC1E0000000000000
  %40 = fptosi float %39 to i32
  %41 = select i1 %36, i32 0, i32 2147483647
  %42 = select i1 %37, i32 %41, i32 %40
  br label %43

43:                                               ; preds = %16, %29, %12, %2
  %44 = phi i32 [ %5, %12 ], [ %28, %16 ], [ %42, %29 ], [ %5, %2 ]
  %45 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %46 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %45 to i96*
  %47 = load i96, i96* %46, align 4
  %48 = and i96 %47, 268435456
  %49 = icmp eq i96 %48, 0
  br i1 %49, label %52, label %50

50:                                               ; preds = %43
  %51 = tail call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #19
  br label %54

52:                                               ; preds = %43
  %53 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0
  br label %54

54:                                               ; preds = %50, %52
  %55 = phi %"class.blink::InlineTextBoxList"* [ %51, %50 ], [ %53, %52 ]
  %56 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %55, i64 0, i32 0, i32 0
  %57 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %57, i64 0, i32 0, i32 7, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = and i32 %59, 2048
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %57, i64 0, i32 0, i32 5, i32 0, i32 0
  %63 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %57, i64 0, i32 0, i32 5, i32 1, i32 0
  %64 = select i1 %61, i32* %63, i32* %62
  store i32 %44, i32* %64, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink11LayoutBlock27LogicalLeftOffsetForContentEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = trunc i96 %4 to i32
  %6 = icmp slt i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = and i160 %12, 1190036353683150593851392
  %14 = icmp eq i160 %13, 340010386766614455386112
  %15 = and i96 %4, 8589934592
  %16 = icmp eq i96 %15, 0
  %17 = or i1 %14, %16
  br i1 %6, label %18, label %78

18:                                               ; preds = %1
  br i1 %17, label %43, label %19

19:                                               ; preds = %18
  %20 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0
  %21 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %20) #19
  %22 = icmp eq %"class.blink::PaintLayerScrollableArea"* %21, null
  br i1 %22, label %50, label %23

23:                                               ; preds = %19
  %24 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %20) #19
  %25 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %24, i64 0, i32 6, i32 3
  %26 = load i8, i8* %25, align 8
  %27 = and i8 %26, 1
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %33, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %24, i64 0, i32 6, i32 1, i32 0, i32 0
  %31 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %30, align 8
  %32 = icmp eq %"class.blink::Scrollbar"* %31, null
  br i1 %32, label %33, label %50

33:                                               ; preds = %29, %23
  %34 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %20) #19
  %35 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %34, i64 0, i32 6, i32 3
  %36 = load i8, i8* %35, align 8
  %37 = and i8 %36, 2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %43, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %34, i64 0, i32 6, i32 2, i32 0, i32 0
  %41 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %40, align 8
  %42 = icmp eq %"class.blink::Scrollbar"* %41, null
  br i1 %42, label %43, label %50

43:                                               ; preds = %39, %33, %18
  %44 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %45 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %44, i64 0, i32 0, i32 9
  %46 = bitcast [20 x i8]* %45 to i160*
  %47 = load i160, i160* %46, align 8
  %48 = and i160 %47, 270215977642229760
  %49 = icmp eq i160 %48, 0
  br label %50

50:                                               ; preds = %19, %29, %39, %43
  %51 = phi i1 [ false, %39 ], [ false, %29 ], [ false, %19 ], [ %49, %43 ]
  %52 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0
  %53 = bitcast %"class.blink::LayoutBlock"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %54 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %53, align 8
  %55 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %54, i64 124
  %56 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %55, align 8
  %57 = tail call i32 %56(%"class.blink::LayoutBoxModelObject"* %52) #19
  br i1 %51, label %69, label %58

58:                                               ; preds = %50
  %59 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %7, i32 1, i32 0, i32 1) #19
  %60 = extractvalue { i64, i64 } %59, 1
  %61 = lshr i64 %60, 32
  %62 = trunc i64 %61 to i32
  %63 = icmp slt i32 %62, 0
  %64 = select i1 %63, i32 -2147483648, i32 2147483647
  %65 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %57, i32 %62) #19
  %66 = extractvalue { i32, i1 } %65, 1
  %67 = extractvalue { i32, i1 } %65, 0
  %68 = select i1 %66, i32 %64, i32 %67, !prof !3
  br label %69

69:                                               ; preds = %50, %58
  %70 = phi i32 [ %68, %58 ], [ %57, %50 ]
  %71 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %53, align 8
  %72 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %71, i64 120
  %73 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %72, align 8
  %74 = tail call i32 %73(%"class.blink::LayoutBoxModelObject"* %52) #19
  %75 = icmp slt i32 %74, 0
  %76 = select i1 %75, i32 -2147483648, i32 2147483647
  %77 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %70, i32 %74) #19
  br label %137

78:                                               ; preds = %1
  br i1 %17, label %103, label %79

79:                                               ; preds = %78
  %80 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0
  %81 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %80) #19
  %82 = icmp eq %"class.blink::PaintLayerScrollableArea"* %81, null
  br i1 %82, label %110, label %83

83:                                               ; preds = %79
  %84 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %80) #19
  %85 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %84, i64 0, i32 6, i32 3
  %86 = load i8, i8* %85, align 8
  %87 = and i8 %86, 1
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %93, label %89

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %84, i64 0, i32 6, i32 1, i32 0, i32 0
  %91 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %90, align 8
  %92 = icmp eq %"class.blink::Scrollbar"* %91, null
  br i1 %92, label %93, label %110

93:                                               ; preds = %89, %83
  %94 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %80) #19
  %95 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %94, i64 0, i32 6, i32 3
  %96 = load i8, i8* %95, align 8
  %97 = and i8 %96, 2
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %94, i64 0, i32 6, i32 2, i32 0, i32 0
  %101 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %100, align 8
  %102 = icmp eq %"class.blink::Scrollbar"* %101, null
  br i1 %102, label %103, label %110

103:                                              ; preds = %99, %93, %78
  %104 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %105 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %104, i64 0, i32 0, i32 9
  %106 = bitcast [20 x i8]* %105 to i160*
  %107 = load i160, i160* %106, align 8
  %108 = and i160 %107, 270215977642229760
  %109 = icmp eq i160 %108, 0
  br label %110

110:                                              ; preds = %79, %89, %99, %103
  %111 = phi i1 [ false, %99 ], [ false, %89 ], [ false, %79 ], [ %109, %103 ]
  %112 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0
  %113 = bitcast %"class.blink::LayoutBlock"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %114 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %113, align 8
  %115 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %114, i64 122
  %116 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %115, align 8
  %117 = tail call i32 %116(%"class.blink::LayoutBoxModelObject"* %112) #19
  br i1 %111, label %128, label %118

118:                                              ; preds = %110
  %119 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %7, i32 1, i32 0, i32 1) #19
  %120 = extractvalue { i64, i64 } %119, 0
  %121 = trunc i64 %120 to i32
  %122 = icmp slt i32 %121, 0
  %123 = select i1 %122, i32 -2147483648, i32 2147483647
  %124 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %117, i32 %121) #19
  %125 = extractvalue { i32, i1 } %124, 1
  %126 = extractvalue { i32, i1 } %124, 0
  %127 = select i1 %125, i32 %123, i32 %126, !prof !3
  br label %128

128:                                              ; preds = %110, %118
  %129 = phi i32 [ %127, %118 ], [ %117, %110 ]
  %130 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %113, align 8
  %131 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %130, i64 118
  %132 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %131, align 8
  %133 = tail call i32 %132(%"class.blink::LayoutBoxModelObject"* %112) #19
  %134 = icmp slt i32 %133, 0
  %135 = select i1 %134, i32 -2147483648, i32 2147483647
  %136 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %129, i32 %133) #19
  br label %137

137:                                              ; preds = %128, %69
  %138 = phi { i32, i1 } [ %136, %128 ], [ %77, %69 ]
  %139 = phi i32 [ %135, %128 ], [ %76, %69 ]
  %140 = extractvalue { i32, i1 } %138, 1
  %141 = extractvalue { i32, i1 } %138, 0
  %142 = select i1 %140, i32 %139, i32 %141
  ret i32 %142
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 15211807202738752817960438464512
  %8 = icmp eq i160 %7, 0
  br i1 %8, label %9, label %30

9:                                                ; preds = %1
  %10 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %0) #19
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %12 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %13 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %12, align 8
  %14 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %13, i64 120
  %15 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %14, align 8
  %16 = tail call i32 %15(%"class.blink::LayoutBoxModelObject"* %11) #19
  %17 = icmp sgt i32 %16, -1
  %18 = select i1 %17, i32 -2147483648, i32 2147483647
  %19 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %10, i32 %16) #19
  %20 = extractvalue { i32, i1 } %19, 1
  %21 = extractvalue { i32, i1 } %19, 0
  %22 = select i1 %20, i32 %18, i32 %21, !prof !3
  %23 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %12, align 8
  %24 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %23, i64 121
  %25 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %24, align 8
  %26 = tail call i32 %25(%"class.blink::LayoutBoxModelObject"* %11) #19
  %27 = icmp sgt i32 %26, -1
  %28 = select i1 %27, i32 -2147483648, i32 2147483647
  %29 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %22, i32 %26) #19
  br label %51

30:                                               ; preds = %1
  %31 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %0) #19
  %32 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %33 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %34 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %33, align 8
  %35 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %34, i64 118
  %36 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %35, align 8
  %37 = tail call i32 %36(%"class.blink::LayoutBoxModelObject"* %32) #19
  %38 = icmp sgt i32 %37, -1
  %39 = select i1 %38, i32 -2147483648, i32 2147483647
  %40 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %31, i32 %37) #19
  %41 = extractvalue { i32, i1 } %40, 1
  %42 = extractvalue { i32, i1 } %40, 0
  %43 = select i1 %41, i32 %39, i32 %42, !prof !3
  %44 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %33, align 8
  %45 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %44, i64 119
  %46 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %45, align 8
  %47 = tail call i32 %46(%"class.blink::LayoutBoxModelObject"* %32) #19
  %48 = icmp sgt i32 %47, -1
  %49 = select i1 %48, i32 -2147483648, i32 2147483647
  %50 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %43, i32 %47) #19
  br label %51

51:                                               ; preds = %30, %9
  %52 = phi { i32, i1 } [ %50, %30 ], [ %29, %9 ]
  %53 = phi i32 [ %49, %30 ], [ %28, %9 ]
  %54 = extractvalue { i32, i1 } %52, 1
  %55 = extractvalue { i32, i1 } %52, 0
  %56 = select i1 %54, i32 %53, i32 %55
  %57 = icmp sgt i32 %56, 0
  %58 = select i1 %57, i32 %56, i32 0
  ret i32 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutText17SetTextWithOffsetE13scoped_refptrIN3WTF10StringImplEEjj(%"class.blink::LayoutText"*, %"class.WTF::StringImpl"*, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::LineLayoutText", align 8
  %6 = alloca %"class.blink::TextRun", align 8
  %7 = alloca %"class.blink::FloatRect", align 4
  %8 = ptrtoint %"class.WTF::StringImpl"* %1 to i64
  %9 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  %10 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 7
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %1) #19
  br i1 %13, label %439, label %14

14:                                               ; preds = %4
  %15 = icmp eq i32 %2, 0
  br i1 %15, label %16, label %208

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 7, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  br label %23

23:                                               ; preds = %16, %20
  %24 = phi i32 [ %22, %20 ], [ 0, %16 ]
  %25 = icmp eq i32 %24, %3
  br i1 %25, label %26, label %208

26:                                               ; preds = %23
  %27 = tail call zeroext i1 @_ZNK5blink10LayoutText18CanOptimizeSetTextEv(%"class.blink::LayoutText"* %0)
  br i1 %27, label %28, label %208

28:                                               ; preds = %26
  %29 = bitcast %"class.blink::LineLayoutText"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #19
  %30 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %31 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %30 to i96*
  %32 = load i96, i96* %31, align 4
  %33 = and i96 %32, 268435456
  %34 = icmp eq i96 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %28
  %36 = tail call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #19
  %37 = load i96, i96* %31, align 4
  br label %40

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0
  br label %40

40:                                               ; preds = %35, %38
  %41 = phi i96 [ %37, %35 ], [ %32, %38 ]
  %42 = phi %"class.blink::InlineTextBoxList"* [ %36, %35 ], [ %39, %38 ]
  %43 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %42, i64 0, i32 0, i32 0
  %44 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %44, i64 0, i32 0, i32 4, i32 0
  %46 = bitcast %"class.blink::LayoutObject"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.blink::LineLayoutText"* %5 to i64*
  store i64 %47, i64* %48, align 8
  %49 = getelementptr inbounds %"class.blink::LineLayoutText", %"class.blink::LineLayoutText"* %5, i64 0, i32 0
  %50 = and i96 %41, 268435456
  %51 = icmp eq i96 %50, 0
  br i1 %51, label %54, label %52

52:                                               ; preds = %40
  %53 = tail call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #19
  br label %56

54:                                               ; preds = %40
  %55 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0
  br label %56

56:                                               ; preds = %52, %54
  %57 = phi %"class.blink::InlineTextBoxList"* [ %53, %52 ], [ %55, %54 ]
  %58 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %57, i64 0, i32 0, i32 0
  %59 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %59, i64 0, i32 0, i32 7, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = and i32 %61, 1
  %63 = icmp ne i32 %62, 0
  %64 = call %"class.blink::ComputedStyle"* @_ZNK5blink14LineLayoutItem5StyleEb(%"class.blink::LineLayoutItem"* nonnull %49, i1 zeroext %63)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #19
  %65 = bitcast %"class.blink::TextRun"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %65) #19
  %66 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %6, i64 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %6, i64 0, i32 1
  %68 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %6, i64 0, i32 2
  %69 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %6, i64 0, i32 3
  %70 = bitcast %"class.blink::TextRun"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %70, i8 -86, i64 16, i1 false)
  store float 0xFFFFFFFFE0000000, float* %69, align 8
  %71 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %6, i64 0, i32 4
  store float 0xFFFFFFFFE0000000, float* %71, align 4
  %72 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %6, i64 0, i32 5
  store i16 -21846, i16* %72, align 8
  %73 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %6, i64 0, i32 6, i64 0
  store i8 -86, i8* %73, align 2
  %74 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %6, i64 0, i32 6, i64 1
  store i8 -86, i8* %74, align 1
  %75 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %6, i64 0, i32 7, i32 0
  store float 0xFFFFFFFFE0000000, float* %75, align 4
  %76 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %6, i64 0, i32 7, i32 1
  %77 = icmp eq %"class.WTF::StringImpl"* %1, null
  %78 = bitcast i8* %76 to i64*
  store i64 -6148914691236517206, i64* %78, align 4
  br i1 %77, label %96, label %79

79:                                               ; preds = %56
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %98

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = zext i32 %86 to i33
  %88 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %87, i33 1) #19
  %89 = extractvalue { i33, i1 } %88, 1
  %90 = extractvalue { i33, i1 } %88, 0
  %91 = icmp slt i33 %90, 0
  %92 = or i1 %89, %91
  br i1 %92, label %93, label %94, !prof !3

93:                                               ; preds = %84
  call void @llvm.trap() #19
  unreachable

94:                                               ; preds = %84
  %95 = trunc i33 %90 to i32
  store i32 %95, i32* %85, align 4
  br label %98

96:                                               ; preds = %56
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  br label %103

98:                                               ; preds = %79, %94
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 1
  %102 = ptrtoint %"class.WTF::StringImpl"* %101 to i64
  br label %103

103:                                              ; preds = %96, %98
  %104 = phi %"class.WTF::StringImpl"* [ %97, %96 ], [ %1, %98 ]
  %105 = phi i64 [ 0, %96 ], [ %102, %98 ]
  %106 = phi i32 [ 0, %96 ], [ %100, %98 ]
  store i32 %106, i32* %67, align 8
  store i32 %106, i32* %68, align 4
  store float 0.000000e+00, float* %69, align 8
  store float 0.000000e+00, float* %71, align 4
  store i16 -22527, i16* %72, align 8
  store float 0.000000e+00, float* %75, align 4
  store i8 -85, i8* %76, align 4
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %103
  store i16 -22523, i16* %72, align 8
  store i8* null, i8** %66, align 8
  br label %117

109:                                              ; preds = %103
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = and i32 %111, 1
  %113 = icmp eq i32 %112, 0
  %114 = bitcast %"class.blink::TextRun"* %6 to i64*
  store i64 %105, i64* %114, align 8
  br i1 %113, label %116, label %115

115:                                              ; preds = %109
  store i16 -22523, i16* %72, align 8
  br label %117

116:                                              ; preds = %109
  store i16 -22527, i16* %72, align 8
  br label %117

117:                                              ; preds = %108, %115, %116
  %118 = phi i16 [ -22523, %108 ], [ -22523, %115 ], [ -22527, %116 ]
  br i1 %77, label %133, label %119

119:                                              ; preds = %117
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = and i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %125 = load i32, i32* %124, align 4
  br i1 %123, label %126, label %128

126:                                              ; preds = %119
  %127 = add i32 %125, -1
  store i32 %127, i32* %124, align 4
  br label %128

128:                                              ; preds = %126, %119
  %129 = phi i32 [ %127, %126 ], [ %125, %119 ]
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %133

131:                                              ; preds = %128
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #19
  %132 = load i16, i16* %72, align 8
  br label %133

133:                                              ; preds = %117, %128, %131
  %134 = phi i16 [ %118, %117 ], [ %118, %128 ], [ %132, %131 ]
  %135 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %64, i64 0, i32 0, i32 9
  %136 = bitcast [20 x i8]* %135 to i160*
  %137 = load i160, i160* %136, align 8
  %138 = and i160 %137, 286720
  %139 = icmp ne i160 %138, 0
  %140 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %64, i64 0, i32 0, i32 1, i32 0, i32 0
  %141 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %140, align 8
  %142 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %141, i64 0, i32 15
  %143 = bitcast %"struct.blink::TabSize"* %142 to i64*
  %144 = load i64, i64* %143, align 4
  %145 = zext i1 %139 to i16
  %146 = shl nuw nsw i16 %145, 3
  %147 = and i16 %134, -9
  %148 = or i16 %147, %146
  store i16 %148, i16* %72, align 8
  %149 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %6, i64 0, i32 7
  %150 = bitcast %"struct.blink::TabSize"* %149 to i40*
  %151 = trunc i64 %144 to i40
  store i40 %151, i40* %150, align 4
  %152 = bitcast %"class.blink::FloatRect"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %152) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %152, i8 0, i64 16, i1 false) #19
  %153 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %64, i64 0, i32 0, i32 0, i32 0, i32 0
  %154 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %153, align 8
  %155 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %154, i64 0, i32 1, i32 0, i32 0
  %156 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %155, align 8
  %157 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %156, i64 0, i32 1
  %158 = call float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"* %157, %"class.blink::TextRun"* nonnull dereferenceable(40) %6, %"class.WTF::HashSet.3131"* null, %"class.blink::FloatRect"* nonnull %7) #19
  %159 = call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %9, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #19
  %160 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %159, i64 0, i32 0
  %161 = call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %160)
  %162 = sitofp i32 %161 to float
  %163 = fmul float %162, 1.562500e-02
  %164 = fcmp ult float %163, %158
  br i1 %164, label %207, label %165

165:                                              ; preds = %133
  %166 = load i96, i96* %31, align 4
  %167 = and i96 %166, 268435456
  %168 = icmp eq i96 %167, 0
  br i1 %168, label %171, label %169

169:                                              ; preds = %165
  %170 = call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #19
  br label %173

171:                                              ; preds = %165
  %172 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0
  br label %173

173:                                              ; preds = %169, %171
  %174 = phi %"class.blink::InlineTextBoxList"* [ %170, %169 ], [ %172, %171 ]
  %175 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %174, i64 0, i32 0, i32 0
  %176 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %175, align 8
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 1
  %178 = load i32, i32* %177, align 4
  %179 = fmul float %158, 6.400000e+01
  %180 = fcmp ult float %179, 0xC1E0000000000000
  %181 = fcmp ugt float %179, 0x41DFFFFFE0000000
  %182 = fcmp ogt float %179, 0xC1E0000000000000
  %183 = select i1 %182, float %179, float 0xC1E0000000000000
  %184 = fptosi float %183 to i32
  %185 = select i1 %180, i32 0, i32 2147483647
  %186 = select i1 %181, i32 %185, i32 %184
  call void @_ZN5blink13InlineTextBox34ManuallySetStartLenAndLogicalWidthEjjNS_10LayoutUnitE(%"class.blink::InlineTextBox"* %176, i32 0, i32 %178, i32 %186) #19
  call void @_ZNK5blink10LayoutText26SetFirstTextBoxLogicalLeftEf(%"class.blink::LayoutText"* %0, float %158)
  %187 = bitcast %"class.WTF::String"* %10 to i64*
  %188 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  store i64 %8, i64* %187, align 8
  %189 = icmp eq %"class.WTF::StringImpl"* %188, null
  br i1 %189, label %203, label %190

190:                                              ; preds = %173
  %191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %188, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %192 = load atomic i32, i32* %191 monotonic, align 4
  %193 = and i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %188, i64 0, i32 0
  %196 = load i32, i32* %195, align 4
  br i1 %194, label %197, label %199

197:                                              ; preds = %190
  %198 = add i32 %196, -1
  store i32 %198, i32* %195, align 4
  br label %199

199:                                              ; preds = %197, %190
  %200 = phi i32 [ %198, %197 ], [ %196, %190 ]
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %203

202:                                              ; preds = %199
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %188) #19
  br label %203

203:                                              ; preds = %173, %199, %202
  call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %9, i8 zeroext 3) #19
  call void @_ZN5blink10LayoutText32TextDidChangeWithoutInvalidationEv(%"class.blink::LayoutText"* %0)
  %204 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 1
  %205 = load i16, i16* %204, align 8
  %206 = and i16 %205, -193
  store i16 %206, i16* %204, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %152) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %65) #19
  br label %454

207:                                              ; preds = %133
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %152) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %65) #19
  br label %208

208:                                              ; preds = %207, %26, %23, %14
  %209 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %209, label %227, label %210

210:                                              ; preds = %208
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load atomic i32, i32* %211 monotonic, align 4
  %213 = and i32 %212, 2
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %215, label %227

215:                                              ; preds = %210
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %217 = load i32, i32* %216, align 4
  %218 = zext i32 %217 to i33
  %219 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %218, i33 1) #19
  %220 = extractvalue { i33, i1 } %219, 1
  %221 = extractvalue { i33, i1 } %219, 0
  %222 = icmp slt i33 %221, 0
  %223 = or i1 %220, %222
  br i1 %223, label %224, label %225, !prof !3

224:                                              ; preds = %215
  call void @llvm.trap() #19
  unreachable

225:                                              ; preds = %215
  %226 = trunc i33 %221 to i32
  store i32 %226, i32* %216, align 4
  br label %227

227:                                              ; preds = %208, %210, %225
  %228 = call zeroext i1 @_ZN5blink12NGInlineNode17SetTextWithOffsetEPNS_10LayoutTextE13scoped_refptrIN3WTF10StringImplEEjj(%"class.blink::LayoutText"* %0, %"class.WTF::StringImpl"* %1, i32 %2, i32 %3) #19
  br i1 %228, label %229, label %243

229:                                              ; preds = %227
  %230 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %231 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %230 to i96*
  %232 = load i96, i96* %231, align 4
  %233 = or i96 %232, 2048
  store i96 %233, i96* %231, align 4
  %234 = bitcast %"class.blink::LayoutText"* %0 to void (%"class.blink::LayoutText"*)***
  %235 = load void (%"class.blink::LayoutText"*)**, void (%"class.blink::LayoutText"*)*** %234, align 8
  %236 = getelementptr inbounds void (%"class.blink::LayoutText"*)*, void (%"class.blink::LayoutText"*)** %235, i64 122
  %237 = load void (%"class.blink::LayoutText"*)*, void (%"class.blink::LayoutText"*)** %236, align 8
  call void %237(%"class.blink::LayoutText"* %0) #19
  %238 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 1
  %239 = load i16, i16* %238, align 8
  %240 = or i16 %239, 128
  store i16 %240, i16* %238, align 8
  %241 = load i96, i96* %231, align 4
  %242 = and i96 %241, -2049
  store i96 %242, i96* %231, align 4
  br label %439

243:                                              ; preds = %227
  %244 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 7, i32 0, i32 0
  %245 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %244, align 8
  %246 = icmp eq %"class.WTF::StringImpl"* %245, null
  br i1 %246, label %250, label %247

247:                                              ; preds = %243
  %248 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %245, i64 0, i32 1
  %249 = load i32, i32* %248, align 4
  br label %250

250:                                              ; preds = %243, %247
  %251 = phi i32 [ %249, %247 ], [ 0, %243 ]
  %252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 1
  %253 = load i32, i32* %252, align 4
  %254 = sub i32 %253, %251
  %255 = icmp eq i32 %3, 0
  %256 = add i32 %2, -1
  %257 = add i32 %256, %3
  %258 = select i1 %255, i32 %2, i32 %257
  %259 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %260 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %259 to i96*
  %261 = load i96, i96* %260, align 4
  %262 = and i96 %261, 268435456
  %263 = icmp eq i96 %262, 0
  br i1 %263, label %264, label %384

264:                                              ; preds = %250
  %265 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %266 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %265, align 8
  %267 = icmp eq %"class.blink::InlineTextBox"* %266, null
  br i1 %267, label %323, label %270

268:                                              ; preds = %303
  %269 = icmp eq %"class.blink::RootInlineBox"* %306, null
  br i1 %269, label %314, label %310

270:                                              ; preds = %264, %303
  %271 = phi %"class.blink::InlineTextBox"* [ %308, %303 ], [ %266, %264 ]
  %272 = phi %"class.blink::RootInlineBox"* [ %306, %303 ], [ null, %264 ]
  %273 = phi %"class.blink::RootInlineBox"* [ %305, %303 ], [ null, %264 ]
  %274 = phi i8 [ %304, %303 ], [ 0, %264 ]
  %275 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %271, i64 0, i32 4
  %276 = load i16, i16* %275, align 4
  %277 = icmp eq i16 %276, 0
  %278 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %271, i64 0, i32 3
  %279 = load i32, i32* %278, align 8
  %280 = zext i16 %276 to i32
  %281 = add nsw i32 %280, -1
  %282 = select i1 %277, i32 0, i32 %281
  %283 = add i32 %282, %279
  %284 = icmp ult i32 %283, %2
  br i1 %284, label %303, label %285

285:                                              ; preds = %270
  %286 = icmp ugt i32 %279, %258
  br i1 %286, label %287, label %297

287:                                              ; preds = %285
  call void @_ZN5blink13InlineTextBox9OffsetRunEi(%"class.blink::InlineTextBox"* nonnull %271, i32 %254) #19
  %288 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %271, i64 0, i32 0
  %289 = call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZN5blink9InlineBox4RootEv(%"class.blink::InlineBox"* %288) #19
  %290 = icmp eq %"class.blink::RootInlineBox"* %273, null
  br i1 %290, label %291, label %303

291:                                              ; preds = %287
  %292 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %289, i64 0, i32 0, i32 0
  %293 = bitcast %"class.blink::RootInlineBox"* %289 to void (%"class.blink::InlineBox"*)***
  %294 = load void (%"class.blink::InlineBox"*)**, void (%"class.blink::InlineBox"*)*** %293, align 8
  %295 = getelementptr inbounds void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %294, i64 28
  %296 = load void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %295, align 8
  call void %296(%"class.blink::InlineBox"* %292) #19
  br label %303

297:                                              ; preds = %285
  %298 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %271, i64 0, i32 0
  %299 = bitcast %"class.blink::InlineTextBox"* %271 to void (%"class.blink::InlineBox"*)***
  %300 = load void (%"class.blink::InlineBox"*)**, void (%"class.blink::InlineBox"*)*** %299, align 8
  %301 = getelementptr inbounds void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %300, i64 29
  %302 = load void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %301, align 8
  call void %302(%"class.blink::InlineBox"* %298) #19
  br label %303

303:                                              ; preds = %297, %287, %291, %270
  %304 = phi i8 [ %274, %270 ], [ %274, %287 ], [ 1, %291 ], [ 1, %297 ]
  %305 = phi %"class.blink::RootInlineBox"* [ %273, %270 ], [ %273, %287 ], [ %289, %291 ], [ %273, %297 ]
  %306 = phi %"class.blink::RootInlineBox"* [ %272, %270 ], [ %289, %287 ], [ %289, %291 ], [ %272, %297 ]
  %307 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %271, i64 0, i32 2
  %308 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %307, align 8
  %309 = icmp eq %"class.blink::InlineTextBox"* %308, null
  br i1 %309, label %268, label %270

310:                                              ; preds = %268
  %311 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %306, i64 0, i32 0, i32 5
  %312 = bitcast %"class.blink::InlineFlowBox"** %311 to %"class.blink::RootInlineBox"**
  %313 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %312, align 8
  br label %314

314:                                              ; preds = %268, %310
  %315 = phi %"class.blink::RootInlineBox"* [ %313, %310 ], [ null, %268 ]
  %316 = icmp eq %"class.blink::RootInlineBox"* %305, null
  br i1 %316, label %323, label %317

317:                                              ; preds = %314
  %318 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %305, i64 0, i32 0, i32 4
  %319 = bitcast %"class.blink::InlineFlowBox"** %318 to %"class.blink::RootInlineBox"**
  %320 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %319, align 8
  %321 = icmp eq %"class.blink::RootInlineBox"* %320, null
  %322 = select i1 %321, %"class.blink::RootInlineBox"* %305, %"class.blink::RootInlineBox"* %320
  br label %357

323:                                              ; preds = %264, %314
  %324 = phi %"class.blink::RootInlineBox"* [ %315, %314 ], [ null, %264 ]
  %325 = phi i8 [ %304, %314 ], [ 0, %264 ]
  %326 = load i96, i96* %260, align 4
  %327 = and i96 %326, 268435456
  %328 = icmp eq i96 %327, 0
  br i1 %328, label %331, label %329

329:                                              ; preds = %323
  %330 = call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #19
  br label %333

331:                                              ; preds = %323
  %332 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0
  br label %333

333:                                              ; preds = %329, %331
  %334 = phi %"class.blink::InlineTextBoxList"* [ %330, %329 ], [ %332, %331 ]
  %335 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %334, i64 0, i32 0, i32 1
  %336 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %335, align 8
  %337 = icmp eq %"class.blink::InlineTextBox"* %336, null
  br i1 %337, label %384, label %338

338:                                              ; preds = %333
  %339 = load i96, i96* %260, align 4
  %340 = and i96 %339, 268435456
  %341 = icmp eq i96 %340, 0
  br i1 %341, label %344, label %342

342:                                              ; preds = %338
  %343 = call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #19
  br label %346

344:                                              ; preds = %338
  %345 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0
  br label %346

346:                                              ; preds = %342, %344
  %347 = phi %"class.blink::InlineTextBoxList"* [ %343, %342 ], [ %345, %344 ]
  %348 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %347, i64 0, i32 0, i32 1
  %349 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %348, align 8
  %350 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %349, i64 0, i32 0
  %351 = call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZN5blink9InlineBox4RootEv(%"class.blink::InlineBox"* %350) #19
  %352 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %351, i64 0, i32 0, i32 0
  %353 = bitcast %"class.blink::RootInlineBox"* %351 to void (%"class.blink::InlineBox"*)***
  %354 = load void (%"class.blink::InlineBox"*)**, void (%"class.blink::InlineBox"*)*** %353, align 8
  %355 = getelementptr inbounds void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %354, i64 28
  %356 = load void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %355, align 8
  call void %356(%"class.blink::InlineBox"* %352) #19
  br label %357

357:                                              ; preds = %346, %317
  %358 = phi %"class.blink::RootInlineBox"* [ %315, %317 ], [ %324, %346 ]
  %359 = phi i8 [ %304, %317 ], [ 1, %346 ]
  %360 = phi %"class.blink::RootInlineBox"* [ %322, %317 ], [ %351, %346 ]
  %361 = icmp eq %"class.blink::RootInlineBox"* %360, null
  %362 = icmp eq %"class.blink::RootInlineBox"* %360, %358
  %363 = or i1 %361, %362
  br i1 %363, label %384, label %364

364:                                              ; preds = %357, %377
  %365 = phi %"class.blink::RootInlineBox"* [ %380, %377 ], [ %360, %357 ]
  %366 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %365, i64 0, i32 2, i32 0
  %367 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %366, align 8
  %368 = icmp eq %"class.blink::LayoutObject"* %367, %9
  br i1 %368, label %369, label %377

369:                                              ; preds = %364
  %370 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %365, i64 0, i32 1
  %371 = load i32, i32* %370, align 4
  %372 = icmp ugt i32 %371, %258
  br i1 %372, label %373, label %377

373:                                              ; preds = %369
  %374 = add i32 %371, %254
  %375 = icmp ult i32 %374, 2147483647
  %376 = select i1 %375, i32 %374, i32 2147483647
  store i32 %376, i32* %370, align 4
  br label %377

377:                                              ; preds = %364, %369, %373
  %378 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %365, i64 0, i32 0, i32 5
  %379 = bitcast %"class.blink::InlineFlowBox"** %378 to %"class.blink::RootInlineBox"**
  %380 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %379, align 8
  %381 = icmp eq %"class.blink::RootInlineBox"* %380, null
  %382 = icmp eq %"class.blink::RootInlineBox"* %380, %358
  %383 = or i1 %381, %382
  br i1 %383, label %384, label %364

384:                                              ; preds = %377, %333, %357, %250
  %385 = phi i8 [ 0, %250 ], [ %359, %357 ], [ %325, %333 ], [ %359, %377 ]
  %386 = load i96, i96* %260, align 4
  %387 = and i96 %386, 268435456
  %388 = icmp eq i96 %387, 0
  br i1 %388, label %394, label %389

389:                                              ; preds = %384
  %390 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9
  %391 = bitcast %union.anon.3033* %390 to i32*
  %392 = load i32, i32* %391, align 8
  %393 = icmp eq i32 %392, 0
  br i1 %393, label %398, label %407

394:                                              ; preds = %384
  %395 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %396 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %395, align 8
  %397 = icmp eq %"class.blink::InlineTextBox"* %396, null
  br i1 %397, label %398, label %407

398:                                              ; preds = %394, %389
  %399 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 7
  %400 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %399, align 8
  %401 = icmp eq %"class.blink::LayoutObject"* %400, null
  br i1 %401, label %407, label %402

402:                                              ; preds = %398
  %403 = bitcast %"class.blink::LayoutObject"* %400 to void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32)***
  %404 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32)**, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32)*** %403, align 8
  %405 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32)** %404, i64 65
  %406 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32)** %405, align 8
  call void %406(%"class.blink::LayoutObject"* nonnull %400, %"class.blink::LayoutObject"* %9, i32 1) #19
  br label %407

407:                                              ; preds = %394, %389, %398, %402
  %408 = phi i8 [ %385, %394 ], [ 1, %402 ], [ %385, %398 ], [ %385, %389 ]
  %409 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 1
  %410 = load i16, i16* %409, align 8
  %411 = shl i8 %408, 6
  %412 = and i8 %411, 64
  %413 = zext i8 %412 to i16
  %414 = and i16 %410, -65
  %415 = or i16 %414, %413
  store i16 %415, i16* %409, align 8
  %416 = bitcast %"class.WTF::String"* %10 to i64*
  %417 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  store i64 %8, i64* %416, align 8
  %418 = icmp eq %"class.WTF::StringImpl"* %417, null
  br i1 %418, label %432, label %419

419:                                              ; preds = %407
  %420 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %417, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %421 = load atomic i32, i32* %420 monotonic, align 4
  %422 = and i32 %421, 2
  %423 = icmp eq i32 %422, 0
  %424 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %417, i64 0, i32 0
  %425 = load i32, i32* %424, align 4
  br i1 %423, label %426, label %428

426:                                              ; preds = %419
  %427 = add i32 %425, -1
  store i32 %427, i32* %424, align 4
  br label %428

428:                                              ; preds = %426, %419
  %429 = phi i32 [ %427, %426 ], [ %425, %419 ]
  %430 = icmp eq i32 %429, 0
  br i1 %430, label %431, label %432

431:                                              ; preds = %428
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %417) #19
  br label %432

432:                                              ; preds = %407, %428, %431
  %433 = bitcast %"class.blink::LayoutText"* %0 to void (%"class.blink::LayoutText"*)***
  %434 = load void (%"class.blink::LayoutText"*)**, void (%"class.blink::LayoutText"*)*** %433, align 8
  %435 = getelementptr inbounds void (%"class.blink::LayoutText"*)*, void (%"class.blink::LayoutText"*)** %434, i64 122
  %436 = load void (%"class.blink::LayoutText"*)*, void (%"class.blink::LayoutText"*)** %435, align 8
  call void %436(%"class.blink::LayoutText"* %0) #19
  %437 = load i16, i16* %409, align 8
  %438 = and i16 %437, -129
  store i16 %438, i16* %409, align 8
  br label %454

439:                                              ; preds = %4, %229
  %440 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %440, label %454, label %441

441:                                              ; preds = %439
  %442 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %443 = load atomic i32, i32* %442 monotonic, align 4
  %444 = and i32 %443, 2
  %445 = icmp eq i32 %444, 0
  %446 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %447 = load i32, i32* %446, align 4
  br i1 %445, label %448, label %450

448:                                              ; preds = %441
  %449 = add i32 %447, -1
  store i32 %449, i32* %446, align 4
  br label %450

450:                                              ; preds = %448, %441
  %451 = phi i32 [ %449, %448 ], [ %447, %441 ]
  %452 = icmp eq i32 %451, 0
  br i1 %452, label %453, label %454

453:                                              ; preds = %450
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #19
  br label %454

454:                                              ; preds = %432, %203, %439, %450, %453
  ret void
}

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN5blink13InlineTextBox34ManuallySetStartLenAndLogicalWidthEjjNS_10LayoutUnitE(%"class.blink::InlineTextBox"*, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutText15SetTextInternalE13scoped_refptrIN3WTF10StringImplEE(%"class.blink::LayoutText"* nocapture, %"class.WTF::StringImpl"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.WTF::StringImpl"* %1 to i64
  %4 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 7
  %5 = bitcast %"class.WTF::String"* %4 to i64*
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  store i64 %3, i64* %5, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  br i1 %13, label %16, label %18

16:                                               ; preds = %9
  %17 = add i32 %15, -1
  store i32 %17, i32* %14, align 4
  br label %18

18:                                               ; preds = %16, %9
  %19 = phi i32 [ %17, %16 ], [ %15, %9 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #19
  br label %22

22:                                               ; preds = %2, %18, %21
  ret void
}

declare void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"*, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutText32TextDidChangeWithoutInvalidationEv(%"class.blink::LayoutText"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 5, i32 0
  %4 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %5 = icmp eq %"class.blink::ComputedStyle"* %4, null
  br i1 %5, label %24, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 7
  %8 = bitcast %"class.blink::LayoutText"* %0 to i16 (%"class.blink::LayoutText"*)***
  %9 = load i16 (%"class.blink::LayoutText"*)**, i16 (%"class.blink::LayoutText"*)*** %8, align 8
  %10 = getelementptr inbounds i16 (%"class.blink::LayoutText"*)*, i16 (%"class.blink::LayoutText"*)** %9, i64 119
  %11 = load i16 (%"class.blink::LayoutText"*)*, i16 (%"class.blink::LayoutText"*)** %10, align 8
  %12 = tail call zeroext i16 %11(%"class.blink::LayoutText"* %0) #19
  tail call void @_ZNK5blink13ComputedStyle18ApplyTextTransformEPN3WTF6StringEDs(%"class.blink::ComputedStyle"* nonnull %4, %"class.WTF::String"* %7, i16 zeroext %12) #19
  %13 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %14 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %14, i64 0, i32 23
  %16 = bitcast [5 x i8]* %15 to i40*
  %17 = load i40, i40* %16, align 8
  %18 = lshr i40 %17, 24
  %19 = trunc i40 %18 to i32
  %20 = and i32 %19, 3
  switch i32 %20, label %24 [
    i32 3, label %23
    i32 2, label %21
    i32 1, label %22
  ]

21:                                               ; preds = %6
  tail call void @_ZN5blink10LayoutText10SecureTextEDs(%"class.blink::LayoutText"* %0, i16 zeroext 9702) #19
  br label %24

22:                                               ; preds = %6
  tail call void @_ZN5blink10LayoutText10SecureTextEDs(%"class.blink::LayoutText"* %0, i16 zeroext 8226) #19
  br label %24

23:                                               ; preds = %6
  tail call void @_ZN5blink10LayoutText10SecureTextEDs(%"class.blink::LayoutText"* %0, i16 zeroext 9632) #19
  br label %24

24:                                               ; preds = %1, %6, %21, %22, %23
  %25 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 1
  %26 = load i16, i16* %25, align 8
  %27 = and i16 %26, -1025
  store i16 %27, i16* %25, align 8
  %28 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  %29 = load %"class.blink::Node"*, %"class.blink::Node"** %28, align 8
  %30 = icmp eq %"class.blink::Node"* %29, null
  br i1 %30, label %31, label %38

31:                                               ; preds = %24, %31
  %32 = phi %"class.blink::LayoutObject"* [ %34, %31 ], [ %2, %24 ]
  %33 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %32, i64 0, i32 7
  %34 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %34, i64 0, i32 6, i32 0, i32 0
  %36 = load %"class.blink::Node"*, %"class.blink::Node"** %35, align 8
  %37 = icmp eq %"class.blink::Node"* %36, null
  br i1 %37, label %31, label %38

38:                                               ; preds = %31, %24
  %39 = phi %"class.blink::Node"* [ %29, %24 ], [ %36, %31 ]
  %40 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %39, i64 0, i32 3, i32 0, i32 0
  %41 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %41, i64 0, i32 2, i32 0, i32 0
  %43 = load %"class.blink::Document"*, %"class.blink::Document"** %42, align 8
  %44 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %43) #19
  %45 = icmp eq %"class.blink::AXObjectCache"* %44, null
  br i1 %45, label %51, label %46

46:                                               ; preds = %38
  %47 = bitcast %"class.blink::AXObjectCache"* %44 to void (%"class.blink::AXObjectCache"*, %"class.blink::LayoutObject"*)***
  %48 = load void (%"class.blink::AXObjectCache"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::LayoutObject"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::LayoutObject"*)** %48, i64 26
  %50 = load void (%"class.blink::AXObjectCache"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::LayoutObject"*)** %49, align 8
  tail call void %50(%"class.blink::AXObjectCache"* nonnull %44, %"class.blink::LayoutObject"* %2) #19
  br label %51

51:                                               ; preds = %38, %46
  %52 = load %"class.blink::Node"*, %"class.blink::Node"** %28, align 8
  %53 = icmp eq %"class.blink::Node"* %52, null
  br i1 %53, label %54, label %61

54:                                               ; preds = %51, %54
  %55 = phi %"class.blink::LayoutObject"* [ %57, %54 ], [ %2, %51 ]
  %56 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %55, i64 0, i32 7
  %57 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %57, i64 0, i32 6, i32 0, i32 0
  %59 = load %"class.blink::Node"*, %"class.blink::Node"** %58, align 8
  %60 = icmp eq %"class.blink::Node"* %59, null
  br i1 %60, label %54, label %61

61:                                               ; preds = %54, %51
  %62 = phi %"class.blink::Node"* [ %52, %51 ], [ %59, %54 ]
  %63 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %62, i64 0, i32 3, i32 0, i32 0
  %64 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %64, i64 0, i32 2, i32 0, i32 0
  %66 = load %"class.blink::Document"*, %"class.blink::Document"** %65, align 8
  %67 = tail call %"class.blink::TextAutosizer"* @_ZN5blink8Document16GetTextAutosizerEv(%"class.blink::Document"* %66) #19
  %68 = icmp eq %"class.blink::TextAutosizer"* %67, null
  br i1 %68, label %70, label %69

69:                                               ; preds = %61
  tail call void @_ZN5blink13TextAutosizer6RecordEPNS_10LayoutTextE(%"class.blink::TextAutosizer"* nonnull %67, %"class.blink::LayoutText"* %0) #19
  br label %70

70:                                               ; preds = %61, %69
  %71 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 2
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %102, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %76 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %75 to i96*
  %77 = load i96, i96* %76, align 4
  %78 = and i96 %77, 16777216
  %79 = icmp eq i96 %78, 0
  br i1 %79, label %80, label %102

80:                                               ; preds = %74
  %81 = load %"class.blink::Node"*, %"class.blink::Node"** %28, align 8
  %82 = icmp eq %"class.blink::Node"* %81, null
  br i1 %82, label %102, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %81, i64 0, i32 3, i32 0, i32 0
  %85 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %85, i64 0, i32 2, i32 0, i32 0
  %87 = load %"class.blink::Document"*, %"class.blink::Document"** %86, align 8
  %88 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %87) #19
  %89 = icmp eq %"class.blink::LocalFrame"* %88, null
  br i1 %89, label %102, label %90

90:                                               ; preds = %83
  %91 = tail call dereferenceable(1176) %"class.blink::LocalFrame"* @_ZNK5blink10LocalFrame14LocalFrameRootEv(%"class.blink::LocalFrame"* nonnull %88) #19
  %92 = tail call %"class.blink::ContentCaptureManager"* @_ZN5blink10LocalFrame24GetContentCaptureManagerEv(%"class.blink::LocalFrame"* %91) #19
  %93 = icmp eq %"class.blink::ContentCaptureManager"* %92, null
  br i1 %93, label %102, label %94

94:                                               ; preds = %90
  %95 = load i96, i96* %76, align 4
  %96 = and i96 %95, 16777216
  %97 = icmp eq i96 %96, 0
  br i1 %97, label %98, label %100

98:                                               ; preds = %94
  %99 = load %"class.blink::Node"*, %"class.blink::Node"** %28, align 8
  br label %100

100:                                              ; preds = %94, %98
  %101 = phi %"class.blink::Node"* [ %99, %98 ], [ null, %94 ]
  tail call void @_ZN5blink21ContentCaptureManager17OnNodeTextChangedERNS_4NodeE(%"class.blink::ContentCaptureManager"* nonnull %92, %"class.blink::Node"* dereferenceable(64) %101) #19
  br label %102

102:                                              ; preds = %70, %83, %74, %80, %100, %90
  %103 = load i16, i16* %25, align 8
  %104 = and i16 %103, -129
  store i16 %104, i16* %25, align 8
  tail call void @_ZN5blink12LayoutObject22SetNeedsCollectInlinesEv(%"class.blink::LayoutObject"* %2) #19
  ret void
}

declare zeroext i1 @_ZN5blink12NGInlineNode17SetTextWithOffsetEPNS_10LayoutTextE13scoped_refptrIN3WTF10StringImplEEjj(%"class.blink::LayoutText"*, %"class.WTF::StringImpl"*, i32, i32) local_unnamed_addr #1

declare void @_ZN5blink13InlineTextBox9OffsetRunEi(%"class.blink::InlineTextBox"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutText12ForceSetTextE13scoped_refptrIN3WTF10StringImplEE(%"class.blink::LayoutText"*, %"class.WTF::StringImpl"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.WTF::StringImpl"* %1 to i64
  %4 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 7
  %5 = bitcast %"class.WTF::String"* %4 to i64*
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  store i64 %3, i64* %5, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  br i1 %13, label %16, label %18

16:                                               ; preds = %9
  %17 = add i32 %15, -1
  store i32 %17, i32* %14, align 4
  br label %18

18:                                               ; preds = %16, %9
  %19 = phi i32 [ %17, %16 ], [ %15, %9 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #19
  br label %22

22:                                               ; preds = %21, %18, %2
  %23 = bitcast %"class.blink::LayoutText"* %0 to void (%"class.blink::LayoutText"*)***
  %24 = load void (%"class.blink::LayoutText"*)**, void (%"class.blink::LayoutText"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::LayoutText"*)*, void (%"class.blink::LayoutText"*)** %24, i64 122
  %26 = load void (%"class.blink::LayoutText"*)*, void (%"class.blink::LayoutText"*)** %25, align 8
  tail call void %26(%"class.blink::LayoutText"* %0) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutText13TransformTextEv(%"class.blink::LayoutText"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::LayoutText"* %0 to %"class.WTF::StringImpl"* (%"class.blink::LayoutText"*)***
  %3 = load %"class.WTF::StringImpl"* (%"class.blink::LayoutText"*)**, %"class.WTF::StringImpl"* (%"class.blink::LayoutText"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::LayoutText"*)*, %"class.WTF::StringImpl"* (%"class.blink::LayoutText"*)** %3, i64 108
  %5 = load %"class.WTF::StringImpl"* (%"class.blink::LayoutText"*)*, %"class.WTF::StringImpl"* (%"class.blink::LayoutText"*)** %4, align 8
  %6 = tail call %"class.WTF::StringImpl"* %5(%"class.blink::LayoutText"* %0) #19
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %33, label %8

8:                                                ; preds = %1
  %9 = ptrtoint %"class.WTF::StringImpl"* %6 to i64
  %10 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 7
  %11 = bitcast %"class.WTF::String"* %10 to i64*
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  store i64 %9, i64* %11, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %24

22:                                               ; preds = %15
  %23 = add i32 %21, -1
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %15 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #19
  br label %28

28:                                               ; preds = %27, %24, %8
  %29 = bitcast %"class.blink::LayoutText"* %0 to void (%"class.blink::LayoutText"*)***
  %30 = load void (%"class.blink::LayoutText"*)**, void (%"class.blink::LayoutText"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.blink::LayoutText"*)*, void (%"class.blink::LayoutText"*)** %30, i64 122
  %32 = load void (%"class.blink::LayoutText"*)*, void (%"class.blink::LayoutText"*)** %31, align 8
  tail call void %32(%"class.blink::LayoutText"* %0) #19
  br label %33

33:                                               ; preds = %1, %28
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink10LayoutText28ContainsOnlyWhitespaceOrNbspEv(%"class.blink::LayoutText"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 256
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %7, label %13

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 1
  %9 = load i16, i16* %8, align 8
  %10 = lshr i16 %9, 11
  %11 = and i16 %10, 3
  %12 = zext i16 %11 to i32
  br label %13

13:                                               ; preds = %1, %7
  %14 = phi i32 [ %12, %7 ], [ 0, %1 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i16 @_ZNK5blink10LayoutText17PreviousCharacterEv(%"class.blink::LayoutText"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  %3 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject18PreviousInPreOrderEv(%"class.blink::LayoutObject"* %2) #19
  %4 = icmp eq %"class.blink::LayoutObject"* %3, null
  br i1 %4, label %55, label %5

5:                                                ; preds = %1, %27
  %6 = phi %"class.blink::LayoutObject"* [ %28, %27 ], [ %3, %1 ]
  %7 = bitcast %"class.blink::LayoutObject"* %6 to i1 (%"class.blink::LayoutObject"*)***
  %8 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %8, i64 26
  %10 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::LayoutObject"* nonnull %6) #19
  br i1 %11, label %27, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %6, i64 0, i32 4
  %14 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %13 to i96*
  %15 = load i96, i96* %14, align 4
  %16 = and i96 %15, 33554432
  %17 = icmp eq i96 %16, 0
  br i1 %17, label %55, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %6, i64 1, i32 4, i32 0, i64 4
  %20 = bitcast i8* %19 to %"class.WTF::StringImpl"**
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %27, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %18, %5, %23
  %28 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject18PreviousInPreOrderEv(%"class.blink::LayoutObject"* nonnull %6) #19
  %29 = icmp eq %"class.blink::LayoutObject"* %28, null
  br i1 %29, label %55, label %5

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %6, i64 1, i32 4, i32 0, i64 4
  %32 = bitcast i8* %31 to %"class.WTF::StringImpl"**
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = add i32 %37, -1
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 1
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 1
  br i1 %42, label %50, label %44

44:                                               ; preds = %35
  %45 = bitcast %"class.WTF::StringImpl"* %43 to i8*
  %46 = zext i32 %38 to i64
  %47 = getelementptr inbounds i8, i8* %45, i64 %46
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i16
  br label %55

50:                                               ; preds = %35
  %51 = bitcast %"class.WTF::StringImpl"* %43 to i16*
  %52 = zext i32 %38 to i64
  %53 = getelementptr inbounds i16, i16* %51, i64 %52
  %54 = load i16, i16* %53, align 2
  br label %55

55:                                               ; preds = %12, %27, %1, %50, %44, %30
  %56 = phi i16 [ 32, %30 ], [ %49, %44 ], [ %54, %50 ], [ 32, %1 ], [ 32, %27 ], [ 32, %12 ]
  ret i16 %56
}

declare %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject18PreviousInPreOrderEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutText18ApplyTextTransformEv(%"class.blink::LayoutText"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = icmp eq %"class.blink::ComputedStyle"* %3, null
  br i1 %4, label %23, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 7
  %7 = bitcast %"class.blink::LayoutText"* %0 to i16 (%"class.blink::LayoutText"*)***
  %8 = load i16 (%"class.blink::LayoutText"*)**, i16 (%"class.blink::LayoutText"*)*** %7, align 8
  %9 = getelementptr inbounds i16 (%"class.blink::LayoutText"*)*, i16 (%"class.blink::LayoutText"*)** %8, i64 119
  %10 = load i16 (%"class.blink::LayoutText"*)*, i16 (%"class.blink::LayoutText"*)** %9, align 8
  %11 = tail call zeroext i16 %10(%"class.blink::LayoutText"* %0) #19
  tail call void @_ZNK5blink13ComputedStyle18ApplyTextTransformEPN3WTF6StringEDs(%"class.blink::ComputedStyle"* nonnull %3, %"class.WTF::String"* %6, i16 zeroext %11) #19
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %13, i64 0, i32 23
  %15 = bitcast [5 x i8]* %14 to i40*
  %16 = load i40, i40* %15, align 8
  %17 = lshr i40 %16, 24
  %18 = trunc i40 %17 to i32
  %19 = and i32 %18, 3
  switch i32 %19, label %23 [
    i32 3, label %22
    i32 2, label %20
    i32 1, label %21
  ]

20:                                               ; preds = %5
  tail call void @_ZN5blink10LayoutText10SecureTextEDs(%"class.blink::LayoutText"* %0, i16 zeroext 9702)
  br label %23

21:                                               ; preds = %5
  tail call void @_ZN5blink10LayoutText10SecureTextEDs(%"class.blink::LayoutText"* %0, i16 zeroext 8226)
  br label %23

22:                                               ; preds = %5
  tail call void @_ZN5blink10LayoutText10SecureTextEDs(%"class.blink::LayoutText"* %0, i16 zeroext 9632)
  br label %23

23:                                               ; preds = %1, %20, %21, %5, %22
  ret void
}

declare void @_ZNK5blink13ComputedStyle18ApplyTextTransformEPN3WTF6StringEDs(%"class.blink::ComputedStyle"*, %"class.WTF::String"*, i16 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutText10SecureTextEDs(%"class.blink::LayoutText"*, i16 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca i16, align 2
  %4 = alloca %"class.blink::LayoutText"*, align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 7
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %147, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %147, label %15

15:                                               ; preds = %11
  %16 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %16) #19
  store i16 -21846, i16* %3, align 2
  %17 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_119GetSecureTextTimersEvE5s_map to i8*) acquire, align 8
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %23, !prof !5

19:                                               ; preds = %15
  %20 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_119GetSecureTextTimersEvE5s_map) #19
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %23, label %22

22:                                               ; preds = %19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_119GetSecureTextTimersEvE5s_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #19
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_119GetSecureTextTimersEvE5s_map) #19
  br label %23

23:                                               ; preds = %15, %19, %22
  %24 = bitcast %"class.blink::LayoutText"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #19
  store %"class.blink::LayoutText"* %0, %"class.blink::LayoutText"** %4, align 8
  %25 = call fastcc %"class.blink::(anonymous namespace)::SecureTextTimer"* @_ZNK3WTF7HashMapIPN5blink10LayoutTextEPNS1_12_GLOBAL__N_115SecureTextTimerENS_7PtrHashIS2_EENS_10HashTraitsIS3_EENS9_IS6_EENS_18PartitionAllocatorEE2atERKS3_(%"class.blink::LayoutText"** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #19
  %26 = icmp eq %"class.blink::(anonymous namespace)::SecureTextTimer"* %25, null
  br i1 %26, label %62, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.blink::(anonymous namespace)::SecureTextTimer", %"class.blink::(anonymous namespace)::SecureTextTimer"* %25, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %29 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %28, align 8
  %30 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %29, i64 0, i32 0, i32 0
  %31 = tail call zeroext i1 @_ZNK4base6subtle24RefCountedThreadSafeBase9HasOneRefEv(%"class.base::subtle::RefCountedThreadSafeBase"* %30) #19
  br i1 %31, label %62, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.blink::(anonymous namespace)::SecureTextTimer", %"class.blink::(anonymous namespace)::SecureTextTimer"* %25, i64 0, i32 2
  %34 = load i32, i32* %33, align 8
  %35 = icmp sgt i32 %34, -1
  br i1 %35, label %36, label %62

36:                                               ; preds = %32
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %60, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = icmp ugt i32 %41, %34
  br i1 %42, label %43, label %60

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 1
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 1
  br i1 %47, label %55, label %49

49:                                               ; preds = %43
  %50 = bitcast %"class.WTF::StringImpl"* %48 to i8*
  %51 = zext i32 %34 to i64
  %52 = getelementptr inbounds i8, i8* %50, i64 %51
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i16
  br label %60

55:                                               ; preds = %43
  %56 = bitcast %"class.WTF::StringImpl"* %48 to i16*
  %57 = zext i32 %34 to i64
  %58 = getelementptr inbounds i16, i16* %56, i64 %57
  %59 = load i16, i16* %58, align 2
  br label %60

60:                                               ; preds = %36, %39, %49, %55
  %61 = phi i16 [ 0, %39 ], [ 0, %36 ], [ %54, %49 ], [ %59, %55 ]
  store i16 %61, i16* %3, align 2
  br label %62

62:                                               ; preds = %27, %23, %32, %60
  %63 = phi i32 [ %34, %60 ], [ %34, %32 ], [ -1, %27 ], [ -1, %23 ]
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %85, label %66

66:                                               ; preds = %62
  %67 = tail call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl4FillEDs(%"class.WTF::StringImpl"* nonnull %64, i16 zeroext %1) #19
  %68 = ptrtoint %"class.WTF::StringImpl"* %67 to i64
  %69 = bitcast %"class.WTF::String"* %7 to i64*
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  store i64 %68, i64* %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %85, label %72

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  br i1 %76, label %79, label %81

79:                                               ; preds = %72
  %80 = add i32 %78, -1
  store i32 %80, i32* %77, align 4
  br label %81

81:                                               ; preds = %79, %72
  %82 = phi i32 [ %80, %79 ], [ %78, %72 ]
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %81
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %70) #19
  br label %85

85:                                               ; preds = %62, %66, %81, %84
  %86 = icmp sgt i32 %63, -1
  br i1 %86, label %87, label %146

87:                                               ; preds = %85
  %88 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %88) #19
  %89 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #19
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %6, i16* nonnull %3, i32 1) #19
  %90 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %93, label %97

93:                                               ; preds = %87
  %94 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %94, align 8
  %95 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %96 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %95, i64* %96, align 8
  br label %104

97:                                               ; preds = %87
  %98 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %91, %"class.WTF::StringImpl"** %98, align 8
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 1
  %102 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %103 = bitcast i8** %102 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %101, %"class.WTF::StringImpl"** %103, align 8
  br label %104

104:                                              ; preds = %93, %97
  %105 = phi i32 [ %100, %97 ], [ 0, %93 ]
  %106 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %105, i32* %106, align 8
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %108 = icmp eq %"class.WTF::StringImpl"* %107, null
  br i1 %108, label %128, label %109

109:                                              ; preds = %104
  %110 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceEjjRKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %107, i32 %63, i32 1, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #19
  %111 = ptrtoint %"class.WTF::StringImpl"* %110 to i64
  %112 = bitcast %"class.WTF::String"* %7 to i64*
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  store i64 %111, i64* %112, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %128, label %115

115:                                              ; preds = %109
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  br i1 %119, label %122, label %124

122:                                              ; preds = %115
  %123 = add i32 %121, -1
  store i32 %123, i32* %120, align 4
  br label %124

124:                                              ; preds = %122, %115
  %125 = phi i32 [ %123, %122 ], [ %121, %115 ]
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %124
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %113) #19
  br label %128

128:                                              ; preds = %104, %109, %124, %127
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %144, label %131

131:                                              ; preds = %128
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 0
  %137 = load i32, i32* %136, align 4
  br i1 %135, label %138, label %140

138:                                              ; preds = %131
  %139 = add i32 %137, -1
  store i32 %139, i32* %136, align 4
  br label %140

140:                                              ; preds = %138, %131
  %141 = phi i32 [ %139, %138 ], [ %137, %131 ]
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %144

143:                                              ; preds = %140
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %129) #19
  br label %144

144:                                              ; preds = %128, %140, %143
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %88) #19
  %145 = getelementptr inbounds %"class.blink::(anonymous namespace)::SecureTextTimer", %"class.blink::(anonymous namespace)::SecureTextTimer"* %25, i64 0, i32 2
  store i32 -1, i32* %145, align 8
  br label %146

146:                                              ; preds = %144, %85
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %16) #19
  br label %147

147:                                              ; preds = %2, %11, %146
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define internal fastcc %"class.blink::(anonymous namespace)::SecureTextTimer"* @_ZNK3WTF7HashMapIPN5blink10LayoutTextEPNS1_12_GLOBAL__N_115SecureTextTimerENS_7PtrHashIS2_EENS_10HashTraitsIS3_EENS9_IS6_EENS_18PartitionAllocatorEE2atERKS3_(%"class.blink::LayoutText"** nocapture readonly dereferenceable(8)) unnamed_addr #9 align 2 {
  %2 = load %"struct.WTF::KeyValuePair.3039"*, %"struct.WTF::KeyValuePair.3039"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_119GetSecureTextTimersEvE5s_map to %"struct.WTF::KeyValuePair.3039"**), align 8
  %3 = icmp eq %"struct.WTF::KeyValuePair.3039"* %2, null
  br i1 %3, label %70, label %4

4:                                                ; preds = %1
  %5 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_119GetSecureTextTimersEvE5s_map, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %6 = add i32 %5, -1
  %7 = zext i32 %6 to i64
  %8 = bitcast %"class.blink::LayoutText"** %0 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = shl i64 %9, 32
  %11 = xor i64 %10, -1
  %12 = add i64 %9, %11
  %13 = lshr i64 %12, 22
  %14 = xor i64 %13, %12
  %15 = shl i64 %14, 13
  %16 = xor i64 %15, -1
  %17 = add i64 %14, %16
  %18 = lshr i64 %17, 8
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, 9
  %21 = lshr i64 %20, 15
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 27
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 31
  %27 = xor i64 %26, %25
  %28 = trunc i64 %27 to i32
  %29 = and i32 %6, %28
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.3039", %"struct.WTF::KeyValuePair.3039"* %2, i64 %30
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.3039", %"struct.WTF::KeyValuePair.3039"* %31, i64 0, i32 0
  %33 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %32, align 8
  %34 = inttoptr i64 %9 to %"class.blink::LayoutText"*
  %35 = icmp eq %"class.blink::LayoutText"* %33, %34
  br i1 %35, label %64, label %36

36:                                               ; preds = %4
  %37 = xor i32 %28, -1
  %38 = lshr i32 %28, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %55, %36
  %51 = phi %"class.blink::LayoutText"* [ %33, %36 ], [ %62, %55 ]
  %52 = phi i64 [ %30, %36 ], [ %59, %55 ]
  %53 = phi i64 [ 0, %36 ], [ %57, %55 ]
  %54 = icmp eq %"class.blink::LayoutText"* %51, null
  br i1 %54, label %70, label %55

55:                                               ; preds = %50
  %56 = icmp eq i64 %53, 0
  %57 = select i1 %56, i64 %49, i64 %53
  %58 = add i64 %57, %52
  %59 = and i64 %58, %7
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair.3039", %"struct.WTF::KeyValuePair.3039"* %2, i64 %59
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.3039", %"struct.WTF::KeyValuePair.3039"* %60, i64 0, i32 0
  %62 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %61, align 8
  %63 = icmp eq %"class.blink::LayoutText"* %62, %34
  br i1 %63, label %64, label %50

64:                                               ; preds = %55, %4
  %65 = phi %"struct.WTF::KeyValuePair.3039"* [ %31, %4 ], [ %60, %55 ]
  %66 = icmp eq %"struct.WTF::KeyValuePair.3039"* %65, null
  br i1 %66, label %70, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.3039", %"struct.WTF::KeyValuePair.3039"* %65, i64 0, i32 1
  %69 = load %"class.blink::(anonymous namespace)::SecureTextTimer"*, %"class.blink::(anonymous namespace)::SecureTextTimer"** %68, align 8
  br label %70

70:                                               ; preds = %50, %1, %64, %67
  %71 = phi %"class.blink::(anonymous namespace)::SecureTextTimer"* [ %69, %67 ], [ null, %64 ], [ null, %1 ], [ null, %50 ]
  ret %"class.blink::(anonymous namespace)::SecureTextTimer"* %71
}

declare void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"*, i16*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutText15SetTextIfNeededE13scoped_refptrIN3WTF10StringImplEE(%"class.blink::LayoutText"*, %"class.WTF::StringImpl"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 7
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* %1) #19
  br i1 %6, label %30, label %7

7:                                                ; preds = %2
  %8 = ptrtoint %"class.WTF::StringImpl"* %1 to i64
  %9 = bitcast %"class.WTF::String"* %3 to i64*
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  store i64 %8, i64* %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %12
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi i32 [ %20, %19 ], [ %18, %12 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #19
  br label %25

25:                                               ; preds = %24, %21, %7
  %26 = bitcast %"class.blink::LayoutText"* %0 to void (%"class.blink::LayoutText"*)***
  %27 = load void (%"class.blink::LayoutText"*)**, void (%"class.blink::LayoutText"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::LayoutText"*)*, void (%"class.blink::LayoutText"*)** %27, i64 122
  %29 = load void (%"class.blink::LayoutText"*)*, void (%"class.blink::LayoutText"*)** %28, align 8
  tail call void %29(%"class.blink::LayoutText"* %0) #19
  br label %45

30:                                               ; preds = %2
  %31 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %30
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #19
  br label %45

45:                                               ; preds = %25, %30, %41, %44
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutText13TextDidChangeEv(%"class.blink::LayoutText"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 7
  %4 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %3, align 8
  %5 = icmp eq %"class.blink::LayoutObject"* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason12kTextChangedE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null) #19
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %2, i8 zeroext 3) #19
  tail call void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"* %2, i32 1) #19
  br label %7

7:                                                ; preds = %1, %6
  tail call void @_ZN5blink10LayoutText32TextDidChangeWithoutInvalidationEv(%"class.blink::LayoutText"* %0)
  ret void
}

declare %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"*) local_unnamed_addr #1

declare void @_ZN5blink21ContentCaptureManager17OnNodeTextChangedERNS_4NodeE(%"class.blink::ContentCaptureManager"*, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutText37InvalidateSubtreeLayoutForFontUpdatesEv(%"class.blink::LayoutText"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink12LayoutObject19IsFontFallbackValidEv(%"class.blink::LayoutObject"* %2) #19
  br i1 %3, label %8, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 1
  %6 = load i16, i16* %5, align 8
  %7 = and i16 %6, -1153
  store i16 %7, i16* %5, align 8
  tail call void @_ZN5blink12LayoutObject22SetNeedsCollectInlinesEv(%"class.blink::LayoutObject"* %2) #19
  tail call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason13kFontsChangedE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null) #19
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %2, i8 zeroext 3) #19
  tail call void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"* %2, i32 1) #19
  br label %8

8:                                                ; preds = %1, %4
  ret void
}

declare zeroext i1 @_ZNK5blink12LayoutObject19IsFontFallbackValidEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutText30DirtyOrDeleteLineBoxesIfNeededEb(%"class.blink::LayoutText"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::NGInlineCursor", align 8
  br i1 %1, label %4, label %30

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %7 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %6 to i96*
  %8 = load i96, i96* %7, align 4
  %9 = and i96 %8, 268435456
  %10 = icmp eq i96 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0, i32 0
  tail call void @_ZN5blink13InlineBoxListINS_13InlineTextBoxEE15DeleteLineBoxesEv(%"class.blink::InlineBoxList.3034"* %12) #19
  br label %63

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 1
  %15 = load i16, i16* %14, align 8
  %16 = and i16 %15, 16384
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %63, label %18, !prof !4

18:                                               ; preds = %13
  %19 = and i16 %15, -16385
  store i16 %19, i16* %14, align 8
  %20 = bitcast %"class.blink::NGInlineCursor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %20) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 112, i1 false) #19
  %21 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %3, i64 0, i32 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 81, i1 false) #19
  %22 = bitcast %"class.blink::LayoutBlockFlow"** %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 20, i1 false) #19
  call void @_ZN5blink14NGInlineCursor6MoveToERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"* nonnull %3, %"class.blink::LayoutObject"* dereferenceable(88) %5) #19
  %23 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %3, i64 0, i32 0, i32 0
  %24 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %23, align 8
  %25 = icmp eq %"class.blink::NGFragmentItem"* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %18, %26
  call void @_ZN5blink23NGAbstractInlineTextBox11WillDestroyERKNS_14NGInlineCursorE(%"class.blink::NGInlineCursor"* nonnull dereferenceable(112) %3) #19
  call void @_ZN5blink14NGInlineCursor29MoveToNextForSameLayoutObjectEv(%"class.blink::NGInlineCursor"* nonnull %3) #19
  %27 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %23, align 8
  %28 = icmp eq %"class.blink::NGFragmentItem"* %27, null
  br i1 %28, label %29, label %26

29:                                               ; preds = %26, %18
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %20) #19
  br label %63

30:                                               ; preds = %2
  %31 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 1
  %32 = load i16, i16* %31, align 8
  %33 = and i16 %32, 64
  %34 = icmp eq i16 %33, 0
  br i1 %34, label %35, label %63

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %37 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %36 to i96*
  %38 = load i96, i96* %37, align 4
  %39 = and i96 %38, 268435456
  %40 = icmp eq i96 %39, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %35
  %42 = tail call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #19
  br label %45

43:                                               ; preds = %35
  %44 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0
  br label %45

45:                                               ; preds = %43, %41
  %46 = phi %"class.blink::InlineTextBoxList"* [ %42, %41 ], [ %44, %43 ]
  %47 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %46, i64 0, i32 0, i32 0
  %48 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %47, align 8
  %49 = icmp eq %"class.blink::InlineTextBox"* %48, null
  br i1 %49, label %60, label %50

50:                                               ; preds = %45, %50
  %51 = phi %"class.blink::InlineTextBox"* [ %58, %50 ], [ %48, %45 ]
  %52 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %51, i64 0, i32 0
  %53 = bitcast %"class.blink::InlineTextBox"* %51 to void (%"class.blink::InlineBox"*)***
  %54 = load void (%"class.blink::InlineBox"*)**, void (%"class.blink::InlineBox"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %54, i64 29
  %56 = load void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %55, align 8
  tail call void %56(%"class.blink::InlineBox"* %52) #19
  %57 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %51, i64 0, i32 2
  %58 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %57, align 8
  %59 = icmp eq %"class.blink::InlineTextBox"* %58, null
  br i1 %59, label %60, label %50

60:                                               ; preds = %50, %45
  %61 = load i16, i16* %31, align 8
  %62 = and i16 %61, -193
  store i16 %62, i16* %31, align 8
  br label %63

63:                                               ; preds = %29, %13, %11, %30, %60
  %64 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 1
  %65 = load i16, i16* %64, align 8
  %66 = and i16 %65, -193
  store i16 %66, i16* %64, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutText14DirtyLineBoxesEv(%"class.blink::LayoutText"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 268435456
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = tail call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #19
  br label %11

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0
  br label %11

11:                                               ; preds = %7, %9
  %12 = phi %"class.blink::InlineTextBoxList"* [ %8, %7 ], [ %10, %9 ]
  %13 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %12, i64 0, i32 0, i32 0
  %14 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %13, align 8
  %15 = icmp eq %"class.blink::InlineTextBox"* %14, null
  br i1 %15, label %16, label %20

16:                                               ; preds = %20, %11
  %17 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 1
  %18 = load i16, i16* %17, align 8
  %19 = and i16 %18, -193
  store i16 %19, i16* %17, align 8
  ret void

20:                                               ; preds = %11, %20
  %21 = phi %"class.blink::InlineTextBox"* [ %28, %20 ], [ %14, %11 ]
  %22 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %21, i64 0, i32 0
  %23 = bitcast %"class.blink::InlineTextBox"* %21 to void (%"class.blink::InlineBox"*)***
  %24 = load void (%"class.blink::InlineBox"*)**, void (%"class.blink::InlineBox"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %24, i64 29
  %26 = load void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %25, align 8
  tail call void %26(%"class.blink::InlineBox"* %22) #19
  %27 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %21, i64 0, i32 2
  %28 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %27, align 8
  %29 = icmp eq %"class.blink::InlineTextBox"* %28, null
  br i1 %29, label %16, label %20
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::InlineTextBox"* @_ZN5blink10LayoutText13CreateTextBoxEit(%"class.blink::LayoutText"*, i32, i16 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  %5 = tail call i8* @_ZN5blink9InlineBoxnwEm(i64 88) #19
  %6 = bitcast i8* %5 to %"class.blink::InlineTextBox"*
  %7 = bitcast i8* %5 to i32 (...)***
  %8 = getelementptr inbounds i8, i8* %5, i64 8
  store i8 21, i8* %8, align 8
  %9 = getelementptr inbounds i8, i8* %5, i64 16
  %10 = getelementptr inbounds i8, i8* %5, i64 40
  %11 = bitcast i8* %10 to %"class.blink::LayoutObject"**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #19
  store %"class.blink::LayoutObject"* %4, %"class.blink::LayoutObject"** %11, align 8
  %12 = getelementptr inbounds i8, i8* %5, i64 48
  %13 = bitcast i8* %12 to i32*
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds i8, i8* %5, i64 52
  %15 = bitcast i8* %14 to i32*
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %5, i64 56
  %17 = bitcast i8* %16 to i32*
  store i32 0, i32* %17, align 4
  %18 = getelementptr inbounds i8, i8* %5, i64 60
  %19 = bitcast i8* %18 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = and i32 %20, -1073741824
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [41 x i8*] }, { [41 x i8*] }* @_ZTVN5blink13InlineTextBoxE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %22 = getelementptr inbounds i8, i8* %5, i64 64
  %23 = getelementptr inbounds i8, i8* %5, i64 80
  %24 = bitcast i8* %23 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #19
  store i32 %1, i32* %24, align 8
  %25 = getelementptr inbounds i8, i8* %5, i64 84
  %26 = bitcast i8* %25 to i16*
  store i16 %2, i16* %26, align 4
  %27 = getelementptr inbounds i8, i8* %5, i64 86
  %28 = bitcast i8* %27 to i16*
  store i16 -1, i16* %28, align 2
  %29 = or i32 %21, 149504
  store i32 %29, i32* %19, align 4
  ret %"class.blink::InlineTextBox"* %6
}

declare i8* @_ZN5blink9InlineBoxnwEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::InlineTextBox"* @_ZN5blink10LayoutText19CreateInlineTextBoxEit(%"class.blink::LayoutText"*, i32, i16 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.blink::LayoutText"* %0 to %"class.blink::InlineTextBox"* (%"class.blink::LayoutText"*, i32, i16)***
  %6 = load %"class.blink::InlineTextBox"* (%"class.blink::LayoutText"*, i32, i16)**, %"class.blink::InlineTextBox"* (%"class.blink::LayoutText"*, i32, i16)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::InlineTextBox"* (%"class.blink::LayoutText"*, i32, i16)*, %"class.blink::InlineTextBox"* (%"class.blink::LayoutText"*, i32, i16)** %6, i64 123
  %8 = load %"class.blink::InlineTextBox"* (%"class.blink::LayoutText"*, i32, i16)*, %"class.blink::InlineTextBox"* (%"class.blink::LayoutText"*, i32, i16)** %7, align 8
  %9 = tail call %"class.blink::InlineTextBox"* %8(%"class.blink::LayoutText"* %0, i32 %1, i16 zeroext %2) #19
  %10 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  %13 = and i96 %12, 268435456
  %14 = icmp eq i96 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %3
  %16 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #19
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0), i32 604, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.6, i64 0, i64 0)) #19
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #19
  br label %18

18:                                               ; preds = %3, %15
  %19 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0, i32 0
  call void @_ZN5blink13InlineBoxListINS_13InlineTextBoxEE13AppendLineBoxEPS1_(%"class.blink::InlineBoxList.3034"* %19, %"class.blink::InlineTextBox"* %9) #19
  ret %"class.blink::InlineTextBox"* %9
}

declare void @_ZN5blink13InlineBoxListINS_13InlineTextBoxEE13AppendLineBoxEPS1_(%"class.blink::InlineBoxList.3034"*, %"class.blink::InlineTextBox"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutText15PositionLineBoxEPNS_9InlineBoxE(%"class.blink::LayoutText"*, %"class.blink::InlineBox"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.blink::InlineBox"* %1 to %"class.blink::InlineTextBox"*
  %5 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %4, i64 0, i32 4
  %6 = load i16, i16* %5, align 4
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %8, label %19

8:                                                ; preds = %2
  tail call void @_ZN5blink9InlineBox6RemoveENS_13MarkLineBoxesE(%"class.blink::InlineBox"* %1, i32 1) #19
  %9 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %10 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %9 to i96*
  %11 = load i96, i96* %10, align 4
  %12 = and i96 %11, 268435456
  %13 = icmp eq i96 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %8
  %15 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #19
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0), i32 604, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.6, i64 0, i64 0)) #19
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #19
  br label %17

17:                                               ; preds = %8, %14
  %18 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0, i32 0
  call void @_ZN5blink13InlineBoxListINS_13InlineTextBoxEE13RemoveLineBoxEPS1_(%"class.blink::InlineBoxList.3034"* %18, %"class.blink::InlineTextBox"* %4) #19
  call void @_ZN5blink13InlineTextBox7DestroyEv(%"class.blink::InlineTextBox"* %4) #19
  br label %28

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %1, i64 0, i32 7, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 1
  %23 = load i16, i16* %22, align 8
  %24 = trunc i32 %21 to i16
  %25 = shl i16 %24, 7
  %26 = and i16 %25, 512
  %27 = or i16 %26, %23
  store i16 %27, i16* %22, align 8
  br label %28

28:                                               ; preds = %19, %17
  ret void
}

declare void @_ZN5blink13InlineTextBox7DestroyEv(%"class.blink::InlineTextBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK5blink10LayoutText5WidthEjjNS_10LayoutUnitENS_13TextDirectionEbPN3WTF7HashSetIPKNS_14SimpleFontDataENS3_7PtrHashIS6_EENS3_10HashTraitsIS7_EENS3_18PartitionAllocatorEEEPNS_9FloatRectEf(%"class.blink::LayoutText"*, i32, i32, i32, i8 zeroext, i1 zeroext, %"class.WTF::HashSet.3131"*, %"class.blink::FloatRect"*, float) unnamed_addr #0 align 2 {
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 7, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %76, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp ugt i32 %17, %1
  br i1 %18, label %19, label %76

19:                                               ; preds = %15
  %20 = icmp ult i32 %17, %2
  %21 = add i32 %2, %1
  %22 = icmp ugt i32 %21, %17
  %23 = or i1 %20, %22
  %24 = sub i32 %17, %1
  %25 = select i1 %23, i32 %24, i32 %2
  br i1 %5, label %26, label %61

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  %28 = load %"class.blink::Node"*, %"class.blink::Node"** %27, align 8
  %29 = icmp eq %"class.blink::Node"* %28, null
  br i1 %29, label %30, label %37

30:                                               ; preds = %26, %30
  %31 = phi %"class.blink::LayoutObject"* [ %33, %30 ], [ %11, %26 ]
  %32 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %31, i64 0, i32 7
  %33 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %33, i64 0, i32 6, i32 0, i32 0
  %35 = load %"class.blink::Node"*, %"class.blink::Node"** %34, align 8
  %36 = icmp eq %"class.blink::Node"* %35, null
  br i1 %36, label %30, label %37

37:                                               ; preds = %30, %26
  %38 = phi %"class.blink::Node"* [ %28, %26 ], [ %35, %30 ]
  %39 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %38, i64 0, i32 3, i32 0, i32 0
  %40 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %40, i64 0, i32 2, i32 0, i32 0
  %42 = load %"class.blink::Document"*, %"class.blink::Document"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %42, i64 0, i32 59, i32 0, i32 0
  %44 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %44, i64 0, i32 31, i32 0, i32 0
  %46 = load %"class.blink::CSSGlobalRuleSet"*, %"class.blink::CSSGlobalRuleSet"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %46, i64 0, i32 0, i32 11
  %48 = load i8, i8* %47, align 8
  %49 = and i8 %48, 1
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %37
  %52 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #19
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.21, i64 0, i64 0), i32 37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.22, i64 0, i64 0)) #19
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #19
  br label %54

54:                                               ; preds = %51, %37
  %55 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %46, i64 0, i32 0, i32 0, i32 0
  %56 = load i8, i8* %55, align 8, !range !2
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %61, label %58

58:                                               ; preds = %54
  %59 = call %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"* %11) #19
  %60 = icmp eq %"class.blink::ComputedStyle"* %59, null
  br i1 %60, label %61, label %64

61:                                               ; preds = %19, %54, %58
  %62 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 5, i32 0
  %63 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %62, align 8
  br label %64

64:                                               ; preds = %61, %58
  %65 = phi %"class.blink::ComputedStyle"* [ %59, %58 ], [ %63, %61 ]
  %66 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %65, i64 0, i32 0, i32 0, i32 0, i32 0
  %67 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %67, i64 0, i32 1, i32 0, i32 0
  %69 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %69, i64 0, i32 1
  %71 = bitcast %"class.blink::LayoutText"* %0 to float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.3131"*, %"class.blink::FloatRect"*, float)***
  %72 = load float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.3131"*, %"class.blink::FloatRect"*, float)**, float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.3131"*, %"class.blink::FloatRect"*, float)*** %71, align 8
  %73 = getelementptr inbounds float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.3131"*, %"class.blink::FloatRect"*, float)*, float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.3131"*, %"class.blink::FloatRect"*, float)** %72, i64 111
  %74 = load float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.3131"*, %"class.blink::FloatRect"*, float)*, float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.3131"*, %"class.blink::FloatRect"*, float)** %73, align 8
  %75 = call float %74(%"class.blink::LayoutText"* %0, i32 %1, i32 %25, %"class.blink::Font"* dereferenceable(88) %70, i32 %3, i8 zeroext %4, %"class.WTF::HashSet.3131"* %6, %"class.blink::FloatRect"* %7, float %8) #19
  br label %76

76:                                               ; preds = %9, %15, %64
  %77 = phi float [ %75, %64 ], [ 0.000000e+00, %15 ], [ 0.000000e+00, %9 ]
  ret float %77
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK5blink10LayoutText5WidthEjjRKNS_4FontENS_10LayoutUnitENS_13TextDirectionEPN3WTF7HashSetIPKNS_14SimpleFontDataENS6_7PtrHashIS9_EENS6_10HashTraitsISA_EENS6_18PartitionAllocatorEEEPNS_9FloatRectEf(%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"* dereferenceable(88), i32, i8 zeroext, %"class.WTF::HashSet.3131"*, %"class.blink::FloatRect"*, float) unnamed_addr #0 align 2 {
  %10 = alloca %"class.WTF::HashSet.3131", align 8
  %11 = alloca %"class.blink::FloatRect", align 4
  %12 = alloca %"class.blink::TextRun", align 8
  %13 = alloca %"class.blink::FloatRect", align 4
  %14 = alloca %"class.blink::TextRun", align 8
  %15 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  %16 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 7, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %227, label %19

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %227, label %23

23:                                               ; preds = %19
  %24 = tail call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* %3) #19
  %25 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %24, i64 0, i32 2
  %26 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %25, align 8
  %27 = icmp eq %"class.blink::SimpleFontData"* %26, null
  br i1 %27, label %28, label %32

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %3, i64 0, i32 0
  %30 = tail call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %24, %"class.blink::FontDescription"* dereferenceable(80) %29) #19
  store %"class.blink::SimpleFontData"* %30, %"class.blink::SimpleFontData"** %25, align 8
  %31 = icmp eq %"class.blink::SimpleFontData"* %30, null
  br i1 %31, label %227, label %32

32:                                               ; preds = %23, %28
  %33 = phi %"class.blink::SimpleFontData"* [ %30, %28 ], [ %26, %23 ]
  %34 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 5, i32 0
  %35 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %35, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %37, i64 0, i32 1, i32 0, i32 0
  %39 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %39, i64 0, i32 1
  %41 = icmp eq %"class.blink::Font"* %40, %3
  br i1 %41, label %42, label %185

42:                                               ; preds = %32
  %43 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %35, i64 0, i32 0, i32 9
  %44 = bitcast [20 x i8]* %43 to i160*
  %45 = load i160, i160* %44, align 8
  %46 = lshr i160 %45, 12
  %47 = trunc i160 %46 to i32
  %48 = and i32 %47, 127
  %49 = icmp ne i32 %48, 1
  %50 = icmp ne i32 %48, 16
  %51 = and i1 %49, %50
  %52 = icmp ne i32 %1, 0
  %53 = or i1 %52, %51
  br i1 %53, label %108, label %54

54:                                               ; preds = %42
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %60, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  br label %60

60:                                               ; preds = %54, %57
  %61 = phi i32 [ %59, %57 ], [ 0, %54 ]
  %62 = icmp eq i32 %61, %2
  br i1 %62, label %63, label %108

63:                                               ; preds = %60
  %64 = icmp eq %"class.WTF::HashSet.3131"* %6, null
  %65 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %66 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %65 to i96*
  %67 = load i96, i96* %66, align 4
  %68 = and i96 %67, 256
  %69 = icmp eq i96 %68, 0
  br i1 %64, label %95, label %70

70:                                               ; preds = %63
  br i1 %69, label %71, label %76

71:                                               ; preds = %70
  %72 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 1
  %73 = load i16, i16* %72, align 8
  %74 = and i16 %73, 1024
  %75 = icmp eq i16 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %70, %71
  tail call void @_ZN5blink10LayoutText29ComputePreferredLogicalWidthsEfRN3WTF7HashSetIPKNS_14SimpleFontDataENS1_7PtrHashIS4_EENS1_10HashTraitsIS5_EENS1_18PartitionAllocatorEEERNS_9FloatRectE(%"class.blink::LayoutText"* %0, float 0.000000e+00, %"class.WTF::HashSet.3131"* nonnull dereferenceable(24) %6, %"class.blink::FloatRect"* dereferenceable(16) %7)
  br label %92

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %33, i64 0, i32 1, i32 1
  %79 = load float, float* %78, align 4
  %80 = fsub float -0.000000e+00, %79
  %81 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 4
  %82 = bitcast float* %81 to i32*
  %83 = load i32, i32* %82, align 4
  %84 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %33, i64 0, i32 1, i32 2
  %85 = load float, float* %84, align 4
  %86 = fadd float %79, %85
  %87 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %7, i64 0, i32 0, i32 0
  store float 0.000000e+00, float* %87, align 4
  %88 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %7, i64 0, i32 0, i32 1
  store float %80, float* %88, align 4
  %89 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %7, i64 0, i32 1, i32 0
  %90 = bitcast float* %89 to i32*
  store i32 %83, i32* %90, align 4
  %91 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %7, i64 0, i32 1, i32 1
  store float %86, float* %91, align 4
  br label %92

92:                                               ; preds = %77, %76
  %93 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 4
  %94 = load float, float* %93, align 4
  br label %227

95:                                               ; preds = %63
  br i1 %69, label %105, label %96

96:                                               ; preds = %95
  %97 = bitcast %"class.WTF::HashSet.3131"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #19
  %98 = getelementptr inbounds %"class.WTF::HashSet.3131", %"class.WTF::HashSet.3131"* %10, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %97, i8 -86, i64 24, i1 false) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %97, i8 0, i64 20, i1 false) #19
  %99 = bitcast %"class.blink::FloatRect"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %99) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %99, i8 0, i64 16, i1 false) #19
  call void @_ZN5blink10LayoutText29ComputePreferredLogicalWidthsEfRN3WTF7HashSetIPKNS_14SimpleFontDataENS1_7PtrHashIS4_EENS1_10HashTraitsIS5_EENS1_18PartitionAllocatorEEERNS_9FloatRectE(%"class.blink::LayoutText"* %0, float 0.000000e+00, %"class.WTF::HashSet.3131"* nonnull dereferenceable(24) %10, %"class.blink::FloatRect"* nonnull dereferenceable(16) %11) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %99) #19
  %100 = load %"class.blink::SimpleFontData"**, %"class.blink::SimpleFontData"*** %98, align 8
  %101 = icmp eq %"class.blink::SimpleFontData"** %100, null
  br i1 %101, label %104, label %102, !prof !4

102:                                              ; preds = %96
  %103 = bitcast %"class.blink::SimpleFontData"** %100 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %103) #19
  store %"class.blink::SimpleFontData"** null, %"class.blink::SimpleFontData"*** %98, align 8
  br label %104

104:                                              ; preds = %102, %96
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97) #19
  br label %105

105:                                              ; preds = %95, %104
  %106 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 4
  %107 = load float, float* %106, align 4
  br label %227

108:                                              ; preds = %60, %42
  %109 = sitofp i32 %4 to float
  %110 = fmul float %109, 1.562500e-02
  %111 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %35, i64 0, i32 0, i32 1, i32 0, i32 0
  %112 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %111, align 8
  %113 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %112, i64 0, i32 23
  %114 = bitcast [5 x i8]* %113 to i40*
  %115 = load i40, i40* %114, align 8
  %116 = and i40 %115, 4294967296
  %117 = icmp eq i40 %116, 0
  br i1 %117, label %133, label %118

118:                                              ; preds = %108
  %119 = bitcast %"class.blink::LayoutText"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %120 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %119, align 8
  %121 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %120, i64 81
  %122 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %121, align 8
  %123 = tail call zeroext i1 %122(%"class.blink::LayoutObject"* %15) #19
  br i1 %123, label %124, label %133

124:                                              ; preds = %118
  %125 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 1, i32 0, i32 1
  %126 = bitcast %"class.blink::DisplayItemClient.base"* %125 to i8*
  %127 = load i8, i8* %126, align 8
  %128 = and i8 %127, 1
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %133, label %130

130:                                              ; preds = %124
  %131 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %3, i64 0, i32 0, i32 5
  %132 = load float, float* %131, align 4
  br label %227

133:                                              ; preds = %124, %118, %108
  %134 = bitcast %"class.blink::TextRun"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %134) #19
  %135 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %12, i64 0, i32 1
  %136 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %12, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %134, i8 -86, i64 16, i1 false) #19
  store float 0xFFFFFFFFE0000000, float* %136, align 8
  %137 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %12, i64 0, i32 4
  store float 0xFFFFFFFFE0000000, float* %137, align 4
  %138 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %12, i64 0, i32 5
  store i16 -21846, i16* %138, align 8
  %139 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %12, i64 0, i32 6, i64 0
  store i8 -86, i8* %139, align 2
  %140 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %12, i64 0, i32 6, i64 1
  store i8 -86, i8* %140, align 1
  %141 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %12, i64 0, i32 7, i32 0
  store float 0xFFFFFFFFE0000000, float* %141, align 4
  %142 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %12, i64 0, i32 7, i32 1
  %143 = bitcast i8* %142 to i64*
  store i64 -6148914691236517206, i64* %143, align 4
  %144 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %34, align 8
  call void @_ZN5blink16ConstructTextRunERKNS_4FontEPKNS_10LayoutTextEjjRKNS_13ComputedStyleENS_13TextDirectionE(%"class.blink::TextRun"* nonnull sret %12, %"class.blink::Font"* dereferenceable(88) %3, %"class.blink::LayoutText"* %0, i32 %1, i32 %2, %"class.blink::ComputedStyle"* dereferenceable(104) %144, i8 zeroext %5) #19
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %146 = icmp eq %"class.WTF::StringImpl"* %145, null
  br i1 %146, label %150, label %147

147:                                              ; preds = %133
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 1
  %149 = load i32, i32* %148, align 4
  br label %150

150:                                              ; preds = %147, %133
  %151 = phi i32 [ %149, %147 ], [ 0, %133 ]
  %152 = sub i32 %151, %1
  store i32 %152, i32* %135, align 8
  %153 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %34, align 8
  %154 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %153, i64 0, i32 0, i32 9
  %155 = bitcast [20 x i8]* %154 to i160*
  %156 = load i160, i160* %155, align 8
  %157 = and i160 %156, 286720
  %158 = icmp ne i160 %157, 0
  %159 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %153, i64 0, i32 0, i32 1, i32 0, i32 0
  %160 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %159, align 8
  %161 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %160, i64 0, i32 15
  %162 = bitcast %"struct.blink::TabSize"* %161 to i64*
  %163 = load i64, i64* %162, align 4
  %164 = zext i1 %158 to i16
  %165 = load i16, i16* %138, align 8
  %166 = shl nuw nsw i16 %164, 3
  %167 = and i16 %165, -9
  %168 = or i16 %167, %166
  store i16 %168, i16* %138, align 8
  %169 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %12, i64 0, i32 7
  %170 = bitcast %"struct.blink::TabSize"* %169 to i40*
  %171 = trunc i64 %163 to i40
  store i40 %171, i40* %170, align 4
  %172 = fadd float %110, 0.000000e+00
  store float %172, float* %136, align 8
  store float %8, float* %137, align 4
  %173 = bitcast %"class.blink::FloatRect"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %173) #19
  %174 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %13, i64 0, i32 0, i32 0
  %175 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %13, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %173, i8 0, i64 16, i1 false) #19
  %176 = icmp ne %"class.blink::FloatRect"* %7, null
  %177 = select i1 %176, %"class.blink::FloatRect"* %13, %"class.blink::FloatRect"* null
  %178 = call float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"* %3, %"class.blink::TextRun"* nonnull dereferenceable(40) %12, %"class.WTF::HashSet.3131"* %6, %"class.blink::FloatRect"* %177) #19
  br i1 %176, label %179, label %184

179:                                              ; preds = %150
  %180 = load float, float* %174, align 4
  %181 = fadd float %180, 0.000000e+00
  store float %181, float* %174, align 4
  %182 = load float, float* %175, align 4
  %183 = fadd float %182, 0.000000e+00
  store float %183, float* %175, align 4
  call void @_ZN5blink9FloatRect5UniteERKS0_(%"class.blink::FloatRect"* nonnull %7, %"class.blink::FloatRect"* nonnull dereferenceable(16) %13) #19
  br label %184

184:                                              ; preds = %179, %150
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %173) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %134) #19
  br label %227

185:                                              ; preds = %32
  %186 = bitcast %"class.blink::TextRun"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %186) #19
  %187 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %14, i64 0, i32 1
  %188 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %14, i64 0, i32 3
  %189 = bitcast %"class.blink::TextRun"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %189, i8 -86, i64 16, i1 false)
  store float 0xFFFFFFFFE0000000, float* %188, align 8
  %190 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %14, i64 0, i32 4
  store float 0xFFFFFFFFE0000000, float* %190, align 4
  %191 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %14, i64 0, i32 5
  store i16 -21846, i16* %191, align 8
  %192 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %14, i64 0, i32 6, i64 0
  store i8 -86, i8* %192, align 2
  %193 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %14, i64 0, i32 6, i64 1
  store i8 -86, i8* %193, align 1
  %194 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %14, i64 0, i32 7, i32 0
  store float 0xFFFFFFFFE0000000, float* %194, align 4
  %195 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %14, i64 0, i32 7, i32 1
  %196 = bitcast i8* %195 to i64*
  store i64 -6148914691236517206, i64* %196, align 4
  call void @_ZN5blink16ConstructTextRunERKNS_4FontEPKNS_10LayoutTextEjjRKNS_13ComputedStyleENS_13TextDirectionE(%"class.blink::TextRun"* nonnull sret %14, %"class.blink::Font"* dereferenceable(88) %3, %"class.blink::LayoutText"* %0, i32 %1, i32 %2, %"class.blink::ComputedStyle"* dereferenceable(104) %35, i8 zeroext %5) #19
  %197 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %198 = icmp eq %"class.WTF::StringImpl"* %197, null
  br i1 %198, label %202, label %199

199:                                              ; preds = %185
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 1
  %201 = load i32, i32* %200, align 4
  br label %202

202:                                              ; preds = %185, %199
  %203 = phi i32 [ %201, %199 ], [ 0, %185 ]
  %204 = sub i32 %203, %1
  store i32 %204, i32* %187, align 8
  %205 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %34, align 8
  %206 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %205, i64 0, i32 0, i32 9
  %207 = bitcast [20 x i8]* %206 to i160*
  %208 = load i160, i160* %207, align 8
  %209 = and i160 %208, 286720
  %210 = icmp ne i160 %209, 0
  %211 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %205, i64 0, i32 0, i32 1, i32 0, i32 0
  %212 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %211, align 8
  %213 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %212, i64 0, i32 15
  %214 = bitcast %"struct.blink::TabSize"* %213 to i64*
  %215 = load i64, i64* %214, align 4
  %216 = zext i1 %210 to i16
  %217 = load i16, i16* %191, align 8
  %218 = shl nuw nsw i16 %216, 3
  %219 = and i16 %217, -9
  %220 = or i16 %219, %218
  store i16 %220, i16* %191, align 8
  %221 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %14, i64 0, i32 7
  %222 = bitcast %"struct.blink::TabSize"* %221 to i40*
  %223 = trunc i64 %215 to i40
  store i40 %223, i40* %222, align 4
  %224 = sitofp i32 %4 to float
  %225 = fmul float %224, 1.562500e-02
  store float %225, float* %188, align 8
  %226 = call float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"* %3, %"class.blink::TextRun"* nonnull dereferenceable(40) %14, %"class.WTF::HashSet.3131"* %6, %"class.blink::FloatRect"* %7) #19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %186) #19
  br label %227

227:                                              ; preds = %9, %184, %130, %28, %105, %92, %202, %19
  %228 = phi float [ 0.000000e+00, %19 ], [ 0.000000e+00, %28 ], [ %94, %92 ], [ %107, %105 ], [ %226, %202 ], [ %178, %184 ], [ %132, %130 ], [ 0.000000e+00, %9 ]
  ret float %228
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink10LayoutText24PhysicalLinesBoundingBoxEv(%"class.blink::LayoutText"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::NGInlineCursor", align 8
  %3 = alloca <2 x i64>, align 16
  %4 = alloca { i64, i64 }, align 8
  %5 = alloca { i64, i64 }, align 8
  %6 = bitcast { i64, i64 }* %5 to %"struct.blink::PhysicalRect"*
  %7 = bitcast { i64, i64 }* %5 to i32*
  %8 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %6, i64 0, i32 0, i32 1, i32 0
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %10 = bitcast i64* %9 to i32*
  %11 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %6, i64 0, i32 1, i32 1, i32 0
  %12 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 16, i1 false) #19
  %13 = bitcast <2 x i64>* %3 to %"struct.blink::PhysicalRect"*
  %14 = bitcast { i64, i64 }* %4 to %"struct.blink::PhysicalRect"*
  %15 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  %16 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %17 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %16 to i96*
  %18 = load i96, i96* %17, align 4
  %19 = and i96 %18, 268435456
  %20 = icmp eq i96 %19, 0
  br i1 %20, label %38, label %21

21:                                               ; preds = %1
  %22 = bitcast %"class.blink::NGInlineCursor"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %22) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 112, i1 false) #19
  %23 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %2, i64 0, i32 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 81, i1 false) #19
  %24 = bitcast %"class.blink::LayoutBlockFlow"** %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 20, i1 false) #19
  call void @_ZN5blink14NGInlineCursor6MoveToERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"* nonnull %2, %"class.blink::LayoutObject"* dereferenceable(88) %15) #19
  %25 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %2, i64 0, i32 0, i32 0
  %26 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %25, align 8
  %27 = icmp eq %"class.blink::NGFragmentItem"* %26, null
  br i1 %27, label %37, label %28

28:                                               ; preds = %21
  %29 = bitcast <2 x i64>* %3 to i8*
  br label %30

30:                                               ; preds = %30, %28
  %31 = phi %"class.blink::NGFragmentItem"* [ %26, %28 ], [ %35, %30 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #19
  %32 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %31, i64 0, i32 2
  %33 = bitcast %"struct.blink::PhysicalRect"* %32 to <2 x i64>*
  %34 = load <2 x i64>, <2 x i64>* %33, align 4
  store <2 x i64> %34, <2 x i64>* %3, align 16
  call void @_ZN5blink12PhysicalRect14UniteIfNonZeroERKS0_(%"struct.blink::PhysicalRect"* nonnull %6, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %13) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #19
  call void @_ZN5blink14NGInlineCursor29MoveToNextForSameLayoutObjectEv(%"class.blink::NGInlineCursor"* nonnull %2) #19
  %35 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %25, align 8
  %36 = icmp eq %"class.blink::NGFragmentItem"* %35, null
  br i1 %36, label %37, label %30

37:                                               ; preds = %30, %21
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %22) #19
  br label %122

38:                                               ; preds = %1
  %39 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 5, i32 0
  %40 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %40, i64 0, i32 0, i32 9
  %42 = bitcast [20 x i8]* %41 to i160*
  %43 = load i160, i160* %42, align 8
  %44 = and i160 %43, 15211807202738752817960438464512
  %45 = icmp eq i160 %44, 5070602400912917605986812821504
  br i1 %45, label %46, label %49, !prof !3

46:                                               ; preds = %38
  %47 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %15, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #19
  %48 = load i96, i96* %17, align 4
  br label %49

49:                                               ; preds = %46, %38
  %50 = phi i96 [ %48, %46 ], [ %18, %38 ]
  %51 = phi %"class.blink::LayoutBlock"* [ %47, %46 ], [ null, %38 ]
  %52 = and i96 %50, 268435456
  %53 = icmp eq i96 %52, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %49
  %55 = tail call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #19
  br label %58

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0
  br label %58

58:                                               ; preds = %56, %54
  %59 = phi %"class.blink::InlineTextBoxList"* [ %55, %54 ], [ %57, %56 ]
  %60 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %59, i64 0, i32 0, i32 0
  %61 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %60, align 8
  %62 = icmp eq %"class.blink::InlineTextBox"* %61, null
  br i1 %62, label %122, label %63

63:                                               ; preds = %58
  %64 = bitcast { i64, i64 }* %4 to i8*
  %65 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %51, i64 0, i32 0
  %66 = bitcast %"class.blink::LayoutText"* %0 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %67 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %68 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  br label %69

69:                                               ; preds = %111, %63
  %70 = phi %"class.blink::InlineTextBox"* [ %61, %63 ], [ %120, %111 ]
  %71 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %70, i64 0, i32 0
  %72 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %70, i64 0, i32 0, i32 5, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %70, i64 0, i32 0, i32 5, i32 1, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %70, i64 0, i32 0, i32 7, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = and i32 %77, 2048
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %83, label %80

80:                                               ; preds = %69
  %81 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %70, i64 0, i32 0, i32 6, i32 0
  %82 = load i32, i32* %81, align 8
  br label %86

83:                                               ; preds = %69
  %84 = call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* %71) #19
  %85 = load i32, i32* %76, align 4
  br label %86

86:                                               ; preds = %83, %80
  %87 = phi i32 [ %77, %80 ], [ %85, %83 ]
  %88 = phi i32 [ %82, %80 ], [ %84, %83 ]
  %89 = and i32 %87, 2048
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %93, label %91

91:                                               ; preds = %86
  %92 = call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* %71) #19
  br label %96

93:                                               ; preds = %86
  %94 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %70, i64 0, i32 0, i32 6, i32 0
  %95 = load i32, i32* %94, align 8
  br label %96

96:                                               ; preds = %93, %91
  %97 = phi i32 [ %92, %91 ], [ %95, %93 ]
  %98 = zext i32 %75 to i64
  %99 = shl nuw i64 %98, 32
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %64) #19
  %100 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %39, align 8
  %101 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %100, i64 0, i32 0, i32 9
  %102 = bitcast [20 x i8]* %101 to i160*
  %103 = load i160, i160* %102, align 8
  %104 = and i160 %103, 15211807202738752817960438464512
  %105 = icmp eq i160 %104, 5070602400912917605986812821504
  br i1 %105, label %106, label %111, !prof !3

106:                                              ; preds = %96
  %107 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %66, align 8
  %108 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %107, i64 106
  %109 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %108, align 8
  %110 = call i32 %109(%"class.blink::LayoutObject"* %15, i32 %73, i32 %88, %"class.blink::LayoutBox"* %65) #19
  br label %111

111:                                              ; preds = %106, %96
  %112 = phi i32 [ %110, %106 ], [ %73, %96 ]
  %113 = zext i32 %112 to i64
  %114 = or i64 %99, %113
  %115 = zext i32 %97 to i64
  %116 = shl nuw i64 %115, 32
  %117 = zext i32 %88 to i64
  %118 = or i64 %116, %117
  store i64 %114, i64* %67, align 8
  store i64 %118, i64* %68, align 8
  call void @_ZN5blink12PhysicalRect14UniteIfNonZeroERKS0_(%"struct.blink::PhysicalRect"* nonnull %6, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %14) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %64) #19
  %119 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %70, i64 0, i32 2
  %120 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %119, align 8
  %121 = icmp eq %"class.blink::InlineTextBox"* %120, null
  br i1 %121, label %122, label %69

122:                                              ; preds = %111, %37, %58
  %123 = load i32, i32* %7, align 8
  %124 = load i32, i32* %8, align 4
  %125 = or i32 %124, %123
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %135

127:                                              ; preds = %122
  %128 = load i32, i32* %10, align 8
  %129 = load i32, i32* %11, align 4
  %130 = or i32 %129, %128
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %135

132:                                              ; preds = %127
  %133 = call i64 @_ZNK5blink10LayoutText19FirstLineBoxTopLeftEv(%"class.blink::LayoutText"* %0)
  %134 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  store i64 %133, i64* %134, align 8
  br label %135

135:                                              ; preds = %122, %127, %132
  %136 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %137 = load i64, i64* %136, align 8
  %138 = insertvalue { i64, i64 } undef, i64 %137, 0
  %139 = load i64, i64* %9, align 8
  %140 = insertvalue { i64, i64 } %138, i64 %139, 1
  ret { i64, i64 } %140
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink10LayoutText26PhysicalVisualOverflowRectEv(%"class.blink::LayoutText"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %6 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %5 to i96*
  %7 = load i96, i96* %6, align 4
  %8 = and i96 %7, 268435456
  %9 = icmp eq i96 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %1
  %11 = tail call { i64, i64 } @_ZN5blink14NGFragmentItem18LocalVisualRectForERKNS_12LayoutObjectE(%"class.blink::LayoutObject"* dereferenceable(88) %4) #19
  %12 = extractvalue { i64, i64 } %11, 0
  %13 = extractvalue { i64, i64 } %11, 1
  br label %324

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %16 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %15, align 8
  %17 = icmp eq %"class.blink::InlineTextBox"* %16, null
  br i1 %17, label %324, label %138

18:                                               ; preds = %138
  %19 = load i96, i96* %6, align 4
  %20 = and i96 %19, 268435456
  %21 = icmp eq i96 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %18
  %23 = tail call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #19
  br label %26

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0
  br label %26

26:                                               ; preds = %22, %24
  %27 = phi %"class.blink::InlineTextBoxList"* [ %23, %22 ], [ %25, %24 ]
  %28 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %28, align 8
  %30 = tail call { i64, i64 } @_ZNK5blink13InlineTextBox19LogicalOverflowRectEv(%"class.blink::InlineTextBox"* %29) #19
  %31 = extractvalue { i64, i64 } %30, 0
  %32 = lshr i64 %31, 32
  %33 = trunc i64 %32 to i32
  %34 = icmp sgt i32 %147, -1
  %35 = select i1 %34, i32 -2147483648, i32 2147483647
  %36 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %156, i32 %147) #19
  %37 = extractvalue { i32, i1 } %36, 1
  %38 = extractvalue { i32, i1 } %36, 0
  %39 = select i1 %37, i32 %35, i32 %38, !prof !3
  %40 = load i96, i96* %6, align 4
  %41 = and i96 %40, 268435456
  %42 = icmp eq i96 %41, 0
  br i1 %42, label %45, label %43

43:                                               ; preds = %26
  %44 = tail call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #19
  br label %47

45:                                               ; preds = %26
  %46 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0
  br label %47

47:                                               ; preds = %43, %45
  %48 = phi %"class.blink::InlineTextBoxList"* [ %44, %43 ], [ %46, %45 ]
  %49 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %48, i64 0, i32 0, i32 1
  %50 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %49, align 8
  %51 = tail call { i64, i64 } @_ZNK5blink13InlineTextBox19LogicalOverflowRectEv(%"class.blink::InlineTextBox"* %50) #19
  %52 = extractvalue { i64, i64 } %51, 0
  %53 = lshr i64 %52, 32
  %54 = trunc i64 %53 to i32
  %55 = extractvalue { i64, i64 } %51, 1
  %56 = lshr i64 %55, 32
  %57 = trunc i64 %56 to i32
  %58 = icmp slt i32 %57, 0
  %59 = select i1 %58, i32 -2147483648, i32 2147483647
  %60 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %54, i32 %57) #19
  %61 = extractvalue { i32, i1 } %60, 1
  %62 = extractvalue { i32, i1 } %60, 0
  %63 = select i1 %61, i32 %59, i32 %62, !prof !3
  %64 = icmp sgt i32 %33, -1
  %65 = select i1 %64, i32 -2147483648, i32 2147483647
  %66 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %63, i32 %33) #19
  %67 = extractvalue { i32, i1 } %66, 1
  %68 = extractvalue { i32, i1 } %66, 0
  %69 = select i1 %67, i32 %65, i32 %68, !prof !3
  %70 = load i96, i96* %6, align 4
  %71 = and i96 %70, 268435456
  %72 = icmp eq i96 %71, 0
  br i1 %72, label %75, label %73

73:                                               ; preds = %47
  %74 = tail call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #19
  br label %77

75:                                               ; preds = %47
  %76 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0
  br label %77

77:                                               ; preds = %73, %75
  %78 = phi %"class.blink::InlineTextBoxList"* [ %74, %73 ], [ %76, %75 ]
  %79 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %78, i64 0, i32 0, i32 0
  %80 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %80, i64 0, i32 0, i32 7, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = and i32 %82, 1
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %120, label %85

85:                                               ; preds = %77
  %86 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  %87 = load %"class.blink::Node"*, %"class.blink::Node"** %86, align 8
  %88 = icmp eq %"class.blink::Node"* %87, null
  br i1 %88, label %89, label %96

89:                                               ; preds = %85, %89
  %90 = phi %"class.blink::LayoutObject"* [ %92, %89 ], [ %4, %85 ]
  %91 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %90, i64 0, i32 7
  %92 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %91, align 8
  %93 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %92, i64 0, i32 6, i32 0, i32 0
  %94 = load %"class.blink::Node"*, %"class.blink::Node"** %93, align 8
  %95 = icmp eq %"class.blink::Node"* %94, null
  br i1 %95, label %89, label %96

96:                                               ; preds = %89, %85
  %97 = phi %"class.blink::Node"* [ %87, %85 ], [ %94, %89 ]
  %98 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %97, i64 0, i32 3, i32 0, i32 0
  %99 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %99, i64 0, i32 2, i32 0, i32 0
  %101 = load %"class.blink::Document"*, %"class.blink::Document"** %100, align 8
  %102 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %101, i64 0, i32 59, i32 0, i32 0
  %103 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %102, align 8
  %104 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %103, i64 0, i32 31, i32 0, i32 0
  %105 = load %"class.blink::CSSGlobalRuleSet"*, %"class.blink::CSSGlobalRuleSet"** %104, align 8
  %106 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %105, i64 0, i32 0, i32 11
  %107 = load i8, i8* %106, align 8
  %108 = and i8 %107, 1
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %110, label %113

110:                                              ; preds = %96
  %111 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %111) #19
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.21, i64 0, i64 0), i32 37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.22, i64 0, i64 0)) #19
  %112 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111) #19
  br label %113

113:                                              ; preds = %110, %96
  %114 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %105, i64 0, i32 0, i32 0, i32 0
  %115 = load i8, i8* %114, align 8, !range !2
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %120, label %117

117:                                              ; preds = %113
  %118 = call %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"* %4) #19
  %119 = icmp eq %"class.blink::ComputedStyle"* %118, null
  br i1 %119, label %120, label %123

120:                                              ; preds = %77, %113, %117
  %121 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 5, i32 0
  %122 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %121, align 8
  br label %123

123:                                              ; preds = %120, %117
  %124 = phi %"class.blink::ComputedStyle"* [ %118, %117 ], [ %122, %120 ]
  %125 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %124, i64 0, i32 0, i32 0, i32 0, i32 0
  %126 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %125, align 8
  %127 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %126, i64 0, i32 1, i32 0, i32 0
  %128 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %127, align 8
  %129 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %128, i64 0, i32 1
  %130 = call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* %129) #19
  %131 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %130, i64 0, i32 2
  %132 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %131, align 8
  %133 = icmp eq %"class.blink::SimpleFontData"* %132, null
  br i1 %133, label %134, label %160

134:                                              ; preds = %123
  %135 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %129, i64 0, i32 0
  %136 = call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %130, %"class.blink::FontDescription"* dereferenceable(80) %135) #19
  store %"class.blink::SimpleFontData"* %136, %"class.blink::SimpleFontData"** %131, align 8
  %137 = icmp eq %"class.blink::SimpleFontData"* %136, null
  br i1 %137, label %164, label %160

138:                                              ; preds = %14, %138
  %139 = phi i32 [ %156, %138 ], [ -2147483648, %14 ]
  %140 = phi i32 [ %147, %138 ], [ 2147483647, %14 ]
  %141 = phi %"class.blink::InlineTextBox"* [ %158, %138 ], [ %16, %14 ]
  %142 = tail call { i64, i64 } @_ZNK5blink13InlineTextBox19LogicalOverflowRectEv(%"class.blink::InlineTextBox"* nonnull %141) #19
  %143 = extractvalue { i64, i64 } %142, 0
  %144 = trunc i64 %143 to i32
  %145 = extractvalue { i64, i64 } %142, 1
  %146 = icmp sgt i32 %140, %144
  %147 = select i1 %146, i32 %144, i32 %140
  %148 = trunc i64 %145 to i32
  %149 = icmp slt i32 %148, 0
  %150 = select i1 %149, i32 -2147483648, i32 2147483647
  %151 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %144, i32 %148) #19
  %152 = extractvalue { i32, i1 } %151, 1
  %153 = extractvalue { i32, i1 } %151, 0
  %154 = select i1 %152, i32 %150, i32 %153, !prof !3
  %155 = icmp slt i32 %139, %154
  %156 = select i1 %155, i32 %154, i32 %139
  %157 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %141, i64 0, i32 2
  %158 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %157, align 8
  %159 = icmp eq %"class.blink::InlineTextBox"* %158, null
  br i1 %159, label %18, label %138

160:                                              ; preds = %123, %134
  %161 = phi %"class.blink::SimpleFontData"* [ %136, %134 ], [ %132, %123 ]
  %162 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %161, i64 0, i32 12
  %163 = load i32, i32* %162, align 8
  br label %164

164:                                              ; preds = %134, %160
  %165 = phi %"class.blink::SimpleFontData"* [ %161, %160 ], [ null, %134 ]
  %166 = phi i32 [ %163, %160 ], [ 0, %134 ]
  %167 = load i96, i96* %6, align 4
  %168 = and i96 %167, 268435456
  %169 = icmp eq i96 %168, 0
  br i1 %169, label %173, label %170

170:                                              ; preds = %164
  %171 = call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #19
  %172 = load i96, i96* %6, align 4
  br label %175

173:                                              ; preds = %164
  %174 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0
  br label %175

175:                                              ; preds = %170, %173
  %176 = phi i96 [ %172, %170 ], [ %167, %173 ]
  %177 = phi %"class.blink::InlineTextBoxList"* [ %171, %170 ], [ %174, %173 ]
  %178 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %177, i64 0, i32 0, i32 1
  %179 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %178, align 8
  %180 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %179, i64 0, i32 0, i32 7, i32 0
  %181 = load i32, i32* %180, align 4
  %182 = and i32 %181, 1
  %183 = icmp ne i32 %182, 0
  %184 = and i96 %176, 268435456
  %185 = icmp eq i96 %184, 0
  br i1 %185, label %188, label %186

186:                                              ; preds = %175
  %187 = call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #19
  br label %190

188:                                              ; preds = %175
  %189 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0
  br label %190

190:                                              ; preds = %186, %188
  %191 = phi %"class.blink::InlineTextBoxList"* [ %187, %186 ], [ %189, %188 ]
  %192 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %191, i64 0, i32 0, i32 0
  %193 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %192, align 8
  %194 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %193, i64 0, i32 0, i32 7, i32 0
  %195 = load i32, i32* %194, align 4
  %196 = and i32 %195, 1
  %197 = icmp ne i32 %196, 0
  %198 = xor i1 %183, %197
  br i1 %198, label %199, label %267

199:                                              ; preds = %190
  %200 = load i96, i96* %6, align 4
  %201 = and i96 %200, 268435456
  %202 = icmp eq i96 %201, 0
  br i1 %202, label %205, label %203

203:                                              ; preds = %199
  %204 = call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #19
  br label %207

205:                                              ; preds = %199
  %206 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0
  br label %207

207:                                              ; preds = %203, %205
  %208 = phi %"class.blink::InlineTextBoxList"* [ %204, %203 ], [ %206, %205 ]
  %209 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %208, i64 0, i32 0, i32 1
  %210 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %209, align 8
  %211 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %210, i64 0, i32 0, i32 7, i32 0
  %212 = load i32, i32* %211, align 4
  %213 = and i32 %212, 1
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %250, label %215

215:                                              ; preds = %207
  %216 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  %217 = load %"class.blink::Node"*, %"class.blink::Node"** %216, align 8
  %218 = icmp eq %"class.blink::Node"* %217, null
  br i1 %218, label %219, label %226

219:                                              ; preds = %215, %219
  %220 = phi %"class.blink::LayoutObject"* [ %222, %219 ], [ %4, %215 ]
  %221 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %220, i64 0, i32 7
  %222 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %221, align 8
  %223 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %222, i64 0, i32 6, i32 0, i32 0
  %224 = load %"class.blink::Node"*, %"class.blink::Node"** %223, align 8
  %225 = icmp eq %"class.blink::Node"* %224, null
  br i1 %225, label %219, label %226

226:                                              ; preds = %219, %215
  %227 = phi %"class.blink::Node"* [ %217, %215 ], [ %224, %219 ]
  %228 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %227, i64 0, i32 3, i32 0, i32 0
  %229 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %228, align 8
  %230 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %229, i64 0, i32 2, i32 0, i32 0
  %231 = load %"class.blink::Document"*, %"class.blink::Document"** %230, align 8
  %232 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %231, i64 0, i32 59, i32 0, i32 0
  %233 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %232, align 8
  %234 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %233, i64 0, i32 31, i32 0, i32 0
  %235 = load %"class.blink::CSSGlobalRuleSet"*, %"class.blink::CSSGlobalRuleSet"** %234, align 8
  %236 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %235, i64 0, i32 0, i32 11
  %237 = load i8, i8* %236, align 8
  %238 = and i8 %237, 1
  %239 = icmp eq i8 %238, 0
  br i1 %239, label %240, label %243

240:                                              ; preds = %226
  %241 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %241) #19
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.21, i64 0, i64 0), i32 37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.22, i64 0, i64 0)) #19
  %242 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %241) #19
  br label %243

243:                                              ; preds = %240, %226
  %244 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %235, i64 0, i32 0, i32 0, i32 0
  %245 = load i8, i8* %244, align 8, !range !2
  %246 = icmp eq i8 %245, 0
  br i1 %246, label %250, label %247

247:                                              ; preds = %243
  %248 = call %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"* %4) #19
  %249 = icmp eq %"class.blink::ComputedStyle"* %248, null
  br i1 %249, label %250, label %253

250:                                              ; preds = %207, %243, %247
  %251 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 5, i32 0
  %252 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %251, align 8
  br label %253

253:                                              ; preds = %250, %247
  %254 = phi %"class.blink::ComputedStyle"* [ %248, %247 ], [ %252, %250 ]
  %255 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %254, i64 0, i32 0, i32 0, i32 0, i32 0
  %256 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %255, align 8
  %257 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %256, i64 0, i32 1, i32 0, i32 0
  %258 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %257, align 8
  %259 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %258, i64 0, i32 1
  %260 = call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* %259) #19
  %261 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %260, i64 0, i32 2
  %262 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %261, align 8
  %263 = icmp eq %"class.blink::SimpleFontData"* %262, null
  br i1 %263, label %264, label %270

264:                                              ; preds = %253
  %265 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %259, i64 0, i32 0
  %266 = call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %260, %"class.blink::FontDescription"* dereferenceable(80) %265) #19
  store %"class.blink::SimpleFontData"* %266, %"class.blink::SimpleFontData"** %261, align 8
  br label %267

267:                                              ; preds = %264, %190
  %268 = phi %"class.blink::SimpleFontData"* [ %165, %190 ], [ %266, %264 ]
  %269 = icmp eq %"class.blink::SimpleFontData"* %268, null
  br i1 %269, label %274, label %270

270:                                              ; preds = %253, %267
  %271 = phi %"class.blink::SimpleFontData"* [ %268, %267 ], [ %262, %253 ]
  %272 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %271, i64 0, i32 13
  %273 = load i32, i32* %272, align 4
  br label %274

274:                                              ; preds = %267, %270
  %275 = phi i32 [ %273, %270 ], [ 0, %267 ]
  %276 = icmp ugt i32 %166, 33554430
  %277 = shl i32 %166, 6
  %278 = select i1 %276, i32 2147483647, i32 %277
  %279 = icmp sgt i32 %278, -1
  %280 = select i1 %279, i32 -2147483648, i32 2147483647
  %281 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %33, i32 %278) #19
  %282 = extractvalue { i32, i1 } %281, 1
  %283 = extractvalue { i32, i1 } %281, 0
  %284 = select i1 %282, i32 %280, i32 %283, !prof !3
  %285 = add i32 %275, %166
  %286 = icmp ugt i32 %285, 33554430
  %287 = shl i32 %285, 6
  %288 = select i1 %286, i32 2147483647, i32 %287
  %289 = icmp slt i32 %288, 0
  %290 = select i1 %289, i32 -2147483648, i32 2147483647
  %291 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %69, i32 %288) #19
  %292 = extractvalue { i32, i1 } %291, 1
  %293 = extractvalue { i32, i1 } %291, 0
  %294 = select i1 %292, i32 %290, i32 %293, !prof !3
  %295 = zext i32 %39 to i64
  %296 = zext i32 %294 to i64
  %297 = shl nuw i64 %296, 32
  %298 = or i64 %297, %295
  %299 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 5, i32 0
  %300 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %299, align 8
  %301 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %300, i64 0, i32 0, i32 9
  %302 = bitcast [20 x i8]* %301 to i160*
  %303 = load i160, i160* %302, align 8
  %304 = and i160 %303, 15211807202738752817960438464512
  %305 = icmp eq i160 %304, 0
  br i1 %305, label %316, label %306

306:                                              ; preds = %274
  %307 = shl nuw i64 %295, 32
  %308 = or i64 %307, %296
  %309 = icmp eq i160 %304, 5070602400912917605986812821504
  br i1 %309, label %310, label %316, !prof !3

310:                                              ; preds = %306
  %311 = bitcast %"class.blink::LayoutText"* %0 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %312 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %311, align 8
  %313 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %312, i64 106
  %314 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %313, align 8
  %315 = call i32 %314(%"class.blink::LayoutObject"* %4, i32 %284, i32 %294, %"class.blink::LayoutBox"* null) #19
  br label %316

316:                                              ; preds = %274, %306, %310
  %317 = phi i64 [ %308, %310 ], [ %308, %306 ], [ %298, %274 ]
  %318 = phi i32 [ %147, %310 ], [ %147, %306 ], [ %284, %274 ]
  %319 = phi i32 [ %315, %310 ], [ %284, %306 ], [ %147, %274 ]
  %320 = zext i32 %318 to i64
  %321 = shl nuw i64 %320, 32
  %322 = zext i32 %319 to i64
  %323 = or i64 %321, %322
  br label %324

324:                                              ; preds = %14, %316, %10
  %325 = phi i64 [ %13, %10 ], [ %317, %316 ], [ 0, %14 ]
  %326 = phi i64 [ %12, %10 ], [ %323, %316 ], [ 0, %14 ]
  %327 = insertvalue { i64, i64 } undef, i64 %326, 0
  %328 = insertvalue { i64, i64 } %327, i64 %325, 1
  ret { i64, i64 } %328
}

declare { i64, i64 } @_ZN5blink14NGFragmentItem18LocalVisualRectForERKNS_12LayoutObjectE(%"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #1

declare { i64, i64 } @_ZNK5blink13InlineTextBox19LogicalOverflowRectEv(%"class.blink::InlineTextBox"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink10LayoutText33LocalVisualRectIgnoringVisibilityEv(%"class.blink::LayoutText"*) unnamed_addr #0 align 2 {
  %2 = alloca { i64, i64 }, align 8
  %3 = alloca { i64, i64 }, align 8
  %4 = bitcast { i64, i64 }* %3 to %"struct.blink::PhysicalRect"*
  %5 = tail call { i64, i64 } @_ZNK5blink10LayoutText26PhysicalVisualOverflowRectEv(%"class.blink::LayoutText"* %0)
  %6 = extractvalue { i64, i64 } %5, 0
  %7 = extractvalue { i64, i64 } %5, 1
  %8 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #19
  %9 = tail call { i64, i64 } @_ZNK5blink10LayoutText24LocalSelectionVisualRectEv(%"class.blink::LayoutText"* %0)
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %11 = extractvalue { i64, i64 } %9, 0
  store i64 %11, i64* %10, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %13 = extractvalue { i64, i64 } %9, 1
  store i64 %13, i64* %12, align 8
  %14 = bitcast { i64, i64 }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14)
  %15 = bitcast { i64, i64 }* %2 to %"struct.blink::PhysicalRect"*
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  store i64 %6, i64* %17, align 8
  store i64 %7, i64* %16, align 8
  call void @_ZN5blink12PhysicalRect5UniteERKS0_(%"struct.blink::PhysicalRect"* nonnull %15, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %4) #19
  %18 = load i64, i64* %17, align 8
  %19 = insertvalue { i64, i64 } undef, i64 %18, 0
  %20 = load i64, i64* %16, align 8
  %21 = insertvalue { i64, i64 } %19, i64 %20, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #19
  ret { i64, i64 } %21
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink10LayoutText24LocalSelectionVisualRectEv(%"class.blink::LayoutText"*) unnamed_addr #0 align 2 {
  %2 = alloca { i64, i64 }, align 8
  %3 = bitcast { i64, i64 }* %2 to %"struct.blink::PhysicalRect"*
  %4 = alloca %"class.blink::NGInlineCursor", align 8
  %5 = alloca %"struct.blink::LayoutSelectionStatus", align 8
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %"struct.blink::PhysicalRect"*
  %8 = alloca %"class.blink::LayoutRect", align 4
  %9 = alloca { i64, i64 }, align 8
  %10 = bitcast { i64, i64 }* %9 to %"class.blink::LayoutRect"*
  %11 = alloca %"class.blink::LayoutRect", align 4
  %12 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  %13 = tail call zeroext i1 @_ZNK5blink12LayoutObject10IsSelectedEv(%"class.blink::LayoutObject"* %12) #19
  br i1 %13, label %16, label %14

14:                                               ; preds = %1
  %15 = bitcast { i64, i64 }* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 16, i1 false)
  br label %262

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  %18 = load %"class.blink::Node"*, %"class.blink::Node"** %17, align 8
  %19 = icmp eq %"class.blink::Node"* %18, null
  br i1 %19, label %20, label %27

20:                                               ; preds = %16, %20
  %21 = phi %"class.blink::LayoutObject"* [ %23, %20 ], [ %12, %16 ]
  %22 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %21, i64 0, i32 7
  %23 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %23, i64 0, i32 6, i32 0, i32 0
  %25 = load %"class.blink::Node"*, %"class.blink::Node"** %24, align 8
  %26 = icmp eq %"class.blink::Node"* %25, null
  br i1 %26, label %20, label %27

27:                                               ; preds = %20, %16
  %28 = phi %"class.blink::Node"* [ %18, %16 ], [ %25, %20 ]
  %29 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %28, i64 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %30, i64 0, i32 2, i32 0, i32 0
  %32 = load %"class.blink::Document"*, %"class.blink::Document"** %31, align 8
  %33 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %32) #19
  %34 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %33, i64 0, i32 14, i32 0, i32 0
  %35 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %37 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %36 to i96*
  %38 = load i96, i96* %37, align 4
  %39 = and i96 %38, 268435456
  %40 = icmp eq i96 %39, 0
  br i1 %40, label %114, label %41

41:                                               ; preds = %27
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  %43 = bitcast { i64, i64 }* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 0, i64 16, i1 false) #19
  %44 = bitcast %"class.blink::NGInlineCursor"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %44) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 112, i1 false)
  %45 = tail call %"class.blink::LayoutBlockFlow"* @_ZNK5blink12LayoutObject21ContainingNGBlockFlowEv(%"class.blink::LayoutObject"* %12) #19
  call void @_ZN5blink14NGInlineCursorC1ERKNS_15LayoutBlockFlowE(%"class.blink::NGInlineCursor"* nonnull %4, %"class.blink::LayoutBlockFlow"* dereferenceable(280) %45) #19
  call void @_ZN5blink14NGInlineCursor6MoveToERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"* nonnull %4, %"class.blink::LayoutObject"* dereferenceable(88) %12) #19
  %46 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %4, i64 0, i32 0, i32 0
  %47 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %46, align 8
  %48 = icmp eq %"class.blink::NGFragmentItem"* %47, null
  br i1 %48, label %111, label %49

49:                                               ; preds = %41
  %50 = bitcast %"struct.blink::LayoutSelectionStatus"* %5 to i8*
  %51 = getelementptr inbounds %"struct.blink::LayoutSelectionStatus", %"struct.blink::LayoutSelectionStatus"* %5, i64 0, i32 0
  %52 = getelementptr inbounds %"struct.blink::LayoutSelectionStatus", %"struct.blink::LayoutSelectionStatus"* %5, i64 0, i32 1
  %53 = getelementptr inbounds %"struct.blink::LayoutSelectionStatus", %"struct.blink::LayoutSelectionStatus"* %5, i64 0, i32 2
  %54 = bitcast %"struct.blink::LayoutSelectionStatus"* %5 to i64*
  %55 = bitcast { i64, i64 }* %6 to i8*
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %57 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  %58 = bitcast { i64, i64 }* %6 to i8*
  br label %59

59:                                               ; preds = %49, %104
  %60 = phi %"class.blink::NGFragmentItem"* [ %47, %49 ], [ %105, %104 ]
  %61 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %60, i64 0, i32 6
  %62 = load i16, i16* %61, align 8
  %63 = and i16 %62, 256
  %64 = icmp eq i16 %63, 0
  br i1 %64, label %65, label %104

65:                                               ; preds = %59
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %50) #19
  store i32 -1431655766, i32* %51, align 8
  store i32 -1431655766, i32* %52, align 4
  store i32 -1431655766, i32* %53, align 8
  %66 = call { i64, i32 } @_ZNK5blink14FrameSelection28ComputeLayoutSelectionStatusERKNS_14NGInlineCursorE(%"class.blink::FrameSelection"* %35, %"class.blink::NGInlineCursor"* nonnull dereferenceable(112) %4) #19
  %67 = extractvalue { i64, i32 } %66, 0
  %68 = extractvalue { i64, i32 } %66, 1
  store i64 %67, i64* %54, align 8
  store i32 %68, i32* %53, align 8
  %69 = trunc i64 %67 to i32
  %70 = lshr i64 %67, 32
  %71 = trunc i64 %70 to i32
  %72 = icmp eq i32 %69, %71
  br i1 %72, label %103, label %73

73:                                               ; preds = %65
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %55) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 -86, i64 16, i1 false)
  %74 = call { i64, i64 } @_ZNK5blink14NGInlineCursor32CurrentLocalSelectionRectForTextERKNS_21LayoutSelectionStatusE(%"class.blink::NGInlineCursor"* nonnull %4, %"struct.blink::LayoutSelectionStatus"* nonnull dereferenceable(12) %5) #19
  %75 = extractvalue { i64, i64 } %74, 0
  %76 = extractvalue { i64, i64 } %74, 1
  store i64 %76, i64* %56, align 8
  %77 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %46, align 8
  %78 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %77, i64 0, i32 2, i32 0
  %79 = bitcast %"struct.blink::PhysicalOffset"* %78 to i64*
  %80 = load i64, i64* %79, align 4
  %81 = trunc i64 %80 to i32
  %82 = lshr i64 %80, 32
  %83 = trunc i64 %82 to i32
  %84 = trunc i64 %75 to i32
  %85 = icmp slt i32 %81, 0
  %86 = select i1 %85, i32 -2147483648, i32 2147483647
  %87 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %84, i32 %81) #19
  %88 = extractvalue { i32, i1 } %87, 1
  %89 = extractvalue { i32, i1 } %87, 0
  %90 = select i1 %88, i32 %86, i32 %89, !prof !3
  %91 = lshr i64 %75, 32
  %92 = trunc i64 %91 to i32
  %93 = icmp slt i32 %83, 0
  %94 = select i1 %93, i32 -2147483648, i32 2147483647
  %95 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %92, i32 %83) #19
  %96 = extractvalue { i32, i1 } %95, 1
  %97 = extractvalue { i32, i1 } %95, 0
  %98 = select i1 %96, i32 %94, i32 %97, !prof !3
  %99 = zext i32 %98 to i64
  %100 = shl nuw i64 %99, 32
  %101 = zext i32 %90 to i64
  %102 = or i64 %100, %101
  store i64 %102, i64* %57, align 8
  call void @_ZN5blink12PhysicalRect5UniteERKS0_(%"struct.blink::PhysicalRect"* nonnull %3, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %7) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %55) #19
  br label %103

103:                                              ; preds = %65, %73
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %50) #19
  br label %104

104:                                              ; preds = %59, %103
  call void @_ZN5blink14NGInlineCursor29MoveToNextForSameLayoutObjectEv(%"class.blink::NGInlineCursor"* nonnull %4) #19
  %105 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %46, align 8
  %106 = icmp eq %"class.blink::NGFragmentItem"* %105, null
  br i1 %106, label %107, label %59

107:                                              ; preds = %104
  %108 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  %109 = load i64, i64* %108, align 8
  %110 = load i64, i64* %42, align 8
  br label %111

111:                                              ; preds = %107, %41
  %112 = phi i64 [ %110, %107 ], [ 0, %41 ]
  %113 = phi i64 [ %109, %107 ], [ 0, %41 ]
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %44) #19
  br label %262

114:                                              ; preds = %27
  %115 = tail call { i64, i32 } @_ZNK5blink14FrameSelection28ComputeLayoutSelectionStatusERKNS_10LayoutTextE(%"class.blink::FrameSelection"* %35, %"class.blink::LayoutText"* dereferenceable(144) %0) #19
  %116 = extractvalue { i64, i32 } %115, 0
  %117 = trunc i64 %116 to i32
  %118 = lshr i64 %116, 32
  %119 = trunc i64 %118 to i32
  %120 = bitcast %"class.blink::LayoutRect"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %120) #19
  %121 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %8, i64 0, i32 0, i32 0, i32 0
  %122 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %8, i64 0, i32 0, i32 1, i32 0
  %123 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %8, i64 0, i32 1, i32 0, i32 0
  %124 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %8, i64 0, i32 1, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %120, i8 0, i64 16, i1 false) #19
  %125 = load i96, i96* %37, align 4
  %126 = and i96 %125, 268435456
  %127 = icmp eq i96 %126, 0
  br i1 %127, label %130, label %128

128:                                              ; preds = %114
  %129 = tail call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #19
  br label %132

130:                                              ; preds = %114
  %131 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0
  br label %132

132:                                              ; preds = %128, %130
  %133 = phi %"class.blink::InlineTextBoxList"* [ %129, %128 ], [ %131, %130 ]
  %134 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %133, i64 0, i32 0, i32 0
  %135 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %134, align 8
  %136 = icmp eq %"class.blink::InlineTextBox"* %135, null
  br i1 %136, label %148, label %137

137:                                              ; preds = %132
  %138 = bitcast { i64, i64 }* %9 to i8*
  %139 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 0
  %140 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 1
  %141 = bitcast %"class.blink::LayoutRect"* %11 to i8*
  %142 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %11, i64 0, i32 0, i32 0, i32 0
  %143 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %11, i64 0, i32 0, i32 1, i32 0
  %144 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %11, i64 0, i32 1, i32 0, i32 0
  %145 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %11, i64 0, i32 1, i32 1, i32 0
  br label %179

146:                                              ; preds = %257
  %147 = load i32, i32* %121, align 4
  br label %148

148:                                              ; preds = %146, %132
  %149 = phi i32 [ %147, %146 ], [ 0, %132 ]
  %150 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 5, i32 0
  %151 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %150, align 8
  %152 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %151, i64 0, i32 0, i32 9
  %153 = bitcast [20 x i8]* %152 to i160*
  %154 = load i160, i160* %153, align 8
  %155 = and i160 %154, 15211807202738752817960438464512
  %156 = icmp eq i160 %155, 5070602400912917605986812821504
  br i1 %156, label %157, label %164, !prof !3

157:                                              ; preds = %148
  %158 = load i32, i32* %123, align 4
  %159 = bitcast %"class.blink::LayoutText"* %0 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %160 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %159, align 8
  %161 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %160, i64 106
  %162 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %161, align 8
  %163 = call i32 %162(%"class.blink::LayoutObject"* %12, i32 %149, i32 %158, %"class.blink::LayoutBox"* null) #19
  br label %164

164:                                              ; preds = %148, %157
  %165 = phi i32 [ %163, %157 ], [ %149, %148 ]
  %166 = load i32, i32* %122, align 4
  %167 = load i32, i32* %123, align 4
  %168 = load i32, i32* %124, align 4
  %169 = zext i32 %166 to i64
  %170 = shl nuw i64 %169, 32
  %171 = zext i32 %165 to i64
  %172 = or i64 %170, %171
  %173 = zext i32 %168 to i64
  %174 = shl nuw i64 %173, 32
  %175 = zext i32 %167 to i64
  %176 = or i64 %174, %175
  %177 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  store i64 %172, i64* %177, align 8
  %178 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  store i64 %176, i64* %178, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %120) #19
  br label %262

179:                                              ; preds = %137, %257
  %180 = phi %"class.blink::InlineTextBox"* [ %135, %137 ], [ %260, %257 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %138) #19
  %181 = bitcast %"class.blink::InlineTextBox"* %180 to { i64, i64 } (%"class.blink::InlineTextBox"*, i32, i32, i1)***
  %182 = load { i64, i64 } (%"class.blink::InlineTextBox"*, i32, i32, i1)**, { i64, i64 } (%"class.blink::InlineTextBox"*, i32, i32, i1)*** %181, align 8
  %183 = getelementptr inbounds { i64, i64 } (%"class.blink::InlineTextBox"*, i32, i32, i1)*, { i64, i64 } (%"class.blink::InlineTextBox"*, i32, i32, i1)** %182, i64 33
  %184 = load { i64, i64 } (%"class.blink::InlineTextBox"*, i32, i32, i1)*, { i64, i64 } (%"class.blink::InlineTextBox"*, i32, i32, i1)** %183, align 8
  %185 = call { i64, i64 } %184(%"class.blink::InlineTextBox"* nonnull %180, i32 %117, i32 %119, i1 zeroext true) #19
  %186 = extractvalue { i64, i64 } %185, 0
  store i64 %186, i64* %139, align 8
  %187 = extractvalue { i64, i64 } %185, 1
  store i64 %187, i64* %140, align 8
  call void @_ZN5blink10LayoutRect5UniteERKS0_(%"class.blink::LayoutRect"* nonnull %8, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %10) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %138) #19
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %141) #19
  %188 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %180, i64 0, i32 5
  %189 = load i16, i16* %188, align 2
  %190 = zext i16 %189 to i32
  %191 = icmp eq i16 %189, -1
  br i1 %191, label %222, label %192

192:                                              ; preds = %179
  %193 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %180, i64 0, i32 0
  %194 = call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZN5blink9InlineBox4RootEv(%"class.blink::InlineBox"* %193) #19
  %195 = call %"class.blink::EllipsisBox"* @_ZNK5blink13RootInlineBox14GetEllipsisBoxEv(%"class.blink::RootInlineBox"* %194) #19
  %196 = icmp eq %"class.blink::EllipsisBox"* %195, null
  br i1 %196, label %222, label %197

197:                                              ; preds = %192
  %198 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %180, i64 0, i32 3
  %199 = load i32, i32* %198, align 8
  %200 = sub i32 %117, %199
  %201 = icmp sgt i32 %200, 0
  %202 = select i1 %201, i32 %200, i32 0
  %203 = sub i32 %119, %199
  %204 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %180, i64 0, i32 4
  %205 = load i16, i16* %204, align 4
  %206 = zext i16 %205 to i32
  %207 = icmp sgt i32 %203, %206
  %208 = select i1 %207, i32 %206, i32 %203
  %209 = icmp slt i32 %208, %190
  %210 = icmp sgt i32 %202, %190
  %211 = or i1 %210, %209
  br i1 %211, label %222, label %212

212:                                              ; preds = %197
  %213 = call { i64, i64 } @_ZNK5blink11EllipsisBox13SelectionRectEv(%"class.blink::EllipsisBox"* nonnull %195) #19
  %214 = extractvalue { i64, i64 } %213, 0
  %215 = extractvalue { i64, i64 } %213, 1
  %216 = trunc i64 %214 to i32
  %217 = lshr i64 %214, 32
  %218 = trunc i64 %217 to i32
  %219 = icmp sgt i32 %216, 33554431
  br i1 %219, label %228, label %220

220:                                              ; preds = %212
  %221 = icmp slt i32 %216, -33554432
  br i1 %221, label %228, label %222

222:                                              ; preds = %179, %192, %197, %220
  %223 = phi i64 [ %215, %220 ], [ 0, %197 ], [ 0, %192 ], [ 0, %179 ]
  %224 = phi i32 [ %216, %220 ], [ 0, %197 ], [ 0, %192 ], [ 0, %179 ]
  %225 = phi i64 [ %217, %220 ], [ 0, %197 ], [ 0, %192 ], [ 0, %179 ]
  %226 = phi i32 [ %218, %220 ], [ 0, %197 ], [ 0, %192 ], [ 0, %179 ]
  %227 = shl i32 %224, 6
  br label %228

228:                                              ; preds = %220, %212, %222
  %229 = phi i32 [ %227, %222 ], [ 2147483647, %212 ], [ -2147483648, %220 ]
  %230 = phi i32 [ %226, %222 ], [ %218, %212 ], [ %218, %220 ]
  %231 = phi i64 [ %225, %222 ], [ %217, %212 ], [ %217, %220 ]
  %232 = phi i64 [ %223, %222 ], [ %215, %212 ], [ %215, %220 ]
  store i32 %229, i32* %142, align 4
  %233 = icmp sgt i32 %230, 33554431
  br i1 %233, label %239, label %234

234:                                              ; preds = %228
  %235 = icmp slt i32 %230, -33554432
  br i1 %235, label %239, label %236

236:                                              ; preds = %234
  %237 = trunc i64 %231 to i32
  %238 = shl i32 %237, 6
  br label %239

239:                                              ; preds = %234, %228, %236
  %240 = phi i32 [ %238, %236 ], [ 2147483647, %228 ], [ -2147483648, %234 ]
  store i32 %240, i32* %143, align 4
  %241 = trunc i64 %232 to i32
  %242 = lshr i64 %232, 32
  %243 = trunc i64 %242 to i32
  %244 = icmp sgt i32 %241, 33554431
  br i1 %244, label %249, label %245

245:                                              ; preds = %239
  %246 = icmp slt i32 %241, -33554432
  %247 = shl i32 %241, 6
  %248 = select i1 %246, i32 -2147483648, i32 %247
  br label %249

249:                                              ; preds = %245, %239
  %250 = phi i32 [ 2147483647, %239 ], [ %248, %245 ]
  store i32 %250, i32* %144, align 4
  %251 = icmp sgt i32 %243, 33554431
  br i1 %251, label %257, label %252

252:                                              ; preds = %249
  %253 = icmp slt i32 %243, -33554432
  br i1 %253, label %257, label %254

254:                                              ; preds = %252
  %255 = shl nuw nsw i64 %242, 6
  %256 = trunc i64 %255 to i32
  br label %257

257:                                              ; preds = %252, %249, %254
  %258 = phi i32 [ %256, %254 ], [ 2147483647, %249 ], [ -2147483648, %252 ]
  store i32 %258, i32* %145, align 4
  call void @_ZN5blink10LayoutRect5UniteERKS0_(%"class.blink::LayoutRect"* nonnull %8, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %11) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %141) #19
  %259 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %180, i64 0, i32 2
  %260 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %259, align 8
  %261 = icmp eq %"class.blink::InlineTextBox"* %260, null
  br i1 %261, label %146, label %179

262:                                              ; preds = %111, %164, %14
  %263 = phi i64 [ %112, %111 ], [ %176, %164 ], [ 0, %14 ]
  %264 = phi i64 [ %113, %111 ], [ %172, %164 ], [ 0, %14 ]
  %265 = insertvalue { i64, i64 } undef, i64 %264, 0
  %266 = insertvalue { i64, i64 } %265, i64 %263, 1
  ret { i64, i64 } %266
}

declare zeroext i1 @_ZNK5blink12LayoutObject10IsSelectedEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

declare %"class.blink::LayoutBlockFlow"* @_ZNK5blink12LayoutObject21ContainingNGBlockFlowEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

declare void @_ZN5blink14NGInlineCursorC1ERKNS_15LayoutBlockFlowE(%"class.blink::NGInlineCursor"*, %"class.blink::LayoutBlockFlow"* dereferenceable(280)) unnamed_addr #1

declare { i64, i32 } @_ZNK5blink14FrameSelection28ComputeLayoutSelectionStatusERKNS_14NGInlineCursorE(%"class.blink::FrameSelection"*, %"class.blink::NGInlineCursor"* dereferenceable(112)) local_unnamed_addr #1

declare { i64, i64 } @_ZNK5blink14NGInlineCursor32CurrentLocalSelectionRectForTextERKNS_21LayoutSelectionStatusE(%"class.blink::NGInlineCursor"*, %"struct.blink::LayoutSelectionStatus"* dereferenceable(12)) local_unnamed_addr #1

declare { i64, i32 } @_ZNK5blink14FrameSelection28ComputeLayoutSelectionStatusERKNS_10LayoutTextE(%"class.blink::FrameSelection"*, %"class.blink::LayoutText"* dereferenceable(144)) local_unnamed_addr #1

declare void @_ZN5blink10LayoutRect5UniteERKS0_(%"class.blink::LayoutRect"*, %"class.blink::LayoutRect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutText24InvalidateVisualOverflowEv(%"class.blink::LayoutText"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::NGInlineCursor", align 8
  %3 = bitcast %"class.blink::NGInlineCursor"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %3) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -86, i64 112, i1 false)
  %4 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %2, i64 0, i32 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 81, i1 false) #19
  %5 = bitcast %"class.blink::LayoutBlockFlow"** %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 20, i1 false) #19
  %6 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  call void @_ZN5blink14NGInlineCursor6MoveToERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"* nonnull %2, %"class.blink::LayoutObject"* dereferenceable(88) %6) #19
  %7 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %2, i64 0, i32 0, i32 0
  %8 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %7, align 8
  %9 = icmp eq %"class.blink::NGFragmentItem"* %8, null
  br i1 %9, label %14, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.blink::NGFragmentItem"* [ %12, %10 ], [ %8, %1 ]
  call void @_ZN5blink14NGFragmentItem21InvalidateInkOverflowEv(%"class.blink::NGFragmentItem"* nonnull %11) #19
  call void @_ZN5blink14NGInlineCursor29MoveToNextForSameLayoutObjectEv(%"class.blink::NGInlineCursor"* nonnull %2) #19
  %12 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %7, align 8
  %13 = icmp eq %"class.blink::NGFragmentItem"* %12, null
  br i1 %13, label %14, label %10

14:                                               ; preds = %10, %1
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %3) #19
  ret void
}

declare %"class.blink::NGOffsetMapping"* @_ZN5blink15NGOffsetMapping6GetForEPKNS_12LayoutObjectE(%"class.blink::LayoutObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink10LayoutText22PositionForCaretOffsetEj(%"class.blink::PositionTemplate"* noalias sret, %"class.blink::LayoutText"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %1, i64 0, i32 0, i32 4
  %5 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %4 to i96*
  %6 = load i96, i96* %5, align 4
  %7 = and i96 %6, 16777216
  %8 = icmp eq i96 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %1, i64 0, i32 0, i32 6, i32 0, i32 0
  %11 = load %"class.blink::Node"*, %"class.blink::Node"** %10, align 8
  %12 = icmp eq %"class.blink::Node"* %11, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %3, %9
  %14 = bitcast %"class.blink::PositionTemplate"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #19
  br label %51

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %11, i64 1
  %17 = bitcast %"class.blink::Node"* %16 to i8*
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %39, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %11, i64 1, i32 0, i32 0, i32 1
  %22 = bitcast %"class.blink::TraceWrapperV8Reference"* %21 to %"class.blink::ParkableStringImpl"**
  %23 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %22, align 8
  %24 = icmp eq %"class.blink::ParkableStringImpl"* %23, null
  br i1 %24, label %47, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0
  %27 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %26, align 8
  %28 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %27, null
  br i1 %28, label %29, label %36

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %23, i64 0, i32 1, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %35 = load i32, i32* %34, align 4
  br label %47

36:                                               ; preds = %25
  %37 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %27, i64 0, i32 8
  %38 = load i32, i32* %37, align 4
  br label %47

39:                                               ; preds = %15
  %40 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %11, i64 1, i32 1
  %41 = bitcast i32* %40 to %"class.WTF::StringImpl"**
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 1
  %46 = load i32, i32* %45, align 4
  br label %47

47:                                               ; preds = %20, %29, %33, %36, %39, %44
  %48 = phi i32 [ 0, %20 ], [ %38, %36 ], [ %35, %33 ], [ 0, %29 ], [ %46, %44 ], [ 0, %39 ]
  %49 = icmp ult i32 %48, %2
  %50 = select i1 %49, i32 %48, i32 %2
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* %0, %"class.blink::Node"* nonnull %11, i32 %50) #19
  br label %51

51:                                               ; preds = %47, %13
  ret void
}

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"*, %"class.blink::Node"*, i32) unnamed_addr #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink10LayoutText22CaretOffsetForPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::LayoutText"* nocapture readonly, %"class.blink::PositionTemplate"* nocapture readonly dereferenceable(16)) unnamed_addr #9 align 2 {
  %3 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %8 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %7 to i96*
  %9 = load i96, i96* %8, align 4
  %10 = and i96 %9, 16777216
  %11 = icmp eq i96 %10, 0
  br i1 %11, label %12, label %29

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  %14 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %15 = icmp eq %"class.blink::Node"* %4, %14
  br i1 %15, label %16, label %29

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  switch i32 %18, label %26 [
    i32 1, label %29
    i32 2, label %19
  ]

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 7, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %29, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  br label %29

26:                                               ; preds = %16
  %27 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 1
  %28 = load i32, i32* %27, align 8
  br label %29

29:                                               ; preds = %16, %6, %23, %19, %2, %12, %26
  %30 = phi i64 [ 1, %26 ], [ 0, %12 ], [ 0, %2 ], [ 1, %16 ], [ 1, %19 ], [ 1, %23 ], [ 0, %6 ]
  %31 = phi i32 [ %28, %26 ], [ undef, %12 ], [ undef, %2 ], [ 0, %16 ], [ 0, %19 ], [ %25, %23 ], [ undef, %6 ]
  %32 = zext i32 %31 to i64
  %33 = shl nuw i64 %32, 32
  %34 = or i64 %33, %30
  ret i64 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink10LayoutText14CaretMinOffsetEv(%"class.blink::LayoutText"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::PositionTemplate", align 8
  %3 = alloca %"class.blink::PositionTemplate", align 8
  %4 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase33is_css_container_queries_enabled_E, align 1, !range !2
  %5 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase26is_layout_ng_grid_enabled_E, align 1
  %6 = or i8 %5, %4
  %7 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase31is_bidi_caret_affinity_enabled_E, align 1
  %8 = or i8 %6, %7
  %9 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase21is_layout_ng_enabled_E, align 1
  %10 = or i8 %8, %9
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %50, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  %14 = tail call %"class.blink::NGOffsetMapping"* @_ZN5blink15NGOffsetMapping6GetForEPKNS_12LayoutObjectE(%"class.blink::LayoutObject"* %13) #19
  %15 = icmp eq %"class.blink::NGOffsetMapping"* %14, null
  br i1 %15, label %50, label %16

16:                                               ; preds = %12
  %17 = bitcast %"class.blink::PositionTemplate"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #19
  %18 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %2, i64 0, i32 0, i32 0, i32 0
  %19 = bitcast %"class.blink::LayoutText"* %0 to void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)***
  %20 = bitcast %"class.blink::PositionTemplate"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)**, void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)*** %19, align 8
  %22 = getelementptr inbounds void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)*, void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)** %21, i64 115
  %23 = load void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)*, void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)** %22, align 8
  call void %23(%"class.blink::PositionTemplate"* nonnull sret %2, %"class.blink::LayoutText"* %0, i32 0) #19
  %24 = load %"class.blink::Node"*, %"class.blink::Node"** %18, align 8
  %25 = icmp eq %"class.blink::Node"* %24, null
  br i1 %25, label %48, label %26

26:                                               ; preds = %16
  %27 = bitcast %"class.blink::PositionTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #19
  call void @_ZNK5blink15NGOffsetMapping30StartOfNextNonCollapsedContentERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* nonnull sret %3, %"class.blink::NGOffsetMapping"* nonnull %14, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %2) #19
  %28 = bitcast %"class.blink::LayoutText"* %0 to i64 (%"class.blink::LayoutText"*, %"class.blink::PositionTemplate"*)***
  %29 = load i64 (%"class.blink::LayoutText"*, %"class.blink::PositionTemplate"*)**, i64 (%"class.blink::LayoutText"*, %"class.blink::PositionTemplate"*)*** %28, align 8
  %30 = getelementptr inbounds i64 (%"class.blink::LayoutText"*, %"class.blink::PositionTemplate"*)*, i64 (%"class.blink::LayoutText"*, %"class.blink::PositionTemplate"*)** %29, i64 116
  %31 = load i64 (%"class.blink::LayoutText"*, %"class.blink::PositionTemplate"*)*, i64 (%"class.blink::LayoutText"*, %"class.blink::PositionTemplate"*)** %30, align 8
  %32 = call i64 %31(%"class.blink::LayoutText"* %0, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %3) #19
  %33 = trunc i64 %32 to i8
  %34 = lshr i64 %32, 32
  %35 = trunc i64 %34 to i32
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #19
  %36 = icmp eq i8 %33, 0
  br i1 %36, label %48, label %37

37:                                               ; preds = %26
  %38 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 7, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %44, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 1
  %43 = load i32, i32* %42, align 4
  br label %44

44:                                               ; preds = %37, %41
  %45 = phi i32 [ %43, %41 ], [ 0, %37 ]
  %46 = icmp eq i32 %45, %35
  %47 = select i1 %46, i32 0, i32 %35
  br label %48

48:                                               ; preds = %26, %44, %16
  %49 = phi i32 [ 0, %16 ], [ 0, %26 ], [ %47, %44 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #19
  br label %81

50:                                               ; preds = %1, %12
  %51 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %52 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %51 to i96*
  %53 = load i96, i96* %52, align 4
  %54 = and i96 %53, 268435456
  %55 = icmp eq i96 %54, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %50
  %57 = tail call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #19
  br label %60

58:                                               ; preds = %50
  %59 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0
  br label %60

60:                                               ; preds = %56, %58
  %61 = phi %"class.blink::InlineTextBoxList"* [ %57, %56 ], [ %59, %58 ]
  %62 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %61, i64 0, i32 0, i32 0
  %63 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %62, align 8
  %64 = icmp eq %"class.blink::InlineTextBox"* %63, null
  br i1 %64, label %81, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %63, i64 0, i32 3
  %67 = load i32, i32* %66, align 8
  %68 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %63, i64 0, i32 2
  %69 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %68, align 8
  %70 = icmp eq %"class.blink::InlineTextBox"* %69, null
  br i1 %70, label %81, label %71

71:                                               ; preds = %65, %71
  %72 = phi %"class.blink::InlineTextBox"* [ %79, %71 ], [ %69, %65 ]
  %73 = phi i32 [ %77, %71 ], [ %67, %65 ]
  %74 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %72, i64 0, i32 3
  %75 = load i32, i32* %74, align 8
  %76 = icmp slt i32 %75, %73
  %77 = select i1 %76, i32 %75, i32 %73
  %78 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %72, i64 0, i32 2
  %79 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %78, align 8
  %80 = icmp eq %"class.blink::InlineTextBox"* %79, null
  br i1 %80, label %81, label %71

81:                                               ; preds = %71, %65, %48, %60
  %82 = phi i32 [ %49, %48 ], [ 0, %60 ], [ %67, %65 ], [ %77, %71 ]
  ret i32 %82
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink10LayoutText14CaretMaxOffsetEv(%"class.blink::LayoutText"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::PositionTemplate", align 8
  %3 = alloca %"class.blink::PositionTemplate", align 8
  %4 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase33is_css_container_queries_enabled_E, align 1, !range !2
  %5 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase26is_layout_ng_grid_enabled_E, align 1
  %6 = or i8 %5, %4
  %7 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase31is_bidi_caret_affinity_enabled_E, align 1
  %8 = or i8 %6, %7
  %9 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase21is_layout_ng_enabled_E, align 1
  %10 = or i8 %8, %9
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %61, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  %14 = tail call %"class.blink::NGOffsetMapping"* @_ZN5blink15NGOffsetMapping6GetForEPKNS_12LayoutObjectE(%"class.blink::LayoutObject"* %13) #19
  %15 = icmp eq %"class.blink::NGOffsetMapping"* %14, null
  br i1 %15, label %61, label %16

16:                                               ; preds = %12
  %17 = bitcast %"class.blink::PositionTemplate"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #19
  %18 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %2, i64 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 7, i32 0, i32 0
  %20 = bitcast %"class.blink::PositionTemplate"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  br label %26

26:                                               ; preds = %16, %23
  %27 = phi i32 [ %25, %23 ], [ 0, %16 ]
  %28 = bitcast %"class.blink::LayoutText"* %0 to void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)***
  %29 = load void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)**, void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)*, void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)** %29, i64 115
  %31 = load void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)*, void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)** %30, align 8
  call void %31(%"class.blink::PositionTemplate"* nonnull sret %2, %"class.blink::LayoutText"* %0, i32 %27) #19
  %32 = load %"class.blink::Node"*, %"class.blink::Node"** %18, align 8
  %33 = icmp eq %"class.blink::Node"* %32, null
  br i1 %33, label %34, label %40

34:                                               ; preds = %26
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %59, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  br label %59

40:                                               ; preds = %26
  %41 = bitcast %"class.blink::PositionTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #19
  call void @_ZNK5blink15NGOffsetMapping28EndOfLastNonCollapsedContentERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* nonnull sret %3, %"class.blink::NGOffsetMapping"* nonnull %14, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %2) #19
  %42 = bitcast %"class.blink::LayoutText"* %0 to i64 (%"class.blink::LayoutText"*, %"class.blink::PositionTemplate"*)***
  %43 = load i64 (%"class.blink::LayoutText"*, %"class.blink::PositionTemplate"*)**, i64 (%"class.blink::LayoutText"*, %"class.blink::PositionTemplate"*)*** %42, align 8
  %44 = getelementptr inbounds i64 (%"class.blink::LayoutText"*, %"class.blink::PositionTemplate"*)*, i64 (%"class.blink::LayoutText"*, %"class.blink::PositionTemplate"*)** %43, i64 116
  %45 = load i64 (%"class.blink::LayoutText"*, %"class.blink::PositionTemplate"*)*, i64 (%"class.blink::LayoutText"*, %"class.blink::PositionTemplate"*)** %44, align 8
  %46 = call i64 %45(%"class.blink::LayoutText"* %0, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %3) #19
  %47 = trunc i64 %46 to i8
  %48 = lshr i64 %46, 32
  %49 = trunc i64 %48 to i32
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #19
  %50 = icmp eq i8 %47, 0
  %51 = icmp eq i32 %49, 0
  %52 = or i1 %50, %51
  br i1 %52, label %53, label %59

53:                                               ; preds = %40
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %59, label %56

56:                                               ; preds = %53
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 1
  %58 = load i32, i32* %57, align 4
  br label %59

59:                                               ; preds = %40, %34, %37, %56, %53
  %60 = phi i32 [ %39, %37 ], [ 0, %34 ], [ %58, %56 ], [ 0, %53 ], [ %49, %40 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #19
  br label %119

61:                                               ; preds = %1, %12
  %62 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %63 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %62 to i96*
  %64 = load i96, i96* %63, align 4
  %65 = and i96 %64, 268435456
  %66 = icmp eq i96 %65, 0
  br i1 %66, label %70, label %67

67:                                               ; preds = %61
  %68 = tail call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #19
  %69 = load i96, i96* %63, align 4
  br label %72

70:                                               ; preds = %61
  %71 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0
  br label %72

72:                                               ; preds = %67, %70
  %73 = phi i96 [ %69, %67 ], [ %64, %70 ]
  %74 = phi %"class.blink::InlineTextBoxList"* [ %68, %67 ], [ %71, %70 ]
  %75 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %74, i64 0, i32 0, i32 1
  %76 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %75, align 8
  %77 = and i96 %73, 268435456
  %78 = icmp eq i96 %77, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %72
  %80 = tail call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #19
  br label %83

81:                                               ; preds = %72
  %82 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0
  br label %83

83:                                               ; preds = %79, %81
  %84 = phi %"class.blink::InlineTextBoxList"* [ %80, %79 ], [ %82, %81 ]
  %85 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %84, i64 0, i32 0, i32 1
  %86 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %85, align 8
  %87 = icmp eq %"class.blink::InlineTextBox"* %86, null
  br i1 %87, label %88, label %95

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 7, i32 0, i32 0
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %91, label %119, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 1
  %94 = load i32, i32* %93, align 4
  br label %119

95:                                               ; preds = %83
  %96 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %76, i64 0, i32 3
  %97 = load i32, i32* %96, align 8
  %98 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %76, i64 0, i32 4
  %99 = load i16, i16* %98, align 4
  %100 = zext i16 %99 to i32
  %101 = add i32 %97, %100
  %102 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %76, i64 0, i32 1
  %103 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %102, align 8
  %104 = icmp eq %"class.blink::InlineTextBox"* %103, null
  br i1 %104, label %119, label %105

105:                                              ; preds = %95, %105
  %106 = phi %"class.blink::InlineTextBox"* [ %117, %105 ], [ %103, %95 ]
  %107 = phi i32 [ %115, %105 ], [ %101, %95 ]
  %108 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %106, i64 0, i32 3
  %109 = load i32, i32* %108, align 8
  %110 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %106, i64 0, i32 4
  %111 = load i16, i16* %110, align 4
  %112 = zext i16 %111 to i32
  %113 = add i32 %109, %112
  %114 = icmp slt i32 %107, %113
  %115 = select i1 %114, i32 %113, i32 %107
  %116 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %106, i64 0, i32 1
  %117 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %116, align 8
  %118 = icmp eq %"class.blink::InlineTextBox"* %117, null
  br i1 %118, label %119, label %105

119:                                              ; preds = %105, %95, %92, %88, %59
  %120 = phi i32 [ %60, %59 ], [ %94, %92 ], [ 0, %88 ], [ %101, %95 ], [ %115, %105 ]
  ret i32 %120
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink10LayoutText18ResolvedTextLengthEv(%"class.blink::LayoutText"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::PositionTemplate", align 8
  %3 = alloca %"class.blink::PositionTemplate", align 8
  %4 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase33is_css_container_queries_enabled_E, align 1, !range !2
  %5 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase26is_layout_ng_grid_enabled_E, align 1
  %6 = or i8 %5, %4
  %7 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase31is_bidi_caret_affinity_enabled_E, align 1
  %8 = or i8 %6, %7
  %9 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase21is_layout_ng_enabled_E, align 1
  %10 = or i8 %8, %9
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %55, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  %14 = tail call %"class.blink::NGOffsetMapping"* @_ZN5blink15NGOffsetMapping6GetForEPKNS_12LayoutObjectE(%"class.blink::LayoutObject"* %13) #19
  %15 = icmp eq %"class.blink::NGOffsetMapping"* %14, null
  br i1 %15, label %55, label %16

16:                                               ; preds = %12
  %17 = bitcast %"class.blink::PositionTemplate"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #19
  %18 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %2, i64 0, i32 0, i32 0, i32 0
  %19 = bitcast %"class.blink::LayoutText"* %0 to void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)***
  %20 = bitcast %"class.blink::PositionTemplate"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)**, void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)*** %19, align 8
  %22 = getelementptr inbounds void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)*, void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)** %21, i64 115
  %23 = load void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)*, void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)** %22, align 8
  call void %23(%"class.blink::PositionTemplate"* nonnull sret %2, %"class.blink::LayoutText"* %0, i32 0) #19
  %24 = bitcast %"class.blink::PositionTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #19
  %25 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 7, i32 0, i32 0
  %26 = bitcast %"class.blink::PositionTemplate"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false)
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %16
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 1
  %31 = load i32, i32* %30, align 4
  br label %32

32:                                               ; preds = %16, %29
  %33 = phi i32 [ %31, %29 ], [ 0, %16 ]
  %34 = load void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)**, void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)*** %19, align 8
  %35 = getelementptr inbounds void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)*, void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)** %34, i64 115
  %36 = load void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)*, void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)** %35, align 8
  call void %36(%"class.blink::PositionTemplate"* nonnull sret %3, %"class.blink::LayoutText"* %0, i32 %33) #19
  %37 = load %"class.blink::Node"*, %"class.blink::Node"** %18, align 8
  %38 = icmp eq %"class.blink::Node"* %37, null
  br i1 %38, label %53, label %39

39:                                               ; preds = %32
  %40 = call i64 @_ZNK5blink15NGOffsetMapping20GetTextContentOffsetERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::NGOffsetMapping"* nonnull %14, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %2) #19
  %41 = trunc i64 %40 to i8
  %42 = call i64 @_ZNK5blink15NGOffsetMapping20GetTextContentOffsetERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::NGOffsetMapping"* nonnull %14, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %3) #19
  %43 = trunc i64 %42 to i8
  %44 = icmp ne i8 %41, 0
  %45 = icmp ne i8 %43, 0
  %46 = and i1 %44, %45
  br i1 %46, label %47, label %53

47:                                               ; preds = %39
  %48 = lshr i64 %42, 32
  %49 = trunc i64 %48 to i32
  %50 = lshr i64 %40, 32
  %51 = trunc i64 %50 to i32
  %52 = sub i32 %49, %51
  br label %53

53:                                               ; preds = %32, %39, %47
  %54 = phi i32 [ 0, %32 ], [ %52, %47 ], [ 0, %39 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #19
  br label %80

55:                                               ; preds = %1, %12
  %56 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %57 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %56 to i96*
  %58 = load i96, i96* %57, align 4
  %59 = and i96 %58, 268435456
  %60 = icmp eq i96 %59, 0
  br i1 %60, label %63, label %61

61:                                               ; preds = %55
  %62 = tail call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #19
  br label %65

63:                                               ; preds = %55
  %64 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0
  br label %65

65:                                               ; preds = %61, %63
  %66 = phi %"class.blink::InlineTextBoxList"* [ %62, %61 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %66, i64 0, i32 0, i32 0
  %68 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %67, align 8
  %69 = icmp eq %"class.blink::InlineTextBox"* %68, null
  br i1 %69, label %80, label %70

70:                                               ; preds = %65, %70
  %71 = phi %"class.blink::InlineTextBox"* [ %78, %70 ], [ %68, %65 ]
  %72 = phi i32 [ %76, %70 ], [ 0, %65 ]
  %73 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %71, i64 0, i32 4
  %74 = load i16, i16* %73, align 4
  %75 = zext i16 %74 to i32
  %76 = add i32 %72, %75
  %77 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %71, i64 0, i32 2
  %78 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %77, align 8
  %79 = icmp eq %"class.blink::InlineTextBox"* %78, null
  br i1 %79, label %80, label %70

80:                                               ; preds = %70, %65, %53
  %81 = phi i32 [ %54, %53 ], [ 0, %65 ], [ %76, %70 ]
  ret i32 %81
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink10LayoutText19HasNonCollapsedTextEv(%"class.blink::LayoutText"*) local_unnamed_addr #0 align 2 {
  %2 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase33is_css_container_queries_enabled_E, align 1, !range !2
  %3 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase26is_layout_ng_grid_enabled_E, align 1
  %4 = or i8 %3, %2
  %5 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase31is_bidi_caret_affinity_enabled_E, align 1
  %6 = or i8 %4, %5
  %7 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase21is_layout_ng_enabled_E, align 1
  %8 = or i8 %6, %7
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %17, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  %12 = tail call %"class.blink::NGOffsetMapping"* @_ZN5blink15NGOffsetMapping6GetForEPKNS_12LayoutObjectE(%"class.blink::LayoutObject"* %11) #19
  %13 = icmp eq %"class.blink::NGOffsetMapping"* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %10
  %15 = tail call i32 @_ZNK5blink10LayoutText18ResolvedTextLengthEv(%"class.blink::LayoutText"* %0)
  %16 = icmp ne i32 %15, 0
  br label %32

17:                                               ; preds = %1, %10
  %18 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %19 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %18 to i96*
  %20 = load i96, i96* %19, align 4
  %21 = and i96 %20, 268435456
  %22 = icmp eq i96 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %17
  %24 = tail call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #19
  br label %27

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0
  br label %27

27:                                               ; preds = %23, %25
  %28 = phi %"class.blink::InlineTextBoxList"* [ %24, %23 ], [ %26, %25 ]
  %29 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %29, align 8
  %31 = icmp ne %"class.blink::InlineTextBox"* %30, null
  br label %32

32:                                               ; preds = %27, %14
  %33 = phi i1 [ %16, %14 ], [ %31, %27 ]
  ret i1 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink10LayoutText19ContainsCaretOffsetEi(%"class.blink::LayoutText"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::PositionTemplate", align 8
  %4 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase33is_css_container_queries_enabled_E, align 1, !range !2
  %5 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase26is_layout_ng_grid_enabled_E, align 1
  %6 = or i8 %5, %4
  %7 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase31is_bidi_caret_affinity_enabled_E, align 1
  %8 = or i8 %6, %7
  %9 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase21is_layout_ng_enabled_E, align 1
  %10 = or i8 %8, %9
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %61, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  %14 = tail call %"class.blink::NGOffsetMapping"* @_ZN5blink15NGOffsetMapping6GetForEPKNS_12LayoutObjectE(%"class.blink::LayoutObject"* %13) #19
  %15 = icmp eq %"class.blink::NGOffsetMapping"* %14, null
  br i1 %15, label %61, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 7, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  br label %23

23:                                               ; preds = %16, %20
  %24 = phi i32 [ %22, %20 ], [ 0, %16 ]
  %25 = icmp slt i32 %24, %1
  br i1 %25, label %92, label %26

26:                                               ; preds = %23
  %27 = bitcast %"class.blink::PositionTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #19
  %28 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %3, i64 0, i32 0, i32 0, i32 0
  %29 = bitcast %"class.blink::LayoutText"* %0 to void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)***
  %30 = bitcast %"class.blink::PositionTemplate"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 16, i1 false)
  %31 = load void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)**, void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)*** %29, align 8
  %32 = getelementptr inbounds void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)*, void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)** %31, i64 115
  %33 = load void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)*, void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)** %32, align 8
  call void %33(%"class.blink::PositionTemplate"* nonnull sret %3, %"class.blink::LayoutText"* %0, i32 %1) #19
  %34 = load %"class.blink::Node"*, %"class.blink::Node"** %28, align 8
  %35 = icmp eq %"class.blink::Node"* %34, null
  br i1 %35, label %59, label %36

36:                                               ; preds = %26
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  br label %42

42:                                               ; preds = %36, %39
  %43 = phi i32 [ %41, %39 ], [ 0, %36 ]
  %44 = icmp sgt i32 %43, %1
  br i1 %44, label %45, label %47

45:                                               ; preds = %42
  %46 = call zeroext i1 @_ZNK5blink15NGOffsetMapping27IsBeforeNonCollapsedContentERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::NGOffsetMapping"* nonnull %14, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %3) #19
  br i1 %46, label %59, label %47

47:                                               ; preds = %45, %42
  %48 = icmp eq i32 %1, 0
  br i1 %48, label %59, label %49

49:                                               ; preds = %47
  %50 = call zeroext i1 @_ZNK5blink15NGOffsetMapping26IsAfterNonCollapsedContentERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::NGOffsetMapping"* nonnull %14, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %3) #19
  br i1 %50, label %51, label %59

51:                                               ; preds = %49
  %52 = call i32 @_ZNK5blink15NGOffsetMapping18GetCharacterBeforeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::NGOffsetMapping"* nonnull %14, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %3) #19
  %53 = trunc i32 %52 to i8
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %56, !prof !3

55:                                               ; preds = %51
  call void @llvm.trap() #19
  unreachable

56:                                               ; preds = %51
  %57 = and i32 %52, -65536
  %58 = icmp ne i32 %57, 655360
  br label %59

59:                                               ; preds = %49, %47, %45, %26, %56
  %60 = phi i1 [ %58, %56 ], [ false, %26 ], [ true, %45 ], [ false, %47 ], [ false, %49 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #19
  br label %92

61:                                               ; preds = %2, %12
  %62 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %63 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %62 to i96*
  %64 = load i96, i96* %63, align 4
  %65 = and i96 %64, 268435456
  %66 = icmp eq i96 %65, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %61
  %68 = tail call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #19
  br label %71

69:                                               ; preds = %61
  %70 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0
  br label %71

71:                                               ; preds = %67, %69
  %72 = phi %"class.blink::InlineTextBoxList"* [ %68, %67 ], [ %70, %69 ]
  %73 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 1
  %74 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %72, i64 0, i32 0, i32 0
  %75 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %74, align 8
  %76 = icmp eq %"class.blink::InlineTextBox"* %75, null
  br i1 %76, label %92, label %77

77:                                               ; preds = %71, %88
  %78 = phi %"class.blink::InlineTextBox"* [ %90, %88 ], [ %75, %71 ]
  %79 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %78, i64 0, i32 3
  %80 = load i32, i32* %79, align 8
  %81 = icmp sgt i32 %80, %1
  br i1 %81, label %82, label %86

82:                                               ; preds = %77
  %83 = load i16, i16* %73, align 8
  %84 = and i16 %83, 512
  %85 = icmp eq i16 %84, 0
  br i1 %85, label %92, label %86

86:                                               ; preds = %82, %77
  %87 = tail call zeroext i1 @_ZNK5blink13InlineTextBox19ContainsCaretOffsetEi(%"class.blink::InlineTextBox"* nonnull %78, i32 %1) #19
  br i1 %87, label %92, label %88

88:                                               ; preds = %86
  %89 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %78, i64 0, i32 2
  %90 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %89, align 8
  %91 = icmp eq %"class.blink::InlineTextBox"* %90, null
  br i1 %91, label %92, label %77

92:                                               ; preds = %86, %88, %82, %71, %23, %59
  %93 = phi i1 [ %60, %59 ], [ false, %23 ], [ false, %71 ], [ true, %86 ], [ false, %88 ], [ false, %82 ]
  ret i1 %93
}

declare zeroext i1 @_ZNK5blink15NGOffsetMapping27IsBeforeNonCollapsedContentERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::NGOffsetMapping"*, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink15NGOffsetMapping26IsAfterNonCollapsedContentERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::NGOffsetMapping"*, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #1

declare i32 @_ZNK5blink15NGOffsetMapping18GetCharacterBeforeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::NGOffsetMapping"*, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink13InlineTextBox19ContainsCaretOffsetEi(%"class.blink::InlineTextBox"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink10LayoutText29IsBeforeNonCollapsedCharacterEj(%"class.blink::LayoutText"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::PositionTemplate", align 8
  %4 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase33is_css_container_queries_enabled_E, align 1, !range !2
  %5 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase26is_layout_ng_grid_enabled_E, align 1
  %6 = or i8 %5, %4
  %7 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase31is_bidi_caret_affinity_enabled_E, align 1
  %8 = or i8 %6, %7
  %9 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase21is_layout_ng_enabled_E, align 1
  %10 = or i8 %8, %9
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %38, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  %14 = tail call %"class.blink::NGOffsetMapping"* @_ZN5blink15NGOffsetMapping6GetForEPKNS_12LayoutObjectE(%"class.blink::LayoutObject"* %13) #19
  %15 = icmp eq %"class.blink::NGOffsetMapping"* %14, null
  br i1 %15, label %38, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 7, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %91, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp ugt i32 %22, %1
  br i1 %23, label %24, label %91

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::PositionTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #19
  %26 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %3, i64 0, i32 0, i32 0, i32 0
  %27 = bitcast %"class.blink::LayoutText"* %0 to void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)***
  %28 = bitcast %"class.blink::PositionTemplate"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 16, i1 false)
  %29 = load void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)**, void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)*** %27, align 8
  %30 = getelementptr inbounds void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)*, void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)** %29, i64 115
  %31 = load void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)*, void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)** %30, align 8
  call void %31(%"class.blink::PositionTemplate"* nonnull sret %3, %"class.blink::LayoutText"* %0, i32 %1) #19
  %32 = load %"class.blink::Node"*, %"class.blink::Node"** %26, align 8
  %33 = icmp eq %"class.blink::Node"* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %24
  %35 = call zeroext i1 @_ZNK5blink15NGOffsetMapping27IsBeforeNonCollapsedContentERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::NGOffsetMapping"* nonnull %14, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %3) #19
  br label %36

36:                                               ; preds = %24, %34
  %37 = phi i1 [ %35, %34 ], [ false, %24 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #19
  br label %91

38:                                               ; preds = %2, %12
  %39 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %40 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %39 to i96*
  %41 = load i96, i96* %40, align 4
  %42 = and i96 %41, 268435456
  %43 = icmp eq i96 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %38
  %45 = tail call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #19
  %46 = load i96, i96* %40, align 4
  br label %49

47:                                               ; preds = %38
  %48 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0
  br label %49

49:                                               ; preds = %44, %47
  %50 = phi i96 [ %46, %44 ], [ %41, %47 ]
  %51 = phi %"class.blink::InlineTextBoxList"* [ %45, %44 ], [ %48, %47 ]
  %52 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %51, i64 0, i32 0, i32 1
  %53 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %52, align 8
  %54 = and i96 %50, 268435456
  %55 = icmp eq i96 %54, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %49
  %57 = tail call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #19
  br label %60

58:                                               ; preds = %49
  %59 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0
  br label %60

60:                                               ; preds = %56, %58
  %61 = phi %"class.blink::InlineTextBoxList"* [ %57, %56 ], [ %59, %58 ]
  %62 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %61, i64 0, i32 0, i32 0
  %63 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %62, align 8
  %64 = icmp eq %"class.blink::InlineTextBox"* %63, null
  br i1 %64, label %91, label %65

65:                                               ; preds = %60, %87
  %66 = phi %"class.blink::InlineTextBox"* [ %89, %87 ], [ %63, %60 ]
  %67 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %66, i64 0, i32 4
  %68 = load i16, i16* %67, align 4
  %69 = icmp eq i16 %68, 0
  %70 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %66, i64 0, i32 3
  %71 = load i32, i32* %70, align 8
  %72 = zext i16 %68 to i32
  %73 = add nsw i32 %72, -1
  %74 = select i1 %69, i32 0, i32 %73
  %75 = add i32 %74, %71
  %76 = icmp ult i32 %75, %1
  br i1 %76, label %79, label %77

77:                                               ; preds = %65
  %78 = icmp ugt i32 %71, %1
  br i1 %78, label %87, label %91

79:                                               ; preds = %65
  %80 = icmp ne %"class.blink::InlineTextBox"* %66, %53
  %81 = add i32 %71, %72
  %82 = icmp eq i32 %81, %1
  %83 = and i1 %80, %82
  br i1 %83, label %84, label %87

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %66, i64 0, i32 0
  %86 = tail call fastcc zeroext i1 @_ZN5blinkL22DoesContinueOnNextLineERKNS_10LayoutTextEPNS_9InlineBoxEj(%"class.blink::LayoutText"* dereferenceable(144) %0, %"class.blink::InlineBox"* %85, i32 %1)
  br i1 %86, label %91, label %87

87:                                               ; preds = %79, %77, %84
  %88 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %66, i64 0, i32 2
  %89 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %88, align 8
  %90 = icmp eq %"class.blink::InlineTextBox"* %89, null
  br i1 %90, label %91, label %65

91:                                               ; preds = %77, %84, %87, %60, %16, %20, %36
  %92 = phi i1 [ false, %20 ], [ %37, %36 ], [ false, %16 ], [ false, %60 ], [ true, %77 ], [ true, %84 ], [ false, %87 ]
  ret i1 %92
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blinkL22DoesContinueOnNextLineERKNS_10LayoutTextEPNS_9InlineBoxEj(%"class.blink::LayoutText"* readonly dereferenceable(144), %"class.blink::InlineBox"*, i32) unnamed_addr #0 {
  %4 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %5 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %4 to i96*
  %6 = load i96, i96* %5, align 4
  %7 = and i96 %6, 268435456
  %8 = icmp eq i96 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %3
  %10 = tail call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #19
  br label %11

11:                                               ; preds = %3, %9
  %12 = tail call %"class.blink::InlineBox"* @_ZNK5blink9InlineBox13NextLeafChildEv(%"class.blink::InlineBox"* %1) #19
  %13 = icmp eq %"class.blink::InlineBox"* %12, null
  br i1 %13, label %42, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0
  %16 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  br label %17

17:                                               ; preds = %14, %39
  %18 = phi %"class.blink::InlineBox"* [ %12, %14 ], [ %40, %39 ]
  %19 = load i96, i96* %5, align 4
  %20 = and i96 %19, 268435456
  %21 = icmp eq i96 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = tail call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #19
  br label %24

24:                                               ; preds = %17, %22
  %25 = phi %"class.blink::InlineTextBoxList"* [ %23, %22 ], [ %15, %17 ]
  %26 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %25, i64 0, i32 0, i32 1
  %27 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %27, i64 0, i32 0
  %29 = icmp eq %"class.blink::InlineBox"* %28, %18
  br i1 %29, label %73, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %18, i64 0, i32 4, i32 0
  %32 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %31, align 8
  %33 = icmp eq %"class.blink::LayoutObject"* %32, %16
  br i1 %33, label %34, label %39

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %18, i64 1, i32 1
  %36 = bitcast %"class.blink::InlineBox"** %35 to i32*
  %37 = load i32, i32* %36, align 8
  %38 = icmp ult i32 %37, %2
  br i1 %38, label %39, label %73

39:                                               ; preds = %34, %30
  %40 = tail call %"class.blink::InlineBox"* @_ZNK5blink9InlineBox13NextLeafChildEv(%"class.blink::InlineBox"* nonnull %18) #19
  %41 = icmp eq %"class.blink::InlineBox"* %40, null
  br i1 %41, label %42, label %17

42:                                               ; preds = %39, %11
  %43 = tail call %"class.blink::InlineBox"* @_ZNK5blink9InlineBox13PrevLeafChildEv(%"class.blink::InlineBox"* %1) #19
  %44 = icmp eq %"class.blink::InlineBox"* %43, null
  br i1 %44, label %73, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0
  %47 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  br label %48

48:                                               ; preds = %45, %70
  %49 = phi %"class.blink::InlineBox"* [ %43, %45 ], [ %71, %70 ]
  %50 = load i96, i96* %5, align 4
  %51 = and i96 %50, 268435456
  %52 = icmp eq i96 %51, 0
  br i1 %52, label %55, label %53

53:                                               ; preds = %48
  %54 = tail call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #19
  br label %55

55:                                               ; preds = %48, %53
  %56 = phi %"class.blink::InlineTextBoxList"* [ %54, %53 ], [ %46, %48 ]
  %57 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %56, i64 0, i32 0, i32 1
  %58 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %58, i64 0, i32 0
  %60 = icmp eq %"class.blink::InlineBox"* %59, %49
  br i1 %60, label %73, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %49, i64 0, i32 4, i32 0
  %63 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %62, align 8
  %64 = icmp eq %"class.blink::LayoutObject"* %63, %47
  br i1 %64, label %65, label %70

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %49, i64 1, i32 1
  %67 = bitcast %"class.blink::InlineBox"** %66 to i32*
  %68 = load i32, i32* %67, align 8
  %69 = icmp ult i32 %68, %2
  br i1 %69, label %70, label %73

70:                                               ; preds = %65, %61
  %71 = tail call %"class.blink::InlineBox"* @_ZNK5blink9InlineBox13PrevLeafChildEv(%"class.blink::InlineBox"* nonnull %49) #19
  %72 = icmp eq %"class.blink::InlineBox"* %71, null
  br i1 %72, label %73, label %48

73:                                               ; preds = %34, %24, %70, %55, %65, %42
  %74 = phi i1 [ true, %42 ], [ true, %70 ], [ false, %55 ], [ false, %65 ], [ false, %24 ], [ false, %34 ]
  ret i1 %74
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink10LayoutText28IsAfterNonCollapsedCharacterEj(%"class.blink::LayoutText"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::PositionTemplate", align 8
  %4 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase33is_css_container_queries_enabled_E, align 1, !range !2
  %5 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase26is_layout_ng_grid_enabled_E, align 1
  %6 = or i8 %5, %4
  %7 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase31is_bidi_caret_affinity_enabled_E, align 1
  %8 = or i8 %6, %7
  %9 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase21is_layout_ng_enabled_E, align 1
  %10 = or i8 %8, %9
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %32, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  %14 = tail call %"class.blink::NGOffsetMapping"* @_ZN5blink15NGOffsetMapping6GetForEPKNS_12LayoutObjectE(%"class.blink::LayoutObject"* %13) #19
  %15 = icmp eq %"class.blink::NGOffsetMapping"* %14, null
  br i1 %15, label %32, label %16

16:                                               ; preds = %12
  %17 = icmp eq i32 %1, 0
  br i1 %17, label %86, label %18

18:                                               ; preds = %16
  %19 = bitcast %"class.blink::PositionTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #19
  %20 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %3, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.blink::LayoutText"* %0 to void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)***
  %22 = bitcast %"class.blink::PositionTemplate"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 16, i1 false)
  %23 = load void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)**, void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)*** %21, align 8
  %24 = getelementptr inbounds void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)*, void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)** %23, i64 115
  %25 = load void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)*, void (%"class.blink::PositionTemplate"*, %"class.blink::LayoutText"*, i32)** %24, align 8
  call void %25(%"class.blink::PositionTemplate"* nonnull sret %3, %"class.blink::LayoutText"* %0, i32 %1) #19
  %26 = load %"class.blink::Node"*, %"class.blink::Node"** %20, align 8
  %27 = icmp eq %"class.blink::Node"* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %18
  %29 = call zeroext i1 @_ZNK5blink15NGOffsetMapping26IsAfterNonCollapsedContentERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::NGOffsetMapping"* nonnull %14, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %3) #19
  br label %30

30:                                               ; preds = %18, %28
  %31 = phi i1 [ %29, %28 ], [ false, %18 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #19
  br label %86

32:                                               ; preds = %2, %12
  %33 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %34 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %33 to i96*
  %35 = load i96, i96* %34, align 4
  %36 = and i96 %35, 268435456
  %37 = icmp eq i96 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %32
  %39 = tail call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #19
  %40 = load i96, i96* %34, align 4
  br label %43

41:                                               ; preds = %32
  %42 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0
  br label %43

43:                                               ; preds = %38, %41
  %44 = phi i96 [ %40, %38 ], [ %35, %41 ]
  %45 = phi %"class.blink::InlineTextBoxList"* [ %39, %38 ], [ %42, %41 ]
  %46 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %45, i64 0, i32 0, i32 1
  %47 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %46, align 8
  %48 = and i96 %44, 268435456
  %49 = icmp eq i96 %48, 0
  br i1 %49, label %52, label %50

50:                                               ; preds = %43
  %51 = tail call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #19
  br label %54

52:                                               ; preds = %43
  %53 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0
  br label %54

54:                                               ; preds = %50, %52
  %55 = phi %"class.blink::InlineTextBoxList"* [ %51, %50 ], [ %53, %52 ]
  %56 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %55, i64 0, i32 0, i32 0
  %57 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %56, align 8
  %58 = icmp eq %"class.blink::InlineTextBox"* %57, null
  br i1 %58, label %86, label %59

59:                                               ; preds = %54
  %60 = add i32 %1, 1
  br label %61

61:                                               ; preds = %59, %82
  %62 = phi %"class.blink::InlineTextBox"* [ %57, %59 ], [ %84, %82 ]
  %63 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %62, i64 0, i32 3
  %64 = load i32, i32* %63, align 8
  %65 = icmp eq i32 %64, %1
  br i1 %65, label %82, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %62, i64 0, i32 4
  %68 = load i16, i16* %67, align 4
  %69 = zext i16 %68 to i32
  %70 = add i32 %64, %69
  %71 = icmp ult i32 %70, %1
  br i1 %71, label %74, label %72

72:                                               ; preds = %66
  %73 = icmp ult i32 %64, %1
  br i1 %73, label %86, label %82

74:                                               ; preds = %66
  %75 = icmp ne %"class.blink::InlineTextBox"* %62, %47
  %76 = add nuw i32 %70, 1
  %77 = icmp eq i32 %76, %1
  %78 = and i1 %75, %77
  br i1 %78, label %79, label %82

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %62, i64 0, i32 0
  %81 = tail call fastcc zeroext i1 @_ZN5blinkL22DoesContinueOnNextLineERKNS_10LayoutTextEPNS_9InlineBoxEj(%"class.blink::LayoutText"* dereferenceable(144) %0, %"class.blink::InlineBox"* %80, i32 %60)
  br i1 %81, label %86, label %82

82:                                               ; preds = %74, %61, %72, %79
  %83 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %62, i64 0, i32 2
  %84 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %83, align 8
  %85 = icmp eq %"class.blink::InlineTextBox"* %84, null
  br i1 %85, label %86, label %61

86:                                               ; preds = %72, %79, %82, %54, %30, %16
  %87 = phi i1 [ %31, %30 ], [ false, %16 ], [ false, %54 ], [ true, %72 ], [ true, %79 ], [ false, %82 ]
  ret i1 %87
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutText35MomentarilyRevealLastTypedCharacterEj(%"class.blink::LayoutText"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.blink::LayoutText"*, align 8
  %5 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_119GetSecureTextTimersEvE5s_map to i8*) acquire, align 8
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %11, !prof !5

7:                                                ; preds = %2
  %8 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_119GetSecureTextTimersEvE5s_map) #19
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %7
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_119GetSecureTextTimersEvE5s_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #19
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_119GetSecureTextTimersEvE5s_map) #19
  br label %11

11:                                               ; preds = %2, %7, %10
  %12 = bitcast %"class.blink::LayoutText"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #19
  store %"class.blink::LayoutText"* %0, %"class.blink::LayoutText"** %4, align 8
  %13 = call fastcc %"class.blink::(anonymous namespace)::SecureTextTimer"* @_ZNK3WTF7HashMapIPN5blink10LayoutTextEPNS1_12_GLOBAL__N_115SecureTextTimerENS_7PtrHashIS2_EENS_10HashTraitsIS3_EENS9_IS6_EENS_18PartitionAllocatorEE2atERKS3_(%"class.blink::LayoutText"** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #19
  %14 = icmp eq %"class.blink::(anonymous namespace)::SecureTextTimer"* %13, null
  br i1 %14, label %15, label %142

15:                                               ; preds = %11
  %16 = tail call i8* @_Znwm(i64 96) #20
  %17 = bitcast i8* %16 to %"class.blink::(anonymous namespace)::SecureTextTimer"*
  %18 = bitcast i8* %16 to %"class.blink::TimerBase"*
  %19 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  %20 = load %"class.blink::Node"*, %"class.blink::Node"** %19, align 8
  %21 = icmp eq %"class.blink::Node"* %20, null
  br i1 %21, label %22, label %31

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  br label %24

24:                                               ; preds = %24, %22
  %25 = phi %"class.blink::LayoutObject"* [ %27, %24 ], [ %23, %22 ]
  %26 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %25, i64 0, i32 7
  %27 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %27, i64 0, i32 6, i32 0, i32 0
  %29 = load %"class.blink::Node"*, %"class.blink::Node"** %28, align 8
  %30 = icmp eq %"class.blink::Node"* %29, null
  br i1 %30, label %24, label %31

31:                                               ; preds = %24, %15
  %32 = phi %"class.blink::Node"* [ %20, %15 ], [ %29, %24 ]
  %33 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %32, i64 0, i32 3, i32 0, i32 0
  %34 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %34, i64 0, i32 2, i32 0, i32 0
  %36 = load %"class.blink::Document"*, %"class.blink::Document"** %35, align 8
  %37 = tail call %"class.base::SingleThreadTaskRunner"* @_ZN5blink8Document13GetTaskRunnerENS_8TaskTypeE(%"class.blink::Document"* %36, i8 zeroext 2) #19
  tail call void @_ZN5blink9TimerBaseC2E13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::TimerBase"* nonnull %18, %"class.base::SingleThreadTaskRunner"* %37) #19
  %38 = bitcast i8* %16 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink12_GLOBAL__N_115SecureTextTimerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8
  %39 = getelementptr inbounds i8, i8* %16, i64 80
  %40 = bitcast i8* %39 to %"class.blink::LayoutText"**
  store %"class.blink::LayoutText"* %0, %"class.blink::LayoutText"** %40, align 8
  %41 = getelementptr inbounds i8, i8* %16, i64 88
  %42 = bitcast i8* %41 to i32*
  store i32 -1, i32* %42, align 8
  %43 = ptrtoint i8* %16 to i64
  %44 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_119GetSecureTextTimersEvE5s_map to i8*) acquire, align 8
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %50, !prof !5

46:                                               ; preds = %31
  %47 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_119GetSecureTextTimersEvE5s_map) #19
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %50, label %49

49:                                               ; preds = %46
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_119GetSecureTextTimersEvE5s_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #19
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_119GetSecureTextTimersEvE5s_map) #19
  br label %50

50:                                               ; preds = %31, %46, %49
  %51 = ptrtoint %"class.blink::LayoutText"* %0 to i64
  %52 = load %"struct.WTF::KeyValuePair.3039"*, %"struct.WTF::KeyValuePair.3039"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_119GetSecureTextTimersEvE5s_map to %"struct.WTF::KeyValuePair.3039"**), align 8
  %53 = icmp eq %"struct.WTF::KeyValuePair.3039"* %52, null
  br i1 %53, label %54, label %57

54:                                               ; preds = %50
  %55 = tail call fastcc %"struct.WTF::KeyValuePair.3039"* @_ZN3WTF9HashTableIPN5blink10LayoutTextENS_12KeyValuePairIS3_PNS1_12_GLOBAL__N_115SecureTextTimerEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6ExpandEPS8_(%"struct.WTF::KeyValuePair.3039"* null) #19
  %56 = load %"struct.WTF::KeyValuePair.3039"*, %"struct.WTF::KeyValuePair.3039"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_119GetSecureTextTimersEvE5s_map to %"struct.WTF::KeyValuePair.3039"**), align 8
  br label %57

57:                                               ; preds = %54, %50
  %58 = phi %"struct.WTF::KeyValuePair.3039"* [ %52, %50 ], [ %56, %54 ]
  %59 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_119GetSecureTextTimersEvE5s_map, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %60 = add i32 %59, -1
  %61 = zext i32 %60 to i64
  %62 = shl i64 %51, 32
  %63 = xor i64 %62, -1
  %64 = add i64 %63, %51
  %65 = lshr i64 %64, 22
  %66 = xor i64 %65, %64
  %67 = shl i64 %66, 13
  %68 = xor i64 %67, -1
  %69 = add i64 %66, %68
  %70 = lshr i64 %69, 8
  %71 = xor i64 %70, %69
  %72 = mul i64 %71, 9
  %73 = lshr i64 %72, 15
  %74 = xor i64 %73, %72
  %75 = shl i64 %74, 27
  %76 = xor i64 %75, -1
  %77 = add i64 %74, %76
  %78 = lshr i64 %77, 31
  %79 = xor i64 %78, %77
  %80 = trunc i64 %79 to i32
  %81 = and i32 %60, %80
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.3039", %"struct.WTF::KeyValuePair.3039"* %58, i64 %82
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.3039", %"struct.WTF::KeyValuePair.3039"* %83, i64 0, i32 0
  %85 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %84, align 8
  %86 = icmp eq %"class.blink::LayoutText"* %85, null
  br i1 %86, label %128, label %87

87:                                               ; preds = %57
  %88 = xor i32 %80, -1
  %89 = lshr i32 %80, 23
  %90 = add i32 %89, %88
  %91 = shl i32 %90, 12
  %92 = xor i32 %91, %90
  %93 = lshr i32 %92, 7
  %94 = xor i32 %93, %92
  %95 = shl i32 %94, 2
  %96 = xor i32 %95, %94
  %97 = lshr i32 %96, 20
  %98 = xor i32 %97, %96
  %99 = or i32 %98, 1
  %100 = zext i32 %99 to i64
  br label %101

101:                                              ; preds = %108, %87
  %102 = phi %"class.blink::LayoutText"* [ %85, %87 ], [ %117, %108 ]
  %103 = phi %"struct.WTF::KeyValuePair.3039"* [ %83, %87 ], [ %115, %108 ]
  %104 = phi %"struct.WTF::KeyValuePair.3039"* [ null, %87 ], [ %110, %108 ]
  %105 = phi i64 [ %82, %87 ], [ %114, %108 ]
  %106 = phi i64 [ 0, %87 ], [ %112, %108 ]
  %107 = icmp eq %"class.blink::LayoutText"* %102, %0
  br i1 %107, label %142, label %108

108:                                              ; preds = %101
  %109 = icmp eq %"class.blink::LayoutText"* %102, inttoptr (i64 -1 to %"class.blink::LayoutText"*)
  %110 = select i1 %109, %"struct.WTF::KeyValuePair.3039"* %103, %"struct.WTF::KeyValuePair.3039"* %104
  %111 = icmp eq i64 %106, 0
  %112 = select i1 %111, i64 %100, i64 %106
  %113 = add i64 %112, %105
  %114 = and i64 %113, %61
  %115 = getelementptr inbounds %"struct.WTF::KeyValuePair.3039", %"struct.WTF::KeyValuePair.3039"* %58, i64 %114
  %116 = getelementptr inbounds %"struct.WTF::KeyValuePair.3039", %"struct.WTF::KeyValuePair.3039"* %115, i64 0, i32 0
  %117 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %116, align 8
  %118 = icmp eq %"class.blink::LayoutText"* %117, null
  br i1 %118, label %119, label %101

119:                                              ; preds = %108
  %120 = icmp eq %"struct.WTF::KeyValuePair.3039"* %110, null
  br i1 %120, label %128, label %121

121:                                              ; preds = %119
  %122 = bitcast %"struct.WTF::KeyValuePair.3039"* %110 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %122, i8 0, i64 16, i1 false) #19
  %123 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_119GetSecureTextTimersEvE5s_map, i64 0, i32 0, i32 0, i64 16) to i32*), align 8
  %124 = add i32 %123, 2147483647
  %125 = and i32 %124, 2147483647
  %126 = and i32 %123, -2147483648
  %127 = or i32 %125, %126
  store i32 %127, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_119GetSecureTextTimersEvE5s_map, i64 0, i32 0, i32 0, i64 16) to i32*), align 8
  br label %128

128:                                              ; preds = %121, %119, %57
  %129 = phi %"struct.WTF::KeyValuePair.3039"* [ %110, %121 ], [ %115, %119 ], [ %83, %57 ]
  %130 = bitcast %"struct.WTF::KeyValuePair.3039"* %129 to i64*
  store i64 %51, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.WTF::KeyValuePair.3039", %"struct.WTF::KeyValuePair.3039"* %129, i64 0, i32 1
  %132 = bitcast %"class.blink::(anonymous namespace)::SecureTextTimer"** %131 to i64*
  store i64 %43, i64* %132, align 8
  %133 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_119GetSecureTextTimersEvE5s_map, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %134 = add i32 %133, 1
  store i32 %134, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_119GetSecureTextTimersEvE5s_map, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %135 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_119GetSecureTextTimersEvE5s_map, i64 0, i32 0, i32 0, i64 16) to i32*), align 8
  %136 = add i32 %135, %134
  %137 = shl i32 %136, 1
  %138 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_119GetSecureTextTimersEvE5s_map, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %139 = icmp ult i32 %137, %138
  br i1 %139, label %142, label %140

140:                                              ; preds = %128
  %141 = tail call fastcc %"struct.WTF::KeyValuePair.3039"* @_ZN3WTF9HashTableIPN5blink10LayoutTextENS_12KeyValuePairIS3_PNS1_12_GLOBAL__N_115SecureTextTimerEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6ExpandEPS8_(%"struct.WTF::KeyValuePair.3039"* %129) #19
  br label %142

142:                                              ; preds = %101, %140, %128, %11
  %143 = phi %"class.blink::(anonymous namespace)::SecureTextTimer"* [ %13, %11 ], [ %17, %128 ], [ %17, %140 ], [ %17, %101 ]
  %144 = getelementptr inbounds %"class.blink::(anonymous namespace)::SecureTextTimer", %"class.blink::(anonymous namespace)::SecureTextTimer"* %143, i64 0, i32 2
  store i32 %1, i32* %144, align 8
  %145 = getelementptr inbounds %"class.blink::(anonymous namespace)::SecureTextTimer", %"class.blink::(anonymous namespace)::SecureTextTimer"* %143, i64 0, i32 1
  %146 = bitcast %"class.blink::LayoutText"** %145 to %"class.blink::LayoutObject"**
  %147 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %146, align 8
  %148 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %147, i64 0, i32 6, i32 0, i32 0
  %149 = load %"class.blink::Node"*, %"class.blink::Node"** %148, align 8
  %150 = icmp eq %"class.blink::Node"* %149, null
  br i1 %150, label %151, label %158

151:                                              ; preds = %142, %151
  %152 = phi %"class.blink::LayoutObject"* [ %154, %151 ], [ %147, %142 ]
  %153 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %152, i64 0, i32 7
  %154 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %153, align 8
  %155 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %154, i64 0, i32 6, i32 0, i32 0
  %156 = load %"class.blink::Node"*, %"class.blink::Node"** %155, align 8
  %157 = icmp eq %"class.blink::Node"* %156, null
  br i1 %157, label %151, label %158

158:                                              ; preds = %151, %142
  %159 = phi %"class.blink::Node"* [ %149, %142 ], [ %156, %151 ]
  %160 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %159, i64 0, i32 3, i32 0, i32 0
  %161 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %160, align 8
  %162 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %161, i64 0, i32 2, i32 0, i32 0
  %163 = load %"class.blink::Document"*, %"class.blink::Document"** %162, align 8
  %164 = tail call %"class.blink::Settings"* @_ZNK5blink8Document11GetSettingsEv(%"class.blink::Document"* %163) #19
  %165 = icmp eq %"class.blink::Settings"* %164, null
  br i1 %165, label %179, label %166

166:                                              ; preds = %158
  %167 = getelementptr inbounds %"class.blink::(anonymous namespace)::SecureTextTimer", %"class.blink::(anonymous namespace)::SecureTextTimer"* %143, i64 0, i32 0
  %168 = getelementptr inbounds %"class.blink::Settings", %"class.blink::Settings"* %164, i64 0, i32 45
  %169 = load double, double* %168, align 8
  %170 = fmul double %169, 1.000000e+06
  %171 = fcmp ult double %170, 0xC3E0000000000000
  %172 = fcmp ugt double %170, 0x43DFFFFFFFFFFFFF
  %173 = fcmp ogt double %170, 0xC3E0000000000000
  %174 = select i1 %173, double %170, double 0xC3E0000000000000
  %175 = fptosi double %174 to i64
  %176 = select i1 %171, i64 0, i64 9223372036854775807
  %177 = select i1 %172, i64 %176, i64 %175
  %178 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %178) #19
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0), i32 114) #19
  call void @_ZN5blink9TimerBase5StartEN4base9TimeDeltaES2_RKNS1_8LocationE(%"class.blink::TimerBase"* %167, i64 %177, i64 0, %"class.base::Location"* nonnull dereferenceable(32) %3) #19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %178) #19
  br label %179

179:                                              ; preds = %158, %166
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AbstractInlineTextBox"* @_ZN5blink10LayoutText26FirstAbstractInlineTextBoxEv(%"class.blink::LayoutText"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::NGInlineCursor", align 8
  %3 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %5 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %4 to i96*
  %6 = load i96, i96* %5, align 4
  %7 = and i96 %6, 268435456
  %8 = icmp eq i96 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.blink::NGInlineCursor"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %10) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 112, i1 false)
  %11 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %2, i64 0, i32 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 81, i1 false) #19
  %12 = bitcast %"class.blink::LayoutBlockFlow"** %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 20, i1 false) #19
  call void @_ZN5blink14NGInlineCursor6MoveToERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"* nonnull %2, %"class.blink::LayoutObject"* dereferenceable(88) %3) #19
  %13 = call %"class.blink::AbstractInlineTextBox"* @_ZN5blink23NGAbstractInlineTextBox11GetOrCreateERKNS_14NGInlineCursorE(%"class.blink::NGInlineCursor"* nonnull dereferenceable(112) %2) #19
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %10) #19
  br label %18

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %16 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %15, align 8
  %17 = tail call %"class.blink::AbstractInlineTextBox"* @_ZN5blink27LegacyAbstractInlineTextBox11GetOrCreateENS_14LineLayoutTextEPNS_13InlineTextBoxE(%"class.blink::LayoutObject"* %3, %"class.blink::InlineTextBox"* %16) #19
  br label %18

18:                                               ; preds = %14, %9
  %19 = phi %"class.blink::AbstractInlineTextBox"* [ %13, %9 ], [ %17, %14 ]
  ret %"class.blink::AbstractInlineTextBox"* %19
}

declare %"class.blink::AbstractInlineTextBox"* @_ZN5blink23NGAbstractInlineTextBox11GetOrCreateERKNS_14NGInlineCursorE(%"class.blink::NGInlineCursor"* dereferenceable(112)) local_unnamed_addr #1

declare %"class.blink::AbstractInlineTextBox"* @_ZN5blink27LegacyAbstractInlineTextBox11GetOrCreateENS_14LineLayoutTextEPNS_13InlineTextBoxE(%"class.blink::LayoutObject"*, %"class.blink::InlineTextBox"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink10LayoutText15InvalidatePaintERKNS_23PaintInvalidatorContextE(%"class.blink::LayoutText"*, %"struct.blink::PaintInvalidatorContext"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::LayoutText"*, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %6 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %5 to i96*
  %7 = load i96, i96* %6, align 4
  %8 = and i96 %7, 262144
  %9 = icmp eq i96 %8, 0
  br i1 %9, label %21, label %10

10:                                               ; preds = %2
  %11 = tail call zeroext i1 @_ZNK5blink12LayoutObject10IsSelectedEv(%"class.blink::LayoutObject"* %4) #19
  br i1 %11, label %21, label %12

12:                                               ; preds = %10
  %13 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_132GetSelectionDisplayItemClientMapEvE5s_map to i8*) acquire, align 8
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %19, !prof !5

15:                                               ; preds = %12
  %16 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_132GetSelectionDisplayItemClientMapEvE5s_map) #19
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %19, label %18

18:                                               ; preds = %15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton.3329", %"class.WTF::StaticSingleton.3329"* @_ZZN5blink12_GLOBAL__N_132GetSelectionDisplayItemClientMapEvE5s_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #19
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_132GetSelectionDisplayItemClientMapEvE5s_map) #19
  br label %19

19:                                               ; preds = %12, %15, %18
  %20 = bitcast %"class.blink::LayoutText"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #19
  store %"class.blink::LayoutText"* %0, %"class.blink::LayoutText"** %3, align 8
  call fastcc void @_ZN3WTF7HashMapIPKN5blink10LayoutTextENSt3__110unique_ptrINS1_12_GLOBAL__N_126SelectionDisplayItemClientENS5_14default_deleteIS8_EEEENS_7PtrHashIS3_EENS_10HashTraitsIS4_EENSE_ISB_EENS_18PartitionAllocatorEE5eraseERKS4_(%"class.blink::LayoutText"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #19
  br label %21

21:                                               ; preds = %2, %19, %10
  tail call void @_ZNK5blink12LayoutObject15InvalidatePaintERKNS_23PaintInvalidatorContextE(%"class.blink::LayoutObject"* %4, %"struct.blink::PaintInvalidatorContext"* %1) #19
  ret void
}

declare void @_ZNK5blink12LayoutObject15InvalidatePaintERKNS_23PaintInvalidatorContextE(%"class.blink::LayoutObject"*, %"struct.blink::PaintInvalidatorContext"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink10LayoutText28InvalidateDisplayItemClientsENS_23PaintInvalidationReasonE(%"class.blink::LayoutText"*, i8 zeroext) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::ObjectPaintInvalidator", align 8
  %4 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  %5 = bitcast %"class.blink::ObjectPaintInvalidator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #19
  %6 = getelementptr inbounds %"class.blink::ObjectPaintInvalidator", %"class.blink::ObjectPaintInvalidator"* %3, i64 0, i32 0
  store %"class.blink::LayoutObject"* %4, %"class.blink::LayoutObject"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 1
  %8 = bitcast %"class.blink::DisplayItemClient.base"* %7 to %"class.blink::DisplayItemClient"*
  call void @_ZN5blink22ObjectPaintInvalidator27InvalidateDisplayItemClientERKNS_17DisplayItemClientENS_23PaintInvalidationReasonE(%"class.blink::ObjectPaintInvalidator"* nonnull %3, %"class.blink::DisplayItemClient"* dereferenceable(16) %8, i8 zeroext %1)
  %9 = call %"class.blink::DisplayItemClient"* @_ZNK5blink10LayoutText29GetSelectionDisplayItemClientEv(%"class.blink::LayoutText"* %0)
  %10 = icmp eq %"class.blink::DisplayItemClient"* %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %2
  call void @_ZN5blink22ObjectPaintInvalidator27InvalidateDisplayItemClientERKNS_17DisplayItemClientENS_23PaintInvalidationReasonE(%"class.blink::ObjectPaintInvalidator"* nonnull %3, %"class.blink::DisplayItemClient"* nonnull dereferenceable(16) %9, i8 zeroext %1)
  br label %12

12:                                               ; preds = %2, %11
  %13 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %14 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %13 to i96*
  %15 = load i96, i96* %14, align 4
  %16 = and i96 %15, 268435456
  %17 = icmp eq i96 %16, 0
  br i1 %17, label %18, label %35

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %20 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %19, align 8
  %21 = icmp eq %"class.blink::InlineTextBox"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18, %31
  %23 = phi %"class.blink::InlineTextBox"* [ %33, %31 ], [ %20, %18 ]
  %24 = bitcast %"class.blink::InlineTextBox"* %23 to %"class.blink::DisplayItemClient"*
  call void @_ZN5blink22ObjectPaintInvalidator27InvalidateDisplayItemClientERKNS_17DisplayItemClientENS_23PaintInvalidationReasonE(%"class.blink::ObjectPaintInvalidator"* nonnull %3, %"class.blink::DisplayItemClient"* nonnull dereferenceable(16) %24, i8 zeroext %1)
  %25 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %23, i64 0, i32 0
  %26 = call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZN5blink9InlineBox4RootEv(%"class.blink::InlineBox"* %25) #19
  %27 = call %"class.blink::EllipsisBox"* @_ZNK5blink13RootInlineBox14GetEllipsisBoxEv(%"class.blink::RootInlineBox"* %26) #19
  %28 = icmp eq %"class.blink::EllipsisBox"* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %22
  %30 = bitcast %"class.blink::EllipsisBox"* %27 to %"class.blink::DisplayItemClient"*
  call void @_ZN5blink22ObjectPaintInvalidator27InvalidateDisplayItemClientERKNS_17DisplayItemClientENS_23PaintInvalidationReasonE(%"class.blink::ObjectPaintInvalidator"* nonnull %3, %"class.blink::DisplayItemClient"* nonnull dereferenceable(16) %30, i8 zeroext %1)
  br label %31

31:                                               ; preds = %22, %29
  %32 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %23, i64 0, i32 2
  %33 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %32, align 8
  %34 = icmp eq %"class.blink::InlineTextBox"* %33, null
  br i1 %34, label %35, label %22

35:                                               ; preds = %31, %18, %12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22ObjectPaintInvalidator27InvalidateDisplayItemClientERKNS_17DisplayItemClientENS_23PaintInvalidationReasonE(%"class.blink::ObjectPaintInvalidator"*, %"class.blink::DisplayItemClient"* dereferenceable(16), i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca i8*, align 8
  %7 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 155, i32 0), align 16
  %8 = and i8 %7, 25
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %46, label %10, !prof !4

10:                                               ; preds = %3
  %11 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #19
  %12 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #19
  %13 = bitcast %"class.blink::DisplayItemClient"* %1 to %"class.WTF::StringImpl"* (%"class.blink::DisplayItemClient"*)***
  %14 = load %"class.WTF::StringImpl"* (%"class.blink::DisplayItemClient"*)**, %"class.WTF::StringImpl"* (%"class.blink::DisplayItemClient"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::DisplayItemClient"*)*, %"class.WTF::StringImpl"* (%"class.blink::DisplayItemClient"*)** %14, i64 2
  %16 = load %"class.WTF::StringImpl"* (%"class.blink::DisplayItemClient"*)*, %"class.WTF::StringImpl"* (%"class.blink::DisplayItemClient"*)** %15, align 8
  %17 = tail call %"class.WTF::StringImpl"* %16(%"class.blink::DisplayItemClient"* %1) #19
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %18, align 8
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %4, %"class.WTF::String"* nonnull %5, i32 0) #19
  %19 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #19
  %20 = call i8* @_ZN5blink31PaintInvalidationReasonToStringENS_23PaintInvalidationReasonE(i8 zeroext %2) #19
  store i8* %20, i8** %6, align 8
  %21 = call i64 @_ZN20trace_event_internal13AddTraceEventINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKcEEN4base11trace_event16TraceEventHandleEcPKhS9_S9_yjyS9_OT_S9_OT0_(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 155, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.26, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.27, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28, i64 0, i64 0), i8** nonnull dereferenceable(8) %6)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #19
  %22 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %10
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @_ZdlPv(i8* %28) #20
  br label %29

29:                                               ; preds = %10, %26
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #19
  br label %45

45:                                               ; preds = %29, %41, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #19
  br label %46

46:                                               ; preds = %3, %45
  %47 = getelementptr inbounds %"class.blink::DisplayItemClient", %"class.blink::DisplayItemClient"* %1, i64 0, i32 1
  %48 = load i8, i8* %47, align 8
  %49 = icmp ugt i8 %48, 2
  %50 = icmp ne i8 %2, 20
  %51 = and i1 %50, %49
  br i1 %51, label %53, label %52

52:                                               ; preds = %46
  store i8 %2, i8* %47, align 8
  br label %53

53:                                               ; preds = %46, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DisplayItemClient"* @_ZNK5blink10LayoutText29GetSelectionDisplayItemClientEv(%"class.blink::LayoutText"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink12LayoutObject10IsSelectedEv(%"class.blink::LayoutObject"* %2) #19
  br i1 %3, label %4, label %211

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %6 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %5 to i96*
  %7 = load i96, i96* %6, align 4
  %8 = and i96 %7, 268435456
  %9 = icmp eq i96 %8, 0
  br i1 %9, label %211, label %10

10:                                               ; preds = %4
  %11 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_132GetSelectionDisplayItemClientMapEvE5s_map to i8*) acquire, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %17, !prof !5

13:                                               ; preds = %10
  %14 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_132GetSelectionDisplayItemClientMapEvE5s_map) #19
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton.3329", %"class.WTF::StaticSingleton.3329"* @_ZZN5blink12_GLOBAL__N_132GetSelectionDisplayItemClientMapEvE5s_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #19
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_132GetSelectionDisplayItemClientMapEvE5s_map) #19
  br label %17

17:                                               ; preds = %10, %13, %16
  %18 = ptrtoint %"class.blink::LayoutText"* %0 to i64
  %19 = load %"struct.WTF::KeyValuePair.3044"*, %"struct.WTF::KeyValuePair.3044"** bitcast (%"class.WTF::StaticSingleton.3329"* @_ZZN5blink12_GLOBAL__N_132GetSelectionDisplayItemClientMapEvE5s_map to %"struct.WTF::KeyValuePair.3044"**), align 8
  %20 = icmp eq %"struct.WTF::KeyValuePair.3044"* %19, null
  br i1 %20, label %86, label %21

21:                                               ; preds = %17
  %22 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.3329", %"class.WTF::StaticSingleton.3329"* @_ZZN5blink12_GLOBAL__N_132GetSelectionDisplayItemClientMapEvE5s_map, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %23 = add i32 %22, -1
  %24 = zext i32 %23 to i64
  %25 = shl i64 %18, 32
  %26 = xor i64 %25, -1
  %27 = add i64 %26, %18
  %28 = lshr i64 %27, 22
  %29 = xor i64 %28, %27
  %30 = shl i64 %29, 13
  %31 = xor i64 %30, -1
  %32 = add i64 %29, %31
  %33 = lshr i64 %32, 8
  %34 = xor i64 %33, %32
  %35 = mul i64 %34, 9
  %36 = lshr i64 %35, 15
  %37 = xor i64 %36, %35
  %38 = shl i64 %37, 27
  %39 = xor i64 %38, -1
  %40 = add i64 %37, %39
  %41 = lshr i64 %40, 31
  %42 = xor i64 %41, %40
  %43 = trunc i64 %42 to i32
  %44 = and i32 %23, %43
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.3044", %"struct.WTF::KeyValuePair.3044"* %19, i64 %45
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.3044", %"struct.WTF::KeyValuePair.3044"* %46, i64 0, i32 0
  %48 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %47, align 8
  %49 = icmp eq %"class.blink::LayoutText"* %48, %0
  br i1 %49, label %78, label %50

50:                                               ; preds = %21
  %51 = xor i32 %43, -1
  %52 = lshr i32 %43, 23
  %53 = add i32 %52, %51
  %54 = shl i32 %53, 12
  %55 = xor i32 %54, %53
  %56 = lshr i32 %55, 7
  %57 = xor i32 %56, %55
  %58 = shl i32 %57, 2
  %59 = xor i32 %58, %57
  %60 = lshr i32 %59, 20
  %61 = xor i32 %60, %59
  %62 = or i32 %61, 1
  %63 = zext i32 %62 to i64
  br label %64

64:                                               ; preds = %69, %50
  %65 = phi %"class.blink::LayoutText"* [ %48, %50 ], [ %76, %69 ]
  %66 = phi i64 [ %45, %50 ], [ %73, %69 ]
  %67 = phi i64 [ 0, %50 ], [ %71, %69 ]
  %68 = icmp eq %"class.blink::LayoutText"* %65, null
  br i1 %68, label %86, label %69

69:                                               ; preds = %64
  %70 = icmp eq i64 %67, 0
  %71 = select i1 %70, i64 %63, i64 %67
  %72 = add i64 %71, %66
  %73 = and i64 %72, %24
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.3044", %"struct.WTF::KeyValuePair.3044"* %19, i64 %73
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.3044", %"struct.WTF::KeyValuePair.3044"* %74, i64 0, i32 0
  %76 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %75, align 8
  %77 = icmp eq %"class.blink::LayoutText"* %76, %0
  br i1 %77, label %78, label %64

78:                                               ; preds = %69, %21
  %79 = phi %"struct.WTF::KeyValuePair.3044"* [ %46, %21 ], [ %74, %69 ]
  %80 = icmp eq %"struct.WTF::KeyValuePair.3044"* %79, null
  br i1 %80, label %86, label %81

81:                                               ; preds = %78
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.3044", %"struct.WTF::KeyValuePair.3044"* %79, i64 0, i32 1, i32 0, i32 0, i32 0
  %83 = load %"class.blink::(anonymous namespace)::SelectionDisplayItemClient"*, %"class.blink::(anonymous namespace)::SelectionDisplayItemClient"** %82, align 8
  %84 = icmp eq %"class.blink::(anonymous namespace)::SelectionDisplayItemClient"* %83, null
  %85 = bitcast %"class.blink::(anonymous namespace)::SelectionDisplayItemClient"* %83 to %"class.blink::DisplayItemClient"*
  br i1 %84, label %86, label %211

86:                                               ; preds = %64, %17, %78, %81
  %87 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_132GetSelectionDisplayItemClientMapEvE5s_map to i8*) acquire, align 8
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %89, label %93, !prof !5

89:                                               ; preds = %86
  %90 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_132GetSelectionDisplayItemClientMapEvE5s_map) #19
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %93, label %92

92:                                               ; preds = %89
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton.3329", %"class.WTF::StaticSingleton.3329"* @_ZZN5blink12_GLOBAL__N_132GetSelectionDisplayItemClientMapEvE5s_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #19
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_132GetSelectionDisplayItemClientMapEvE5s_map) #19
  br label %93

93:                                               ; preds = %86, %89, %92
  %94 = tail call i8* @_Znwm(i64 16) #20
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %94, i8 0, i64 16, i1 false) #19
  %95 = bitcast i8* %94 to i32 (...)***
  %96 = getelementptr inbounds i8, i8* %94, i64 8
  store i8 21, i8* %96, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink12_GLOBAL__N_126SelectionDisplayItemClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %95, align 8
  %97 = ptrtoint i8* %94 to i64
  %98 = load %"struct.WTF::KeyValuePair.3044"*, %"struct.WTF::KeyValuePair.3044"** bitcast (%"class.WTF::StaticSingleton.3329"* @_ZZN5blink12_GLOBAL__N_132GetSelectionDisplayItemClientMapEvE5s_map to %"struct.WTF::KeyValuePair.3044"**), align 8
  %99 = icmp eq %"struct.WTF::KeyValuePair.3044"* %98, null
  br i1 %99, label %100, label %103

100:                                              ; preds = %93
  %101 = tail call fastcc %"struct.WTF::KeyValuePair.3044"* @_ZN3WTF9HashTableIPKN5blink10LayoutTextENS_12KeyValuePairIS4_NSt3__110unique_ptrINS1_12_GLOBAL__N_126SelectionDisplayItemClientENS6_14default_deleteIS9_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSI_ISC_EEEESJ_NS_18PartitionAllocatorEE6ExpandEPSD_(%"struct.WTF::KeyValuePair.3044"* null) #19
  %102 = load %"struct.WTF::KeyValuePair.3044"*, %"struct.WTF::KeyValuePair.3044"** bitcast (%"class.WTF::StaticSingleton.3329"* @_ZZN5blink12_GLOBAL__N_132GetSelectionDisplayItemClientMapEvE5s_map to %"struct.WTF::KeyValuePair.3044"**), align 8
  br label %103

103:                                              ; preds = %100, %93
  %104 = phi %"struct.WTF::KeyValuePair.3044"* [ %98, %93 ], [ %102, %100 ]
  %105 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.3329", %"class.WTF::StaticSingleton.3329"* @_ZZN5blink12_GLOBAL__N_132GetSelectionDisplayItemClientMapEvE5s_map, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %106 = add i32 %105, -1
  %107 = zext i32 %106 to i64
  %108 = shl i64 %18, 32
  %109 = xor i64 %108, -1
  %110 = add i64 %109, %18
  %111 = lshr i64 %110, 22
  %112 = xor i64 %111, %110
  %113 = shl i64 %112, 13
  %114 = xor i64 %113, -1
  %115 = add i64 %112, %114
  %116 = lshr i64 %115, 8
  %117 = xor i64 %116, %115
  %118 = mul i64 %117, 9
  %119 = lshr i64 %118, 15
  %120 = xor i64 %119, %118
  %121 = shl i64 %120, 27
  %122 = xor i64 %121, -1
  %123 = add i64 %120, %122
  %124 = lshr i64 %123, 31
  %125 = xor i64 %124, %123
  %126 = trunc i64 %125 to i32
  %127 = and i32 %106, %126
  %128 = zext i32 %127 to i64
  %129 = getelementptr inbounds %"struct.WTF::KeyValuePair.3044", %"struct.WTF::KeyValuePair.3044"* %104, i64 %128
  %130 = getelementptr inbounds %"struct.WTF::KeyValuePair.3044", %"struct.WTF::KeyValuePair.3044"* %129, i64 0, i32 0
  %131 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %130, align 8
  %132 = icmp eq %"class.blink::LayoutText"* %131, null
  br i1 %132, label %174, label %133

133:                                              ; preds = %103
  %134 = xor i32 %126, -1
  %135 = lshr i32 %126, 23
  %136 = add i32 %135, %134
  %137 = shl i32 %136, 12
  %138 = xor i32 %137, %136
  %139 = lshr i32 %138, 7
  %140 = xor i32 %139, %138
  %141 = shl i32 %140, 2
  %142 = xor i32 %141, %140
  %143 = lshr i32 %142, 20
  %144 = xor i32 %143, %142
  %145 = or i32 %144, 1
  %146 = zext i32 %145 to i64
  br label %147

147:                                              ; preds = %154, %133
  %148 = phi %"class.blink::LayoutText"* [ %131, %133 ], [ %163, %154 ]
  %149 = phi %"struct.WTF::KeyValuePair.3044"* [ %129, %133 ], [ %161, %154 ]
  %150 = phi %"struct.WTF::KeyValuePair.3044"* [ null, %133 ], [ %156, %154 ]
  %151 = phi i64 [ %128, %133 ], [ %160, %154 ]
  %152 = phi i64 [ 0, %133 ], [ %158, %154 ]
  %153 = icmp eq %"class.blink::LayoutText"* %148, %0
  br i1 %153, label %202, label %154

154:                                              ; preds = %147
  %155 = icmp eq %"class.blink::LayoutText"* %148, inttoptr (i64 -1 to %"class.blink::LayoutText"*)
  %156 = select i1 %155, %"struct.WTF::KeyValuePair.3044"* %149, %"struct.WTF::KeyValuePair.3044"* %150
  %157 = icmp eq i64 %152, 0
  %158 = select i1 %157, i64 %146, i64 %152
  %159 = add i64 %158, %151
  %160 = and i64 %159, %107
  %161 = getelementptr inbounds %"struct.WTF::KeyValuePair.3044", %"struct.WTF::KeyValuePair.3044"* %104, i64 %160
  %162 = getelementptr inbounds %"struct.WTF::KeyValuePair.3044", %"struct.WTF::KeyValuePair.3044"* %161, i64 0, i32 0
  %163 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %162, align 8
  %164 = icmp eq %"class.blink::LayoutText"* %163, null
  br i1 %164, label %165, label %147

165:                                              ; preds = %154
  %166 = icmp eq %"struct.WTF::KeyValuePair.3044"* %156, null
  br i1 %166, label %174, label %167

167:                                              ; preds = %165
  %168 = bitcast %"struct.WTF::KeyValuePair.3044"* %156 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %168, i8 0, i64 16, i1 false) #19
  %169 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.3329", %"class.WTF::StaticSingleton.3329"* @_ZZN5blink12_GLOBAL__N_132GetSelectionDisplayItemClientMapEvE5s_map, i64 0, i32 0, i32 0, i64 16) to i32*), align 8
  %170 = add i32 %169, 2147483647
  %171 = and i32 %170, 2147483647
  %172 = and i32 %169, -2147483648
  %173 = or i32 %171, %172
  store i32 %173, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.3329", %"class.WTF::StaticSingleton.3329"* @_ZZN5blink12_GLOBAL__N_132GetSelectionDisplayItemClientMapEvE5s_map, i64 0, i32 0, i32 0, i64 16) to i32*), align 8
  br label %174

174:                                              ; preds = %167, %165, %103
  %175 = phi %"struct.WTF::KeyValuePair.3044"* [ %156, %167 ], [ %161, %165 ], [ %129, %103 ]
  %176 = bitcast %"struct.WTF::KeyValuePair.3044"* %175 to i64*
  store i64 %18, i64* %176, align 8
  %177 = getelementptr inbounds %"struct.WTF::KeyValuePair.3044", %"struct.WTF::KeyValuePair.3044"* %175, i64 0, i32 1
  %178 = getelementptr inbounds %"class.std::__1::unique_ptr.3045", %"class.std::__1::unique_ptr.3045"* %177, i64 0, i32 0, i32 0, i32 0
  %179 = load %"class.blink::(anonymous namespace)::SelectionDisplayItemClient"*, %"class.blink::(anonymous namespace)::SelectionDisplayItemClient"** %178, align 8
  %180 = bitcast %"class.std::__1::unique_ptr.3045"* %177 to i64*
  store i64 %97, i64* %180, align 8
  %181 = icmp eq %"class.blink::(anonymous namespace)::SelectionDisplayItemClient"* %179, null
  br i1 %181, label %187, label %182

182:                                              ; preds = %174
  %183 = bitcast %"class.blink::(anonymous namespace)::SelectionDisplayItemClient"* %179 to void (%"class.blink::(anonymous namespace)::SelectionDisplayItemClient"*)***
  %184 = load void (%"class.blink::(anonymous namespace)::SelectionDisplayItemClient"*)**, void (%"class.blink::(anonymous namespace)::SelectionDisplayItemClient"*)*** %183, align 8
  %185 = getelementptr inbounds void (%"class.blink::(anonymous namespace)::SelectionDisplayItemClient"*)*, void (%"class.blink::(anonymous namespace)::SelectionDisplayItemClient"*)** %184, i64 1
  %186 = load void (%"class.blink::(anonymous namespace)::SelectionDisplayItemClient"*)*, void (%"class.blink::(anonymous namespace)::SelectionDisplayItemClient"*)** %185, align 8
  tail call void %186(%"class.blink::(anonymous namespace)::SelectionDisplayItemClient"* nonnull %179) #19
  br label %187

187:                                              ; preds = %182, %174
  %188 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.3329", %"class.WTF::StaticSingleton.3329"* @_ZZN5blink12_GLOBAL__N_132GetSelectionDisplayItemClientMapEvE5s_map, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %189 = add i32 %188, 1
  store i32 %189, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.3329", %"class.WTF::StaticSingleton.3329"* @_ZZN5blink12_GLOBAL__N_132GetSelectionDisplayItemClientMapEvE5s_map, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %190 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.3329", %"class.WTF::StaticSingleton.3329"* @_ZZN5blink12_GLOBAL__N_132GetSelectionDisplayItemClientMapEvE5s_map, i64 0, i32 0, i32 0, i64 16) to i32*), align 8
  %191 = add i32 %190, %189
  %192 = shl i32 %191, 1
  %193 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.3329", %"class.WTF::StaticSingleton.3329"* @_ZZN5blink12_GLOBAL__N_132GetSelectionDisplayItemClientMapEvE5s_map, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %194 = icmp ult i32 %192, %193
  br i1 %194, label %197, label %195

195:                                              ; preds = %187
  %196 = tail call fastcc %"struct.WTF::KeyValuePair.3044"* @_ZN3WTF9HashTableIPKN5blink10LayoutTextENS_12KeyValuePairIS4_NSt3__110unique_ptrINS1_12_GLOBAL__N_126SelectionDisplayItemClientENS6_14default_deleteIS9_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSI_ISC_EEEESJ_NS_18PartitionAllocatorEE6ExpandEPSD_(%"struct.WTF::KeyValuePair.3044"* %175) #19
  br label %197

197:                                              ; preds = %187, %195
  %198 = phi %"struct.WTF::KeyValuePair.3044"* [ %196, %195 ], [ %175, %187 ]
  %199 = getelementptr inbounds %"struct.WTF::KeyValuePair.3044", %"struct.WTF::KeyValuePair.3044"* %198, i64 0, i32 1, i32 0, i32 0, i32 0
  %200 = bitcast %"class.blink::(anonymous namespace)::SelectionDisplayItemClient"** %199 to %"class.blink::DisplayItemClient"**
  %201 = load %"class.blink::DisplayItemClient"*, %"class.blink::DisplayItemClient"** %200, align 8
  br label %211

202:                                              ; preds = %147
  %203 = getelementptr inbounds %"struct.WTF::KeyValuePair.3044", %"struct.WTF::KeyValuePair.3044"* %149, i64 0, i32 1, i32 0, i32 0, i32 0
  %204 = bitcast %"class.blink::(anonymous namespace)::SelectionDisplayItemClient"** %203 to %"class.blink::DisplayItemClient"**
  %205 = load %"class.blink::DisplayItemClient"*, %"class.blink::DisplayItemClient"** %204, align 8
  %206 = bitcast i8* %94 to %"class.blink::(anonymous namespace)::SelectionDisplayItemClient"*
  %207 = bitcast i8* %94 to void (%"class.blink::(anonymous namespace)::SelectionDisplayItemClient"*)***
  %208 = load void (%"class.blink::(anonymous namespace)::SelectionDisplayItemClient"*)**, void (%"class.blink::(anonymous namespace)::SelectionDisplayItemClient"*)*** %207, align 8
  %209 = getelementptr inbounds void (%"class.blink::(anonymous namespace)::SelectionDisplayItemClient"*)*, void (%"class.blink::(anonymous namespace)::SelectionDisplayItemClient"*)** %208, i64 1
  %210 = load void (%"class.blink::(anonymous namespace)::SelectionDisplayItemClient"*)*, void (%"class.blink::(anonymous namespace)::SelectionDisplayItemClient"*)** %209, align 8
  tail call void %210(%"class.blink::(anonymous namespace)::SelectionDisplayItemClient"* nonnull %206) #19
  br label %211

211:                                              ; preds = %4, %202, %197, %1, %81
  %212 = phi %"class.blink::DisplayItemClient"* [ %85, %81 ], [ null, %1 ], [ null, %4 ], [ %201, %197 ], [ %205, %202 ]
  ret %"class.blink::DisplayItemClient"* %212
}

declare %"class.blink::EllipsisBox"* @_ZNK5blink13RootInlineBox14GetEllipsisBoxEv(%"class.blink::RootInlineBox"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink10LayoutText9DebugRectEv(%"class.blink::LayoutText"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::LayoutText"* %0 to { i64, i64 } (%"class.blink::LayoutText"*)***
  %3 = load { i64, i64 } (%"class.blink::LayoutText"*)**, { i64, i64 } (%"class.blink::LayoutText"*)*** %2, align 8
  %4 = getelementptr inbounds { i64, i64 } (%"class.blink::LayoutText"*)*, { i64, i64 } (%"class.blink::LayoutText"*)** %3, i64 113
  %5 = load { i64, i64 } (%"class.blink::LayoutText"*)*, { i64, i64 } (%"class.blink::LayoutText"*)** %4, align 8
  %6 = tail call { i64, i64 } %5(%"class.blink::LayoutText"* %0) #19
  %7 = extractvalue { i64, i64 } %6, 0
  %8 = trunc i64 %7 to i32
  %9 = lshr i64 %7, 32
  %10 = trunc i64 %9 to i32
  %11 = extractvalue { i64, i64 } %6, 1
  %12 = icmp slt i32 %8, -2147483584
  %13 = ashr i32 %8, 6
  %14 = select i1 %12, i32 -33554432, i32 %13, !prof !3
  %15 = icmp slt i32 %10, -2147483584
  %16 = ashr i32 %10, 6
  %17 = select i1 %15, i32 -33554432, i32 %16, !prof !3
  %18 = trunc i64 %11 to i32
  %19 = icmp slt i32 %18, 0
  %20 = select i1 %19, i32 -2147483648, i32 2147483647
  %21 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %8, i32 %18) #19
  %22 = extractvalue { i32, i1 } %21, 1
  %23 = extractvalue { i32, i1 } %21, 0
  %24 = select i1 %22, i32 %20, i32 %23, !prof !3
  %25 = lshr i64 %11, 32
  %26 = trunc i64 %25 to i32
  %27 = icmp slt i32 %26, 0
  %28 = select i1 %27, i32 -2147483648, i32 2147483647
  %29 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %10, i32 %26) #19
  %30 = extractvalue { i32, i1 } %29, 1
  %31 = extractvalue { i32, i1 } %29, 0
  %32 = select i1 %30, i32 %28, i32 %31, !prof !3
  %33 = icmp sgt i32 %24, 2147483583
  br i1 %33, label %41, label %34, !prof !3

34:                                               ; preds = %1
  %35 = icmp sgt i32 %24, -1
  br i1 %35, label %36, label %39

36:                                               ; preds = %34
  %37 = add nuw nsw i32 %24, 63
  %38 = sdiv i32 %37, 64
  br label %41

39:                                               ; preds = %34
  %40 = sdiv i32 %24, 64
  br label %41

41:                                               ; preds = %39, %36, %1
  %42 = phi i32 [ %38, %36 ], [ %40, %39 ], [ 33554431, %1 ]
  %43 = icmp sgt i32 %32, 2147483583
  br i1 %43, label %51, label %44, !prof !3

44:                                               ; preds = %41
  %45 = icmp sgt i32 %32, -1
  br i1 %45, label %46, label %49

46:                                               ; preds = %44
  %47 = add nuw nsw i32 %32, 63
  %48 = sdiv i32 %47, 64
  br label %51

49:                                               ; preds = %44
  %50 = sdiv i32 %32, 64
  br label %51

51:                                               ; preds = %41, %46, %49
  %52 = phi i32 [ %48, %46 ], [ %50, %49 ], [ 33554431, %41 ]
  %53 = sub nsw i32 %42, %14
  %54 = sub nsw i32 %52, %17
  %55 = shl nsw i32 %14, 6
  %56 = zext i32 %55 to i64
  %57 = shl nsw i32 %17, 6
  %58 = icmp sgt i32 %53, 33554431
  br i1 %58, label %64, label %59

59:                                               ; preds = %51
  %60 = icmp slt i32 %53, -33554432
  %61 = shl i32 %53, 6
  %62 = select i1 %60, i32 -2147483648, i32 %61
  %63 = zext i32 %62 to i64
  br label %64

64:                                               ; preds = %59, %51
  %65 = phi i64 [ 2147483647, %51 ], [ %63, %59 ]
  %66 = icmp sgt i32 %54, 33554431
  br i1 %66, label %73, label %67

67:                                               ; preds = %64
  %68 = icmp slt i32 %54, -33554432
  br i1 %68, label %73, label %69

69:                                               ; preds = %67
  %70 = shl i32 %54, 6
  %71 = zext i32 %70 to i64
  %72 = shl nuw i64 %71, 32
  br label %73

73:                                               ; preds = %67, %64, %69
  %74 = phi i64 [ %72, %69 ], [ 9223372032559808512, %64 ], [ -9223372036854775808, %67 ]
  %75 = zext i32 %57 to i64
  %76 = shl nuw i64 %75, 32
  %77 = or i64 %76, %56
  %78 = insertvalue { i64, i64 } undef, i64 %77, 0
  %79 = or i64 %74, %65
  %80 = insertvalue { i64, i64 } %78, i64 %79, 1
  ret { i64, i64 } %80
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink10LayoutText12EnsureNodeIdEv(%"class.blink::LayoutText"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %35

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 4
  %7 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %6 to i96*
  %8 = load i96, i96* %7, align 4
  %9 = and i96 %8, 16777216
  %10 = icmp eq i96 %9, 0
  br i1 %10, label %11, label %35

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 0, i32 6, i32 0, i32 0
  %13 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  %14 = icmp eq %"class.blink::Node"* %13, null
  br i1 %14, label %35, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %13, i64 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %17, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::Document"*, %"class.blink::Document"** %18, align 8
  %20 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %19) #19
  %21 = icmp eq %"class.blink::LocalFrame"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %15
  %23 = tail call dereferenceable(1176) %"class.blink::LocalFrame"* @_ZNK5blink10LocalFrame14LocalFrameRootEv(%"class.blink::LocalFrame"* nonnull %20) #19
  %24 = tail call %"class.blink::ContentCaptureManager"* @_ZN5blink10LocalFrame24GetContentCaptureManagerEv(%"class.blink::LocalFrame"* %23) #19
  %25 = icmp eq %"class.blink::ContentCaptureManager"* %24, null
  br i1 %25, label %35, label %26

26:                                               ; preds = %22
  %27 = load i96, i96* %7, align 4
  %28 = and i96 %27, 16777216
  %29 = icmp eq i96 %28, 0
  br i1 %29, label %30, label %35

30:                                               ; preds = %26
  %31 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  %32 = icmp eq %"class.blink::Node"* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  tail call void @_ZN5blink21ContentCaptureManager20ScheduleTaskIfNeededERKNS_4NodeE(%"class.blink::ContentCaptureManager"* nonnull %24, %"class.blink::Node"* nonnull dereferenceable(64) %31) #19
  %34 = tail call i32 @_ZN5blink10DOMNodeIds9IdForNodeEPNS_4NodeE(%"class.blink::Node"* nonnull %31) #19
  store i32 %34, i32* %2, align 4
  br label %35

35:                                               ; preds = %26, %15, %5, %11, %22, %30, %33, %1
  %36 = load i32, i32* %2, align 4
  ret i32 %36
}

declare void @_ZN5blink21ContentCaptureManager20ScheduleTaskIfNeededERKNS_4NodeE(%"class.blink::ContentCaptureManager"*, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

declare i32 @_ZN5blink10DOMNodeIds9IdForNodeEPNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #1

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #1

declare dereferenceable(1176) %"class.blink::LocalFrame"* @_ZNK5blink10LocalFrame14LocalFrameRootEv(%"class.blink::LocalFrame"*) local_unnamed_addr #1

declare %"class.blink::ContentCaptureManager"* @_ZN5blink10LocalFrame24GetContentCaptureManagerEv(%"class.blink::LocalFrame"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutText14SetInlineItemsEPNS_12NGInlineItemES2_(%"class.blink::LayoutText"*, %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.blink::LayoutText"* %0 to %"class.base::span.3185"* (%"class.blink::LayoutText"*)***
  %6 = load %"class.base::span.3185"* (%"class.blink::LayoutText"*)**, %"class.base::span.3185"* (%"class.blink::LayoutText"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.base::span.3185"* (%"class.blink::LayoutText"*)*, %"class.base::span.3185"* (%"class.blink::LayoutText"*)** %6, i64 121
  %8 = load %"class.base::span.3185"* (%"class.blink::LayoutText"*)*, %"class.base::span.3185"* (%"class.blink::LayoutText"*)** %7, align 8
  %9 = tail call %"class.base::span.3185"* %8(%"class.blink::LayoutText"* %0) #19
  %10 = icmp eq %"class.base::span.3185"* %9, null
  br i1 %10, label %26, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 1
  %13 = load i16, i16* %12, align 8
  %14 = or i16 %13, 128
  store i16 %14, i16* %12, align 8
  %15 = ptrtoint %"class.blink::NGInlineItem"* %2 to i64
  %16 = ptrtoint %"class.blink::NGInlineItem"* %1 to i64
  %17 = sub i64 %15, %16
  %18 = ashr exact i64 %17, 5
  %19 = icmp ugt %"class.blink::NGInlineItem"* %1, %2
  br i1 %19, label %20, label %23

20:                                               ; preds = %11
  %21 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #19
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.29, i64 0, i64 0), i32 297, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.30, i64 0, i64 0)) #19
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #19
  br label %23

23:                                               ; preds = %11, %20
  %24 = getelementptr inbounds %"class.base::span.3185", %"class.base::span.3185"* %9, i64 0, i32 0, i32 0
  store i64 %18, i64* %24, align 8
  %25 = getelementptr inbounds %"class.base::span.3185", %"class.base::span.3185"* %9, i64 0, i32 1
  store %"class.blink::NGInlineItem"* %1, %"class.blink::NGInlineItem"** %25, align 8
  br label %26

26:                                               ; preds = %3, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10LayoutText16ClearInlineItemsEv(%"class.blink::LayoutText"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 1
  %3 = load i16, i16* %2, align 8
  %4 = and i16 %3, -385
  store i16 %4, i16* %2, align 8
  %5 = bitcast %"class.blink::LayoutText"* %0 to %"class.base::span.3185"* (%"class.blink::LayoutText"*)***
  %6 = load %"class.base::span.3185"* (%"class.blink::LayoutText"*)**, %"class.base::span.3185"* (%"class.blink::LayoutText"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.base::span.3185"* (%"class.blink::LayoutText"*)*, %"class.base::span.3185"* (%"class.blink::LayoutText"*)** %6, i64 121
  %8 = load %"class.base::span.3185"* (%"class.blink::LayoutText"*)*, %"class.base::span.3185"* (%"class.blink::LayoutText"*)** %7, align 8
  %9 = tail call %"class.base::span.3185"* %8(%"class.blink::LayoutText"* %0) #19
  %10 = icmp eq %"class.base::span.3185"* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %1
  %12 = bitcast %"class.base::span.3185"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 16, i1 false)
  br label %13

13:                                               ; preds = %1, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.base::span.3185"* @_ZNK5blink10LayoutText11InlineItemsEv(%"class.blink::LayoutText"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::LayoutText"* %0 to %"class.base::span.3185"* (%"class.blink::LayoutText"*)***
  %3 = load %"class.base::span.3185"* (%"class.blink::LayoutText"*)**, %"class.base::span.3185"* (%"class.blink::LayoutText"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.base::span.3185"* (%"class.blink::LayoutText"*)*, %"class.base::span.3185"* (%"class.blink::LayoutText"*)** %3, i64 120
  %5 = load %"class.base::span.3185"* (%"class.blink::LayoutText"*)*, %"class.base::span.3185"* (%"class.blink::LayoutText"*)** %4, align 8
  %6 = tail call %"class.base::span.3185"* %5(%"class.blink::LayoutText"* %0) #19
  ret %"class.base::span.3185"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZNK5blink17DisplayItemClient32VisualRectOutsetForRasterEffectsEv(%"class.blink::DisplayItemClient"*) unnamed_addr #0 comdat align 2 {
  ret i8 0
}

declare void @_ZN5blink12LayoutObject12ImageChangedEPNS_20ImageResourceContentENS_21ImageResourceObserver20CanDeferInvalidationE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject12ImageChangedEPvNS_21ImageResourceObserver20CanDeferInvalidationE(%"class.blink::LayoutObject"*, i8*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink12LayoutObject19ImageNotifyFinishedEPNS_20ImageResourceContentE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*) unnamed_addr #1

declare void @_ZN5blink12LayoutObject23NotifyImageFullyRemovedEPNS_20ImageResourceContentE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink12LayoutObject15WillRenderImageEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink12LayoutObject23GetImageAnimationPolicyERNS_5mojom20ImageAnimationPolicyE(%"class.blink::LayoutObject"*, i32* dereferenceable(4)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink21ImageResourceObserver23ComputeResourcePriorityEv(%"class.blink::ImageResourceObserver"*) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

declare %"class.WTF::StringImpl"* @_ZNK5blink12LayoutObject9DebugNameEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink10LayoutText7GetNameEv(%"class.blink::LayoutText"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.31, i64 0, i64 0)
}

declare i32 @_ZNK5blink12LayoutObject11OwnerNodeIdEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObjectChildList"* @_ZN5blink12LayoutObject15VirtualChildrenEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutObjectChildList"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObjectChildList"* @_ZNK5blink12LayoutObject15VirtualChildrenEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutObjectChildList"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject15CanHaveChildrenEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::LayoutObject"* %0 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %3 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %3, i64 13
  %5 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %4, align 8
  %6 = tail call %"class.blink::LayoutObjectChildList"* %5(%"class.blink::LayoutObject"* %0) #19
  %7 = icmp ne %"class.blink::LayoutObjectChildList"* %6, null
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject14IsChildAllowedEPS0_RKNS_13ComputedStyleE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare void @_ZN5blink12LayoutObject8AddChildEPS0_S1_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject28AddChildIgnoringContinuationEPS0_S1_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.blink::LayoutObject"* %0 to void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)***
  %5 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %5, i64 16
  %7 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %6, align 8
  tail call void %7(%"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"* %2) #19
  ret void
}

declare void @_ZN5blink12LayoutObject11RemoveChildEPS0_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject16IsBoxModelObjectEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject7IsImageEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject26IsInlineBlockOrInlineTableEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject13IsLayoutBlockEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject17IsLayoutBlockFlowEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject18IsLayoutFlowThreadEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject14IsLayoutInlineEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject16IsLayoutNGObjectEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableInterface"* @_ZNK5blink12LayoutObject24ToLayoutNGTableInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableSectionInterface"* @_ZNK5blink12LayoutObject31ToLayoutNGTableSectionInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableSectionInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableRowInterface"* @_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableRowInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableCellInterface"* @_ZNK5blink12LayoutObject28ToLayoutNGTableCellInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableCellInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGGridInterface"* @_ZNK5blink12LayoutObject23ToLayoutNGGridInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGGridInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject23SetNeedsTransformUpdateEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink12LayoutObject24SetNeedsBoundariesUpdateEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE(%"class.blink::LayoutObject"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject17ObjectBoundingBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject31VisualRectInLocalSVGCoordinatesEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject17StrokeBoundingBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZNK5blink12LayoutObject17LocalSVGTransformEv(%"class.blink::AffineTransform"* sret, %"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv(%"class.blink::AffineTransform"* noalias sret, %"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::LayoutObject"* %1 to void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)***
  %4 = load void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)** %4, i64 41
  %6 = load void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)** %5, align 8
  tail call void %6(%"class.blink::AffineTransform"* sret %0, %"class.blink::LayoutObject"* %1) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutBoxModelObject"* @_ZNK5blink12LayoutObject19VirtualContinuationEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutBoxModelObject"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutMultiColumnSpannerPlaceholder"* @_ZNK5blink12LayoutObject18SpannerPlaceholderEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutMultiColumnSpannerPlaceholder"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject13HoverAncestorEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 7
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  ret %"class.blink::LayoutObject"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink10LayoutText5PaintERKNS_9PaintInfoE(%"class.blink::LayoutText"*, %"struct.blink::PaintInfo"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare i16 @_ZN5blink12LayoutObject20RecalcLayoutOverflowEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZN5blink12LayoutObject20RecalcVisualOverflowEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10LayoutText12UpdateLayoutEv(%"class.blink::LayoutText"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject16SubtreeDidChangeEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject17UpdateFromElementEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink12LayoutObject19AddAnnotatedRegionsERN3WTF6VectorINS_20AnnotatedRegionValueELj0ENS1_18PartitionAllocatorEEE(%"class.blink::LayoutObject"*, %"class.WTF::Vector.1373"* dereferenceable(16)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12LayoutObject35CanHaveAdditionalCompositingReasonsEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare i64 @_ZNK5blink12LayoutObject28AdditionalCompositingReasonsEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink12LayoutObject16HitTestAllPhasesERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestFilterE(%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

declare %"class.blink::Node"* @_ZNK5blink12LayoutObject14NodeForHitTestEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZNK5blink12LayoutObject19UpdateHitTestResultERNS_13HitTestResultERKNS_14PhysicalOffsetE(%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"* dereferenceable(112), %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink10LayoutText11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE(%"class.blink::LayoutText"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink12LayoutObject26DirtyLinesFromChangedChildEPS0_NS_15MarkingBehaviorE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink12LayoutObject42AbsoluteBoundingBoxRectHandlingEmptyInlineEj(%"class.blink::LayoutObject"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink12LayoutObject22PreferredLogicalWidthsEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

declare i32 @_ZNK5blink12LayoutObject9GetCursorERKNS_14PhysicalOffsetERN2ui6CursorE(%"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), %"class.ui::Cursor"*) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink12LayoutObject20VisualRectInDocumentENS_15VisualRectFlagsE(%"class.blink::LayoutObject"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12LayoutObject38MapToVisualRectInAncestorSpaceInternalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateENS_15VisualRectFlagsE(%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink12LayoutObject12ColumnOffsetERKNS_11LayoutPointE(%"class.blink::LayoutObject"*, %"class.blink::LayoutPoint"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink10LayoutText6lengthEv(%"class.blink::LayoutText"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %7, %5 ], [ 0, %1 ]
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject13IsFlexibleBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject37IsFlexibleBoxIncludingDeprecatedAndNGEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject24IsFlexibleBoxIncludingNGEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject13IsCombineTextEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK5blink12LayoutObject18MapLocalToAncestorEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj(%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #1

declare void @_ZNK5blink12LayoutObject18MapAncestorToLocalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj(%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink12LayoutObject15AddOutlineRectsERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE(%"class.blink::LayoutObject"*, %"class.WTF::Vector.3192"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare { i64, i64 } @_ZNK5blink12LayoutObject8ViewRectEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject28VisualRectRespectsVisibilityEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject8IsOfTypeENS0_16LayoutObjectTypeE(%"class.blink::LayoutObject"*, i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink12LayoutObject10DeleteThisEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10LayoutText15StyleWillChangeENS_15StyleDifferenceERKNS_13ComputedStyleE(%"class.blink::LayoutText"*, i32, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12LayoutObject36AnonymousHasStylePropagationOverrideEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink12LayoutObject16InsertedIntoTreeEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZN5blink12LayoutObject21WillBeRemovedFromTreeEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZN5blink12LayoutObject33EnsureIsReadyForPaintInvalidationEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZN5blink12LayoutObject15ClearPaintFlagsEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10LayoutText26CanBeSelectionLeafInternalEv(%"class.blink::LayoutText"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare i64 @_ZNK5blink12LayoutObject27OffsetFromContainerInternalEPKS0_b(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1 zeroext) unnamed_addr #1

declare i32 @_ZNK5blink12LayoutObject26FlipForWritingModeInternalENS_10LayoutUnitES1_PKNS_9LayoutBoxE(%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink10LayoutText15TextStartOffsetEv(%"class.blink::LayoutText"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutText"* @_ZNK5blink10LayoutText18GetFirstLetterPartEv(%"class.blink::LayoutText"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutText"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.base::span.3185"* @_ZNK5blink10LayoutText16GetNGInlineItemsEv(%"class.blink::LayoutText"*) unnamed_addr #0 comdat align 2 {
  ret %"class.base::span.3185"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.base::span.3185"* @_ZN5blink10LayoutText16GetNGInlineItemsEv(%"class.blink::LayoutText"*) unnamed_addr #0 comdat align 2 {
  ret %"class.base::span.3185"* null
}

; Function Attrs: nounwind ssp uwtable
declare %"class.WTF::StringImpl"* @_ZThn8_NK5blink12LayoutObject9DebugNameEv(%"class.blink::LayoutObject"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare i32 @_ZThn8_NK5blink12LayoutObject11OwnerNodeIdEv(%"class.blink::LayoutObject"*) unnamed_addr #0 align 2

declare %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"*, i8*, i32, %"class.blink::SubtreeLayoutScope"*) local_unnamed_addr #5 comdat align 2 {
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca i8*, align 8
  %7 = alloca %class.anon.3297, align 8
  store i8* %1, i8** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %9 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %8 to i96*
  %10 = load i96, i96* %9, align 4
  %11 = and i96 %10, 1
  %12 = icmp eq i96 %11, 0
  br i1 %12, label %13, label %42

13:                                               ; preds = %4
  %14 = and i96 %10, 2
  %15 = icmp eq i96 %14, 0
  %16 = or i96 %10, 1
  store i96 %16, i96* %9, align 4
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %0, i32 1) #19
  %17 = load i96, i96* %9, align 4
  %18 = or i96 %17, 1180591620717411303424
  store i96 %18, i96* %9, align 4
  br i1 %15, label %19, label %46

19:                                               ; preds = %13
  %20 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), align 16
  %21 = and i8 %20, 25
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %32, label %23, !prof !4

23:                                               ; preds = %19
  %24 = bitcast %class.anon.3297* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #19
  %25 = getelementptr inbounds %class.anon.3297, %class.anon.3297* %7, i64 0, i32 0
  store %"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"** %25, align 8
  %26 = getelementptr inbounds %class.anon.3297, %class.anon.3297* %7, i64 0, i32 1
  store i8** %6, i8*** %26, align 8
  %27 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #19
  %28 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #19
  %29 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %30 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #19
  store i64 %30, i64* %29, align 8
  %31 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0), i8* null, i64 0, i32 %27, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, i32 8, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), %class.anon.3297* nonnull dereferenceable(16) %7) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #19
  br label %32

32:                                               ; preds = %19, %23
  %33 = icmp eq i32 %2, 1
  br i1 %33, label %34, label %46

34:                                               ; preds = %32
  %35 = icmp ne %"class.blink::SubtreeLayoutScope"* %3, null
  br i1 %35, label %36, label %40

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.blink::SubtreeLayoutScope", %"class.blink::SubtreeLayoutScope"* %3, i64 0, i32 0
  %38 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  %39 = icmp eq %"class.blink::LayoutObject"* %38, %0
  br i1 %39, label %46, label %40

40:                                               ; preds = %36, %34
  %41 = xor i1 %35, true
  call void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %0, i1 zeroext %41, %"class.blink::SubtreeLayoutScope"* %3) #19
  br label %46

42:                                               ; preds = %4
  %43 = or i96 %10, 1
  store i96 %43, i96* %9, align 4
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %0, i32 1) #19
  %44 = load i96, i96* %9, align 4
  %45 = or i96 %44, 1180591620717411303424
  store i96 %45, i96* %9, align 4
  br label %46

46:                                               ; preds = %36, %13, %42, %32, %40
  ret void
}

declare void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"*, i1 zeroext, %"class.blink::SubtreeLayoutScope"*) local_unnamed_addr #1

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_(i8 signext, i8*, i8*, i8*, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), i32, i64, i8*, %class.anon.3297* dereferenceable(16)) local_unnamed_addr #5 comdat {
  %12 = alloca %"class.perfetto::TracedValue", align 8
  %13 = alloca %"class.perfetto::TracedValue", align 8
  %14 = alloca %"class.base::trace_event::TraceArguments", align 8
  %15 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 40, i1 false)
  store i8 1, i8* %15, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 0
  store i8 9, i8* %16, align 1
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 2, i64 0
  store i8* %9, i8** %17, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 0
  %19 = bitcast %"class.perfetto::TracedValue"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #19
  %20 = tail call i8* @_Znwm(i64 192) #20
  %21 = bitcast i8* %20 to %"class.protozero::ScatteredHeapBuffer"*
  tail call void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"* nonnull %21, i64 4096, i64 4096) #19
  %22 = getelementptr inbounds i8, i8* %20, i64 80
  %23 = bitcast i8* %22 to %"class.protozero::ScatteredStreamWriter"*
  %24 = bitcast i8* %20 to %"class.protozero::ScatteredStreamWriter::Delegate"*
  tail call void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"* %23, %"class.protozero::ScatteredStreamWriter::Delegate"* nonnull %24) #19
  %25 = getelementptr inbounds i8, i8* %20, i64 120
  %26 = getelementptr inbounds i8, i8* %20, i64 168
  %27 = bitcast i8* %26 to %"class.protozero::MessageArena"*
  tail call void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"* %27) #19
  %28 = bitcast i8* %25 to %"class.protozero::Message"*
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %28, %"class.protozero::ScatteredStreamWriter"* null, %"class.protozero::MessageArena"* %27) #19
  %29 = getelementptr inbounds i8, i8* %20, i64 24
  %30 = bitcast i8* %29 to i8**
  store i8* %22, i8** %30, align 8
  %31 = bitcast i8* %26 to %"class.std::__1::list.3310"*
  tail call void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list.3310"* %31, i64 1) #19
  %32 = bitcast i8* %26 to %"struct.std::__1::__list_node"**
  %33 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %33, i64 0, i32 1, i32 1
  store i32 0, i32* %34, align 8
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %28, %"class.protozero::ScatteredStreamWriter"* %23, %"class.protozero::MessageArena"* %27) #19
  %35 = bitcast %"union.base::trace_event::TraceValue"* %18 to i8**
  store i8* %20, i8** %35, align 8
  %36 = bitcast i8* %25 to %"class.perfetto::protos::pbzero::DebugAnnotation"*
  call void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* nonnull sret %13, %"class.perfetto::protos::pbzero::DebugAnnotation"* %36) #19
  %37 = bitcast %"class.perfetto::TracedValue"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #19
  %38 = getelementptr inbounds %class.anon.3297, %class.anon.3297* %10, i64 0, i32 0
  %39 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %38, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* nonnull align 8 %19, i64 16, i1 false) #19
  %40 = getelementptr inbounds %class.anon.3297, %class.anon.3297* %10, i64 0, i32 1
  %41 = load i8**, i8*** %40, align 8
  %42 = load i8*, i8** %41, align 8
  call void @_ZN5blink44inspector_layout_invalidation_tracking_event4DataEN8perfetto11TracedValueEPKNS_12LayoutObjectEPKc(%"class.perfetto::TracedValue"* nonnull %12, %"class.blink::LayoutObject"* %39, i8* %42) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #19
  %43 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %8, i32 %5, %"class.base::TimeTicks"* dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* nonnull %14, i32 %7) #19
  %44 = load i8, i8* %15, align 8
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %80, label %46

46:                                               ; preds = %11, %75
  %47 = phi i64 [ %76, %75 ], [ 0, %11 ]
  %48 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, 8
  br i1 %50, label %51, label %62

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %47
  %53 = bitcast %"union.base::trace_event::TraceValue"* %52 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %54 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %53, align 8
  %55 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %54, null
  br i1 %55, label %75, label %56

56:                                               ; preds = %51
  %57 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %54 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %58 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %58, i64 1
  %60 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %59, align 8
  call void %60(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %54) #19
  %61 = load i8, i8* %48, align 1
  br label %62

62:                                               ; preds = %56, %46
  %63 = phi i8 [ %49, %46 ], [ %61, %56 ]
  %64 = icmp eq i8 %63, 9
  br i1 %64, label %65, label %75

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %47
  %67 = bitcast %"union.base::trace_event::TraceValue"* %66 to %"class.protozero::HeapBuffered"**
  %68 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %67, align 8
  %69 = icmp eq %"class.protozero::HeapBuffered"* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %71) #19
  %72 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %72) #19
  %73 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %73) #19
  %74 = bitcast %"class.protozero::HeapBuffered"* %68 to i8*
  call void @_ZdlPv(i8* %74) #20
  br label %75

75:                                               ; preds = %70, %65, %62, %51
  %76 = add nuw nsw i64 %47, 1
  %77 = load i8, i8* %15, align 8
  %78 = zext i8 %77 to i64
  %79 = icmp ult i64 %76, %78
  br i1 %79, label %46, label %80

80:                                               ; preds = %75, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #19
  ret i64 %43
}

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

declare void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::protos::pbzero::DebugAnnotation"*) local_unnamed_addr #1

declare void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"*, i64, i64) unnamed_addr #1

declare void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter::Delegate"*) unnamed_addr #1

declare void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"*) unnamed_addr #1

declare void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"*, %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list.3310"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::list.3310", %"class.std::__1::list.3310"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp ugt i64 %4, %1
  br i1 %5, label %6, label %179

6:                                                ; preds = %2
  %7 = lshr i64 %4, 1
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %97, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.std::__1::list.3310", %"class.std::__1::list.3310"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.std::__1::__list_node_base.3312"*, %"struct.std::__1::__list_node_base.3312"** %10, align 8
  %12 = icmp sgt i64 %1, -1
  br i1 %12, label %34, label %13

13:                                               ; preds = %9
  %14 = bitcast %"struct.std::__1::__list_node_base.3312"* %11 to i64*
  %15 = sub i64 0, %1
  %16 = and i64 %15, 7
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %29, label %18

18:                                               ; preds = %13, %18
  %19 = phi i64* [ %24, %18 ], [ %14, %13 ]
  %20 = phi i64 [ %23, %18 ], [ %1, %13 ]
  %21 = phi i64 [ %25, %18 ], [ %16, %13 ]
  %22 = load i64, i64* %19, align 8
  %23 = add nsw i64 %20, 1
  %24 = inttoptr i64 %22 to i64*
  %25 = add i64 %21, -1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %18, !llvm.loop !35

27:                                               ; preds = %18
  %28 = inttoptr i64 %22 to i64*
  br label %29

29:                                               ; preds = %13, %27
  %30 = phi i64 [ undef, %13 ], [ %22, %27 ]
  %31 = phi i64* [ %14, %13 ], [ %28, %27 ]
  %32 = phi i64 [ %1, %13 ], [ %23, %27 ]
  %33 = icmp ugt i64 %1, -8
  br i1 %33, label %152, label %82

34:                                               ; preds = %9
  %35 = ptrtoint %"struct.std::__1::__list_node_base.3312"* %11 to i64
  %36 = icmp eq i64 %1, 0
  br i1 %36, label %152, label %37

37:                                               ; preds = %34
  %38 = add nsw i64 %1, -1
  %39 = and i64 %1, 7
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %54, label %41

41:                                               ; preds = %37, %41
  %42 = phi %"struct.std::__1::__list_node_base.3312"* [ %49, %41 ], [ %11, %37 ]
  %43 = phi i64 [ %48, %41 ], [ %1, %37 ]
  %44 = phi i64 [ %50, %41 ], [ %39, %37 ]
  %45 = getelementptr inbounds %"struct.std::__1::__list_node_base.3312", %"struct.std::__1::__list_node_base.3312"* %42, i64 0, i32 1
  %46 = bitcast %"struct.std::__1::__list_node_base.3312"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = add nsw i64 %43, -1
  %49 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base.3312"*
  %50 = add i64 %44, -1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %41, !llvm.loop !36

52:                                               ; preds = %41
  %53 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base.3312"*
  br label %54

54:                                               ; preds = %37, %52
  %55 = phi %"struct.std::__1::__list_node_base.3312"* [ %11, %37 ], [ %53, %52 ]
  %56 = phi i64 [ %1, %37 ], [ %48, %52 ]
  %57 = phi i64 [ undef, %37 ], [ %47, %52 ]
  %58 = icmp ult i64 %38, 7
  br i1 %58, label %152, label %59

59:                                               ; preds = %54, %59
  %60 = phi %"struct.std::__1::__list_node_base.3312"* [ %81, %59 ], [ %55, %54 ]
  %61 = phi i64 [ %79, %59 ], [ %56, %54 ]
  %62 = getelementptr inbounds %"struct.std::__1::__list_node_base.3312", %"struct.std::__1::__list_node_base.3312"* %60, i64 0, i32 1
  %63 = load %"struct.std::__1::__list_node_base.3312"*, %"struct.std::__1::__list_node_base.3312"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__list_node_base.3312", %"struct.std::__1::__list_node_base.3312"* %63, i64 0, i32 1
  %65 = load %"struct.std::__1::__list_node_base.3312"*, %"struct.std::__1::__list_node_base.3312"** %64, align 8
  %66 = getelementptr inbounds %"struct.std::__1::__list_node_base.3312", %"struct.std::__1::__list_node_base.3312"* %65, i64 0, i32 1
  %67 = load %"struct.std::__1::__list_node_base.3312"*, %"struct.std::__1::__list_node_base.3312"** %66, align 8
  %68 = getelementptr inbounds %"struct.std::__1::__list_node_base.3312", %"struct.std::__1::__list_node_base.3312"* %67, i64 0, i32 1
  %69 = load %"struct.std::__1::__list_node_base.3312"*, %"struct.std::__1::__list_node_base.3312"** %68, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__list_node_base.3312", %"struct.std::__1::__list_node_base.3312"* %69, i64 0, i32 1
  %71 = load %"struct.std::__1::__list_node_base.3312"*, %"struct.std::__1::__list_node_base.3312"** %70, align 8
  %72 = getelementptr inbounds %"struct.std::__1::__list_node_base.3312", %"struct.std::__1::__list_node_base.3312"* %71, i64 0, i32 1
  %73 = load %"struct.std::__1::__list_node_base.3312"*, %"struct.std::__1::__list_node_base.3312"** %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__list_node_base.3312", %"struct.std::__1::__list_node_base.3312"* %73, i64 0, i32 1
  %75 = load %"struct.std::__1::__list_node_base.3312"*, %"struct.std::__1::__list_node_base.3312"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::__list_node_base.3312", %"struct.std::__1::__list_node_base.3312"* %75, i64 0, i32 1
  %77 = bitcast %"struct.std::__1::__list_node_base.3312"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = add nsw i64 %61, -8
  %80 = icmp sgt i64 %79, 0
  %81 = inttoptr i64 %78 to %"struct.std::__1::__list_node_base.3312"*
  br i1 %80, label %59, label %152

82:                                               ; preds = %29, %82
  %83 = phi i64* [ %96, %82 ], [ %31, %29 ]
  %84 = phi i64 [ %94, %82 ], [ %32, %29 ]
  %85 = bitcast i64* %83 to i64********
  %86 = load i64*******, i64******** %85, align 8
  %87 = load i64******, i64******* %86, align 8
  %88 = load i64*****, i64****** %87, align 8
  %89 = load i64****, i64***** %88, align 8
  %90 = load i64***, i64**** %89, align 8
  %91 = load i64**, i64*** %90, align 8
  %92 = load i64*, i64** %91, align 8
  %93 = load i64, i64* %92, align 8
  %94 = add nsw i64 %84, 8
  %95 = icmp eq i64 %94, 0
  %96 = inttoptr i64 %93 to i64*
  br i1 %95, label %152, label %82

97:                                               ; preds = %6
  %98 = sub i64 %4, %1
  %99 = sub nsw i64 0, %98
  %100 = icmp slt i64 %98, 1
  br i1 %100, label %123, label %101

101:                                              ; preds = %97
  %102 = bitcast %"class.std::__1::list.3310"* %0 to i64*
  %103 = xor i64 %1, -1
  %104 = add i64 %4, %103
  %105 = and i64 %98, 7
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %118, label %107

107:                                              ; preds = %101, %107
  %108 = phi i64* [ %113, %107 ], [ %102, %101 ]
  %109 = phi i64 [ %112, %107 ], [ %99, %101 ]
  %110 = phi i64 [ %114, %107 ], [ %105, %101 ]
  %111 = load i64, i64* %108, align 8
  %112 = add nsw i64 %109, 1
  %113 = inttoptr i64 %111 to i64*
  %114 = add i64 %110, -1
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %107, !llvm.loop !37

116:                                              ; preds = %107
  %117 = inttoptr i64 %111 to i64*
  br label %118

118:                                              ; preds = %101, %116
  %119 = phi i64 [ undef, %101 ], [ %111, %116 ]
  %120 = phi i64* [ %102, %101 ], [ %117, %116 ]
  %121 = phi i64 [ %99, %101 ], [ %112, %116 ]
  %122 = icmp ult i64 %104, 7
  br i1 %122, label %152, label %137

123:                                              ; preds = %97
  %124 = ptrtoint %"class.std::__1::list.3310"* %0 to i64
  %125 = icmp eq i64 %98, 0
  br i1 %125, label %152, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.std::__1::list.3310", %"class.std::__1::list.3310"* %0, i64 0, i32 0, i32 0
  br label %128

128:                                              ; preds = %128, %126
  %129 = phi %"struct.std::__1::__list_node_base.3312"* [ %136, %128 ], [ %127, %126 ]
  %130 = phi i64 [ %134, %128 ], [ %99, %126 ]
  %131 = getelementptr inbounds %"struct.std::__1::__list_node_base.3312", %"struct.std::__1::__list_node_base.3312"* %129, i64 0, i32 1
  %132 = bitcast %"struct.std::__1::__list_node_base.3312"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = add nsw i64 %130, -1
  %135 = icmp sgt i64 %134, 0
  %136 = inttoptr i64 %133 to %"struct.std::__1::__list_node_base.3312"*
  br i1 %135, label %128, label %152

137:                                              ; preds = %118, %137
  %138 = phi i64* [ %151, %137 ], [ %120, %118 ]
  %139 = phi i64 [ %149, %137 ], [ %121, %118 ]
  %140 = bitcast i64* %138 to i64********
  %141 = load i64*******, i64******** %140, align 8
  %142 = load i64******, i64******* %141, align 8
  %143 = load i64*****, i64****** %142, align 8
  %144 = load i64****, i64***** %143, align 8
  %145 = load i64***, i64**** %144, align 8
  %146 = load i64**, i64*** %145, align 8
  %147 = load i64*, i64** %146, align 8
  %148 = load i64, i64* %147, align 8
  %149 = add nsw i64 %139, 8
  %150 = icmp eq i64 %149, 0
  %151 = inttoptr i64 %148 to i64*
  br i1 %150, label %152, label %137

152:                                              ; preds = %29, %82, %54, %59, %118, %137, %128, %34, %123
  %153 = phi i64 [ %35, %34 ], [ %124, %123 ], [ %133, %128 ], [ %119, %118 ], [ %148, %137 ], [ %57, %54 ], [ %78, %59 ], [ %30, %29 ], [ %93, %82 ]
  %154 = inttoptr i64 %153 to %"struct.std::__1::__list_node_base.3312"*
  %155 = getelementptr inbounds %"class.std::__1::list.3310", %"class.std::__1::list.3310"* %0, i64 0, i32 0, i32 0
  %156 = icmp eq %"struct.std::__1::__list_node_base.3312"* %155, %154
  br i1 %156, label %218, label %157

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"class.std::__1::list.3310", %"class.std::__1::list.3310"* %0, i64 0, i32 0, i32 0, i32 0
  %159 = load %"struct.std::__1::__list_node_base.3312"*, %"struct.std::__1::__list_node_base.3312"** %158, align 8
  %160 = getelementptr inbounds %"struct.std::__1::__list_node_base.3312", %"struct.std::__1::__list_node_base.3312"* %159, i64 0, i32 1
  %161 = bitcast %"struct.std::__1::__list_node_base.3312"** %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__list_node_base.3312", %"struct.std::__1::__list_node_base.3312"* %154, i64 0, i32 0
  %164 = load %"struct.std::__1::__list_node_base.3312"*, %"struct.std::__1::__list_node_base.3312"** %163, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__list_node_base.3312", %"struct.std::__1::__list_node_base.3312"* %164, i64 0, i32 1
  %166 = bitcast %"struct.std::__1::__list_node_base.3312"** %165 to i64*
  store i64 %162, i64* %166, align 8
  %167 = inttoptr i64 %153 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = bitcast %"struct.std::__1::__list_node_base.3312"** %160 to i64**
  %170 = load i64*, i64** %169, align 8
  store i64 %168, i64* %170, align 8
  br label %171

171:                                              ; preds = %171, %157
  %172 = phi %"struct.std::__1::__list_node_base.3312"* [ %154, %157 ], [ %174, %171 ]
  %173 = getelementptr inbounds %"struct.std::__1::__list_node_base.3312", %"struct.std::__1::__list_node_base.3312"* %172, i64 0, i32 1
  %174 = load %"struct.std::__1::__list_node_base.3312"*, %"struct.std::__1::__list_node_base.3312"** %173, align 8
  %175 = load i64, i64* %3, align 8
  %176 = add i64 %175, -1
  store i64 %176, i64* %3, align 8
  %177 = bitcast %"struct.std::__1::__list_node_base.3312"* %172 to i8*
  tail call void @_ZdlPv(i8* %177) #20
  %178 = icmp eq %"struct.std::__1::__list_node_base.3312"* %174, %155
  br i1 %178, label %218, label %171

179:                                              ; preds = %2
  %180 = icmp ult i64 %4, %1
  br i1 %180, label %181, label %218

181:                                              ; preds = %179
  %182 = tail call i8* @_Znwm(i64 792) #20, !noalias !38
  %183 = bitcast i8* %182 to %"struct.std::__1::__list_node_base.3312"**
  store %"struct.std::__1::__list_node_base.3312"* null, %"struct.std::__1::__list_node_base.3312"** %183, align 8, !noalias !38
  %184 = getelementptr inbounds i8, i8* %182, i64 784
  %185 = bitcast i8* %184 to i32*
  store i32 0, i32* %185, align 8
  %186 = ptrtoint i8* %182 to i64
  %187 = xor i64 %4, -1
  %188 = add i64 %187, %1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %206, label %190

190:                                              ; preds = %181, %190
  %191 = phi i64 [ %200, %190 ], [ %188, %181 ]
  %192 = phi i64 [ %202, %190 ], [ %186, %181 ]
  %193 = tail call i8* @_Znwm(i64 792) #20
  %194 = getelementptr inbounds i8, i8* %193, i64 784
  %195 = bitcast i8* %194 to i32*
  store i32 0, i32* %195, align 8
  %196 = inttoptr i64 %192 to %"struct.std::__1::__list_node_base.3312"*
  %197 = getelementptr inbounds %"struct.std::__1::__list_node_base.3312", %"struct.std::__1::__list_node_base.3312"* %196, i64 0, i32 1
  %198 = bitcast %"struct.std::__1::__list_node_base.3312"** %197 to i8**
  store i8* %193, i8** %198, align 8
  %199 = bitcast i8* %193 to i64*
  store i64 %192, i64* %199, align 8
  %200 = add i64 %191, -1
  %201 = bitcast %"struct.std::__1::__list_node_base.3312"** %197 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = icmp eq i64 %200, 0
  br i1 %203, label %204, label %190

204:                                              ; preds = %190
  %205 = sub i64 %1, %4
  br label %206

206:                                              ; preds = %204, %181
  %207 = phi i64 [ %186, %181 ], [ %202, %204 ]
  %208 = phi i64 [ 1, %181 ], [ %205, %204 ]
  %209 = inttoptr i64 %207 to %"struct.std::__1::__list_node_base.3312"*
  %210 = getelementptr inbounds %"class.std::__1::list.3310", %"class.std::__1::list.3310"* %0, i64 0, i32 0, i32 0
  %211 = getelementptr inbounds %"struct.std::__1::__list_node_base.3312", %"struct.std::__1::__list_node_base.3312"* %209, i64 0, i32 1
  store %"struct.std::__1::__list_node_base.3312"* %210, %"struct.std::__1::__list_node_base.3312"** %211, align 8
  %212 = getelementptr inbounds %"class.std::__1::list.3310", %"class.std::__1::list.3310"* %0, i64 0, i32 0, i32 0, i32 0
  %213 = load %"struct.std::__1::__list_node_base.3312"*, %"struct.std::__1::__list_node_base.3312"** %212, align 8
  store %"struct.std::__1::__list_node_base.3312"* %213, %"struct.std::__1::__list_node_base.3312"** %183, align 8
  %214 = getelementptr inbounds %"struct.std::__1::__list_node_base.3312", %"struct.std::__1::__list_node_base.3312"* %213, i64 0, i32 1
  %215 = bitcast %"struct.std::__1::__list_node_base.3312"** %214 to i8**
  store i8* %182, i8** %215, align 8
  store %"struct.std::__1::__list_node_base.3312"* %209, %"struct.std::__1::__list_node_base.3312"** %212, align 8
  %216 = load i64, i64* %3, align 8
  %217 = add i64 %216, %208
  store i64 %217, i64* %3, align 8
  br label %218

218:                                              ; preds = %171, %152, %179, %206
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

declare void @_ZN5blink44inspector_layout_invalidation_tracking_event4DataEN8perfetto11TracedValueEPKNS_12LayoutObjectEPKc(%"class.perfetto::TracedValue"*, %"class.blink::LayoutObject"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #3

declare dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #12

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #12

declare %"class.blink::FontCache"* @_ZN5blink9FontCache12GetFontCacheENS_14CreateIfNeededE(i32) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPKN5blink19NGOffsetMappingUnitEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #5 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #19
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base25CheckedContiguousIteratorIKN5blink19NGOffsetMappingUnitEEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator.3072"*, %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.blink::NGOffsetMappingUnit"*, align 8
  %8 = alloca %"class.blink::NGOffsetMappingUnit"*, align 8
  %9 = alloca %"class.blink::NGOffsetMappingUnit"*, align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  store %"class.blink::NGOffsetMappingUnit"* %1, %"class.blink::NGOffsetMappingUnit"** %7, align 8
  store %"class.blink::NGOffsetMappingUnit"* %2, %"class.blink::NGOffsetMappingUnit"** %8, align 8
  store %"class.blink::NGOffsetMappingUnit"* %3, %"class.blink::NGOffsetMappingUnit"** %9, align 8
  %14 = ptrtoint %"class.blink::NGOffsetMappingUnit"* %1 to i64
  %15 = bitcast %"class.base::CheckedContiguousIterator.3072"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator.3072", %"class.base::CheckedContiguousIterator.3072"* %0, i64 0, i32 1
  %17 = ptrtoint %"class.blink::NGOffsetMappingUnit"* %2 to i64
  %18 = bitcast %"class.blink::NGOffsetMappingUnit"** %16 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator.3072", %"class.base::CheckedContiguousIterator.3072"* %0, i64 0, i32 2
  %20 = ptrtoint %"class.blink::NGOffsetMappingUnit"* %3 to i64
  %21 = bitcast %"class.blink::NGOffsetMappingUnit"** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #19
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp ugt %"class.blink::NGOffsetMappingUnit"* %1, %2
  br i1 %25, label %27, label %26

26:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %23, align 8
  br label %38

27:                                               ; preds = %4
  %28 = bitcast %"class.blink::NGOffsetMappingUnit"** %7 to i8*
  %29 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink19NGOffsetMappingUnitEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #19
  %30 = bitcast %"class.blink::NGOffsetMappingUnit"** %8 to i8*
  %31 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %30, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink19NGOffsetMappingUnitEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0), i8* %29, i8* %31) #19
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %33, i8** %23, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.8, i64 0, i64 0), i32 45, %"class.logging::CheckOpResult"* nonnull %10) #19
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #19
  br label %38

38:                                               ; preds = %26, %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #19
  %39 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #19
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %8, align 8
  %43 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %9, align 8
  %44 = icmp ugt %"class.blink::NGOffsetMappingUnit"* %42, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %57

46:                                               ; preds = %38
  %47 = bitcast %"class.blink::NGOffsetMappingUnit"** %8 to i8*
  %48 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %47, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink19NGOffsetMappingUnitEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #19
  %49 = bitcast %"class.blink::NGOffsetMappingUnit"** %9 to i8*
  %50 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %49, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink19NGOffsetMappingUnitEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0), i8* %48, i8* %50) #19
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %52, i8** %40, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.8, i64 0, i64 0), i32 46, %"class.logging::CheckOpResult"* nonnull %12) #19
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #19
  br label %57

57:                                               ; preds = %45, %46, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base25CheckedContiguousIteratorIKN5blink19NGOffsetMappingUnitEE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator.3072"*, %"class.base::CheckedContiguousIterator.3072"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #19
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = getelementptr inbounds %"class.base::CheckedContiguousIterator.3072", %"class.base::CheckedContiguousIterator.3072"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.base::CheckedContiguousIterator.3072", %"class.base::CheckedContiguousIterator.3072"* %1, i64 0, i32 0
  %13 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %11, align 8
  %15 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %12, align 8
  %16 = icmp eq %"class.blink::NGOffsetMappingUnit"* %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* null, i8** %10, align 8
  br label %29

18:                                               ; preds = %2
  %19 = bitcast %"class.base::CheckedContiguousIterator.3072"* %0 to i8*
  %20 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %19, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink19NGOffsetMappingUnitEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #19
  %21 = bitcast %"class.base::CheckedContiguousIterator.3072"* %1 to i8*
  %22 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %21, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink19NGOffsetMappingUnitEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0), i8* %20, i8* %22) #19
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* %24, i8** %10, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %18
  %27 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.8, i64 0, i64 0), i32 206, %"class.logging::CheckOpResult"* nonnull %5) #19
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #19
  br label %29

29:                                               ; preds = %17, %18, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #19
  %30 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #19
  %31 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %31, align 8
  %32 = getelementptr inbounds %"class.base::CheckedContiguousIterator.3072", %"class.base::CheckedContiguousIterator.3072"* %0, i64 0, i32 2
  %33 = getelementptr inbounds %"class.base::CheckedContiguousIterator.3072", %"class.base::CheckedContiguousIterator.3072"* %1, i64 0, i32 2
  %34 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %32, align 8
  %36 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %33, align 8
  %37 = icmp eq %"class.blink::NGOffsetMappingUnit"* %35, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %31, align 8
  br label %50

39:                                               ; preds = %29
  %40 = bitcast %"class.blink::NGOffsetMappingUnit"** %32 to i8*
  %41 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %40, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink19NGOffsetMappingUnitEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #19
  %42 = bitcast %"class.blink::NGOffsetMappingUnit"** %33 to i8*
  %43 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %42, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink19NGOffsetMappingUnitEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i64 0, i64 0), i8* %41, i8* %43) #19
  %44 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %45, i8** %31, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %39
  %48 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.8, i64 0, i64 0), i32 207, %"class.logging::CheckOpResult"* nonnull %7) #19
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #19
  br label %50

50:                                               ; preds = %38, %39, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #19
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #13

declare i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"*) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare void @_ZN5blink9FontCache5PurgeENS_13PurgeSeverityE(%"class.blink::FontCache"*, i32) local_unnamed_addr #1

declare dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"*) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.3109"*, i8* dereferenceable(1)) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3109", %"class.WTF::Vector.3109"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3109", %"class.WTF::Vector.3109"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.3109"* %0, i32 %5) #19
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.3109"* %0, i32 %5) #19
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.3109"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.3109", %"class.WTF::Vector.3109"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #19
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #19
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13, i64 0, i64 0), i8* %15, i8* %16) #19
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.14, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #19
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #19
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #19
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !4

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.3109", %"class.WTF::Vector.3109"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %37) #19
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #19
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.3109"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector.3109", %"class.WTF::Vector.3109"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector.3109"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 16, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3109"* %0, i32 %27) #19
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3109"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.3109", %"class.WTF::Vector.3109"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.3109", %"class.WTF::Vector.3109"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector.3109"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.3109", %"class.WTF::Vector.3109"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector.3109", %"class.WTF::Vector.3109"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector.3109", %"class.WTF::Vector.3109"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector.3109"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.3109", %"class.WTF::Vector.3109"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !3

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #19
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.3110"* %18, i8* nonnull %6) #19
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #19
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #19
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector.3109", %"class.WTF::Vector.3109"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !4

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector.3109", %"class.WTF::Vector.3109"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #19
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector.3109", %"class.WTF::Vector.3109"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !4

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector.3109", %"class.WTF::Vector.3109"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.3110"* %46, i8* %42) #19
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector.3109"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector.3109", %"class.WTF::Vector.3109"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #19
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #19
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16, i64 0, i64 0), i8* %11, i8* %12) #19
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.17, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #19
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #19
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #19
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #19
  ret i64 %20
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.3110"*, i8*) local_unnamed_addr #14 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #19
  ret void
}

declare void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.3113"*, i16* dereferenceable(2)) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3113", %"class.WTF::Vector.3113"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3113", %"class.WTF::Vector.3113"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.3113"* %0, i32 %5) #19
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.3113"* %0, i32 %5) #19
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.3113"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.3113", %"class.WTF::Vector.3113"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #19
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #19
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13, i64 0, i64 0), i8* %15, i8* %16) #19
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.14, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #19
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #19
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #19
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !4

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.3113", %"class.WTF::Vector.3113"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #19
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #19
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.3113"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.3113", %"class.WTF::Vector.3113"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.3113"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3113"* %0, i32 %27) #19
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3113"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.3113", %"class.WTF::Vector.3113"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.3113", %"class.WTF::Vector.3113"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.3113"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.3113", %"class.WTF::Vector.3113"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.3113", %"class.WTF::Vector.3113"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.3113", %"class.WTF::Vector.3113"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.3113"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.3113", %"class.WTF::Vector.3113"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !3

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #19
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.3114"* %19, i16* nonnull %6) #19
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #19
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #19
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.3113", %"class.WTF::Vector.3113"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !4

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.3113", %"class.WTF::Vector.3113"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #19
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.3113", %"class.WTF::Vector.3113"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !4

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.3113", %"class.WTF::Vector.3113"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.3114"* %53, i16* %48) #19
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.3113"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.3113", %"class.WTF::Vector.3113"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #19
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #19
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16, i64 0, i64 0), i8* %11, i8* %12) #19
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.17, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #19
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #19
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #19
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #19
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.3114"*, i16*) local_unnamed_addr #14 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #19
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

declare { i64, i64 } @_ZNK5blink14NGInlineCursor22CurrentRectInBlockFlowEv(%"class.blink::NGInlineCursor"*) local_unnamed_addr #1

declare void @_ZNK5blink12LayoutObject19LocalToAncestorQuadERKNS_9FloatQuadEPKNS_20LayoutBoxModelObjectEj(%"class.blink::FloatQuad"* sret, %"class.blink::LayoutObject"*, %"class.blink::FloatQuad"* dereferenceable(32), %"class.blink::LayoutBoxModelObject"*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink9FloatQuadELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.3126"*, %"class.blink::FloatQuad"*) local_unnamed_addr #14 comdat align 2 {
  %3 = bitcast %"class.blink::FloatQuad"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #19
  ret void
}

declare %"class.blink::InlineBox"* @_ZNK5blink9InlineBox30PrevLeafChildIgnoringLineBreakEv(%"class.blink::InlineBox"*) local_unnamed_addr #1

declare %"class.blink::InlineBox"* @_ZNK5blink9InlineBox30NextLeafChildIgnoringLineBreakEv(%"class.blink::InlineBox"*) local_unnamed_addr #1

declare { %"class.blink::InlineBox"*, i32 } @_ZN5blink14BidiAdjustment16AdjustForHitTestERKNS_17InlineBoxPositionE(%"struct.blink::InlineBoxPosition"* dereferenceable(16)) local_unnamed_addr #1

declare %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"*) local_unnamed_addr #1

declare %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"*, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #15

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #15

declare void @_ZN5blink9FloatRect5UniteERKS0_(%"class.blink::FloatRect"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #15

declare %"class.blink::BidiContext"* @_ZN5blink11BidiContext6CreateEhN3WTF7unicode13CharDirectionEbNS_19BidiEmbeddingSourceEPS0_(i8 zeroext, i32, i1 zeroext, i32, %"class.blink::BidiContext"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %0, i64 0, i32 2, i32 0
  %3 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %2, align 8
  %4 = icmp eq %"class.blink::BidiContext"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw sub i32* %6, i32 1 acq_rel
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %11

9:                                                ; preds = %5
  tail call void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"* nonnull %3) #19
  %10 = bitcast %"class.blink::BidiContext"* %3 to i8*
  tail call void @free(i8* %10) #19
  ret void

11:                                               ; preds = %5, %1
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionEiNS_13LineBreakTypeE(%"class.blink::LazyLineBreakIterator"*, i32, i32) local_unnamed_addr #1

declare void @_ZN5blink16ConstructTextRunERKNS_4FontERKN3WTF6StringERKNS_13ComputedStyleENS_13TextDirectionEj(%"class.blink::TextRun"* sret, %"class.blink::Font"* dereferenceable(88), %"class.WTF::String"* dereferenceable(8), %"class.blink::ComputedStyle"* dereferenceable(104), i8 zeroext, i32) local_unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink13ComputedStyle12HyphenStringEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #1

declare i32 @_ZNK5blink15FontDescription29MinimumPrefixWidthToHyphenateEv(%"class.blink::FontDescription"*) local_unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK5blink4Font17GetCharacterRangeERKNS_7TextRunEjj(%"class.blink::Font"*, %"class.blink::TextRun"* dereferenceable(40), i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZN3WTF6VectorIjLj8ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3414"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #19
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.3414", %"class.WTF::Vector.3414"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #19
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20, i64 0, i64 0), i8* %14, i8* %15) #19
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.14, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #19
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #19
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #19
  %23 = getelementptr inbounds %"class.WTF::Vector.3414", %"class.WTF::Vector.3414"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  ret i32* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIjLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPj(%"class.WTF::VectorBuffer.3415"*, i32*) local_unnamed_addr #14 comdat align 2 {
  %3 = bitcast i32* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #19
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #15

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.3146"*, %"class.blink::BidiEmbedding"*) local_unnamed_addr #14 comdat align 2 {
  %3 = bitcast %"class.blink::BidiEmbedding"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #19
  ret void
}

declare void @_ZN5blink24ReleaseLineBreakIteratorEPN6icu_6913BreakIteratorE(%"class.icu_69::BreakIterator"*) local_unnamed_addr #1

declare { i64, i64 } @_ZNK5blink20WritingModeConverter13SlowToLogicalERKNS_12PhysicalRectE(%"class.blink::WritingModeConverter"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #1

declare { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"*, i32, i32, i32) local_unnamed_addr #1

declare %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK4base6subtle24RefCountedThreadSafeBase9HasOneRefEv(%"class.base::subtle::RefCountedThreadSafeBase"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl4FillEDs(%"class.WTF::StringImpl"*, i16 zeroext) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceEjjRKNS_10StringViewE(%"class.WTF::StringImpl"*, i32, i32, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink17DisplayItemClient11OwnerNodeIdEv(%"class.blink::DisplayItemClient"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

declare %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

declare { i64, i64 } @_ZNK5blink11EllipsisBox13SelectionRectEv(%"class.blink::EllipsisBox"*) local_unnamed_addr #1

declare void @_ZN5blink14NGFragmentItem21InvalidateInkOverflowEv(%"class.blink::NGFragmentItem"*) local_unnamed_addr #1

declare %"class.base::SingleThreadTaskRunner"* @_ZN5blink8Document13GetTaskRunnerENS_8TaskTypeE(%"class.blink::Document"*, i8 zeroext) local_unnamed_addr #1

declare void @_ZN5blink9TimerBaseC2E13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::TimerBase"*, %"class.base::SingleThreadTaskRunner"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink9TimerBaseD2Ev(%"class.blink::TimerBase"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_115SecureTextTimerD0Ev(%"class.blink::(anonymous namespace)::SecureTextTimer"*) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::SecureTextTimer", %"class.blink::(anonymous namespace)::SecureTextTimer"* %0, i64 0, i32 0
  tail call void @_ZN5blink9TimerBaseD2Ev(%"class.blink::TimerBase"* %2) #19
  %3 = bitcast %"class.blink::(anonymous namespace)::SecureTextTimer"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #20
  ret void
}

declare void @_ZN5blink9TimerBase4StopEv(%"class.blink::TimerBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_115SecureTextTimer5FiredEv(%"class.blink::(anonymous namespace)::SecureTextTimer"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::SecureTextTimer", %"class.blink::(anonymous namespace)::SecureTextTimer"* %0, i64 0, i32 1
  %3 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %3, i64 0, i32 7
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = bitcast %"class.WTF::String"* %4 to i64*
  store i64 0, i64* %9, align 8
  br label %48

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = ptrtoint %"class.WTF::StringImpl"* %6 to i64
  %17 = bitcast %"class.WTF::String"* %4 to i64*
  store i64 %16, i64* %17, align 8
  br label %34

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #19
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !3

27:                                               ; preds = %18
  tail call void @llvm.trap() #19
  unreachable

28:                                               ; preds = %18
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %19, align 4
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %31 = ptrtoint %"class.WTF::StringImpl"* %6 to i64
  %32 = bitcast %"class.WTF::String"* %4 to i64*
  store i64 %31, i64* %32, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %33, label %48, label %34

34:                                               ; preds = %15, %28
  %35 = phi %"class.WTF::StringImpl"* [ %6, %15 ], [ %30, %28 ]
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %34
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %34
  %45 = phi i32 [ %43, %42 ], [ %41, %34 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #19
  br label %48

48:                                               ; preds = %8, %28, %44, %47
  %49 = bitcast %"class.blink::LayoutText"* %3 to void (%"class.blink::LayoutText"*)***
  %50 = load void (%"class.blink::LayoutText"*)**, void (%"class.blink::LayoutText"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.blink::LayoutText"*)*, void (%"class.blink::LayoutText"*)** %50, i64 122
  %52 = load void (%"class.blink::LayoutText"*)*, void (%"class.blink::LayoutText"*)** %51, align 8
  tail call void %52(%"class.blink::LayoutText"* %3) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9TimerBase16BindTimerClosureEN4base7WeakPtrIS0_EE(%"class.base::OnceCallback"* noalias sret, %"class.blink::TimerBase"*, %"class.base::WeakPtr.3446"*) unnamed_addr #0 comdat align 2 {
  %4 = tail call i8* @_Znwm(i64 64) #20, !noalias !41
  %5 = bitcast i8* %4 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %5, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #19, !noalias !41
  %6 = getelementptr inbounds i8, i8* %4, i64 32
  %7 = bitcast i8* %6 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::TimerBase"*)* @_ZN5blink9TimerBase11RunInternalEv to i64), i64 0>, <2 x i64>* %7, align 8, !noalias !41
  %8 = getelementptr inbounds i8, i8* %4, i64 48
  %9 = bitcast i8* %8 to %"class.base::internal::WeakReference"*
  %10 = getelementptr inbounds %"class.base::WeakPtr.3446", %"class.base::WeakPtr.3446"* %2, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %9, %"class.base::internal::WeakReference"* dereferenceable(8) %10) #19, !noalias !41
  %11 = getelementptr inbounds i8, i8* %4, i64 56
  %12 = bitcast i8* %11 to i64*
  %13 = getelementptr inbounds %"class.base::WeakPtr.3446", %"class.base::WeakPtr.3446"* %2, i64 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8, !noalias !41
  store i64 %14, i64* %12, align 8, !noalias !41
  %15 = bitcast %"class.base::OnceCallback"* %0 to i8**
  store i8* %4, i8** %15, align 8, !alias.scope !41
  ret void
}

declare void @_ZN5blink9TimerBase11RunInternalEv(%"class.blink::TimerBase"*) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #19
  br i1 %6, label %7, label %42

7:                                                ; preds = %1
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.blink::TimerBase"**
  %10 = load %"class.blink::TimerBase"*, %"class.blink::TimerBase"** %9, align 8
  %11 = icmp eq %"class.blink::TimerBase"* %10, null
  br i1 %11, label %42, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %16 = bitcast void ()** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #19
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #19
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.23, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.24, i64 0, i64 0)) #19
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #19
  br label %22

22:                                               ; preds = %19, %12
  %23 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #19
  %24 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = select i1 %23, i8* %25, i8* null
  %27 = getelementptr inbounds i8, i8* %26, i64 %17
  %28 = bitcast i8* %27 to %"class.blink::TimerBase"*
  %29 = and i64 %14, 1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %22
  %32 = bitcast i8* %27 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %14, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to void (%"class.blink::TimerBase"*)**
  %37 = load void (%"class.blink::TimerBase"*)*, void (%"class.blink::TimerBase"*)** %36, align 8
  br label %40

38:                                               ; preds = %22
  %39 = inttoptr i64 %14 to void (%"class.blink::TimerBase"*)*
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi void (%"class.blink::TimerBase"*)* [ %37, %31 ], [ %39, %38 ]
  call void %41(%"class.blink::TimerBase"* %28) #19
  br label %42

42:                                               ; preds = %1, %7, %40
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #19
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #20
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #19
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.blink::TimerBase"**
  %9 = load %"class.blink::TimerBase"*, %"class.blink::TimerBase"** %8, align 8
  %10 = icmp ne %"class.blink::TimerBase"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #19
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #3

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #3

declare %"class.blink::Settings"* @_ZNK5blink8Document11GetSettingsEv(%"class.blink::Document"*) local_unnamed_addr #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

declare void @_ZN5blink9TimerBase5StartEN4base9TimeDeltaES2_RKNS1_8LocationE(%"class.blink::TimerBase"*, i64, i64, %"class.base::Location"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKcEEN4base11trace_event16TraceEventHandleEcPKhS9_S9_yjyS9_OT_S9_OT0_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, %"class.std::__1::basic_string"* dereferenceable(24), i8*, i8** dereferenceable(8)) local_unnamed_addr #5 comdat {
  %12 = alloca %"class.base::trace_event::TraceArguments", align 8
  %13 = alloca %"class.base::TimeTicks", align 8
  %14 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #19
  %15 = bitcast %"class.base::TimeTicks"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #19
  %16 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %13, i64 0, i32 0, i32 0
  %17 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #19
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #19
  %19 = bitcast %"class.base::trace_event::TraceArguments"* %12 to i64*
  store i64 -6148914691247307006, i64* %19, align 8
  %20 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 0
  store i8* %7, i8** %20, align 8
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 1
  store i8* %9, i8** %21, align 8
  %22 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 0
  %23 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %30 = select i1 %26, i8* %28, i8* %29
  %31 = bitcast %"union.base::trace_event::TraceValue"* %22 to i8**
  store i8* %30, i8** %31, align 8
  %32 = bitcast i8** %10 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 1, i32 0
  store i64 %33, i64* %34, align 8
  %35 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %14, %"class.base::TimeTicks"* nonnull dereferenceable(8) %13, %"class.base::trace_event::TraceArguments"* nonnull %12, i32 %5) #19
  %36 = load i8, i8* %18, align 8
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %72, label %38

38:                                               ; preds = %11, %67
  %39 = phi i64 [ %68, %67 ], [ 0, %11 ]
  %40 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 1, i64 %39
  %41 = load i8, i8* %40, align 1
  %42 = icmp eq i8 %41, 8
  br i1 %42, label %43, label %54

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %39
  %45 = bitcast %"union.base::trace_event::TraceValue"* %44 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %46 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %45, align 8
  %47 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %46, null
  br i1 %47, label %67, label %48

48:                                               ; preds = %43
  %49 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %46 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %50 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %50, i64 1
  %52 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %51, align 8
  call void %52(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %46) #19
  %53 = load i8, i8* %40, align 1
  br label %54

54:                                               ; preds = %48, %38
  %55 = phi i8 [ %41, %38 ], [ %53, %48 ]
  %56 = icmp eq i8 %55, 9
  br i1 %56, label %57, label %67

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %39
  %59 = bitcast %"union.base::trace_event::TraceValue"* %58 to %"class.protozero::HeapBuffered"**
  %60 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %59, align 8
  %61 = icmp eq %"class.protozero::HeapBuffered"* %60, null
  br i1 %61, label %67, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %60, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %63) #19
  %64 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %60, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %64) #19
  %65 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %60, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %65) #19
  %66 = bitcast %"class.protozero::HeapBuffered"* %60 to i8*
  call void @_ZdlPv(i8* %66) #20
  br label %67

67:                                               ; preds = %62, %57, %54, %43
  %68 = add nuw nsw i64 %39, 1
  %69 = load i8, i8* %18, align 8
  %70 = zext i8 %69 to i64
  %71 = icmp ult i64 %68, %70
  br i1 %71, label %38, label %72

72:                                               ; preds = %67, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #19
  ret i64 %35
}

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #1

declare i8* @_ZN5blink31PaintInvalidationReasonToStringENS_23PaintInvalidationReasonE(i8 zeroext) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #15

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #16

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBaseD2Ev(%"class.blink::ComputedStyleBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"*, %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"** %2, align 8
  %4 = icmp eq %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, null
  br i1 %4, label %25, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedVariablesData", %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #19
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedVariablesData", %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %25

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedVariablesData", %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.base::RefCounted.729", %"class.base::RefCounted.729"* %11, i64 2
  %13 = bitcast %"class.base::RefCounted.729"* %12 to %"class.blink::StyleInheritedVariables"**
  %14 = load %"class.blink::StyleInheritedVariables"*, %"class.blink::StyleInheritedVariables"** %13, align 8
  %15 = icmp eq %"class.blink::StyleInheritedVariables"* %14, null
  br i1 %15, label %23, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %14, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %17) #19
  %18 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  tail call void @_ZN5blink23StyleInheritedVariablesD2Ev(%"class.blink::StyleInheritedVariables"* nonnull %14) #19
  %22 = bitcast %"class.blink::StyleInheritedVariables"* %14 to i8*
  tail call void @free(i8* %22) #19
  br label %23

23:                                               ; preds = %21, %16, %10
  %24 = bitcast %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3 to i8*
  tail call void @free(i8* %24) #19
  br label %25

25:                                               ; preds = %1, %5, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 7, i32 0, i32 0
  %27 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %26, align 8
  %28 = icmp eq %"class.blink::ComputedStyleBase::StyleSurroundData"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #19
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  tail call void @_ZN5blink17ComputedStyleBase17StyleSurroundDataD2Ev(%"class.blink::ComputedStyleBase::StyleSurroundData"* nonnull %27) #19
  %35 = bitcast %"class.blink::ComputedStyleBase::StyleSurroundData"* %27 to i8*
  tail call void @free(i8* %35) #19
  br label %36

36:                                               ; preds = %25, %29, %34
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 6, i32 0, i32 0
  %38 = load %"class.blink::ComputedStyleBase::StyleBackgroundData"*, %"class.blink::ComputedStyleBase::StyleBackgroundData"** %37, align 8
  %39 = icmp eq %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, null
  br i1 %39, label %50, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %41) #19
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %50

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, i64 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.base::RefCounted.721", %"class.base::RefCounted.721"* %46, i64 2
  %48 = bitcast %"class.base::RefCounted.721"* %47 to %"class.blink::FillLayer"*
  tail call void @_ZN5blink9FillLayerD1Ev(%"class.blink::FillLayer"* %48) #19
  %49 = bitcast %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38 to i8*
  tail call void @free(i8* %49) #19
  br label %50

50:                                               ; preds = %36, %40, %45
  %51 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 5, i32 0, i32 0
  %52 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %51, align 8
  %53 = icmp eq %"class.blink::ComputedStyleBase::StyleBoxData"* %52, null
  br i1 %53, label %61, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %52, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %55) #19
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  tail call void @_ZN5blink17ComputedStyleBase12StyleBoxDataD2Ev(%"class.blink::ComputedStyleBase::StyleBoxData"* nonnull %52) #19
  %60 = bitcast %"class.blink::ComputedStyleBase::StyleBoxData"* %52 to i8*
  tail call void @free(i8* %60) #19
  br label %61

61:                                               ; preds = %50, %54, %59
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 4, i32 0, i32 0
  %63 = load %"class.blink::ComputedStyleBase::StyleSVGData"*, %"class.blink::ComputedStyleBase::StyleSVGData"** %62, align 8
  %64 = icmp eq %"class.blink::ComputedStyleBase::StyleSVGData"* %63, null
  br i1 %64, label %72, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %63, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %66) #19
  %67 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %65
  tail call void @_ZN5blink17ComputedStyleBase12StyleSVGDataD2Ev(%"class.blink::ComputedStyleBase::StyleSVGData"* nonnull %63) #19
  %71 = bitcast %"class.blink::ComputedStyleBase::StyleSVGData"* %63 to i8*
  tail call void @free(i8* %71) #19
  br label %72

72:                                               ; preds = %61, %65, %70
  %73 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %73, align 8
  %75 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74, null
  br i1 %75, label %83, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %77) #19
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74, i64 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %83

81:                                               ; preds = %76
  tail call void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan14PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* nonnull %74) #19
  %82 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74 to i8*
  tail call void @free(i8* %82) #19
  br label %83

83:                                               ; preds = %72, %76, %81
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 2, i32 0, i32 0
  %85 = load %"class.blink::ComputedStyleBase::StyleVisualData"*, %"class.blink::ComputedStyleBase::StyleVisualData"** %84, align 8
  %86 = icmp eq %"class.blink::ComputedStyleBase::StyleVisualData"* %85, null
  br i1 %86, label %118, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %88) #19
  %89 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 0, i32 0, i32 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %118

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 3, i32 2
  %94 = load i8, i8* %93, align 1
  %95 = icmp eq i8 %94, 8
  br i1 %95, label %96, label %98

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %97) #19
  br label %98

98:                                               ; preds = %96, %92
  %99 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 2, i32 2
  %100 = load i8, i8* %99, align 1
  %101 = icmp eq i8 %100, 8
  br i1 %101, label %102, label %104

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %103) #19
  br label %104

104:                                              ; preds = %102, %98
  %105 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 1, i32 2
  %106 = load i8, i8* %105, align 1
  %107 = icmp eq i8 %106, 8
  br i1 %107, label %108, label %110

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %109) #19
  br label %110

110:                                              ; preds = %108, %104
  %111 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 0, i32 2
  %112 = load i8, i8* %111, align 1
  %113 = icmp eq i8 %112, 8
  br i1 %113, label %114, label %116

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %115) #19
  br label %116

116:                                              ; preds = %114, %110
  %117 = bitcast %"class.blink::ComputedStyleBase::StyleVisualData"* %85 to i8*
  tail call void @free(i8* %117) #19
  br label %118

118:                                              ; preds = %83, %87, %116
  %119 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 1, i32 0, i32 0
  %120 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %119, align 8
  %121 = icmp eq %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120, null
  br i1 %121, label %129, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %123) #19
  %124 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i32, i32* %124, align 4
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %129

127:                                              ; preds = %122
  tail call void @_ZN5blink17ComputedStyleBase44StyleRareInheritedUsageLessThan64PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* nonnull %120) #19
  %128 = bitcast %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120 to i8*
  tail call void @free(i8* %128) #19
  br label %129

129:                                              ; preds = %118, %122, %127
  %130 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 0, i32 0, i32 0
  %131 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %130, align 8
  %132 = icmp eq %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, null
  br i1 %132, label %160, label %133

133:                                              ; preds = %129
  %134 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %134) #19
  %135 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %160

138:                                              ; preds = %133
  %139 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 2, i32 2
  %140 = load i8, i8* %139, align 1
  %141 = icmp eq i8 %140, 8
  br i1 %141, label %142, label %144

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %143) #19
  br label %144

144:                                              ; preds = %142, %138
  %145 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 1, i32 0, i32 0
  %146 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %145, align 8
  %147 = icmp eq %"class.blink::ComputedStyleBase::StyleFontData"* %146, null
  br i1 %147, label %158, label %148

148:                                              ; preds = %144
  %149 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %146, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %149) #19
  %150 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %146, i64 0, i32 0, i32 0, i32 0, i32 0
  %151 = load i32, i32* %150, align 4
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %158

153:                                              ; preds = %148
  %154 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %146, i64 0, i32 0, i32 0
  %155 = getelementptr inbounds %"class.base::RefCounted.4", %"class.base::RefCounted.4"* %154, i64 2
  %156 = bitcast %"class.base::RefCounted.4"* %155 to %"class.blink::Font"*
  tail call void @_ZN5blink4FontD1Ev(%"class.blink::Font"* %156) #19
  %157 = bitcast %"class.blink::ComputedStyleBase::StyleFontData"* %146 to i8*
  tail call void @free(i8* %157) #19
  br label %158

158:                                              ; preds = %153, %148, %144
  %159 = bitcast %"class.blink::ComputedStyleBase::StyleInheritedData"* %131 to i8*
  tail call void @free(i8* %159) #19
  br label %160

160:                                              ; preds = %129, %133, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE8FinalizeEv(%"class.WTF::Vector.739"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %0, i64 0, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %42, label %5, !prof !3

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %class.scoped_refptr*, %class.scoped_refptr** %6, align 8
  %8 = zext i32 %3 to i64
  %9 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %7, i64 %8
  br label %10

10:                                               ; preds = %5, %38
  %11 = phi %class.scoped_refptr* [ %39, %38 ], [ %7, %5 ]
  %12 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %11, i64 0, i32 0
  %13 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %12, align 8
  %14 = icmp eq %"class.blink::ComputedStyle"* %13, null
  br i1 %14, label %38, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %13, i64 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %16, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %17) #19
  %18 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %16, i64 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %38

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %16, i64 -23
  %23 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %16, i64 1
  %24 = bitcast %"class.base::RefCounted.732"* %23 to %"class.blink::StyleCachedData"**
  %25 = load %"class.blink::StyleCachedData"*, %"class.blink::StyleCachedData"** %24, align 8
  store %"class.blink::StyleCachedData"* null, %"class.blink::StyleCachedData"** %24, align 8
  %26 = icmp eq %"class.blink::StyleCachedData"* %25, null
  br i1 %26, label %35, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.blink::StyleCachedData", %"class.blink::StyleCachedData"* %25, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"class.WTF::Vector.739"*, %"class.WTF::Vector.739"** %28, align 8
  store %"class.WTF::Vector.739"* null, %"class.WTF::Vector.739"** %28, align 8
  %30 = icmp eq %"class.WTF::Vector.739"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  tail call void @_ZN3WTF6VectorI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE8FinalizeEv(%"class.WTF::Vector.739"* nonnull %29) #19
  %32 = bitcast %"class.WTF::Vector.739"* %29 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %32) #19
  br label %33

33:                                               ; preds = %31, %27
  %34 = bitcast %"class.blink::StyleCachedData"* %25 to i8*
  tail call void @_ZdlPv(i8* %34) #20
  br label %35

35:                                               ; preds = %33, %21
  %36 = bitcast %"class.base::RefCounted.732"* %22 to %"class.blink::ComputedStyleBase"*
  tail call void @_ZN5blink17ComputedStyleBaseD2Ev(%"class.blink::ComputedStyleBase"* %36) #19
  %37 = bitcast %"class.base::RefCounted.732"* %22 to i8*
  tail call void @free(i8* %37) #19
  br label %38

38:                                               ; preds = %15, %35, %10
  %39 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %11, i64 1
  %40 = icmp eq %class.scoped_refptr* %39, %9
  br i1 %40, label %41, label %10

41:                                               ; preds = %38
  store i32 0, i32* %2, align 4
  br label %42

42:                                               ; preds = %1, %41
  %43 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %0, i64 0, i32 0, i32 0, i32 0
  %44 = load %class.scoped_refptr*, %class.scoped_refptr** %43, align 8
  %45 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = bitcast i8* %45 to %class.scoped_refptr*
  %47 = icmp eq %class.scoped_refptr* %44, %46
  br i1 %47, label %50, label %48, !prof !4

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.3212"* %49, %class.scoped_refptr* %44) #19
  br label %50

50:                                               ; preds = %42, %48
  store %class.scoped_refptr* null, %class.scoped_refptr** %43, align 8
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.3212"*, %class.scoped_refptr*) local_unnamed_addr #14 comdat align 2 {
  %3 = bitcast %class.scoped_refptr* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #19
  ret void
}

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23StyleInheritedVariablesD2Ev(%"class.blink::StyleInheritedVariables"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %0, i64 0, i32 2, i32 0
  %3 = load %"class.blink::StyleInheritedVariables"*, %"class.blink::StyleInheritedVariables"** %2, align 8
  %4 = icmp eq %"class.blink::StyleInheritedVariables"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #19
  %7 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink23StyleInheritedVariablesD2Ev(%"class.blink::StyleInheritedVariables"* nonnull %3) #19
  %11 = bitcast %"class.blink::StyleInheritedVariables"* %3 to i8*
  tail call void @free(i8* %11) #19
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %0, i64 0, i32 1
  tail call void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"* %13) #19
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleVariables", %"class.blink::StyleVariables"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %3 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %4 = icmp eq %"class.blink::PersistentNode"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #19
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #19
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #19
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %16, align 8
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %17, i64 0, i32 0, i32 0
  %20 = bitcast %"class.blink::PersistentRegion"* %17 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::PersistentNode"* %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %18, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %23, align 8
  store %"class.blink::PersistentNode"* %18, %"class.blink::PersistentNode"** %19, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %2, align 8
  br label %24

24:                                               ; preds = %1, %12
  %25 = getelementptr inbounds %"class.blink::StyleVariables", %"class.blink::StyleVariables"* %0, i64 0, i32 0, i32 0, i32 0
  %26 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %25, align 8
  %27 = icmp eq %"struct.WTF::KeyValuePair"* %26, null
  br i1 %27, label %73, label %28, !prof !4

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::StyleVariables", %"class.blink::StyleVariables"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %71, label %32

32:                                               ; preds = %28
  %33 = zext i32 %30 to i64
  br label %34

34:                                               ; preds = %68, %32
  %35 = phi i64 [ 0, %32 ], [ %69, %68 ]
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %26, i64 %35
  %37 = bitcast %"struct.WTF::KeyValuePair"* %36 to i8**
  %38 = load i8*, i8** %37, align 8
  %39 = icmp eq i8* %38, inttoptr (i64 -1 to i8*)
  br i1 %39, label %68, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %26, i64 %35, i32 1, i32 0
  %42 = load %"class.blink::CSSVariableData"*, %"class.blink::CSSVariableData"** %41, align 8
  %43 = icmp eq %"class.blink::CSSVariableData"* %42, null
  br i1 %43, label %51, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %42, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %45) #19
  %46 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %42, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %44
  tail call void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"* nonnull %42) #19
  %50 = bitcast %"class.blink::CSSVariableData"* %42 to i8*
  tail call void @free(i8* %50) #19
  br label %51

51:                                               ; preds = %49, %44, %40
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #19
  br label %68

68:                                               ; preds = %67, %64, %51, %34
  %69 = add nuw nsw i64 %35, 1
  %70 = icmp eq i64 %69, %33
  br i1 %70, label %71, label %34

71:                                               ; preds = %68, %28
  %72 = bitcast %"struct.WTF::KeyValuePair"* %26 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %72) #19
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %25, align 8
  br label %73

73:                                               ; preds = %24, %71
  ret void
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #19
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 3, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #19
  br label %35

35:                                               ; preds = %18, %31, %34
  %36 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %37 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %36, align 8
  %38 = icmp eq %"class.blink::CSSParserToken"* %37, null
  %39 = bitcast %"class.blink::CSSParserToken"* %37 to i8*
  br i1 %38, label %46, label %40, !prof !4

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %45, label %44, !prof !3

44:                                               ; preds = %40
  store i32 0, i32* %41, align 4
  br label %45

45:                                               ; preds = %44, %40
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %39) #19
  store %"class.blink::CSSParserToken"* null, %"class.blink::CSSParserToken"** %36, align 8
  br label %46

46:                                               ; preds = %35, %45
  %47 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 1
  %48 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %47, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** %48, align 8
  %50 = icmp eq %"class.WTF::String"* %49, null
  br i1 %50, label %85, label %51, !prof !4

51:                                               ; preds = %46
  %52 = bitcast %"class.WTF::String"* %49 to i8*
  %53 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %83, label %56, !prof !3

56:                                               ; preds = %51
  %57 = zext i32 %54 to i64
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 %57
  br label %59

59:                                               ; preds = %77, %56
  %60 = phi %"class.WTF::String"* [ %78, %77 ], [ %49, %56 ]
  %61 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #19
  br label %77

77:                                               ; preds = %76, %73, %59
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 1
  %79 = icmp eq %"class.WTF::String"* %78, %58
  br i1 %79, label %80, label %59

80:                                               ; preds = %77
  store i32 0, i32* %53, align 4
  %81 = bitcast %"class.WTF::Vector.630"* %47 to i8**
  %82 = load i8*, i8** %81, align 8
  br label %83

83:                                               ; preds = %80, %51
  %84 = phi i8* [ %82, %80 ], [ %52, %51 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %84) #19
  store %"class.WTF::String"* null, %"class.WTF::String"** %48, align 8
  br label %85

85:                                               ; preds = %46, %83
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase17StyleSurroundDataD2Ev(%"class.blink::ComputedStyleBase::StyleSurroundData"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 18, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 18
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #19
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 17, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 17
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #19
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 16, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 16
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #19
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 15, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 15
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #19
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 14, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 14
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #19
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 13, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 13
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #19
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 12, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 12
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #19
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 11, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 11
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #19
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 10, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 10
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #19
  br label %55

55:                                               ; preds = %49, %53
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 9, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 9
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #19
  br label %61

61:                                               ; preds = %55, %59
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 8, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 8
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #19
  br label %67

67:                                               ; preds = %61, %65
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 7, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 7
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #19
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 1, i32 2
  %75 = load i8, i8* %74, align 1
  %76 = icmp eq i8 %75, 8
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %78) #19
  br label %79

79:                                               ; preds = %77, %73
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 0, i32 2
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 8
  br i1 %82, label %83, label %85

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %84) #19
  br label %85

85:                                               ; preds = %79, %83
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 1, i32 2
  %87 = load i8, i8* %86, align 1
  %88 = icmp eq i8 %87, 8
  br i1 %88, label %89, label %91

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %90) #19
  br label %91

91:                                               ; preds = %89, %85
  %92 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 0, i32 2
  %93 = load i8, i8* %92, align 1
  %94 = icmp eq i8 %93, 8
  br i1 %94, label %95, label %97

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %96) #19
  br label %97

97:                                               ; preds = %91, %95
  %98 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 1, i32 2
  %99 = load i8, i8* %98, align 1
  %100 = icmp eq i8 %99, 8
  br i1 %100, label %101, label %103

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %102) #19
  br label %103

103:                                              ; preds = %101, %97
  %104 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 0, i32 2
  %105 = load i8, i8* %104, align 1
  %106 = icmp eq i8 %105, 8
  br i1 %106, label %107, label %109

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %108) #19
  br label %109

109:                                              ; preds = %103, %107
  %110 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 1, i32 2
  %111 = load i8, i8* %110, align 1
  %112 = icmp eq i8 %111, 8
  br i1 %112, label %113, label %115

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %114) #19
  br label %115

115:                                              ; preds = %113, %109
  %116 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 0, i32 2
  %117 = load i8, i8* %116, align 1
  %118 = icmp eq i8 %117, 8
  br i1 %118, label %119, label %121

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %120) #19
  br label %121

121:                                              ; preds = %115, %119
  %122 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %123 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %122, align 8
  %124 = icmp eq %"class.blink::NinePieceImageData"* %123, null
  br i1 %124, label %132, label %125

125:                                              ; preds = %121
  %126 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %123, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %126) #19
  %127 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %123, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %132

130:                                              ; preds = %125
  tail call void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"* nonnull %123) #19
  %131 = bitcast %"class.blink::NinePieceImageData"* %123 to i8*
  tail call void @free(i8* %131) #19
  br label %132

132:                                              ; preds = %121, %125, %130
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 3, i32 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #19
  br label %7

7:                                                ; preds = %5, %1
  %8 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 2, i32 0, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #19
  br label %13

13:                                               ; preds = %11, %7
  %14 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 1, i32 0, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 1, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #19
  br label %19

19:                                               ; preds = %17, %13
  %20 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 0, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #19
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 3, i32 0, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #19
  br label %31

31:                                               ; preds = %29, %25
  %32 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 2, i32 0, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #19
  br label %37

37:                                               ; preds = %35, %31
  %38 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 1, i32 0, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 1, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #19
  br label %43

43:                                               ; preds = %41, %37
  %44 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 0, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #19
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 3, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #19
  br label %55

55:                                               ; preds = %53, %49
  %56 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 2, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #19
  br label %61

61:                                               ; preds = %59, %55
  %62 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 1, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #19
  br label %67

67:                                               ; preds = %65, %61
  %68 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 0, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #19
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %75 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %74, align 8
  %76 = icmp eq %"class.blink::PersistentNode"* %75, null
  br i1 %76, label %96, label %77

77:                                               ; preds = %73
  %78 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %79 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %78, i64 0, i32 1
  %80 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %79) #19
  %81 = icmp eq i8* %80, null
  br i1 %81, label %82, label %84, !prof !3

82:                                               ; preds = %77
  %83 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #19
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %79, i8* %83) #19
  br label %84

84:                                               ; preds = %82, %77
  %85 = phi i8* [ %83, %82 ], [ %80, %77 ]
  %86 = bitcast i8* %85 to %"class.blink::ThreadState"**
  %87 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %87, i64 0, i32 3, i32 0, i32 0, i32 0
  %89 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %88, align 8
  %90 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %74, align 8
  %91 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %89, i64 0, i32 0, i32 0
  %92 = bitcast %"class.blink::PersistentRegion"* %89 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.blink::PersistentNode"* %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %90, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %95, align 8
  store %"class.blink::PersistentNode"* %90, %"class.blink::PersistentNode"** %91, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %74, align 8
  br label %96

96:                                               ; preds = %73, %84
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink9FillLayerD1Ev(%"class.blink::FillLayer"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase12StyleBoxDataD2Ev(%"class.blink::ComputedStyleBase::StyleBoxData"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 9, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 9
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #19
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 8, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 8
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #19
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 7, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 7
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #19
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 6, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 6
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #19
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 5, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 5
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #19
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 4, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 4
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #19
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 3, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #19
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 1, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #19
  br label %49

49:                                               ; preds = %47, %43
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 0, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #19
  br label %55

55:                                               ; preds = %49, %53
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase12StyleSVGDataD2Ev(%"class.blink::ComputedStyleBase::StyleSVGData"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 8
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680* %2) #19
  %3 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"class.blink::ComputedStyleBase::StyleStopData"*, %"class.blink::ComputedStyleBase::StyleStopData"** %3, align 8
  %5 = icmp eq %"class.blink::ComputedStyleBase::StyleStopData"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStopData", %"class.blink::ComputedStyleBase::StyleStopData"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #19
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStopData", %"class.blink::ComputedStyleBase::StyleStopData"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  %12 = bitcast %"class.blink::ComputedStyleBase::StyleStopData"* %4 to i8*
  tail call void @free(i8* %12) #19
  br label %13

13:                                               ; preds = %1, %6, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 6, i32 0, i32 0
  %15 = load %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"*, %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"** %14, align 8
  %16 = icmp eq %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, null
  br i1 %16, label %31, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedResourcesData", %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedResourcesData", %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %19) #19
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedResourcesData", %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %31

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.base::RefCounted.709", %"class.base::RefCounted.709"* %18, i64 6
  %25 = bitcast %"class.base::RefCounted.709"* %24 to %class.scoped_refptr.680*
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680* %25) #19
  %26 = getelementptr inbounds %"class.base::RefCounted.709", %"class.base::RefCounted.709"* %18, i64 4
  %27 = bitcast %"class.base::RefCounted.709"* %26 to %class.scoped_refptr.680*
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680* %27) #19
  %28 = getelementptr inbounds %"class.base::RefCounted.709", %"class.base::RefCounted.709"* %18, i64 2
  %29 = bitcast %"class.base::RefCounted.709"* %28 to %class.scoped_refptr.680*
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680* %29) #19
  %30 = bitcast %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15 to i8*
  tail call void @free(i8* %30) #19
  br label %31

31:                                               ; preds = %13, %17, %23
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 5, i32 0, i32 0
  %33 = load %"class.blink::ComputedStyleBase::StyleStrokeData"*, %"class.blink::ComputedStyleBase::StyleStrokeData"** %32, align 8
  %34 = icmp eq %"class.blink::ComputedStyleBase::StyleStrokeData"* %33, null
  br i1 %34, label %42, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %33, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %36) #19
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %33, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %35
  tail call void @_ZN5blink17ComputedStyleBase15StyleStrokeDataD2Ev(%"class.blink::ComputedStyleBase::StyleStrokeData"* nonnull %33) #19
  %41 = bitcast %"class.blink::ComputedStyleBase::StyleStrokeData"* %33 to i8*
  tail call void @free(i8* %41) #19
  br label %42

42:                                               ; preds = %31, %35, %40
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 4, i32 0, i32 0
  %44 = load %"class.blink::ComputedStyleBase::StyleFillData"*, %"class.blink::ComputedStyleBase::StyleFillData"** %43, align 8
  %45 = icmp eq %"class.blink::ComputedStyleBase::StyleFillData"* %44, null
  br i1 %45, label %58, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFillData", %"class.blink::ComputedStyleBase::StyleFillData"* %44, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFillData", %"class.blink::ComputedStyleBase::StyleFillData"* %44, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %48) #19
  %49 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFillData", %"class.blink::ComputedStyleBase::StyleFillData"* %44, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %58

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.base::RefCounted.679", %"class.base::RefCounted.679"* %47, i64 8
  %54 = bitcast %"class.base::RefCounted.679"* %53 to %"struct.blink::SVGPaint"*
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %54) #19
  %55 = getelementptr inbounds %"class.base::RefCounted.679", %"class.base::RefCounted.679"* %47, i64 2
  %56 = bitcast %"class.base::RefCounted.679"* %55 to %"struct.blink::SVGPaint"*
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %56) #19
  %57 = bitcast %"class.blink::ComputedStyleBase::StyleFillData"* %44 to i8*
  tail call void @free(i8* %57) #19
  br label %58

58:                                               ; preds = %42, %46, %52
  %59 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 3, i32 0, i32 0
  %60 = load %"class.blink::ComputedStyleBase::StyleGeometryData"*, %"class.blink::ComputedStyleBase::StyleGeometryData"** %59, align 8
  %61 = icmp eq %"class.blink::ComputedStyleBase::StyleGeometryData"* %60, null
  br i1 %61, label %69, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %60, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %63) #19
  %64 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %60, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %62
  tail call void @_ZN5blink17ComputedStyleBase17StyleGeometryDataD2Ev(%"class.blink::ComputedStyleBase::StyleGeometryData"* nonnull %60) #19
  %68 = bitcast %"class.blink::ComputedStyleBase::StyleGeometryData"* %60 to i8*
  tail call void @free(i8* %68) #19
  br label %69

69:                                               ; preds = %58, %62, %67
  %70 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 2, i32 0, i32 0
  %71 = load %"class.blink::ComputedStyleBase::StyleMiscData"*, %"class.blink::ComputedStyleBase::StyleMiscData"** %70, align 8
  %72 = icmp eq %"class.blink::ComputedStyleBase::StyleMiscData"* %71, null
  br i1 %72, label %88, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 0, i32 0
  %75 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %75) #19
  %76 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %88

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 1, i32 2
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 8
  br i1 %82, label %83, label %86

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.base::RefCounted.654", %"class.base::RefCounted.654"* %74, i64 1
  %85 = bitcast %"class.base::RefCounted.654"* %84 to %"class.blink::Length"*
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %85) #19
  br label %86

86:                                               ; preds = %83, %79
  %87 = bitcast %"class.blink::ComputedStyleBase::StyleMiscData"* %71 to i8*
  tail call void @free(i8* %87) #19
  br label %88

88:                                               ; preds = %69, %73, %86
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.scoped_refptr.680, %class.scoped_refptr.680* %0, i64 0, i32 0
  %3 = load %"class.blink::StyleSVGResource"*, %"class.blink::StyleSVGResource"** %2, align 8
  %4 = icmp eq %"class.blink::StyleSVGResource"* %3, null
  br i1 %4, label %52, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #19
  %7 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %52

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  br i1 %18, label %21, label %23

21:                                               ; preds = %14
  %22 = add i32 %20, -1
  store i32 %22, i32* %19, align 4
  br label %23

23:                                               ; preds = %21, %14
  %24 = phi i32 [ %22, %21 ], [ %20, %14 ]
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #19
  br label %27

27:                                               ; preds = %26, %23, %10
  %28 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 1, i32 0, i32 1, i32 0
  %29 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %28, align 8
  %30 = icmp eq %"class.blink::PersistentNode"* %29, null
  br i1 %30, label %50, label %31

31:                                               ; preds = %27
  %32 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %33 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %32, i64 0, i32 1
  %34 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %33) #19
  %35 = icmp eq i8* %34, null
  br i1 %35, label %36, label %38, !prof !3

36:                                               ; preds = %31
  %37 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #19
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %33, i8* %37) #19
  br label %38

38:                                               ; preds = %36, %31
  %39 = phi i8* [ %37, %36 ], [ %34, %31 ]
  %40 = bitcast i8* %39 to %"class.blink::ThreadState"**
  %41 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %41, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %42, align 8
  %44 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %28, align 8
  %45 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %43, i64 0, i32 0, i32 0
  %46 = bitcast %"class.blink::PersistentRegion"* %43 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.blink::PersistentNode"* %44 to i64*
  store i64 %47, i64* %48, align 8
  %49 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %44, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %49, align 8
  store %"class.blink::PersistentNode"* %44, %"class.blink::PersistentNode"** %45, align 8
  br label %50

50:                                               ; preds = %27, %38
  %51 = bitcast %"class.blink::StyleSVGResource"* %3 to i8*
  tail call void @free(i8* %51) #19
  br label %52

52:                                               ; preds = %5, %50, %1
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase15StyleStrokeDataD2Ev(%"class.blink::ComputedStyleBase::StyleStrokeData"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 6, i32 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 6, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #19
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 5, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 5
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #19
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 4
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %14) #19
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 3
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %15) #19
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 2, i32 0
  %17 = load %"class.base::RefCountedData.699"*, %"class.base::RefCountedData.699"** %16, align 8
  %18 = icmp eq %"class.base::RefCountedData.699"* %17, null
  br i1 %18, label %53, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.base::RefCountedData.699", %"class.base::RefCountedData.699"* %17, i64 0, i32 0
  %21 = getelementptr inbounds %"class.base::RefCountedData.699", %"class.base::RefCountedData.699"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %53

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe.700", %"class.base::RefCountedThreadSafe.700"* %20, i64 2
  %26 = bitcast %"class.base::RefCountedThreadSafe.700"* %25 to %"class.blink::Length"**
  %27 = load %"class.blink::Length"*, %"class.blink::Length"** %26, align 8
  %28 = icmp eq %"class.blink::Length"* %27, null
  br i1 %28, label %51, label %29, !prof !4

29:                                               ; preds = %24
  %30 = bitcast %"class.blink::Length"* %27 to i8*
  %31 = getelementptr inbounds %"class.base::RefCountedThreadSafe.700", %"class.base::RefCountedThreadSafe.700"* %20, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %49, label %34, !prof !3

34:                                               ; preds = %29
  %35 = zext i32 %32 to i64
  %36 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %27, i64 %35
  br label %37

37:                                               ; preds = %43, %34
  %38 = phi %"class.blink::Length"* [ %44, %43 ], [ %27, %34 ]
  %39 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %38, i64 0, i32 2
  %40 = load i8, i8* %39, align 1
  %41 = icmp eq i8 %40, 8
  br i1 %41, label %42, label %43

42:                                               ; preds = %37
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %38) #19
  br label %43

43:                                               ; preds = %42, %37
  %44 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %38, i64 1
  %45 = icmp eq %"class.blink::Length"* %44, %36
  br i1 %45, label %46, label %37

46:                                               ; preds = %43
  store i32 0, i32* %31, align 4
  %47 = bitcast %"class.base::RefCountedThreadSafe.700"* %25 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %46, %29
  %50 = phi i8* [ %48, %46 ], [ %30, %29 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #19
  br label %51

51:                                               ; preds = %49, %24
  %52 = bitcast %"class.base::RefCountedData.699"* %17 to i8*
  tail call void @_ZdlPv(i8* %52) #20
  br label %53

53:                                               ; preds = %13, %19, %51
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase17StyleGeometryDataD2Ev(%"class.blink::ComputedStyleBase::StyleGeometryData"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 8, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 8
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #19
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 7, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 7
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #19
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 6, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 6
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #19
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 5, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 5
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #19
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 4, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 4
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #19
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 3, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #19
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 2, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #19
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 1, i32 0
  %45 = load %"class.blink::StylePath"*, %"class.blink::StylePath"** %44, align 8
  %46 = icmp eq %"class.blink::StylePath"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %45, i64 0, i32 0, i32 1, i32 0
  %49 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %48, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %49) #19
  %50 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %48, i64 0, i32 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %60

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %48, i64 -2
  %55 = bitcast %"class.base::RefCounted.480"* %54 to %"class.blink::BasicShape"*
  %56 = bitcast %"class.base::RefCounted.480"* %54 to void (%"class.blink::BasicShape"*)***
  %57 = load void (%"class.blink::BasicShape"*)**, void (%"class.blink::BasicShape"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %57, i64 1
  %59 = load void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %58, align 8
  tail call void %59(%"class.blink::BasicShape"* nonnull %55) #19
  br label %60

60:                                               ; preds = %43, %47, %53
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan14PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 1, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #19
  br label %7

7:                                                ; preds = %5, %1
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 0, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #19
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 6, i32 0, i32 1, i32 0
  %15 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %14, align 8
  %16 = icmp eq %"class.blink::PersistentNode"* %15, null
  br i1 %16, label %36, label %17

17:                                               ; preds = %13
  %18 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %19 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %18, i64 0, i32 1
  %20 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %19) #19
  %21 = icmp eq i8* %20, null
  br i1 %21, label %22, label %24, !prof !3

22:                                               ; preds = %17
  %23 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #19
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %19, i8* %23) #19
  br label %24

24:                                               ; preds = %22, %17
  %25 = phi i8* [ %23, %22 ], [ %20, %17 ]
  %26 = bitcast i8* %25 to %"class.blink::ThreadState"**
  %27 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %27, i64 0, i32 3, i32 0, i32 0, i32 0
  %29 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %28, align 8
  %30 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %14, align 8
  %31 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %29, i64 0, i32 0, i32 0
  %32 = bitcast %"class.blink::PersistentRegion"* %29 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.blink::PersistentNode"* %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %30, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %35, align 8
  store %"class.blink::PersistentNode"* %30, %"class.blink::PersistentNode"** %31, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %14, align 8
  br label %36

36:                                               ; preds = %13, %24
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 5, i32 0
  %38 = load %"class.blink::ShadowList"*, %"class.blink::ShadowList"** %37, align 8
  %39 = icmp eq %"class.blink::ShadowList"* %38, null
  br i1 %39, label %62, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %38, i64 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %38, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %42) #19
  %43 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %62

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %41, i64 2
  %48 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %41, i64 5, i32 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %52, label %51, !prof !3

51:                                               ; preds = %46
  store i32 0, i32* %48, align 4
  br label %52

52:                                               ; preds = %51, %46
  %53 = bitcast %"class.base::RefCounted.300"* %47 to %"class.blink::ShadowData"**
  %54 = load %"class.blink::ShadowData"*, %"class.blink::ShadowData"** %53, align 8
  %55 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %41, i64 6
  %56 = bitcast %"class.base::RefCounted.300"* %55 to %"class.blink::ShadowData"*
  %57 = icmp eq %"class.blink::ShadowData"* %54, %56
  br i1 %57, label %60, label %58, !prof !4

58:                                               ; preds = %52
  %59 = bitcast %"class.base::RefCounted.300"* %47 to %"class.WTF::VectorBuffer.302"*
  tail call void @_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.302"* %59, %"class.blink::ShadowData"* %54) #19
  br label %60

60:                                               ; preds = %58, %52
  %61 = bitcast %"class.blink::ShadowList"* %38 to i8*
  tail call void @free(i8* %61) #19
  br label %62

62:                                               ; preds = %36, %40, %60
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 4
  %64 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load %class.scoped_refptr.638*, %class.scoped_refptr.638** %64, align 8
  %66 = icmp eq %class.scoped_refptr.638* %65, null
  br i1 %66, label %101, label %67, !prof !4

67:                                               ; preds = %62
  %68 = bitcast %class.scoped_refptr.638* %65 to i8*
  %69 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %99, label %72, !prof !3

72:                                               ; preds = %67
  %73 = zext i32 %70 to i64
  %74 = getelementptr inbounds %class.scoped_refptr.638, %class.scoped_refptr.638* %65, i64 %73
  br label %75

75:                                               ; preds = %93, %72
  %76 = phi %class.scoped_refptr.638* [ %94, %93 ], [ %65, %72 ]
  %77 = getelementptr inbounds %class.scoped_refptr.638, %class.scoped_refptr.638* %76, i64 0, i32 0
  %78 = load %"class.blink::TransformOperation"*, %"class.blink::TransformOperation"** %77, align 8
  %79 = icmp eq %"class.blink::TransformOperation"* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %78, i64 0, i32 1, i32 0
  %82 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %81, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %82) #19
  %83 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %81, i64 0, i32 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %93

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %81, i64 -2
  %88 = bitcast %"class.base::RefCounted.483"* %87 to %"class.blink::TransformOperation"*
  %89 = bitcast %"class.base::RefCounted.483"* %87 to void (%"class.blink::TransformOperation"*)***
  %90 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %90, i64 1
  %92 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %91, align 8
  tail call void %92(%"class.blink::TransformOperation"* nonnull %88) #19
  br label %93

93:                                               ; preds = %86, %80, %75
  %94 = getelementptr inbounds %class.scoped_refptr.638, %class.scoped_refptr.638* %76, i64 1
  %95 = icmp eq %class.scoped_refptr.638* %94, %74
  br i1 %95, label %96, label %75

96:                                               ; preds = %93
  store i32 0, i32* %69, align 4
  %97 = bitcast %"class.blink::TransformOperations"* %63 to i8**
  %98 = load i8*, i8** %97, align 8
  br label %99

99:                                               ; preds = %96, %67
  %100 = phi i8* [ %98, %96 ], [ %68, %67 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %100) #19
  store %class.scoped_refptr.638* null, %class.scoped_refptr.638** %64, align 8
  br label %101

101:                                              ; preds = %62, %99
  %102 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 3, i32 0, i32 0
  %103 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %102, align 8
  %104 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103, null
  br i1 %104, label %112, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %106) #19
  %107 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103, i64 0, i32 0, i32 0, i32 0, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %105
  tail call void @_ZN5blink17ComputedStyleBase50StyleRareNonInheritedUsageLessThan14PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* nonnull %103) #19
  %111 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103 to i8*
  tail call void @free(i8* %111) #19
  br label %112

112:                                              ; preds = %101, %105, %110
  %113 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 2, i32 0, i32 0
  %114 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %113, align 8
  %115 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114, null
  br i1 %115, label %123, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %117) #19
  %118 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %123

121:                                              ; preds = %116
  tail call void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan22PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* nonnull %114) #19
  %122 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114 to i8*
  tail call void @free(i8* %122) #19
  br label %123

123:                                              ; preds = %112, %116, %121
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.302"*, %"class.blink::ShadowData"*) local_unnamed_addr #14 comdat align 2 {
  %3 = bitcast %"class.blink::ShadowData"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #19
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase50StyleRareNonInheritedUsageLessThan14PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 23, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 23
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #19
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 22, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 22
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #19
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 21, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 21
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #19
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 20, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 20
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #19
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 19, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 19
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #19
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 18, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 18
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #19
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 17, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 17
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #19
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 16, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 16
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #19
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %51 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %50, align 8
  %52 = icmp eq %"class.blink::NinePieceImageData"* %51, null
  br i1 %52, label %60, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %51, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %54) #19
  %55 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %53
  tail call void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"* nonnull %51) #19
  %59 = bitcast %"class.blink::NinePieceImageData"* %51 to i8*
  tail call void @free(i8* %59) #19
  br label %60

60:                                               ; preds = %49, %53, %58
  %61 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 13
  tail call void @_ZN5blink9FillLayerD1Ev(%"class.blink::FillLayer"* %61) #19
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 12
  %63 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::String"*, %"class.WTF::String"** %63, align 8
  %65 = icmp eq %"class.WTF::String"* %64, null
  br i1 %65, label %100, label %66, !prof !4

66:                                               ; preds = %60
  %67 = bitcast %"class.WTF::String"* %64 to i8*
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %98, label %71, !prof !3

71:                                               ; preds = %66
  %72 = zext i32 %69 to i64
  %73 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 %72
  br label %74

74:                                               ; preds = %92, %71
  %75 = phi %"class.WTF::String"* [ %93, %92 ], [ %64, %71 ]
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %75, i64 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #19
  br label %92

92:                                               ; preds = %91, %88, %74
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %75, i64 1
  %94 = icmp eq %"class.WTF::String"* %93, %73
  br i1 %94, label %95, label %74

95:                                               ; preds = %92
  store i32 0, i32* %68, align 4
  %96 = bitcast %"class.WTF::Vector.630"* %62 to i8**
  %97 = load i8*, i8** %96, align 8
  br label %98

98:                                               ; preds = %95, %66
  %99 = phi i8* [ %97, %95 ], [ %67, %66 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %99) #19
  store %"class.WTF::String"* null, %"class.WTF::String"** %63, align 8
  br label %100

100:                                              ; preds = %60, %98
  %101 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %102 = load %"class.blink::StyleNonInheritedVariables"*, %"class.blink::StyleNonInheritedVariables"** %101, align 8
  store %"class.blink::StyleNonInheritedVariables"* null, %"class.blink::StyleNonInheritedVariables"** %101, align 8
  %103 = icmp eq %"class.blink::StyleNonInheritedVariables"* %102, null
  br i1 %103, label %107, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.blink::StyleNonInheritedVariables", %"class.blink::StyleNonInheritedVariables"* %102, i64 0, i32 0
  tail call void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"* %105) #19
  %106 = bitcast %"class.blink::StyleNonInheritedVariables"* %102 to i8*
  tail call void @free(i8* %106) #19
  br label %107

107:                                              ; preds = %100, %104
  %108 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 10
  tail call void @_ZNSt3__110unique_ptrIN5blink11PaintImagesENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr.613"* %108, %"class.blink::PaintImages"* null) #19
  %109 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %110 = load %"class.blink::CSSTransitionData"*, %"class.blink::CSSTransitionData"** %109, align 8
  store %"class.blink::CSSTransitionData"* null, %"class.blink::CSSTransitionData"** %109, align 8
  %111 = icmp eq %"class.blink::CSSTransitionData"* %110, null
  br i1 %111, label %154, label %112

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %110, i64 0, i32 1
  %114 = getelementptr inbounds %"class.WTF::Vector.605", %"class.WTF::Vector.605"* %113, i64 0, i32 0, i32 0, i32 0
  %115 = load %"struct.blink::CSSTransitionData::TransitionProperty"*, %"struct.blink::CSSTransitionData::TransitionProperty"** %114, align 8
  %116 = icmp eq %"struct.blink::CSSTransitionData::TransitionProperty"* %115, null
  br i1 %116, label %151, label %117, !prof !4

117:                                              ; preds = %112
  %118 = bitcast %"struct.blink::CSSTransitionData::TransitionProperty"* %115 to i8*
  %119 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %110, i64 0, i32 1, i32 0, i32 0, i32 2
  %120 = load i32, i32* %119, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %149, label %122, !prof !3

122:                                              ; preds = %117
  %123 = zext i32 %120 to i64
  %124 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %115, i64 %123
  br label %125

125:                                              ; preds = %143, %122
  %126 = phi %"struct.blink::CSSTransitionData::TransitionProperty"* [ %144, %143 ], [ %115, %122 ]
  %127 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %126, i64 0, i32 2, i32 0, i32 0, i32 0
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %127, align 8
  %129 = icmp eq %"class.WTF::StringImpl"* %128, null
  br i1 %129, label %143, label %130

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  br i1 %134, label %137, label %139

137:                                              ; preds = %130
  %138 = add i32 %136, -1
  store i32 %138, i32* %135, align 4
  br label %139

139:                                              ; preds = %137, %130
  %140 = phi i32 [ %138, %137 ], [ %136, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %128) #19
  br label %143

143:                                              ; preds = %142, %139, %125
  %144 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %126, i64 1
  %145 = icmp eq %"struct.blink::CSSTransitionData::TransitionProperty"* %144, %124
  br i1 %145, label %146, label %125

146:                                              ; preds = %143
  store i32 0, i32* %119, align 4
  %147 = bitcast %"class.WTF::Vector.605"* %113 to i8**
  %148 = load i8*, i8** %147, align 8
  br label %149

149:                                              ; preds = %146, %117
  %150 = phi i8* [ %148, %146 ], [ %118, %117 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %150) #19
  store %"struct.blink::CSSTransitionData::TransitionProperty"* null, %"struct.blink::CSSTransitionData::TransitionProperty"** %114, align 8
  br label %151

151:                                              ; preds = %112, %149
  %152 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %110, i64 0, i32 0
  tail call void @_ZN5blink13CSSTimingDataD2Ev(%"class.blink::CSSTimingData"* %152) #19
  %153 = bitcast %"class.blink::CSSTransitionData"* %110 to i8*
  tail call void @free(i8* %153) #19
  br label %154

154:                                              ; preds = %107, %151
  %155 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %156 = load %"class.blink::CSSAnimationData"*, %"class.blink::CSSAnimationData"** %155, align 8
  store %"class.blink::CSSAnimationData"* null, %"class.blink::CSSAnimationData"** %155, align 8
  %157 = icmp eq %"class.blink::CSSAnimationData"* %156, null
  br i1 %157, label %160, label %158

158:                                              ; preds = %154
  tail call void @_ZN5blink16CSSAnimationDataD2Ev(%"class.blink::CSSAnimationData"* nonnull %156) #19
  %159 = bitcast %"class.blink::CSSAnimationData"* %156 to i8*
  tail call void @free(i8* %159) #19
  br label %160

160:                                              ; preds = %154, %158
  %161 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %162 = load %"class.blink::CounterDirectiveMap"*, %"class.blink::CounterDirectiveMap"** %161, align 8
  store %"class.blink::CounterDirectiveMap"* null, %"class.blink::CounterDirectiveMap"** %161, align 8
  %163 = icmp eq %"class.blink::CounterDirectiveMap"* %162, null
  br i1 %163, label %202, label %164

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"class.blink::CounterDirectiveMap", %"class.blink::CounterDirectiveMap"* %162, i64 0, i32 0, i32 0, i32 0
  %166 = load %"struct.WTF::KeyValuePair.560"*, %"struct.WTF::KeyValuePair.560"** %165, align 8
  %167 = icmp eq %"struct.WTF::KeyValuePair.560"* %166, null
  br i1 %167, label %200, label %168, !prof !4

168:                                              ; preds = %164
  %169 = getelementptr inbounds %"class.blink::CounterDirectiveMap", %"class.blink::CounterDirectiveMap"* %162, i64 0, i32 0, i32 0, i32 1
  %170 = load i32, i32* %169, align 8
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %198, label %172

172:                                              ; preds = %168
  %173 = zext i32 %170 to i64
  br label %174

174:                                              ; preds = %195, %172
  %175 = phi i64 [ 0, %172 ], [ %196, %195 ]
  %176 = getelementptr inbounds %"struct.WTF::KeyValuePair.560", %"struct.WTF::KeyValuePair.560"* %166, i64 %175
  %177 = bitcast %"struct.WTF::KeyValuePair.560"* %176 to i8**
  %178 = load i8*, i8** %177, align 8
  %179 = bitcast i8* %178 to %"class.WTF::StringImpl"*
  %180 = ptrtoint i8* %178 to i64
  switch i64 %180, label %181 [
    i64 -1, label %195
    i64 0, label %195
  ]

181:                                              ; preds = %174
  %182 = getelementptr inbounds i8, i8* %178, i64 8
  %183 = bitcast i8* %182 to i32*
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = and i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = bitcast i8* %178 to i32*
  %188 = load i32, i32* %187, align 4
  br i1 %186, label %189, label %191

189:                                              ; preds = %181
  %190 = add i32 %188, -1
  store i32 %190, i32* %187, align 4
  br label %191

191:                                              ; preds = %189, %181
  %192 = phi i32 [ %190, %189 ], [ %188, %181 ]
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %195

194:                                              ; preds = %191
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %179) #19
  br label %195

195:                                              ; preds = %194, %191, %174, %174
  %196 = add nuw nsw i64 %175, 1
  %197 = icmp eq i64 %196, %173
  br i1 %197, label %198, label %174

198:                                              ; preds = %195, %168
  %199 = bitcast %"struct.WTF::KeyValuePair.560"* %166 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %199) #19
  store %"struct.WTF::KeyValuePair.560"* null, %"struct.WTF::KeyValuePair.560"** %165, align 8
  br label %200

200:                                              ; preds = %198, %164
  %201 = bitcast %"class.blink::CounterDirectiveMap"* %162 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %201) #19
  br label %202

202:                                              ; preds = %160, %200
  %203 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %204 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %203, align 8
  %205 = icmp eq %"class.WTF::StringImpl"* %204, null
  br i1 %205, label %219, label %206

206:                                              ; preds = %202
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = load atomic i32, i32* %207 monotonic, align 4
  %209 = and i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 0
  %212 = load i32, i32* %211, align 4
  br i1 %210, label %213, label %215

213:                                              ; preds = %206
  %214 = add i32 %212, -1
  store i32 %214, i32* %211, align 4
  br label %215

215:                                              ; preds = %213, %206
  %216 = phi i32 [ %214, %213 ], [ %212, %206 ]
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %218, label %219

218:                                              ; preds = %215
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %204) #19
  br label %219

219:                                              ; preds = %202, %215, %218
  %220 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %221 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %220, align 8
  %222 = icmp eq %"class.WTF::StringImpl"* %221, null
  br i1 %222, label %236, label %223

223:                                              ; preds = %219
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = load atomic i32, i32* %224 monotonic, align 4
  %226 = and i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 0
  %229 = load i32, i32* %228, align 4
  br i1 %227, label %230, label %232

230:                                              ; preds = %223
  %231 = add i32 %229, -1
  store i32 %231, i32* %228, align 4
  br label %232

232:                                              ; preds = %230, %223
  %233 = phi i32 [ %231, %230 ], [ %229, %223 ]
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %232
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %221) #19
  br label %236

236:                                              ; preds = %219, %232, %235
  %237 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %238 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %237, align 8
  %239 = icmp eq %"class.WTF::StringImpl"* %238, null
  br i1 %239, label %253, label %240

240:                                              ; preds = %236
  %241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %242 = load atomic i32, i32* %241 monotonic, align 4
  %243 = and i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 0
  %246 = load i32, i32* %245, align 4
  br i1 %244, label %247, label %249

247:                                              ; preds = %240
  %248 = add i32 %246, -1
  store i32 %248, i32* %245, align 4
  br label %249

249:                                              ; preds = %247, %240
  %250 = phi i32 [ %248, %247 ], [ %246, %240 ]
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %252, label %253

252:                                              ; preds = %249
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %238) #19
  br label %253

253:                                              ; preds = %236, %249, %252
  %254 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 3, i32 0, i32 0
  %255 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %254, align 8
  %256 = icmp eq %"class.blink::ComputedStyleBase::StyleGridData"* %255, null
  br i1 %256, label %264, label %257

257:                                              ; preds = %253
  %258 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %255, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %258) #19
  %259 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %255, i64 0, i32 0, i32 0, i32 0, i32 0
  %260 = load i32, i32* %259, align 4
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %264

262:                                              ; preds = %257
  tail call void @_ZN5blink17ComputedStyleBase13StyleGridDataD2Ev(%"class.blink::ComputedStyleBase::StyleGridData"* nonnull %255) #19
  %263 = bitcast %"class.blink::ComputedStyleBase::StyleGridData"* %255 to i8*
  tail call void @free(i8* %263) #19
  br label %264

264:                                              ; preds = %253, %257, %262
  %265 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 2, i32 0, i32 0
  %266 = load %"class.blink::ComputedStyleBase::StyleWillChangeData"*, %"class.blink::ComputedStyleBase::StyleWillChangeData"** %265, align 8
  %267 = icmp eq %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, null
  br i1 %267, label %288, label %268

268:                                              ; preds = %264
  %269 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, i64 0, i32 0, i32 0
  %270 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %270) #19
  %271 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, i64 0, i32 0, i32 0, i32 0, i32 0
  %272 = load i32, i32* %271, align 4
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %274, label %288

274:                                              ; preds = %268
  %275 = getelementptr inbounds %"class.base::RefCounted.528", %"class.base::RefCounted.528"* %269, i64 2
  %276 = bitcast %"class.base::RefCounted.528"* %275 to i32**
  %277 = load i32*, i32** %276, align 8
  %278 = icmp eq i32* %277, null
  %279 = bitcast i32* %277 to i8*
  br i1 %278, label %286, label %280, !prof !4

280:                                              ; preds = %274
  %281 = getelementptr inbounds %"class.base::RefCounted.528", %"class.base::RefCounted.528"* %269, i64 5, i32 0, i32 0
  %282 = load i32, i32* %281, align 4
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %285, label %284, !prof !3

284:                                              ; preds = %280
  store i32 0, i32* %281, align 4
  br label %285

285:                                              ; preds = %284, %280
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %279) #19
  br label %286

286:                                              ; preds = %285, %274
  %287 = bitcast %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266 to i8*
  tail call void @free(i8* %287) #19
  br label %288

288:                                              ; preds = %264, %268, %286
  %289 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 1, i32 0, i32 0
  %290 = load %"class.blink::ComputedStyleBase::StyleMultiColData"*, %"class.blink::ComputedStyleBase::StyleMultiColData"** %289, align 8
  %291 = icmp eq %"class.blink::ComputedStyleBase::StyleMultiColData"* %290, null
  br i1 %291, label %299, label %292

292:                                              ; preds = %288
  %293 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMultiColData", %"class.blink::ComputedStyleBase::StyleMultiColData"* %290, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %293) #19
  %294 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMultiColData", %"class.blink::ComputedStyleBase::StyleMultiColData"* %290, i64 0, i32 0, i32 0, i32 0, i32 0
  %295 = load i32, i32* %294, align 4
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %297, label %299

297:                                              ; preds = %292
  %298 = bitcast %"class.blink::ComputedStyleBase::StyleMultiColData"* %290 to i8*
  tail call void @free(i8* %298) #19
  br label %299

299:                                              ; preds = %288, %292, %297
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110unique_ptrIN5blink11PaintImagesENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr.613"*, %"class.blink::PaintImages"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.613"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::PaintImages"*, %"class.blink::PaintImages"** %3, align 8
  store %"class.blink::PaintImages"* %1, %"class.blink::PaintImages"** %3, align 8
  %5 = icmp eq %"class.blink::PaintImages"* %4, null
  br i1 %5, label %52, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::PaintImages", %"class.blink::PaintImages"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::Persistent.306"*, %"class.blink::Persistent.306"** %7, align 8
  %9 = icmp eq %"class.blink::Persistent.306"* %8, null
  br i1 %9, label %50, label %10, !prof !4

10:                                               ; preds = %6
  %11 = bitcast %"class.blink::Persistent.306"* %8 to i8*
  %12 = getelementptr inbounds %"class.blink::PaintImages", %"class.blink::PaintImages"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %48, label %15, !prof !3

15:                                               ; preds = %10
  %16 = zext i32 %13 to i64
  %17 = getelementptr inbounds %"class.blink::Persistent.306", %"class.blink::Persistent.306"* %8, i64 %16
  br label %18

18:                                               ; preds = %15, %42
  %19 = phi %"class.blink::Persistent.306"* [ %43, %42 ], [ %8, %15 ]
  %20 = getelementptr inbounds %"class.blink::Persistent.306", %"class.blink::Persistent.306"* %19, i64 0, i32 0, i32 1, i32 0
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %22 = icmp eq %"class.blink::PersistentNode"* %21, null
  br i1 %22, label %42, label %23

23:                                               ; preds = %18
  %24 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %25 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %24, i64 0, i32 1
  %26 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %25) #19
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %30, !prof !3

28:                                               ; preds = %23
  %29 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #19
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %25, i8* %29) #19
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi i8* [ %29, %28 ], [ %26, %23 ]
  %32 = bitcast i8* %31 to %"class.blink::ThreadState"**
  %33 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %34, align 8
  %36 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %37 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %35, i64 0, i32 0, i32 0
  %38 = bitcast %"class.blink::PersistentRegion"* %35 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %37, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %20, align 8
  br label %42

42:                                               ; preds = %30, %18
  %43 = getelementptr inbounds %"class.blink::Persistent.306", %"class.blink::Persistent.306"* %19, i64 1
  %44 = icmp eq %"class.blink::Persistent.306"* %43, %17
  br i1 %44, label %45, label %18

45:                                               ; preds = %42
  store i32 0, i32* %12, align 4
  %46 = bitcast %"class.blink::PaintImages"* %4 to i8**
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %45, %10
  %49 = phi i8* [ %47, %45 ], [ %11, %10 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #19
  store %"class.blink::Persistent.306"* null, %"class.blink::Persistent.306"** %7, align 8
  br label %50

50:                                               ; preds = %6, %48
  %51 = bitcast %"class.blink::PaintImages"* %4 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %51) #19
  br label %52

52:                                               ; preds = %2, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13CSSTimingDataD2Ev(%"class.blink::CSSTimingData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::Vector.572", %"class.WTF::Vector.572"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %class.scoped_refptr.575*, %class.scoped_refptr.575** %3, align 8
  %5 = icmp eq %class.scoped_refptr.575* %4, null
  br i1 %5, label %39, label %6, !prof !4

6:                                                ; preds = %1
  %7 = bitcast %class.scoped_refptr.575* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %37, label %11, !prof !3

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %class.scoped_refptr.575, %class.scoped_refptr.575* %4, i64 %12
  br label %14

14:                                               ; preds = %31, %11
  %15 = phi %class.scoped_refptr.575* [ %32, %31 ], [ %4, %11 ]
  %16 = getelementptr inbounds %class.scoped_refptr.575, %class.scoped_refptr.575* %15, i64 0, i32 0
  %17 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %16, align 8
  %18 = icmp eq %"class.blink::TimingFunction"* %17, null
  br i1 %18, label %31, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %17, i64 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.base::RefCountedThreadSafe.576", %"class.base::RefCountedThreadSafe.576"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %31

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe.576", %"class.base::RefCountedThreadSafe.576"* %20, i64 -2
  %26 = bitcast %"class.base::RefCountedThreadSafe.576"* %25 to %"class.blink::TimingFunction"*
  %27 = bitcast %"class.base::RefCountedThreadSafe.576"* %25 to void (%"class.blink::TimingFunction"*)***
  %28 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %28, i64 1
  %30 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %29, align 8
  tail call void %30(%"class.blink::TimingFunction"* nonnull %26) #19
  br label %31

31:                                               ; preds = %24, %19, %14
  %32 = getelementptr inbounds %class.scoped_refptr.575, %class.scoped_refptr.575* %15, i64 1
  %33 = icmp eq %class.scoped_refptr.575* %32, %13
  br i1 %33, label %34, label %14

34:                                               ; preds = %31
  store i32 0, i32* %8, align 4
  %35 = bitcast %"class.WTF::Vector.572"* %2 to i8**
  %36 = load i8*, i8** %35, align 8
  br label %37

37:                                               ; preds = %34, %6
  %38 = phi i8* [ %36, %34 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %38) #19
  store %class.scoped_refptr.575* null, %class.scoped_refptr.575** %3, align 8
  br label %39

39:                                               ; preds = %1, %37
  %40 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %41 = load double*, double** %40, align 8
  %42 = icmp eq double* %41, null
  %43 = bitcast double* %41 to i8*
  br i1 %42, label %50, label %44, !prof !4

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %49, label %48, !prof !3

48:                                               ; preds = %44
  store i32 0, i32* %45, align 4
  br label %49

49:                                               ; preds = %48, %44
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %43) #19
  store double* null, double** %40, align 8
  br label %50

50:                                               ; preds = %39, %49
  %51 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %52 = load double*, double** %51, align 8
  %53 = icmp eq double* %52, null
  %54 = bitcast double* %52 to i8*
  br i1 %53, label %61, label %55, !prof !4

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %60, label %59, !prof !3

59:                                               ; preds = %55
  store i32 0, i32* %56, align 4
  br label %60

60:                                               ; preds = %59, %55
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %54) #19
  store double* null, double** %51, align 8
  br label %61

61:                                               ; preds = %50, %60
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16CSSAnimationDataD2Ev(%"class.blink::CSSAnimationData"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = icmp eq i32* %3, null
  %5 = bitcast i32* %3 to i8*
  br i1 %4, label %12, label %6, !prof !4

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10, !prof !3

10:                                               ; preds = %6
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %10, %6
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %5) #19
  store i32* null, i32** %2, align 8
  br label %12

12:                                               ; preds = %1, %11
  %13 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  %16 = bitcast i32* %14 to i8*
  br i1 %15, label %23, label %17, !prof !4

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %22, label %21, !prof !3

21:                                               ; preds = %17
  store i32 0, i32* %18, align 4
  br label %22

22:                                               ; preds = %21, %17
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %16) #19
  store i32* null, i32** %13, align 8
  br label %23

23:                                               ; preds = %12, %22
  %24 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %25 = load i32*, i32** %24, align 8
  %26 = icmp eq i32* %25, null
  %27 = bitcast i32* %25 to i8*
  br i1 %26, label %34, label %28, !prof !4

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %33, label %32, !prof !3

32:                                               ; preds = %28
  store i32 0, i32* %29, align 4
  br label %33

33:                                               ; preds = %32, %28
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %27) #19
  store i32* null, i32** %24, align 8
  br label %34

34:                                               ; preds = %23, %33
  %35 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = load double*, double** %35, align 8
  %37 = icmp eq double* %36, null
  %38 = bitcast double* %36 to i8*
  br i1 %37, label %45, label %39, !prof !4

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %44, label %43, !prof !3

43:                                               ; preds = %39
  store i32 0, i32* %40, align 4
  br label %44

44:                                               ; preds = %43, %39
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %38) #19
  store double* null, double** %35, align 8
  br label %45

45:                                               ; preds = %34, %44
  %46 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 2
  %47 = getelementptr inbounds %"class.WTF::Vector.579", %"class.WTF::Vector.579"* %46, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::StyleNameOrKeyword"*, %"class.blink::StyleNameOrKeyword"** %47, align 8
  %49 = icmp eq %"class.blink::StyleNameOrKeyword"* %48, null
  br i1 %49, label %84, label %50, !prof !4

50:                                               ; preds = %45
  %51 = bitcast %"class.blink::StyleNameOrKeyword"* %48 to i8*
  %52 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %82, label %55, !prof !3

55:                                               ; preds = %50
  %56 = zext i32 %53 to i64
  %57 = getelementptr inbounds %"class.blink::StyleNameOrKeyword", %"class.blink::StyleNameOrKeyword"* %48, i64 %56
  br label %58

58:                                               ; preds = %76, %55
  %59 = phi %"class.blink::StyleNameOrKeyword"* [ %77, %76 ], [ %48, %55 ]
  %60 = getelementptr inbounds %"class.blink::StyleNameOrKeyword", %"class.blink::StyleNameOrKeyword"* %59, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %72

70:                                               ; preds = %63
  %71 = add i32 %69, -1
  store i32 %71, i32* %68, align 4
  br label %72

72:                                               ; preds = %70, %63
  %73 = phi i32 [ %71, %70 ], [ %69, %63 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %61) #19
  br label %76

76:                                               ; preds = %75, %72, %58
  %77 = getelementptr inbounds %"class.blink::StyleNameOrKeyword", %"class.blink::StyleNameOrKeyword"* %59, i64 1
  %78 = icmp eq %"class.blink::StyleNameOrKeyword"* %77, %57
  br i1 %78, label %79, label %58

79:                                               ; preds = %76
  store i32 0, i32* %52, align 4
  %80 = bitcast %"class.WTF::Vector.579"* %46 to i8**
  %81 = load i8*, i8** %80, align 8
  br label %82

82:                                               ; preds = %79, %50
  %83 = phi i8* [ %81, %79 ], [ %51, %50 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %83) #19
  store %"class.blink::StyleNameOrKeyword"* null, %"class.blink::StyleNameOrKeyword"** %47, align 8
  br label %84

84:                                               ; preds = %45, %82
  %85 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 1
  %86 = getelementptr inbounds %"class.WTF::Vector.284", %"class.WTF::Vector.284"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %86, align 8
  %88 = icmp eq %"class.WTF::AtomicString"* %87, null
  br i1 %88, label %123, label %89, !prof !4

89:                                               ; preds = %84
  %90 = bitcast %"class.WTF::AtomicString"* %87 to i8*
  %91 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %121, label %94, !prof !3

94:                                               ; preds = %89
  %95 = zext i32 %92 to i64
  %96 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %87, i64 %95
  br label %97

97:                                               ; preds = %115, %94
  %98 = phi %"class.WTF::AtomicString"* [ %116, %115 ], [ %87, %94 ]
  %99 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %115, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  br i1 %106, label %109, label %111

109:                                              ; preds = %102
  %110 = add i32 %108, -1
  store i32 %110, i32* %107, align 4
  br label %111

111:                                              ; preds = %109, %102
  %112 = phi i32 [ %110, %109 ], [ %108, %102 ]
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %100) #19
  br label %115

115:                                              ; preds = %114, %111, %97
  %116 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %98, i64 1
  %117 = icmp eq %"class.WTF::AtomicString"* %116, %96
  br i1 %117, label %118, label %97

118:                                              ; preds = %115
  store i32 0, i32* %91, align 4
  %119 = bitcast %"class.WTF::Vector.284"* %85 to i8**
  %120 = load i8*, i8** %119, align 8
  br label %121

121:                                              ; preds = %118, %89
  %122 = phi i8* [ %120, %118 ], [ %90, %89 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %122) #19
  store %"class.WTF::AtomicString"* null, %"class.WTF::AtomicString"** %86, align 8
  br label %123

123:                                              ; preds = %84, %121
  %124 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 0
  tail call void @_ZN5blink13CSSTimingDataD2Ev(%"class.blink::CSSTimingData"* %124) #19
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase13StyleGridDataD2Ev(%"class.blink::ComputedStyleBase::StyleGridData"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 14
  %3 = getelementptr inbounds %"class.WTF::Vector.459", %"class.WTF::Vector.459"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %3, align 8
  %5 = icmp eq %"class.blink::GridTrackSize"* %4, null
  br i1 %5, label %41, label %6, !prof !4

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::GridTrackSize"* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 14, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %39, label %11, !prof !3

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %4, i64 %12
  br label %14

14:                                               ; preds = %33, %11
  %15 = phi %"class.blink::GridTrackSize"* [ %34, %33 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 4, i32 0, i32 2
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 8
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %20) #19
  br label %21

21:                                               ; preds = %19, %14
  %22 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 3, i32 0, i32 2
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 8
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %26) #19
  br label %27

27:                                               ; preds = %25, %21
  %28 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 2, i32 0, i32 2
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %29, 8
  br i1 %30, label %31, label %33

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %32) #19
  br label %33

33:                                               ; preds = %31, %27
  %34 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 1
  %35 = icmp eq %"class.blink::GridTrackSize"* %34, %13
  br i1 %35, label %36, label %14

36:                                               ; preds = %33
  store i32 0, i32* %8, align 4
  %37 = bitcast %"class.WTF::Vector.459"* %2 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %36, %6
  %40 = phi i8* [ %38, %36 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %40) #19
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %3, align 8
  br label %41

41:                                               ; preds = %1, %39
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 13
  %43 = getelementptr inbounds %"class.WTF::Vector.459", %"class.WTF::Vector.459"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %43, align 8
  %45 = icmp eq %"class.blink::GridTrackSize"* %44, null
  br i1 %45, label %81, label %46, !prof !4

46:                                               ; preds = %41
  %47 = bitcast %"class.blink::GridTrackSize"* %44 to i8*
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 13, i32 0, i32 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %79, label %51, !prof !3

51:                                               ; preds = %46
  %52 = zext i32 %49 to i64
  %53 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %44, i64 %52
  br label %54

54:                                               ; preds = %73, %51
  %55 = phi %"class.blink::GridTrackSize"* [ %74, %73 ], [ %44, %51 ]
  %56 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 4, i32 0, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #19
  br label %61

61:                                               ; preds = %59, %54
  %62 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 3, i32 0, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #19
  br label %67

67:                                               ; preds = %65, %61
  %68 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 2, i32 0, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #19
  br label %73

73:                                               ; preds = %71, %67
  %74 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 1
  %75 = icmp eq %"class.blink::GridTrackSize"* %74, %53
  br i1 %75, label %76, label %54

76:                                               ; preds = %73
  store i32 0, i32* %48, align 4
  %77 = bitcast %"class.WTF::Vector.459"* %42 to i8**
  %78 = load i8*, i8** %77, align 8
  br label %79

79:                                               ; preds = %76, %46
  %80 = phi i8* [ %78, %76 ], [ %47, %46 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %80) #19
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %43, align 8
  br label %81

81:                                               ; preds = %41, %79
  %82 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 12, i32 0, i32 0
  %83 = load %"struct.WTF::KeyValuePair.552"*, %"struct.WTF::KeyValuePair.552"** %82, align 8
  %84 = icmp eq %"struct.WTF::KeyValuePair.552"* %83, null
  br i1 %84, label %117, label %85, !prof !4

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 12, i32 0, i32 1
  %87 = load i32, i32* %86, align 8
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %115, label %89

89:                                               ; preds = %85
  %90 = zext i32 %87 to i64
  br label %91

91:                                               ; preds = %112, %89
  %92 = phi i64 [ 0, %89 ], [ %113, %112 ]
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %83, i64 %92
  %94 = bitcast %"struct.WTF::KeyValuePair.552"* %93 to i8**
  %95 = load i8*, i8** %94, align 8
  %96 = bitcast i8* %95 to %"class.WTF::StringImpl"*
  %97 = ptrtoint i8* %95 to i64
  switch i64 %97, label %98 [
    i64 -1, label %112
    i64 0, label %112
  ]

98:                                               ; preds = %91
  %99 = getelementptr inbounds i8, i8* %95, i64 8
  %100 = bitcast i8* %99 to i32*
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = bitcast i8* %95 to i32*
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %98
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %98
  %109 = phi i32 [ %107, %106 ], [ %105, %98 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %96) #19
  br label %112

112:                                              ; preds = %111, %108, %91, %91
  %113 = add nuw nsw i64 %92, 1
  %114 = icmp eq i64 %113, %90
  br i1 %114, label %115, label %91

115:                                              ; preds = %112, %85
  %116 = bitcast %"struct.WTF::KeyValuePair.552"* %83 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %116) #19
  store %"struct.WTF::KeyValuePair.552"* null, %"struct.WTF::KeyValuePair.552"** %82, align 8
  br label %117

117:                                              ; preds = %81, %115
  %118 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 11, i32 0, i32 0
  %119 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %118, align 8
  %120 = icmp eq %"struct.WTF::KeyValuePair.547"* %119, null
  br i1 %120, label %124, label %121, !prof !4

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 11, i32 0, i32 1
  %123 = load i32, i32* %122, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"* nonnull %119, i32 %123) #19
  store %"struct.WTF::KeyValuePair.547"* null, %"struct.WTF::KeyValuePair.547"** %118, align 8
  br label %124

124:                                              ; preds = %117, %121
  %125 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 10, i32 0, i32 0
  %126 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %125, align 8
  %127 = icmp eq %"struct.WTF::KeyValuePair.547"* %126, null
  br i1 %127, label %131, label %128, !prof !4

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 10, i32 0, i32 1
  %130 = load i32, i32* %129, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"* nonnull %126, i32 %130) #19
  store %"struct.WTF::KeyValuePair.547"* null, %"struct.WTF::KeyValuePair.547"** %125, align 8
  br label %131

131:                                              ; preds = %124, %128
  %132 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 9, i32 0, i32 0
  %133 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %132, align 8
  %134 = icmp eq %"struct.WTF::KeyValuePair.547"* %133, null
  br i1 %134, label %138, label %135, !prof !4

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 9, i32 0, i32 1
  %137 = load i32, i32* %136, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"* nonnull %133, i32 %137) #19
  store %"struct.WTF::KeyValuePair.547"* null, %"struct.WTF::KeyValuePair.547"** %132, align 8
  br label %138

138:                                              ; preds = %131, %135
  %139 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 8, i32 0, i32 0
  %140 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %139, align 8
  %141 = icmp eq %"struct.WTF::KeyValuePair.547"* %140, null
  br i1 %141, label %145, label %142, !prof !4

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 8, i32 0, i32 1
  %144 = load i32, i32* %143, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"* nonnull %140, i32 %144) #19
  store %"struct.WTF::KeyValuePair.547"* null, %"struct.WTF::KeyValuePair.547"** %139, align 8
  br label %145

145:                                              ; preds = %138, %142
  %146 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 7, i32 0, i32 0
  %147 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %146, align 8
  %148 = icmp eq %"struct.WTF::KeyValuePair.542"* %147, null
  br i1 %148, label %196, label %149, !prof !4

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 7, i32 0, i32 1
  %151 = load i32, i32* %150, align 8
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %194, label %153

153:                                              ; preds = %149
  %154 = zext i32 %151 to i64
  br label %155

155:                                              ; preds = %191, %153
  %156 = phi i64 [ 0, %153 ], [ %192, %191 ]
  %157 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %147, i64 %156
  %158 = bitcast %"struct.WTF::KeyValuePair.542"* %157 to i8**
  %159 = load i8*, i8** %158, align 8
  %160 = icmp eq i8* %159, inttoptr (i64 -1 to i8*)
  br i1 %160, label %191, label %161

161:                                              ; preds = %155
  %162 = bitcast i8* %159 to %"class.WTF::StringImpl"*
  %163 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %147, i64 %156, i32 1, i32 0, i32 0, i32 0
  %164 = load i64*, i64** %163, align 8
  %165 = icmp eq i64* %164, null
  %166 = bitcast i64* %164 to i8*
  br i1 %165, label %175, label %167, !prof !4

167:                                              ; preds = %161
  %168 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %147, i64 %156, i32 1, i32 0, i32 0, i32 2
  %169 = load i32, i32* %168, align 4
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %172, label %171, !prof !3

171:                                              ; preds = %167
  store i32 0, i32* %168, align 4
  br label %172

172:                                              ; preds = %171, %167
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %166) #19
  store i64* null, i64** %163, align 8
  %173 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %157, i64 0, i32 0, i32 0, i32 0
  %174 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %173, align 8
  br label %175

175:                                              ; preds = %172, %161
  %176 = phi %"class.WTF::StringImpl"* [ %174, %172 ], [ %162, %161 ]
  %177 = icmp eq %"class.WTF::StringImpl"* %176, null
  br i1 %177, label %191, label %178

178:                                              ; preds = %175
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = load atomic i32, i32* %179 monotonic, align 4
  %181 = and i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 0
  %184 = load i32, i32* %183, align 4
  br i1 %182, label %185, label %187

185:                                              ; preds = %178
  %186 = add i32 %184, -1
  store i32 %186, i32* %183, align 4
  br label %187

187:                                              ; preds = %185, %178
  %188 = phi i32 [ %186, %185 ], [ %184, %178 ]
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %191

190:                                              ; preds = %187
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %176) #19
  br label %191

191:                                              ; preds = %190, %187, %175, %155
  %192 = add nuw nsw i64 %156, 1
  %193 = icmp eq i64 %192, %154
  br i1 %193, label %194, label %155

194:                                              ; preds = %191, %149
  %195 = bitcast %"struct.WTF::KeyValuePair.542"* %147 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %195) #19
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %146, align 8
  br label %196

196:                                              ; preds = %145, %194
  %197 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 6, i32 0, i32 0
  %198 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %197, align 8
  %199 = icmp eq %"struct.WTF::KeyValuePair.542"* %198, null
  br i1 %199, label %247, label %200, !prof !4

200:                                              ; preds = %196
  %201 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 6, i32 0, i32 1
  %202 = load i32, i32* %201, align 8
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %245, label %204

204:                                              ; preds = %200
  %205 = zext i32 %202 to i64
  br label %206

206:                                              ; preds = %242, %204
  %207 = phi i64 [ 0, %204 ], [ %243, %242 ]
  %208 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %198, i64 %207
  %209 = bitcast %"struct.WTF::KeyValuePair.542"* %208 to i8**
  %210 = load i8*, i8** %209, align 8
  %211 = icmp eq i8* %210, inttoptr (i64 -1 to i8*)
  br i1 %211, label %242, label %212

212:                                              ; preds = %206
  %213 = bitcast i8* %210 to %"class.WTF::StringImpl"*
  %214 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %198, i64 %207, i32 1, i32 0, i32 0, i32 0
  %215 = load i64*, i64** %214, align 8
  %216 = icmp eq i64* %215, null
  %217 = bitcast i64* %215 to i8*
  br i1 %216, label %226, label %218, !prof !4

218:                                              ; preds = %212
  %219 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %198, i64 %207, i32 1, i32 0, i32 0, i32 2
  %220 = load i32, i32* %219, align 4
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %223, label %222, !prof !3

222:                                              ; preds = %218
  store i32 0, i32* %219, align 4
  br label %223

223:                                              ; preds = %222, %218
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %217) #19
  store i64* null, i64** %214, align 8
  %224 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %208, i64 0, i32 0, i32 0, i32 0
  %225 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %224, align 8
  br label %226

226:                                              ; preds = %223, %212
  %227 = phi %"class.WTF::StringImpl"* [ %225, %223 ], [ %213, %212 ]
  %228 = icmp eq %"class.WTF::StringImpl"* %227, null
  br i1 %228, label %242, label %229

229:                                              ; preds = %226
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = load atomic i32, i32* %230 monotonic, align 4
  %232 = and i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 0
  %235 = load i32, i32* %234, align 4
  br i1 %233, label %236, label %238

236:                                              ; preds = %229
  %237 = add i32 %235, -1
  store i32 %237, i32* %234, align 4
  br label %238

238:                                              ; preds = %236, %229
  %239 = phi i32 [ %237, %236 ], [ %235, %229 ]
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %242

241:                                              ; preds = %238
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %227) #19
  br label %242

242:                                              ; preds = %241, %238, %226, %206
  %243 = add nuw nsw i64 %207, 1
  %244 = icmp eq i64 %243, %205
  br i1 %244, label %245, label %206

245:                                              ; preds = %242, %200
  %246 = bitcast %"struct.WTF::KeyValuePair.542"* %198 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %246) #19
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %197, align 8
  br label %247

247:                                              ; preds = %196, %245
  %248 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 5, i32 0, i32 0
  %249 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %248, align 8
  %250 = icmp eq %"struct.WTF::KeyValuePair.542"* %249, null
  br i1 %250, label %298, label %251, !prof !4

251:                                              ; preds = %247
  %252 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 5, i32 0, i32 1
  %253 = load i32, i32* %252, align 8
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %296, label %255

255:                                              ; preds = %251
  %256 = zext i32 %253 to i64
  br label %257

257:                                              ; preds = %293, %255
  %258 = phi i64 [ 0, %255 ], [ %294, %293 ]
  %259 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %249, i64 %258
  %260 = bitcast %"struct.WTF::KeyValuePair.542"* %259 to i8**
  %261 = load i8*, i8** %260, align 8
  %262 = icmp eq i8* %261, inttoptr (i64 -1 to i8*)
  br i1 %262, label %293, label %263

263:                                              ; preds = %257
  %264 = bitcast i8* %261 to %"class.WTF::StringImpl"*
  %265 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %249, i64 %258, i32 1, i32 0, i32 0, i32 0
  %266 = load i64*, i64** %265, align 8
  %267 = icmp eq i64* %266, null
  %268 = bitcast i64* %266 to i8*
  br i1 %267, label %277, label %269, !prof !4

269:                                              ; preds = %263
  %270 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %249, i64 %258, i32 1, i32 0, i32 0, i32 2
  %271 = load i32, i32* %270, align 4
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %274, label %273, !prof !3

273:                                              ; preds = %269
  store i32 0, i32* %270, align 4
  br label %274

274:                                              ; preds = %273, %269
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %268) #19
  store i64* null, i64** %265, align 8
  %275 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %259, i64 0, i32 0, i32 0, i32 0
  %276 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %275, align 8
  br label %277

277:                                              ; preds = %274, %263
  %278 = phi %"class.WTF::StringImpl"* [ %276, %274 ], [ %264, %263 ]
  %279 = icmp eq %"class.WTF::StringImpl"* %278, null
  br i1 %279, label %293, label %280

280:                                              ; preds = %277
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %282 = load atomic i32, i32* %281 monotonic, align 4
  %283 = and i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 0
  %286 = load i32, i32* %285, align 4
  br i1 %284, label %287, label %289

287:                                              ; preds = %280
  %288 = add i32 %286, -1
  store i32 %288, i32* %285, align 4
  br label %289

289:                                              ; preds = %287, %280
  %290 = phi i32 [ %288, %287 ], [ %286, %280 ]
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %292, label %293

292:                                              ; preds = %289
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %278) #19
  br label %293

293:                                              ; preds = %292, %289, %277, %257
  %294 = add nuw nsw i64 %258, 1
  %295 = icmp eq i64 %294, %256
  br i1 %295, label %296, label %257

296:                                              ; preds = %293, %251
  %297 = bitcast %"struct.WTF::KeyValuePair.542"* %249 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %297) #19
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %248, align 8
  br label %298

298:                                              ; preds = %247, %296
  %299 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 4, i32 0, i32 0
  %300 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %299, align 8
  %301 = icmp eq %"struct.WTF::KeyValuePair.542"* %300, null
  br i1 %301, label %349, label %302, !prof !4

302:                                              ; preds = %298
  %303 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 4, i32 0, i32 1
  %304 = load i32, i32* %303, align 8
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %347, label %306

306:                                              ; preds = %302
  %307 = zext i32 %304 to i64
  br label %308

308:                                              ; preds = %344, %306
  %309 = phi i64 [ 0, %306 ], [ %345, %344 ]
  %310 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %300, i64 %309
  %311 = bitcast %"struct.WTF::KeyValuePair.542"* %310 to i8**
  %312 = load i8*, i8** %311, align 8
  %313 = icmp eq i8* %312, inttoptr (i64 -1 to i8*)
  br i1 %313, label %344, label %314

314:                                              ; preds = %308
  %315 = bitcast i8* %312 to %"class.WTF::StringImpl"*
  %316 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %300, i64 %309, i32 1, i32 0, i32 0, i32 0
  %317 = load i64*, i64** %316, align 8
  %318 = icmp eq i64* %317, null
  %319 = bitcast i64* %317 to i8*
  br i1 %318, label %328, label %320, !prof !4

320:                                              ; preds = %314
  %321 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %300, i64 %309, i32 1, i32 0, i32 0, i32 2
  %322 = load i32, i32* %321, align 4
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %325, label %324, !prof !3

324:                                              ; preds = %320
  store i32 0, i32* %321, align 4
  br label %325

325:                                              ; preds = %324, %320
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %319) #19
  store i64* null, i64** %316, align 8
  %326 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %310, i64 0, i32 0, i32 0, i32 0
  %327 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %326, align 8
  br label %328

328:                                              ; preds = %325, %314
  %329 = phi %"class.WTF::StringImpl"* [ %327, %325 ], [ %315, %314 ]
  %330 = icmp eq %"class.WTF::StringImpl"* %329, null
  br i1 %330, label %344, label %331

331:                                              ; preds = %328
  %332 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %333 = load atomic i32, i32* %332 monotonic, align 4
  %334 = and i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 0
  %337 = load i32, i32* %336, align 4
  br i1 %335, label %338, label %340

338:                                              ; preds = %331
  %339 = add i32 %337, -1
  store i32 %339, i32* %336, align 4
  br label %340

340:                                              ; preds = %338, %331
  %341 = phi i32 [ %339, %338 ], [ %337, %331 ]
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %343, label %344

343:                                              ; preds = %340
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %329) #19
  br label %344

344:                                              ; preds = %343, %340, %328, %308
  %345 = add nuw nsw i64 %309, 1
  %346 = icmp eq i64 %345, %307
  br i1 %346, label %347, label %308

347:                                              ; preds = %344, %302
  %348 = bitcast %"struct.WTF::KeyValuePair.542"* %300 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %348) #19
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %299, align 8
  br label %349

349:                                              ; preds = %298, %347
  %350 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 3, i32 0, i32 0
  %351 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %350, align 8
  %352 = icmp eq %"struct.WTF::KeyValuePair.542"* %351, null
  br i1 %352, label %400, label %353, !prof !4

353:                                              ; preds = %349
  %354 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 3, i32 0, i32 1
  %355 = load i32, i32* %354, align 8
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %398, label %357

357:                                              ; preds = %353
  %358 = zext i32 %355 to i64
  br label %359

359:                                              ; preds = %395, %357
  %360 = phi i64 [ 0, %357 ], [ %396, %395 ]
  %361 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %351, i64 %360
  %362 = bitcast %"struct.WTF::KeyValuePair.542"* %361 to i8**
  %363 = load i8*, i8** %362, align 8
  %364 = icmp eq i8* %363, inttoptr (i64 -1 to i8*)
  br i1 %364, label %395, label %365

365:                                              ; preds = %359
  %366 = bitcast i8* %363 to %"class.WTF::StringImpl"*
  %367 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %351, i64 %360, i32 1, i32 0, i32 0, i32 0
  %368 = load i64*, i64** %367, align 8
  %369 = icmp eq i64* %368, null
  %370 = bitcast i64* %368 to i8*
  br i1 %369, label %379, label %371, !prof !4

371:                                              ; preds = %365
  %372 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %351, i64 %360, i32 1, i32 0, i32 0, i32 2
  %373 = load i32, i32* %372, align 4
  %374 = icmp eq i32 %373, 0
  br i1 %374, label %376, label %375, !prof !3

375:                                              ; preds = %371
  store i32 0, i32* %372, align 4
  br label %376

376:                                              ; preds = %375, %371
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %370) #19
  store i64* null, i64** %367, align 8
  %377 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %361, i64 0, i32 0, i32 0, i32 0
  %378 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %377, align 8
  br label %379

379:                                              ; preds = %376, %365
  %380 = phi %"class.WTF::StringImpl"* [ %378, %376 ], [ %366, %365 ]
  %381 = icmp eq %"class.WTF::StringImpl"* %380, null
  br i1 %381, label %395, label %382

382:                                              ; preds = %379
  %383 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %380, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %384 = load atomic i32, i32* %383 monotonic, align 4
  %385 = and i32 %384, 2
  %386 = icmp eq i32 %385, 0
  %387 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %380, i64 0, i32 0
  %388 = load i32, i32* %387, align 4
  br i1 %386, label %389, label %391

389:                                              ; preds = %382
  %390 = add i32 %388, -1
  store i32 %390, i32* %387, align 4
  br label %391

391:                                              ; preds = %389, %382
  %392 = phi i32 [ %390, %389 ], [ %388, %382 ]
  %393 = icmp eq i32 %392, 0
  br i1 %393, label %394, label %395

394:                                              ; preds = %391
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %380) #19
  br label %395

395:                                              ; preds = %394, %391, %379, %359
  %396 = add nuw nsw i64 %360, 1
  %397 = icmp eq i64 %396, %358
  br i1 %397, label %398, label %359

398:                                              ; preds = %395, %353
  %399 = bitcast %"struct.WTF::KeyValuePair.542"* %351 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %399) #19
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %350, align 8
  br label %400

400:                                              ; preds = %349, %398
  %401 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 2, i32 0, i32 0
  %402 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %401, align 8
  %403 = icmp eq %"struct.WTF::KeyValuePair.542"* %402, null
  br i1 %403, label %451, label %404, !prof !4

404:                                              ; preds = %400
  %405 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 2, i32 0, i32 1
  %406 = load i32, i32* %405, align 8
  %407 = icmp eq i32 %406, 0
  br i1 %407, label %449, label %408

408:                                              ; preds = %404
  %409 = zext i32 %406 to i64
  br label %410

410:                                              ; preds = %446, %408
  %411 = phi i64 [ 0, %408 ], [ %447, %446 ]
  %412 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %402, i64 %411
  %413 = bitcast %"struct.WTF::KeyValuePair.542"* %412 to i8**
  %414 = load i8*, i8** %413, align 8
  %415 = icmp eq i8* %414, inttoptr (i64 -1 to i8*)
  br i1 %415, label %446, label %416

416:                                              ; preds = %410
  %417 = bitcast i8* %414 to %"class.WTF::StringImpl"*
  %418 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %402, i64 %411, i32 1, i32 0, i32 0, i32 0
  %419 = load i64*, i64** %418, align 8
  %420 = icmp eq i64* %419, null
  %421 = bitcast i64* %419 to i8*
  br i1 %420, label %430, label %422, !prof !4

422:                                              ; preds = %416
  %423 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %402, i64 %411, i32 1, i32 0, i32 0, i32 2
  %424 = load i32, i32* %423, align 4
  %425 = icmp eq i32 %424, 0
  br i1 %425, label %427, label %426, !prof !3

426:                                              ; preds = %422
  store i32 0, i32* %423, align 4
  br label %427

427:                                              ; preds = %426, %422
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %421) #19
  store i64* null, i64** %418, align 8
  %428 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %412, i64 0, i32 0, i32 0, i32 0
  %429 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %428, align 8
  br label %430

430:                                              ; preds = %427, %416
  %431 = phi %"class.WTF::StringImpl"* [ %429, %427 ], [ %417, %416 ]
  %432 = icmp eq %"class.WTF::StringImpl"* %431, null
  br i1 %432, label %446, label %433

433:                                              ; preds = %430
  %434 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %431, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %435 = load atomic i32, i32* %434 monotonic, align 4
  %436 = and i32 %435, 2
  %437 = icmp eq i32 %436, 0
  %438 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %431, i64 0, i32 0
  %439 = load i32, i32* %438, align 4
  br i1 %437, label %440, label %442

440:                                              ; preds = %433
  %441 = add i32 %439, -1
  store i32 %441, i32* %438, align 4
  br label %442

442:                                              ; preds = %440, %433
  %443 = phi i32 [ %441, %440 ], [ %439, %433 ]
  %444 = icmp eq i32 %443, 0
  br i1 %444, label %445, label %446

445:                                              ; preds = %442
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %431) #19
  br label %446

446:                                              ; preds = %445, %442, %430, %410
  %447 = add nuw nsw i64 %411, 1
  %448 = icmp eq i64 %447, %409
  br i1 %448, label %449, label %410

449:                                              ; preds = %446, %404
  %450 = bitcast %"struct.WTF::KeyValuePair.542"* %402 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %450) #19
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %401, align 8
  br label %451

451:                                              ; preds = %400, %449
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %8

6:                                                ; preds = %52, %2
  %7 = bitcast %"struct.WTF::KeyValuePair.547"* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #19
  ret void

8:                                                ; preds = %52, %4
  %9 = phi i64 [ 0, %4 ], [ %53, %52 ]
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %0, i64 %9, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, -2
  br i1 %12, label %52, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %0, i64 %9, i32 1
  %15 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %17 = icmp eq %"class.WTF::String"* %16, null
  br i1 %17, label %52, label %18, !prof !4

18:                                               ; preds = %13
  %19 = bitcast %"class.WTF::String"* %16 to i8*
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %0, i64 %9, i32 1, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %50, label %23, !prof !3

23:                                               ; preds = %18
  %24 = zext i32 %21 to i64
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 %24
  br label %26

26:                                               ; preds = %44, %23
  %27 = phi %"class.WTF::String"* [ %45, %44 ], [ %16, %23 ]
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #19
  br label %44

44:                                               ; preds = %43, %40, %26
  %45 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 1
  %46 = icmp eq %"class.WTF::String"* %45, %25
  br i1 %46, label %47, label %26

47:                                               ; preds = %44
  store i32 0, i32* %20, align 4
  %48 = bitcast %"class.WTF::Vector.630"* %14 to i8**
  %49 = load i8*, i8** %48, align 8
  br label %50

50:                                               ; preds = %47, %18
  %51 = phi i8* [ %49, %47 ], [ %19, %18 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %51) #19
  store %"class.WTF::String"* null, %"class.WTF::String"** %15, align 8
  br label %52

52:                                               ; preds = %50, %13, %8
  %53 = add nuw nsw i64 %9, 1
  %54 = icmp eq i64 %53, %5
  br i1 %54, label %6, label %8
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan22PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 4, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 4
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #19
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %9 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %8, align 8
  %10 = icmp eq %"class.blink::PersistentNode"* %9, null
  br i1 %10, label %30, label %11

11:                                               ; preds = %7
  %12 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %13 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %12, i64 0, i32 1
  %14 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %13) #19
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %18, !prof !3

16:                                               ; preds = %11
  %17 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #19
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %13, i8* %17) #19
  br label %18

18:                                               ; preds = %16, %11
  %19 = phi i8* [ %17, %16 ], [ %14, %11 ]
  %20 = bitcast i8* %19 to %"class.blink::ThreadState"**
  %21 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %21, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %22, align 8
  %24 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %8, align 8
  %25 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %23, i64 0, i32 0, i32 0
  %26 = bitcast %"class.blink::PersistentRegion"* %23 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.blink::PersistentNode"* %24 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %24, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %29, align 8
  store %"class.blink::PersistentNode"* %24, %"class.blink::PersistentNode"** %25, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %8, align 8
  br label %30

30:                                               ; preds = %7, %18
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 2, i32 0, i32 0
  %32 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %31, align 8
  %33 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32, null
  br i1 %33, label %41, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %35) #19
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %34
  tail call void @_ZN5blink17ComputedStyleBase48StyleRareNonInheritedUsageLessThan100PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* nonnull %32) #19
  %40 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32 to i8*
  tail call void @free(i8* %40) #19
  br label %41

41:                                               ; preds = %30, %34, %39
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase48StyleRareNonInheritedUsageLessThan100PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 30, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 30
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #19
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 29, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 29
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #19
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 28, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 28
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #19
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 27, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 27
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #19
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 26, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 26
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #19
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 25, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 25
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #19
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 1, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #19
  br label %43

43:                                               ; preds = %41, %37
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 0, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #19
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 1, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #19
  br label %55

55:                                               ; preds = %53, %49
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 0, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #19
  br label %61

61:                                               ; preds = %55, %59
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 1, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #19
  br label %67

67:                                               ; preds = %65, %61
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 0, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #19
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 1, i32 2
  %75 = load i8, i8* %74, align 1
  %76 = icmp eq i8 %75, 8
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %78) #19
  br label %79

79:                                               ; preds = %77, %73
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 0, i32 2
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 8
  br i1 %82, label %83, label %85

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %84) #19
  br label %85

85:                                               ; preds = %79, %83
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0
  %87 = load i8, i8* %86, align 4, !range !2
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %96, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %91 = load i8, i8* %90, align 1
  %92 = icmp eq i8 %91, 8
  br i1 %92, label %93, label %95

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %94) #19
  br label %95

95:                                               ; preds = %93, %89
  store i8 0, i8* %86, align 4
  br label %96

96:                                               ; preds = %85, %95
  %97 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  %98 = load i8, i8* %97, align 4, !range !2
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %107, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %102 = load i8, i8* %101, align 1
  %103 = icmp eq i8 %102, 8
  br i1 %103, label %104, label %106

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %105) #19
  br label %106

106:                                              ; preds = %104, %100
  store i8 0, i8* %97, align 4
  br label %107

107:                                              ; preds = %96, %106
  %108 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 17, i32 0, i32 1, i32 0
  %109 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %108, align 8
  %110 = icmp eq %"class.blink::PersistentNode"* %109, null
  br i1 %110, label %130, label %111

111:                                              ; preds = %107
  %112 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %113 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %112, i64 0, i32 1
  %114 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %113) #19
  %115 = icmp eq i8* %114, null
  br i1 %115, label %116, label %118, !prof !3

116:                                              ; preds = %111
  %117 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #19
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %113, i8* %117) #19
  br label %118

118:                                              ; preds = %116, %111
  %119 = phi i8* [ %117, %116 ], [ %114, %111 ]
  %120 = bitcast i8* %119 to %"class.blink::ThreadState"**
  %121 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %120, align 8
  %122 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %121, i64 0, i32 3, i32 0, i32 0, i32 0
  %123 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %122, align 8
  %124 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %108, align 8
  %125 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %123, i64 0, i32 0, i32 0
  %126 = bitcast %"class.blink::PersistentRegion"* %123 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.blink::PersistentNode"* %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %124, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %129, align 8
  store %"class.blink::PersistentNode"* %124, %"class.blink::PersistentNode"** %125, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %108, align 8
  br label %130

130:                                              ; preds = %107, %118
  %131 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 16, i32 0, i32 1, i32 0
  %132 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %131, align 8
  %133 = icmp eq %"class.blink::PersistentNode"* %132, null
  br i1 %133, label %153, label %134

134:                                              ; preds = %130
  %135 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %136 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %135, i64 0, i32 1
  %137 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %136) #19
  %138 = icmp eq i8* %137, null
  br i1 %138, label %139, label %141, !prof !3

139:                                              ; preds = %134
  %140 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #19
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %136, i8* %140) #19
  br label %141

141:                                              ; preds = %139, %134
  %142 = phi i8* [ %140, %139 ], [ %137, %134 ]
  %143 = bitcast i8* %142 to %"class.blink::ThreadState"**
  %144 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %143, align 8
  %145 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %144, i64 0, i32 3, i32 0, i32 0, i32 0
  %146 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %145, align 8
  %147 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %131, align 8
  %148 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %146, i64 0, i32 0, i32 0
  %149 = bitcast %"class.blink::PersistentRegion"* %146 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"class.blink::PersistentNode"* %147 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %147, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %152, align 8
  store %"class.blink::PersistentNode"* %147, %"class.blink::PersistentNode"** %148, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %131, align 8
  br label %153

153:                                              ; preds = %130, %141
  %154 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 15, i32 0
  %155 = load %"class.blink::StyleReflection"*, %"class.blink::StyleReflection"** %154, align 8
  %156 = icmp eq %"class.blink::StyleReflection"* %155, null
  br i1 %156, label %181, label %157

157:                                              ; preds = %153
  %158 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %158) #19
  %159 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 0, i32 0, i32 0, i32 0
  %160 = load i32, i32* %159, align 4
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %181

162:                                              ; preds = %157
  %163 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 3, i32 0, i32 0, i32 0
  %164 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %163, align 8
  %165 = icmp eq %"class.blink::NinePieceImageData"* %164, null
  br i1 %165, label %173, label %166

166:                                              ; preds = %162
  %167 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %164, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %167) #19
  %168 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %164, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load i32, i32* %168, align 4
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %173

171:                                              ; preds = %166
  tail call void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"* nonnull %164) #19
  %172 = bitcast %"class.blink::NinePieceImageData"* %164 to i8*
  tail call void @free(i8* %172) #19
  br label %173

173:                                              ; preds = %171, %166, %162
  %174 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 2, i32 2
  %175 = load i8, i8* %174, align 1
  %176 = icmp eq i8 %175, 8
  br i1 %176, label %177, label %179

177:                                              ; preds = %173
  %178 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %178) #19
  br label %179

179:                                              ; preds = %173, %177
  %180 = bitcast %"class.blink::StyleReflection"* %155 to i8*
  tail call void @free(i8* %180) #19
  br label %181

181:                                              ; preds = %153, %157, %179
  %182 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 14, i32 0
  %183 = load %"class.blink::TranslateTransformOperation"*, %"class.blink::TranslateTransformOperation"** %182, align 8
  %184 = icmp eq %"class.blink::TranslateTransformOperation"* %183, null
  br i1 %184, label %198, label %185

185:                                              ; preds = %181
  %186 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %183, i64 0, i32 0, i32 1, i32 0
  %187 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %186, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %187) #19
  %188 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %186, i64 0, i32 0, i32 0
  %189 = load i32, i32* %188, align 4
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %198

191:                                              ; preds = %185
  %192 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %186, i64 -2
  %193 = bitcast %"class.base::RefCounted.483"* %192 to %"class.blink::TransformOperation"*
  %194 = bitcast %"class.base::RefCounted.483"* %192 to void (%"class.blink::TransformOperation"*)***
  %195 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %194, align 8
  %196 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %195, i64 1
  %197 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %196, align 8
  tail call void %197(%"class.blink::TransformOperation"* nonnull %193) #19
  br label %198

198:                                              ; preds = %181, %185, %191
  %199 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 13, i32 0
  %200 = load %"class.blink::ScaleTransformOperation"*, %"class.blink::ScaleTransformOperation"** %199, align 8
  %201 = icmp eq %"class.blink::ScaleTransformOperation"* %200, null
  br i1 %201, label %215, label %202

202:                                              ; preds = %198
  %203 = getelementptr inbounds %"class.blink::ScaleTransformOperation", %"class.blink::ScaleTransformOperation"* %200, i64 0, i32 0, i32 1, i32 0
  %204 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %203, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %204) #19
  %205 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %203, i64 0, i32 0, i32 0
  %206 = load i32, i32* %205, align 4
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %215

208:                                              ; preds = %202
  %209 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %203, i64 -2
  %210 = bitcast %"class.base::RefCounted.483"* %209 to %"class.blink::TransformOperation"*
  %211 = bitcast %"class.base::RefCounted.483"* %209 to void (%"class.blink::TransformOperation"*)***
  %212 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %211, align 8
  %213 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %212, i64 1
  %214 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %213, align 8
  tail call void %214(%"class.blink::TransformOperation"* nonnull %210) #19
  br label %215

215:                                              ; preds = %198, %202, %208
  %216 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 12, i32 0
  %217 = load %"class.blink::RotateTransformOperation"*, %"class.blink::RotateTransformOperation"** %216, align 8
  %218 = icmp eq %"class.blink::RotateTransformOperation"* %217, null
  br i1 %218, label %232, label %219

219:                                              ; preds = %215
  %220 = getelementptr inbounds %"class.blink::RotateTransformOperation", %"class.blink::RotateTransformOperation"* %217, i64 0, i32 0, i32 1, i32 0
  %221 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %220, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %221) #19
  %222 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %220, i64 0, i32 0, i32 0
  %223 = load i32, i32* %222, align 4
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %232

225:                                              ; preds = %219
  %226 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %220, i64 -2
  %227 = bitcast %"class.base::RefCounted.483"* %226 to %"class.blink::TransformOperation"*
  %228 = bitcast %"class.base::RefCounted.483"* %226 to void (%"class.blink::TransformOperation"*)***
  %229 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %228, align 8
  %230 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %229, i64 1
  %231 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %230, align 8
  tail call void %231(%"class.blink::TransformOperation"* nonnull %227) #19
  br label %232

232:                                              ; preds = %215, %219, %225
  %233 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 11, i32 0
  %234 = load %"class.blink::BasicShape"*, %"class.blink::BasicShape"** %233, align 8
  %235 = icmp eq %"class.blink::BasicShape"* %234, null
  br i1 %235, label %249, label %236

236:                                              ; preds = %232
  %237 = getelementptr inbounds %"class.blink::BasicShape", %"class.blink::BasicShape"* %234, i64 0, i32 1, i32 0
  %238 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %237, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %238) #19
  %239 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %237, i64 0, i32 0, i32 0
  %240 = load i32, i32* %239, align 4
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %249

242:                                              ; preds = %236
  %243 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %237, i64 -2
  %244 = bitcast %"class.base::RefCounted.480"* %243 to %"class.blink::BasicShape"*
  %245 = bitcast %"class.base::RefCounted.480"* %243 to void (%"class.blink::BasicShape"*)***
  %246 = load void (%"class.blink::BasicShape"*)**, void (%"class.blink::BasicShape"*)*** %245, align 8
  %247 = getelementptr inbounds void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %246, i64 1
  %248 = load void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %247, align 8
  tail call void %248(%"class.blink::BasicShape"* nonnull %244) #19
  br label %249

249:                                              ; preds = %232, %236, %242
  %250 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 10, i32 0
  %251 = load %"class.blink::ClipPathOperation"*, %"class.blink::ClipPathOperation"** %250, align 8
  %252 = icmp eq %"class.blink::ClipPathOperation"* %251, null
  br i1 %252, label %266, label %253

253:                                              ; preds = %249
  %254 = getelementptr inbounds %"class.blink::ClipPathOperation", %"class.blink::ClipPathOperation"* %251, i64 0, i32 1, i32 0
  %255 = getelementptr inbounds %"class.base::RefCounted.477", %"class.base::RefCounted.477"* %254, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %255) #19
  %256 = getelementptr inbounds %"class.base::RefCounted.477", %"class.base::RefCounted.477"* %254, i64 0, i32 0, i32 0
  %257 = load i32, i32* %256, align 4
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %266

259:                                              ; preds = %253
  %260 = getelementptr inbounds %"class.base::RefCounted.477", %"class.base::RefCounted.477"* %254, i64 -2
  %261 = bitcast %"class.base::RefCounted.477"* %260 to %"class.blink::ClipPathOperation"*
  %262 = bitcast %"class.base::RefCounted.477"* %260 to void (%"class.blink::ClipPathOperation"*)***
  %263 = load void (%"class.blink::ClipPathOperation"*)**, void (%"class.blink::ClipPathOperation"*)*** %262, align 8
  %264 = getelementptr inbounds void (%"class.blink::ClipPathOperation"*)*, void (%"class.blink::ClipPathOperation"*)** %263, i64 1
  %265 = load void (%"class.blink::ClipPathOperation"*)*, void (%"class.blink::ClipPathOperation"*)** %264, align 8
  tail call void %265(%"class.blink::ClipPathOperation"* nonnull %261) #19
  br label %266

266:                                              ; preds = %249, %253, %259
  %267 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %268 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %267, align 8
  %269 = icmp eq %"class.WTF::StringImpl"* %268, null
  br i1 %269, label %283, label %270

270:                                              ; preds = %266
  %271 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %268, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %272 = load atomic i32, i32* %271 monotonic, align 4
  %273 = and i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %268, i64 0, i32 0
  %276 = load i32, i32* %275, align 4
  br i1 %274, label %277, label %279

277:                                              ; preds = %270
  %278 = add i32 %276, -1
  store i32 %278, i32* %275, align 4
  br label %279

279:                                              ; preds = %277, %270
  %280 = phi i32 [ %278, %277 ], [ %276, %270 ]
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %282, label %283

282:                                              ; preds = %279
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %268) #19
  br label %283

283:                                              ; preds = %266, %279, %282
  %284 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 8, i32 2, i32 0, i32 0, i32 0
  %285 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %284, align 8
  %286 = icmp eq %"class.WTF::StringImpl"* %285, null
  br i1 %286, label %300, label %287

287:                                              ; preds = %283
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %289 = load atomic i32, i32* %288 monotonic, align 4
  %290 = and i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 0
  %293 = load i32, i32* %292, align 4
  br i1 %291, label %294, label %296

294:                                              ; preds = %287
  %295 = add i32 %293, -1
  store i32 %295, i32* %292, align 4
  br label %296

296:                                              ; preds = %294, %287
  %297 = phi i32 [ %295, %294 ], [ %293, %287 ]
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %299, label %300

299:                                              ; preds = %296
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %285) #19
  br label %300

300:                                              ; preds = %283, %296, %299
  %301 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 7, i32 2, i32 0, i32 0, i32 0
  %302 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %301, align 8
  %303 = icmp eq %"class.WTF::StringImpl"* %302, null
  br i1 %303, label %317, label %304

304:                                              ; preds = %300
  %305 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %306 = load atomic i32, i32* %305 monotonic, align 4
  %307 = and i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 0, i32 0
  %310 = load i32, i32* %309, align 4
  br i1 %308, label %311, label %313

311:                                              ; preds = %304
  %312 = add i32 %310, -1
  store i32 %312, i32* %309, align 4
  br label %313

313:                                              ; preds = %311, %304
  %314 = phi i32 [ %312, %311 ], [ %310, %304 ]
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %316, label %317

316:                                              ; preds = %313
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %302) #19
  br label %317

317:                                              ; preds = %300, %313, %316
  %318 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 6, i32 2, i32 0, i32 0, i32 0
  %319 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %318, align 8
  %320 = icmp eq %"class.WTF::StringImpl"* %319, null
  br i1 %320, label %334, label %321

321:                                              ; preds = %317
  %322 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %319, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %323 = load atomic i32, i32* %322 monotonic, align 4
  %324 = and i32 %323, 2
  %325 = icmp eq i32 %324, 0
  %326 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %319, i64 0, i32 0
  %327 = load i32, i32* %326, align 4
  br i1 %325, label %328, label %330

328:                                              ; preds = %321
  %329 = add i32 %327, -1
  store i32 %329, i32* %326, align 4
  br label %330

330:                                              ; preds = %328, %321
  %331 = phi i32 [ %329, %328 ], [ %327, %321 ]
  %332 = icmp eq i32 %331, 0
  br i1 %332, label %333, label %334

333:                                              ; preds = %330
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %319) #19
  br label %334

334:                                              ; preds = %317, %330, %333
  %335 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i32 0
  %336 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %335, align 8
  %337 = icmp eq %"class.WTF::StringImpl"* %336, null
  br i1 %337, label %351, label %338

338:                                              ; preds = %334
  %339 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %340 = load atomic i32, i32* %339 monotonic, align 4
  %341 = and i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 0
  %344 = load i32, i32* %343, align 4
  br i1 %342, label %345, label %347

345:                                              ; preds = %338
  %346 = add i32 %344, -1
  store i32 %346, i32* %343, align 4
  br label %347

347:                                              ; preds = %345, %338
  %348 = phi i32 [ %346, %345 ], [ %344, %338 ]
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %350, label %351

350:                                              ; preds = %347
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %336) #19
  br label %351

351:                                              ; preds = %334, %347, %350
  %352 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 4
  %353 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 4, i32 1
  %354 = getelementptr inbounds %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464"* %353, i64 0, i32 0, i32 0, i32 0
  %355 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %354, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %354, align 8
  %356 = icmp eq %"class.blink::NGGridTrackList"* %355, null
  br i1 %356, label %359, label %357

357:                                              ; preds = %351
  %358 = bitcast %"class.std::__1::unique_ptr.464"* %353 to %"struct.std::__1::default_delete.473"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"* %358, %"class.blink::NGGridTrackList"* nonnull %355) #19
  br label %359

359:                                              ; preds = %357, %351
  %360 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %352, i64 0, i32 0, i32 0, i32 0, i32 0
  %361 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %360, align 8
  %362 = icmp eq %"class.blink::GridTrackSize"* %361, null
  br i1 %362, label %398, label %363, !prof !4

363:                                              ; preds = %359
  %364 = bitcast %"class.blink::GridTrackSize"* %361 to i8*
  %365 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %366 = load i32, i32* %365, align 4
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %396, label %368, !prof !3

368:                                              ; preds = %363
  %369 = zext i32 %366 to i64
  %370 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %361, i64 %369
  br label %371

371:                                              ; preds = %390, %368
  %372 = phi %"class.blink::GridTrackSize"* [ %391, %390 ], [ %361, %368 ]
  %373 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 4, i32 0, i32 2
  %374 = load i8, i8* %373, align 1
  %375 = icmp eq i8 %374, 8
  br i1 %375, label %376, label %378

376:                                              ; preds = %371
  %377 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %377) #19
  br label %378

378:                                              ; preds = %376, %371
  %379 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 3, i32 0, i32 2
  %380 = load i8, i8* %379, align 1
  %381 = icmp eq i8 %380, 8
  br i1 %381, label %382, label %384

382:                                              ; preds = %378
  %383 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %383) #19
  br label %384

384:                                              ; preds = %382, %378
  %385 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 2, i32 0, i32 2
  %386 = load i8, i8* %385, align 1
  %387 = icmp eq i8 %386, 8
  br i1 %387, label %388, label %390

388:                                              ; preds = %384
  %389 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %389) #19
  br label %390

390:                                              ; preds = %388, %384
  %391 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 1
  %392 = icmp eq %"class.blink::GridTrackSize"* %391, %370
  br i1 %392, label %393, label %371

393:                                              ; preds = %390
  store i32 0, i32* %365, align 4
  %394 = bitcast %"class.blink::GridTrackList"* %352 to i8**
  %395 = load i8*, i8** %394, align 8
  br label %396

396:                                              ; preds = %393, %363
  %397 = phi i8* [ %395, %393 ], [ %364, %363 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %397) #19
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %360, align 8
  br label %398

398:                                              ; preds = %359, %396
  %399 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 3
  %400 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 3, i32 1
  %401 = getelementptr inbounds %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464"* %400, i64 0, i32 0, i32 0, i32 0
  %402 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %401, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %401, align 8
  %403 = icmp eq %"class.blink::NGGridTrackList"* %402, null
  br i1 %403, label %406, label %404

404:                                              ; preds = %398
  %405 = bitcast %"class.std::__1::unique_ptr.464"* %400 to %"struct.std::__1::default_delete.473"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"* %405, %"class.blink::NGGridTrackList"* nonnull %402) #19
  br label %406

406:                                              ; preds = %404, %398
  %407 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %399, i64 0, i32 0, i32 0, i32 0, i32 0
  %408 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %407, align 8
  %409 = icmp eq %"class.blink::GridTrackSize"* %408, null
  br i1 %409, label %445, label %410, !prof !4

410:                                              ; preds = %406
  %411 = bitcast %"class.blink::GridTrackSize"* %408 to i8*
  %412 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %413 = load i32, i32* %412, align 4
  %414 = icmp eq i32 %413, 0
  br i1 %414, label %443, label %415, !prof !3

415:                                              ; preds = %410
  %416 = zext i32 %413 to i64
  %417 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %408, i64 %416
  br label %418

418:                                              ; preds = %437, %415
  %419 = phi %"class.blink::GridTrackSize"* [ %438, %437 ], [ %408, %415 ]
  %420 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 4, i32 0, i32 2
  %421 = load i8, i8* %420, align 1
  %422 = icmp eq i8 %421, 8
  br i1 %422, label %423, label %425

423:                                              ; preds = %418
  %424 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %424) #19
  br label %425

425:                                              ; preds = %423, %418
  %426 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 3, i32 0, i32 2
  %427 = load i8, i8* %426, align 1
  %428 = icmp eq i8 %427, 8
  br i1 %428, label %429, label %431

429:                                              ; preds = %425
  %430 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %430) #19
  br label %431

431:                                              ; preds = %429, %425
  %432 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 2, i32 0, i32 2
  %433 = load i8, i8* %432, align 1
  %434 = icmp eq i8 %433, 8
  br i1 %434, label %435, label %437

435:                                              ; preds = %431
  %436 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %436) #19
  br label %437

437:                                              ; preds = %435, %431
  %438 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 1
  %439 = icmp eq %"class.blink::GridTrackSize"* %438, %417
  br i1 %439, label %440, label %418

440:                                              ; preds = %437
  store i32 0, i32* %412, align 4
  %441 = bitcast %"class.blink::GridTrackList"* %399 to i8**
  %442 = load i8*, i8** %441, align 8
  br label %443

443:                                              ; preds = %440, %410
  %444 = phi i8* [ %442, %440 ], [ %411, %410 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %444) #19
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %407, align 8
  br label %445

445:                                              ; preds = %406, %443
  %446 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 2
  %447 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 2, i32 1
  %448 = getelementptr inbounds %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464"* %447, i64 0, i32 0, i32 0, i32 0
  %449 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %448, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %448, align 8
  %450 = icmp eq %"class.blink::NGGridTrackList"* %449, null
  br i1 %450, label %453, label %451

451:                                              ; preds = %445
  %452 = bitcast %"class.std::__1::unique_ptr.464"* %447 to %"struct.std::__1::default_delete.473"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"* %452, %"class.blink::NGGridTrackList"* nonnull %449) #19
  br label %453

453:                                              ; preds = %451, %445
  %454 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %446, i64 0, i32 0, i32 0, i32 0, i32 0
  %455 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %454, align 8
  %456 = icmp eq %"class.blink::GridTrackSize"* %455, null
  br i1 %456, label %492, label %457, !prof !4

457:                                              ; preds = %453
  %458 = bitcast %"class.blink::GridTrackSize"* %455 to i8*
  %459 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %460 = load i32, i32* %459, align 4
  %461 = icmp eq i32 %460, 0
  br i1 %461, label %490, label %462, !prof !3

462:                                              ; preds = %457
  %463 = zext i32 %460 to i64
  %464 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %455, i64 %463
  br label %465

465:                                              ; preds = %484, %462
  %466 = phi %"class.blink::GridTrackSize"* [ %485, %484 ], [ %455, %462 ]
  %467 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 4, i32 0, i32 2
  %468 = load i8, i8* %467, align 1
  %469 = icmp eq i8 %468, 8
  br i1 %469, label %470, label %472

470:                                              ; preds = %465
  %471 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %471) #19
  br label %472

472:                                              ; preds = %470, %465
  %473 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 3, i32 0, i32 2
  %474 = load i8, i8* %473, align 1
  %475 = icmp eq i8 %474, 8
  br i1 %475, label %476, label %478

476:                                              ; preds = %472
  %477 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %477) #19
  br label %478

478:                                              ; preds = %476, %472
  %479 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 2, i32 0, i32 2
  %480 = load i8, i8* %479, align 1
  %481 = icmp eq i8 %480, 8
  br i1 %481, label %482, label %484

482:                                              ; preds = %478
  %483 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %483) #19
  br label %484

484:                                              ; preds = %482, %478
  %485 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 1
  %486 = icmp eq %"class.blink::GridTrackSize"* %485, %464
  br i1 %486, label %487, label %465

487:                                              ; preds = %484
  store i32 0, i32* %459, align 4
  %488 = bitcast %"class.blink::GridTrackList"* %446 to i8**
  %489 = load i8*, i8** %488, align 8
  br label %490

490:                                              ; preds = %487, %457
  %491 = phi i8* [ %489, %487 ], [ %458, %457 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %491) #19
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %454, align 8
  br label %492

492:                                              ; preds = %453, %490
  %493 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 1
  %494 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 1, i32 1
  %495 = getelementptr inbounds %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464"* %494, i64 0, i32 0, i32 0, i32 0
  %496 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %495, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %495, align 8
  %497 = icmp eq %"class.blink::NGGridTrackList"* %496, null
  br i1 %497, label %500, label %498

498:                                              ; preds = %492
  %499 = bitcast %"class.std::__1::unique_ptr.464"* %494 to %"struct.std::__1::default_delete.473"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"* %499, %"class.blink::NGGridTrackList"* nonnull %496) #19
  br label %500

500:                                              ; preds = %498, %492
  %501 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %493, i64 0, i32 0, i32 0, i32 0, i32 0
  %502 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %501, align 8
  %503 = icmp eq %"class.blink::GridTrackSize"* %502, null
  br i1 %503, label %539, label %504, !prof !4

504:                                              ; preds = %500
  %505 = bitcast %"class.blink::GridTrackSize"* %502 to i8*
  %506 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %507 = load i32, i32* %506, align 4
  %508 = icmp eq i32 %507, 0
  br i1 %508, label %537, label %509, !prof !3

509:                                              ; preds = %504
  %510 = zext i32 %507 to i64
  %511 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %502, i64 %510
  br label %512

512:                                              ; preds = %531, %509
  %513 = phi %"class.blink::GridTrackSize"* [ %532, %531 ], [ %502, %509 ]
  %514 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 4, i32 0, i32 2
  %515 = load i8, i8* %514, align 1
  %516 = icmp eq i8 %515, 8
  br i1 %516, label %517, label %519

517:                                              ; preds = %512
  %518 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %518) #19
  br label %519

519:                                              ; preds = %517, %512
  %520 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 3, i32 0, i32 2
  %521 = load i8, i8* %520, align 1
  %522 = icmp eq i8 %521, 8
  br i1 %522, label %523, label %525

523:                                              ; preds = %519
  %524 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %524) #19
  br label %525

525:                                              ; preds = %523, %519
  %526 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 2, i32 0, i32 2
  %527 = load i8, i8* %526, align 1
  %528 = icmp eq i8 %527, 8
  br i1 %528, label %529, label %531

529:                                              ; preds = %525
  %530 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %530) #19
  br label %531

531:                                              ; preds = %529, %525
  %532 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 1
  %533 = icmp eq %"class.blink::GridTrackSize"* %532, %511
  br i1 %533, label %534, label %512

534:                                              ; preds = %531
  store i32 0, i32* %506, align 4
  %535 = bitcast %"class.blink::GridTrackList"* %493 to i8**
  %536 = load i8*, i8** %535, align 8
  br label %537

537:                                              ; preds = %534, %504
  %538 = phi i8* [ %536, %534 ], [ %505, %504 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %538) #19
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %501, align 8
  br label %539

539:                                              ; preds = %500, %537
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"*, %"class.blink::NGGridTrackList"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.blink::NGGridTrackList"* %1, null
  br i1 %3, label %57, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.459", %"class.WTF::Vector.459"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %6, align 8
  %8 = icmp eq %"class.blink::GridTrackSize"* %7, null
  br i1 %8, label %44, label %9, !prof !4

9:                                                ; preds = %4
  %10 = bitcast %"class.blink::GridTrackSize"* %7 to i8*
  %11 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %42, label %14, !prof !3

14:                                               ; preds = %9
  %15 = zext i32 %12 to i64
  %16 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %7, i64 %15
  br label %17

17:                                               ; preds = %36, %14
  %18 = phi %"class.blink::GridTrackSize"* [ %37, %36 ], [ %7, %14 ]
  %19 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 4, i32 0, i32 2
  %20 = load i8, i8* %19, align 1
  %21 = icmp eq i8 %20, 8
  br i1 %21, label %22, label %24

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %23) #19
  br label %24

24:                                               ; preds = %22, %17
  %25 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 3, i32 0, i32 2
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %26, 8
  br i1 %27, label %28, label %30

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %29) #19
  br label %30

30:                                               ; preds = %28, %24
  %31 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 2, i32 0, i32 2
  %32 = load i8, i8* %31, align 1
  %33 = icmp eq i8 %32, 8
  br i1 %33, label %34, label %36

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %35) #19
  br label %36

36:                                               ; preds = %34, %30
  %37 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 1
  %38 = icmp eq %"class.blink::GridTrackSize"* %37, %16
  br i1 %38, label %39, label %17

39:                                               ; preds = %36
  store i32 0, i32* %11, align 4
  %40 = bitcast %"class.WTF::Vector.459"* %5 to i8**
  %41 = load i8*, i8** %40, align 8
  br label %42

42:                                               ; preds = %39, %9
  %43 = phi i8* [ %41, %39 ], [ %10, %9 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %43) #19
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %6, align 8
  br label %44

44:                                               ; preds = %42, %4
  %45 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.blink::NGGridTrackRepeater"*, %"struct.blink::NGGridTrackRepeater"** %45, align 8
  %47 = icmp eq %"struct.blink::NGGridTrackRepeater"* %46, null
  %48 = bitcast %"struct.blink::NGGridTrackRepeater"* %46 to i8*
  br i1 %47, label %55, label %49, !prof !4

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %54, label %53, !prof !3

53:                                               ; preds = %49
  store i32 0, i32* %50, align 4
  br label %54

54:                                               ; preds = %53, %49
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %48) #19
  br label %55

55:                                               ; preds = %44, %54
  %56 = bitcast %"class.blink::NGGridTrackList"* %1 to i8*
  tail call void @_ZdlPv(i8* %56) #20
  br label %57

57:                                               ; preds = %55, %2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase44StyleRareInheritedUsageLessThan64PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 13, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 13
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #19
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 12, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 12
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #19
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 11, i32 0, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 11, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #19
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 10, i32 0, i32 1, i32 0
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %22 = icmp eq %"class.blink::PersistentNode"* %21, null
  br i1 %22, label %42, label %23

23:                                               ; preds = %19
  %24 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %25 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %24, i64 0, i32 1
  %26 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %25) #19
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %30, !prof !3

28:                                               ; preds = %23
  %29 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #19
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %25, i8* %29) #19
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi i8* [ %29, %28 ], [ %26, %23 ]
  %32 = bitcast i8* %31 to %"class.blink::ThreadState"**
  %33 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %34, align 8
  %36 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %37 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %35, i64 0, i32 0, i32 0
  %38 = bitcast %"class.blink::PersistentRegion"* %35 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %37, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %20, align 8
  br label %42

42:                                               ; preds = %19, %30
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 9, i32 0, i32 1, i32 0
  %44 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %43, align 8
  %45 = icmp eq %"class.blink::PersistentNode"* %44, null
  br i1 %45, label %65, label %46

46:                                               ; preds = %42
  %47 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %48 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %47, i64 0, i32 1
  %49 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %48) #19
  %50 = icmp eq i8* %49, null
  br i1 %50, label %51, label %53, !prof !3

51:                                               ; preds = %46
  %52 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #19
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %48, i8* %52) #19
  br label %53

53:                                               ; preds = %51, %46
  %54 = phi i8* [ %52, %51 ], [ %49, %46 ]
  %55 = bitcast i8* %54 to %"class.blink::ThreadState"**
  %56 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %56, i64 0, i32 3, i32 0, i32 0, i32 0
  %58 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %57, align 8
  %59 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %43, align 8
  %60 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %58, i64 0, i32 0, i32 0
  %61 = bitcast %"class.blink::PersistentRegion"* %58 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"class.blink::PersistentNode"* %59 to i64*
  store i64 %62, i64* %63, align 8
  %64 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %59, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %64, align 8
  store %"class.blink::PersistentNode"* %59, %"class.blink::PersistentNode"** %60, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %43, align 8
  br label %65

65:                                               ; preds = %42, %53
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 8, i32 0
  %67 = load %"class.blink::ShadowList"*, %"class.blink::ShadowList"** %66, align 8
  %68 = icmp eq %"class.blink::ShadowList"* %67, null
  br i1 %68, label %91, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %67, i64 0, i32 0, i32 0
  %71 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %67, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %71) #19
  %72 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %67, i64 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %91

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %70, i64 2
  %77 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %70, i64 5, i32 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %81, label %80, !prof !3

80:                                               ; preds = %75
  store i32 0, i32* %77, align 4
  br label %81

81:                                               ; preds = %80, %75
  %82 = bitcast %"class.base::RefCounted.300"* %76 to %"class.blink::ShadowData"**
  %83 = load %"class.blink::ShadowData"*, %"class.blink::ShadowData"** %82, align 8
  %84 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %70, i64 6
  %85 = bitcast %"class.base::RefCounted.300"* %84 to %"class.blink::ShadowData"*
  %86 = icmp eq %"class.blink::ShadowData"* %83, %85
  br i1 %86, label %89, label %87, !prof !4

87:                                               ; preds = %81
  %88 = bitcast %"class.base::RefCounted.300"* %76 to %"class.WTF::VectorBuffer.302"*
  tail call void @_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.302"* %88, %"class.blink::ShadowData"* %83) #19
  br label %89

89:                                               ; preds = %87, %81
  %90 = bitcast %"class.blink::ShadowList"* %67 to i8*
  tail call void @free(i8* %90) #19
  br label %91

91:                                               ; preds = %65, %69, %89
  %92 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 7, i32 0
  %93 = load %"class.blink::QuotesData"*, %"class.blink::QuotesData"** %92, align 8
  %94 = icmp eq %"class.blink::QuotesData"* %93, null
  br i1 %94, label %158, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %96) #19
  %97 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %158

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 1
  %102 = getelementptr inbounds %"class.WTF::Vector.292", %"class.WTF::Vector.292"* %101, i64 0, i32 0, i32 0, i32 0
  %103 = load %"struct.std::__1::pair.295"*, %"struct.std::__1::pair.295"** %102, align 8
  %104 = icmp eq %"struct.std::__1::pair.295"* %103, null
  br i1 %104, label %156, label %105, !prof !4

105:                                              ; preds = %100
  %106 = bitcast %"struct.std::__1::pair.295"* %103 to i8*
  %107 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 1, i32 0, i32 0, i32 2
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %154, label %110, !prof !3

110:                                              ; preds = %105
  %111 = zext i32 %108 to i64
  %112 = getelementptr inbounds %"struct.std::__1::pair.295", %"struct.std::__1::pair.295"* %103, i64 %111
  br label %113

113:                                              ; preds = %148, %110
  %114 = phi %"struct.std::__1::pair.295"* [ %149, %148 ], [ %103, %110 ]
  %115 = getelementptr inbounds %"struct.std::__1::pair.295", %"struct.std::__1::pair.295"* %114, i64 0, i32 1, i32 0, i32 0
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %131, label %118

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  br i1 %122, label %125, label %127

125:                                              ; preds = %118
  %126 = add i32 %124, -1
  store i32 %126, i32* %123, align 4
  br label %127

127:                                              ; preds = %125, %118
  %128 = phi i32 [ %126, %125 ], [ %124, %118 ]
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #19
  br label %131

131:                                              ; preds = %130, %127, %113
  %132 = getelementptr inbounds %"struct.std::__1::pair.295", %"struct.std::__1::pair.295"* %114, i64 0, i32 0, i32 0, i32 0
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %148, label %135

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %135
  %143 = add i32 %141, -1
  store i32 %143, i32* %140, align 4
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i32 [ %143, %142 ], [ %141, %135 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %133) #19
  br label %148

148:                                              ; preds = %147, %144, %131
  %149 = getelementptr inbounds %"struct.std::__1::pair.295", %"struct.std::__1::pair.295"* %114, i64 1
  %150 = icmp eq %"struct.std::__1::pair.295"* %149, %112
  br i1 %150, label %151, label %113

151:                                              ; preds = %148
  store i32 0, i32* %107, align 4
  %152 = bitcast %"class.WTF::Vector.292"* %101 to i8**
  %153 = load i8*, i8** %152, align 8
  br label %154

154:                                              ; preds = %151, %105
  %155 = phi i8* [ %153, %151 ], [ %106, %105 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %155) #19
  br label %156

156:                                              ; preds = %100, %154
  %157 = bitcast %"class.blink::QuotesData"* %93 to i8*
  tail call void @free(i8* %157) #19
  br label %158

158:                                              ; preds = %91, %95, %156
  %159 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %160 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %159, align 8
  %161 = icmp eq %"class.WTF::StringImpl"* %160, null
  br i1 %161, label %175, label %162

162:                                              ; preds = %158
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = load atomic i32, i32* %163 monotonic, align 4
  %165 = and i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 0
  %168 = load i32, i32* %167, align 4
  br i1 %166, label %169, label %171

169:                                              ; preds = %162
  %170 = add i32 %168, -1
  store i32 %170, i32* %167, align 4
  br label %171

171:                                              ; preds = %169, %162
  %172 = phi i32 [ %170, %169 ], [ %168, %162 ]
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %175

174:                                              ; preds = %171
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %160) #19
  br label %175

175:                                              ; preds = %158, %171, %174
  %176 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %177 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %176, align 8
  %178 = icmp eq %"class.WTF::StringImpl"* %177, null
  br i1 %178, label %192, label %179

179:                                              ; preds = %175
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %181 = load atomic i32, i32* %180 monotonic, align 4
  %182 = and i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 0
  %185 = load i32, i32* %184, align 4
  br i1 %183, label %186, label %188

186:                                              ; preds = %179
  %187 = add i32 %185, -1
  store i32 %187, i32* %184, align 4
  br label %188

188:                                              ; preds = %186, %179
  %189 = phi i32 [ %187, %186 ], [ %185, %179 ]
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %192

191:                                              ; preds = %188
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %177) #19
  br label %192

192:                                              ; preds = %175, %188, %191
  %193 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 4
  %194 = getelementptr inbounds %"class.WTF::Vector.284", %"class.WTF::Vector.284"* %193, i64 0, i32 0, i32 0, i32 0
  %195 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %194, align 8
  %196 = icmp eq %"class.WTF::AtomicString"* %195, null
  br i1 %196, label %231, label %197, !prof !4

197:                                              ; preds = %192
  %198 = bitcast %"class.WTF::AtomicString"* %195 to i8*
  %199 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %200 = load i32, i32* %199, align 4
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %229, label %202, !prof !3

202:                                              ; preds = %197
  %203 = zext i32 %200 to i64
  %204 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %195, i64 %203
  br label %205

205:                                              ; preds = %223, %202
  %206 = phi %"class.WTF::AtomicString"* [ %224, %223 ], [ %195, %202 ]
  %207 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %206, i64 0, i32 0, i32 0, i32 0
  %208 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %207, align 8
  %209 = icmp eq %"class.WTF::StringImpl"* %208, null
  br i1 %209, label %223, label %210

210:                                              ; preds = %205
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load atomic i32, i32* %211 monotonic, align 4
  %213 = and i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %216 = load i32, i32* %215, align 4
  br i1 %214, label %217, label %219

217:                                              ; preds = %210
  %218 = add i32 %216, -1
  store i32 %218, i32* %215, align 4
  br label %219

219:                                              ; preds = %217, %210
  %220 = phi i32 [ %218, %217 ], [ %216, %210 ]
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %223

222:                                              ; preds = %219
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %208) #19
  br label %223

223:                                              ; preds = %222, %219, %205
  %224 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %206, i64 1
  %225 = icmp eq %"class.WTF::AtomicString"* %224, %204
  br i1 %225, label %226, label %205

226:                                              ; preds = %223
  store i32 0, i32* %199, align 4
  %227 = bitcast %"class.WTF::Vector.284"* %193 to i8**
  %228 = load i8*, i8** %227, align 8
  br label %229

229:                                              ; preds = %226, %197
  %230 = phi i8* [ %228, %226 ], [ %198, %197 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %230) #19
  store %"class.WTF::AtomicString"* null, %"class.WTF::AtomicString"** %194, align 8
  br label %231

231:                                              ; preds = %192, %229
  %232 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 3, i32 0, i32 0
  %233 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"** %232, align 8
  %234 = icmp eq %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233, null
  br i1 %234, label %242, label %235

235:                                              ; preds = %231
  %236 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %236) #19
  %237 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233, i64 0, i32 0, i32 0, i32 0, i32 0
  %238 = load i32, i32* %237, align 4
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %242

240:                                              ; preds = %235
  %241 = bitcast %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233 to i8*
  tail call void @free(i8* %241) #19
  br label %242

242:                                              ; preds = %231, %235, %240
  %243 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 2, i32 0, i32 0
  %244 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %243, align 8
  %245 = icmp eq %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244, null
  br i1 %245, label %253, label %246

246:                                              ; preds = %242
  %247 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %247) #19
  %248 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244, i64 0, i32 0, i32 0, i32 0, i32 0
  %249 = load i32, i32* %248, align 4
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %253

251:                                              ; preds = %246
  tail call void @_ZN5blink17ComputedStyleBase47StyleRareInheritedUsageLessThan64PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* nonnull %244) #19
  %252 = bitcast %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244 to i8*
  tail call void @free(i8* %252) #19
  br label %253

253:                                              ; preds = %242, %246, %251
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase47StyleRareInheritedUsageLessThan64PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 5, i32 0, i32 1, i32 0
  %3 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %4 = icmp eq %"class.blink::PersistentNode"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #19
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #19
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #19
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %16, align 8
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %17, i64 0, i32 0, i32 0
  %20 = bitcast %"class.blink::PersistentRegion"* %17 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::PersistentNode"* %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %18, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %23, align 8
  store %"class.blink::PersistentNode"* %18, %"class.blink::PersistentNode"** %19, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %2, align 8
  br label %24

24:                                               ; preds = %1, %12
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 4, i32 0
  %26 = load %"class.blink::StyleInitialData"*, %"class.blink::StyleInitialData"** %25, align 8
  %27 = icmp eq %"class.blink::StyleInitialData"* %26, null
  br i1 %27, label %38, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::StyleInitialData", %"class.blink::StyleInitialData"* %26, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %29) #19
  %30 = getelementptr inbounds %"class.blink::StyleInitialData", %"class.blink::StyleInitialData"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %38

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.blink::StyleInitialData", %"class.blink::StyleInitialData"* %26, i64 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.base::RefCounted.261", %"class.base::RefCounted.261"* %34, i64 2
  %36 = bitcast %"class.base::RefCounted.261"* %35 to %"class.blink::StyleVariables"*
  tail call void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"* %36) #19
  %37 = bitcast %"class.blink::StyleInitialData"* %26 to i8*
  tail call void @free(i8* %37) #19
  br label %38

38:                                               ; preds = %24, %28, %33
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 3, i32 0
  %40 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %39, align 8
  %41 = icmp eq %"class.base::RefCountedData"* %40, null
  br i1 %41, label %82, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %40, i64 0, i32 0
  %44 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw sub i32* %44, i32 1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %82

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.base::RefCountedThreadSafe.253", %"class.base::RefCountedThreadSafe.253"* %43, i64 2
  %49 = bitcast %"class.base::RefCountedThreadSafe.253"* %48 to %"class.blink::AppliedTextDecoration"**
  %50 = load %"class.blink::AppliedTextDecoration"*, %"class.blink::AppliedTextDecoration"** %49, align 8
  %51 = icmp eq %"class.blink::AppliedTextDecoration"* %50, null
  br i1 %51, label %80, label %52, !prof !4

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.base::RefCountedThreadSafe.253", %"class.base::RefCountedThreadSafe.253"* %43, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %77, label %56, !prof !3

56:                                               ; preds = %52
  %57 = zext i32 %54 to i64
  %58 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %50, i64 %57
  br label %59

59:                                               ; preds = %72, %56
  %60 = phi %"class.blink::AppliedTextDecoration"* [ %73, %72 ], [ %50, %56 ]
  %61 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 3, i32 2
  %62 = load i8, i8* %61, align 1
  %63 = icmp eq i8 %62, 8
  br i1 %63, label %64, label %66

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %65) #19
  br label %66

66:                                               ; preds = %64, %59
  %67 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 2, i32 0, i32 2
  %68 = load i8, i8* %67, align 1
  %69 = icmp eq i8 %68, 8
  br i1 %69, label %70, label %72

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %71) #19
  br label %72

72:                                               ; preds = %70, %66
  %73 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 1
  %74 = icmp eq %"class.blink::AppliedTextDecoration"* %73, %58
  br i1 %74, label %75, label %59

75:                                               ; preds = %72
  store i32 0, i32* %53, align 4
  %76 = load %"class.blink::AppliedTextDecoration"*, %"class.blink::AppliedTextDecoration"** %49, align 8
  br label %77

77:                                               ; preds = %75, %52
  %78 = phi %"class.blink::AppliedTextDecoration"* [ %50, %52 ], [ %76, %75 ]
  %79 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %78, i64 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %79) #19
  br label %80

80:                                               ; preds = %77, %47
  %81 = bitcast %"class.base::RefCountedData"* %40 to i8*
  tail call void @_ZdlPv(i8* %81) #20
  br label %82

82:                                               ; preds = %38, %42, %80
  %83 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #19
  br label %99

99:                                               ; preds = %82, %95, %98
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink4FontD1Ev(%"class.blink::Font"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"struct.WTF::KeyValuePair.3039"* @_ZN3WTF9HashTableIPN5blink10LayoutTextENS_12KeyValuePairIS3_PNS1_12_GLOBAL__N_115SecureTextTimerEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6RehashEjPS8_(i32, %"struct.WTF::KeyValuePair.3039"* readnone) unnamed_addr #0 align 2 {
  %3 = zext i32 %0 to i64
  %4 = shl nuw nsw i64 %3, 4
  %5 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %4, i8* getelementptr inbounds ([135 x i8], [135 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPN5blink10LayoutTextEPNS2_12_GLOBAL__N_115SecureTextTimerEEEEEPKcv, i64 0, i64 0)) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %5, i8 0, i64 %4, i1 false) #19
  %6 = bitcast i8* %5 to %"struct.WTF::KeyValuePair.3039"*
  %7 = ptrtoint i8* %5 to i64
  %8 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_119GetSecureTextTimersEvE5s_map, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %2
  %11 = load i64, i64* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_119GetSecureTextTimersEvE5s_map to i64*), align 8
  br label %17

12:                                               ; preds = %2
  %13 = add i32 %0, -1
  %14 = zext i32 %13 to i64
  %15 = load %"struct.WTF::KeyValuePair.3039"*, %"struct.WTF::KeyValuePair.3039"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_119GetSecureTextTimersEvE5s_map to %"struct.WTF::KeyValuePair.3039"**), align 8
  %16 = ptrtoint %"struct.WTF::KeyValuePair.3039"* %15 to i64
  br label %23

17:                                               ; preds = %114, %10
  %18 = phi i64 [ %11, %10 ], [ %115, %114 ]
  %19 = phi %"struct.WTF::KeyValuePair.3039"* [ null, %10 ], [ %118, %114 ]
  store atomic i64 %7, i64* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_119GetSecureTextTimersEvE5s_map to i64*) monotonic, align 8
  store i32 %0, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_119GetSecureTextTimersEvE5s_map, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %20 = icmp eq i64 %18, 0
  br i1 %20, label %121, label %21

21:                                               ; preds = %17
  %22 = inttoptr i64 %18 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %22) #19
  br label %121

23:                                               ; preds = %114, %12
  %24 = phi i64 [ %16, %12 ], [ %115, %114 ]
  %25 = phi i32 [ %8, %12 ], [ %116, %114 ]
  %26 = phi %"struct.WTF::KeyValuePair.3039"* [ %15, %12 ], [ %117, %114 ]
  %27 = phi %"struct.WTF::KeyValuePair.3039"* [ null, %12 ], [ %118, %114 ]
  %28 = phi i32 [ 0, %12 ], [ %119, %114 ]
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair.3039", %"struct.WTF::KeyValuePair.3039"* %26, i64 %29
  %31 = bitcast %"struct.WTF::KeyValuePair.3039"* %30 to i64*
  %32 = load i64, i64* %31, align 8
  switch i64 %32, label %33 [
    i64 -1, label %114
    i64 0, label %114
  ]

33:                                               ; preds = %23
  %34 = shl i64 %32, 32
  %35 = xor i64 %34, -1
  %36 = add i64 %32, %35
  %37 = lshr i64 %36, 22
  %38 = xor i64 %37, %36
  %39 = shl i64 %38, 13
  %40 = xor i64 %39, -1
  %41 = add i64 %38, %40
  %42 = lshr i64 %41, 8
  %43 = xor i64 %42, %41
  %44 = mul i64 %43, 9
  %45 = lshr i64 %44, 15
  %46 = xor i64 %45, %44
  %47 = shl i64 %46, 27
  %48 = xor i64 %47, -1
  %49 = add i64 %46, %48
  %50 = lshr i64 %49, 31
  %51 = xor i64 %50, %49
  %52 = trunc i64 %51 to i32
  %53 = and i32 %13, %52
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.3039", %"struct.WTF::KeyValuePair.3039"* %6, i64 %54
  %56 = ptrtoint %"struct.WTF::KeyValuePair.3039"* %55 to i64
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.3039", %"struct.WTF::KeyValuePair.3039"* %55, i64 0, i32 0
  %58 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %57, align 8
  %59 = icmp eq %"class.blink::LayoutText"* %58, null
  %60 = inttoptr i64 %32 to %"class.blink::LayoutText"*
  br i1 %59, label %78, label %61

61:                                               ; preds = %33
  %62 = xor i32 %52, -1
  %63 = lshr i32 %52, 23
  %64 = add i32 %63, %62
  %65 = shl i32 %64, 12
  %66 = xor i32 %65, %64
  %67 = lshr i32 %66, 7
  %68 = xor i32 %67, %66
  %69 = shl i32 %68, 2
  %70 = xor i32 %69, %68
  %71 = lshr i32 %70, 20
  %72 = xor i32 %71, %70
  %73 = or i32 %72, 1
  %74 = zext i32 %73 to i64
  br label %84

75:                                               ; preds = %91
  %76 = ptrtoint %"struct.WTF::KeyValuePair.3039"* %98 to i64
  %77 = inttoptr i64 %93 to %"struct.WTF::KeyValuePair.3039"*
  br label %78

78:                                               ; preds = %75, %33
  %79 = phi i64 [ %76, %75 ], [ %56, %33 ]
  %80 = phi %"struct.WTF::KeyValuePair.3039"* [ %77, %75 ], [ null, %33 ]
  %81 = icmp eq %"struct.WTF::KeyValuePair.3039"* %80, null
  %82 = ptrtoint %"struct.WTF::KeyValuePair.3039"* %80 to i64
  %83 = select i1 %81, i64 %79, i64 %82
  br label %103

84:                                               ; preds = %91, %61
  %85 = phi i64 [ 0, %61 ], [ %93, %91 ]
  %86 = phi %"class.blink::LayoutText"* [ %58, %61 ], [ %101, %91 ]
  %87 = phi i64 [ %56, %61 ], [ %99, %91 ]
  %88 = phi i64 [ %54, %61 ], [ %97, %91 ]
  %89 = phi i64 [ 0, %61 ], [ %95, %91 ]
  %90 = icmp eq %"class.blink::LayoutText"* %86, %60
  br i1 %90, label %103, label %91

91:                                               ; preds = %84
  %92 = icmp eq %"class.blink::LayoutText"* %86, inttoptr (i64 -1 to %"class.blink::LayoutText"*)
  %93 = select i1 %92, i64 %87, i64 %85
  %94 = icmp eq i64 %89, 0
  %95 = select i1 %94, i64 %74, i64 %89
  %96 = add i64 %95, %88
  %97 = and i64 %96, %14
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.3039", %"struct.WTF::KeyValuePair.3039"* %6, i64 %97
  %99 = ptrtoint %"struct.WTF::KeyValuePair.3039"* %98 to i64
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair.3039", %"struct.WTF::KeyValuePair.3039"* %98, i64 0, i32 0
  %101 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %100, align 8
  %102 = icmp eq %"class.blink::LayoutText"* %101, null
  br i1 %102, label %75, label %84

103:                                              ; preds = %84, %78
  %104 = phi i64 [ %83, %78 ], [ %87, %84 ]
  %105 = inttoptr i64 %104 to %"struct.WTF::KeyValuePair.3039"*
  %106 = inttoptr i64 %104 to i8*
  %107 = bitcast %"struct.WTF::KeyValuePair.3039"* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %106, i8* align 8 %107, i64 16, i1 false) #19
  %108 = load %"struct.WTF::KeyValuePair.3039"*, %"struct.WTF::KeyValuePair.3039"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_119GetSecureTextTimersEvE5s_map to %"struct.WTF::KeyValuePair.3039"**), align 8
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair.3039", %"struct.WTF::KeyValuePair.3039"* %108, i64 %29
  %110 = icmp eq %"struct.WTF::KeyValuePair.3039"* %109, %1
  %111 = select i1 %110, %"struct.WTF::KeyValuePair.3039"* %105, %"struct.WTF::KeyValuePair.3039"* %27
  %112 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_119GetSecureTextTimersEvE5s_map, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %113 = ptrtoint %"struct.WTF::KeyValuePair.3039"* %108 to i64
  br label %114

114:                                              ; preds = %103, %23, %23
  %115 = phi i64 [ %24, %23 ], [ %113, %103 ], [ %24, %23 ]
  %116 = phi i32 [ %25, %23 ], [ %112, %103 ], [ %25, %23 ]
  %117 = phi %"struct.WTF::KeyValuePair.3039"* [ %26, %23 ], [ %108, %103 ], [ %26, %23 ]
  %118 = phi %"struct.WTF::KeyValuePair.3039"* [ %27, %23 ], [ %111, %103 ], [ %27, %23 ]
  %119 = add i32 %28, 1
  %120 = icmp eq i32 %119, %116
  br i1 %120, label %17, label %23

121:                                              ; preds = %17, %21
  %122 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_119GetSecureTextTimersEvE5s_map, i64 0, i32 0, i32 0, i64 16) to i32*), align 8
  %123 = and i32 %122, -2147483648
  store i32 %123, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_119GetSecureTextTimersEvE5s_map, i64 0, i32 0, i32 0, i64 16) to i32*), align 8
  ret %"struct.WTF::KeyValuePair.3039"* %19
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"struct.WTF::KeyValuePair.3044"* @_ZN3WTF9HashTableIPKN5blink10LayoutTextENS_12KeyValuePairIS4_NSt3__110unique_ptrINS1_12_GLOBAL__N_126SelectionDisplayItemClientENS6_14default_deleteIS9_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSI_ISC_EEEESJ_NS_18PartitionAllocatorEE6RehashEjPSD_(i32, %"struct.WTF::KeyValuePair.3044"* readnone) unnamed_addr #0 align 2 {
  %3 = zext i32 %0 to i64
  %4 = shl nuw nsw i64 %3, 4
  %5 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %4, i8* getelementptr inbounds ([258 x i8], [258 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink10LayoutTextENSt3__110unique_ptrINS2_12_GLOBAL__N_126SelectionDisplayItemClientENS6_14default_deleteIS9_EEEEEEEEPKcv, i64 0, i64 0)) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %5, i8 0, i64 %4, i1 false) #19
  %6 = bitcast i8* %5 to %"struct.WTF::KeyValuePair.3044"*
  %7 = ptrtoint i8* %5 to i64
  %8 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.3329", %"class.WTF::StaticSingleton.3329"* @_ZZN5blink12_GLOBAL__N_132GetSelectionDisplayItemClientMapEvE5s_map, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %2
  %11 = load i64, i64* bitcast (%"class.WTF::StaticSingleton.3329"* @_ZZN5blink12_GLOBAL__N_132GetSelectionDisplayItemClientMapEvE5s_map to i64*), align 8
  br label %17

12:                                               ; preds = %2
  %13 = add i32 %0, -1
  %14 = zext i32 %13 to i64
  %15 = load %"struct.WTF::KeyValuePair.3044"*, %"struct.WTF::KeyValuePair.3044"** bitcast (%"class.WTF::StaticSingleton.3329"* @_ZZN5blink12_GLOBAL__N_132GetSelectionDisplayItemClientMapEvE5s_map to %"struct.WTF::KeyValuePair.3044"**), align 8
  %16 = ptrtoint %"struct.WTF::KeyValuePair.3044"* %15 to i64
  br label %46

17:                                               ; preds = %152, %10
  %18 = phi i64 [ %11, %10 ], [ %153, %152 ]
  %19 = phi %"struct.WTF::KeyValuePair.3044"* [ null, %10 ], [ %156, %152 ]
  %20 = phi i32 [ 0, %10 ], [ %154, %152 ]
  store atomic i64 %7, i64* bitcast (%"class.WTF::StaticSingleton.3329"* @_ZZN5blink12_GLOBAL__N_132GetSelectionDisplayItemClientMapEvE5s_map to i64*) monotonic, align 8
  store i32 %0, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.3329", %"class.WTF::StaticSingleton.3329"* @_ZZN5blink12_GLOBAL__N_132GetSelectionDisplayItemClientMapEvE5s_map, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %21 = inttoptr i64 %18 to %"struct.WTF::KeyValuePair.3044"*
  %22 = icmp eq i64 %18, 0
  br i1 %22, label %159, label %23

23:                                               ; preds = %17
  %24 = icmp eq i32 %20, 0
  br i1 %24, label %44, label %25

25:                                               ; preds = %23
  %26 = zext i32 %20 to i64
  br label %27

27:                                               ; preds = %41, %25
  %28 = phi i64 [ 0, %25 ], [ %42, %41 ]
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.3044", %"struct.WTF::KeyValuePair.3044"* %21, i64 %28, i32 0
  %30 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %29, align 8
  %31 = icmp eq %"class.blink::LayoutText"* %30, inttoptr (i64 -1 to %"class.blink::LayoutText"*)
  br i1 %31, label %41, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.3044", %"struct.WTF::KeyValuePair.3044"* %21, i64 %28, i32 1, i32 0, i32 0, i32 0
  %34 = load %"class.blink::(anonymous namespace)::SelectionDisplayItemClient"*, %"class.blink::(anonymous namespace)::SelectionDisplayItemClient"** %33, align 8
  store %"class.blink::(anonymous namespace)::SelectionDisplayItemClient"* null, %"class.blink::(anonymous namespace)::SelectionDisplayItemClient"** %33, align 8
  %35 = icmp eq %"class.blink::(anonymous namespace)::SelectionDisplayItemClient"* %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %32
  %37 = bitcast %"class.blink::(anonymous namespace)::SelectionDisplayItemClient"* %34 to void (%"class.blink::(anonymous namespace)::SelectionDisplayItemClient"*)***
  %38 = load void (%"class.blink::(anonymous namespace)::SelectionDisplayItemClient"*)**, void (%"class.blink::(anonymous namespace)::SelectionDisplayItemClient"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.blink::(anonymous namespace)::SelectionDisplayItemClient"*)*, void (%"class.blink::(anonymous namespace)::SelectionDisplayItemClient"*)** %38, i64 1
  %40 = load void (%"class.blink::(anonymous namespace)::SelectionDisplayItemClient"*)*, void (%"class.blink::(anonymous namespace)::SelectionDisplayItemClient"*)** %39, align 8
  tail call void %40(%"class.blink::(anonymous namespace)::SelectionDisplayItemClient"* nonnull %34) #19
  br label %41

41:                                               ; preds = %36, %32, %27
  %42 = add nuw nsw i64 %28, 1
  %43 = icmp eq i64 %42, %26
  br i1 %43, label %44, label %27

44:                                               ; preds = %41, %23
  %45 = inttoptr i64 %18 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %45) #19
  br label %159

46:                                               ; preds = %152, %12
  %47 = phi i64 [ %16, %12 ], [ %153, %152 ]
  %48 = phi i32 [ %8, %12 ], [ %154, %152 ]
  %49 = phi %"struct.WTF::KeyValuePair.3044"* [ %15, %12 ], [ %155, %152 ]
  %50 = phi %"struct.WTF::KeyValuePair.3044"* [ null, %12 ], [ %156, %152 ]
  %51 = phi i32 [ 0, %12 ], [ %157, %152 ]
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.3044", %"struct.WTF::KeyValuePair.3044"* %49, i64 %52
  %54 = bitcast %"struct.WTF::KeyValuePair.3044"* %53 to i64*
  %55 = load i64, i64* %54, align 8
  switch i64 %55, label %56 [
    i64 -1, label %152
    i64 0, label %152
  ]

56:                                               ; preds = %46
  %57 = shl i64 %55, 32
  %58 = xor i64 %57, -1
  %59 = add i64 %55, %58
  %60 = lshr i64 %59, 22
  %61 = xor i64 %60, %59
  %62 = shl i64 %61, 13
  %63 = xor i64 %62, -1
  %64 = add i64 %61, %63
  %65 = lshr i64 %64, 8
  %66 = xor i64 %65, %64
  %67 = mul i64 %66, 9
  %68 = lshr i64 %67, 15
  %69 = xor i64 %68, %67
  %70 = shl i64 %69, 27
  %71 = xor i64 %70, -1
  %72 = add i64 %69, %71
  %73 = lshr i64 %72, 31
  %74 = xor i64 %73, %72
  %75 = trunc i64 %74 to i32
  %76 = and i32 %13, %75
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.3044", %"struct.WTF::KeyValuePair.3044"* %6, i64 %77
  %79 = ptrtoint %"struct.WTF::KeyValuePair.3044"* %78 to i64
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.3044", %"struct.WTF::KeyValuePair.3044"* %78, i64 0, i32 0
  %81 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %80, align 8
  %82 = icmp eq %"class.blink::LayoutText"* %81, null
  %83 = inttoptr i64 %55 to %"class.blink::LayoutText"*
  br i1 %82, label %101, label %84

84:                                               ; preds = %56
  %85 = xor i32 %75, -1
  %86 = lshr i32 %75, 23
  %87 = add i32 %86, %85
  %88 = shl i32 %87, 12
  %89 = xor i32 %88, %87
  %90 = lshr i32 %89, 7
  %91 = xor i32 %90, %89
  %92 = shl i32 %91, 2
  %93 = xor i32 %92, %91
  %94 = lshr i32 %93, 20
  %95 = xor i32 %94, %93
  %96 = or i32 %95, 1
  %97 = zext i32 %96 to i64
  br label %107

98:                                               ; preds = %114
  %99 = ptrtoint %"struct.WTF::KeyValuePair.3044"* %121 to i64
  %100 = inttoptr i64 %116 to %"struct.WTF::KeyValuePair.3044"*
  br label %101

101:                                              ; preds = %98, %56
  %102 = phi i64 [ %99, %98 ], [ %79, %56 ]
  %103 = phi %"struct.WTF::KeyValuePair.3044"* [ %100, %98 ], [ null, %56 ]
  %104 = icmp eq %"struct.WTF::KeyValuePair.3044"* %103, null
  %105 = ptrtoint %"struct.WTF::KeyValuePair.3044"* %103 to i64
  %106 = select i1 %104, i64 %102, i64 %105
  br label %126

107:                                              ; preds = %114, %84
  %108 = phi i64 [ 0, %84 ], [ %116, %114 ]
  %109 = phi %"class.blink::LayoutText"* [ %81, %84 ], [ %124, %114 ]
  %110 = phi i64 [ %79, %84 ], [ %122, %114 ]
  %111 = phi i64 [ %77, %84 ], [ %120, %114 ]
  %112 = phi i64 [ 0, %84 ], [ %118, %114 ]
  %113 = icmp eq %"class.blink::LayoutText"* %109, %83
  br i1 %113, label %126, label %114

114:                                              ; preds = %107
  %115 = icmp eq %"class.blink::LayoutText"* %109, inttoptr (i64 -1 to %"class.blink::LayoutText"*)
  %116 = select i1 %115, i64 %110, i64 %108
  %117 = icmp eq i64 %112, 0
  %118 = select i1 %117, i64 %97, i64 %112
  %119 = add i64 %118, %111
  %120 = and i64 %119, %14
  %121 = getelementptr inbounds %"struct.WTF::KeyValuePair.3044", %"struct.WTF::KeyValuePair.3044"* %6, i64 %120
  %122 = ptrtoint %"struct.WTF::KeyValuePair.3044"* %121 to i64
  %123 = getelementptr inbounds %"struct.WTF::KeyValuePair.3044", %"struct.WTF::KeyValuePair.3044"* %121, i64 0, i32 0
  %124 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %123, align 8
  %125 = icmp eq %"class.blink::LayoutText"* %124, null
  br i1 %125, label %98, label %107

126:                                              ; preds = %107, %101
  %127 = phi i64 [ %106, %101 ], [ %110, %107 ]
  %128 = inttoptr i64 %127 to %"struct.WTF::KeyValuePair.3044"*
  %129 = getelementptr inbounds %"struct.WTF::KeyValuePair.3044", %"struct.WTF::KeyValuePair.3044"* %128, i64 0, i32 1, i32 0, i32 0, i32 0
  %130 = load %"class.blink::(anonymous namespace)::SelectionDisplayItemClient"*, %"class.blink::(anonymous namespace)::SelectionDisplayItemClient"** %129, align 8
  store %"class.blink::(anonymous namespace)::SelectionDisplayItemClient"* null, %"class.blink::(anonymous namespace)::SelectionDisplayItemClient"** %129, align 8
  %131 = icmp eq %"class.blink::(anonymous namespace)::SelectionDisplayItemClient"* %130, null
  br i1 %131, label %137, label %132

132:                                              ; preds = %126
  %133 = bitcast %"class.blink::(anonymous namespace)::SelectionDisplayItemClient"* %130 to void (%"class.blink::(anonymous namespace)::SelectionDisplayItemClient"*)***
  %134 = load void (%"class.blink::(anonymous namespace)::SelectionDisplayItemClient"*)**, void (%"class.blink::(anonymous namespace)::SelectionDisplayItemClient"*)*** %133, align 8
  %135 = getelementptr inbounds void (%"class.blink::(anonymous namespace)::SelectionDisplayItemClient"*)*, void (%"class.blink::(anonymous namespace)::SelectionDisplayItemClient"*)** %134, i64 1
  %136 = load void (%"class.blink::(anonymous namespace)::SelectionDisplayItemClient"*)*, void (%"class.blink::(anonymous namespace)::SelectionDisplayItemClient"*)** %135, align 8
  tail call void %136(%"class.blink::(anonymous namespace)::SelectionDisplayItemClient"* nonnull %130) #19
  br label %137

137:                                              ; preds = %132, %126
  %138 = load i64, i64* %54, align 8
  %139 = inttoptr i64 %127 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"struct.WTF::KeyValuePair.3044", %"struct.WTF::KeyValuePair.3044"* %128, i64 0, i32 1
  %141 = getelementptr inbounds %"struct.WTF::KeyValuePair.3044", %"struct.WTF::KeyValuePair.3044"* %49, i64 %52, i32 1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.3045", %"class.std::__1::unique_ptr.3045"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = bitcast %"class.std::__1::unique_ptr.3045"* %141 to i64*
  %144 = load i64, i64* %143, align 8
  store %"class.blink::(anonymous namespace)::SelectionDisplayItemClient"* null, %"class.blink::(anonymous namespace)::SelectionDisplayItemClient"** %142, align 8
  %145 = bitcast %"class.std::__1::unique_ptr.3045"* %140 to i64*
  store i64 %144, i64* %145, align 8
  %146 = load %"struct.WTF::KeyValuePair.3044"*, %"struct.WTF::KeyValuePair.3044"** bitcast (%"class.WTF::StaticSingleton.3329"* @_ZZN5blink12_GLOBAL__N_132GetSelectionDisplayItemClientMapEvE5s_map to %"struct.WTF::KeyValuePair.3044"**), align 8
  %147 = getelementptr inbounds %"struct.WTF::KeyValuePair.3044", %"struct.WTF::KeyValuePair.3044"* %146, i64 %52
  %148 = icmp eq %"struct.WTF::KeyValuePair.3044"* %147, %1
  %149 = select i1 %148, %"struct.WTF::KeyValuePair.3044"* %128, %"struct.WTF::KeyValuePair.3044"* %50
  %150 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.3329", %"class.WTF::StaticSingleton.3329"* @_ZZN5blink12_GLOBAL__N_132GetSelectionDisplayItemClientMapEvE5s_map, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %151 = ptrtoint %"struct.WTF::KeyValuePair.3044"* %146 to i64
  br label %152

152:                                              ; preds = %137, %46, %46
  %153 = phi i64 [ %47, %46 ], [ %151, %137 ], [ %47, %46 ]
  %154 = phi i32 [ %48, %46 ], [ %150, %137 ], [ %48, %46 ]
  %155 = phi %"struct.WTF::KeyValuePair.3044"* [ %49, %46 ], [ %146, %137 ], [ %49, %46 ]
  %156 = phi %"struct.WTF::KeyValuePair.3044"* [ %50, %46 ], [ %149, %137 ], [ %50, %46 ]
  %157 = add i32 %51, 1
  %158 = icmp eq i32 %157, %154
  br i1 %158, label %17, label %46

159:                                              ; preds = %17, %44
  %160 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.3329", %"class.WTF::StaticSingleton.3329"* @_ZZN5blink12_GLOBAL__N_132GetSelectionDisplayItemClientMapEvE5s_map, i64 0, i32 0, i32 0, i64 16) to i32*), align 8
  %161 = and i32 %160, -2147483648
  store i32 %161, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.3329", %"class.WTF::StaticSingleton.3329"* @_ZZN5blink12_GLOBAL__N_132GetSelectionDisplayItemClientMapEvE5s_map, i64 0, i32 0, i32 0, i64 16) to i32*), align 8
  ret %"struct.WTF::KeyValuePair.3044"* %19
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink10LayoutText11TextBoxInfoELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.3066"*, %"struct.blink::LayoutText::TextBoxInfo"* dereferenceable(24)) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3066", %"class.WTF::Vector.3066"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3066", %"class.WTF::Vector.3066"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::LayoutText::TextBoxInfo"*, %"struct.blink::LayoutText::TextBoxInfo"** %6, align 8
  %8 = icmp ugt %"struct.blink::LayoutText::TextBoxInfo"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.blink::LayoutText::TextBoxInfo", %"struct.blink::LayoutText::TextBoxInfo"* %7, i64 %10
  %12 = icmp ugt %"struct.blink::LayoutText::TextBoxInfo"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.3066", %"class.WTF::Vector.3066"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !4

24:                                               ; preds = %13
  %25 = icmp eq %"struct.blink::LayoutText::TextBoxInfo"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10LayoutText11TextBoxInfoEEEmm(i64 %26) #19
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10LayoutText11TextBoxInfoEEEPKcv, i64 0, i64 0)) #19
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.3066"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = udiv i64 %27, 24
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"struct.blink::LayoutText::TextBoxInfo"*
  br label %99

35:                                               ; preds = %24
  %36 = udiv i64 %27, 24
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"struct.blink::LayoutText::TextBoxInfo"*, %"struct.blink::LayoutText::TextBoxInfo"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"struct.blink::LayoutText::TextBoxInfo"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"struct.blink::LayoutText::TextBoxInfo"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !4

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = mul nuw nsw i64 %45, 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #19
  %47 = bitcast %"class.WTF::Vector.3066"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #19
  %51 = bitcast %"class.WTF::Vector.3066"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"struct.blink::LayoutText::TextBoxInfo"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"struct.blink::LayoutText::TextBoxInfo"* %1 to i64
  %56 = ptrtoint %"struct.blink::LayoutText::TextBoxInfo"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = sdiv exact i64 %57, 24
  %59 = getelementptr inbounds %"class.WTF::Vector.3066", %"class.WTF::Vector.3066"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !4

69:                                               ; preds = %54
  %70 = icmp eq %"struct.blink::LayoutText::TextBoxInfo"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10LayoutText11TextBoxInfoEEEmm(i64 %71) #19
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10LayoutText11TextBoxInfoEEEPKcv, i64 0, i64 0)) #19
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.3066"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"struct.blink::LayoutText::TextBoxInfo"*, %"struct.blink::LayoutText::TextBoxInfo"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"struct.blink::LayoutText::TextBoxInfo"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"struct.blink::LayoutText::TextBoxInfo"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !4

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = mul nuw nsw i64 %85, 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #19
  %87 = bitcast %"class.WTF::Vector.3066"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #19
  %91 = bitcast %"class.WTF::Vector.3066"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = udiv i64 %72, 24
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"struct.blink::LayoutText::TextBoxInfo"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"struct.blink::LayoutText::TextBoxInfo"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"struct.blink::LayoutText::TextBoxInfo", %"struct.blink::LayoutText::TextBoxInfo"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"struct.blink::LayoutText::TextBoxInfo"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"struct.blink::LayoutText::TextBoxInfo"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"struct.blink::LayoutText::TextBoxInfo", %"struct.blink::LayoutText::TextBoxInfo"* %100, i64 %103
  %105 = bitcast %"struct.blink::LayoutText::TextBoxInfo"* %104 to i8*
  %106 = bitcast %"struct.blink::LayoutText::TextBoxInfo"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %105, i8* align 4 %106, i64 24, i1 false) #19
  %107 = load i32, i32* %3, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10LayoutText11TextBoxInfoEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #19
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 89391104
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #19
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 89391104) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16, i64 0, i64 0), i8* %11, i8* %12) #19
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.17, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #19
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #19
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #19
  %20 = mul i64 %0, 24
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #19
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink9FloatQuadELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3120"*, %"class.blink::FloatQuad"* dereferenceable(32)) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3120", %"class.WTF::Vector.3120"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call %"class.blink::FloatQuad"* @_ZN3WTF6VectorIN5blink9FloatQuadELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS2_(%"class.WTF::Vector.3120"* %0, i32 %5, %"class.blink::FloatQuad"* %1)
  %7 = getelementptr inbounds %"class.WTF::Vector.3120", %"class.WTF::Vector.3120"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %8, i64 %10
  %12 = bitcast %"class.blink::FloatQuad"* %11 to i8*
  %13 = bitcast %"class.blink::FloatQuad"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 %13, i64 32, i1 false) #19
  %14 = load i32, i32* %3, align 4
  %15 = add i32 %14, 1
  store i32 %15, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::FloatQuad"* @_ZN3WTF6VectorIN5blink9FloatQuadELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS2_(%"class.WTF::Vector.3120"*, i32, %"class.blink::FloatQuad"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::Vector.3120", %"class.WTF::Vector.3120"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %4, align 8
  %6 = icmp ugt %"class.blink::FloatQuad"* %5, %2
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::Vector.3120", %"class.WTF::Vector.3120"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %5, i64 %10
  %12 = icmp ugt %"class.blink::FloatQuad"* %11, %2
  br i1 %12, label %53, label %13

13:                                               ; preds = %7, %3
  %14 = getelementptr inbounds %"class.WTF::Vector.3120", %"class.WTF::Vector.3120"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %1
  %22 = select i1 %21, i32 %20, i32 %1
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %98, !prof !4

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::FloatQuad"* %5, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9FloatQuadEEEmm(i64 %26) #19
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9FloatQuadEEEPKcv, i64 0, i64 0)) #19
  br i1 %25, label %29, label %34

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.3120"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 5
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  br label %98

34:                                               ; preds = %24
  %35 = lshr i64 %27, 5
  %36 = ptrtoint i8* %28 to i64
  %37 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %4, align 8
  %38 = icmp ne i8* %28, null
  %39 = icmp ne %"class.blink::FloatQuad"* %37, null
  %40 = and i1 %38, %39
  %41 = bitcast %"class.blink::FloatQuad"* %37 to i8*
  br i1 %40, label %42, label %49, !prof !4

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.WTF::Vector.3120", %"class.WTF::Vector.3120"* %0, i64 0, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 5
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %41, i64 %46, i1 false) #19
  %47 = bitcast %"class.WTF::Vector.3120"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %42, %34
  %50 = phi i8* [ %48, %42 ], [ %41, %34 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #19
  %51 = bitcast %"class.WTF::Vector.3120"* %0 to i64*
  store atomic i64 %36, i64* %51 monotonic, align 8
  %52 = trunc i64 %35 to i32
  store i32 %52, i32* %14, align 8
  br label %98

53:                                               ; preds = %7
  %54 = ptrtoint %"class.blink::FloatQuad"* %2 to i64
  %55 = ptrtoint %"class.blink::FloatQuad"* %5 to i64
  %56 = sub i64 %54, %55
  %57 = ashr exact i64 %56, 5
  %58 = getelementptr inbounds %"class.WTF::Vector.3120", %"class.WTF::Vector.3120"* %0, i64 0, i32 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = lshr i32 %59, 2
  %61 = add i32 %59, 1
  %62 = add i32 %61, %60
  %63 = icmp ugt i32 %62, 4
  %64 = select i1 %63, i32 %62, i32 4
  %65 = icmp ugt i32 %64, %1
  %66 = select i1 %65, i32 %64, i32 %1
  %67 = icmp ult i32 %59, %66
  br i1 %67, label %68, label %95, !prof !4

68:                                               ; preds = %53
  %69 = icmp eq %"class.blink::FloatQuad"* %5, null
  %70 = zext i32 %66 to i64
  %71 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9FloatQuadEEEmm(i64 %70) #19
  %72 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %71, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9FloatQuadEEEPKcv, i64 0, i64 0)) #19
  %73 = ptrtoint i8* %72 to i64
  br i1 %69, label %74, label %76

74:                                               ; preds = %68
  %75 = bitcast %"class.WTF::Vector.3120"* %0 to i64*
  store atomic i64 %73, i64* %75 monotonic, align 8
  br label %91

76:                                               ; preds = %68
  %77 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %4, align 8
  %78 = icmp ne i8* %72, null
  %79 = icmp ne %"class.blink::FloatQuad"* %77, null
  %80 = and i1 %78, %79
  %81 = bitcast %"class.blink::FloatQuad"* %77 to i8*
  br i1 %80, label %82, label %88, !prof !4

82:                                               ; preds = %76
  %83 = load i32, i32* %8, align 4
  %84 = zext i32 %83 to i64
  %85 = shl nuw nsw i64 %84, 5
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %72, i8* nonnull align 4 %81, i64 %85, i1 false) #19
  %86 = bitcast %"class.WTF::Vector.3120"* %0 to i8**
  %87 = load i8*, i8** %86, align 8
  br label %88

88:                                               ; preds = %82, %76
  %89 = phi i8* [ %87, %82 ], [ %81, %76 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %89) #19
  %90 = bitcast %"class.WTF::Vector.3120"* %0 to i64*
  store atomic i64 %73, i64* %90 monotonic, align 8
  br label %91

91:                                               ; preds = %88, %74
  %92 = lshr i64 %71, 5
  %93 = trunc i64 %92 to i32
  store i32 %93, i32* %58, align 8
  %94 = bitcast i8* %72 to %"class.blink::FloatQuad"*
  br label %95

95:                                               ; preds = %91, %53
  %96 = phi %"class.blink::FloatQuad"* [ %5, %53 ], [ %94, %91 ]
  %97 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %96, i64 %57
  br label %98

98:                                               ; preds = %49, %29, %13, %95
  %99 = phi %"class.blink::FloatQuad"* [ %97, %95 ], [ %2, %13 ], [ %2, %29 ], [ %2, %49 ]
  ret %"class.blink::FloatQuad"* %99
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9FloatQuadEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #19
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 67043328
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #19
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 67043328) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16, i64 0, i64 0), i8* %11, i8* %12) #19
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.17, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #19
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #19
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #19
  %20 = shl i64 %0, 5
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #19
  ret i64 %21
}

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #17

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink9FloatQuadELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.3120"*, %"class.blink::FloatQuad"* dereferenceable(32)) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3120", %"class.WTF::Vector.3120"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call %"class.blink::FloatQuad"* @_ZN3WTF6VectorIN5blink9FloatQuadELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS2_(%"class.WTF::Vector.3120"* %0, i32 %5, %"class.blink::FloatQuad"* %1) #19
  %7 = getelementptr inbounds %"class.WTF::Vector.3120", %"class.WTF::Vector.3120"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %8, i64 %10
  %12 = bitcast %"class.blink::FloatQuad"* %11 to i8*
  %13 = bitcast %"class.blink::FloatQuad"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 %13, i64 32, i1 false) #19
  %14 = load i32, i32* %3, align 4
  %15 = add i32 %14, 1
  store i32 %15, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink9FloatQuadELj1ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.3125"*, %"class.blink::FloatQuad"* dereferenceable(32)) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3125", %"class.WTF::Vector.3125"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3125", %"class.WTF::Vector.3125"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %6, align 8
  %8 = icmp ugt %"class.blink::FloatQuad"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %7, i64 %10
  %12 = icmp ugt %"class.blink::FloatQuad"* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIN5blink9FloatQuadELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.3125"* %0, i32 %5) #19
  %14 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint %"class.blink::FloatQuad"* %1 to i64
  %17 = ptrtoint %"class.blink::FloatQuad"* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 5
  tail call void @_ZN3WTF6VectorIN5blink9FloatQuadELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.3125"* %0, i32 %5) #19
  %20 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %6, align 8
  %21 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %"class.blink::FloatQuad"* [ %14, %13 ], [ %20, %15 ]
  %24 = phi %"class.blink::FloatQuad"* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %23, i64 %26
  %28 = bitcast %"class.blink::FloatQuad"* %27 to i8*
  %29 = bitcast %"class.blink::FloatQuad"* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %28, i8* align 4 %29, i64 32, i1 false) #19
  %30 = load i32, i32* %3, align 4
  %31 = add i32 %30, 1
  store i32 %31, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink9FloatQuadELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.3125"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.3125", %"class.WTF::Vector.3125"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #19
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #19
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13, i64 0, i64 0), i8* %15, i8* %16) #19
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.14, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #19
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #19
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #19
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !4

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.3125", %"class.WTF::Vector.3125"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %31, align 8
  %33 = icmp eq %"class.blink::FloatQuad"* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 1
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9FloatQuadEEEmm(i64 %37) #19
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9FloatQuadEEEPKcv, i64 0, i64 0)) #19
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.3125"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 5
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.3125", %"class.WTF::Vector.3125"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.3125"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 1, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIN5blink9FloatQuadELj1ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3125"* %0, i32 %27) #19
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink9FloatQuadELj1ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3125"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 2
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.3125", %"class.WTF::Vector.3125"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %5, align 8
  %7 = icmp eq %"class.blink::FloatQuad"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.3125", %"class.WTF::Vector.3125"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::FloatQuad"*
  %10 = icmp eq %"class.blink::FloatQuad"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.3125"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.3125", %"class.WTF::Vector.3125"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 1, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.3125", %"class.WTF::Vector.3125"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.3125", %"class.WTF::Vector.3125"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.3125"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.3125", %"class.WTF::Vector.3125"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 1, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !3

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast %"class.blink::FloatQuad"* %6 to i8*
  %27 = shl nuw nsw i64 %25, 5
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %8, i8* nonnull align 4 %26, i64 %27, i1 false) #19
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIN5blink9FloatQuadELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.3126"* %19, %"class.blink::FloatQuad"* nonnull %6) #19
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9FloatQuadEEEmm(i64 %30) #19
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9FloatQuadEEEPKcv, i64 0, i64 0)) #19
  %33 = lshr i64 %31, 5
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.3125", %"class.WTF::Vector.3125"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne %"class.blink::FloatQuad"* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !4

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.3125", %"class.WTF::Vector.3125"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast %"class.blink::FloatQuad"* %36 to i8*
  %45 = shl nuw nsw i64 %43, 5
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %32, i8* nonnull align 4 %44, i64 %45, i1 false) #19
  %46 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"class.blink::FloatQuad"* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.3125", %"class.WTF::Vector.3125"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to %"class.blink::FloatQuad"*
  %51 = icmp eq %"class.blink::FloatQuad"* %48, %50
  br i1 %51, label %54, label %52, !prof !4

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.3125", %"class.WTF::Vector.3125"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink9FloatQuadELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.3126"* %53, %"class.blink::FloatQuad"* %48) #19
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.3125"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.3125", %"class.WTF::Vector.3125"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink9FloatQuadELj0ENS_18PartitionAllocatorEE6AppendIS2_EEvPKT_j(%"class.WTF::Vector.3120"*, %"class.blink::FloatQuad"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.3120", %"class.WTF::Vector.3120"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector.3120", %"class.WTF::Vector.3120"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %16

13:                                               ; preds = %3
  %14 = tail call %"class.blink::FloatQuad"* @_ZN3WTF6VectorIN5blink9FloatQuadELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS2_(%"class.WTF::Vector.3120"* %0, i32 %9, %"class.blink::FloatQuad"* %1) #19
  %15 = load i32, i32* %7, align 4
  br label %16

16:                                               ; preds = %13, %3
  %17 = phi i32 [ %15, %13 ], [ %8, %3 ]
  %18 = phi %"class.blink::FloatQuad"* [ %14, %13 ], [ %1, %3 ]
  %19 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #19
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %9, %17
  br i1 %22, label %24, label %23

23:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %20, align 8
  br label %33

24:                                               ; preds = %16
  %25 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #19
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.32, i64 0, i64 0), i8* %25, i8* %26) #19
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %20, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.14, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #19
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #19
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #19
  %34 = getelementptr inbounds %"class.WTF::Vector.3120", %"class.WTF::Vector.3120"* %0, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %34, align 8
  %36 = load i32, i32* %7, align 4
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %35, i64 %37
  %39 = icmp ne %"class.blink::FloatQuad"* %38, null
  %40 = icmp ne %"class.blink::FloatQuad"* %18, null
  %41 = and i1 %40, %39
  br i1 %41, label %42, label %47, !prof !4

42:                                               ; preds = %33
  %43 = zext i32 %2 to i64
  %44 = bitcast %"class.blink::FloatQuad"* %38 to i8*
  %45 = bitcast %"class.blink::FloatQuad"* %18 to i8*
  %46 = shl nuw nsw i64 %43, 5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %44, i8* nonnull align 4 %45, i64 %46, i1 false) #19
  br label %47

47:                                               ; preds = %33, %42
  store i32 %9, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"*, %"class.blink::BidiRunList"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 10
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %95

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp ult i32 %9, %11
  br i1 %12, label %13, label %95

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 1, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 6, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 6, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp uge i32 %18, %20
  %22 = icmp ult i32 %9, %18
  %23 = or i1 %22, %21
  br i1 %23, label %26, label %24

24:                                               ; preds = %13
  %25 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 8
  store i8 1, i8* %25, align 8
  br label %26

26:                                               ; preds = %24, %13
  %27 = phi i32 [ %9, %13 ], [ %18, %24 ]
  %28 = add nuw i32 %27, 1
  %29 = icmp ult i32 %27, %16
  br i1 %29, label %90, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 3, i32 0
  %32 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 5
  %33 = getelementptr inbounds %"class.blink::BidiRunList", %"class.blink::BidiRunList"* %1, i64 0, i32 0
  %34 = getelementptr inbounds %"class.blink::BidiRunList", %"class.blink::BidiRunList"* %1, i64 0, i32 1
  %35 = bitcast %"class.blink::BidiRunList"* %1 to i8**
  %36 = bitcast %"struct.blink::BidiCharacterRun"** %34 to i8**
  %37 = getelementptr inbounds %"class.blink::BidiRunList", %"class.blink::BidiRunList"* %1, i64 0, i32 3
  br label %38

38:                                               ; preds = %30, %83
  %39 = phi i32 [ %16, %30 ], [ %43, %83 ]
  %40 = sub i32 %28, %39
  %41 = icmp ugt i32 %40, 65535
  %42 = add i32 %39, 65535
  %43 = select i1 %41, i32 %42, i32 %28
  %44 = tail call noalias i8* @malloc(i64 24) #19
  %45 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %31, align 8
  %46 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %45, i64 0, i32 1
  %47 = load i16, i16* %46, align 4
  %48 = trunc i16 %47 to i8
  %49 = and i8 %48, 127
  %50 = load i32, i32* %32, align 8
  %51 = lshr i16 %47, 7
  %52 = and i16 %51, 31
  %53 = zext i16 %52 to i32
  %54 = lshr i16 %47, 12
  %55 = trunc i16 %54 to i8
  %56 = and i8 %55, 1
  store i8 %56, i8* %44, align 8
  %57 = getelementptr inbounds i8, i8* %44, i64 1
  %58 = getelementptr inbounds i8, i8* %44, i64 8
  %59 = bitcast i8* %58 to %"struct.blink::BidiCharacterRun"**
  store %"struct.blink::BidiCharacterRun"* null, %"struct.blink::BidiCharacterRun"** %59, align 8
  %60 = getelementptr inbounds i8, i8* %44, i64 16
  %61 = bitcast i8* %60 to i32*
  store i32 %39, i32* %61, align 8
  %62 = getelementptr inbounds i8, i8* %44, i64 20
  %63 = bitcast i8* %62 to i32*
  store i32 %43, i32* %63, align 4
  %64 = icmp eq i32 %50, 10
  %65 = select i1 %64, i32 %53, i32 %50
  store i8 %49, i8* %57, align 1
  %66 = and i8 %48, 1
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %71, label %68

68:                                               ; preds = %38
  switch i32 %65, label %76 [
    i32 5, label %69
    i32 2, label %69
    i32 0, label %69
  ]

69:                                               ; preds = %68, %68, %68
  %70 = add nuw i8 %49, 1
  store i8 %70, i8* %57, align 1
  br label %76

71:                                               ; preds = %38
  switch i32 %65, label %76 [
    i32 1, label %72
    i32 5, label %74
    i32 2, label %74
  ]

72:                                               ; preds = %71
  %73 = add nuw i8 %49, 1
  store i8 %73, i8* %57, align 1
  br label %76

74:                                               ; preds = %71, %71
  %75 = add nuw i8 %49, 2
  store i8 %75, i8* %57, align 1
  br label %76

76:                                               ; preds = %68, %69, %71, %72, %74
  %77 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %33, align 8
  %78 = icmp eq %"struct.blink::BidiCharacterRun"* %77, null
  br i1 %78, label %83, label %79

79:                                               ; preds = %76
  %80 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %34, align 8
  %81 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %80, i64 0, i32 2
  %82 = bitcast %"struct.blink::BidiCharacterRun"** %81 to i8**
  br label %83

83:                                               ; preds = %76, %79
  %84 = phi i8** [ %82, %79 ], [ %35, %76 ]
  store i8* %44, i8** %84, align 8
  store i8* %44, i8** %36, align 8
  %85 = load i32, i32* %37, align 8
  %86 = add i32 %85, 1
  store i32 %86, i32* %37, align 8
  %87 = icmp ult i32 %27, %43
  br i1 %87, label %88, label %38

88:                                               ; preds = %83
  %89 = load i32, i32* %8, align 8
  br label %90

90:                                               ; preds = %88, %26
  %91 = phi i32 [ %89, %88 ], [ %9, %26 ]
  %92 = add i32 %91, 1
  store i32 %92, i32* %8, align 8
  %93 = bitcast %"class.blink::TextRunIterator"* %14 to i8*
  %94 = bitcast %"class.blink::TextRunIterator"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* align 8 %94, i64 16, i1 false)
  br label %95

95:                                               ; preds = %6, %2, %90
  %96 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 5
  store i32 10, i32* %96, align 8
  %97 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 0
  store i32 10, i32* %97, align 8
  ret void
}

declare %"class.blink::BidiContext"* @_ZN5blink11BidiContext41CopyStackRemovingUnicodeEmbeddingContextsEv(%"class.blink::BidiContext"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE23CommitExplicitEmbeddingERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"*, %"class.blink::BidiRunList"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 3, i32 0
  %7 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %7, i64 0, i32 1
  %9 = load i16, i16* %8, align 4
  %10 = trunc i16 %9 to i8
  %11 = and i8 %10, 127
  %12 = ptrtoint %"class.blink::BidiContext"* %7 to i64
  %13 = icmp eq %"class.blink::BidiContext"* %7, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw add i32* %15, i32 1 monotonic
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #19
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.18, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0)) #19
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #19
  br label %21

21:                                               ; preds = %2, %14, %18
  %22 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 19
  %23 = getelementptr inbounds %"class.WTF::Vector.3145", %"class.WTF::Vector.3145"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::BidiEmbedding"*, %"class.blink::BidiEmbedding"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 19, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.blink::BidiEmbedding", %"class.blink::BidiEmbedding"* %24, i64 %27
  %29 = icmp eq i32 %26, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %21
  %31 = bitcast %"class.logging::CheckError"* %3 to i8*
  br label %41

32:                                               ; preds = %107, %21
  %33 = phi i64 [ %12, %21 ], [ %108, %107 ]
  %34 = inttoptr i64 %33 to %"class.blink::BidiContext"*
  %35 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %34, i64 0, i32 1
  %36 = load i16, i16* %35, align 4
  %37 = trunc i16 %36 to i8
  %38 = and i8 %37, 127
  %39 = zext i8 %11 to i32
  %40 = icmp ugt i8 %38, %11
  br i1 %40, label %111, label %115

41:                                               ; preds = %30, %107
  %42 = phi %"class.blink::BidiEmbedding"* [ %24, %30 ], [ %109, %107 ]
  %43 = phi i64 [ %12, %30 ], [ %108, %107 ]
  %44 = getelementptr inbounds %"class.blink::BidiEmbedding", %"class.blink::BidiEmbedding"* %42, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  switch i32 %45, label %72 [
    i32 16, label %46
    i32 14, label %66
  ]

46:                                               ; preds = %41
  %47 = inttoptr i64 %43 to %"class.blink::BidiContext"*
  %48 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %47, i64 0, i32 2, i32 0
  %49 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %48, align 8
  %50 = icmp eq %"class.blink::BidiContext"* %49, null
  br i1 %50, label %107, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = atomicrmw add i32* %52, i32 1 monotonic
  %54 = icmp sgt i32 %53, 0
  br i1 %54, label %57, label %55

55:                                               ; preds = %51
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #19
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.18, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0)) #19
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #19
  br label %57

57:                                               ; preds = %55, %51
  %58 = ptrtoint %"class.blink::BidiContext"* %49 to i64
  %59 = icmp eq i64 %43, 0
  br i1 %59, label %107, label %60

60:                                               ; preds = %57
  %61 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw sub i32* %61, i32 1 acq_rel
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %107

64:                                               ; preds = %60
  call void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"* nonnull %47) #19
  %65 = inttoptr i64 %43 to i8*
  call void @free(i8* %65) #19
  br label %107

66:                                               ; preds = %41
  %67 = inttoptr i64 %43 to %"class.blink::BidiContext"*
  %68 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %67, i64 0, i32 1
  %69 = load i16, i16* %68, align 4
  %70 = trunc i16 %69 to i8
  %71 = and i8 %70, 127
  br label %79

72:                                               ; preds = %41
  %73 = inttoptr i64 %43 to %"class.blink::BidiContext"*
  %74 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %73, i64 0, i32 1
  %75 = load i16, i16* %74, align 4
  %76 = trunc i16 %75 to i8
  %77 = and i8 %76, 127
  switch i32 %45, label %85 [
    i32 12, label %78
    i32 15, label %79
  ]

78:                                               ; preds = %72
  br label %85

79:                                               ; preds = %72, %66
  %80 = phi i8 [ %71, %66 ], [ %77, %72 ]
  %81 = phi %"class.blink::BidiContext"* [ %67, %66 ], [ %73, %72 ]
  %82 = phi i1 [ false, %66 ], [ true, %72 ]
  %83 = add nuw i8 %80, 1
  %84 = or i8 %83, 1
  br label %89

85:                                               ; preds = %72, %78
  %86 = phi i1 [ true, %78 ], [ false, %72 ]
  %87 = add nuw i8 %77, 2
  %88 = and i8 %87, -2
  br label %89

89:                                               ; preds = %85, %79
  %90 = phi %"class.blink::BidiContext"* [ %81, %79 ], [ %73, %85 ]
  %91 = phi i1 [ %82, %79 ], [ %86, %85 ]
  %92 = phi i32 [ 1, %79 ], [ 0, %85 ]
  %93 = phi i8 [ %84, %79 ], [ %88, %85 ]
  %94 = icmp ult i8 %93, 125
  br i1 %94, label %95, label %107

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"class.blink::BidiEmbedding", %"class.blink::BidiEmbedding"* %42, i64 0, i32 1
  %97 = load i32, i32* %96, align 4
  %98 = call %"class.blink::BidiContext"* @_ZN5blink11BidiContext6CreateEhN3WTF7unicode13CharDirectionEbNS_19BidiEmbeddingSourceEPS0_(i8 zeroext %93, i32 %92, i1 zeroext %91, i32 %97, %"class.blink::BidiContext"* %90) #19
  %99 = ptrtoint %"class.blink::BidiContext"* %98 to i64
  %100 = icmp eq %"class.blink::BidiContext"* %90, null
  br i1 %100, label %107, label %101

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = atomicrmw sub i32* %102, i32 1 acq_rel
  %104 = icmp eq i32 %103, 1
  br i1 %104, label %105, label %107

105:                                              ; preds = %101
  call void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"* nonnull %90) #19
  %106 = bitcast %"class.blink::BidiContext"* %90 to i8*
  call void @free(i8* %106) #19
  br label %107

107:                                              ; preds = %105, %101, %95, %64, %60, %57, %89, %46
  %108 = phi i64 [ %43, %46 ], [ %43, %89 ], [ %58, %57 ], [ %58, %60 ], [ %58, %64 ], [ %99, %95 ], [ %99, %101 ], [ %99, %105 ]
  %109 = getelementptr inbounds %"class.blink::BidiEmbedding", %"class.blink::BidiEmbedding"* %42, i64 1
  %110 = icmp eq %"class.blink::BidiEmbedding"* %109, %28
  br i1 %110, label %32, label %41

111:                                              ; preds = %32
  %112 = and i32 %39, 1
  %113 = and i8 %37, 1
  %114 = zext i8 %113 to i32
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE27RaiseExplicitEmbeddingLevelERNS_11BidiRunListIS2_EEN3WTF7unicode13CharDirectionESA_(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %1, i32 %112, i32 %114)
  br label %119

115:                                              ; preds = %32
  %116 = icmp ult i8 %38, %11
  br i1 %116, label %117, label %119

117:                                              ; preds = %115
  %118 = and i32 %39, 1
  call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE27LowerExplicitEmbeddingLevelERNS_11BidiRunListIS2_EEN3WTF7unicode13CharDirectionE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %1, i32 %118)
  br label %119

119:                                              ; preds = %115, %117, %111
  %120 = icmp eq i64 %33, 0
  br i1 %120, label %128, label %121

121:                                              ; preds = %119
  %122 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = atomicrmw add i32* %122, i32 1 monotonic
  %124 = icmp sgt i32 %123, 0
  br i1 %124, label %128, label %125

125:                                              ; preds = %121
  %126 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %126) #19
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.18, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0)) #19
  %127 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126) #19
  br label %128

128:                                              ; preds = %119, %121, %125
  %129 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 3
  %130 = bitcast %class.scoped_refptr.1841* %129 to i64*
  %131 = getelementptr inbounds %class.scoped_refptr.1841, %class.scoped_refptr.1841* %129, i64 0, i32 0
  %132 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %131, align 8
  store i64 %33, i64* %130, align 8
  %133 = icmp eq %"class.blink::BidiContext"* %132, null
  br i1 %133, label %140, label %134

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %132, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = atomicrmw sub i32* %135, i32 1 acq_rel
  %137 = icmp eq i32 %136, 1
  br i1 %137, label %138, label %140

138:                                              ; preds = %134
  call void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"* nonnull %132) #19
  %139 = bitcast %"class.blink::BidiContext"* %132 to i8*
  call void @free(i8* %139) #19
  br label %140

140:                                              ; preds = %128, %134, %138
  %141 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 19, i32 0, i32 0, i32 1
  %142 = load i32, i32* %141, align 8
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %157, label %144

144:                                              ; preds = %140
  %145 = load i32, i32* %25, align 4
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %148, label %147

147:                                              ; preds = %144
  store i32 0, i32* %25, align 4
  br label %148

148:                                              ; preds = %147, %144
  %149 = load %"class.blink::BidiEmbedding"*, %"class.blink::BidiEmbedding"** %23, align 8
  %150 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 19, i32 0, i32 1, i64 0
  %151 = ptrtoint i8* %150 to i64
  %152 = bitcast %"class.WTF::Vector.3145"* %22 to i64*
  store atomic i64 %151, i64* %152 monotonic, align 8
  store i32 8, i32* %141, align 8
  %153 = bitcast i8* %150 to %"class.blink::BidiEmbedding"*
  %154 = icmp eq %"class.blink::BidiEmbedding"* %149, %153
  br i1 %154, label %157, label %155, !prof !4

155:                                              ; preds = %148
  %156 = getelementptr inbounds %"class.WTF::Vector.3145", %"class.WTF::Vector.3145"* %22, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.3146"* %156, %"class.blink::BidiEmbedding"* %149) #19
  br label %157

157:                                              ; preds = %140, %148, %155
  %158 = icmp ne i8 %11, %38
  br i1 %120, label %165, label %159

159:                                              ; preds = %157
  %160 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = atomicrmw sub i32* %160, i32 1 acq_rel
  %162 = icmp eq i32 %161, 1
  br i1 %162, label %163, label %165

163:                                              ; preds = %159
  call void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"* nonnull %34) #19
  %164 = inttoptr i64 %33 to i8*
  call void @free(i8* %164) #19
  br label %165

165:                                              ; preds = %157, %159, %163
  ret i1 %158
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE21ReorderRunsFromLevelsERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"*, %"class.blink::BidiRunList"* dereferenceable(32)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::BidiRunList", %"class.blink::BidiRunList"* %1, i64 0, i32 0
  %4 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %3, align 8
  %5 = icmp eq %"struct.blink::BidiCharacterRun"* %4, null
  br i1 %5, label %6, label %19

6:                                                ; preds = %19, %2
  %7 = phi i8 [ 0, %2 ], [ %26, %19 ]
  %8 = phi i8 [ 125, %2 ], [ %28, %19 ]
  %9 = and i8 %8, 1
  %10 = xor i8 %9, 1
  %11 = add i8 %10, %8
  %12 = getelementptr inbounds %"class.blink::BidiRunList", %"class.blink::BidiRunList"* %1, i64 0, i32 3
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = icmp ult i8 %7, %11
  br i1 %15, label %191, label %16

16:                                               ; preds = %6
  %17 = icmp eq i32 %14, 0
  %18 = getelementptr inbounds %"class.blink::BidiRunList", %"class.blink::BidiRunList"* %1, i64 0, i32 1
  br label %32

19:                                               ; preds = %2, %19
  %20 = phi %"struct.blink::BidiCharacterRun"* [ %30, %19 ], [ %4, %2 ]
  %21 = phi i8 [ %28, %19 ], [ 125, %2 ]
  %22 = phi i8 [ %26, %19 ], [ 0, %2 ]
  %23 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %20, i64 0, i32 1
  %24 = load i8, i8* %23, align 1
  %25 = icmp ult i8 %24, %22
  %26 = select i1 %25, i8 %22, i8 %24
  %27 = icmp ult i8 %21, %24
  %28 = select i1 %27, i8 %21, i8 %24
  %29 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %20, i64 0, i32 2
  %30 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %29, align 8
  %31 = icmp eq %"struct.blink::BidiCharacterRun"* %30, null
  br i1 %31, label %6, label %19

32:                                               ; preds = %189, %16
  %33 = phi %"struct.blink::BidiCharacterRun"* [ %4, %16 ], [ %190, %189 ]
  %34 = phi i8 [ %7, %16 ], [ %187, %189 ]
  br i1 %17, label %186, label %35

35:                                               ; preds = %32, %184
  %36 = phi %"struct.blink::BidiCharacterRun"* [ %75, %184 ], [ %33, %32 ]
  %37 = phi i32 [ %74, %184 ], [ 0, %32 ]
  %38 = icmp ult i32 %37, %14
  %39 = icmp ne %"struct.blink::BidiCharacterRun"* %36, null
  %40 = and i1 %38, %39
  br i1 %40, label %41, label %54

41:                                               ; preds = %35, %47
  %42 = phi %"struct.blink::BidiCharacterRun"* [ %49, %47 ], [ %36, %35 ]
  %43 = phi i32 [ %50, %47 ], [ %37, %35 ]
  %44 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %42, i64 0, i32 1
  %45 = load i8, i8* %44, align 1
  %46 = icmp ult i8 %45, %34
  br i1 %46, label %47, label %54

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %42, i64 0, i32 2
  %49 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %48, align 8
  %50 = add nuw i32 %43, 1
  %51 = icmp ult i32 %50, %14
  %52 = icmp ne %"struct.blink::BidiCharacterRun"* %49, null
  %53 = and i1 %51, %52
  br i1 %53, label %41, label %54

54:                                               ; preds = %41, %47, %35
  %55 = phi i32 [ %37, %35 ], [ %50, %47 ], [ %43, %41 ]
  %56 = phi %"struct.blink::BidiCharacterRun"* [ %36, %35 ], [ %49, %47 ], [ %42, %41 ]
  %57 = icmp ule i32 %55, %14
  %58 = icmp ne %"struct.blink::BidiCharacterRun"* %56, null
  %59 = and i1 %57, %58
  br i1 %59, label %60, label %73

60:                                               ; preds = %54, %66
  %61 = phi %"struct.blink::BidiCharacterRun"* [ %68, %66 ], [ %56, %54 ]
  %62 = phi i32 [ %69, %66 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %61, i64 0, i32 1
  %64 = load i8, i8* %63, align 1
  %65 = icmp ult i8 %64, %34
  br i1 %65, label %73, label %66

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %61, i64 0, i32 2
  %68 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %67, align 8
  %69 = add i32 %62, 1
  %70 = icmp ule i32 %69, %14
  %71 = icmp ne %"struct.blink::BidiCharacterRun"* %68, null
  %72 = and i1 %70, %71
  br i1 %72, label %60, label %73

73:                                               ; preds = %66, %60, %54
  %74 = phi i32 [ %55, %54 ], [ %62, %60 ], [ %69, %66 ]
  %75 = phi %"struct.blink::BidiCharacterRun"* [ %56, %54 ], [ %61, %60 ], [ %68, %66 ]
  %76 = add i32 %74, -1
  %77 = icmp ult i32 %55, %76
  br i1 %77, label %78, label %184

78:                                               ; preds = %73
  %79 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %3, align 8
  %80 = icmp eq i32 %55, 0
  br i1 %80, label %99, label %81

81:                                               ; preds = %78
  %82 = add i32 %55, -1
  %83 = and i32 %55, 7
  %84 = icmp ult i32 %82, 7
  br i1 %84, label %87, label %85

85:                                               ; preds = %81
  %86 = sub i32 %55, %83
  br label %122

87:                                               ; preds = %122, %81
  %88 = phi %"struct.blink::BidiCharacterRun"* [ undef, %81 ], [ %138, %122 ]
  %89 = phi %"struct.blink::BidiCharacterRun"* [ undef, %81 ], [ %140, %122 ]
  %90 = phi %"struct.blink::BidiCharacterRun"* [ %79, %81 ], [ %140, %122 ]
  %91 = icmp eq i32 %83, 0
  br i1 %91, label %99, label %92

92:                                               ; preds = %87, %92
  %93 = phi %"struct.blink::BidiCharacterRun"* [ %96, %92 ], [ %90, %87 ]
  %94 = phi i32 [ %97, %92 ], [ %83, %87 ]
  %95 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %93, i64 0, i32 2
  %96 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %95, align 8
  %97 = add i32 %94, -1
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %92, !llvm.loop !48

99:                                               ; preds = %87, %92, %78
  %100 = phi %"struct.blink::BidiCharacterRun"* [ null, %78 ], [ %88, %87 ], [ %93, %92 ]
  %101 = phi %"struct.blink::BidiCharacterRun"* [ %79, %78 ], [ %89, %87 ], [ %96, %92 ]
  %102 = xor i32 %55, 7
  %103 = add i32 %74, %102
  %104 = add i32 %74, -2
  %105 = sub i32 %104, %55
  %106 = and i32 %103, 7
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %117, label %108

108:                                              ; preds = %99, %108
  %109 = phi %"struct.blink::BidiCharacterRun"* [ %114, %108 ], [ %101, %99 ]
  %110 = phi i32 [ %112, %108 ], [ %55, %99 ]
  %111 = phi i32 [ %115, %108 ], [ %106, %99 ]
  %112 = add nuw i32 %110, 1
  %113 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %109, i64 0, i32 2
  %114 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %113, align 8
  %115 = add i32 %111, -1
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %108, !llvm.loop !49

117:                                              ; preds = %108, %99
  %118 = phi %"struct.blink::BidiCharacterRun"* [ undef, %99 ], [ %114, %108 ]
  %119 = phi %"struct.blink::BidiCharacterRun"* [ %101, %99 ], [ %114, %108 ]
  %120 = phi i32 [ %55, %99 ], [ %112, %108 ]
  %121 = icmp ult i32 %105, 7
  br i1 %121, label %164, label %143

122:                                              ; preds = %122, %85
  %123 = phi %"struct.blink::BidiCharacterRun"* [ %79, %85 ], [ %140, %122 ]
  %124 = phi i32 [ %86, %85 ], [ %141, %122 ]
  %125 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %123, i64 0, i32 2
  %126 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %125, align 8
  %127 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %126, i64 0, i32 2
  %128 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %127, align 8
  %129 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %128, i64 0, i32 2
  %130 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %129, align 8
  %131 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %130, i64 0, i32 2
  %132 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %131, align 8
  %133 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %132, i64 0, i32 2
  %134 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %133, align 8
  %135 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %134, i64 0, i32 2
  %136 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %135, align 8
  %137 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %136, i64 0, i32 2
  %138 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %137, align 8
  %139 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %138, i64 0, i32 2
  %140 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %139, align 8
  %141 = add i32 %124, -8
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %87, label %122

143:                                              ; preds = %117, %143
  %144 = phi %"struct.blink::BidiCharacterRun"* [ %162, %143 ], [ %119, %117 ]
  %145 = phi i32 [ %160, %143 ], [ %120, %117 ]
  %146 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %144, i64 0, i32 2
  %147 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %146, align 8
  %148 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %147, i64 0, i32 2
  %149 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %148, align 8
  %150 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %149, i64 0, i32 2
  %151 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %150, align 8
  %152 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %151, i64 0, i32 2
  %153 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %152, align 8
  %154 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %153, i64 0, i32 2
  %155 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %154, align 8
  %156 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %155, i64 0, i32 2
  %157 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %156, align 8
  %158 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %157, i64 0, i32 2
  %159 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %158, align 8
  %160 = add nuw i32 %145, 8
  %161 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %159, i64 0, i32 2
  %162 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %161, align 8
  %163 = icmp eq i32 %160, %76
  br i1 %163, label %164, label %143

164:                                              ; preds = %143, %117
  %165 = phi %"struct.blink::BidiCharacterRun"* [ %118, %117 ], [ %162, %143 ]
  %166 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %165, i64 0, i32 2
  %167 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %166, align 8
  %168 = icmp ugt i32 %55, %76
  br i1 %168, label %177, label %169

169:                                              ; preds = %164, %169
  %170 = phi %"struct.blink::BidiCharacterRun"* [ %174, %169 ], [ %101, %164 ]
  %171 = phi %"struct.blink::BidiCharacterRun"* [ %170, %169 ], [ %167, %164 ]
  %172 = phi i32 [ %175, %169 ], [ %55, %164 ]
  %173 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %170, i64 0, i32 2
  %174 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %173, align 8
  store %"struct.blink::BidiCharacterRun"* %171, %"struct.blink::BidiCharacterRun"** %173, align 8
  %175 = add i32 %172, 1
  %176 = icmp ugt i32 %175, %76
  br i1 %176, label %177, label %169

177:                                              ; preds = %169, %164
  %178 = icmp eq %"struct.blink::BidiCharacterRun"* %100, null
  %179 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %100, i64 0, i32 2
  %180 = select i1 %178, %"struct.blink::BidiCharacterRun"** %3, %"struct.blink::BidiCharacterRun"** %179
  store %"struct.blink::BidiCharacterRun"* %165, %"struct.blink::BidiCharacterRun"** %180, align 8
  %181 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %101, i64 0, i32 2
  store %"struct.blink::BidiCharacterRun"* %167, %"struct.blink::BidiCharacterRun"** %181, align 8
  %182 = icmp eq %"struct.blink::BidiCharacterRun"* %167, null
  br i1 %182, label %183, label %184

183:                                              ; preds = %177
  store %"struct.blink::BidiCharacterRun"* %101, %"struct.blink::BidiCharacterRun"** %18, align 8
  br label %184

184:                                              ; preds = %73, %177, %183
  %185 = icmp ult i32 %74, %14
  br i1 %185, label %35, label %186

186:                                              ; preds = %184, %32
  %187 = add i8 %34, -1
  %188 = icmp ult i8 %187, %11
  br i1 %188, label %191, label %189

189:                                              ; preds = %186
  %190 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %3, align 8
  br label %32

191:                                              ; preds = %186, %6
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #18

declare i32 @u_charDirection_69(i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3145"*, %"class.blink::BidiEmbedding"* dereferenceable(8)) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3145", %"class.WTF::Vector.3145"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3145", %"class.WTF::Vector.3145"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::BidiEmbedding"*, %"class.blink::BidiEmbedding"** %6, align 8
  %8 = icmp ugt %"class.blink::BidiEmbedding"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::BidiEmbedding", %"class.blink::BidiEmbedding"* %7, i64 %10
  %12 = icmp ugt %"class.blink::BidiEmbedding"* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.3145"* %0, i32 %5) #19
  %14 = load %"class.blink::BidiEmbedding"*, %"class.blink::BidiEmbedding"** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint %"class.blink::BidiEmbedding"* %1 to i64
  %17 = ptrtoint %"class.blink::BidiEmbedding"* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 3
  tail call void @_ZN3WTF6VectorIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.3145"* %0, i32 %5) #19
  %20 = load %"class.blink::BidiEmbedding"*, %"class.blink::BidiEmbedding"** %6, align 8
  %21 = getelementptr inbounds %"class.blink::BidiEmbedding", %"class.blink::BidiEmbedding"* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %"class.blink::BidiEmbedding"* [ %14, %13 ], [ %20, %15 ]
  %24 = phi %"class.blink::BidiEmbedding"* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::BidiEmbedding", %"class.blink::BidiEmbedding"* %23, i64 %26
  %28 = bitcast %"class.blink::BidiEmbedding"* %24 to i64*
  %29 = bitcast %"class.blink::BidiEmbedding"* %27 to i64*
  %30 = load i64, i64* %28, align 4
  store i64 %30, i64* %29, align 4
  %31 = load i32, i32* %3, align 4
  %32 = add i32 %31, 1
  store i32 %32, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.3145"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.3145", %"class.WTF::Vector.3145"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #19
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #19
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13, i64 0, i64 0), i8* %15, i8* %16) #19
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.14, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #19
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #19
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #19
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !4

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.3145", %"class.WTF::Vector.3145"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::BidiEmbedding"*, %"class.blink::BidiEmbedding"** %31, align 8
  %33 = icmp eq %"class.blink::BidiEmbedding"* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13BidiEmbeddingEEEmm(i64 %37) #19
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13BidiEmbeddingEEEPKcv, i64 0, i64 0)) #19
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.3145"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 3
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.3145", %"class.WTF::Vector.3145"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.3145"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3145"* %0, i32 %27) #19
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3145"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.3145", %"class.WTF::Vector.3145"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::BidiEmbedding"*, %"class.blink::BidiEmbedding"** %5, align 8
  %7 = icmp eq %"class.blink::BidiEmbedding"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.3145", %"class.WTF::Vector.3145"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::BidiEmbedding"*
  %10 = icmp eq %"class.blink::BidiEmbedding"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.3145"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.3145", %"class.WTF::Vector.3145"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.3145", %"class.WTF::Vector.3145"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.3145", %"class.WTF::Vector.3145"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.3145"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.3145", %"class.WTF::Vector.3145"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !3

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast %"class.blink::BidiEmbedding"* %6 to i8*
  %27 = shl nuw nsw i64 %25, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %8, i8* nonnull align 4 %26, i64 %27, i1 false) #19
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.3146"* %19, %"class.blink::BidiEmbedding"* nonnull %6) #19
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13BidiEmbeddingEEEmm(i64 %30) #19
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13BidiEmbeddingEEEPKcv, i64 0, i64 0)) #19
  %33 = lshr i64 %31, 3
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.3145", %"class.WTF::Vector.3145"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::BidiEmbedding"*, %"class.blink::BidiEmbedding"** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne %"class.blink::BidiEmbedding"* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !4

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.3145", %"class.WTF::Vector.3145"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast %"class.blink::BidiEmbedding"* %36 to i8*
  %45 = shl nuw nsw i64 %43, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %32, i8* nonnull align 4 %44, i64 %45, i1 false) #19
  %46 = load %"class.blink::BidiEmbedding"*, %"class.blink::BidiEmbedding"** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"class.blink::BidiEmbedding"* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.3145", %"class.WTF::Vector.3145"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to %"class.blink::BidiEmbedding"*
  %51 = icmp eq %"class.blink::BidiEmbedding"* %48, %50
  br i1 %51, label %54, label %52, !prof !4

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.3145", %"class.WTF::Vector.3145"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.3146"* %53, %"class.blink::BidiEmbedding"* %48) #19
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.3145"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.3145", %"class.WTF::Vector.3145"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13BidiEmbeddingEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #19
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #19
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16, i64 0, i64 0), i8* %11, i8* %12) #19
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.17, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #19
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #19
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #19
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #19
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE27RaiseExplicitEmbeddingLevelERNS_11BidiRunListIS2_EEN3WTF7unicode13CharDirectionESA_(%"class.blink::BidiResolver"*, %"class.blink::BidiRunList"* dereferenceable(32), i32, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 10
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %66

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 3
  %11 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 3, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %16, label %22

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::TextRunIterator", %"class.blink::TextRunIterator"* %9, i64 0, i32 0
  %18 = load %"class.blink::TextRun"*, %"class.blink::TextRun"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::TextRunIterator", %"class.blink::TextRunIterator"* %10, i64 0, i32 0
  %20 = load %"class.blink::TextRun"*, %"class.blink::TextRun"** %19, align 8
  %21 = icmp eq %"class.blink::TextRun"* %18, %20
  br i1 %21, label %66, label %22

22:                                               ; preds = %16, %8
  %23 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 5
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 10
  br i1 %25, label %26, label %31

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = icmp ne i32 %28, 0
  %30 = zext i1 %29 to i32
  store i32 %30, i32* %23, align 8
  br label %31

31:                                               ; preds = %22, %26
  %32 = icmp eq i32 %3, 0
  %33 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 0
  %34 = load i32, i32* %33, align 8
  br i1 %32, label %35, label %49

35:                                               ; preds = %31
  switch i32 %34, label %42 [
    i32 2, label %36
    i32 5, label %41
  ]

36:                                               ; preds = %35
  %37 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %63, label %40

40:                                               ; preds = %36
  store i32 2, i32* %23, align 8
  tail call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %1)
  br label %63

41:                                               ; preds = %35
  store i32 5, i32* %23, align 8
  tail call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %1)
  br label %63

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = icmp ne i32 %44, 0
  %46 = icmp eq i32 %2, 0
  %47 = and i1 %46, %45
  br i1 %47, label %48, label %63

48:                                               ; preds = %42
  tail call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %1)
  store i32 0, i32* %23, align 8
  br label %63

49:                                               ; preds = %31
  switch i32 %34, label %56 [
    i32 5, label %62
    i32 2, label %50
  ]

50:                                               ; preds = %49
  %51 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = icmp ne i32 %52, 0
  %54 = icmp eq i32 %2, 1
  %55 = or i1 %54, %53
  br i1 %55, label %62, label %63

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 0
  %60 = icmp eq i32 %2, 1
  %61 = and i1 %60, %59
  br i1 %61, label %62, label %63

62:                                               ; preds = %49, %56, %50
  tail call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %1)
  store i32 1, i32* %23, align 8
  br label %63

63:                                               ; preds = %50, %36, %56, %62, %40, %42, %48, %41
  %64 = bitcast %"class.blink::TextRunIterator"* %9 to i8*
  %65 = bitcast %"class.blink::TextRunIterator"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 16, i1 false)
  br label %66

66:                                               ; preds = %16, %4, %63
  tail call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %1)
  store i8 1, i8* %5, align 8
  %67 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 2
  store i32 %3, i32* %67, align 8
  %68 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 1
  store i32 %3, i32* %68, align 4
  %69 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2
  %70 = bitcast %"class.blink::TextRunIterator"* %69 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE27LowerExplicitEmbeddingLevelERNS_11BidiRunListIS2_EEN3WTF7unicode13CharDirectionE(%"class.blink::BidiResolver"*, %"class.blink::BidiRunList"* dereferenceable(32), i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 10
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %55

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 3, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %11, %13
  br i1 %14, label %15, label %21

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.blink::TextRunIterator", %"class.blink::TextRunIterator"* %8, i64 0, i32 0
  %17 = load %"class.blink::TextRun"*, %"class.blink::TextRun"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::TextRunIterator", %"class.blink::TextRunIterator"* %9, i64 0, i32 0
  %19 = load %"class.blink::TextRun"*, %"class.blink::TextRun"** %18, align 8
  %20 = icmp eq %"class.blink::TextRun"* %17, %19
  br i1 %20, label %55, label %21

21:                                               ; preds = %15, %7
  %22 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 5
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 10
  br i1 %24, label %25, label %30

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = icmp ne i32 %27, 0
  %29 = zext i1 %28 to i32
  store i32 %29, i32* %22, align 8
  br label %30

30:                                               ; preds = %21, %25
  %31 = icmp eq i32 %2, 0
  %32 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 0
  %33 = load i32, i32* %32, align 8
  br i1 %31, label %34, label %46

34:                                               ; preds = %30
  switch i32 %33, label %41 [
    i32 2, label %35
    i32 5, label %40
  ]

35:                                               ; preds = %34
  %36 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %52, label %39

39:                                               ; preds = %35
  store i32 2, i32* %22, align 8
  tail call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %1)
  br label %52

40:                                               ; preds = %34
  store i32 5, i32* %22, align 8
  tail call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %1)
  br label %52

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %52, label %45

45:                                               ; preds = %41
  tail call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %1)
  store i32 0, i32* %22, align 8
  br label %52

46:                                               ; preds = %30
  switch i32 %33, label %47 [
    i32 5, label %51
    i32 2, label %51
  ]

47:                                               ; preds = %46
  %48 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %46, %46, %47
  tail call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %1)
  store i32 1, i32* %22, align 8
  br label %52

52:                                               ; preds = %35, %41, %47, %51, %39, %45, %40
  %53 = bitcast %"class.blink::TextRunIterator"* %8 to i8*
  %54 = bitcast %"class.blink::TextRunIterator"* %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 16, i1 false)
  br label %55

55:                                               ; preds = %15, %3, %52
  tail call void @_ZN5blink12BidiResolverINS_15TextRunIteratorENS_16BidiCharacterRunENS_13NoIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %1)
  store i8 1, i8* %4, align 8
  %56 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 2
  store i32 %2, i32* %56, align 8
  %57 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 1
  store i32 %2, i32* %57, align 4
  %58 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2
  %59 = bitcast %"class.blink::TextRunIterator"* %58 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 16, i1 false)
  ret void
}

declare void @_ZN5blink12PhysicalRect14UniteIfNonZeroERKS0_(%"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"struct.WTF::KeyValuePair.3039"* @_ZN3WTF9HashTableIPN5blink10LayoutTextENS_12KeyValuePairIS3_PNS1_12_GLOBAL__N_115SecureTextTimerEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6ExpandEPS8_(%"struct.WTF::KeyValuePair.3039"* readnone) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_119GetSecureTextTimersEvE5s_map, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %28, label %7

7:                                                ; preds = %1
  %8 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_119GetSecureTextTimersEvE5s_map, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %9 = mul i32 %8, 6
  %10 = shl i32 %5, 1
  %11 = icmp ult i32 %9, %10
  br i1 %11, label %28, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #19
  %14 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %14, align 8
  %15 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = icmp ugt i32 %10, %5
  br i1 %16, label %17, label %18

17:                                               ; preds = %12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* null, i8** %14, align 8
  br label %27

18:                                               ; preds = %12
  %19 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %10) #19
  %20 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %5) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i64 0, i64 0), i8* %19, i8* %20) #19
  %21 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* %22, i8** %14, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.34, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %3) #19
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #19
  br label %27

27:                                               ; preds = %17, %18, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #19
  br label %28

28:                                               ; preds = %7, %1, %27
  %29 = phi i32 [ %10, %27 ], [ 8, %1 ], [ %5, %7 ]
  %30 = call fastcc %"struct.WTF::KeyValuePair.3039"* @_ZN3WTF9HashTableIPN5blink10LayoutTextENS_12KeyValuePairIS3_PNS1_12_GLOBAL__N_115SecureTextTimerEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6RehashEjPS8_(i32 %29, %"struct.WTF::KeyValuePair.3039"* %0)
  ret %"struct.WTF::KeyValuePair.3039"* %30
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_126SelectionDisplayItemClientD0Ev(%"class.blink::(anonymous namespace)::SelectionDisplayItemClient"*) unnamed_addr #5 align 2 {
  %2 = bitcast %"class.blink::(anonymous namespace)::SelectionDisplayItemClient"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_126SelectionDisplayItemClient9DebugNameEv(%"class.blink::(anonymous namespace)::SelectionDisplayItemClient"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.35, i64 0, i64 0), i64 9) #19
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  ret %"class.WTF::StringImpl"* %4
}

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"struct.WTF::KeyValuePair.3044"* @_ZN3WTF9HashTableIPKN5blink10LayoutTextENS_12KeyValuePairIS4_NSt3__110unique_ptrINS1_12_GLOBAL__N_126SelectionDisplayItemClientENS6_14default_deleteIS9_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSI_ISC_EEEESJ_NS_18PartitionAllocatorEE6ExpandEPSD_(%"struct.WTF::KeyValuePair.3044"* readnone) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.3329", %"class.WTF::StaticSingleton.3329"* @_ZZN5blink12_GLOBAL__N_132GetSelectionDisplayItemClientMapEvE5s_map, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %28, label %7

7:                                                ; preds = %1
  %8 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.3329", %"class.WTF::StaticSingleton.3329"* @_ZZN5blink12_GLOBAL__N_132GetSelectionDisplayItemClientMapEvE5s_map, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %9 = mul i32 %8, 6
  %10 = shl i32 %5, 1
  %11 = icmp ult i32 %9, %10
  br i1 %11, label %28, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #19
  %14 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %14, align 8
  %15 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = icmp ugt i32 %10, %5
  br i1 %16, label %17, label %18

17:                                               ; preds = %12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* null, i8** %14, align 8
  br label %27

18:                                               ; preds = %12
  %19 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %10) #19
  %20 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %5) #19
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i64 0, i64 0), i8* %19, i8* %20) #19
  %21 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* %22, i8** %14, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #19
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.34, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %3) #19
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #19
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #19
  br label %27

27:                                               ; preds = %17, %18, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #19
  br label %28

28:                                               ; preds = %7, %1, %27
  %29 = phi i32 [ %10, %27 ], [ 8, %1 ], [ %5, %7 ]
  %30 = call fastcc %"struct.WTF::KeyValuePair.3044"* @_ZN3WTF9HashTableIPKN5blink10LayoutTextENS_12KeyValuePairIS4_NSt3__110unique_ptrINS1_12_GLOBAL__N_126SelectionDisplayItemClientENS6_14default_deleteIS9_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSI_ISC_EEEESJ_NS_18PartitionAllocatorEE6RehashEjPSD_(i32 %29, %"struct.WTF::KeyValuePair.3044"* %0)
  ret %"struct.WTF::KeyValuePair.3044"* %30
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind }
attributes #13 = { cold noreturn nounwind }
attributes #14 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind readnone speculatable }
attributes #16 = { nounwind readnone }
attributes #17 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #19 = { nounwind }
attributes #20 = { builtin nounwind }
attributes #21 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!"branch_weights", i32 1, i32 1048575}
!6 = !{!7, !9}
!7 = distinct !{!7, !8, !"_ZNK5blink12LayoutObject23LocalRectToAncestorQuadERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj: argument 0"}
!8 = distinct !{!8, !"_ZNK5blink12LayoutObject23LocalRectToAncestorQuadERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj"}
!9 = distinct !{!9, !10, !"_ZNK5blink12LayoutObject23LocalRectToAbsoluteQuadERKNS_12PhysicalRectEj: argument 0"}
!10 = distinct !{!10, !"_ZNK5blink12LayoutObject23LocalRectToAbsoluteQuadERKNS_12PhysicalRectEj"}
!11 = !{!12, !14}
!12 = distinct !{!12, !13, !"_ZNK5blink12LayoutObject23LocalRectToAncestorQuadERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj: argument 0"}
!13 = distinct !{!13, !"_ZNK5blink12LayoutObject23LocalRectToAncestorQuadERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj"}
!14 = distinct !{!14, !15, !"_ZNK5blink12LayoutObject23LocalRectToAbsoluteQuadERKNS_12PhysicalRectEj: argument 0"}
!15 = distinct !{!15, !"_ZNK5blink12LayoutObject23LocalRectToAbsoluteQuadERKNS_12PhysicalRectEj"}
!16 = !{!17, !19}
!17 = distinct !{!17, !18, !"_ZNK5blink12LayoutObject23LocalRectToAncestorQuadERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj: argument 0"}
!18 = distinct !{!18, !"_ZNK5blink12LayoutObject23LocalRectToAncestorQuadERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj"}
!19 = distinct !{!19, !20, !"_ZNK5blink12LayoutObject23LocalRectToAbsoluteQuadERKNS_12PhysicalRectEj: argument 0"}
!20 = distinct !{!20, !"_ZNK5blink12LayoutObject23LocalRectToAbsoluteQuadERKNS_12PhysicalRectEj"}
!21 = !{!22, !24}
!22 = distinct !{!22, !23, !"_ZNK5blink12LayoutObject23LocalRectToAncestorQuadERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj: argument 0"}
!23 = distinct !{!23, !"_ZNK5blink12LayoutObject23LocalRectToAncestorQuadERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj"}
!24 = distinct !{!24, !25, !"_ZNK5blink12LayoutObject23LocalRectToAbsoluteQuadERKNS_12PhysicalRectEj: argument 0"}
!25 = distinct !{!25, !"_ZNK5blink12LayoutObject23LocalRectToAbsoluteQuadERKNS_12PhysicalRectEj"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN5blink12_GLOBAL__N_132CreatePositionWithAffinityForBoxEPKNS_9InlineBoxEiNS0_26ShouldAffinityBeDownstreamE: argument 0"}
!28 = distinct !{!28, !"_ZN5blink12_GLOBAL__N_132CreatePositionWithAffinityForBoxEPKNS_9InlineBoxEiNS0_26ShouldAffinityBeDownstreamE"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN5blink12_GLOBAL__N_132CreatePositionWithAffinityForBoxEPKNS_9InlineBoxEiNS0_26ShouldAffinityBeDownstreamE: argument 0"}
!31 = distinct !{!31, !"_ZN5blink12_GLOBAL__N_132CreatePositionWithAffinityForBoxEPKNS_9InlineBoxEiNS0_26ShouldAffinityBeDownstreamE"}
!32 = !{!"branch_weights", i32 1073205, i32 2146410443}
!33 = distinct !{!33, !34}
!34 = !{!"llvm.loop.unroll.disable"}
!35 = distinct !{!35, !34}
!36 = distinct !{!36, !34}
!37 = distinct !{!37, !34}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE: argument 0"}
!40 = distinct !{!40, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE"}
!41 = !{!42, !44, !46}
!42 = distinct !{!42, !43, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!43 = distinct !{!43, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_"}
!44 = distinct !{!44, !45, !"_ZN4base8BindOnceIMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!45 = distinct !{!45, !"_ZN4base8BindOnceIMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!46 = distinct !{!46, !47, !"_ZN3WTF4BindIMN5blink9TimerBaseEFvvEJN4base7WeakPtrIS2_EEEFvvEEENS5_12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!47 = distinct !{!47, !"_ZN3WTF4BindIMN5blink9TimerBaseEFvvEJN4base7WeakPtrIS2_EEEFvvEEENS5_12OnceCallbackIT1_EEOT_DpOT0_"}
!48 = distinct !{!48, !34}
!49 = distinct !{!49, !34}
