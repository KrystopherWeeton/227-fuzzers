; ModuleID = '../../third_party/angle/src/libANGLE/renderer/gl/egl/DmaBufImageSiblingEGL.cpp'
source_filename = "../../third_party/angle/src/libANGLE/renderer/gl/egl/DmaBufImageSiblingEGL.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.rx::DmaBufImageSiblingEGL" = type <{ %"class.rx::ExternalImageSiblingEGL", %"class.egl::AttributeMap", %"struct.gl::Extents", [4 x i8], %"struct.gl::Format", i8, [7 x i8] }>
%"class.rx::ExternalImageSiblingEGL" = type { %"class.rx::ExternalImageSiblingImpl" }
%"class.rx::ExternalImageSiblingImpl" = type { %"class.rx::FramebufferAttachmentObjectImpl" }
%"class.rx::FramebufferAttachmentObjectImpl" = type { %"class.angle::Subject" }
%"class.angle::Subject" = type { i32 (...)**, %"class.angle::FastVector" }
%"class.angle::FastVector" = type { %"struct.std::__1::array", %"class.angle::ObserverBindingBase"**, i64, i64 }
%"struct.std::__1::array" = type { [8 x %"class.angle::ObserverBindingBase"*] }
%"class.angle::ObserverBindingBase" = type { i32 (...)**, %"class.angle::ObserverInterface"*, i64 }
%"class.angle::ObserverInterface" = type { i32 (...)** }
%"class.egl::AttributeMap" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"struct.gl::Extents" = type { i32, i32, i32 }
%"struct.gl::Format" = type { %"struct.gl::InternalFormat"* }
%"struct.gl::InternalFormat" = type { i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)* }
%"struct.gl::Version" = type { i32, i32 }
%"struct.gl::Extensions" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, float, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.gl::Context" = type opaque
%"class.gl::ImageIndex" = type { i8, i32, i32, i32 }
%"class.rx::FramebufferAttachmentRenderTarget" = type opaque
%"class.gl::LogMessage" = type { i8*, i8*, i32, i32, %"class.std::__1::basic_ostringstream" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.egl::Error" = type { i32, i32, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::basic_string"* }
%"class.egl::Display" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { i32* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN2rx31FramebufferAttachmentObjectImpl25getAttachmentRenderTargetEPKN2gl7ContextEjRKNS1_10ImageIndexEiPPNS_33FramebufferAttachmentRenderTargetE = comdat any

$_ZN2rx31FramebufferAttachmentObjectImpl18initializeContentsEPKN2gl7ContextERKNS1_10ImageIndexE = comdat any

$_ZN2rx24ExternalImageSiblingImpl9onDestroyEPKN3egl7DisplayE = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@_ZTVN2rx21DmaBufImageSiblingEGLE = hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.rx::DmaBufImageSiblingEGL"*)* @_ZN2rx21DmaBufImageSiblingEGLD2Ev to i8*), i8* bitcast (void (%"class.rx::DmaBufImageSiblingEGL"*)* @_ZN2rx21DmaBufImageSiblingEGLD0Ev to i8*), i8* bitcast (i32 (%"class.rx::FramebufferAttachmentObjectImpl"*, %"class.gl::Context"*, i32, %"class.gl::ImageIndex"*, i32, %"class.rx::FramebufferAttachmentRenderTarget"**)* @_ZN2rx31FramebufferAttachmentObjectImpl25getAttachmentRenderTargetEPKN2gl7ContextEjRKNS1_10ImageIndexEiPPNS_33FramebufferAttachmentRenderTargetE to i8*), i8* bitcast (i32 (%"class.rx::FramebufferAttachmentObjectImpl"*, %"class.gl::Context"*, %"class.gl::ImageIndex"*)* @_ZN2rx31FramebufferAttachmentObjectImpl18initializeContentsEPKN2gl7ContextERKNS1_10ImageIndexE to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::DmaBufImageSiblingEGL"*, %"class.egl::Display"*)* @_ZN2rx21DmaBufImageSiblingEGL10initializeEPKN3egl7DisplayE to i8*), i8* bitcast (void (%"class.rx::ExternalImageSiblingImpl"*, %"class.egl::Display"*)* @_ZN2rx24ExternalImageSiblingImpl9onDestroyEPKN3egl7DisplayE to i8*), i8* bitcast (void (%"struct.gl::Format"*, %"class.rx::DmaBufImageSiblingEGL"*)* @_ZNK2rx21DmaBufImageSiblingEGL9getFormatEv to i8*), i8* bitcast (i1 (%"class.rx::DmaBufImageSiblingEGL"*, %"class.gl::Context"*)* @_ZNK2rx21DmaBufImageSiblingEGL12isRenderableEPKN2gl7ContextE to i8*), i8* bitcast (i1 (%"class.rx::DmaBufImageSiblingEGL"*, %"class.gl::Context"*)* @_ZNK2rx21DmaBufImageSiblingEGL12isTexturableEPKN2gl7ContextE to i8*), i8* bitcast (i1 (%"class.rx::DmaBufImageSiblingEGL"*)* @_ZNK2rx21DmaBufImageSiblingEGL5isYUVEv to i8*), i8* bitcast ({ i64, i32 } (%"class.rx::DmaBufImageSiblingEGL"*)* @_ZNK2rx21DmaBufImageSiblingEGL7getSizeEv to i8*), i8* bitcast (i64 (%"class.rx::DmaBufImageSiblingEGL"*)* @_ZNK2rx21DmaBufImageSiblingEGL10getSamplesEv to i8*), i8* bitcast (i8* (%"class.rx::DmaBufImageSiblingEGL"*)* @_ZNK2rx21DmaBufImageSiblingEGL9getBufferEv to i8*), i8* bitcast (void (%"class.rx::DmaBufImageSiblingEGL"*, %"class.std::__1::vector"*)* @_ZNK2rx21DmaBufImageSiblingEGL26getImageCreationAttributesEPNSt3__16vectorIiNS1_9allocatorIiEEEE to i8*)] }, align 8
@__const._ZNK2rx21DmaBufImageSiblingEGL26getImageCreationAttributesEPNSt3__16vectorIiNS1_9allocatorIiEEEE.kForwardedAttribs = private unnamed_addr constant [27 x i32] [i32 12375, i32 12374, i32 12913, i32 12914, i32 12915, i32 12916, i32 12917, i32 12918, i32 12919, i32 12920, i32 12921, i32 12922, i32 12923, i32 12924, i32 12925, i32 12926, i32 13379, i32 13380, i32 13381, i32 13382, i32 13383, i32 13384, i32 13376, i32 13377, i32 13378, i32 13385, i32 13386], align 16
@.str = private unnamed_addr constant [79 x i8] c"../../third_party/angle/src/libANGLE/renderer/gl/egl/DmaBufImageSiblingEGL.cpp\00", align 1
@__FUNCTION__._ZN12_GLOBAL__N_130FourCCFormatToGLInternalFormatEiPb = private unnamed_addr constant [31 x i8] c"FourCCFormatToGLInternalFormat\00", align 1
@.str.1 = private unnamed_addr constant [24 x i8] c"Unknown dma_buf format \00", align 1
@.str.2 = private unnamed_addr constant [34 x i8] c" used to initialize an EGL image.\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN2rx21DmaBufImageSiblingEGLC1ERKN3egl12AttributeMapE = hidden unnamed_addr alias void (%"class.rx::DmaBufImageSiblingEGL"*, %"class.egl::AttributeMap"*), void (%"class.rx::DmaBufImageSiblingEGL"*, %"class.egl::AttributeMap"*)* @_ZN2rx21DmaBufImageSiblingEGLC2ERKN3egl12AttributeMapE
@_ZN2rx21DmaBufImageSiblingEGLD1Ev = hidden unnamed_addr alias void (%"class.rx::DmaBufImageSiblingEGL"*), void (%"class.rx::DmaBufImageSiblingEGL"*)* @_ZN2rx21DmaBufImageSiblingEGLD2Ev

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2rx31FramebufferAttachmentObjectImpl25getAttachmentRenderTargetEPKN2gl7ContextEjRKNS1_10ImageIndexEiPPNS_33FramebufferAttachmentRenderTargetE(%"class.rx::FramebufferAttachmentObjectImpl"*, %"class.gl::Context"*, i32, %"class.gl::ImageIndex"* dereferenceable(16), i32, %"class.rx::FramebufferAttachmentRenderTarget"**) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx21DmaBufImageSiblingEGLC2ERKN3egl12AttributeMapE(%"class.rx::DmaBufImageSiblingEGL"*, %"class.egl::AttributeMap"* dereferenceable(24)) unnamed_addr #1 align 2 {
  %3 = alloca %"class.gl::LogMessage", align 8
  %4 = alloca %"struct.gl::Format", align 8
  %5 = getelementptr inbounds %"class.rx::DmaBufImageSiblingEGL", %"class.rx::DmaBufImageSiblingEGL"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5angle7SubjectC2Ev(%"class.angle::Subject"* %5) #12
  %6 = getelementptr inbounds %"class.rx::DmaBufImageSiblingEGL", %"class.rx::DmaBufImageSiblingEGL"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN2rx21DmaBufImageSiblingEGLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.rx::DmaBufImageSiblingEGL", %"class.rx::DmaBufImageSiblingEGL"* %0, i64 0, i32 1
  tail call void @_ZN3egl12AttributeMapC1ERKS0_(%"class.egl::AttributeMap"* %7, %"class.egl::AttributeMap"* dereferenceable(24) %1) #12
  %8 = getelementptr inbounds %"class.rx::DmaBufImageSiblingEGL", %"class.rx::DmaBufImageSiblingEGL"* %0, i64 0, i32 2, i32 0
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %"class.rx::DmaBufImageSiblingEGL", %"class.rx::DmaBufImageSiblingEGL"* %0, i64 0, i32 2, i32 1
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds %"class.rx::DmaBufImageSiblingEGL", %"class.rx::DmaBufImageSiblingEGL"* %0, i64 0, i32 2, i32 2
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %"class.rx::DmaBufImageSiblingEGL", %"class.rx::DmaBufImageSiblingEGL"* %0, i64 0, i32 4
  tail call void @_ZN2gl6FormatC1Ej(%"struct.gl::Format"* %11, i32 0) #12
  %12 = getelementptr inbounds %"class.rx::DmaBufImageSiblingEGL", %"class.rx::DmaBufImageSiblingEGL"* %0, i64 0, i32 5
  store i8 0, i8* %12, align 8
  %13 = tail call i32 @_ZNK3egl12AttributeMap8getAsIntEl(%"class.egl::AttributeMap"* %7, i64 12375) #12
  store i32 %13, i32* %8, align 8
  %14 = tail call i32 @_ZNK3egl12AttributeMap8getAsIntEl(%"class.egl::AttributeMap"* %7, i64 12374) #12
  store i32 %14, i32* %9, align 4
  store i32 1, i32* %10, align 8
  %15 = tail call i32 @_ZNK3egl12AttributeMap8getAsIntEl(%"class.egl::AttributeMap"* %7, i64 12913) #12
  %16 = bitcast %"struct.gl::Format"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  store i8 0, i8* %12, align 1
  switch i32 %15, label %26 [
    i32 538982482, label %35
    i32 540422482, label %17
    i32 943215175, label %18
    i32 875708993, label %19
    i32 875709016, label %20
    i32 875713089, label %21
    i32 875713112, label %22
    i32 808665665, label %23
    i32 808669761, label %23
    i32 909199186, label %24
    i32 842094158, label %25
    i32 842094169, label %25
    i32 808530000, label %25
  ]

17:                                               ; preds = %2
  br label %35

18:                                               ; preds = %2
  br label %35

19:                                               ; preds = %2
  br label %35

20:                                               ; preds = %2
  br label %35

21:                                               ; preds = %2
  br label %35

22:                                               ; preds = %2
  br label %35

23:                                               ; preds = %2, %2
  br label %35

24:                                               ; preds = %2
  br label %35

25:                                               ; preds = %2, %2, %2
  store i8 1, i8* %12, align 1
  br label %35

26:                                               ; preds = %2
  %27 = tail call zeroext i1 @_ZN2gl4priv30ShouldCreatePlatformLogMessageEi(i32 2) #12
  br i1 %27, label %28, label %35

28:                                               ; preds = %26
  %29 = bitcast %"class.gl::LogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %29) #12
  call void @_ZN2gl10LogMessageC1EPKcS2_ii(%"class.gl::LogMessage"* nonnull %3, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__FUNCTION__._ZN12_GLOBAL__N_130FourCCFormatToGLInternalFormatEiPb, i64 0, i64 0), i32 67, i32 2) #12
  %30 = getelementptr inbounds %"class.gl::LogMessage", %"class.gl::LogMessage"* %3, i64 0, i32 4
  %31 = bitcast %"class.std::__1::basic_ostringstream"* %30 to %"class.std::__1::basic_ostream"*
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %31, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0), i64 23) #12
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %32, i32 %15) #12
  %34 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %33, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2, i64 0, i64 0), i64 33) #12
  call void @_ZN2gl10LogMessageD1Ev(%"class.gl::LogMessage"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %29) #12
  br label %35

35:                                               ; preds = %2, %17, %18, %19, %20, %21, %22, %23, %24, %25, %26, %28
  %36 = phi i32 [ 32849, %25 ], [ 36194, %24 ], [ 32857, %23 ], [ 32849, %22 ], [ 37793, %21 ], [ 32849, %20 ], [ 32856, %19 ], [ 33323, %18 ], [ 33322, %17 ], [ 33321, %2 ], [ 32849, %26 ], [ 32849, %28 ]
  call void @_ZN2gl6FormatC1Ej(%"struct.gl::Format"* nonnull %4, i32 %36) #12
  %37 = call dereferenceable(8) %"struct.gl::Format"* @_ZN2gl6FormataSERKS0_(%"struct.gl::Format"* %11, %"struct.gl::Format"* nonnull dereferenceable(8) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  ret void
}

declare void @_ZN3egl12AttributeMapC1ERKS0_(%"class.egl::AttributeMap"*, %"class.egl::AttributeMap"* dereferenceable(24)) unnamed_addr #2

declare void @_ZN2gl6FormatC1Ej(%"struct.gl::Format"*, i32) unnamed_addr #2

declare i32 @_ZNK3egl12AttributeMap8getAsIntEl(%"class.egl::AttributeMap"*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare dereferenceable(8) %"struct.gl::Format"* @_ZN2gl6FormataSERKS0_(%"struct.gl::Format"*, %"struct.gl::Format"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx21DmaBufImageSiblingEGLD2Ev(%"class.rx::DmaBufImageSiblingEGL"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.rx::DmaBufImageSiblingEGL", %"class.rx::DmaBufImageSiblingEGL"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN2rx21DmaBufImageSiblingEGLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.rx::DmaBufImageSiblingEGL", %"class.rx::DmaBufImageSiblingEGL"* %0, i64 0, i32 1
  tail call void @_ZN3egl12AttributeMapD1Ev(%"class.egl::AttributeMap"* %3) #12
  %4 = getelementptr inbounds %"class.rx::DmaBufImageSiblingEGL", %"class.rx::DmaBufImageSiblingEGL"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5angle7SubjectD2Ev(%"class.angle::Subject"* %4) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3egl12AttributeMapD1Ev(%"class.egl::AttributeMap"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx21DmaBufImageSiblingEGLD0Ev(%"class.rx::DmaBufImageSiblingEGL"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.rx::DmaBufImageSiblingEGL", %"class.rx::DmaBufImageSiblingEGL"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN2rx21DmaBufImageSiblingEGLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.rx::DmaBufImageSiblingEGL", %"class.rx::DmaBufImageSiblingEGL"* %0, i64 0, i32 1
  tail call void @_ZN3egl12AttributeMapD1Ev(%"class.egl::AttributeMap"* %3) #12
  %4 = getelementptr inbounds %"class.rx::DmaBufImageSiblingEGL", %"class.rx::DmaBufImageSiblingEGL"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5angle7SubjectD2Ev(%"class.angle::Subject"* %4) #12
  %5 = bitcast %"class.rx::DmaBufImageSiblingEGL"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2rx21DmaBufImageSiblingEGL10initializeEPKN3egl7DisplayE(%"class.egl::Error"* noalias nocapture sret, %"class.rx::DmaBufImageSiblingEGL"* nocapture readnone, %"class.egl::Display"* nocapture readnone) unnamed_addr #6 align 2 {
  %4 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 0
  store i32 12288, i32* %4, align 8, !alias.scope !2
  %5 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 1
  store i32 0, i32* %5, align 4, !alias.scope !2
  %6 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2
  %7 = bitcast %"class.std::__1::unique_ptr"* %6 to i64*
  store i64 0, i64* %7, align 8, !alias.scope !2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2rx21DmaBufImageSiblingEGL9getFormatEv(%"struct.gl::Format"* noalias sret, %"class.rx::DmaBufImageSiblingEGL"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.rx::DmaBufImageSiblingEGL", %"class.rx::DmaBufImageSiblingEGL"* %1, i64 0, i32 4
  tail call void @_ZN2gl6FormatC1ERKS0_(%"struct.gl::Format"* %0, %"struct.gl::Format"* dereferenceable(8) %3) #12
  ret void
}

declare void @_ZN2gl6FormatC1ERKS0_(%"struct.gl::Format"*, %"struct.gl::Format"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK2rx21DmaBufImageSiblingEGL12isRenderableEPKN2gl7ContextE(%"class.rx::DmaBufImageSiblingEGL"* nocapture readnone, %"class.gl::Context"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK2rx21DmaBufImageSiblingEGL12isTexturableEPKN2gl7ContextE(%"class.rx::DmaBufImageSiblingEGL"* nocapture readnone, %"class.gl::Context"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2rx21DmaBufImageSiblingEGL5isYUVEv(%"class.rx::DmaBufImageSiblingEGL"* nocapture readonly) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.rx::DmaBufImageSiblingEGL", %"class.rx::DmaBufImageSiblingEGL"* %0, i64 0, i32 5
  %3 = load i8, i8* %2, align 8, !range !7
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i64, i32 } @_ZNK2rx21DmaBufImageSiblingEGL7getSizeEv(%"class.rx::DmaBufImageSiblingEGL"* nocapture readonly) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.rx::DmaBufImageSiblingEGL", %"class.rx::DmaBufImageSiblingEGL"* %0, i64 0, i32 2
  %3 = bitcast %"struct.gl::Extents"* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.rx::DmaBufImageSiblingEGL", %"class.rx::DmaBufImageSiblingEGL"* %0, i64 0, i32 2, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = insertvalue { i64, i32 } undef, i64 %4, 0
  %8 = insertvalue { i64, i32 } %7, i32 %6, 1
  ret { i64, i32 } %8
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK2rx21DmaBufImageSiblingEGL10getSamplesEv(%"class.rx::DmaBufImageSiblingEGL"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i64 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias i8* @_ZNK2rx21DmaBufImageSiblingEGL9getBufferEv(%"class.rx::DmaBufImageSiblingEGL"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i8* null
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2rx21DmaBufImageSiblingEGL26getImageCreationAttributesEPNSt3__16vectorIiNS1_9allocatorIiEEEE(%"class.rx::DmaBufImageSiblingEGL"*, %"class.std::__1::vector"*) unnamed_addr #1 align 2 {
  %3 = alloca [27 x i32], align 16
  %4 = bitcast [27 x i32]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 108, i8* nonnull %4) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %4, i8* align 16 bitcast ([27 x i32]* @__const._ZNK2rx21DmaBufImageSiblingEGL26getImageCreationAttributesEPNSt3__16vectorIiNS1_9allocatorIiEEEE.kForwardedAttribs to i8*), i64 108, i1 false)
  %5 = getelementptr inbounds [27 x i32], [27 x i32]* %3, i64 0, i64 0
  %6 = getelementptr inbounds [27 x i32], [27 x i32]* %3, i64 0, i64 27
  %7 = getelementptr inbounds %"class.rx::DmaBufImageSiblingEGL", %"class.rx::DmaBufImageSiblingEGL"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = bitcast i32** %8 to i64*
  %11 = bitcast %"class.std::__1::vector"* %1 to i64*
  %12 = bitcast i32** %9 to i64*
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  br label %15

14:                                               ; preds = %141
  call void @llvm.lifetime.end.p0i8(i64 108, i8* nonnull %4) #12
  ret void

15:                                               ; preds = %144, %2
  %16 = phi i32 [ 12375, %2 ], [ %145, %144 ]
  %17 = phi i32* [ %5, %2 ], [ %142, %144 ]
  %18 = zext i32 %16 to i64
  %19 = call zeroext i1 @_ZNK3egl12AttributeMap8containsEl(%"class.egl::AttributeMap"* %7, i64 %18) #12
  br i1 %19, label %20, label %141

20:                                               ; preds = %15
  %21 = load i32*, i32** %8, align 8
  %22 = load i32*, i32** %9, align 8
  %23 = icmp ult i32* %21, %22
  %24 = ptrtoint i32* %22 to i64
  br i1 %23, label %25, label %28

25:                                               ; preds = %20
  store i32 %16, i32* %21, align 4
  %26 = getelementptr inbounds i32, i32* %21, i64 1
  %27 = ptrtoint i32* %26 to i64
  store i64 %27, i64* %10, align 8
  br label %80

28:                                               ; preds = %20
  %29 = ptrtoint i32* %21 to i64
  %30 = load i64, i64* %11, align 8
  %31 = sub i64 %29, %30
  %32 = ashr exact i64 %31, 2
  %33 = add nsw i64 %32, 1
  %34 = icmp ugt i64 %33, 4611686018427387903
  br i1 %34, label %35, label %37

35:                                               ; preds = %28
  %36 = bitcast %"class.std::__1::vector"* %1 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %36) #14
  unreachable

37:                                               ; preds = %28
  %38 = sub i64 %24, %30
  %39 = ashr exact i64 %38, 2
  %40 = icmp ult i64 %39, 2305843009213693951
  br i1 %40, label %41, label %49

41:                                               ; preds = %37
  %42 = ashr exact i64 %38, 1
  %43 = icmp ult i64 %42, %33
  %44 = select i1 %43, i64 %33, i64 %42
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %54, label %46

46:                                               ; preds = %41
  %47 = icmp ugt i64 %44, 4611686018427387903
  br i1 %47, label %48, label %49

48:                                               ; preds = %46
  call void @abort() #14
  unreachable

49:                                               ; preds = %46, %37
  %50 = phi i64 [ %44, %46 ], [ 4611686018427387903, %37 ]
  %51 = shl i64 %50, 2
  %52 = call i8* @_Znwm(i64 %51) #13
  %53 = bitcast i8* %52 to i32*
  br label %54

54:                                               ; preds = %49, %41
  %55 = phi i64 [ %50, %49 ], [ 0, %41 ]
  %56 = phi i32* [ %53, %49 ], [ null, %41 ]
  %57 = getelementptr inbounds i32, i32* %56, i64 %32
  %58 = getelementptr inbounds i32, i32* %56, i64 %55
  %59 = ptrtoint i32* %58 to i64
  store i32 %16, i32* %57, align 4
  %60 = getelementptr inbounds i32, i32* %57, i64 1
  %61 = ptrtoint i32* %60 to i64
  %62 = load i32*, i32** %13, align 8
  %63 = load i64, i64* %10, align 8
  %64 = ptrtoint i32* %62 to i64
  %65 = sub i64 %63, %64
  %66 = ashr exact i64 %65, 2
  %67 = sub nsw i64 0, %66
  %68 = getelementptr inbounds i32, i32* %57, i64 %67
  %69 = ptrtoint i32* %68 to i64
  %70 = icmp sgt i64 %65, 0
  br i1 %70, label %71, label %75

71:                                               ; preds = %54
  %72 = bitcast i32* %68 to i8*
  %73 = bitcast i32* %62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %72, i8* align 4 %73, i64 %65, i1 false) #12
  %74 = load i32*, i32** %13, align 8
  br label %75

75:                                               ; preds = %71, %54
  %76 = phi i32* [ %62, %54 ], [ %74, %71 ]
  store i64 %69, i64* %11, align 8
  store i64 %61, i64* %10, align 8
  store i64 %59, i64* %12, align 8
  %77 = icmp eq i32* %76, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %75
  %79 = bitcast i32* %76 to i8*
  call void @_ZdlPv(i8* %79) #13
  br label %80

80:                                               ; preds = %25, %75, %78
  %81 = call i32 @_ZNK3egl12AttributeMap8getAsIntEl(%"class.egl::AttributeMap"* %7, i64 %18) #12
  %82 = load i32*, i32** %8, align 8
  %83 = load i32*, i32** %9, align 8
  %84 = icmp ult i32* %82, %83
  %85 = ptrtoint i32* %83 to i64
  br i1 %84, label %86, label %89

86:                                               ; preds = %80
  store i32 %81, i32* %82, align 4
  %87 = getelementptr inbounds i32, i32* %82, i64 1
  %88 = ptrtoint i32* %87 to i64
  store i64 %88, i64* %10, align 8
  br label %141

89:                                               ; preds = %80
  %90 = ptrtoint i32* %82 to i64
  %91 = load i64, i64* %11, align 8
  %92 = sub i64 %90, %91
  %93 = ashr exact i64 %92, 2
  %94 = add nsw i64 %93, 1
  %95 = icmp ugt i64 %94, 4611686018427387903
  br i1 %95, label %96, label %98

96:                                               ; preds = %89
  %97 = bitcast %"class.std::__1::vector"* %1 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %97) #14
  unreachable

98:                                               ; preds = %89
  %99 = sub i64 %85, %91
  %100 = ashr exact i64 %99, 2
  %101 = icmp ult i64 %100, 2305843009213693951
  br i1 %101, label %102, label %110

102:                                              ; preds = %98
  %103 = ashr exact i64 %99, 1
  %104 = icmp ult i64 %103, %94
  %105 = select i1 %104, i64 %94, i64 %103
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %115, label %107

107:                                              ; preds = %102
  %108 = icmp ugt i64 %105, 4611686018427387903
  br i1 %108, label %109, label %110

109:                                              ; preds = %107
  call void @abort() #14
  unreachable

110:                                              ; preds = %107, %98
  %111 = phi i64 [ %105, %107 ], [ 4611686018427387903, %98 ]
  %112 = shl i64 %111, 2
  %113 = call i8* @_Znwm(i64 %112) #13
  %114 = bitcast i8* %113 to i32*
  br label %115

115:                                              ; preds = %110, %102
  %116 = phi i64 [ %111, %110 ], [ 0, %102 ]
  %117 = phi i32* [ %114, %110 ], [ null, %102 ]
  %118 = getelementptr inbounds i32, i32* %117, i64 %93
  %119 = getelementptr inbounds i32, i32* %117, i64 %116
  %120 = ptrtoint i32* %119 to i64
  store i32 %81, i32* %118, align 4
  %121 = getelementptr inbounds i32, i32* %118, i64 1
  %122 = ptrtoint i32* %121 to i64
  %123 = load i32*, i32** %13, align 8
  %124 = load i64, i64* %10, align 8
  %125 = ptrtoint i32* %123 to i64
  %126 = sub i64 %124, %125
  %127 = ashr exact i64 %126, 2
  %128 = sub nsw i64 0, %127
  %129 = getelementptr inbounds i32, i32* %118, i64 %128
  %130 = ptrtoint i32* %129 to i64
  %131 = icmp sgt i64 %126, 0
  br i1 %131, label %132, label %136

132:                                              ; preds = %115
  %133 = bitcast i32* %129 to i8*
  %134 = bitcast i32* %123 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %133, i8* align 4 %134, i64 %126, i1 false) #12
  %135 = load i32*, i32** %13, align 8
  br label %136

136:                                              ; preds = %132, %115
  %137 = phi i32* [ %123, %115 ], [ %135, %132 ]
  store i64 %130, i64* %11, align 8
  store i64 %122, i64* %10, align 8
  store i64 %120, i64* %12, align 8
  %138 = icmp eq i32* %137, null
  br i1 %138, label %141, label %139

139:                                              ; preds = %136
  %140 = bitcast i32* %137 to i8*
  call void @_ZdlPv(i8* %140) #13
  br label %141

141:                                              ; preds = %139, %136, %86, %15
  %142 = getelementptr inbounds i32, i32* %17, i64 1
  %143 = icmp eq i32* %142, %6
  br i1 %143, label %14, label %144

144:                                              ; preds = %141
  %145 = load i32, i32* %142, align 4
  br label %15
}

declare zeroext i1 @_ZNK3egl12AttributeMap8containsEl(%"class.egl::AttributeMap"*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2rx31FramebufferAttachmentObjectImpl18initializeContentsEPKN2gl7ContextERKNS1_10ImageIndexE(%"class.rx::FramebufferAttachmentObjectImpl"*, %"class.gl::Context"*, %"class.gl::ImageIndex"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2rx24ExternalImageSiblingImpl9onDestroyEPKN3egl7DisplayE(%"class.rx::ExternalImageSiblingImpl"*, %"class.egl::Display"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5angle7SubjectD2Ev(%"class.angle::Subject"*) unnamed_addr #4

declare void @_ZN5angle7SubjectC2Ev(%"class.angle::Subject"*) unnamed_addr #2

declare zeroext i1 @_ZN2gl4priv30ShouldCreatePlatformLogMessageEi(i32) local_unnamed_addr #2

declare void @_ZN2gl10LogMessageC1EPKcS2_ii(%"class.gl::LogMessage"*, i8*, i8*, i32, i32) unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2gl10LogMessageD1Ev(%"class.gl::LogMessage"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #1 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #12
  %7 = load i8, i8* %6, align 8, !range !7
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #12
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #12
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #12
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #12
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #1 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #12
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #13
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #12
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #12
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #13
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #12
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

attributes #0 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN3egl5Error7NoErrorEv: argument 0"}
!4 = distinct !{!4, !"_ZN3egl5Error7NoErrorEv"}
!5 = distinct !{!5, !6, !"_ZN3egl7NoErrorEv: argument 0"}
!6 = distinct !{!6, !"_ZN3egl7NoErrorEv"}
!7 = !{i8 0, i8 2}
