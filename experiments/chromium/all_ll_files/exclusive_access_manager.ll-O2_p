; ModuleID = '../../chrome/browser/ui/exclusive_access/exclusive_access_manager.cc'
source_filename = "../../chrome/browser/ui/exclusive_access/exclusive_access_manager.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.ExclusiveAccessManager = type { %class.ExclusiveAccessContext*, %class.FullscreenController, %class.KeyboardLockController, %class.MouseLockController }
%class.FullscreenController = type { %class.ExclusiveAccessControllerBase.base, %class.GURL, %class.GURL, i32, i8, i8, %"class.content::WebContents"*, i8, [7 x i8], %"class.base::ObserverList", %"class.base::WeakPtrFactory" }
%class.ExclusiveAccessControllerBase.base = type <{ %"class.content::NotificationObserver", %class.ExclusiveAccessManager*, %"class.content::NotificationRegistrar", %"class.content::WebContents"*, i32 }>
%"class.content::NotificationObserver" = type { i32 (...)** }
%"class.content::NotificationRegistrar" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.content::NotificationRegistrar::Record"*, %"struct.content::NotificationRegistrar::Record"*, %"class.std::__1::__compressed_pair" }
%"struct.content::NotificationRegistrar::Record" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.content::NotificationRegistrar::Record"* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %class.GURL* }
%"class.content::WebContents" = type <{ %"class.content::PageNavigator", %"class.base::SupportsUserData.base", [7 x i8] }>
%"class.content::PageNavigator" = type { i32 (...)** }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1", %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.17", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.25" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.20" }
%"struct.std::__1::atomic.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__cxx_atomic_impl.23" }
%"struct.std::__1::__cxx_atomic_impl.23" = type { %"struct.std::__1::__cxx_atomic_base_impl.24" }
%"struct.std::__1::__cxx_atomic_base_impl.24" = type { i8 }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.30 }
%class.scoped_refptr.30 = type { %"class.base::internal::WeakReference::Flag"* }
%class.KeyboardLockController = type { %class.ExclusiveAccessControllerBase.base, %"class.base::RepeatingCallback", %"class.base::OnceCallback", i32, i32, %"class.base::OneShotTimer", %"class.base::TimeDelta", %"class.base::TickClock"*, %"class.base::circular_deque" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.31 }
%class.scoped_refptr.31 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.32", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.32" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.33, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.35" }
%class.scoped_refptr.33 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.34" }>
%"class.base::RefCountedThreadSafe.34" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtrFactory.35" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.base::TimeTicks"*, i64 }
%class.MouseLockController = type { %class.ExclusiveAccessControllerBase.base, i32, %"class.content::WebContents"*, i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback", %"class.base::TimeTicks", %"class.base::WeakPtrFactory.36" }
%"class.base::WeakPtrFactory.36" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.ExclusiveAccessContext = type { i32 (...)** }
%"class.base::OnceCallback.37" = type { %"class.base::internal::CallbackBase" }
%class.ExclusiveAccessControllerBase = type <{ %"class.content::NotificationObserver", %class.ExclusiveAccessManager*, %"class.content::NotificationRegistrar", %"class.content::WebContents"*, i32, [4 x i8] }>
%"struct.content::NativeWebKeyboardEvent" = type <{ %"class.blink::WebKeyboardEvent.base", [6 x i8], %"class.ui::Event"*, i8, [7 x i8] }>
%"class.blink::WebKeyboardEvent.base" = type <{ %"class.blink::WebInputEvent", i32, i32, i32, i32, i8, i8, [4 x i16], [4 x i16] }>
%"class.blink::WebInputEvent" = type { i32 (...)**, float, %"class.gfx::Vector2dF", %"class.base::TimeTicks", i32, i32 }
%"class.gfx::Vector2dF" = type { float, float }
%"class.ui::Event" = type opaque

@_ZN22ExclusiveAccessManagerC1EP22ExclusiveAccessContext = hidden unnamed_addr alias void (%class.ExclusiveAccessManager*, %class.ExclusiveAccessContext*), void (%class.ExclusiveAccessManager*, %class.ExclusiveAccessContext*)* @_ZN22ExclusiveAccessManagerC2EP22ExclusiveAccessContext
@_ZN22ExclusiveAccessManagerD1Ev = hidden unnamed_addr alias void (%class.ExclusiveAccessManager*), void (%class.ExclusiveAccessManager*)* @_ZN22ExclusiveAccessManagerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22ExclusiveAccessManagerC2EP22ExclusiveAccessContext(%class.ExclusiveAccessManager*, %class.ExclusiveAccessContext*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.ExclusiveAccessManager, %class.ExclusiveAccessManager* %0, i64 0, i32 0
  store %class.ExclusiveAccessContext* %1, %class.ExclusiveAccessContext** %3, align 8
  %4 = getelementptr inbounds %class.ExclusiveAccessManager, %class.ExclusiveAccessManager* %0, i64 0, i32 1
  tail call void @_ZN20FullscreenControllerC1EP22ExclusiveAccessManager(%class.FullscreenController* %4, %class.ExclusiveAccessManager* %0) #4
  %5 = getelementptr inbounds %class.ExclusiveAccessManager, %class.ExclusiveAccessManager* %0, i64 0, i32 2
  tail call void @_ZN22KeyboardLockControllerC1EP22ExclusiveAccessManager(%class.KeyboardLockController* %5, %class.ExclusiveAccessManager* %0) #4
  %6 = getelementptr inbounds %class.ExclusiveAccessManager, %class.ExclusiveAccessManager* %0, i64 0, i32 3
  tail call void @_ZN19MouseLockControllerC1EP22ExclusiveAccessManager(%class.MouseLockController* %6, %class.ExclusiveAccessManager* %0) #4
  ret void
}

declare void @_ZN20FullscreenControllerC1EP22ExclusiveAccessManager(%class.FullscreenController*, %class.ExclusiveAccessManager*) unnamed_addr #1

declare void @_ZN22KeyboardLockControllerC1EP22ExclusiveAccessManager(%class.KeyboardLockController*, %class.ExclusiveAccessManager*) unnamed_addr #1

declare void @_ZN19MouseLockControllerC1EP22ExclusiveAccessManager(%class.MouseLockController*, %class.ExclusiveAccessManager*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22ExclusiveAccessManagerD2Ev(%class.ExclusiveAccessManager*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.ExclusiveAccessManager, %class.ExclusiveAccessManager* %0, i64 0, i32 3
  tail call void @_ZN19MouseLockControllerD1Ev(%class.MouseLockController* %2) #4
  %3 = getelementptr inbounds %class.ExclusiveAccessManager, %class.ExclusiveAccessManager* %0, i64 0, i32 2
  tail call void @_ZN22KeyboardLockControllerD1Ev(%class.KeyboardLockController* %3) #4
  %4 = getelementptr inbounds %class.ExclusiveAccessManager, %class.ExclusiveAccessManager* %0, i64 0, i32 1
  tail call void @_ZN20FullscreenControllerD1Ev(%class.FullscreenController* %4) #4
  ret void
}

; Function Attrs: nounwind
declare void @_ZN19MouseLockControllerD1Ev(%class.MouseLockController*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN22KeyboardLockControllerD1Ev(%class.KeyboardLockController*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN20FullscreenControllerD1Ev(%class.FullscreenController*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK22ExclusiveAccessManager32GetExclusiveAccessExitBubbleTypeEv(%class.ExclusiveAccessManager*) local_unnamed_addr #0 align 2 {
  %2 = tail call zeroext i1 @_ZN6chrome18IsRunningInAppModeEv() #4
  %3 = getelementptr inbounds %class.ExclusiveAccessManager, %class.ExclusiveAccessManager* %0, i64 0, i32 1
  %4 = tail call zeroext i1 @_ZNK20FullscreenController33IsWindowFullscreenForTabOrPendingEv(%class.FullscreenController* %3) #4
  br i1 %4, label %5, label %16

5:                                                ; preds = %1
  %6 = tail call zeroext i1 @_ZNK20FullscreenController15IsTabFullscreenEv(%class.FullscreenController* %3) #4
  br i1 %6, label %7, label %28

7:                                                ; preds = %5
  %8 = getelementptr inbounds %class.ExclusiveAccessManager, %class.ExclusiveAccessManager* %0, i64 0, i32 3
  %9 = tail call zeroext i1 @_ZNK19MouseLockController21IsMouseLockedSilentlyEv(%class.MouseLockController* %8) #4
  br i1 %9, label %28, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %class.ExclusiveAccessManager, %class.ExclusiveAccessManager* %0, i64 0, i32 2
  %12 = tail call zeroext i1 @_ZNK22KeyboardLockController29RequiresPressAndHoldEscToExitEv(%class.KeyboardLockController* %11) #4
  br i1 %12, label %28, label %13

13:                                               ; preds = %10
  %14 = tail call zeroext i1 @_ZNK19MouseLockController13IsMouseLockedEv(%class.MouseLockController* %8) #4
  %15 = select i1 %14, i32 2, i32 1
  br label %28

16:                                               ; preds = %1
  %17 = getelementptr inbounds %class.ExclusiveAccessManager, %class.ExclusiveAccessManager* %0, i64 0, i32 3
  %18 = tail call zeroext i1 @_ZNK19MouseLockController21IsMouseLockedSilentlyEv(%class.MouseLockController* %17) #4
  br i1 %18, label %28, label %19

19:                                               ; preds = %16
  %20 = tail call zeroext i1 @_ZNK19MouseLockController13IsMouseLockedEv(%class.MouseLockController* %17) #4
  br i1 %20, label %28, label %21

21:                                               ; preds = %19
  %22 = tail call zeroext i1 @_ZNK20FullscreenController30IsExtensionFullscreenOrPendingEv(%class.FullscreenController* %3) #4
  br i1 %22, label %28, label %23

23:                                               ; preds = %21
  %24 = tail call zeroext i1 @_ZNK20FullscreenController31IsControllerInitiatedFullscreenEv(%class.FullscreenController* %3) #4
  %25 = xor i1 %24, true
  %26 = or i1 %2, %25
  %27 = select i1 %26, i32 0, i32 5
  ret i32 %27

28:                                               ; preds = %21, %19, %16, %13, %10, %7, %5
  %29 = phi i32 [ 1, %5 ], [ 0, %7 ], [ 4, %10 ], [ %15, %13 ], [ 0, %16 ], [ 3, %19 ], [ 6, %21 ]
  ret i32 %29
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare zeroext i1 @_ZN6chrome18IsRunningInAppModeEv() local_unnamed_addr #1

declare zeroext i1 @_ZNK20FullscreenController33IsWindowFullscreenForTabOrPendingEv(%class.FullscreenController*) local_unnamed_addr #1

declare zeroext i1 @_ZNK20FullscreenController15IsTabFullscreenEv(%class.FullscreenController*) local_unnamed_addr #1

declare zeroext i1 @_ZNK19MouseLockController21IsMouseLockedSilentlyEv(%class.MouseLockController*) local_unnamed_addr #1

declare zeroext i1 @_ZNK22KeyboardLockController29RequiresPressAndHoldEscToExitEv(%class.KeyboardLockController*) local_unnamed_addr #1

declare zeroext i1 @_ZNK19MouseLockController13IsMouseLockedEv(%class.MouseLockController*) local_unnamed_addr #1

declare zeroext i1 @_ZNK20FullscreenController30IsExtensionFullscreenOrPendingEv(%class.FullscreenController*) local_unnamed_addr #1

declare zeroext i1 @_ZNK20FullscreenController31IsControllerInitiatedFullscreenEv(%class.FullscreenController*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22ExclusiveAccessManager38UpdateExclusiveAccessExitBubbleContentEN4base12OnceCallbackIFv31ExclusiveAccessBubbleHideReasonEEEb(%class.ExclusiveAccessManager*, %"class.base::OnceCallback.37"* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.GURL, align 8
  %5 = alloca %class.GURL, align 8
  %6 = alloca %"class.base::OnceCallback.37", align 8
  %7 = bitcast %class.GURL* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %7) #4
  %8 = getelementptr inbounds %class.ExclusiveAccessManager, %class.ExclusiveAccessManager* %0, i64 0, i32 1
  %9 = bitcast %class.GURL* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 120, i1 false)
  call void @_ZNK20FullscreenController30GetURLForExclusiveAccessBubbleEv(%class.GURL* nonnull sret %5, %class.FullscreenController* %8) #4
  %10 = getelementptr inbounds %class.GURL, %class.GURL* %5, i64 0, i32 1
  %11 = load i8, i8* %10, align 8, !range !2, !alias.scope !3
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %18

13:                                               ; preds = %3
  %14 = bitcast %class.GURL* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %14) #4, !noalias !3
  %15 = getelementptr inbounds %class.ExclusiveAccessManager, %class.ExclusiveAccessManager* %0, i64 0, i32 3
  %16 = bitcast %class.MouseLockController* %15 to %class.ExclusiveAccessControllerBase*
  call void @_ZNK29ExclusiveAccessControllerBase30GetURLForExclusiveAccessBubbleEv(%class.GURL* nonnull sret %4, %class.ExclusiveAccessControllerBase* %16) #4
  %17 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* nonnull %5, %class.GURL* nonnull dereferenceable(120) %4) #4
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %14) #4, !noalias !3
  br label %18

18:                                               ; preds = %3, %13
  %19 = call i32 @_ZNK22ExclusiveAccessManager32GetExclusiveAccessExitBubbleTypeEv(%class.ExclusiveAccessManager* %0)
  %20 = getelementptr inbounds %class.ExclusiveAccessManager, %class.ExclusiveAccessManager* %0, i64 0, i32 0
  %21 = load %class.ExclusiveAccessContext*, %class.ExclusiveAccessContext** %20, align 8
  %22 = getelementptr inbounds %"class.base::OnceCallback.37", %"class.base::OnceCallback.37"* %1, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.base::OnceCallback.37"* %1 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.base::OnceCallback.37"* %6 to i64*
  store i64 %24, i64* %25, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %22, align 8
  %26 = bitcast %class.ExclusiveAccessContext* %21 to void (%class.ExclusiveAccessContext*, %class.GURL*, i32, %"class.base::OnceCallback.37"*, i1)***
  %27 = load void (%class.ExclusiveAccessContext*, %class.GURL*, i32, %"class.base::OnceCallback.37"*, i1)**, void (%class.ExclusiveAccessContext*, %class.GURL*, i32, %"class.base::OnceCallback.37"*, i1)*** %26, align 8
  %28 = getelementptr inbounds void (%class.ExclusiveAccessContext*, %class.GURL*, i32, %"class.base::OnceCallback.37"*, i1)*, void (%class.ExclusiveAccessContext*, %class.GURL*, i32, %"class.base::OnceCallback.37"*, i1)** %27, i64 8
  %29 = load void (%class.ExclusiveAccessContext*, %class.GURL*, i32, %"class.base::OnceCallback.37"*, i1)*, void (%class.ExclusiveAccessContext*, %class.GURL*, i32, %"class.base::OnceCallback.37"*, i1)** %28, align 8
  call void %29(%class.ExclusiveAccessContext* %21, %class.GURL* nonnull dereferenceable(120) %5, i32 %19, %"class.base::OnceCallback.37"* nonnull %6, i1 zeroext %2) #4
  %30 = getelementptr inbounds %"class.base::OnceCallback.37", %"class.base::OnceCallback.37"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %30) #4
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %5) #4
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %7) #4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK22ExclusiveAccessManager27GetExclusiveAccessBubbleURLEv(%class.GURL* noalias sret, %class.ExclusiveAccessManager*) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.GURL, align 8
  %4 = bitcast %class.GURL* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 -86, i64 120, i1 false)
  %5 = getelementptr inbounds %class.ExclusiveAccessManager, %class.ExclusiveAccessManager* %1, i64 0, i32 1
  tail call void @_ZNK20FullscreenController30GetURLForExclusiveAccessBubbleEv(%class.GURL* sret %0, %class.FullscreenController* %5) #4
  %6 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = bitcast %class.GURL* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %10) #4
  %11 = getelementptr inbounds %class.ExclusiveAccessManager, %class.ExclusiveAccessManager* %1, i64 0, i32 3
  %12 = bitcast %class.MouseLockController* %11 to %class.ExclusiveAccessControllerBase*
  call void @_ZNK29ExclusiveAccessControllerBase30GetURLForExclusiveAccessBubbleEv(%class.GURL* nonnull sret %3, %class.ExclusiveAccessControllerBase* %12) #4
  %13 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* %0, %class.GURL* nonnull dereferenceable(120) %3) #4
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %3) #4
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %10) #4
  br label %14

14:                                               ; preds = %2, %9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #2

declare void @_ZNK20FullscreenController30GetURLForExclusiveAccessBubbleEv(%class.GURL* sret, %class.FullscreenController*) unnamed_addr #1

declare void @_ZNK29ExclusiveAccessControllerBase30GetURLForExclusiveAccessBubbleEv(%class.GURL* sret, %class.ExclusiveAccessControllerBase*) unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22ExclusiveAccessManager16OnTabDeactivatedEPN7content11WebContentsE(%class.ExclusiveAccessManager*, %"class.content::WebContents"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.ExclusiveAccessManager, %class.ExclusiveAccessManager* %0, i64 0, i32 1
  tail call void @_ZN20FullscreenController16OnTabDeactivatedEPN7content11WebContentsE(%class.FullscreenController* %3, %"class.content::WebContents"* %1) #4
  %4 = getelementptr inbounds %class.ExclusiveAccessManager, %class.ExclusiveAccessManager* %0, i64 0, i32 2
  %5 = bitcast %class.KeyboardLockController* %4 to %class.ExclusiveAccessControllerBase*
  tail call void @_ZN29ExclusiveAccessControllerBase16OnTabDeactivatedEPN7content11WebContentsE(%class.ExclusiveAccessControllerBase* %5, %"class.content::WebContents"* %1) #4
  %6 = getelementptr inbounds %class.ExclusiveAccessManager, %class.ExclusiveAccessManager* %0, i64 0, i32 3
  %7 = bitcast %class.MouseLockController* %6 to %class.ExclusiveAccessControllerBase*
  tail call void @_ZN29ExclusiveAccessControllerBase16OnTabDeactivatedEPN7content11WebContentsE(%class.ExclusiveAccessControllerBase* %7, %"class.content::WebContents"* %1) #4
  ret void
}

declare void @_ZN20FullscreenController16OnTabDeactivatedEPN7content11WebContentsE(%class.FullscreenController*, %"class.content::WebContents"*) unnamed_addr #1

declare void @_ZN29ExclusiveAccessControllerBase16OnTabDeactivatedEPN7content11WebContentsE(%class.ExclusiveAccessControllerBase*, %"class.content::WebContents"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22ExclusiveAccessManager21OnTabDetachedFromViewEPN7content11WebContentsE(%class.ExclusiveAccessManager*, %"class.content::WebContents"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.ExclusiveAccessManager, %class.ExclusiveAccessManager* %0, i64 0, i32 1
  tail call void @_ZN20FullscreenController21OnTabDetachedFromViewEPN7content11WebContentsE(%class.FullscreenController* %3, %"class.content::WebContents"* %1) #4
  %4 = getelementptr inbounds %class.ExclusiveAccessManager, %class.ExclusiveAccessManager* %0, i64 0, i32 2
  %5 = bitcast %class.KeyboardLockController* %4 to %class.ExclusiveAccessControllerBase*
  tail call void @_ZN29ExclusiveAccessControllerBase21OnTabDetachedFromViewEPN7content11WebContentsE(%class.ExclusiveAccessControllerBase* %5, %"class.content::WebContents"* %1) #4
  %6 = getelementptr inbounds %class.ExclusiveAccessManager, %class.ExclusiveAccessManager* %0, i64 0, i32 3
  %7 = bitcast %class.MouseLockController* %6 to %class.ExclusiveAccessControllerBase*
  tail call void @_ZN29ExclusiveAccessControllerBase21OnTabDetachedFromViewEPN7content11WebContentsE(%class.ExclusiveAccessControllerBase* %7, %"class.content::WebContents"* %1) #4
  ret void
}

declare void @_ZN20FullscreenController21OnTabDetachedFromViewEPN7content11WebContentsE(%class.FullscreenController*, %"class.content::WebContents"*) unnamed_addr #1

declare void @_ZN29ExclusiveAccessControllerBase21OnTabDetachedFromViewEPN7content11WebContentsE(%class.ExclusiveAccessControllerBase*, %"class.content::WebContents"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22ExclusiveAccessManager12OnTabClosingEPN7content11WebContentsE(%class.ExclusiveAccessManager*, %"class.content::WebContents"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.ExclusiveAccessManager, %class.ExclusiveAccessManager* %0, i64 0, i32 1
  tail call void @_ZN20FullscreenController12OnTabClosingEPN7content11WebContentsE(%class.FullscreenController* %3, %"class.content::WebContents"* %1) #4
  %4 = getelementptr inbounds %class.ExclusiveAccessManager, %class.ExclusiveAccessManager* %0, i64 0, i32 2
  %5 = bitcast %class.KeyboardLockController* %4 to %class.ExclusiveAccessControllerBase*
  tail call void @_ZN29ExclusiveAccessControllerBase12OnTabClosingEPN7content11WebContentsE(%class.ExclusiveAccessControllerBase* %5, %"class.content::WebContents"* %1) #4
  %6 = getelementptr inbounds %class.ExclusiveAccessManager, %class.ExclusiveAccessManager* %0, i64 0, i32 3
  %7 = bitcast %class.MouseLockController* %6 to %class.ExclusiveAccessControllerBase*
  tail call void @_ZN29ExclusiveAccessControllerBase12OnTabClosingEPN7content11WebContentsE(%class.ExclusiveAccessControllerBase* %7, %"class.content::WebContents"* %1) #4
  ret void
}

declare void @_ZN20FullscreenController12OnTabClosingEPN7content11WebContentsE(%class.FullscreenController*, %"class.content::WebContents"*) unnamed_addr #1

declare void @_ZN29ExclusiveAccessControllerBase12OnTabClosingEPN7content11WebContentsE(%class.ExclusiveAccessControllerBase*, %"class.content::WebContents"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN22ExclusiveAccessManager18HandleUserKeyEventERKN7content22NativeWebKeyboardEventE(%class.ExclusiveAccessManager*, %"struct.content::NativeWebKeyboardEvent"* dereferenceable(96)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.content::NativeWebKeyboardEvent", %"struct.content::NativeWebKeyboardEvent"* %1, i64 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 27
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.ExclusiveAccessManager, %class.ExclusiveAccessManager* %0, i64 0, i32 0
  %8 = load %class.ExclusiveAccessContext*, %class.ExclusiveAccessContext** %7, align 8
  %9 = bitcast %class.ExclusiveAccessContext* %8 to void (%class.ExclusiveAccessContext*)***
  %10 = load void (%class.ExclusiveAccessContext*)**, void (%class.ExclusiveAccessContext*)*** %9, align 8
  %11 = getelementptr inbounds void (%class.ExclusiveAccessContext*)*, void (%class.ExclusiveAccessContext*)** %10, i64 9
  %12 = load void (%class.ExclusiveAccessContext*)*, void (%class.ExclusiveAccessContext*)** %11, align 8
  tail call void %12(%class.ExclusiveAccessContext* %8) #4
  br label %24

13:                                               ; preds = %2
  %14 = getelementptr inbounds %class.ExclusiveAccessManager, %class.ExclusiveAccessManager* %0, i64 0, i32 2
  %15 = tail call zeroext i1 @_ZN22KeyboardLockController14HandleKeyEventERKN7content22NativeWebKeyboardEventE(%class.KeyboardLockController* %14, %"struct.content::NativeWebKeyboardEvent"* dereferenceable(96) %1) #4
  br i1 %15, label %24, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %class.ExclusiveAccessManager, %class.ExclusiveAccessManager* %0, i64 0, i32 1
  %18 = tail call zeroext i1 @_ZN20FullscreenController23HandleUserPressedEscapeEv(%class.FullscreenController* %17) #4
  %19 = getelementptr inbounds %class.ExclusiveAccessManager, %class.ExclusiveAccessManager* %0, i64 0, i32 3
  %20 = tail call zeroext i1 @_ZN19MouseLockController23HandleUserPressedEscapeEv(%class.MouseLockController* %19) #4
  %21 = or i1 %18, %20
  %22 = tail call zeroext i1 @_ZN22KeyboardLockController23HandleUserPressedEscapeEv(%class.KeyboardLockController* %14) #4
  %23 = or i1 %21, %22
  br label %24

24:                                               ; preds = %13, %16, %6
  %25 = phi i1 [ false, %6 ], [ %23, %16 ], [ false, %13 ]
  ret i1 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22ExclusiveAccessManager11OnUserInputEv(%class.ExclusiveAccessManager* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.ExclusiveAccessManager, %class.ExclusiveAccessManager* %0, i64 0, i32 0
  %3 = load %class.ExclusiveAccessContext*, %class.ExclusiveAccessContext** %2, align 8
  %4 = bitcast %class.ExclusiveAccessContext* %3 to void (%class.ExclusiveAccessContext*)***
  %5 = load void (%class.ExclusiveAccessContext*)**, void (%class.ExclusiveAccessContext*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.ExclusiveAccessContext*)*, void (%class.ExclusiveAccessContext*)** %5, i64 9
  %7 = load void (%class.ExclusiveAccessContext*)*, void (%class.ExclusiveAccessContext*)** %6, align 8
  tail call void %7(%class.ExclusiveAccessContext* %3) #4
  ret void
}

declare zeroext i1 @_ZN22KeyboardLockController14HandleKeyEventERKN7content22NativeWebKeyboardEventE(%class.KeyboardLockController*, %"struct.content::NativeWebKeyboardEvent"* dereferenceable(96)) local_unnamed_addr #1

declare zeroext i1 @_ZN20FullscreenController23HandleUserPressedEscapeEv(%class.FullscreenController*) unnamed_addr #1

declare zeroext i1 @_ZN19MouseLockController23HandleUserPressedEscapeEv(%class.MouseLockController*) unnamed_addr #1

declare zeroext i1 @_ZN22KeyboardLockController23HandleUserPressedEscapeEv(%class.KeyboardLockController*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22ExclusiveAccessManager19ExitExclusiveAccessEv(%class.ExclusiveAccessManager*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.ExclusiveAccessManager, %class.ExclusiveAccessManager* %0, i64 0, i32 1
  tail call void @_ZN20FullscreenController34ExitExclusiveAccessToPreviousStateEv(%class.FullscreenController* %2) #4
  %3 = getelementptr inbounds %class.ExclusiveAccessManager, %class.ExclusiveAccessManager* %0, i64 0, i32 2
  tail call void @_ZN22KeyboardLockController16LostKeyboardLockEv(%class.KeyboardLockController* %3) #4
  %4 = getelementptr inbounds %class.ExclusiveAccessManager, %class.ExclusiveAccessManager* %0, i64 0, i32 3
  tail call void @_ZN19MouseLockController13LostMouseLockEv(%class.MouseLockController* %4) #4
  ret void
}

declare void @_ZN20FullscreenController34ExitExclusiveAccessToPreviousStateEv(%class.FullscreenController*) unnamed_addr #1

declare void @_ZN22KeyboardLockController16LostKeyboardLockEv(%class.KeyboardLockController*) local_unnamed_addr #1

declare void @_ZN19MouseLockController13LostMouseLockEv(%class.MouseLockController*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22ExclusiveAccessManager22RecordBubbleReshownUMAE25ExclusiveAccessBubbleType(%class.ExclusiveAccessManager*, i32) local_unnamed_addr #0 align 2 {
  switch i32 %1, label %19 [
    i32 2, label %3
    i32 1, label %9
    i32 5, label %9
    i32 6, label %9
    i32 4, label %12
    i32 3, label %6
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %class.ExclusiveAccessManager, %class.ExclusiveAccessManager* %0, i64 0, i32 1
  %5 = bitcast %class.FullscreenController* %4 to %class.ExclusiveAccessControllerBase*
  tail call void @_ZN29ExclusiveAccessControllerBase22RecordBubbleReshownUMAEv(%class.ExclusiveAccessControllerBase* %5) #4
  br label %6

6:                                                ; preds = %2, %3
  %7 = getelementptr inbounds %class.ExclusiveAccessManager, %class.ExclusiveAccessManager* %0, i64 0, i32 3
  %8 = bitcast %class.MouseLockController* %7 to %class.ExclusiveAccessControllerBase*
  br label %17

9:                                                ; preds = %2, %2, %2
  %10 = getelementptr inbounds %class.ExclusiveAccessManager, %class.ExclusiveAccessManager* %0, i64 0, i32 1
  %11 = bitcast %class.FullscreenController* %10 to %class.ExclusiveAccessControllerBase*
  br label %17

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.ExclusiveAccessManager, %class.ExclusiveAccessManager* %0, i64 0, i32 1
  %14 = bitcast %class.FullscreenController* %13 to %class.ExclusiveAccessControllerBase*
  tail call void @_ZN29ExclusiveAccessControllerBase22RecordBubbleReshownUMAEv(%class.ExclusiveAccessControllerBase* %14) #4
  %15 = getelementptr inbounds %class.ExclusiveAccessManager, %class.ExclusiveAccessManager* %0, i64 0, i32 2
  %16 = bitcast %class.KeyboardLockController* %15 to %class.ExclusiveAccessControllerBase*
  br label %17

17:                                               ; preds = %12, %9, %6
  %18 = phi %class.ExclusiveAccessControllerBase* [ %8, %6 ], [ %11, %9 ], [ %16, %12 ]
  tail call void @_ZN29ExclusiveAccessControllerBase22RecordBubbleReshownUMAEv(%class.ExclusiveAccessControllerBase* %18) #4
  br label %19

19:                                               ; preds = %17, %2
  ret void
}

declare void @_ZN29ExclusiveAccessControllerBase22RecordBubbleReshownUMAEv(%class.ExclusiveAccessControllerBase*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK22ExclusiveAccessManager27GetExclusiveAccessBubbleURLEv: argument 0"}
!5 = distinct !{!5, !"_ZNK22ExclusiveAccessManager27GetExclusiveAccessBubbleURLEv"}
