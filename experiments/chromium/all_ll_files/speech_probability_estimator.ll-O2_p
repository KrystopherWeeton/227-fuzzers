; ModuleID = '../../third_party/webrtc/modules/audio_processing/ns/speech_probability_estimator.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/ns/speech_probability_estimator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webrtc::SpeechProbabilityEstimator" = type { %"class.webrtc::SignalModelEstimator", float, %"struct.std::__1::array.0" }
%"class.webrtc::SignalModelEstimator" = type { float, float, %"class.webrtc::Histograms", i32, %"class.webrtc::PriorSignalModelEstimator", %"struct.webrtc::SignalModel" }
%"class.webrtc::Histograms" = type { %"struct.std::__1::array", %"struct.std::__1::array", %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [1000 x i32] }
%"class.webrtc::PriorSignalModelEstimator" = type { %"struct.webrtc::PriorSignalModel" }
%"struct.webrtc::PriorSignalModel" = type { float, float, float, float, float, float }
%"struct.webrtc::SignalModel" = type { float, float, float, %"struct.std::__1::array.0" }
%"struct.std::__1::array.0" = type { [129 x float] }

@_ZN6webrtc26SpeechProbabilityEstimatorC1Ev = hidden unnamed_addr alias void (%"class.webrtc::SpeechProbabilityEstimator"*), void (%"class.webrtc::SpeechProbabilityEstimator"*)* @_ZN6webrtc26SpeechProbabilityEstimatorC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc26SpeechProbabilityEstimatorC2Ev(%"class.webrtc::SpeechProbabilityEstimator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::SpeechProbabilityEstimator", %"class.webrtc::SpeechProbabilityEstimator"* %0, i64 0, i32 0
  tail call void @_ZN6webrtc20SignalModelEstimatorC1Ev(%"class.webrtc::SignalModelEstimator"* %2) #4
  %3 = getelementptr inbounds %"class.webrtc::SpeechProbabilityEstimator", %"class.webrtc::SpeechProbabilityEstimator"* %0, i64 0, i32 1
  store float 5.000000e-01, float* %3, align 4
  %4 = getelementptr %"class.webrtc::SpeechProbabilityEstimator", %"class.webrtc::SpeechProbabilityEstimator"* %0, i64 0, i32 2, i32 0, i64 0
  %5 = bitcast float* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %5, i8 0, i64 516, i1 false)
  ret void
}

declare void @_ZN6webrtc20SignalModelEstimatorC1Ev(%"class.webrtc::SignalModelEstimator"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc26SpeechProbabilityEstimator6UpdateEiN3rtc9ArrayViewIKfLl129EEES4_S4_S4_ff(%"class.webrtc::SpeechProbabilityEstimator"*, i32, float*, float*, float*, float*, float, float) local_unnamed_addr #0 align 2 {
  %9 = alloca float, align 4
  %10 = alloca float, align 4
  %11 = alloca %"struct.std::__1::array.0", align 4
  %12 = icmp slt i32 %1, 200
  br i1 %12, label %13, label %15

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.webrtc::SpeechProbabilityEstimator", %"class.webrtc::SpeechProbabilityEstimator"* %0, i64 0, i32 0
  tail call void @_ZN6webrtc20SignalModelEstimator19AdjustNormalizationEif(%"class.webrtc::SignalModelEstimator"* %14, i32 %1, float %7) #4
  br label %15

15:                                               ; preds = %13, %8
  %16 = getelementptr inbounds %"class.webrtc::SpeechProbabilityEstimator", %"class.webrtc::SpeechProbabilityEstimator"* %0, i64 0, i32 0
  tail call void @_ZN6webrtc20SignalModelEstimator6UpdateEN3rtc9ArrayViewIKfLl129EEES4_S4_S4_ff(%"class.webrtc::SignalModelEstimator"* %16, float* %2, float* %3, float* %4, float* %5, float %6, float %7) #4
  %17 = getelementptr inbounds %"class.webrtc::SpeechProbabilityEstimator", %"class.webrtc::SpeechProbabilityEstimator"* %0, i64 0, i32 0, i32 5, i32 0
  %18 = load float, float* %17, align 4
  %19 = getelementptr inbounds %"class.webrtc::SpeechProbabilityEstimator", %"class.webrtc::SpeechProbabilityEstimator"* %0, i64 0, i32 0, i32 4, i32 0, i32 0
  %20 = load float, float* %19, align 4
  %21 = fcmp olt float %18, %20
  %22 = select i1 %21, float 8.000000e+00, float 4.000000e+00
  %23 = fsub float %18, %20
  %24 = fmul float %23, %22
  %25 = tail call float @tanhf(float %24) #4
  %26 = getelementptr inbounds %"class.webrtc::SpeechProbabilityEstimator", %"class.webrtc::SpeechProbabilityEstimator"* %0, i64 0, i32 0, i32 5, i32 2
  %27 = load float, float* %26, align 4
  %28 = getelementptr inbounds %"class.webrtc::SpeechProbabilityEstimator", %"class.webrtc::SpeechProbabilityEstimator"* %0, i64 0, i32 0, i32 4, i32 0, i32 1
  %29 = load float, float* %28, align 4
  %30 = fcmp ogt float %27, %29
  %31 = select i1 %30, float 8.000000e+00, float 4.000000e+00
  %32 = fsub float %29, %27
  %33 = fmul float %32, %31
  %34 = tail call float @tanhf(float %33) #4
  %35 = fadd float %34, 1.000000e+00
  %36 = fmul float %35, 5.000000e-01
  %37 = getelementptr inbounds %"class.webrtc::SpeechProbabilityEstimator", %"class.webrtc::SpeechProbabilityEstimator"* %0, i64 0, i32 0, i32 5, i32 1
  %38 = load float, float* %37, align 4
  %39 = getelementptr inbounds %"class.webrtc::SpeechProbabilityEstimator", %"class.webrtc::SpeechProbabilityEstimator"* %0, i64 0, i32 0, i32 4, i32 0, i32 2
  %40 = load float, float* %39, align 4
  %41 = fcmp olt float %38, %40
  %42 = select i1 %41, float 8.000000e+00, float 4.000000e+00
  %43 = fsub float %38, %40
  %44 = fmul float %43, %42
  %45 = tail call float @tanhf(float %44) #4
  %46 = insertelement <2 x float> undef, float %25, i32 0
  %47 = insertelement <2 x float> %46, float %45, i32 1
  %48 = fadd <2 x float> %47, <float 1.000000e+00, float 1.000000e+00>
  %49 = fmul <2 x float> %48, <float 5.000000e-01, float 5.000000e-01>
  %50 = getelementptr inbounds %"class.webrtc::SpeechProbabilityEstimator", %"class.webrtc::SpeechProbabilityEstimator"* %0, i64 0, i32 0, i32 4, i32 0, i32 3
  %51 = load float, float* %50, align 4
  %52 = getelementptr inbounds %"class.webrtc::SpeechProbabilityEstimator", %"class.webrtc::SpeechProbabilityEstimator"* %0, i64 0, i32 0, i32 4, i32 0, i32 4
  %53 = load float, float* %52, align 4
  %54 = fmul float %36, %53
  %55 = getelementptr inbounds %"class.webrtc::SpeechProbabilityEstimator", %"class.webrtc::SpeechProbabilityEstimator"* %0, i64 0, i32 0, i32 4, i32 0, i32 5
  %56 = load float, float* %55, align 4
  %57 = insertelement <2 x float> undef, float %51, i32 0
  %58 = insertelement <2 x float> %57, float %56, i32 1
  %59 = fmul <2 x float> %49, %58
  %60 = extractelement <2 x float> %59, i32 0
  %61 = fadd float %60, %54
  %62 = extractelement <2 x float> %59, i32 1
  %63 = fadd float %61, %62
  %64 = getelementptr inbounds %"class.webrtc::SpeechProbabilityEstimator", %"class.webrtc::SpeechProbabilityEstimator"* %0, i64 0, i32 1
  %65 = load float, float* %64, align 4
  %66 = fsub float %63, %65
  %67 = fmul float %66, 0x3FB99999A0000000
  %68 = fadd float %65, %67
  store float %68, float* %64, align 4
  %69 = bitcast float* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %69)
  store float 1.000000e+00, float* %9, align 4
  %70 = fcmp ogt float %68, 1.000000e+00
  %71 = select i1 %70, float* %9, float* %64
  %72 = bitcast float* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %72)
  store float 0x3F847AE140000000, float* %10, align 4
  %73 = load float, float* %71, align 4
  %74 = fcmp olt float %73, 0x3F847AE140000000
  %75 = select i1 %74, float* %10, float* %71
  %76 = bitcast float* %75 to i32*
  %77 = load i32, i32* %76, align 4
  %78 = bitcast float* %64 to i32*
  store i32 %77, i32* %78, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %72)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %69)
  %79 = bitcast i32 %77 to float
  %80 = fsub float 1.000000e+00, %79
  %81 = fadd float %79, 0x3F1A36E2E0000000
  %82 = fdiv float %80, %81
  %83 = bitcast %"struct.std::__1::array.0"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 516, i8* nonnull %83) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %83, i8 -1, i64 516, i1 false)
  %84 = getelementptr inbounds %"class.webrtc::SpeechProbabilityEstimator", %"class.webrtc::SpeechProbabilityEstimator"* %0, i64 0, i32 0, i32 5, i32 3, i32 0, i64 0
  %85 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %11, i64 0, i32 0, i64 0
  call void @_ZN6webrtc24ExpApproximationSignFlipEN3rtc9ArrayViewIKfLln4711EEENS1_IfLln4711EEE(float* %84, i64 129, float* nonnull %85, i64 129) #4
  %86 = insertelement <4 x float> undef, float %82, i32 0
  %87 = shufflevector <4 x float> %86, <4 x float> undef, <4 x i32> zeroinitializer
  br label %88

88:                                               ; preds = %88, %15
  %89 = phi i64 [ 0, %15 ], [ %107, %88 ]
  %90 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %11, i64 0, i32 0, i64 %89
  %91 = bitcast float* %90 to <4 x float>*
  %92 = load <4 x float>, <4 x float>* %91, align 4
  %93 = fmul <4 x float> %87, %92
  %94 = fadd <4 x float> %93, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %95 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %94
  %96 = getelementptr inbounds %"class.webrtc::SpeechProbabilityEstimator", %"class.webrtc::SpeechProbabilityEstimator"* %0, i64 0, i32 2, i32 0, i64 %89
  %97 = bitcast float* %96 to <4 x float>*
  store <4 x float> %95, <4 x float>* %97, align 4
  %98 = or i64 %89, 4
  %99 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %11, i64 0, i32 0, i64 %98
  %100 = bitcast float* %99 to <4 x float>*
  %101 = load <4 x float>, <4 x float>* %100, align 4
  %102 = fmul <4 x float> %87, %101
  %103 = fadd <4 x float> %102, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %104 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %103
  %105 = getelementptr inbounds %"class.webrtc::SpeechProbabilityEstimator", %"class.webrtc::SpeechProbabilityEstimator"* %0, i64 0, i32 2, i32 0, i64 %98
  %106 = bitcast float* %105 to <4 x float>*
  store <4 x float> %104, <4 x float>* %106, align 4
  %107 = add nuw nsw i64 %89, 8
  %108 = icmp eq i64 %107, 128
  br i1 %108, label %109, label %88, !llvm.loop !2

109:                                              ; preds = %88
  %110 = getelementptr inbounds %"struct.std::__1::array.0", %"struct.std::__1::array.0"* %11, i64 0, i32 0, i64 128
  %111 = load float, float* %110, align 4
  %112 = fmul float %82, %111
  %113 = fadd float %112, 1.000000e+00
  %114 = fdiv float 1.000000e+00, %113
  %115 = getelementptr inbounds %"class.webrtc::SpeechProbabilityEstimator", %"class.webrtc::SpeechProbabilityEstimator"* %0, i64 0, i32 2, i32 0, i64 128
  store float %114, float* %115, align 4
  call void @llvm.lifetime.end.p0i8(i64 516, i8* nonnull %83) #4
  ret void
}

declare void @_ZN6webrtc20SignalModelEstimator19AdjustNormalizationEif(%"class.webrtc::SignalModelEstimator"*, i32, float) local_unnamed_addr #1

declare void @_ZN6webrtc20SignalModelEstimator6UpdateEN3rtc9ArrayViewIKfLl129EEES4_S4_S4_ff(%"class.webrtc::SignalModelEstimator"*, float*, float*, float*, float*, float, float) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN6webrtc24ExpApproximationSignFlipEN3rtc9ArrayViewIKfLln4711EEENS1_IfLln4711EEE(float*, i64, float*, i64) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare float @tanhf(float) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
