; ModuleID = '../../ui/base/prediction/linear_resampling.cc'
source_filename = "../../ui/base/prediction/linear_resampling.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::TimeDelta" = type { i64 }
%"struct.base::Feature" = type { i8*, i32 }
%"class.ui::LinearResampling" = type { %"class.ui::InputPredictor", %"class.std::__1::deque", %"class.base::TimeDelta", %"class.ui::LinearResampling::LatencyCalculator" }
%"class.ui::InputPredictor" = type { i32 (...)** }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.1" }
%"struct.std::__1::__split_buffer" = type { %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"**, %"class.std::__1::__compressed_pair" }
%"struct.ui::InputPredictor::InputData" = type { %"class.gfx::PointF", %"class.base::TimeTicks" }
%"class.gfx::PointF" = type { float, float }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.ui::InputPredictor::InputData"** }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.ui::LinearResampling::LatencyCalculator" = type { %"class.base::TimeDelta", %"class.base::TimeDelta" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.gfx::Vector2dF" = type { float, float }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZNK4base9TimeDeltadvES0_ = comdat any

$_ZNSt3__15dequeIN2ui14InputPredictor9InputDataENS_9allocatorIS3_EEE20__add_front_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPN2ui14InputPredictor9InputDataENS_9allocatorIS4_EEE10push_frontERKS4_ = comdat any

$_ZNSt3__114__split_bufferIPN2ui14InputPredictor9InputDataENS_9allocatorIS4_EEE10push_frontEOS4_ = comdat any

$_ZNSt3__114__split_bufferIPN2ui14InputPredictor9InputDataENS_9allocatorIS4_EEE9push_backEOS4_ = comdat any

@_ZTVN2ui16LinearResamplingE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::LinearResampling"*)* @_ZN2ui16LinearResamplingD2Ev to i8*), i8* bitcast (void (%"class.ui::LinearResampling"*)* @_ZN2ui16LinearResamplingD0Ev to i8*), i8* bitcast (i8* (%"class.ui::LinearResampling"*)* @_ZNK2ui16LinearResampling7GetNameEv to i8*), i8* bitcast (void (%"class.ui::LinearResampling"*)* @_ZN2ui16LinearResampling5ResetEv to i8*), i8* bitcast (void (%"class.ui::LinearResampling"*, %"struct.ui::InputPredictor::InputData"*)* @_ZN2ui16LinearResampling6UpdateERKNS_14InputPredictor9InputDataE to i8*), i8* bitcast (i1 (%"class.ui::LinearResampling"*)* @_ZNK2ui16LinearResampling13HasPredictionEv to i8*), i8* bitcast (%"struct.ui::InputPredictor::InputData"* (%"class.ui::LinearResampling"*, i64, i64)* @_ZN2ui16LinearResampling18GeneratePredictionEN4base9TimeTicksENS1_9TimeDeltaE to i8*), i8* bitcast (i64 (%"class.ui::LinearResampling"*)* @_ZNK2ui16LinearResampling12TimeIntervalEv to i8*)] }, align 8
@_ZN8features30kPredictorNameLinearResamplingE = external constant [0 x i8], align 1
@_ZN2ui12_GLOBAL__N_122kResampleMaxPredictionE = internal unnamed_addr constant %"class.base::TimeDelta" { i64 8000 }, align 8
@_ZN8features45kResamplingScrollEventsExperimentalPredictionE = external global %"struct.base::Feature", align 8
@_ZN8features24kPredictionTypeTimeBasedE = external constant [0 x i8], align 1
@_ZN8features26kPredictionTypeFramesBasedE = external constant [0 x i8], align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"latency\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.3 = private unnamed_addr constant [27 x i8] c"!is_zero() || !a.is_zero()\00", align 1
@.str.4 = private unnamed_addr constant [25 x i8] c"!is_inf() || !a.is_inf()\00", align 1
@.str.5 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1

@_ZN2ui16LinearResamplingC1Ev = hidden unnamed_addr alias void (%"class.ui::LinearResampling"*), void (%"class.ui::LinearResampling"*)* @_ZN2ui16LinearResamplingC2Ev
@_ZN2ui16LinearResamplingD1Ev = hidden unnamed_addr alias void (%"class.ui::LinearResampling"*), void (%"class.ui::LinearResampling"*)* @_ZN2ui16LinearResamplingD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui16LinearResamplingC2Ev(%"class.ui::LinearResampling"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::LinearResampling", %"class.ui::LinearResampling"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN2ui16LinearResamplingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::LinearResampling", %"class.ui::LinearResampling"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::deque"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 72, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui16LinearResamplingD2Ev(%"class.ui::LinearResampling"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::LinearResampling", %"class.ui::LinearResampling"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN2ui16LinearResamplingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::LinearResampling", %"class.ui::LinearResampling"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %4 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %3, align 8
  %5 = getelementptr inbounds %"class.ui::LinearResampling", %"class.ui::LinearResampling"* %0, i64 0, i32 1, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %6, 8
  %8 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %4, i64 %7
  %9 = getelementptr inbounds %"class.ui::LinearResampling", %"class.ui::LinearResampling"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %10 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %9, align 8
  %11 = icmp eq %"struct.ui::InputPredictor::InputData"** %10, %4
  %12 = ptrtoint %"struct.ui::InputPredictor::InputData"** %10 to i64
  %13 = ptrtoint %"struct.ui::InputPredictor::InputData"** %4 to i64
  br i1 %11, label %14, label %16

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.ui::LinearResampling", %"class.ui::LinearResampling"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  br label %29

16:                                               ; preds = %1
  %17 = load %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %8, align 8
  %18 = and i64 %6, 255
  %19 = getelementptr inbounds %"struct.ui::InputPredictor::InputData", %"struct.ui::InputPredictor::InputData"* %17, i64 %18
  %20 = getelementptr inbounds %"class.ui::LinearResampling", %"class.ui::LinearResampling"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, %6
  %23 = lshr i64 %22, 8
  %24 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %4, i64 %23
  %25 = load %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %24, align 8
  %26 = and i64 %22, 255
  %27 = getelementptr inbounds %"struct.ui::InputPredictor::InputData", %"struct.ui::InputPredictor::InputData"* %25, i64 %26
  %28 = icmp eq %"struct.ui::InputPredictor::InputData"* %27, %19
  br i1 %28, label %29, label %35

29:                                               ; preds = %48, %16, %14
  %30 = phi i64* [ %15, %14 ], [ %20, %16 ], [ %20, %48 ]
  store i64 0, i64* %30, align 8
  %31 = bitcast %"struct.ui::InputPredictor::InputData"*** %9 to i64*
  %32 = sub i64 %12, %13
  %33 = ashr exact i64 %32, 3
  %34 = icmp ugt i64 %33, 2
  br i1 %34, label %53, label %66

35:                                               ; preds = %16, %48
  %36 = phi %"struct.ui::InputPredictor::InputData"* [ %51, %48 ], [ %19, %16 ]
  %37 = phi %"struct.ui::InputPredictor::InputData"** [ %50, %48 ], [ %8, %16 ]
  %38 = getelementptr inbounds %"struct.ui::InputPredictor::InputData", %"struct.ui::InputPredictor::InputData"* %36, i64 1
  %39 = ptrtoint %"struct.ui::InputPredictor::InputData"* %38 to i64
  %40 = bitcast %"struct.ui::InputPredictor::InputData"** %37 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %39, %41
  %43 = icmp eq i64 %42, 4096
  br i1 %43, label %44, label %48

44:                                               ; preds = %35
  %45 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %37, i64 1
  %46 = bitcast %"struct.ui::InputPredictor::InputData"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  br label %48

48:                                               ; preds = %44, %35
  %49 = phi i64 [ %47, %44 ], [ %39, %35 ]
  %50 = phi %"struct.ui::InputPredictor::InputData"** [ %45, %44 ], [ %37, %35 ]
  %51 = inttoptr i64 %49 to %"struct.ui::InputPredictor::InputData"*
  %52 = icmp eq %"struct.ui::InputPredictor::InputData"* %27, %51
  br i1 %52, label %29, label %35

53:                                               ; preds = %29, %53
  %54 = phi %"struct.ui::InputPredictor::InputData"** [ %58, %53 ], [ %4, %29 ]
  %55 = bitcast %"struct.ui::InputPredictor::InputData"** %54 to i8**
  %56 = load i8*, i8** %55, align 8
  tail call void @_ZdlPv(i8* %56) #12
  %57 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %3, align 8
  %58 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %57, i64 1
  store %"struct.ui::InputPredictor::InputData"** %58, %"struct.ui::InputPredictor::InputData"*** %3, align 8
  %59 = load i64, i64* %31, align 8
  %60 = ptrtoint %"struct.ui::InputPredictor::InputData"** %58 to i64
  %61 = sub i64 %59, %60
  %62 = ashr exact i64 %61, 3
  %63 = icmp ugt i64 %62, 2
  br i1 %63, label %53, label %64

64:                                               ; preds = %53
  %65 = inttoptr i64 %59 to %"struct.ui::InputPredictor::InputData"**
  br label %66

66:                                               ; preds = %64, %29
  %67 = phi %"struct.ui::InputPredictor::InputData"** [ %10, %29 ], [ %65, %64 ]
  %68 = phi %"struct.ui::InputPredictor::InputData"** [ %4, %29 ], [ %58, %64 ]
  %69 = phi i64 [ %33, %29 ], [ %62, %64 ]
  switch i64 %69, label %73 [
    i64 1, label %71
    i64 2, label %70
  ]

70:                                               ; preds = %66
  br label %71

71:                                               ; preds = %66, %70
  %72 = phi i64 [ 256, %70 ], [ 128, %66 ]
  store i64 %72, i64* %5, align 8
  br label %73

73:                                               ; preds = %71, %66
  %74 = icmp eq %"struct.ui::InputPredictor::InputData"** %68, %67
  br i1 %74, label %93, label %75

75:                                               ; preds = %73, %75
  %76 = phi %"struct.ui::InputPredictor::InputData"** [ %79, %75 ], [ %68, %73 ]
  %77 = bitcast %"struct.ui::InputPredictor::InputData"** %76 to i8**
  %78 = load i8*, i8** %77, align 8
  tail call void @_ZdlPv(i8* %78) #12
  %79 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %76, i64 1
  %80 = icmp eq %"struct.ui::InputPredictor::InputData"** %79, %67
  br i1 %80, label %81, label %75

81:                                               ; preds = %75
  %82 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %3, align 8
  %83 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %9, align 8
  %84 = icmp eq %"struct.ui::InputPredictor::InputData"** %83, %82
  br i1 %84, label %93, label %85

85:                                               ; preds = %81
  %86 = ptrtoint %"struct.ui::InputPredictor::InputData"** %82 to i64
  %87 = getelementptr %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %83, i64 -1
  %88 = ptrtoint %"struct.ui::InputPredictor::InputData"** %87 to i64
  %89 = sub i64 %88, %86
  %90 = lshr i64 %89, 3
  %91 = xor i64 %90, -1
  %92 = getelementptr %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %83, i64 %91
  store %"struct.ui::InputPredictor::InputData"** %92, %"struct.ui::InputPredictor::InputData"*** %9, align 8
  br label %93

93:                                               ; preds = %85, %81, %73
  %94 = getelementptr inbounds %"class.ui::LinearResampling", %"class.ui::LinearResampling"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %95 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %94, align 8
  %96 = icmp eq %"struct.ui::InputPredictor::InputData"** %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %93
  %98 = bitcast %"struct.ui::InputPredictor::InputData"** %95 to i8*
  tail call void @_ZdlPv(i8* %98) #12
  br label %99

99:                                               ; preds = %93, %97
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui16LinearResamplingD0Ev(%"class.ui::LinearResampling"*) unnamed_addr #0 align 2 {
  tail call void @_ZN2ui16LinearResamplingD2Ev(%"class.ui::LinearResampling"* %0) #13
  %2 = bitcast %"class.ui::LinearResampling"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZNK2ui16LinearResampling7GetNameEv(%"class.ui::LinearResampling"* nocapture readnone) unnamed_addr #2 align 2 {
  ret i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8features30kPredictorNameLinearResamplingE, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui16LinearResampling5ResetEv(%"class.ui::LinearResampling"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::LinearResampling", %"class.ui::LinearResampling"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %3 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %2, align 8
  %4 = getelementptr inbounds %"class.ui::LinearResampling", %"class.ui::LinearResampling"* %0, i64 0, i32 1, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 8
  %7 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %3, i64 %6
  %8 = getelementptr inbounds %"class.ui::LinearResampling", %"class.ui::LinearResampling"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %9 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %8, align 8
  %10 = icmp eq %"struct.ui::InputPredictor::InputData"** %9, %3
  %11 = ptrtoint %"struct.ui::InputPredictor::InputData"** %9 to i64
  %12 = ptrtoint %"struct.ui::InputPredictor::InputData"** %3 to i64
  br i1 %10, label %13, label %15

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.ui::LinearResampling", %"class.ui::LinearResampling"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  br label %28

15:                                               ; preds = %1
  %16 = load %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %7, align 8
  %17 = and i64 %5, 255
  %18 = getelementptr inbounds %"struct.ui::InputPredictor::InputData", %"struct.ui::InputPredictor::InputData"* %16, i64 %17
  %19 = getelementptr inbounds %"class.ui::LinearResampling", %"class.ui::LinearResampling"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, %5
  %22 = lshr i64 %21, 8
  %23 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %3, i64 %22
  %24 = load %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %23, align 8
  %25 = and i64 %21, 255
  %26 = getelementptr inbounds %"struct.ui::InputPredictor::InputData", %"struct.ui::InputPredictor::InputData"* %24, i64 %25
  %27 = icmp eq %"struct.ui::InputPredictor::InputData"* %26, %18
  br i1 %27, label %28, label %34

28:                                               ; preds = %47, %15, %13
  %29 = phi i64* [ %14, %13 ], [ %19, %15 ], [ %19, %47 ]
  store i64 0, i64* %29, align 8
  %30 = bitcast %"struct.ui::InputPredictor::InputData"*** %8 to i64*
  %31 = sub i64 %11, %12
  %32 = ashr exact i64 %31, 3
  %33 = icmp ugt i64 %32, 2
  br i1 %33, label %52, label %63

34:                                               ; preds = %15, %47
  %35 = phi %"struct.ui::InputPredictor::InputData"* [ %50, %47 ], [ %18, %15 ]
  %36 = phi %"struct.ui::InputPredictor::InputData"** [ %49, %47 ], [ %7, %15 ]
  %37 = getelementptr inbounds %"struct.ui::InputPredictor::InputData", %"struct.ui::InputPredictor::InputData"* %35, i64 1
  %38 = ptrtoint %"struct.ui::InputPredictor::InputData"* %37 to i64
  %39 = bitcast %"struct.ui::InputPredictor::InputData"** %36 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %38, %40
  %42 = icmp eq i64 %41, 4096
  br i1 %42, label %43, label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %36, i64 1
  %45 = bitcast %"struct.ui::InputPredictor::InputData"** %44 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %43, %34
  %48 = phi i64 [ %46, %43 ], [ %38, %34 ]
  %49 = phi %"struct.ui::InputPredictor::InputData"** [ %44, %43 ], [ %36, %34 ]
  %50 = inttoptr i64 %48 to %"struct.ui::InputPredictor::InputData"*
  %51 = icmp eq %"struct.ui::InputPredictor::InputData"* %26, %50
  br i1 %51, label %28, label %34

52:                                               ; preds = %28, %52
  %53 = phi %"struct.ui::InputPredictor::InputData"** [ %57, %52 ], [ %3, %28 ]
  %54 = bitcast %"struct.ui::InputPredictor::InputData"** %53 to i8**
  %55 = load i8*, i8** %54, align 8
  tail call void @_ZdlPv(i8* %55) #12
  %56 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %2, align 8
  %57 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %56, i64 1
  store %"struct.ui::InputPredictor::InputData"** %57, %"struct.ui::InputPredictor::InputData"*** %2, align 8
  %58 = load i64, i64* %30, align 8
  %59 = ptrtoint %"struct.ui::InputPredictor::InputData"** %57 to i64
  %60 = sub i64 %58, %59
  %61 = ashr exact i64 %60, 3
  %62 = icmp ugt i64 %61, 2
  br i1 %62, label %52, label %63

63:                                               ; preds = %52, %28
  %64 = phi i64 [ %32, %28 ], [ %61, %52 ]
  switch i64 %64, label %68 [
    i64 1, label %66
    i64 2, label %65
  ]

65:                                               ; preds = %63
  br label %66

66:                                               ; preds = %63, %65
  %67 = phi i64 [ 256, %65 ], [ 128, %63 ]
  store i64 %67, i64* %4, align 8
  br label %68

68:                                               ; preds = %66, %63
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui16LinearResampling6UpdateERKNS_14InputPredictor9InputDataE(%"class.ui::LinearResampling"*, %"struct.ui::InputPredictor::InputData"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::LinearResampling", %"class.ui::LinearResampling"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.ui::LinearResampling", %"class.ui::LinearResampling"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %27, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.ui::LinearResampling", %"class.ui::LinearResampling"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %9 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %8, align 8
  %10 = getelementptr inbounds %"class.ui::LinearResampling", %"class.ui::LinearResampling"* %0, i64 0, i32 1, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = lshr i64 %11, 8
  %13 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %9, i64 %12
  %14 = load %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %13, align 8
  %15 = and i64 %11, 255
  %16 = getelementptr inbounds %"struct.ui::InputPredictor::InputData", %"struct.ui::InputPredictor::InputData"* %14, i64 %15, i32 1, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"struct.ui::InputPredictor::InputData", %"struct.ui::InputPredictor::InputData"* %1, i64 0, i32 1, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = sub nsw i64 %19, %17
  %21 = icmp sgt i64 %20, 20000
  br i1 %21, label %22, label %27

22:                                               ; preds = %7
  %23 = bitcast %"class.ui::LinearResampling"* %0 to void (%"class.ui::LinearResampling"*)***
  %24 = load void (%"class.ui::LinearResampling"*)**, void (%"class.ui::LinearResampling"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.ui::LinearResampling"*)*, void (%"class.ui::LinearResampling"*)** %24, i64 3
  %26 = load void (%"class.ui::LinearResampling"*)*, void (%"class.ui::LinearResampling"*)** %25, align 8
  tail call void %26(%"class.ui::LinearResampling"* %0) #13
  br label %27

27:                                               ; preds = %2, %22, %7
  %28 = getelementptr inbounds %"class.ui::LinearResampling", %"class.ui::LinearResampling"* %0, i64 0, i32 1, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %27
  tail call void @_ZNSt3__15dequeIN2ui14InputPredictor9InputDataENS_9allocatorIS3_EEE20__add_front_capacityEv(%"class.std::__1::deque"* %3) #13
  %32 = load i64, i64* %28, align 8
  br label %33

33:                                               ; preds = %31, %27
  %34 = phi i64 [ %32, %31 ], [ %29, %27 ]
  %35 = getelementptr inbounds %"class.ui::LinearResampling", %"class.ui::LinearResampling"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %36 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %35, align 8
  %37 = lshr i64 %34, 8
  %38 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %36, i64 %37
  %39 = getelementptr inbounds %"class.ui::LinearResampling", %"class.ui::LinearResampling"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %40 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %39, align 8
  %41 = icmp eq %"struct.ui::InputPredictor::InputData"** %40, %36
  %42 = load %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %38, align 8
  %43 = and i64 %34, 255
  %44 = getelementptr inbounds %"struct.ui::InputPredictor::InputData", %"struct.ui::InputPredictor::InputData"* %42, i64 %43
  %45 = select i1 %41, %"struct.ui::InputPredictor::InputData"* null, %"struct.ui::InputPredictor::InputData"* %44
  %46 = icmp eq %"struct.ui::InputPredictor::InputData"* %45, %42
  br i1 %46, label %47, label %51

47:                                               ; preds = %33
  %48 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %38, i64 -1
  %49 = load %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %48, align 8
  %50 = getelementptr inbounds %"struct.ui::InputPredictor::InputData", %"struct.ui::InputPredictor::InputData"* %49, i64 256
  br label %51

51:                                               ; preds = %33, %47
  %52 = phi %"struct.ui::InputPredictor::InputData"* [ %50, %47 ], [ %45, %33 ]
  %53 = getelementptr inbounds %"struct.ui::InputPredictor::InputData", %"struct.ui::InputPredictor::InputData"* %52, i64 -1
  %54 = bitcast %"struct.ui::InputPredictor::InputData"* %53 to i8*
  %55 = bitcast %"struct.ui::InputPredictor::InputData"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 16, i1 false) #13
  %56 = load i64, i64* %28, align 8
  %57 = add i64 %56, -1
  store i64 %57, i64* %28, align 8
  %58 = load i64, i64* %4, align 8
  %59 = add i64 %58, 1
  store i64 %59, i64* %4, align 8
  %60 = icmp ugt i64 %59, 2
  br i1 %60, label %61, label %83

61:                                               ; preds = %51
  store i64 %58, i64* %4, align 8
  %62 = bitcast %"struct.ui::InputPredictor::InputData"*** %39 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"struct.ui::InputPredictor::InputData"*** %35 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %63, %65
  %67 = icmp eq i64 %66, 0
  %68 = shl i64 %66, 5
  %69 = add i64 %68, -1
  %70 = select i1 %67, i64 0, i64 %69
  %71 = sub i64 1, %56
  %72 = sub i64 %71, %58
  %73 = add i64 %72, %70
  %74 = icmp ult i64 %73, 512
  br i1 %74, label %83, label %75

75:                                               ; preds = %61
  %76 = inttoptr i64 %63 to %"struct.ui::InputPredictor::InputData"**
  %77 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %76, i64 -1
  %78 = bitcast %"struct.ui::InputPredictor::InputData"** %77 to i8**
  %79 = load i8*, i8** %78, align 8
  tail call void @_ZdlPv(i8* %79) #12
  %80 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %39, align 8
  %81 = getelementptr %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %80, i64 -1
  store %"struct.ui::InputPredictor::InputData"** %81, %"struct.ui::InputPredictor::InputData"*** %39, align 8
  %82 = load i64, i64* %4, align 8
  br label %83

83:                                               ; preds = %75, %61, %51
  %84 = phi i64 [ %59, %51 ], [ %58, %61 ], [ %82, %75 ]
  %85 = icmp eq i64 %84, 2
  br i1 %85, label %86, label %104

86:                                               ; preds = %83
  %87 = load i64, i64* %28, align 8
  %88 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %35, align 8
  %89 = lshr i64 %87, 8
  %90 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %88, i64 %89
  %91 = load %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %90, align 8
  %92 = and i64 %87, 255
  %93 = add i64 %87, 1
  %94 = lshr i64 %93, 8
  %95 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %88, i64 %94
  %96 = load %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %95, align 8
  %97 = and i64 %93, 255
  %98 = getelementptr inbounds %"struct.ui::InputPredictor::InputData", %"struct.ui::InputPredictor::InputData"* %96, i64 %97, i32 1, i32 0, i32 0
  %99 = load i64, i64* %98, align 8
  %100 = getelementptr inbounds %"struct.ui::InputPredictor::InputData", %"struct.ui::InputPredictor::InputData"* %91, i64 %92, i32 1, i32 0, i32 0
  %101 = load i64, i64* %100, align 8
  %102 = sub nsw i64 %101, %99
  %103 = getelementptr inbounds %"class.ui::LinearResampling", %"class.ui::LinearResampling"* %0, i64 0, i32 2, i32 0
  store i64 %102, i64* %103, align 8
  br label %104

104:                                              ; preds = %86, %83
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2ui16LinearResampling13HasPredictionEv(%"class.ui::LinearResampling"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.ui::LinearResampling", %"class.ui::LinearResampling"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 2
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.ui::LinearResampling", %"class.ui::LinearResampling"* %0, i64 0, i32 2, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp sgt i64 %7, 1999
  br label %9

9:                                                ; preds = %5, %1
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.ui::InputPredictor::InputData"* @_ZN2ui16LinearResampling18GeneratePredictionEN4base9TimeTicksENS1_9TimeDeltaE(%"class.ui::LinearResampling"*, i64, i64) unnamed_addr #5 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.base::TimeDelta", align 8
  %6 = alloca <2 x float>, align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca i64, align 8
  %9 = bitcast %"class.ui::LinearResampling"* %0 to i1 (%"class.ui::LinearResampling"*)***
  %10 = load i1 (%"class.ui::LinearResampling"*)**, i1 (%"class.ui::LinearResampling"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.ui::LinearResampling"*)*, i1 (%"class.ui::LinearResampling"*)** %10, i64 5
  %12 = load i1 (%"class.ui::LinearResampling"*)*, i1 (%"class.ui::LinearResampling"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.ui::LinearResampling"* %0) #13
  br i1 %13, label %14, label %151

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.ui::LinearResampling", %"class.ui::LinearResampling"* %0, i64 0, i32 3
  %16 = getelementptr inbounds %"class.ui::LinearResampling", %"class.ui::LinearResampling"* %0, i64 0, i32 3, i32 1, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, %2
  br i1 %18, label %19, label %23

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.ui::LinearResampling::LatencyCalculator", %"class.ui::LinearResampling::LatencyCalculator"* %15, i64 0, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %19, %14
  store i64 %2, i64* %16, align 8
  %24 = tail call i64 @_ZN2ui16LinearResampling17LatencyCalculator16CalculateLatencyEv(%"class.ui::LinearResampling::LatencyCalculator"* %15) #13
  %25 = getelementptr inbounds %"class.ui::LinearResampling::LatencyCalculator", %"class.ui::LinearResampling::LatencyCalculator"* %15, i64 0, i32 0, i32 0
  store i64 %24, i64* %25, align 8
  br label %26

26:                                               ; preds = %19, %23
  %27 = phi i64 [ %24, %23 ], [ %21, %19 ]
  %28 = add i64 %27, -9223372036854775807
  %29 = icmp ult i64 %28, 2
  br i1 %29, label %37, label %30

30:                                               ; preds = %26
  %31 = icmp slt i64 %27, 0
  %32 = select i1 %31, i64 -9223372036854775808, i64 9223372036854775807
  %33 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %1, i64 %27) #13
  %34 = extractvalue { i64, i1 } %33, 1
  %35 = extractvalue { i64, i1 } %33, 0
  %36 = select i1 %34, i64 %32, i64 %35, !prof !2
  br label %45

37:                                               ; preds = %26
  %38 = add i64 %1, -9223372036854775807
  %39 = icmp ugt i64 %38, 1
  %40 = icmp eq i64 %27, %1
  %41 = or i1 %39, %40
  br i1 %41, label %45, label %42

42:                                               ; preds = %37
  %43 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0)) #13
  %44 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #13
  br label %45

45:                                               ; preds = %30, %37, %42
  %46 = phi i64 [ %36, %30 ], [ %27, %37 ], [ %27, %42 ]
  %47 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47)
  %48 = getelementptr inbounds %"class.ui::LinearResampling", %"class.ui::LinearResampling"* %0, i64 0, i32 2, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = sitofp i64 %49 to double
  %51 = fmul double %50, 5.000000e-01
  %52 = fcmp oge double %51, 0xC3E0000000000000
  %53 = fcmp ole double %51, 0x43DFFFFFFFFFFFFF
  %54 = and i1 %53, %52
  %55 = fptosi double %51 to i64
  %56 = icmp sgt i64 %49, -1
  %57 = select i1 %56, i64 9223372036854775807, i64 -9223372036854775808
  %58 = select i1 %54, i64 %55, i64 %57
  store i64 %58, i64* %8, align 8
  %59 = icmp slt i64 %58, 8000
  %60 = bitcast i64* %8 to %"class.base::TimeDelta"*
  %61 = select i1 %59, %"class.base::TimeDelta"* %60, %"class.base::TimeDelta"* @_ZN2ui12_GLOBAL__N_122kResampleMaxPredictionE
  %62 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %61, i64 0, i32 0
  %63 = load i64, i64* %62, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47)
  %64 = getelementptr inbounds %"class.ui::LinearResampling", %"class.ui::LinearResampling"* %0, i64 0, i32 1, i32 0, i32 1
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %"class.ui::LinearResampling", %"class.ui::LinearResampling"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %67 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %66, align 8
  %68 = lshr i64 %65, 8
  %69 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %67, i64 %68
  %70 = load %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %69, align 8
  %71 = and i64 %65, 255
  %72 = getelementptr inbounds %"struct.ui::InputPredictor::InputData", %"struct.ui::InputPredictor::InputData"* %70, i64 %71, i32 1, i32 0, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = add i64 %63, -9223372036854775807
  %75 = icmp ult i64 %74, 2
  br i1 %75, label %83, label %76

76:                                               ; preds = %45
  %77 = icmp slt i64 %63, 0
  %78 = select i1 %77, i64 -9223372036854775808, i64 9223372036854775807
  %79 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %73, i64 %63) #13
  %80 = extractvalue { i64, i1 } %79, 1
  %81 = extractvalue { i64, i1 } %79, 0
  %82 = select i1 %80, i64 %78, i64 %81, !prof !2
  br label %95

83:                                               ; preds = %45
  %84 = add i64 %73, -9223372036854775807
  %85 = icmp ugt i64 %84, 1
  %86 = icmp eq i64 %73, %63
  %87 = or i1 %86, %85
  br i1 %87, label %95, label %88

88:                                               ; preds = %83
  %89 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0)) #13
  %90 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #13
  %91 = load i64, i64* %64, align 8
  %92 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %66, align 8
  %93 = lshr i64 %91, 8
  %94 = and i64 %91, 255
  br label %95

95:                                               ; preds = %76, %83, %88
  %96 = phi i64 [ %71, %76 ], [ %71, %83 ], [ %94, %88 ]
  %97 = phi i64 [ %68, %76 ], [ %68, %83 ], [ %93, %88 ]
  %98 = phi %"struct.ui::InputPredictor::InputData"** [ %67, %76 ], [ %67, %83 ], [ %92, %88 ]
  %99 = phi i64 [ %65, %76 ], [ %65, %83 ], [ %91, %88 ]
  %100 = phi i64 [ %82, %76 ], [ %63, %83 ], [ %63, %88 ]
  %101 = icmp slt i64 %100, %46
  %102 = select i1 %101, i64 %100, i64 %46
  %103 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %98, i64 %97
  %104 = load %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %103, align 8
  %105 = getelementptr inbounds %"struct.ui::InputPredictor::InputData", %"struct.ui::InputPredictor::InputData"* %104, i64 %96
  %106 = add i64 %99, 1
  %107 = lshr i64 %106, 8
  %108 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %98, i64 %107
  %109 = load %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %108, align 8
  %110 = and i64 %106, 255
  %111 = bitcast <2 x float>* %6 to %"class.gfx::Vector2dF"*
  %112 = bitcast %"class.base::TimeDelta"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #13
  %113 = getelementptr inbounds %"struct.ui::InputPredictor::InputData", %"struct.ui::InputPredictor::InputData"* %104, i64 %96, i32 1, i32 0, i32 0
  %114 = load i64, i64* %113, align 8
  %115 = sub nsw i64 %102, %114
  %116 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %5, i64 0, i32 0
  store i64 %115, i64* %116, align 8
  %117 = getelementptr inbounds %"struct.ui::InputPredictor::InputData", %"struct.ui::InputPredictor::InputData"* %109, i64 %110, i32 1, i32 0, i32 0
  %118 = load i64, i64* %117, align 8
  %119 = sub nsw i64 %114, %118
  %120 = call double @_ZNK4base9TimeDeltadvES0_(%"class.base::TimeDelta"* nonnull %5, i64 %119) #13
  %121 = fptrunc double %120 to float
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #13
  %122 = bitcast <2 x float>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %122) #13
  %123 = getelementptr inbounds %"struct.ui::InputPredictor::InputData", %"struct.ui::InputPredictor::InputData"* %105, i64 0, i32 0, i32 0
  %124 = load float, float* %123, align 4
  %125 = getelementptr inbounds %"struct.ui::InputPredictor::InputData", %"struct.ui::InputPredictor::InputData"* %109, i64 %110, i32 0, i32 0
  %126 = load float, float* %125, align 4
  %127 = fsub float %124, %126
  %128 = getelementptr inbounds %"struct.ui::InputPredictor::InputData", %"struct.ui::InputPredictor::InputData"* %104, i64 %96, i32 0, i32 1
  %129 = load float, float* %128, align 4
  %130 = getelementptr inbounds %"struct.ui::InputPredictor::InputData", %"struct.ui::InputPredictor::InputData"* %109, i64 %110, i32 0, i32 1
  %131 = load float, float* %130, align 4
  %132 = fsub float %129, %131
  %133 = insertelement <2 x float> undef, float %127, i32 0
  %134 = insertelement <2 x float> %133, float %132, i32 1
  store <2 x float> %134, <2 x float>* %6, align 8
  %135 = call <2 x float> @_ZN3gfx13ScaleVector2dERKNS_9Vector2dFEff(%"class.gfx::Vector2dF"* nonnull dereferenceable(8) %111, float %121, float %121) #13
  %136 = bitcast %"struct.ui::InputPredictor::InputData"* %105 to <2 x float>*
  %137 = load <2 x float>, <2 x float>* %136, align 4
  %138 = extractelement <2 x float> %135, i32 0
  %139 = extractelement <2 x float> %137, i32 0
  %140 = fadd float %138, %139
  %141 = insertelement <2 x float> undef, float %140, i32 0
  %142 = extractelement <2 x float> %135, i32 1
  %143 = extractelement <2 x float> %137, i32 1
  %144 = fadd float %142, %143
  %145 = insertelement <2 x float> %141, float %144, i32 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122) #13
  %146 = call i8* @_Znwm(i64 16) #12
  %147 = bitcast i8* %146 to %"struct.ui::InputPredictor::InputData"*
  %148 = getelementptr inbounds i8, i8* %146, i64 8
  %149 = bitcast i8* %148 to i64*
  %150 = bitcast i8* %146 to <2 x float>*
  store <2 x float> %145, <2 x float>* %150, align 8
  store i64 %102, i64* %149, align 8
  br label %151

151:                                              ; preds = %3, %95
  %152 = phi %"struct.ui::InputPredictor::InputData"* [ %147, %95 ], [ null, %3 ]
  ret %"struct.ui::InputPredictor::InputData"* %152
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2ui16LinearResampling17LatencyCalculator18GetResampleLatencyEN4base9TimeDeltaE(%"class.ui::LinearResampling::LatencyCalculator"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::LinearResampling::LatencyCalculator", %"class.ui::LinearResampling::LatencyCalculator"* %0, i64 0, i32 1, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, %1
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.ui::LinearResampling::LatencyCalculator", %"class.ui::LinearResampling::LatencyCalculator"* %0, i64 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %2, %6
  store i64 %1, i64* %3, align 8
  %11 = tail call i64 @_ZN2ui16LinearResampling17LatencyCalculator16CalculateLatencyEv(%"class.ui::LinearResampling::LatencyCalculator"* %0)
  %12 = getelementptr inbounds %"class.ui::LinearResampling::LatencyCalculator", %"class.ui::LinearResampling::LatencyCalculator"* %0, i64 0, i32 0, i32 0
  store i64 %11, i64* %12, align 8
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i64 [ %11, %10 ], [ %8, %6 ]
  ret i64 %14
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2ui16LinearResampling12TimeIntervalEv(%"class.ui::LinearResampling"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.ui::LinearResampling", %"class.ui::LinearResampling"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 2
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.ui::LinearResampling", %"class.ui::LinearResampling"* %0, i64 0, i32 2, i32 0
  %7 = load i64, i64* %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i64 [ %7, %5 ], [ 8000, %1 ]
  ret i64 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2ui16LinearResampling17LatencyCalculator16CalculateLatencyEv(%"class.ui::LinearResampling::LatencyCalculator"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca double, align 8
  %7 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %11 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #13
  %12 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  store i8 4, i8* %13, align 1
  %14 = bitcast %"class.std::__1::basic_string"* %3 to i32*
  store i32 1701080941, i32* %14, align 8
  %15 = getelementptr inbounds i8, i8* %10, i64 4
  store i8 0, i8* %15, align 4
  call void @_ZN4base32GetFieldTrialParamValueByFeatureERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %2, %"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8features45kResamplingScrollEventsExperimentalPredictionE, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #13
  %16 = load i8, i8* %13, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @_ZdlPv(i8* %20) #12
  br label %21

21:                                               ; preds = %1, %18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #13
  %22 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8features24kPredictionTypeTimeBasedE, i64 0, i64 0)) #13
  %23 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  %27 = load i64, i64* %9, align 8
  %28 = zext i8 %25 to i64
  %29 = select i1 %26, i64 %27, i64 %28
  %30 = icmp eq i64 %22, %29
  br i1 %30, label %31, label %38

31:                                               ; preds = %21
  %32 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %2, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8features24kPredictionTypeTimeBasedE, i64 0, i64 0), i64 %22) #13
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %49, label %34

34:                                               ; preds = %31
  %35 = load i8, i8* %24, align 1
  %36 = load i64, i64* %9, align 8
  %37 = zext i8 %35 to i64
  br label %38

38:                                               ; preds = %34, %21
  %39 = phi i64 [ %37, %34 ], [ %28, %21 ]
  %40 = phi i64 [ %36, %34 ], [ %27, %21 ]
  %41 = phi i8 [ %35, %34 ], [ %25, %21 ]
  %42 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8features26kPredictionTypeFramesBasedE, i64 0, i64 0)) #13
  %43 = icmp slt i8 %41, 0
  %44 = select i1 %43, i64 %40, i64 %39
  %45 = icmp eq i64 %42, %44
  br i1 %45, label %46, label %144

46:                                               ; preds = %38
  %47 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %2, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8features26kPredictionTypeFramesBasedE, i64 0, i64 0), i64 %42) #13
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %144

49:                                               ; preds = %31, %46
  %50 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #13
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %53 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %54 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #13
  %55 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  store i8 7, i8* %56, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %53, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7, i1 false) #13
  %57 = getelementptr inbounds i8, i8* %53, i64 7
  store i8 0, i8* %57, align 1
  call void @_ZN4base32GetFieldTrialParamValueByFeatureERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %4, %"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8features45kResamplingScrollEventsExperimentalPredictionE, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #13
  %58 = load i8, i8* %56, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %49
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  call void @_ZdlPv(i8* %62) #12
  br label %63

63:                                               ; preds = %49, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #13
  %64 = bitcast double* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #13
  store double 0xFFFFFFFFFFFFFFFF, double* %6, align 8
  %65 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  %69 = load i8*, i8** %51, align 8
  %70 = select i1 %68, i8* %69, i8* %50
  %71 = load i64, i64* %52, align 8
  %72 = zext i8 %67 to i64
  %73 = select i1 %68, i64 %71, i64 %72
  %74 = call zeroext i1 @_ZN4base14StringToDoubleENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPd(i8* %70, i64 %73, double* nonnull %6) #13
  %75 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8features24kPredictionTypeTimeBasedE, i64 0, i64 0)) #13
  %76 = load i8, i8* %24, align 1
  %77 = icmp slt i8 %76, 0
  %78 = load i64, i64* %9, align 8
  %79 = zext i8 %76 to i64
  %80 = select i1 %77, i64 %78, i64 %79
  %81 = icmp eq i64 %75, %80
  br i1 %81, label %82, label %85

82:                                               ; preds = %63
  %83 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %2, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8features24kPredictionTypeTimeBasedE, i64 0, i64 0), i64 %75) #13
  %84 = icmp eq i32 %83, 0
  br label %85

85:                                               ; preds = %63, %82
  %86 = phi i1 [ %84, %82 ], [ false, %63 ]
  br i1 %74, label %87, label %120

87:                                               ; preds = %85
  %88 = load double, double* %6, align 8
  br i1 %86, label %89, label %98

89:                                               ; preds = %87
  %90 = fmul double %88, 1.000000e+03
  %91 = fcmp ult double %90, 0xC3E0000000000000
  %92 = fcmp ugt double %90, 0x43DFFFFFFFFFFFFF
  %93 = fcmp ogt double %90, 0xC3E0000000000000
  %94 = select i1 %93, double %90, double 0xC3E0000000000000
  %95 = fptosi double %94 to i64
  %96 = select i1 %91, i64 0, i64 9223372036854775807
  %97 = select i1 %92, i64 %96, i64 %95
  br label %137

98:                                               ; preds = %87
  %99 = getelementptr inbounds %"class.ui::LinearResampling::LatencyCalculator", %"class.ui::LinearResampling::LatencyCalculator"* %0, i64 0, i32 1, i32 0
  %100 = load i64, i64* %99, align 8
  %101 = sitofp i64 %100 to double
  %102 = fmul double %88, %101
  %103 = fcmp oge double %102, 0xC3E0000000000000
  %104 = fcmp ole double %102, 0x43DFFFFFFFFFFFFF
  %105 = and i1 %104, %103
  %106 = fptosi double %102 to i64
  br i1 %105, label %114, label %107

107:                                              ; preds = %98
  %108 = lshr i64 %100, 63
  %109 = trunc i64 %108 to i32
  %110 = fcmp olt double %88, 0.000000e+00
  %111 = zext i1 %110 to i32
  %112 = icmp eq i32 %109, %111
  %113 = select i1 %112, i64 9223372036854775807, i64 -9223372036854775808
  br label %114

114:                                              ; preds = %98, %107
  %115 = phi i64 [ %106, %98 ], [ %113, %107 ]
  %116 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %115, i64 -5000) #13
  %117 = extractvalue { i64, i1 } %116, 1
  %118 = extractvalue { i64, i1 } %116, 0
  %119 = select i1 %117, i64 -9223372036854775808, i64 %118, !prof !2
  br label %137

120:                                              ; preds = %85
  br i1 %86, label %137, label %121

121:                                              ; preds = %120
  %122 = getelementptr inbounds %"class.ui::LinearResampling::LatencyCalculator", %"class.ui::LinearResampling::LatencyCalculator"* %0, i64 0, i32 1, i32 0
  %123 = load i64, i64* %122, align 8
  %124 = sitofp i64 %123 to double
  %125 = fmul double %124, 5.000000e-01
  %126 = fcmp oge double %125, 0xC3E0000000000000
  %127 = fcmp ole double %125, 0x43DFFFFFFFFFFFFF
  %128 = and i1 %127, %126
  %129 = fptosi double %125 to i64
  %130 = icmp sgt i64 %123, -1
  %131 = select i1 %130, i64 9223372036854775807, i64 -9223372036854775808
  %132 = select i1 %128, i64 %129, i64 %131
  %133 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %132, i64 -5000) #13
  %134 = extractvalue { i64, i1 } %133, 1
  %135 = extractvalue { i64, i1 } %133, 0
  %136 = select i1 %134, i64 -9223372036854775808, i64 %135, !prof !2
  br label %137

137:                                              ; preds = %121, %120, %89, %114
  %138 = phi i64 [ %97, %89 ], [ %119, %114 ], [ %136, %121 ], [ 3300, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #13
  %139 = load i8, i8* %66, align 1
  %140 = icmp slt i8 %139, 0
  br i1 %140, label %141, label %143

141:                                              ; preds = %137
  %142 = load i8*, i8** %51, align 8
  call void @_ZdlPv(i8* %142) #12
  br label %143

143:                                              ; preds = %137, %141
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #13
  br label %144

144:                                              ; preds = %46, %38, %143
  %145 = phi i64 [ %138, %143 ], [ -5000, %46 ], [ -5000, %38 ]
  %146 = load i8, i8* %24, align 1
  %147 = icmp slt i8 %146, 0
  br i1 %147, label %148, label %150

148:                                              ; preds = %144
  %149 = load i8*, i8** %8, align 8
  call void @_ZdlPv(i8* %149) #12
  br label %150

150:                                              ; preds = %144, %148
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #13
  ret i64 %145
}

declare void @_ZN4base32GetFieldTrialParamValueByFeatureERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.std::__1::basic_string"* sret, %"struct.base::Feature"* dereferenceable(16), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #6

declare zeroext i1 @_ZN4base14StringToDoubleENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPd(i8*, i64, double*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden double @_ZNK4base9TimeDeltadvES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = or i64 %6, %1
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %2
  %10 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 302, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0)) #13
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #13
  %12 = load i64, i64* %5, align 8
  br label %13

13:                                               ; preds = %2, %9
  %14 = phi i64 [ %6, %2 ], [ %12, %9 ]
  %15 = add i64 %14, -9223372036854775807
  %16 = add i64 %1, -9223372036854775807
  %17 = or i64 %15, %16
  %18 = icmp ult i64 %17, 2
  br i1 %18, label %19, label %24

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 303, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.4, i64 0, i64 0)) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  %22 = load i64, i64* %5, align 8
  %23 = add i64 %22, -9223372036854775807
  br label %24

24:                                               ; preds = %13, %19
  %25 = phi i64 [ %15, %13 ], [ %23, %19 ]
  %26 = phi i64 [ %14, %13 ], [ %22, %19 ]
  %27 = icmp ult i64 %25, 2
  %28 = icmp slt i64 %26, 0
  %29 = select i1 %28, double 0xFFF0000000000000, double 0x7FF0000000000000
  %30 = sitofp i64 %26 to double
  %31 = select i1 %27, double %29, double %30
  %32 = icmp ult i64 %16, 2
  %33 = icmp slt i64 %1, 0
  %34 = select i1 %33, double 0xFFF0000000000000, double 0x7FF0000000000000
  %35 = sitofp i64 %1 to double
  %36 = select i1 %32, double %34, double %35
  %37 = fdiv double %31, %36
  ret double %37
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #6

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

declare <2 x float> @_ZN3gfx13ScaleVector2dERKNS_9Vector2dFEff(%"class.gfx::Vector2dF"* dereferenceable(8), float, float) local_unnamed_addr #6

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIN2ui14InputPredictor9InputDataENS_9allocatorIS3_EEE20__add_front_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.ui::InputPredictor::InputData"*, align 8
  %3 = alloca %"struct.ui::InputPredictor::InputData"*, align 8
  %4 = alloca %"struct.ui::InputPredictor::InputData"*, align 8
  %5 = alloca %"struct.ui::InputPredictor::InputData"*, align 8
  %6 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast %"struct.ui::InputPredictor::InputData"*** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = bitcast %"struct.ui::InputPredictor::InputData"*** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %8, %11
  %13 = icmp eq i64 %12, 0
  %14 = shl i64 %12, 5
  %15 = add i64 %14, -1
  %16 = select i1 %13, i64 0, i64 %15
  %17 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, %18
  %22 = sub i64 %16, %21
  %23 = icmp ugt i64 %22, 255
  %24 = inttoptr i64 %11 to %"struct.ui::InputPredictor::InputData"**
  %25 = inttoptr i64 %8 to %"struct.ui::InputPredictor::InputData"**
  br i1 %23, label %26, label %34

26:                                               ; preds = %1
  %27 = add i64 %18, 256
  store i64 %27, i64* %17, align 8
  %28 = bitcast %"struct.ui::InputPredictor::InputData"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  store %"struct.ui::InputPredictor::InputData"* inttoptr (i64 -6148914691236517206 to %"struct.ui::InputPredictor::InputData"*), %"struct.ui::InputPredictor::InputData"** %2, align 8
  %29 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %30 = getelementptr %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %25, i64 -1
  %31 = bitcast %"struct.ui::InputPredictor::InputData"** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"struct.ui::InputPredictor::InputData"** %2 to i64*
  store i64 %32, i64* %33, align 8
  store %"struct.ui::InputPredictor::InputData"** %30, %"struct.ui::InputPredictor::InputData"*** %6, align 8
  call void @_ZNSt3__114__split_bufferIPN2ui14InputPredictor9InputDataENS_9allocatorIS4_EEE10push_frontERKS4_(%"struct.std::__1::__split_buffer"* %29, %"struct.ui::InputPredictor::InputData"** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  br label %282

34:                                               ; preds = %1
  %35 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %37 = bitcast %"struct.ui::InputPredictor::InputData"*** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.std::__1::deque"* %0 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %38, %40
  %42 = icmp ult i64 %12, %41
  br i1 %42, label %43, label %70

43:                                               ; preds = %34
  %44 = icmp eq i64 %11, %40
  br i1 %44, label %49, label %45

45:                                               ; preds = %43
  %46 = bitcast %"struct.ui::InputPredictor::InputData"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #13
  %47 = tail call i8* @_Znwm(i64 4096) #12
  %48 = bitcast %"struct.ui::InputPredictor::InputData"** %3 to i8**
  store i8* %47, i8** %48, align 8
  call void @_ZNSt3__114__split_bufferIPN2ui14InputPredictor9InputDataENS_9allocatorIS4_EEE10push_frontEOS4_(%"struct.std::__1::__split_buffer"* %35, %"struct.ui::InputPredictor::InputData"** nonnull dereferenceable(8) %3)
  br label %59

49:                                               ; preds = %43
  %50 = bitcast %"struct.ui::InputPredictor::InputData"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #13
  %51 = tail call i8* @_Znwm(i64 4096) #12
  %52 = bitcast %"struct.ui::InputPredictor::InputData"** %4 to i8**
  store i8* %51, i8** %52, align 8
  call void @_ZNSt3__114__split_bufferIPN2ui14InputPredictor9InputDataENS_9allocatorIS4_EEE9push_backEOS4_(%"struct.std::__1::__split_buffer"* %35, %"struct.ui::InputPredictor::InputData"** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #13
  %53 = bitcast %"struct.ui::InputPredictor::InputData"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #13
  store %"struct.ui::InputPredictor::InputData"* inttoptr (i64 -6148914691236517206 to %"struct.ui::InputPredictor::InputData"*), %"struct.ui::InputPredictor::InputData"** %5, align 8
  %54 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %6, align 8
  %55 = getelementptr %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %54, i64 -1
  %56 = bitcast %"struct.ui::InputPredictor::InputData"** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"struct.ui::InputPredictor::InputData"** %5 to i64*
  store i64 %57, i64* %58, align 8
  store %"struct.ui::InputPredictor::InputData"** %55, %"struct.ui::InputPredictor::InputData"*** %6, align 8
  call void @_ZNSt3__114__split_bufferIPN2ui14InputPredictor9InputDataENS_9allocatorIS4_EEE10push_frontERKS4_(%"struct.std::__1::__split_buffer"* %35, %"struct.ui::InputPredictor::InputData"** nonnull dereferenceable(8) %5)
  br label %59

59:                                               ; preds = %49, %45
  %60 = phi i8* [ %53, %49 ], [ %46, %45 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #13
  %61 = load i64, i64* %7, align 8
  %62 = load i64, i64* %10, align 8
  %63 = sub i64 %61, %62
  %64 = icmp eq i64 %63, 8
  br i1 %64, label %68, label %65

65:                                               ; preds = %59
  %66 = load i64, i64* %17, align 8
  %67 = add i64 %66, 256
  br label %68

68:                                               ; preds = %59, %65
  %69 = phi i64 [ %67, %65 ], [ 128, %59 ]
  store i64 %69, i64* %17, align 8
  br label %282

70:                                               ; preds = %34
  %71 = ashr exact i64 %41, 2
  %72 = icmp eq i64 %41, 0
  %73 = select i1 %72, i64 1, i64 %71
  %74 = icmp ugt i64 %73, 2305843009213693951
  br i1 %74, label %75, label %76

75:                                               ; preds = %70
  tail call void @abort() #14
  unreachable

76:                                               ; preds = %70
  %77 = shl i64 %73, 3
  %78 = tail call i8* @_Znwm(i64 %77) #12
  %79 = bitcast i8* %78 to %"struct.ui::InputPredictor::InputData"**
  %80 = ptrtoint i8* %78 to i64
  %81 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %79, i64 %73
  %82 = ptrtoint %"struct.ui::InputPredictor::InputData"** %81 to i64
  %83 = tail call i8* @_Znwm(i64 4096) #12
  %84 = ptrtoint i8* %83 to i64
  %85 = icmp eq %"struct.ui::InputPredictor::InputData"** %81, %79
  %86 = bitcast i8* %78 to i64*
  br i1 %85, label %87, label %107

87:                                               ; preds = %76
  %88 = sub i64 %82, %80
  %89 = ashr exact i64 %88, 2
  %90 = icmp eq i64 %88, 0
  %91 = select i1 %90, i64 1, i64 %89
  %92 = icmp ugt i64 %91, 2305843009213693951
  br i1 %92, label %93, label %94

93:                                               ; preds = %87
  tail call void @abort() #14
  unreachable

94:                                               ; preds = %87
  %95 = lshr i64 %91, 2
  %96 = shl i64 %91, 3
  %97 = tail call i8* @_Znwm(i64 %96) #12
  %98 = bitcast i8* %97 to %"struct.ui::InputPredictor::InputData"**
  %99 = ptrtoint i8* %97 to i64
  %100 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %98, i64 %95
  %101 = ptrtoint %"struct.ui::InputPredictor::InputData"** %100 to i64
  %102 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %98, i64 %91
  %103 = ptrtoint %"struct.ui::InputPredictor::InputData"** %102 to i64
  %104 = bitcast %"struct.ui::InputPredictor::InputData"** %100 to i64*
  tail call void @_ZdlPv(i8* nonnull %78) #12
  %105 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %9, align 8
  %106 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %6, align 8
  br label %107

107:                                              ; preds = %76, %94
  %108 = phi %"struct.ui::InputPredictor::InputData"** [ %106, %94 ], [ %25, %76 ]
  %109 = phi %"struct.ui::InputPredictor::InputData"** [ %105, %94 ], [ %24, %76 ]
  %110 = phi i64 [ %103, %94 ], [ %82, %76 ]
  %111 = phi i64 [ %101, %94 ], [ %80, %76 ]
  %112 = phi i64 [ %99, %94 ], [ %80, %76 ]
  %113 = phi i64* [ %104, %94 ], [ %86, %76 ]
  store i64 %84, i64* %113, align 8
  %114 = inttoptr i64 %111 to %"struct.ui::InputPredictor::InputData"**
  %115 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %114, i64 1
  %116 = ptrtoint %"struct.ui::InputPredictor::InputData"** %115 to i64
  %117 = icmp eq %"struct.ui::InputPredictor::InputData"** %109, %108
  br i1 %117, label %120, label %129

118:                                              ; preds = %261
  %119 = ptrtoint %"struct.ui::InputPredictor::InputData"** %270 to i64
  br label %120

120:                                              ; preds = %118, %107
  %121 = phi i64 [ %110, %107 ], [ %262, %118 ]
  %122 = phi i64 [ %111, %107 ], [ %264, %118 ]
  %123 = phi i64 [ %112, %107 ], [ %265, %118 ]
  %124 = phi i64 [ %116, %107 ], [ %119, %118 ]
  %125 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %126 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %125, align 8
  store i64 %123, i64* %39, align 8
  store i64 %122, i64* %10, align 8
  store i64 %124, i64* %7, align 8
  store i64 %121, i64* %37, align 8
  %127 = sub i64 %124, %122
  %128 = icmp eq i64 %127, 8
  br i1 %128, label %277, label %274

129:                                              ; preds = %107, %261
  %130 = phi i64 [ %271, %261 ], [ %116, %107 ]
  %131 = phi %"struct.ui::InputPredictor::InputData"** [ %270, %261 ], [ %115, %107 ]
  %132 = phi %"struct.ui::InputPredictor::InputData"** [ %269, %261 ], [ %109, %107 ]
  %133 = phi i64 [ %265, %261 ], [ %112, %107 ]
  %134 = phi i64 [ %264, %261 ], [ %111, %107 ]
  %135 = phi i64 [ %262, %261 ], [ %110, %107 ]
  %136 = inttoptr i64 %135 to %"struct.ui::InputPredictor::InputData"**
  %137 = icmp eq %"struct.ui::InputPredictor::InputData"** %131, %136
  %138 = bitcast %"struct.ui::InputPredictor::InputData"** %131 to i64*
  br i1 %137, label %139, label %261

139:                                              ; preds = %129
  %140 = inttoptr i64 %134 to %"struct.ui::InputPredictor::InputData"**
  %141 = inttoptr i64 %133 to %"struct.ui::InputPredictor::InputData"**
  %142 = icmp ugt %"struct.ui::InputPredictor::InputData"** %140, %141
  br i1 %142, label %143, label %159

143:                                              ; preds = %139
  %144 = sub i64 %134, %133
  %145 = ashr exact i64 %144, 3
  %146 = add nsw i64 %145, 1
  %147 = sdiv i64 %146, -2
  %148 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %140, i64 %147
  %149 = sub i64 %130, %134
  %150 = ashr exact i64 %149, 3
  %151 = icmp eq i64 %149, 0
  br i1 %151, label %155, label %152

152:                                              ; preds = %143
  %153 = bitcast %"struct.ui::InputPredictor::InputData"** %148 to i8*
  %154 = inttoptr i64 %134 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %153, i8* align 8 %154, i64 %149, i1 false) #13
  br label %155

155:                                              ; preds = %152, %143
  %156 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %148, i64 %150
  %157 = ptrtoint %"struct.ui::InputPredictor::InputData"** %148 to i64
  %158 = bitcast %"struct.ui::InputPredictor::InputData"** %156 to i64*
  br label %261

159:                                              ; preds = %139
  %160 = sub i64 %135, %133
  %161 = ashr exact i64 %160, 2
  %162 = icmp eq i64 %160, 0
  %163 = select i1 %162, i64 1, i64 %161
  %164 = icmp ugt i64 %163, 2305843009213693951
  br i1 %164, label %165, label %166

165:                                              ; preds = %159
  tail call void @abort() #14
  unreachable

166:                                              ; preds = %159
  %167 = lshr i64 %163, 2
  %168 = shl i64 %163, 3
  %169 = tail call i8* @_Znwm(i64 %168) #12
  %170 = bitcast i8* %169 to %"struct.ui::InputPredictor::InputData"**
  %171 = ptrtoint i8* %169 to i64
  %172 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %170, i64 %167
  %173 = ptrtoint %"struct.ui::InputPredictor::InputData"** %172 to i64
  %174 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %170, i64 %163
  %175 = ptrtoint %"struct.ui::InputPredictor::InputData"** %174 to i64
  %176 = sub i64 %130, %134
  %177 = ashr exact i64 %176, 3
  %178 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %172, i64 %177
  %179 = icmp eq i64 %176, 0
  br i1 %179, label %254, label %180

180:                                              ; preds = %166
  %181 = add i64 %176, -8
  %182 = lshr i64 %181, 3
  %183 = add nuw nsw i64 %182, 1
  %184 = and i64 %183, 7
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %201, label %186

186:                                              ; preds = %180, %186
  %187 = phi %"struct.ui::InputPredictor::InputData"** [ %194, %186 ], [ %172, %180 ]
  %188 = phi i64 [ %195, %186 ], [ %173, %180 ]
  %189 = phi %"struct.ui::InputPredictor::InputData"** [ %196, %186 ], [ %140, %180 ]
  %190 = phi i64 [ %197, %186 ], [ %184, %180 ]
  %191 = bitcast %"struct.ui::InputPredictor::InputData"** %189 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = inttoptr i64 %188 to i64*
  store i64 %192, i64* %193, align 8
  %194 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %187, i64 1
  %195 = ptrtoint %"struct.ui::InputPredictor::InputData"** %194 to i64
  %196 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %189, i64 1
  %197 = add i64 %190, -1
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %199, label %186, !llvm.loop !3

199:                                              ; preds = %186
  %200 = ptrtoint %"struct.ui::InputPredictor::InputData"** %194 to i64
  br label %201

201:                                              ; preds = %180, %199
  %202 = phi %"struct.ui::InputPredictor::InputData"** [ %172, %180 ], [ %194, %199 ]
  %203 = phi i64 [ %173, %180 ], [ %200, %199 ]
  %204 = phi %"struct.ui::InputPredictor::InputData"** [ %140, %180 ], [ %196, %199 ]
  %205 = icmp ult i64 %181, 56
  br i1 %205, label %252, label %206

206:                                              ; preds = %201, %206
  %207 = phi %"struct.ui::InputPredictor::InputData"** [ %248, %206 ], [ %202, %201 ]
  %208 = phi i64 [ %249, %206 ], [ %203, %201 ]
  %209 = phi %"struct.ui::InputPredictor::InputData"** [ %250, %206 ], [ %204, %201 ]
  %210 = bitcast %"struct.ui::InputPredictor::InputData"** %209 to i64*
  %211 = load i64, i64* %210, align 8
  %212 = inttoptr i64 %208 to i64*
  store i64 %211, i64* %212, align 8
  %213 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %207, i64 1
  %214 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %209, i64 1
  %215 = bitcast %"struct.ui::InputPredictor::InputData"** %214 to i64*
  %216 = load i64, i64* %215, align 8
  %217 = bitcast %"struct.ui::InputPredictor::InputData"** %213 to i64*
  store i64 %216, i64* %217, align 8
  %218 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %207, i64 2
  %219 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %209, i64 2
  %220 = bitcast %"struct.ui::InputPredictor::InputData"** %219 to i64*
  %221 = load i64, i64* %220, align 8
  %222 = bitcast %"struct.ui::InputPredictor::InputData"** %218 to i64*
  store i64 %221, i64* %222, align 8
  %223 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %207, i64 3
  %224 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %209, i64 3
  %225 = bitcast %"struct.ui::InputPredictor::InputData"** %224 to i64*
  %226 = load i64, i64* %225, align 8
  %227 = bitcast %"struct.ui::InputPredictor::InputData"** %223 to i64*
  store i64 %226, i64* %227, align 8
  %228 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %207, i64 4
  %229 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %209, i64 4
  %230 = bitcast %"struct.ui::InputPredictor::InputData"** %229 to i64*
  %231 = load i64, i64* %230, align 8
  %232 = bitcast %"struct.ui::InputPredictor::InputData"** %228 to i64*
  store i64 %231, i64* %232, align 8
  %233 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %207, i64 5
  %234 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %209, i64 5
  %235 = bitcast %"struct.ui::InputPredictor::InputData"** %234 to i64*
  %236 = load i64, i64* %235, align 8
  %237 = bitcast %"struct.ui::InputPredictor::InputData"** %233 to i64*
  store i64 %236, i64* %237, align 8
  %238 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %207, i64 6
  %239 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %209, i64 6
  %240 = bitcast %"struct.ui::InputPredictor::InputData"** %239 to i64*
  %241 = load i64, i64* %240, align 8
  %242 = bitcast %"struct.ui::InputPredictor::InputData"** %238 to i64*
  store i64 %241, i64* %242, align 8
  %243 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %207, i64 7
  %244 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %209, i64 7
  %245 = bitcast %"struct.ui::InputPredictor::InputData"** %244 to i64*
  %246 = load i64, i64* %245, align 8
  %247 = bitcast %"struct.ui::InputPredictor::InputData"** %243 to i64*
  store i64 %246, i64* %247, align 8
  %248 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %207, i64 8
  %249 = ptrtoint %"struct.ui::InputPredictor::InputData"** %248 to i64
  %250 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %209, i64 8
  %251 = icmp eq %"struct.ui::InputPredictor::InputData"** %178, %248
  br i1 %251, label %252, label %206

252:                                              ; preds = %206, %201
  %253 = ptrtoint %"struct.ui::InputPredictor::InputData"** %178 to i64
  br label %254

254:                                              ; preds = %252, %166
  %255 = phi i64 [ %253, %252 ], [ %173, %166 ]
  %256 = inttoptr i64 %255 to %"struct.ui::InputPredictor::InputData"**
  %257 = icmp eq i64 %133, 0
  %258 = inttoptr i64 %255 to i64*
  br i1 %257, label %261, label %259

259:                                              ; preds = %254
  %260 = inttoptr i64 %133 to i8*
  tail call void @_ZdlPv(i8* %260) #12
  br label %261

261:                                              ; preds = %129, %155, %254, %259
  %262 = phi i64 [ %135, %155 ], [ %175, %254 ], [ %175, %259 ], [ %135, %129 ]
  %263 = phi %"struct.ui::InputPredictor::InputData"** [ %156, %155 ], [ %256, %254 ], [ %256, %259 ], [ %131, %129 ]
  %264 = phi i64 [ %157, %155 ], [ %173, %254 ], [ %173, %259 ], [ %134, %129 ]
  %265 = phi i64 [ %133, %155 ], [ %171, %254 ], [ %171, %259 ], [ %133, %129 ]
  %266 = phi i64* [ %158, %155 ], [ %258, %254 ], [ %258, %259 ], [ %138, %129 ]
  %267 = bitcast %"struct.ui::InputPredictor::InputData"** %132 to i64*
  %268 = load i64, i64* %267, align 8
  store i64 %268, i64* %266, align 8
  %269 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %132, i64 1
  %270 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %263, i64 1
  %271 = ptrtoint %"struct.ui::InputPredictor::InputData"** %270 to i64
  %272 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %6, align 8
  %273 = icmp eq %"struct.ui::InputPredictor::InputData"** %269, %272
  br i1 %273, label %118, label %129

274:                                              ; preds = %120
  %275 = load i64, i64* %17, align 8
  %276 = add i64 %275, 256
  br label %277

277:                                              ; preds = %274, %120
  %278 = phi i64 [ %276, %274 ], [ 128, %120 ]
  store i64 %278, i64* %17, align 8
  %279 = icmp eq %"struct.ui::InputPredictor::InputData"** %126, null
  br i1 %279, label %282, label %280

280:                                              ; preds = %277
  %281 = bitcast %"struct.ui::InputPredictor::InputData"** %126 to i8*
  tail call void @_ZdlPv(i8* %281) #12
  br label %282

282:                                              ; preds = %280, %277, %68, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2ui14InputPredictor9InputDataENS_9allocatorIS4_EEE10push_frontERKS4_(%"struct.std::__1::__split_buffer"*, %"struct.ui::InputPredictor::InputData"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %5, align 8
  %7 = icmp eq %"struct.ui::InputPredictor::InputData"** %4, %6
  %8 = ptrtoint %"struct.ui::InputPredictor::InputData"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %12, align 8
  %14 = icmp ult %"struct.ui::InputPredictor::InputData"** %11, %13
  %15 = bitcast %"struct.ui::InputPredictor::InputData"*** %12 to i64*
  %16 = ptrtoint %"struct.ui::InputPredictor::InputData"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.ui::InputPredictor::InputData"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %11, i64 %22
  %24 = ptrtoint %"struct.ui::InputPredictor::InputData"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %23, i64 %29
  %31 = bitcast %"struct.ui::InputPredictor::InputData"** %30 to i8*
  %32 = bitcast %"struct.ui::InputPredictor::InputData"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #13
  %33 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"struct.ui::InputPredictor::InputData"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"struct.ui::InputPredictor::InputData"** [ %30, %27 ], [ %23, %17 ]
  store %"struct.ui::InputPredictor::InputData"** %36, %"struct.ui::InputPredictor::InputData"*** %3, align 8
  %37 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %35, i64 %22
  store %"struct.ui::InputPredictor::InputData"** %37, %"struct.ui::InputPredictor::InputData"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #14
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #12
  %51 = bitcast i8* %50 to %"struct.ui::InputPredictor::InputData"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %51, i64 %48
  %54 = ptrtoint %"struct.ui::InputPredictor::InputData"** %53 to i64
  %55 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %51, i64 %43
  %56 = ptrtoint %"struct.ui::InputPredictor::InputData"** %55 to i64
  %57 = ptrtoint %"struct.ui::InputPredictor::InputData"** %4 to i64
  %58 = ptrtoint %"struct.ui::InputPredictor::InputData"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"struct.ui::InputPredictor::InputData"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"struct.ui::InputPredictor::InputData"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"struct.ui::InputPredictor::InputData"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %70, i64 1
  %78 = ptrtoint %"struct.ui::InputPredictor::InputData"** %77 to i64
  %79 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !5

82:                                               ; preds = %69
  %83 = ptrtoint %"struct.ui::InputPredictor::InputData"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"struct.ui::InputPredictor::InputData"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"struct.ui::InputPredictor::InputData"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"struct.ui::InputPredictor::InputData"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"struct.ui::InputPredictor::InputData"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"struct.ui::InputPredictor::InputData"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %90, i64 1
  %97 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %92, i64 1
  %98 = bitcast %"struct.ui::InputPredictor::InputData"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.ui::InputPredictor::InputData"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %90, i64 2
  %102 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %92, i64 2
  %103 = bitcast %"struct.ui::InputPredictor::InputData"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"struct.ui::InputPredictor::InputData"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %90, i64 3
  %107 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %92, i64 3
  %108 = bitcast %"struct.ui::InputPredictor::InputData"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.ui::InputPredictor::InputData"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %90, i64 4
  %112 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %92, i64 4
  %113 = bitcast %"struct.ui::InputPredictor::InputData"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.ui::InputPredictor::InputData"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %90, i64 5
  %117 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %92, i64 5
  %118 = bitcast %"struct.ui::InputPredictor::InputData"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"struct.ui::InputPredictor::InputData"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %90, i64 6
  %122 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %92, i64 6
  %123 = bitcast %"struct.ui::InputPredictor::InputData"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.ui::InputPredictor::InputData"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %90, i64 7
  %127 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %92, i64 7
  %128 = bitcast %"struct.ui::InputPredictor::InputData"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.ui::InputPredictor::InputData"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %90, i64 8
  %132 = ptrtoint %"struct.ui::InputPredictor::InputData"** %131 to i64
  %133 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %92, i64 8
  %134 = icmp eq %"struct.ui::InputPredictor::InputData"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"struct.ui::InputPredictor::InputData"** %61 to i64
  %137 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"struct.ui::InputPredictor::InputData"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"struct.ui::InputPredictor::InputData"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"struct.ui::InputPredictor::InputData"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"struct.ui::InputPredictor::InputData"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"struct.ui::InputPredictor::InputData"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #12
  %146 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"struct.ui::InputPredictor::InputData"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %148, i64 -1
  %150 = bitcast %"struct.ui::InputPredictor::InputData"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.ui::InputPredictor::InputData"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %3, align 8
  %154 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %153, i64 -1
  store %"struct.ui::InputPredictor::InputData"** %154, %"struct.ui::InputPredictor::InputData"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2ui14InputPredictor9InputDataENS_9allocatorIS4_EEE10push_frontEOS4_(%"struct.std::__1::__split_buffer"*, %"struct.ui::InputPredictor::InputData"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %5, align 8
  %7 = icmp eq %"struct.ui::InputPredictor::InputData"** %4, %6
  %8 = ptrtoint %"struct.ui::InputPredictor::InputData"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %12, align 8
  %14 = icmp ult %"struct.ui::InputPredictor::InputData"** %11, %13
  %15 = bitcast %"struct.ui::InputPredictor::InputData"*** %12 to i64*
  %16 = ptrtoint %"struct.ui::InputPredictor::InputData"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.ui::InputPredictor::InputData"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %11, i64 %22
  %24 = ptrtoint %"struct.ui::InputPredictor::InputData"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %23, i64 %29
  %31 = bitcast %"struct.ui::InputPredictor::InputData"** %30 to i8*
  %32 = bitcast %"struct.ui::InputPredictor::InputData"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #13
  %33 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"struct.ui::InputPredictor::InputData"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"struct.ui::InputPredictor::InputData"** [ %30, %27 ], [ %23, %17 ]
  store %"struct.ui::InputPredictor::InputData"** %36, %"struct.ui::InputPredictor::InputData"*** %3, align 8
  %37 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %35, i64 %22
  store %"struct.ui::InputPredictor::InputData"** %37, %"struct.ui::InputPredictor::InputData"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #14
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #12
  %51 = bitcast i8* %50 to %"struct.ui::InputPredictor::InputData"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %51, i64 %48
  %54 = ptrtoint %"struct.ui::InputPredictor::InputData"** %53 to i64
  %55 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %51, i64 %43
  %56 = ptrtoint %"struct.ui::InputPredictor::InputData"** %55 to i64
  %57 = ptrtoint %"struct.ui::InputPredictor::InputData"** %4 to i64
  %58 = ptrtoint %"struct.ui::InputPredictor::InputData"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"struct.ui::InputPredictor::InputData"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"struct.ui::InputPredictor::InputData"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"struct.ui::InputPredictor::InputData"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %70, i64 1
  %78 = ptrtoint %"struct.ui::InputPredictor::InputData"** %77 to i64
  %79 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !6

82:                                               ; preds = %69
  %83 = ptrtoint %"struct.ui::InputPredictor::InputData"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"struct.ui::InputPredictor::InputData"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"struct.ui::InputPredictor::InputData"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"struct.ui::InputPredictor::InputData"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"struct.ui::InputPredictor::InputData"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"struct.ui::InputPredictor::InputData"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %90, i64 1
  %97 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %92, i64 1
  %98 = bitcast %"struct.ui::InputPredictor::InputData"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.ui::InputPredictor::InputData"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %90, i64 2
  %102 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %92, i64 2
  %103 = bitcast %"struct.ui::InputPredictor::InputData"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"struct.ui::InputPredictor::InputData"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %90, i64 3
  %107 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %92, i64 3
  %108 = bitcast %"struct.ui::InputPredictor::InputData"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.ui::InputPredictor::InputData"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %90, i64 4
  %112 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %92, i64 4
  %113 = bitcast %"struct.ui::InputPredictor::InputData"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.ui::InputPredictor::InputData"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %90, i64 5
  %117 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %92, i64 5
  %118 = bitcast %"struct.ui::InputPredictor::InputData"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"struct.ui::InputPredictor::InputData"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %90, i64 6
  %122 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %92, i64 6
  %123 = bitcast %"struct.ui::InputPredictor::InputData"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.ui::InputPredictor::InputData"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %90, i64 7
  %127 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %92, i64 7
  %128 = bitcast %"struct.ui::InputPredictor::InputData"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.ui::InputPredictor::InputData"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %90, i64 8
  %132 = ptrtoint %"struct.ui::InputPredictor::InputData"** %131 to i64
  %133 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %92, i64 8
  %134 = icmp eq %"struct.ui::InputPredictor::InputData"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"struct.ui::InputPredictor::InputData"** %61 to i64
  %137 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"struct.ui::InputPredictor::InputData"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"struct.ui::InputPredictor::InputData"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"struct.ui::InputPredictor::InputData"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"struct.ui::InputPredictor::InputData"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"struct.ui::InputPredictor::InputData"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #12
  %146 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"struct.ui::InputPredictor::InputData"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %148, i64 -1
  %150 = bitcast %"struct.ui::InputPredictor::InputData"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.ui::InputPredictor::InputData"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %3, align 8
  %154 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %153, i64 -1
  store %"struct.ui::InputPredictor::InputData"** %154, %"struct.ui::InputPredictor::InputData"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2ui14InputPredictor9InputDataENS_9allocatorIS4_EEE9push_backEOS4_(%"struct.std::__1::__split_buffer"*, %"struct.ui::InputPredictor::InputData"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %5, align 8
  %7 = icmp eq %"struct.ui::InputPredictor::InputData"** %4, %6
  %8 = ptrtoint %"struct.ui::InputPredictor::InputData"** %6 to i64
  %9 = bitcast %"struct.ui::InputPredictor::InputData"** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %13, align 8
  %15 = icmp ugt %"struct.ui::InputPredictor::InputData"** %12, %14
  %16 = ptrtoint %"struct.ui::InputPredictor::InputData"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"struct.ui::InputPredictor::InputData"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %12, i64 %22
  %24 = ptrtoint %"struct.ui::InputPredictor::InputData"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"struct.ui::InputPredictor::InputData"** %23 to i8*
  %30 = bitcast %"struct.ui::InputPredictor::InputData"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #13
  %31 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"struct.ui::InputPredictor::InputData"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %23, i64 %26
  store %"struct.ui::InputPredictor::InputData"** %34, %"struct.ui::InputPredictor::InputData"*** %3, align 8
  %35 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %33, i64 %22
  store %"struct.ui::InputPredictor::InputData"** %35, %"struct.ui::InputPredictor::InputData"*** %11, align 8
  %36 = bitcast %"struct.ui::InputPredictor::InputData"** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"struct.ui::InputPredictor::InputData"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #14
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #12
  %50 = bitcast i8* %49 to %"struct.ui::InputPredictor::InputData"**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %50, i64 %47
  %53 = ptrtoint %"struct.ui::InputPredictor::InputData"** %52 to i64
  %54 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %50, i64 %43
  %55 = ptrtoint %"struct.ui::InputPredictor::InputData"** %54 to i64
  %56 = ptrtoint %"struct.ui::InputPredictor::InputData"** %12 to i64
  %57 = ptrtoint %"struct.ui::InputPredictor::InputData"** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"struct.ui::InputPredictor::InputData"** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"struct.ui::InputPredictor::InputData"** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"struct.ui::InputPredictor::InputData"** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %69, i64 1
  %77 = ptrtoint %"struct.ui::InputPredictor::InputData"** %76 to i64
  %78 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !7

81:                                               ; preds = %68
  %82 = ptrtoint %"struct.ui::InputPredictor::InputData"** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"struct.ui::InputPredictor::InputData"** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"struct.ui::InputPredictor::InputData"** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"struct.ui::InputPredictor::InputData"** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"struct.ui::InputPredictor::InputData"** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"struct.ui::InputPredictor::InputData"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %89, i64 1
  %96 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %91, i64 1
  %97 = bitcast %"struct.ui::InputPredictor::InputData"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"struct.ui::InputPredictor::InputData"** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %89, i64 2
  %101 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %91, i64 2
  %102 = bitcast %"struct.ui::InputPredictor::InputData"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"struct.ui::InputPredictor::InputData"** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %89, i64 3
  %106 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %91, i64 3
  %107 = bitcast %"struct.ui::InputPredictor::InputData"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"struct.ui::InputPredictor::InputData"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %89, i64 4
  %111 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %91, i64 4
  %112 = bitcast %"struct.ui::InputPredictor::InputData"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"struct.ui::InputPredictor::InputData"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %89, i64 5
  %116 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %91, i64 5
  %117 = bitcast %"struct.ui::InputPredictor::InputData"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"struct.ui::InputPredictor::InputData"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %89, i64 6
  %121 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %91, i64 6
  %122 = bitcast %"struct.ui::InputPredictor::InputData"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"struct.ui::InputPredictor::InputData"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %89, i64 7
  %126 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %91, i64 7
  %127 = bitcast %"struct.ui::InputPredictor::InputData"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"struct.ui::InputPredictor::InputData"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %89, i64 8
  %131 = ptrtoint %"struct.ui::InputPredictor::InputData"** %130 to i64
  %132 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %91, i64 8
  %133 = icmp eq %"struct.ui::InputPredictor::InputData"** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"struct.ui::InputPredictor::InputData"** %60 to i64
  %136 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"struct.ui::InputPredictor::InputData"** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"struct.ui::InputPredictor::InputData"*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"struct.ui::InputPredictor::InputData"*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"struct.ui::InputPredictor::InputData"** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"struct.ui::InputPredictor::InputData"** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #12
  %146 = bitcast %"struct.ui::InputPredictor::InputData"*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"struct.ui::InputPredictor::InputData"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"struct.ui::InputPredictor::InputData"**, %"struct.ui::InputPredictor::InputData"*** %3, align 8
  %153 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"*, %"struct.ui::InputPredictor::InputData"** %152, i64 1
  store %"struct.ui::InputPredictor::InputData"** %153, %"struct.ui::InputPredictor::InputData"*** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #11

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { builtin nounwind }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
!5 = distinct !{!5, !4}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !4}
