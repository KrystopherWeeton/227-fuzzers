; ModuleID = '../../media/base/video_frame_pool.cc'
source_filename = "../../media/base/video_frame_pool.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.media::VideoFramePool::PoolImpl" = type { %"class.base::RefCountedThreadSafe", %"class.base::Lock", i8, %"class.base::circular_deque", %"class.base::TickClock"* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"struct.media::VideoFramePool::PoolImpl::FrameEntry"*, i64 }
%"struct.media::VideoFramePool::PoolImpl::FrameEntry" = type { %"class.base::TimeTicks", %class.scoped_refptr }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.scoped_refptr = type { %"class.media::VideoFrame"* }
%"class.media::VideoFrame" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.1", %"class.media::VideoFrameLayout", %class.scoped_refptr, i32, %"class.gfx::Rect", %"class.gfx::Size", [4 x i8*], [4 x %"struct.gpu::MailboxHolder"], %"class.base::OnceCallback", %"class.base::UnsafeSharedMemoryRegion"*, %"class.base::UnsafeSharedMemoryRegion", %"class.base::WritableSharedMemoryMapping", %"class.std::__1::unique_ptr", %class.scoped_refptr.8, %"class.std::__1::vector.9", %"class.base::TimeDelta", %"class.base::Lock", %"struct.gpu::SyncToken", %"struct.media::VideoFrameMetadata", i32, %"class.gfx::ColorSpace", %"class.absl::optional.52", [4 x i8], %"class.absl::optional.57", %"class.std::__1::unique_ptr.62" }
%"class.base::RefCountedThreadSafe.1" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.media::VideoFrameLayout" = type { i32, %"class.gfx::Size", %"class.std::__1::vector", i8, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.media::ColorPlaneLayout"*, %"struct.media::ColorPlaneLayout"*, %"class.std::__1::__compressed_pair" }
%"struct.media::ColorPlaneLayout" = type { i32, i64, i64 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.media::ColorPlaneLayout"* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"struct.gpu::MailboxHolder" = type <{ %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", i32, [4 x i8] }>
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.3 }
%class.scoped_refptr.3 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.4", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.4" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::UnsafeSharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::WritableSharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.gfx::GpuMemoryBuffer"* }
%"class.gfx::GpuMemoryBuffer" = type opaque
%class.scoped_refptr.8 = type { %"class.media::VideoFrame::DmabufHolder"* }
%"class.media::VideoFrame::DmabufHolder" = type opaque
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"class.base::OnceCallback.11"*, %"class.base::OnceCallback.11"*, %"class.std::__1::__compressed_pair.12" }
%"class.base::OnceCallback.11" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.base::OnceCallback.11"* }
%"class.base::TimeDelta" = type { i64 }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType", i64 }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"struct.media::VideoFrameMetadata" = type { i8, %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.17", %"class.absl::optional.22", %"class.absl::optional.27", i8, %"class.absl::optional.32", %"class.absl::optional.37", i8, %"class.absl::optional", i8, [3 x i8], %"class.absl::optional.42", i8, i8, i8, i8, i32, %"class.absl::optional.47", i8, %"class.absl::optional.37", %"class.absl::optional.37", %"class.absl::optional.37", %"class.absl::optional.37", %"class.absl::optional.37", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.32", %"class.absl::optional.37", %"class.absl::optional", %"class.absl::optional.32", %"class.absl::optional.17" }
%"class.absl::optional.22" = type { %"class.absl::optional_internal::optional_data.23" }
%"class.absl::optional_internal::optional_data.23" = type { %"class.absl::optional_internal::optional_data_base.24" }
%"class.absl::optional_internal::optional_data_base.24" = type { %"class.absl::optional_internal::optional_data_dtor_base.25" }
%"class.absl::optional_internal::optional_data_dtor_base.25" = type { i8, %union.anon.26 }
%union.anon.26 = type { %"class.gfx::Rect" }
%"class.absl::optional.27" = type { %"class.absl::optional_internal::optional_data.28" }
%"class.absl::optional_internal::optional_data.28" = type { %"class.absl::optional_internal::optional_data_base.29" }
%"class.absl::optional_internal::optional_data_base.29" = type { %"class.absl::optional_internal::optional_data_dtor_base.30" }
%"class.absl::optional_internal::optional_data_dtor_base.30" = type { i8, %union.anon.31 }
%union.anon.31 = type { i32 }
%"class.absl::optional.42" = type { %"class.absl::optional_internal::optional_data.43" }
%"class.absl::optional_internal::optional_data.43" = type { %"class.absl::optional_internal::optional_data_base.44" }
%"class.absl::optional_internal::optional_data_base.44" = type { %"class.absl::optional_internal::optional_data_dtor_base.45" }
%"class.absl::optional_internal::optional_data_dtor_base.45" = type { i8, [3 x i8], %union.anon.46 }
%union.anon.46 = type { %"struct.media::VideoTransformation" }
%"struct.media::VideoTransformation" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.47" = type { %"class.absl::optional_internal::optional_data.48" }
%"class.absl::optional_internal::optional_data.48" = type { %"class.absl::optional_internal::optional_data_base.49" }
%"class.absl::optional_internal::optional_data_base.49" = type { %"class.absl::optional_internal::optional_data_dtor_base.50" }
%"class.absl::optional_internal::optional_data_dtor_base.50" = type { i8, %union.anon.51 }
%union.anon.51 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.37" = type { %"class.absl::optional_internal::optional_data.38" }
%"class.absl::optional_internal::optional_data.38" = type { %"class.absl::optional_internal::optional_data_base.39" }
%"class.absl::optional_internal::optional_data_base.39" = type { %"class.absl::optional_internal::optional_data_dtor_base.40" }
%"class.absl::optional_internal::optional_data_dtor_base.40" = type { i8, %union.anon.41 }
%union.anon.41 = type { double }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::TimeTicks" }
%"class.absl::optional.32" = type { %"class.absl::optional_internal::optional_data.33" }
%"class.absl::optional_internal::optional_data.33" = type { %"class.absl::optional_internal::optional_data_base.34" }
%"class.absl::optional_internal::optional_data_base.34" = type { %"class.absl::optional_internal::optional_data_dtor_base.35" }
%"class.absl::optional_internal::optional_data_dtor_base.35" = type { i8, %union.anon.36 }
%union.anon.36 = type { %"class.base::TimeDelta" }
%"class.absl::optional.17" = type { %"class.absl::optional_internal::optional_data.18" }
%"class.absl::optional_internal::optional_data.18" = type { %"class.absl::optional_internal::optional_data_base.19" }
%"class.absl::optional_internal::optional_data_base.19" = type { %"class.absl::optional_internal::optional_data_dtor_base.20" }
%"class.absl::optional_internal::optional_data_dtor_base.20" = type { i8, %union.anon.21 }
%union.anon.21 = type { i32 }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.52" = type { %"class.absl::optional_internal::optional_data.53" }
%"class.absl::optional_internal::optional_data.53" = type { %"class.absl::optional_internal::optional_data_base.54" }
%"class.absl::optional_internal::optional_data_base.54" = type { %"class.absl::optional_internal::optional_data_dtor_base.55" }
%"class.absl::optional_internal::optional_data_dtor_base.55" = type { i8, %union.anon.56 }
%union.anon.56 = type { %"struct.gfx::HDRMetadata" }
%"struct.gfx::HDRMetadata" = type { %"struct.gfx::MasteringMetadata", i32, i32 }
%"struct.gfx::MasteringMetadata" = type { %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", float, float }
%"class.gfx::PointF" = type { float, float }
%"class.absl::optional.57" = type { %"class.absl::optional_internal::optional_data.58" }
%"class.absl::optional_internal::optional_data.58" = type { %"class.absl::optional_internal::optional_data_base.59" }
%"class.absl::optional_internal::optional_data_base.59" = type { %"class.absl::optional_internal::optional_data_dtor_base.60" }
%"class.absl::optional_internal::optional_data_dtor_base.60" = type { i8, [7 x i8], %union.anon.61 }
%union.anon.61 = type { %"struct.gpu::VulkanYCbCrInfo" }
%"struct.gpu::VulkanYCbCrInfo" = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.media::VideoFramePool" = type { %class.scoped_refptr.72 }
%class.scoped_refptr.72 = type { %"class.media::VideoFramePool::PoolImpl"* }
%"class.base::DefaultTickClock" = type { %"class.base::TickClock" }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.68 }
%union.anon.68 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN4base14circular_dequeIN5media14VideoFramePool8PoolImpl10FrameEntryEE5eraseENS_8internal29circular_deque_const_iteratorIS4_EES8_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN4base14circular_dequeIN5media14VideoFramePool8PoolImpl10FrameEntryEE13DestructRangeEmm = comdat any

$_ZN4base8internal12VectorBufferIN5media14VideoFramePool8PoolImpl10FrameEntryEE13DestructRangeIS5_Li0EEEvPS5_S8_ = comdat any

$_ZN4base8internal12VectorBufferIN5media14VideoFramePool8PoolImpl10FrameEntryEEixEm = comdat any

$_ZZN7logging15CheckOpValueStrIPN5media14VideoFramePool8PoolImpl10FrameEntryEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS6_14remove_pointerIS8_E4typeEEE5valueEPcE4typeESA_ENUlRNS6_13basic_ostreamIcNS6_11char_traitsIcEEEEPKvE_8__invokeESL_SN_ = comdat any

$_ZNK4base8internal12VectorBufferIN5media14VideoFramePool8PoolImpl10FrameEntryEEixEm = comdat any

$_ZN4base14circular_dequeIN5media14VideoFramePool8PoolImpl10FrameEntryEE25ShrinkCapacityIfNecessaryEv = comdat any

$_ZN4base14circular_dequeIN5media14VideoFramePool8PoolImpl10FrameEntryEE10MoveBufferERNS_8internal12VectorBufferIS4_EEmmPS8_PmSB_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5media14VideoFramePool8PoolImplEFv13scoped_refptrINS3_10VideoFrameEEEJS6_IS5_ES8_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5media14VideoFramePool8PoolImplEFv13scoped_refptrINS2_10VideoFrameEEEJS5_IS4_ES7_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base14circular_dequeIN5media14VideoFramePool8PoolImpl10FrameEntryEE25ExpandCapacityIfNecessaryEm = comdat any

@.str = private unnamed_addr constant [37 x i8] c"../../media/base/video_frame_pool.cc\00", align 1
@.str.1 = private unnamed_addr constant [31 x i8] c"Failed to create a video frame\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.3 = private unnamed_addr constant [13 x i8] c"begin <= end\00", align 1
@.str.4 = private unnamed_addr constant [38 x i8] c"../../base/containers/vector_buffer.h\00", align 1
@.str.5 = private unnamed_addr constant [15 x i8] c"i <= capacity_\00", align 1
@.str.6 = private unnamed_addr constant [41 x i8] c"!RangesOverlap(from_begin, from_end, to)\00", align 1

@_ZN5media14VideoFramePool8PoolImplC1Ev = hidden unnamed_addr alias void (%"class.media::VideoFramePool::PoolImpl"*), void (%"class.media::VideoFramePool::PoolImpl"*)* @_ZN5media14VideoFramePool8PoolImplC2Ev
@_ZN5media14VideoFramePool8PoolImplD1Ev = hidden unnamed_addr alias void (%"class.media::VideoFramePool::PoolImpl"*), void (%"class.media::VideoFramePool::PoolImpl"*)* @_ZN5media14VideoFramePool8PoolImplD2Ev
@_ZN5media14VideoFramePoolC1Ev = hidden unnamed_addr alias void (%"class.media::VideoFramePool"*), void (%"class.media::VideoFramePool"*)* @_ZN5media14VideoFramePoolC2Ev
@_ZN5media14VideoFramePoolD1Ev = hidden unnamed_addr alias void (%"class.media::VideoFramePool"*), void (%"class.media::VideoFramePool"*)* @_ZN5media14VideoFramePoolD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media14VideoFramePool8PoolImplC2Ev(%"class.media::VideoFramePool::PoolImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::VideoFramePool::PoolImpl", %"class.media::VideoFramePool::PoolImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %"class.media::VideoFramePool::PoolImpl", %"class.media::VideoFramePool::PoolImpl"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %3) #11
  %4 = getelementptr inbounds %"class.media::VideoFramePool::PoolImpl", %"class.media::VideoFramePool::PoolImpl"* %0, i64 0, i32 2
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.media::VideoFramePool::PoolImpl", %"class.media::VideoFramePool::PoolImpl"* %0, i64 0, i32 3
  %6 = bitcast %"class.base::circular_deque"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 32, i1 false) #11
  %7 = getelementptr inbounds %"class.media::VideoFramePool::PoolImpl", %"class.media::VideoFramePool::PoolImpl"* %0, i64 0, i32 4
  %8 = tail call %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() #11
  %9 = getelementptr inbounds %"class.base::DefaultTickClock", %"class.base::DefaultTickClock"* %8, i64 0, i32 0
  store %"class.base::TickClock"* %9, %"class.base::TickClock"** %7, align 8
  ret void
}

declare %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media14VideoFramePool8PoolImplD2Ev(%"class.media::VideoFramePool::PoolImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::VideoFramePool::PoolImpl", %"class.media::VideoFramePool::PoolImpl"* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.media::VideoFramePool::PoolImpl", %"class.media::VideoFramePool::PoolImpl"* %0, i64 0, i32 3, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.media::VideoFramePool::PoolImpl", %"class.media::VideoFramePool::PoolImpl"* %0, i64 0, i32 3, i32 2
  %6 = load i64, i64* %5, align 8
  tail call void @_ZN4base14circular_dequeIN5media14VideoFramePool8PoolImpl10FrameEntryEE13DestructRangeEmm(%"class.base::circular_deque"* %2, i64 %4, i64 %6) #11
  %7 = bitcast %"class.base::circular_deque"* %2 to i8**
  %8 = load i8*, i8** %7, align 8
  tail call void @free(i8* %8) #11
  %9 = getelementptr inbounds %"class.media::VideoFramePool::PoolImpl", %"class.media::VideoFramePool::PoolImpl"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %9) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.media::VideoFrame"* @_ZN5media14VideoFramePool8PoolImpl11CreateFrameENS_16VideoPixelFormatERKN3gfx4SizeERKNS3_4RectES6_N4base9TimeDeltaE(%"class.media::VideoFramePool::PoolImpl"*, i32, %"class.gfx::Size"* dereferenceable(8), %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Size"* dereferenceable(8), i64) local_unnamed_addr #0 align 2 {
  %7 = alloca %"struct.media::VideoFrameMetadata", align 8
  %8 = alloca %"class.logging::LogMessage", align 8
  %9 = alloca %"class.base::OnceCallback.11", align 8
  %10 = getelementptr inbounds %"class.media::VideoFramePool::PoolImpl", %"class.media::VideoFramePool::PoolImpl"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %10, i64 0, i32 0, i32 0
  %12 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %11) #11
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %16, label %14, !prof !2

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %10, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %15) #11
  br label %16

16:                                               ; preds = %6, %14
  %17 = getelementptr inbounds %"class.media::VideoFramePool::PoolImpl", %"class.media::VideoFramePool::PoolImpl"* %0, i64 0, i32 3
  %18 = getelementptr inbounds %"class.media::VideoFramePool::PoolImpl", %"class.media::VideoFramePool::PoolImpl"* %0, i64 0, i32 3, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.media::VideoFramePool::PoolImpl", %"class.media::VideoFramePool::PoolImpl"* %0, i64 0, i32 3, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %19, %21
  br i1 %22, label %93, label %23

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.media::VideoFramePool::PoolImpl", %"class.media::VideoFramePool::PoolImpl"* %0, i64 0, i32 3, i32 0, i32 1
  %25 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %17, i64 0, i32 0
  br label %26

26:                                               ; preds = %23, %85
  %27 = phi i64 [ %21, %23 ], [ %87, %85 ]
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %26
  %30 = load i64, i64* %24, align 8
  br label %31

31:                                               ; preds = %26, %29
  %32 = phi i64 [ %30, %29 ], [ %27, %26 ]
  %33 = add i64 %32, -1
  %34 = tail call dereferenceable(16) %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* @_ZNK4base8internal12VectorBufferIN5media14VideoFramePool8PoolImpl10FrameEntryEEixEm(%"class.base::internal::VectorBuffer"* %25, i64 %33) #11
  %35 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %34, i64 0, i32 1
  %36 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %35, i64 0, i32 0
  %37 = bitcast %class.scoped_refptr* %35 to i64*
  %38 = load i64, i64* %37, align 8
  store %"class.media::VideoFrame"* null, %"class.media::VideoFrame"** %36, align 8
  %39 = load i64, i64* %20, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %43

41:                                               ; preds = %31
  %42 = load i64, i64* %24, align 8
  br label %43

43:                                               ; preds = %31, %41
  %44 = phi i64 [ %42, %41 ], [ %39, %31 ]
  %45 = add i64 %44, -1
  store i64 %45, i64* %20, align 8
  %46 = tail call dereferenceable(16) %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* @_ZN4base8internal12VectorBufferIN5media14VideoFramePool8PoolImpl10FrameEntryEEixEm(%"class.base::internal::VectorBuffer"* %25, i64 %45) #11
  %47 = load i64, i64* %20, align 8
  %48 = add i64 %47, 1
  %49 = tail call dereferenceable(16) %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* @_ZN4base8internal12VectorBufferIN5media14VideoFramePool8PoolImpl10FrameEntryEEixEm(%"class.base::internal::VectorBuffer"* %25, i64 %48) #11
  tail call void @_ZN4base8internal12VectorBufferIN5media14VideoFramePool8PoolImpl10FrameEntryEE13DestructRangeIS5_Li0EEEvPS5_S8_(%"class.base::internal::VectorBuffer"* %25, %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %46, %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %49) #11
  tail call void @_ZN4base14circular_dequeIN5media14VideoFramePool8PoolImpl10FrameEntryEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"* %17) #11
  %50 = inttoptr i64 %38 to %"class.media::VideoFrame"*
  %51 = tail call zeroext i1 @_ZNK5media10VideoFrame16IsSameAllocationENS_16VideoPixelFormatERKN3gfx4SizeERKNS2_4RectES5_(%"class.media::VideoFrame"* %50, i32 %1, %"class.gfx::Size"* dereferenceable(8) %2, %"class.gfx::Rect"* dereferenceable(16) %3, %"class.gfx::Size"* dereferenceable(8) %4) #11
  %52 = icmp eq i64 %38, 0
  br i1 %51, label %53, label %72

53:                                               ; preds = %43
  %54 = inttoptr i64 %38 to %"class.media::VideoFrame"*
  br i1 %52, label %89, label %55

55:                                               ; preds = %53
  %56 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %54, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw add i32* %56, i32 1 monotonic
  %58 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %54, i64 0, i32 16, i32 0
  store i64 %5, i64* %58, align 8
  %59 = getelementptr inbounds %"struct.media::VideoFrameMetadata", %"struct.media::VideoFrameMetadata"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 376, i8* nonnull %59) #11
  call void @_ZN5media18VideoFrameMetadataC1Ev(%"struct.media::VideoFrameMetadata"* nonnull %7) #11
  %60 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %54, i64 0, i32 19, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* nonnull align 8 %59, i64 376, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 376, i8* nonnull %59) #11
  %61 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %54, i64 0, i32 1
  %62 = getelementptr inbounds %"class.base::RefCountedThreadSafe.1", %"class.base::RefCountedThreadSafe.1"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw sub i32* %62, i32 1 acq_rel
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %65, label %105

65:                                               ; preds = %55
  %66 = getelementptr inbounds %"class.base::RefCountedThreadSafe.1", %"class.base::RefCountedThreadSafe.1"* %61, i64 -2
  %67 = bitcast %"class.base::RefCountedThreadSafe.1"* %66 to %"class.media::VideoFrame"*
  %68 = bitcast %"class.base::RefCountedThreadSafe.1"* %66 to void (%"class.media::VideoFrame"*)***
  %69 = load void (%"class.media::VideoFrame"*)**, void (%"class.media::VideoFrame"*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %69, i64 1
  %71 = load void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %70, align 8
  call void %71(%"class.media::VideoFrame"* nonnull %67) #11
  br label %105

72:                                               ; preds = %43
  br i1 %52, label %85, label %73

73:                                               ; preds = %72
  %74 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %50, i64 0, i32 1
  %75 = getelementptr inbounds %"class.base::RefCountedThreadSafe.1", %"class.base::RefCountedThreadSafe.1"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = atomicrmw sub i32* %75, i32 1 acq_rel
  %77 = icmp eq i32 %76, 1
  br i1 %77, label %78, label %85

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.base::RefCountedThreadSafe.1", %"class.base::RefCountedThreadSafe.1"* %74, i64 -2
  %80 = bitcast %"class.base::RefCountedThreadSafe.1"* %79 to %"class.media::VideoFrame"*
  %81 = bitcast %"class.base::RefCountedThreadSafe.1"* %79 to void (%"class.media::VideoFrame"*)***
  %82 = load void (%"class.media::VideoFrame"*)**, void (%"class.media::VideoFrame"*)*** %81, align 8
  %83 = getelementptr inbounds void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %82, i64 1
  %84 = load void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %83, align 8
  tail call void %84(%"class.media::VideoFrame"* nonnull %80) #11
  br label %85

85:                                               ; preds = %72, %73, %78
  %86 = load i64, i64* %18, align 8
  %87 = load i64, i64* %20, align 8
  %88 = icmp eq i64 %86, %87
  br i1 %88, label %93, label %26

89:                                               ; preds = %53
  %90 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %54, i64 0, i32 16, i32 0
  store i64 %5, i64* %90, align 8
  %91 = getelementptr inbounds %"struct.media::VideoFrameMetadata", %"struct.media::VideoFrameMetadata"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 376, i8* nonnull %91) #11
  call void @_ZN5media18VideoFrameMetadataC1Ev(%"struct.media::VideoFrameMetadata"* nonnull %7) #11
  %92 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %54, i64 0, i32 19, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* nonnull align 8 %91, i64 376, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 376, i8* nonnull %91) #11
  br label %93

93:                                               ; preds = %85, %89, %16
  %94 = call %"class.media::VideoFrame"* @_ZN5media10VideoFrame26CreateZeroInitializedFrameENS_16VideoPixelFormatERKN3gfx4SizeERKNS2_4RectES5_N4base9TimeDeltaE(i32 %1, %"class.gfx::Size"* dereferenceable(8) %2, %"class.gfx::Rect"* dereferenceable(16) %3, %"class.gfx::Size"* dereferenceable(8) %4, i64 %5) #11
  %95 = icmp eq %"class.media::VideoFrame"* %94, null
  br i1 %95, label %96, label %103

96:                                               ; preds = %93
  %97 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #11
  br i1 %97, label %98, label %130

98:                                               ; preds = %96
  %99 = bitcast %"class.logging::LogMessage"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %99) #11
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %8, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i64 0, i64 0), i32 106, i32 2) #11
  %100 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %8, i64 0, i32 2
  %101 = bitcast %"class.std::__1::basic_ostringstream"* %100 to %"class.std::__1::basic_ostream"*
  %102 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %101, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0), i64 30) #11
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %99) #11
  br label %130

103:                                              ; preds = %93
  %104 = ptrtoint %"class.media::VideoFrame"* %94 to i64
  br label %105

105:                                              ; preds = %103, %65, %55
  %106 = phi i64 [ %104, %103 ], [ %38, %55 ], [ %38, %65 ]
  %107 = phi %"class.media::VideoFrame"* [ %94, %103 ], [ %54, %55 ], [ %54, %65 ]
  %108 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %107, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = atomicrmw add i32* %108, i32 1 monotonic
  %110 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %107, i64 0, i32 2, i32 0
  %111 = load i32, i32* %110, align 8
  %112 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %107, i64 0, i32 5
  %113 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %107, i64 0, i32 6
  %114 = call %"class.media::VideoFrame"* @_ZN5media10VideoFrame14WrapVideoFrameE13scoped_refptrIS0_ENS_16VideoPixelFormatERKN3gfx4RectERKNS4_4SizeE(%"class.media::VideoFrame"* %107, i32 %111, %"class.gfx::Rect"* dereferenceable(16) %112, %"class.gfx::Size"* dereferenceable(8) %113) #11
  %115 = call i8* @_Znwm(i64 64) #12, !noalias !3
  %116 = bitcast i8* %115 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %116, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5media14VideoFramePool8PoolImplEFv13scoped_refptrINS3_10VideoFrameEEEJS6_IS5_ES8_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5media14VideoFramePool8PoolImplEFv13scoped_refptrINS2_10VideoFrameEEEJS5_IS4_ES7_EE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !3
  %117 = getelementptr inbounds i8, i8* %115, i64 32
  %118 = bitcast i8* %117 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.media::VideoFramePool::PoolImpl"*, %"class.media::VideoFrame"*)* @_ZN5media14VideoFramePool8PoolImpl13FrameReleasedE13scoped_refptrINS_10VideoFrameEE to i64), i64 0>, <2 x i64>* %118, align 8, !noalias !3
  %119 = getelementptr inbounds i8, i8* %115, i64 48
  %120 = bitcast i8* %119 to %"class.media::VideoFramePool::PoolImpl"**
  store %"class.media::VideoFramePool::PoolImpl"* %0, %"class.media::VideoFramePool::PoolImpl"** %120, align 8, !noalias !3
  %121 = icmp eq %"class.media::VideoFramePool::PoolImpl"* %0, null
  br i1 %121, label %125, label %122

122:                                              ; preds = %105
  %123 = getelementptr inbounds %"class.media::VideoFramePool::PoolImpl", %"class.media::VideoFramePool::PoolImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = atomicrmw add i32* %123, i32 1 monotonic, !noalias !3
  br label %125

125:                                              ; preds = %105, %122
  %126 = getelementptr inbounds i8, i8* %115, i64 56
  %127 = bitcast i8* %126 to i64*
  store i64 %106, i64* %127, align 8, !noalias !3
  %128 = bitcast %"class.base::OnceCallback.11"* %9 to i8**
  store i8* %115, i8** %128, align 8, !alias.scope !3
  call void @_ZN5media10VideoFrame22AddDestructionObserverEN4base12OnceCallbackIFvvEEE(%"class.media::VideoFrame"* %114, %"class.base::OnceCallback.11"* nonnull %9) #11
  %129 = getelementptr inbounds %"class.base::OnceCallback.11", %"class.base::OnceCallback.11"* %9, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %129) #11
  br label %130

130:                                              ; preds = %96, %98, %125
  %131 = phi %"class.media::VideoFrame"* [ %114, %125 ], [ null, %98 ], [ null, %96 ]
  %132 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %11) #11
  ret %"class.media::VideoFrame"* %131
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZNK5media10VideoFrame16IsSameAllocationENS_16VideoPixelFormatERKN3gfx4SizeERKNS2_4RectES5_(%"class.media::VideoFrame"*, i32, %"class.gfx::Size"* dereferenceable(8), %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Size"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.media::VideoFrame"* @_ZN5media10VideoFrame26CreateZeroInitializedFrameENS_16VideoPixelFormatERKN3gfx4SizeERKNS2_4RectES5_N4base9TimeDeltaE(i32, %"class.gfx::Size"* dereferenceable(8), %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Size"* dereferenceable(8), i64) local_unnamed_addr #1

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #1

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #3

declare %"class.media::VideoFrame"* @_ZN5media10VideoFrame14WrapVideoFrameE13scoped_refptrIS0_ENS_16VideoPixelFormatERKN3gfx4RectERKNS4_4SizeE(%"class.media::VideoFrame"*, i32, %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Size"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5media10VideoFrame22AddDestructionObserverEN4base12OnceCallbackIFvvEEE(%"class.media::VideoFrame"*, %"class.base::OnceCallback.11"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media14VideoFramePool8PoolImpl13FrameReleasedE13scoped_refptrINS_10VideoFrameEE(%"class.media::VideoFramePool::PoolImpl"*, %"class.media::VideoFrame"*) #0 align 2 {
  %3 = ptrtoint %"class.media::VideoFrame"* %1 to i64
  %4 = getelementptr inbounds %"class.media::VideoFramePool::PoolImpl", %"class.media::VideoFramePool::PoolImpl"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %4, i64 0, i32 0, i32 0
  %6 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %5) #11
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8, !prof !2

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %4, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %9) #11
  br label %10

10:                                               ; preds = %2, %8
  %11 = getelementptr inbounds %"class.media::VideoFramePool::PoolImpl", %"class.media::VideoFramePool::PoolImpl"* %0, i64 0, i32 2
  %12 = load i8, i8* %11, align 8, !range !8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %73

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.media::VideoFramePool::PoolImpl", %"class.media::VideoFramePool::PoolImpl"* %0, i64 0, i32 4
  %16 = load %"class.base::TickClock"*, %"class.base::TickClock"** %15, align 8
  %17 = bitcast %"class.base::TickClock"* %16 to i64 (%"class.base::TickClock"*)***
  %18 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %17, align 8
  %19 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %18, i64 2
  %20 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %19, align 8
  %21 = tail call i64 %20(%"class.base::TickClock"* %16) #11
  %22 = getelementptr inbounds %"class.media::VideoFramePool::PoolImpl", %"class.media::VideoFramePool::PoolImpl"* %0, i64 0, i32 3
  tail call void @_ZN4base14circular_dequeIN5media14VideoFramePool8PoolImpl10FrameEntryEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %22, i64 1) #11
  %23 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %22, i64 0, i32 0
  %24 = getelementptr inbounds %"class.media::VideoFramePool::PoolImpl", %"class.media::VideoFramePool::PoolImpl"* %0, i64 0, i32 3, i32 2
  %25 = load i64, i64* %24, align 8
  %26 = tail call dereferenceable(16) %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* @_ZN4base8internal12VectorBufferIN5media14VideoFramePool8PoolImpl10FrameEntryEEixEm(%"class.base::internal::VectorBuffer"* %23, i64 %25) #11
  %27 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %26, i64 0, i32 0, i32 0, i32 0
  store i64 %21, i64* %27, align 8
  %28 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %26, i64 0, i32 1
  %29 = bitcast %class.scoped_refptr* %28 to i64*
  store i64 %3, i64* %29, align 8
  %30 = load i64, i64* %24, align 8
  %31 = getelementptr inbounds %"class.media::VideoFramePool::PoolImpl", %"class.media::VideoFramePool::PoolImpl"* %0, i64 0, i32 3, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = add i64 %32, -1
  %34 = icmp eq i64 %30, %33
  br i1 %34, label %35, label %36

35:                                               ; preds = %14
  store i64 0, i64* %24, align 8
  br label %39

36:                                               ; preds = %14
  %37 = add i64 %30, 1
  store i64 %37, i64* %24, align 8
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36, %35
  br label %40

40:                                               ; preds = %39, %36
  %41 = phi i64 [ %33, %39 ], [ %30, %36 ]
  %42 = tail call dereferenceable(16) %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* @_ZNK4base8internal12VectorBufferIN5media14VideoFramePool8PoolImpl10FrameEntryEEixEm(%"class.base::internal::VectorBuffer"* %23, i64 %41) #11
  %43 = getelementptr inbounds %"class.media::VideoFramePool::PoolImpl", %"class.media::VideoFramePool::PoolImpl"* %0, i64 0, i32 3, i32 1
  br label %44

44:                                               ; preds = %44, %40
  %45 = phi i64 [ %46, %44 ], [ -1, %40 ]
  %46 = add i64 %45, 1
  %47 = load i64, i64* %31, align 8
  %48 = load i64, i64* %43, align 8
  %49 = sub i64 %47, %48
  %50 = load i64, i64* %24, align 8
  %51 = icmp ule i64 %48, %50
  %52 = icmp ult i64 %46, %49
  %53 = or i1 %51, %52
  %54 = sub i64 0, %49
  %55 = select i1 %53, i64 %48, i64 %54
  %56 = add i64 %46, %55
  %57 = tail call dereferenceable(16) %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* @_ZNK4base8internal12VectorBufferIN5media14VideoFramePool8PoolImpl10FrameEntryEEixEm(%"class.base::internal::VectorBuffer"* %23, i64 %56) #11
  %58 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load i64, i64* %58, align 8
  %60 = sub nsw i64 %21, %59
  %61 = icmp sgt i64 %60, 10000000
  br i1 %61, label %44, label %62

62:                                               ; preds = %44
  %63 = trunc i64 %46 to i32
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %71, label %65

65:                                               ; preds = %62
  %66 = load i64, i64* %43, align 8
  %67 = load i64, i64* %31, align 8
  %68 = add i64 %66, %46
  %69 = urem i64 %68, %67
  %70 = tail call { %"class.base::circular_deque"*, i64 } @_ZN4base14circular_dequeIN5media14VideoFramePool8PoolImpl10FrameEntryEE5eraseENS_8internal29circular_deque_const_iteratorIS4_EES8_(%"class.base::circular_deque"* %22, %"class.base::circular_deque"* %22, i64 %66, %"class.base::circular_deque"* %22, i64 %69)
  br label %71

71:                                               ; preds = %62, %65
  %72 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %5) #11
  br label %88

73:                                               ; preds = %10
  %74 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %5) #11
  %75 = icmp eq %"class.media::VideoFrame"* %1, null
  br i1 %75, label %88, label %76

76:                                               ; preds = %73
  %77 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %1, i64 0, i32 1
  %78 = getelementptr inbounds %"class.base::RefCountedThreadSafe.1", %"class.base::RefCountedThreadSafe.1"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = atomicrmw sub i32* %78, i32 1 acq_rel
  %80 = icmp eq i32 %79, 1
  br i1 %80, label %81, label %88

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.base::RefCountedThreadSafe.1", %"class.base::RefCountedThreadSafe.1"* %77, i64 -2
  %83 = bitcast %"class.base::RefCountedThreadSafe.1"* %82 to %"class.media::VideoFrame"*
  %84 = bitcast %"class.base::RefCountedThreadSafe.1"* %82 to void (%"class.media::VideoFrame"*)***
  %85 = load void (%"class.media::VideoFrame"*)**, void (%"class.media::VideoFrame"*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %85, i64 1
  %87 = load void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %86, align 8
  tail call void %87(%"class.media::VideoFrame"* nonnull %83) #11
  br label %88

88:                                               ; preds = %71, %73, %76, %81
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media14VideoFramePool8PoolImpl8ShutdownEv(%"class.media::VideoFramePool::PoolImpl"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::VideoFramePool::PoolImpl", %"class.media::VideoFramePool::PoolImpl"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %3) #11
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.media::VideoFramePool::PoolImpl", %"class.media::VideoFramePool::PoolImpl"* %0, i64 0, i32 2
  store i8 1, i8* %9, align 8
  %10 = getelementptr inbounds %"class.media::VideoFramePool::PoolImpl", %"class.media::VideoFramePool::PoolImpl"* %0, i64 0, i32 3
  %11 = getelementptr inbounds %"class.media::VideoFramePool::PoolImpl", %"class.media::VideoFramePool::PoolImpl"* %0, i64 0, i32 3, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.media::VideoFramePool::PoolImpl", %"class.media::VideoFramePool::PoolImpl"* %0, i64 0, i32 3, i32 2
  %14 = load i64, i64* %13, align 8
  tail call void @_ZN4base14circular_dequeIN5media14VideoFramePool8PoolImpl10FrameEntryEE13DestructRangeEmm(%"class.base::circular_deque"* %10, i64 %12, i64 %14) #11
  %15 = bitcast i64* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #11
  %16 = bitcast %"class.base::circular_deque"* %10 to i8**
  %17 = load i8*, i8** %16, align 8
  tail call void @free(i8* %17) #11
  %18 = bitcast %"class.base::circular_deque"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false) #11
  %19 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.base::circular_deque"*, i64 } @_ZN4base14circular_dequeIN5media14VideoFramePool8PoolImpl10FrameEntryEE5eraseENS_8internal29circular_deque_const_iteratorIS4_EES8_(%"class.base::circular_deque"*, %"class.base::circular_deque"*, i64, %"class.base::circular_deque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = icmp eq i64 %2, %4
  br i1 %7, label %156, label %8

8:                                                ; preds = %5
  %9 = icmp ult i64 %2, %4
  %10 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %11 = tail call dereferenceable(16) %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* @_ZN4base8internal12VectorBufferIN5media14VideoFramePool8PoolImpl10FrameEntryEEixEm(%"class.base::internal::VectorBuffer"* %10, i64 %2)
  br i1 %9, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = tail call dereferenceable(16) %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* @_ZN4base8internal12VectorBufferIN5media14VideoFramePool8PoolImpl10FrameEntryEEixEm(%"class.base::internal::VectorBuffer"* %10, i64 %14)
  tail call void @_ZN4base8internal12VectorBufferIN5media14VideoFramePool8PoolImpl10FrameEntryEE13DestructRangeIS5_Li0EEEvPS5_S8_(%"class.base::internal::VectorBuffer"* %10, %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %11, %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %15)
  %16 = tail call dereferenceable(16) %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* @_ZN4base8internal12VectorBufferIN5media14VideoFramePool8PoolImpl10FrameEntryEEixEm(%"class.base::internal::VectorBuffer"* %10, i64 0)
  br label %17

17:                                               ; preds = %8, %12
  %18 = phi %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* [ %16, %12 ], [ %11, %8 ]
  %19 = tail call dereferenceable(16) %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* @_ZN4base8internal12VectorBufferIN5media14VideoFramePool8PoolImpl10FrameEntryEEixEm(%"class.base::internal::VectorBuffer"* %10, i64 %4)
  tail call void @_ZN4base8internal12VectorBufferIN5media14VideoFramePool8PoolImpl10FrameEntryEE13DestructRangeIS5_Li0EEEvPS5_S8_(%"class.base::internal::VectorBuffer"* %10, %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %18, %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %19)
  %20 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, %2
  br i1 %22, label %23, label %24

23:                                               ; preds = %17
  store i64 %4, i64* %20, align 8
  br label %156

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %28 = bitcast %"class.logging::CheckError"* %6 to i8*
  br label %29

29:                                               ; preds = %147, %24
  %30 = phi i64 [ %21, %24 ], [ %154, %147 ]
  %31 = phi i64 [ %4, %24 ], [ %150, %147 ]
  %32 = phi i64 [ %2, %24 ], [ %153, %147 ]
  %33 = icmp ult i64 %31, %30
  br i1 %33, label %36, label %34

34:                                               ; preds = %29
  %35 = sub i64 %31, %30
  br label %40

36:                                               ; preds = %29
  %37 = load i64, i64* %27, align 8
  %38 = sub i64 %31, %30
  %39 = add i64 %38, %37
  br label %40

40:                                               ; preds = %36, %34
  %41 = phi i64 [ %35, %34 ], [ %39, %36 ]
  %42 = icmp ult i64 %26, %30
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  %44 = sub i64 %26, %30
  br label %49

45:                                               ; preds = %40
  %46 = load i64, i64* %27, align 8
  %47 = sub i64 %26, %30
  %48 = add i64 %47, %46
  br label %49

49:                                               ; preds = %43, %45
  %50 = phi i64 [ %44, %43 ], [ %48, %45 ]
  %51 = icmp ult i64 %41, %50
  br i1 %51, label %52, label %155

52:                                               ; preds = %49
  %53 = call dereferenceable(16) %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* @_ZN4base8internal12VectorBufferIN5media14VideoFramePool8PoolImpl10FrameEntryEEixEm(%"class.base::internal::VectorBuffer"* %10, i64 %31)
  %54 = ptrtoint %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %53 to i64
  %55 = add i64 %31, 1
  %56 = call dereferenceable(16) %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* @_ZN4base8internal12VectorBufferIN5media14VideoFramePool8PoolImpl10FrameEntryEEixEm(%"class.base::internal::VectorBuffer"* %10, i64 %55)
  %57 = call dereferenceable(16) %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* @_ZN4base8internal12VectorBufferIN5media14VideoFramePool8PoolImpl10FrameEntryEEixEm(%"class.base::internal::VectorBuffer"* %10, i64 %32)
  %58 = icmp ult %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %57, %56
  br i1 %58, label %59, label %74

59:                                               ; preds = %52
  %60 = ptrtoint %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %57 to i64
  %61 = ptrtoint %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %56 to i64
  %62 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %61, i64 %54) #11
  %63 = extractvalue { i64, i1 } %62, 1
  %64 = extractvalue { i64, i1 } %62, 0
  %65 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %60, i64 %64) #11
  %66 = extractvalue { i64, i1 } %65, 1
  %67 = or i1 %63, %66
  br i1 %67, label %68, label %69, !prof !9

68:                                               ; preds = %59
  call void @llvm.trap() #11
  unreachable

69:                                               ; preds = %59
  %70 = extractvalue { i64, i1 } %65, 0
  %71 = icmp ugt i64 %70, %54
  br i1 %71, label %72, label %74

72:                                               ; preds = %69
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.6, i64 0, i64 0)) #11
  %73 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %74

74:                                               ; preds = %72, %69, %52
  %75 = icmp eq %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %53, %56
  br i1 %75, label %147, label %76

76:                                               ; preds = %74
  %77 = getelementptr %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %56, i64 -1
  %78 = ptrtoint %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %77 to i64
  %79 = sub i64 %78, %54
  %80 = lshr i64 %79, 4
  %81 = add nuw nsw i64 %80, 1
  %82 = and i64 %81, 3
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %101, label %84

84:                                               ; preds = %76, %84
  %85 = phi %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* [ %98, %84 ], [ %57, %76 ]
  %86 = phi %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* [ %97, %84 ], [ %53, %76 ]
  %87 = phi i64 [ %99, %84 ], [ %82, %76 ]
  %88 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %86, i64 0, i32 0, i32 0, i32 0
  %89 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %85, i64 0, i32 0, i32 0, i32 0
  %90 = load i64, i64* %88, align 8
  store i64 %90, i64* %89, align 8
  %91 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %85, i64 0, i32 1
  %92 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %86, i64 0, i32 1
  %93 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %92, i64 0, i32 0
  %94 = bitcast %class.scoped_refptr* %92 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %class.scoped_refptr* %91 to i64*
  store i64 %95, i64* %96, align 8
  store %"class.media::VideoFrame"* null, %"class.media::VideoFrame"** %93, align 8
  %97 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %86, i64 1
  %98 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %85, i64 1
  %99 = add i64 %87, -1
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %84, !llvm.loop !10

101:                                              ; preds = %84, %76
  %102 = phi %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* [ %57, %76 ], [ %98, %84 ]
  %103 = phi %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* [ %53, %76 ], [ %97, %84 ]
  %104 = icmp ult i64 %79, 48
  br i1 %104, label %147, label %105

105:                                              ; preds = %101, %105
  %106 = phi %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* [ %145, %105 ], [ %102, %101 ]
  %107 = phi %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* [ %144, %105 ], [ %103, %101 ]
  %108 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %107, i64 0, i32 0, i32 0, i32 0
  %109 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %106, i64 0, i32 0, i32 0, i32 0
  %110 = load i64, i64* %108, align 8
  store i64 %110, i64* %109, align 8
  %111 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %106, i64 0, i32 1
  %112 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %107, i64 0, i32 1
  %113 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %112, i64 0, i32 0
  %114 = bitcast %class.scoped_refptr* %112 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = bitcast %class.scoped_refptr* %111 to i64*
  store i64 %115, i64* %116, align 8
  store %"class.media::VideoFrame"* null, %"class.media::VideoFrame"** %113, align 8
  %117 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %107, i64 1, i32 0, i32 0, i32 0
  %118 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %106, i64 1, i32 0, i32 0, i32 0
  %119 = load i64, i64* %117, align 8
  store i64 %119, i64* %118, align 8
  %120 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %106, i64 1, i32 1
  %121 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %107, i64 1, i32 1
  %122 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %121, i64 0, i32 0
  %123 = bitcast %class.scoped_refptr* %121 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %class.scoped_refptr* %120 to i64*
  store i64 %124, i64* %125, align 8
  store %"class.media::VideoFrame"* null, %"class.media::VideoFrame"** %122, align 8
  %126 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %107, i64 2, i32 0, i32 0, i32 0
  %127 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %106, i64 2, i32 0, i32 0, i32 0
  %128 = load i64, i64* %126, align 8
  store i64 %128, i64* %127, align 8
  %129 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %106, i64 2, i32 1
  %130 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %107, i64 2, i32 1
  %131 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %130, i64 0, i32 0
  %132 = bitcast %class.scoped_refptr* %130 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %class.scoped_refptr* %129 to i64*
  store i64 %133, i64* %134, align 8
  store %"class.media::VideoFrame"* null, %"class.media::VideoFrame"** %131, align 8
  %135 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %107, i64 3, i32 0, i32 0, i32 0
  %136 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %106, i64 3, i32 0, i32 0, i32 0
  %137 = load i64, i64* %135, align 8
  store i64 %137, i64* %136, align 8
  %138 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %106, i64 3, i32 1
  %139 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %107, i64 3, i32 1
  %140 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %139, i64 0, i32 0
  %141 = bitcast %class.scoped_refptr* %139 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = bitcast %class.scoped_refptr* %138 to i64*
  store i64 %142, i64* %143, align 8
  store %"class.media::VideoFrame"* null, %"class.media::VideoFrame"** %140, align 8
  %144 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %107, i64 4
  %145 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %106, i64 4
  %146 = icmp eq %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %144, %56
  br i1 %146, label %147, label %105

147:                                              ; preds = %101, %105, %74
  %148 = load i64, i64* %27, align 8
  %149 = icmp eq i64 %55, %148
  %150 = select i1 %149, i64 0, i64 %55
  %151 = add i64 %32, 1
  %152 = icmp eq i64 %151, %148
  %153 = select i1 %152, i64 0, i64 %151
  %154 = load i64, i64* %20, align 8
  br label %29

155:                                              ; preds = %49
  store i64 %32, i64* %25, align 8
  br label %156

156:                                              ; preds = %5, %155, %23
  %157 = phi i64 [ %4, %23 ], [ %2, %155 ], [ %2, %5 ]
  %158 = insertvalue { %"class.base::circular_deque"*, i64 } undef, %"class.base::circular_deque"* %0, 0
  %159 = insertvalue { %"class.base::circular_deque"*, i64 } %158, i64 %157, 1
  ret { %"class.base::circular_deque"*, i64 } %159
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media14VideoFramePoolC2Ev(%"class.media::VideoFramePool"* nocapture) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 96) #12
  %3 = bitcast i8* %2 to i32*
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  %5 = bitcast i8* %4 to %"class.base::internal::LockImpl"*
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %5) #11
  %6 = getelementptr inbounds i8, i8* %2, i64 48
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds i8, i8* %2, i64 56
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 32, i1 false) #11
  %8 = getelementptr inbounds i8, i8* %2, i64 88
  %9 = bitcast i8* %8 to %"class.base::TickClock"**
  %10 = tail call %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() #11
  %11 = getelementptr inbounds %"class.base::DefaultTickClock", %"class.base::DefaultTickClock"* %10, i64 0, i32 0
  store %"class.base::TickClock"* %11, %"class.base::TickClock"** %9, align 8
  %12 = bitcast %"class.media::VideoFramePool"* %0 to i8**
  store i8* %2, i8** %12, align 8
  %13 = atomicrmw add i32* %3, i32 1 monotonic
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media14VideoFramePoolD2Ev(%"class.media::VideoFramePool"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::VideoFramePool", %"class.media::VideoFramePool"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.media::VideoFramePool::PoolImpl"*, %"class.media::VideoFramePool::PoolImpl"** %2, align 8
  %4 = getelementptr inbounds %"class.media::VideoFramePool::PoolImpl", %"class.media::VideoFramePool::PoolImpl"* %3, i64 0, i32 1
  %5 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %4, i64 0, i32 0, i32 0
  %6 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %5) #11
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8, !prof !2

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %4, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %9) #11
  br label %10

10:                                               ; preds = %1, %8
  %11 = getelementptr inbounds %"class.media::VideoFramePool::PoolImpl", %"class.media::VideoFramePool::PoolImpl"* %3, i64 0, i32 2
  store i8 1, i8* %11, align 8
  %12 = getelementptr inbounds %"class.media::VideoFramePool::PoolImpl", %"class.media::VideoFramePool::PoolImpl"* %3, i64 0, i32 3
  %13 = getelementptr inbounds %"class.media::VideoFramePool::PoolImpl", %"class.media::VideoFramePool::PoolImpl"* %3, i64 0, i32 3, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.media::VideoFramePool::PoolImpl", %"class.media::VideoFramePool::PoolImpl"* %3, i64 0, i32 3, i32 2
  %16 = load i64, i64* %15, align 8
  tail call void @_ZN4base14circular_dequeIN5media14VideoFramePool8PoolImpl10FrameEntryEE13DestructRangeEmm(%"class.base::circular_deque"* %12, i64 %14, i64 %16) #11
  %17 = bitcast i64* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #11
  %18 = bitcast %"class.base::circular_deque"* %12 to i8**
  %19 = load i8*, i8** %18, align 8
  tail call void @free(i8* %19) #11
  %20 = bitcast %"class.base::circular_deque"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #11
  %21 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %5) #11
  %22 = load %"class.media::VideoFramePool::PoolImpl"*, %"class.media::VideoFramePool::PoolImpl"** %2, align 8
  %23 = icmp eq %"class.media::VideoFramePool::PoolImpl"* %22, null
  br i1 %23, label %43, label %24

24:                                               ; preds = %10
  %25 = getelementptr inbounds %"class.media::VideoFramePool::PoolImpl", %"class.media::VideoFramePool::PoolImpl"* %22, i64 0, i32 0
  %26 = getelementptr inbounds %"class.media::VideoFramePool::PoolImpl", %"class.media::VideoFramePool::PoolImpl"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw sub i32* %26, i32 1 acq_rel
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %43

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %25, i64 14
  %31 = bitcast %"class.base::RefCountedThreadSafe"* %30 to %"class.base::circular_deque"*
  %32 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %25, i64 18
  %33 = bitcast %"class.base::RefCountedThreadSafe"* %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %25, i64 20
  %36 = bitcast %"class.base::RefCountedThreadSafe"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  tail call void @_ZN4base14circular_dequeIN5media14VideoFramePool8PoolImpl10FrameEntryEE13DestructRangeEmm(%"class.base::circular_deque"* %31, i64 %34, i64 %37) #11
  %38 = bitcast %"class.base::RefCountedThreadSafe"* %30 to i8**
  %39 = load i8*, i8** %38, align 8
  tail call void @free(i8* %39) #11
  %40 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %25, i64 2
  %41 = bitcast %"class.base::RefCountedThreadSafe"* %40 to %"class.base::internal::LockImpl"*
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %41) #11
  %42 = bitcast %"class.media::VideoFramePool::PoolImpl"* %22 to i8*
  tail call void @_ZdlPv(i8* %42) #12
  br label %43

43:                                               ; preds = %10, %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.media::VideoFrame"* @_ZN5media14VideoFramePool11CreateFrameENS_16VideoPixelFormatERKN3gfx4SizeERKNS2_4RectES5_N4base9TimeDeltaE(%"class.media::VideoFramePool"* nocapture readonly, i32, %"class.gfx::Size"* dereferenceable(8), %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Size"* dereferenceable(8), i64) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.media::VideoFramePool", %"class.media::VideoFramePool"* %0, i64 0, i32 0, i32 0
  %8 = load %"class.media::VideoFramePool::PoolImpl"*, %"class.media::VideoFramePool::PoolImpl"** %7, align 8
  %9 = tail call %"class.media::VideoFrame"* @_ZN5media14VideoFramePool8PoolImpl11CreateFrameENS_16VideoPixelFormatERKN3gfx4SizeERKNS3_4RectES6_N4base9TimeDeltaE(%"class.media::VideoFramePool::PoolImpl"* %8, i32 %1, %"class.gfx::Size"* dereferenceable(8) %2, %"class.gfx::Rect"* dereferenceable(16) %3, %"class.gfx::Size"* dereferenceable(8) %4, i64 %5)
  ret %"class.media::VideoFrame"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5media14VideoFramePool21GetPoolSizeForTestingEv(%"class.media::VideoFramePool"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::VideoFramePool", %"class.media::VideoFramePool"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.media::VideoFramePool::PoolImpl"*, %"class.media::VideoFramePool::PoolImpl"** %2, align 8
  %4 = getelementptr inbounds %"class.media::VideoFramePool::PoolImpl", %"class.media::VideoFramePool::PoolImpl"* %3, i64 0, i32 1
  %5 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %4, i64 0, i32 0, i32 0
  %6 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %5) #11
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8, !prof !2

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %4, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %9) #11
  br label %10

10:                                               ; preds = %8, %1
  %11 = getelementptr inbounds %"class.media::VideoFramePool::PoolImpl", %"class.media::VideoFramePool::PoolImpl"* %3, i64 0, i32 3, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.media::VideoFramePool::PoolImpl", %"class.media::VideoFramePool::PoolImpl"* %3, i64 0, i32 3, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, %12
  br i1 %15, label %18, label %16

16:                                               ; preds = %10
  %17 = sub i64 %14, %12
  br label %23

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.media::VideoFramePool::PoolImpl", %"class.media::VideoFramePool::PoolImpl"* %3, i64 0, i32 3, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %14, %12
  %22 = add i64 %21, %20
  br label %23

23:                                               ; preds = %16, %18
  %24 = phi i64 [ %17, %16 ], [ %22, %18 ]
  %25 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %5) #11
  ret i64 %24
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5media14VideoFramePool22SetTickClockForTestingEPKN4base9TickClockE(%"class.media::VideoFramePool"* nocapture readonly, %"class.base::TickClock"*) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.media::VideoFramePool", %"class.media::VideoFramePool"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.media::VideoFramePool::PoolImpl"*, %"class.media::VideoFramePool::PoolImpl"** %3, align 8
  %5 = getelementptr inbounds %"class.media::VideoFramePool::PoolImpl", %"class.media::VideoFramePool::PoolImpl"* %4, i64 0, i32 4
  store %"class.base::TickClock"* %1, %"class.base::TickClock"** %5, align 8
  ret void
}

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #3

declare void @_ZN5media18VideoFrameMetadataC1Ev(%"struct.media::VideoFrameMetadata"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #11
  %7 = load i8, i8* %6, align 8, !range !8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #11
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #11
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #11
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #11
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #11
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #12
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #11
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #11
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #11
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN5media14VideoFramePool8PoolImpl10FrameEntryEE13DestructRangeEmm(%"class.base::circular_deque"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq i64 %2, %1
  br i1 %4, label %17, label %5

5:                                                ; preds = %3
  %6 = icmp ugt i64 %2, %1
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %8 = tail call dereferenceable(16) %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* @_ZN4base8internal12VectorBufferIN5media14VideoFramePool8PoolImpl10FrameEntryEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %1)
  br i1 %6, label %14, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = tail call dereferenceable(16) %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* @_ZN4base8internal12VectorBufferIN5media14VideoFramePool8PoolImpl10FrameEntryEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %11)
  tail call void @_ZN4base8internal12VectorBufferIN5media14VideoFramePool8PoolImpl10FrameEntryEE13DestructRangeIS5_Li0EEEvPS5_S8_(%"class.base::internal::VectorBuffer"* %7, %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %8, %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %12)
  %13 = tail call dereferenceable(16) %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* @_ZN4base8internal12VectorBufferIN5media14VideoFramePool8PoolImpl10FrameEntryEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 0)
  br label %14

14:                                               ; preds = %5, %9
  %15 = phi %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* [ %13, %9 ], [ %8, %5 ]
  %16 = tail call dereferenceable(16) %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* @_ZN4base8internal12VectorBufferIN5media14VideoFramePool8PoolImpl10FrameEntryEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %2)
  tail call void @_ZN4base8internal12VectorBufferIN5media14VideoFramePool8PoolImpl10FrameEntryEE13DestructRangeIS5_Li0EEEvPS5_S8_(%"class.base::internal::VectorBuffer"* %7, %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %15, %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %16)
  br label %17

17:                                               ; preds = %14, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12VectorBufferIN5media14VideoFramePool8PoolImpl10FrameEntryEE13DestructRangeIS5_Li0EEEvPS5_S8_(%"class.base::internal::VectorBuffer"*, %"struct.media::VideoFramePool::PoolImpl::FrameEntry"*, %"struct.media::VideoFramePool::PoolImpl::FrameEntry"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"struct.media::VideoFramePool::PoolImpl::FrameEntry"*, align 8
  %6 = alloca %"struct.media::VideoFramePool::PoolImpl::FrameEntry"*, align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  store %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %1, %"struct.media::VideoFramePool::PoolImpl::FrameEntry"** %5, align 8
  store %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %2, %"struct.media::VideoFramePool::PoolImpl::FrameEntry"** %6, align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %1, %2
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %25

14:                                               ; preds = %3
  %15 = bitcast %"struct.media::VideoFramePool::PoolImpl::FrameEntry"** %5 to i8*
  %16 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN5media14VideoFramePool8PoolImpl10FrameEntryEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS6_14remove_pointerIS8_E4typeEEE5valueEPcE4typeESA_ENUlRNS6_13basic_ostreamIcNS6_11char_traitsIcEEEEPKvE_8__invokeESL_SN_) #11
  %17 = bitcast %"struct.media::VideoFramePool::PoolImpl::FrameEntry"** %6 to i8*
  %18 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN5media14VideoFramePool8PoolImpl10FrameEntryEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS6_14remove_pointerIS8_E4typeEEE5valueEPcE4typeESA_ENUlRNS6_13basic_ostreamIcNS6_11char_traitsIcEEEEPKvE_8__invokeESL_SN_) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i8* %16, i8* %18) #11
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %20, i8** %10, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %7) #11
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #11
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  %26 = load %"struct.media::VideoFramePool::PoolImpl::FrameEntry"*, %"struct.media::VideoFramePool::PoolImpl::FrameEntry"** %5, align 8
  %27 = load %"struct.media::VideoFramePool::PoolImpl::FrameEntry"*, %"struct.media::VideoFramePool::PoolImpl::FrameEntry"** %6, align 8
  %28 = icmp eq %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %26, %27
  br i1 %28, label %51, label %29

29:                                               ; preds = %25, %46
  %30 = phi %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* [ %48, %46 ], [ %26, %25 ]
  %31 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %30, i64 0, i32 1, i32 0
  %32 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %31, align 8
  %33 = icmp eq %"class.media::VideoFrame"* %32, null
  br i1 %33, label %46, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %32, i64 0, i32 1
  %36 = getelementptr inbounds %"class.base::RefCountedThreadSafe.1", %"class.base::RefCountedThreadSafe.1"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw sub i32* %36, i32 1 acq_rel
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %46

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.base::RefCountedThreadSafe.1", %"class.base::RefCountedThreadSafe.1"* %35, i64 -2
  %41 = bitcast %"class.base::RefCountedThreadSafe.1"* %40 to %"class.media::VideoFrame"*
  %42 = bitcast %"class.base::RefCountedThreadSafe.1"* %40 to void (%"class.media::VideoFrame"*)***
  %43 = load void (%"class.media::VideoFrame"*)**, void (%"class.media::VideoFrame"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %43, i64 1
  %45 = load void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %44, align 8
  call void %45(%"class.media::VideoFrame"* nonnull %41) #11
  br label %46

46:                                               ; preds = %29, %34, %39
  %47 = load %"struct.media::VideoFramePool::PoolImpl::FrameEntry"*, %"struct.media::VideoFramePool::PoolImpl::FrameEntry"** %5, align 8
  %48 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %47, i64 1
  store %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %48, %"struct.media::VideoFramePool::PoolImpl::FrameEntry"** %5, align 8
  %49 = load %"struct.media::VideoFramePool::PoolImpl::FrameEntry"*, %"struct.media::VideoFramePool::PoolImpl::FrameEntry"** %6, align 8
  %50 = icmp eq %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %48, %49
  br i1 %50, label %51, label %29

51:                                               ; preds = %46, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* @_ZN4base8internal12VectorBufferIN5media14VideoFramePool8PoolImpl10FrameEntryEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0), i32 84, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"struct.media::VideoFramePool::PoolImpl::FrameEntry"*, %"struct.media::VideoFramePool::PoolImpl::FrameEntry"** %23, align 8
  %25 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %24, i64 %1
  ret %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %25
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPN5media14VideoFramePool8PoolImpl10FrameEntryEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS6_14remove_pointerIS8_E4typeEEE5valueEPcE4typeESA_ENUlRNS6_13basic_ostreamIcNS6_11char_traitsIcEEEEPKvE_8__invokeESL_SN_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #7 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #11
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* @_ZNK4base8internal12VectorBufferIN5media14VideoFramePool8PoolImpl10FrameEntryEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0), i32 89, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"struct.media::VideoFramePool::PoolImpl::FrameEntry"*, %"struct.media::VideoFramePool::PoolImpl::FrameEntry"** %23, align 8
  %25 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %24, i64 %1
  ret %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %25
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN5media14VideoFramePool8PoolImpl10FrameEntryEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"class.base::internal::VectorBuffer"*
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  %7 = add i64 %5, -1
  %8 = select i1 %6, i64 0, i64 %7
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %43, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, %12
  %16 = sub i64 %14, %12
  %17 = select i1 %15, i64 %5, i64 0
  %18 = add i64 %17, %16
  %19 = sub i64 %8, %18
  %20 = icmp ult i64 %19, %18
  br i1 %20, label %43, label %21

21:                                               ; preds = %10
  %22 = lshr i64 %18, 2
  %23 = add i64 %22, %18
  %24 = icmp ugt i64 %23, 3
  %25 = select i1 %24, i64 %23, i64 3
  %26 = icmp ult i64 %25, %8
  br i1 %26, label %27, label %43

27:                                               ; preds = %21
  %28 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #11
  %29 = add nuw i64 %25, 1
  %30 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %29, i64 16) #11
  %31 = extractvalue { i64, i1 } %30, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -86, i64 16, i1 false) #11
  br i1 %31, label %32, label %33, !prof !9

32:                                               ; preds = %27
  tail call void @llvm.trap() #11
  unreachable

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 1
  %35 = extractvalue { i64, i1 } %30, 0
  %36 = tail call noalias i8* @malloc(i64 %35) #11
  %37 = bitcast <2 x i64>* %2 to i8**
  store i8* %36, i8** %37, align 16
  store i64 %29, i64* %34, align 8
  %38 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeIN5media14VideoFramePool8PoolImpl10FrameEntryEE10MoveBufferERNS_8internal12VectorBufferIS4_EEmmPS8_PmSB_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %38, i64 %12, i64 %14, %"class.base::internal::VectorBuffer"* nonnull %3, i64* %11, i64* %13) #11
  %39 = bitcast %"class.base::circular_deque"* %0 to i8**
  %40 = load i8*, i8** %39, align 8
  call void @free(i8* %40) #11
  %41 = load <2 x i64>, <2 x i64>* %2, align 16
  %42 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #11
  br label %43

43:                                               ; preds = %10, %33, %21, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN5media14VideoFramePool8PoolImpl10FrameEntryEE10MoveBufferERNS_8internal12VectorBufferIS4_EEmmPS8_PmSB_(%"class.base::internal::VectorBuffer"* dereferenceable(16), i64, i64, %"class.base::internal::VectorBuffer"*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  store i64 0, i64* %4, align 8
  %12 = icmp ugt i64 %2, %1
  br i1 %12, label %13, label %111

13:                                               ; preds = %6
  %14 = tail call dereferenceable(16) %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* @_ZN4base8internal12VectorBufferIN5media14VideoFramePool8PoolImpl10FrameEntryEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %15 = ptrtoint %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %14 to i64
  %16 = tail call dereferenceable(16) %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* @_ZN4base8internal12VectorBufferIN5media14VideoFramePool8PoolImpl10FrameEntryEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %17 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %18 = load %"struct.media::VideoFramePool::PoolImpl::FrameEntry"*, %"struct.media::VideoFramePool::PoolImpl::FrameEntry"** %17, align 8
  %19 = icmp ult %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %18, %16
  br i1 %19, label %20, label %36

20:                                               ; preds = %13
  %21 = ptrtoint %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %18 to i64
  %22 = ptrtoint %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %16 to i64
  %23 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %22, i64 %15) #11
  %24 = extractvalue { i64, i1 } %23, 1
  %25 = extractvalue { i64, i1 } %23, 0
  %26 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %21, i64 %25) #11
  %27 = extractvalue { i64, i1 } %26, 1
  %28 = or i1 %24, %27
  br i1 %28, label %29, label %30, !prof !9

29:                                               ; preds = %20
  tail call void @llvm.trap() #11
  unreachable

30:                                               ; preds = %20
  %31 = extractvalue { i64, i1 } %26, 0
  %32 = icmp ugt i64 %31, %15
  br i1 %32, label %33, label %36

33:                                               ; preds = %30
  %34 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.6, i64 0, i64 0)) #11
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #11
  br label %36

36:                                               ; preds = %33, %30, %13
  %37 = icmp eq %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %14, %16
  br i1 %37, label %109, label %38

38:                                               ; preds = %36
  %39 = getelementptr %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %16, i64 -1, i32 0, i32 0, i32 0
  %40 = ptrtoint i64* %39 to i64
  %41 = sub i64 %40, %15
  %42 = lshr i64 %41, 4
  %43 = add nuw nsw i64 %42, 1
  %44 = and i64 %43, 3
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %63, label %46

46:                                               ; preds = %38, %46
  %47 = phi %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* [ %60, %46 ], [ %18, %38 ]
  %48 = phi %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* [ %59, %46 ], [ %14, %38 ]
  %49 = phi i64 [ %61, %46 ], [ %44, %38 ]
  %50 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %48, i64 0, i32 0, i32 0, i32 0
  %51 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %47, i64 0, i32 0, i32 0, i32 0
  %52 = load i64, i64* %50, align 8
  store i64 %52, i64* %51, align 8
  %53 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %47, i64 0, i32 1
  %54 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %48, i64 0, i32 1
  %55 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %54, i64 0, i32 0
  %56 = bitcast %class.scoped_refptr* %54 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %class.scoped_refptr* %53 to i64*
  store i64 %57, i64* %58, align 8
  store %"class.media::VideoFrame"* null, %"class.media::VideoFrame"** %55, align 8
  %59 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %48, i64 1
  %60 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %47, i64 1
  %61 = add i64 %49, -1
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %63, label %46, !llvm.loop !12

63:                                               ; preds = %46, %38
  %64 = phi %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* [ %18, %38 ], [ %60, %46 ]
  %65 = phi %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* [ %14, %38 ], [ %59, %46 ]
  %66 = icmp ult i64 %41, 48
  br i1 %66, label %109, label %67

67:                                               ; preds = %63, %67
  %68 = phi %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* [ %107, %67 ], [ %64, %63 ]
  %69 = phi %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* [ %106, %67 ], [ %65, %63 ]
  %70 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %69, i64 0, i32 0, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %68, i64 0, i32 0, i32 0, i32 0
  %72 = load i64, i64* %70, align 8
  store i64 %72, i64* %71, align 8
  %73 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %68, i64 0, i32 1
  %74 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %69, i64 0, i32 1
  %75 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %74, i64 0, i32 0
  %76 = bitcast %class.scoped_refptr* %74 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = bitcast %class.scoped_refptr* %73 to i64*
  store i64 %77, i64* %78, align 8
  store %"class.media::VideoFrame"* null, %"class.media::VideoFrame"** %75, align 8
  %79 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %69, i64 1, i32 0, i32 0, i32 0
  %80 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %68, i64 1, i32 0, i32 0, i32 0
  %81 = load i64, i64* %79, align 8
  store i64 %81, i64* %80, align 8
  %82 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %68, i64 1, i32 1
  %83 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %69, i64 1, i32 1
  %84 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %83, i64 0, i32 0
  %85 = bitcast %class.scoped_refptr* %83 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %class.scoped_refptr* %82 to i64*
  store i64 %86, i64* %87, align 8
  store %"class.media::VideoFrame"* null, %"class.media::VideoFrame"** %84, align 8
  %88 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %69, i64 2, i32 0, i32 0, i32 0
  %89 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %68, i64 2, i32 0, i32 0, i32 0
  %90 = load i64, i64* %88, align 8
  store i64 %90, i64* %89, align 8
  %91 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %68, i64 2, i32 1
  %92 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %69, i64 2, i32 1
  %93 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %92, i64 0, i32 0
  %94 = bitcast %class.scoped_refptr* %92 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %class.scoped_refptr* %91 to i64*
  store i64 %95, i64* %96, align 8
  store %"class.media::VideoFrame"* null, %"class.media::VideoFrame"** %93, align 8
  %97 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %69, i64 3, i32 0, i32 0, i32 0
  %98 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %68, i64 3, i32 0, i32 0, i32 0
  %99 = load i64, i64* %97, align 8
  store i64 %99, i64* %98, align 8
  %100 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %68, i64 3, i32 1
  %101 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %69, i64 3, i32 1
  %102 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %101, i64 0, i32 0
  %103 = bitcast %class.scoped_refptr* %101 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %class.scoped_refptr* %100 to i64*
  store i64 %104, i64* %105, align 8
  store %"class.media::VideoFrame"* null, %"class.media::VideoFrame"** %102, align 8
  %106 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %69, i64 4
  %107 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %68, i64 4
  %108 = icmp eq %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %106, %16
  br i1 %108, label %109, label %67

109:                                              ; preds = %63, %67, %36
  %110 = sub i64 %2, %1
  br label %307

111:                                              ; preds = %6
  %112 = icmp ult i64 %2, %1
  br i1 %112, label %113, label %307

113:                                              ; preds = %111
  %114 = tail call dereferenceable(16) %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* @_ZN4base8internal12VectorBufferIN5media14VideoFramePool8PoolImpl10FrameEntryEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %115 = ptrtoint %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %114 to i64
  %116 = tail call dereferenceable(16) %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* @_ZN4base8internal12VectorBufferIN5media14VideoFramePool8PoolImpl10FrameEntryEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %11)
  %117 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %118 = load %"struct.media::VideoFramePool::PoolImpl::FrameEntry"*, %"struct.media::VideoFramePool::PoolImpl::FrameEntry"** %117, align 8
  %119 = icmp ult %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %118, %116
  br i1 %119, label %120, label %136

120:                                              ; preds = %113
  %121 = ptrtoint %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %118 to i64
  %122 = ptrtoint %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %116 to i64
  %123 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %122, i64 %115) #11
  %124 = extractvalue { i64, i1 } %123, 1
  %125 = extractvalue { i64, i1 } %123, 0
  %126 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %121, i64 %125) #11
  %127 = extractvalue { i64, i1 } %126, 1
  %128 = or i1 %124, %127
  br i1 %128, label %129, label %130, !prof !9

129:                                              ; preds = %120
  tail call void @llvm.trap() #11
  unreachable

130:                                              ; preds = %120
  %131 = extractvalue { i64, i1 } %126, 0
  %132 = icmp ugt i64 %131, %115
  br i1 %132, label %133, label %136

133:                                              ; preds = %130
  %134 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %134) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.6, i64 0, i64 0)) #11
  %135 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %134) #11
  br label %136

136:                                              ; preds = %133, %130, %113
  %137 = icmp eq %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %114, %116
  br i1 %137, label %209, label %138

138:                                              ; preds = %136
  %139 = getelementptr %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %116, i64 -1, i32 0, i32 0, i32 0
  %140 = ptrtoint i64* %139 to i64
  %141 = sub i64 %140, %115
  %142 = lshr i64 %141, 4
  %143 = add nuw nsw i64 %142, 1
  %144 = and i64 %143, 3
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %163, label %146

146:                                              ; preds = %138, %146
  %147 = phi %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* [ %160, %146 ], [ %118, %138 ]
  %148 = phi %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* [ %159, %146 ], [ %114, %138 ]
  %149 = phi i64 [ %161, %146 ], [ %144, %138 ]
  %150 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %148, i64 0, i32 0, i32 0, i32 0
  %151 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %147, i64 0, i32 0, i32 0, i32 0
  %152 = load i64, i64* %150, align 8
  store i64 %152, i64* %151, align 8
  %153 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %147, i64 0, i32 1
  %154 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %148, i64 0, i32 1
  %155 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %154, i64 0, i32 0
  %156 = bitcast %class.scoped_refptr* %154 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = bitcast %class.scoped_refptr* %153 to i64*
  store i64 %157, i64* %158, align 8
  store %"class.media::VideoFrame"* null, %"class.media::VideoFrame"** %155, align 8
  %159 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %148, i64 1
  %160 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %147, i64 1
  %161 = add i64 %149, -1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %146, !llvm.loop !13

163:                                              ; preds = %146, %138
  %164 = phi %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* [ %118, %138 ], [ %160, %146 ]
  %165 = phi %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* [ %114, %138 ], [ %159, %146 ]
  %166 = icmp ult i64 %141, 48
  br i1 %166, label %209, label %167

167:                                              ; preds = %163, %167
  %168 = phi %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* [ %207, %167 ], [ %164, %163 ]
  %169 = phi %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* [ %206, %167 ], [ %165, %163 ]
  %170 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %169, i64 0, i32 0, i32 0, i32 0
  %171 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %168, i64 0, i32 0, i32 0, i32 0
  %172 = load i64, i64* %170, align 8
  store i64 %172, i64* %171, align 8
  %173 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %168, i64 0, i32 1
  %174 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %169, i64 0, i32 1
  %175 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %174, i64 0, i32 0
  %176 = bitcast %class.scoped_refptr* %174 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = bitcast %class.scoped_refptr* %173 to i64*
  store i64 %177, i64* %178, align 8
  store %"class.media::VideoFrame"* null, %"class.media::VideoFrame"** %175, align 8
  %179 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %169, i64 1, i32 0, i32 0, i32 0
  %180 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %168, i64 1, i32 0, i32 0, i32 0
  %181 = load i64, i64* %179, align 8
  store i64 %181, i64* %180, align 8
  %182 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %168, i64 1, i32 1
  %183 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %169, i64 1, i32 1
  %184 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %183, i64 0, i32 0
  %185 = bitcast %class.scoped_refptr* %183 to i64*
  %186 = load i64, i64* %185, align 8
  %187 = bitcast %class.scoped_refptr* %182 to i64*
  store i64 %186, i64* %187, align 8
  store %"class.media::VideoFrame"* null, %"class.media::VideoFrame"** %184, align 8
  %188 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %169, i64 2, i32 0, i32 0, i32 0
  %189 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %168, i64 2, i32 0, i32 0, i32 0
  %190 = load i64, i64* %188, align 8
  store i64 %190, i64* %189, align 8
  %191 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %168, i64 2, i32 1
  %192 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %169, i64 2, i32 1
  %193 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %192, i64 0, i32 0
  %194 = bitcast %class.scoped_refptr* %192 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = bitcast %class.scoped_refptr* %191 to i64*
  store i64 %195, i64* %196, align 8
  store %"class.media::VideoFrame"* null, %"class.media::VideoFrame"** %193, align 8
  %197 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %169, i64 3, i32 0, i32 0, i32 0
  %198 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %168, i64 3, i32 0, i32 0, i32 0
  %199 = load i64, i64* %197, align 8
  store i64 %199, i64* %198, align 8
  %200 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %168, i64 3, i32 1
  %201 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %169, i64 3, i32 1
  %202 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %201, i64 0, i32 0
  %203 = bitcast %class.scoped_refptr* %201 to i64*
  %204 = load i64, i64* %203, align 8
  %205 = bitcast %class.scoped_refptr* %200 to i64*
  store i64 %204, i64* %205, align 8
  store %"class.media::VideoFrame"* null, %"class.media::VideoFrame"** %202, align 8
  %206 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %169, i64 4
  %207 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %168, i64 4
  %208 = icmp eq %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %206, %116
  br i1 %208, label %209, label %167

209:                                              ; preds = %163, %167, %136
  %210 = sub i64 %11, %1
  %211 = call dereferenceable(16) %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* @_ZN4base8internal12VectorBufferIN5media14VideoFramePool8PoolImpl10FrameEntryEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 0)
  %212 = ptrtoint %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %211 to i64
  %213 = call dereferenceable(16) %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* @_ZN4base8internal12VectorBufferIN5media14VideoFramePool8PoolImpl10FrameEntryEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %214 = call dereferenceable(16) %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* @_ZN4base8internal12VectorBufferIN5media14VideoFramePool8PoolImpl10FrameEntryEEixEm(%"class.base::internal::VectorBuffer"* %3, i64 %210)
  %215 = icmp ult %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %214, %213
  br i1 %215, label %216, label %232

216:                                              ; preds = %209
  %217 = ptrtoint %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %214 to i64
  %218 = ptrtoint %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %213 to i64
  %219 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %218, i64 %212) #11
  %220 = extractvalue { i64, i1 } %219, 1
  %221 = extractvalue { i64, i1 } %219, 0
  %222 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %217, i64 %221) #11
  %223 = extractvalue { i64, i1 } %222, 1
  %224 = or i1 %220, %223
  br i1 %224, label %225, label %226, !prof !9

225:                                              ; preds = %216
  call void @llvm.trap() #11
  unreachable

226:                                              ; preds = %216
  %227 = extractvalue { i64, i1 } %222, 0
  %228 = icmp ugt i64 %227, %212
  br i1 %228, label %229, label %232

229:                                              ; preds = %226
  %230 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %230) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.6, i64 0, i64 0)) #11
  %231 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %230) #11
  br label %232

232:                                              ; preds = %229, %226, %209
  %233 = icmp eq %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %211, %213
  br i1 %233, label %305, label %234

234:                                              ; preds = %232
  %235 = getelementptr %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %213, i64 -1, i32 0, i32 0, i32 0
  %236 = ptrtoint i64* %235 to i64
  %237 = sub i64 %236, %212
  %238 = lshr i64 %237, 4
  %239 = add nuw nsw i64 %238, 1
  %240 = and i64 %239, 3
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %259, label %242

242:                                              ; preds = %234, %242
  %243 = phi %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* [ %256, %242 ], [ %214, %234 ]
  %244 = phi %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* [ %255, %242 ], [ %211, %234 ]
  %245 = phi i64 [ %257, %242 ], [ %240, %234 ]
  %246 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %244, i64 0, i32 0, i32 0, i32 0
  %247 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %243, i64 0, i32 0, i32 0, i32 0
  %248 = load i64, i64* %246, align 8
  store i64 %248, i64* %247, align 8
  %249 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %243, i64 0, i32 1
  %250 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %244, i64 0, i32 1
  %251 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %250, i64 0, i32 0
  %252 = bitcast %class.scoped_refptr* %250 to i64*
  %253 = load i64, i64* %252, align 8
  %254 = bitcast %class.scoped_refptr* %249 to i64*
  store i64 %253, i64* %254, align 8
  store %"class.media::VideoFrame"* null, %"class.media::VideoFrame"** %251, align 8
  %255 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %244, i64 1
  %256 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %243, i64 1
  %257 = add i64 %245, -1
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %259, label %242, !llvm.loop !14

259:                                              ; preds = %242, %234
  %260 = phi %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* [ %214, %234 ], [ %256, %242 ]
  %261 = phi %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* [ %211, %234 ], [ %255, %242 ]
  %262 = icmp ult i64 %237, 48
  br i1 %262, label %305, label %263

263:                                              ; preds = %259, %263
  %264 = phi %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* [ %303, %263 ], [ %260, %259 ]
  %265 = phi %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* [ %302, %263 ], [ %261, %259 ]
  %266 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %265, i64 0, i32 0, i32 0, i32 0
  %267 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %264, i64 0, i32 0, i32 0, i32 0
  %268 = load i64, i64* %266, align 8
  store i64 %268, i64* %267, align 8
  %269 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %264, i64 0, i32 1
  %270 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %265, i64 0, i32 1
  %271 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %270, i64 0, i32 0
  %272 = bitcast %class.scoped_refptr* %270 to i64*
  %273 = load i64, i64* %272, align 8
  %274 = bitcast %class.scoped_refptr* %269 to i64*
  store i64 %273, i64* %274, align 8
  store %"class.media::VideoFrame"* null, %"class.media::VideoFrame"** %271, align 8
  %275 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %265, i64 1, i32 0, i32 0, i32 0
  %276 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %264, i64 1, i32 0, i32 0, i32 0
  %277 = load i64, i64* %275, align 8
  store i64 %277, i64* %276, align 8
  %278 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %264, i64 1, i32 1
  %279 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %265, i64 1, i32 1
  %280 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %279, i64 0, i32 0
  %281 = bitcast %class.scoped_refptr* %279 to i64*
  %282 = load i64, i64* %281, align 8
  %283 = bitcast %class.scoped_refptr* %278 to i64*
  store i64 %282, i64* %283, align 8
  store %"class.media::VideoFrame"* null, %"class.media::VideoFrame"** %280, align 8
  %284 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %265, i64 2, i32 0, i32 0, i32 0
  %285 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %264, i64 2, i32 0, i32 0, i32 0
  %286 = load i64, i64* %284, align 8
  store i64 %286, i64* %285, align 8
  %287 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %264, i64 2, i32 1
  %288 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %265, i64 2, i32 1
  %289 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %288, i64 0, i32 0
  %290 = bitcast %class.scoped_refptr* %288 to i64*
  %291 = load i64, i64* %290, align 8
  %292 = bitcast %class.scoped_refptr* %287 to i64*
  store i64 %291, i64* %292, align 8
  store %"class.media::VideoFrame"* null, %"class.media::VideoFrame"** %289, align 8
  %293 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %265, i64 3, i32 0, i32 0, i32 0
  %294 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %264, i64 3, i32 0, i32 0, i32 0
  %295 = load i64, i64* %293, align 8
  store i64 %295, i64* %294, align 8
  %296 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %264, i64 3, i32 1
  %297 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %265, i64 3, i32 1
  %298 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %297, i64 0, i32 0
  %299 = bitcast %class.scoped_refptr* %297 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast %class.scoped_refptr* %296 to i64*
  store i64 %300, i64* %301, align 8
  store %"class.media::VideoFrame"* null, %"class.media::VideoFrame"** %298, align 8
  %302 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %265, i64 4
  %303 = getelementptr inbounds %"struct.media::VideoFramePool::PoolImpl::FrameEntry", %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %264, i64 4
  %304 = icmp eq %"struct.media::VideoFramePool::PoolImpl::FrameEntry"* %302, %213
  br i1 %304, label %305, label %263

305:                                              ; preds = %259, %263, %232
  %306 = add i64 %210, %2
  br label %307

307:                                              ; preds = %111, %305, %109
  %308 = phi i64 [ %306, %305 ], [ %110, %109 ], [ 0, %111 ]
  store i64 %308, i64* %5, align 8
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #8

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #9

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #9

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5media14VideoFramePool8PoolImplEFv13scoped_refptrINS3_10VideoFrameEEEJS6_IS5_ES8_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %8
  %12 = bitcast i8* %11 to %"class.media::VideoFramePool::PoolImpl"*
  %13 = and i64 %5, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %5, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.media::VideoFramePool::PoolImpl"*, %"class.media::VideoFrame"*)**
  %21 = load void (%"class.media::VideoFramePool::PoolImpl"*, %"class.media::VideoFrame"*)*, void (%"class.media::VideoFramePool::PoolImpl"*, %"class.media::VideoFrame"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %5 to void (%"class.media::VideoFramePool::PoolImpl"*, %"class.media::VideoFrame"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.media::VideoFramePool::PoolImpl"*, %"class.media::VideoFrame"*)* [ %21, %15 ], [ %23, %22 ]
  %26 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %27 = bitcast void (%"class.base::internal::BindStateBase"*)** %26 to %"class.media::VideoFrame"**
  %28 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %27, align 8
  store %"class.media::VideoFrame"* null, %"class.media::VideoFrame"** %27, align 8
  tail call void %25(%"class.media::VideoFramePool::PoolImpl"* %12, %"class.media::VideoFrame"* %28) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5media14VideoFramePool8PoolImplEFv13scoped_refptrINS2_10VideoFrameEEEJS5_IS4_ES7_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %46, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.media::VideoFrame"**
  %6 = load %"class.media::VideoFrame"*, %"class.media::VideoFrame"** %5, align 8
  %7 = icmp eq %"class.media::VideoFrame"* %6, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.media::VideoFrame", %"class.media::VideoFrame"* %6, i64 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCountedThreadSafe.1", %"class.base::RefCountedThreadSafe.1"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %20

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe.1", %"class.base::RefCountedThreadSafe.1"* %9, i64 -2
  %15 = bitcast %"class.base::RefCountedThreadSafe.1"* %14 to %"class.media::VideoFrame"*
  %16 = bitcast %"class.base::RefCountedThreadSafe.1"* %14 to void (%"class.media::VideoFrame"*)***
  %17 = load void (%"class.media::VideoFrame"*)**, void (%"class.media::VideoFrame"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %17, i64 1
  %19 = load void (%"class.media::VideoFrame"*)*, void (%"class.media::VideoFrame"*)** %18, align 8
  tail call void %19(%"class.media::VideoFrame"* nonnull %15) #11
  br label %20

20:                                               ; preds = %13, %8, %3
  %21 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %22 = bitcast void (%"class.base::internal::BindStateBase"*)** %21 to %"class.media::VideoFramePool::PoolImpl"**
  %23 = load %"class.media::VideoFramePool::PoolImpl"*, %"class.media::VideoFramePool::PoolImpl"** %22, align 8
  %24 = icmp eq %"class.media::VideoFramePool::PoolImpl"* %23, null
  br i1 %24, label %44, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.media::VideoFramePool::PoolImpl", %"class.media::VideoFramePool::PoolImpl"* %23, i64 0, i32 0
  %27 = getelementptr inbounds %"class.media::VideoFramePool::PoolImpl", %"class.media::VideoFramePool::PoolImpl"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw sub i32* %27, i32 1 acq_rel
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %44

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %26, i64 14
  %32 = bitcast %"class.base::RefCountedThreadSafe"* %31 to %"class.base::circular_deque"*
  %33 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %26, i64 18
  %34 = bitcast %"class.base::RefCountedThreadSafe"* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %26, i64 20
  %37 = bitcast %"class.base::RefCountedThreadSafe"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  tail call void @_ZN4base14circular_dequeIN5media14VideoFramePool8PoolImpl10FrameEntryEE13DestructRangeEmm(%"class.base::circular_deque"* %32, i64 %35, i64 %38) #11
  %39 = bitcast %"class.base::RefCountedThreadSafe"* %31 to i8**
  %40 = load i8*, i8** %39, align 8
  tail call void @free(i8* %40) #11
  %41 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %26, i64 2
  %42 = bitcast %"class.base::RefCountedThreadSafe"* %41 to %"class.base::internal::LockImpl"*
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %42) #11
  %43 = bitcast %"class.media::VideoFramePool::PoolImpl"* %23 to i8*
  tail call void @_ZdlPv(i8* %43) #12
  br label %44

44:                                               ; preds = %20, %25, %30
  %45 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %45) #12
  br label %46

46:                                               ; preds = %44, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN5media14VideoFramePool8PoolImpl10FrameEntryEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"class.base::internal::VectorBuffer"*
  %5 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %6
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = sub i64 %8, %6
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %8, %6
  %18 = add i64 %17, %16
  br label %19

19:                                               ; preds = %10, %14
  %20 = phi i64 [ %13, %10 ], [ %16, %14 ]
  %21 = phi i64 [ %11, %10 ], [ %18, %14 ]
  %22 = add i64 %21, %1
  %23 = icmp eq i64 %20, 0
  %24 = add i64 %20, -1
  %25 = select i1 %23, i64 0, i64 %24
  %26 = icmp ult i64 %25, %22
  br i1 %26, label %27, label %49

27:                                               ; preds = %19
  %28 = icmp ugt i64 %22, 3
  %29 = select i1 %28, i64 %22, i64 3
  %30 = lshr i64 %25, 2
  %31 = add i64 %30, %25
  %32 = icmp ult i64 %29, %31
  %33 = select i1 %32, i64 %31, i64 %29
  %34 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #11
  %35 = add i64 %33, 1
  %36 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %35, i64 16) #11
  %37 = extractvalue { i64, i1 } %36, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 16, i1 false) #11
  br i1 %37, label %38, label %39, !prof !9

38:                                               ; preds = %27
  tail call void @llvm.trap() #11
  unreachable

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %4, i64 0, i32 1
  %41 = extractvalue { i64, i1 } %36, 0
  %42 = tail call noalias i8* @malloc(i64 %41) #11
  %43 = bitcast <2 x i64>* %3 to i8**
  store i8* %42, i8** %43, align 16
  store i64 %35, i64* %40, align 8
  %44 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeIN5media14VideoFramePool8PoolImpl10FrameEntryEE10MoveBufferERNS_8internal12VectorBufferIS4_EEmmPS8_PmSB_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %44, i64 %6, i64 %8, %"class.base::internal::VectorBuffer"* nonnull %4, i64* %5, i64* %7) #11
  %45 = bitcast %"class.base::circular_deque"* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  call void @free(i8* %46) #11
  %47 = load <2 x i64>, <2 x i64>* %3, align 16
  %48 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #11
  br label %49

49:                                               ; preds = %19, %39
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5media14VideoFramePool8PoolImplEFv13scoped_refptrINS3_10VideoFrameEEEJPS5_S8_EEEDcOT0_DpOT1_: argument 0"}
!5 = distinct !{!5, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5media14VideoFramePool8PoolImplEFv13scoped_refptrINS3_10VideoFrameEEEJPS5_S8_EEEDcOT0_DpOT1_"}
!6 = distinct !{!6, !7, !"_ZN4base8BindOnceIMN5media14VideoFramePool8PoolImplEFv13scoped_refptrINS1_10VideoFrameEEEJPS3_S6_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!7 = distinct !{!7, !"_ZN4base8BindOnceIMN5media14VideoFramePool8PoolImplEFv13scoped_refptrINS1_10VideoFrameEEEJPS3_S6_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!8 = !{i8 0, i8 2}
!9 = !{!"branch_weights", i32 1, i32 2000}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !11}
!13 = distinct !{!13, !11}
!14 = distinct !{!14, !11}
