; ModuleID = '../../v8/src/heap/cppgc/free-list.cc'
source_filename = "../../v8/src/heap/cppgc/free-list.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.cppgc::internal::FreeList" = type { %"struct.std::__1::array", %"struct.std::__1::array", i64 }
%"struct.std::__1::array" = type { [17 x %"class.cppgc::internal::FreeList::Entry"*] }
%"class.cppgc::internal::FreeList::Entry" = type { %"class.cppgc::internal::HeapObjectHeader", %"class.cppgc::internal::FreeList::Entry"* }
%"class.cppgc::internal::HeapObjectHeader" = type { i32, i16, i16 }
%"struct.cppgc::HeapStatistics::FreeListStatistics" = type { %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i64*, i64*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64* }
%"class.std::__1::__vector_base_common" = type { i8 }

@_ZN5cppgc8internal8FreeListC1Ev = hidden unnamed_addr alias void (%"class.cppgc::internal::FreeList"*), void (%"class.cppgc::internal::FreeList"*)* @_ZN5cppgc8internal8FreeListC2Ev
@_ZN5cppgc8internal8FreeListC1EOS1_ = hidden unnamed_addr alias void (%"class.cppgc::internal::FreeList"*, %"class.cppgc::internal::FreeList"*), void (%"class.cppgc::internal::FreeList"*, %"class.cppgc::internal::FreeList"*)* @_ZN5cppgc8internal8FreeListC2EOS1_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5cppgc8internal8FreeListC2Ev(%"class.cppgc::internal::FreeList"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.cppgc::internal::FreeList"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 280, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5cppgc8internal8FreeList5ClearEv(%"class.cppgc::internal::FreeList"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.cppgc::internal::FreeList"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 280, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5cppgc8internal8FreeListC2EOS1_(%"class.cppgc::internal::FreeList"* nocapture, %"class.cppgc::internal::FreeList"* nocapture dereferenceable(280)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.cppgc::internal::FreeList"* %0 to i8*
  %4 = bitcast %"class.cppgc::internal::FreeList"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 136, i1 false)
  %5 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %1, i64 0, i32 1
  %7 = bitcast %"struct.std::__1::array"* %5 to i8*
  %8 = bitcast %"struct.std::__1::array"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 136, i1 false)
  %9 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %1, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %9, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 280, i1 false) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(280) %"class.cppgc::internal::FreeList"* @_ZN5cppgc8internal8FreeListaSEOS1_(%"class.cppgc::internal::FreeList"* returned, %"class.cppgc::internal::FreeList"* nocapture dereferenceable(280)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.cppgc::internal::FreeList"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 280, i1 false) #10
  br label %4

4:                                                ; preds = %23, %2
  %5 = phi i64 [ 0, %2 ], [ %24, %23 ]
  %6 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %1, i64 0, i32 1, i32 0, i64 %5
  %7 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %6, align 8
  %8 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 %5
  %9 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %7, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %4
  %11 = bitcast %"class.cppgc::internal::FreeList::Entry"** %8 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %7, i64 0, i32 1
  %14 = bitcast %"class.cppgc::internal::FreeList::Entry"** %13 to i64*
  store i64 %12, i64* %14, align 8
  %15 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %8, align 8
  %16 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 1, i32 0, i64 %5
  store %"class.cppgc::internal::FreeList::Entry"* %7, %"class.cppgc::internal::FreeList::Entry"** %18, align 8
  br label %19

19:                                               ; preds = %17, %10
  %20 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %1, i64 0, i32 0, i32 0, i64 %5
  %21 = bitcast %"class.cppgc::internal::FreeList::Entry"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  store i64 %22, i64* %11, align 8
  store %"class.cppgc::internal::FreeList::Entry"* null, %"class.cppgc::internal::FreeList::Entry"** %20, align 8
  store %"class.cppgc::internal::FreeList::Entry"* null, %"class.cppgc::internal::FreeList::Entry"** %6, align 8
  br label %23

23:                                               ; preds = %19, %4
  %24 = add nuw nsw i64 %5, 1
  %25 = icmp eq i64 %24, 17
  br i1 %25, label %26, label %4

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 2
  %28 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %1, i64 0, i32 2
  %29 = load i64, i64* %27, align 8
  %30 = load i64, i64* %28, align 8
  %31 = icmp ult i64 %29, %30
  %32 = select i1 %31, i64 %30, i64 %29
  store i64 %32, i64* %27, align 8
  store i64 0, i64* %28, align 8
  ret %"class.cppgc::internal::FreeList"* %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5cppgc8internal8FreeList6AppendEOS1_(%"class.cppgc::internal::FreeList"* nocapture, %"class.cppgc::internal::FreeList"* nocapture dereferenceable(280)) local_unnamed_addr #2 align 2 {
  br label %10

3:                                                ; preds = %29
  %4 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %1, i64 0, i32 2
  %6 = load i64, i64* %4, align 8
  %7 = load i64, i64* %5, align 8
  %8 = icmp ult i64 %6, %7
  %9 = select i1 %8, i64 %7, i64 %6
  store i64 %9, i64* %4, align 8
  store i64 0, i64* %5, align 8
  ret void

10:                                               ; preds = %29, %2
  %11 = phi i64 [ 0, %2 ], [ %30, %29 ]
  %12 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %1, i64 0, i32 1, i32 0, i64 %11
  %13 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %12, align 8
  %14 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 %11
  %15 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %13, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.cppgc::internal::FreeList::Entry"** %14 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %13, i64 0, i32 1
  %20 = bitcast %"class.cppgc::internal::FreeList::Entry"** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %14, align 8
  %22 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %21, null
  br i1 %22, label %23, label %25

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 1, i32 0, i64 %11
  store %"class.cppgc::internal::FreeList::Entry"* %13, %"class.cppgc::internal::FreeList::Entry"** %24, align 8
  br label %25

25:                                               ; preds = %16, %23
  %26 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %1, i64 0, i32 0, i32 0, i64 %11
  %27 = bitcast %"class.cppgc::internal::FreeList::Entry"** %26 to i64*
  %28 = load i64, i64* %27, align 8
  store i64 %28, i64* %17, align 8
  store %"class.cppgc::internal::FreeList::Entry"* null, %"class.cppgc::internal::FreeList::Entry"** %26, align 8
  store %"class.cppgc::internal::FreeList::Entry"* null, %"class.cppgc::internal::FreeList::Entry"** %12, align 8
  br label %29

29:                                               ; preds = %10, %25
  %30 = add nuw nsw i64 %11, 1
  %31 = icmp eq i64 %30, 17
  br i1 %31, label %3, label %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5cppgc8internal8FreeList3AddENS1_5BlockE(%"class.cppgc::internal::FreeList"* nocapture, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = icmp ult i64 %2, 16
  %5 = bitcast i8* %1 to i32*
  store i32 0, i32* %5, align 4
  %6 = lshr i64 %2, 2
  %7 = trunc i64 %6 to i16
  %8 = and i16 %7, -2
  %9 = getelementptr inbounds i8, i8* %1, i64 6
  %10 = bitcast i8* %9 to i16*
  store i16 %8, i16* %10, align 2
  %11 = getelementptr inbounds i8, i8* %1, i64 4
  %12 = bitcast i8* %11 to i16*
  store atomic i16 0, i16* %12 monotonic, align 2
  br i1 %4, label %41, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds i8, i8* %1, i64 8
  %15 = bitcast i8* %14 to %"class.cppgc::internal::FreeList::Entry"**
  store %"class.cppgc::internal::FreeList::Entry"* null, %"class.cppgc::internal::FreeList::Entry"** %15, align 8
  %16 = trunc i64 %2 to i32
  %17 = icmp ugt i32 %16, -2147483648
  br i1 %17, label %23, label %18

18:                                               ; preds = %13
  %19 = tail call i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32 %16) #10
  %20 = icmp ugt i32 %19, %16
  %21 = zext i1 %20 to i32
  %22 = lshr i32 %19, %21
  br label %23

23:                                               ; preds = %13, %18
  %24 = phi i32 [ %22, %18 ], [ -2147483648, %13 ]
  %25 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true) #10, !range !2
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 %26
  %28 = bitcast %"class.cppgc::internal::FreeList::Entry"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast i8* %14 to i64*
  store i64 %29, i64* %30, align 8
  %31 = bitcast %"class.cppgc::internal::FreeList::Entry"** %27 to i8**
  store i8* %1, i8** %31, align 8
  %32 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 2
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %26
  %35 = select i1 %34, i64 %26, i64 %33
  store i64 %35, i64* %32, align 8
  %36 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %15, align 8
  %37 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %36, null
  br i1 %37, label %38, label %41

38:                                               ; preds = %23
  %39 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 1, i32 0, i64 %26
  %40 = bitcast %"class.cppgc::internal::FreeList::Entry"** %39 to i8**
  store i8* %1, i8** %40, align 8
  br label %41

41:                                               ; preds = %3, %38, %23
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden { i8*, i64 } @_ZN5cppgc8internal8FreeList8AllocateEm(%"class.cppgc::internal::FreeList"* nocapture, i64) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %48, label %6

6:                                                ; preds = %2
  %7 = shl i64 1, %4
  br label %8

8:                                                ; preds = %6, %44
  %9 = phi i64 [ %45, %44 ], [ %4, %6 ]
  %10 = phi i64 [ %46, %44 ], [ %7, %6 ]
  %11 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 %9
  %12 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %11, align 8
  %13 = icmp ult i64 %10, %1
  %14 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %12, null
  br i1 %13, label %15, label %23

15:                                               ; preds = %8
  br i1 %14, label %48, label %16

16:                                               ; preds = %15
  %17 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %12, i64 0, i32 0, i32 2
  %18 = load i16, i16* %17, align 2
  %19 = lshr i16 %18, 1
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  %22 = icmp ult i64 %21, %1
  br i1 %22, label %48, label %24

23:                                               ; preds = %8
  br i1 %14, label %44, label %24

24:                                               ; preds = %23, %16
  %25 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 %9
  %26 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %12, i64 0, i32 1
  %27 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %26, align 8
  %28 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = ptrtoint %"class.cppgc::internal::FreeList::Entry"* %27 to i64
  br label %35

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 1, i32 0, i64 %9
  store %"class.cppgc::internal::FreeList::Entry"* null, %"class.cppgc::internal::FreeList::Entry"** %32, align 8
  %33 = bitcast %"class.cppgc::internal::FreeList::Entry"** %26 to i64*
  %34 = load i64, i64* %33, align 8
  br label %35

35:                                               ; preds = %29, %31
  %36 = phi i64 [ %34, %31 ], [ %30, %29 ]
  %37 = bitcast %"class.cppgc::internal::FreeList::Entry"** %25 to i64*
  store i64 %36, i64* %37, align 8
  store %"class.cppgc::internal::FreeList::Entry"* null, %"class.cppgc::internal::FreeList::Entry"** %26, align 8
  store i64 %9, i64* %3, align 8
  %38 = bitcast %"class.cppgc::internal::FreeList::Entry"* %12 to i8*
  %39 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %12, i64 0, i32 0, i32 2
  %40 = load i16, i16* %39, align 2
  %41 = lshr i16 %40, 1
  %42 = zext i16 %41 to i64
  %43 = shl nuw nsw i64 %42, 3
  br label %50

44:                                               ; preds = %23
  %45 = add i64 %9, -1
  %46 = lshr i64 %10, 1
  %47 = icmp eq i64 %45, 0
  br i1 %47, label %48, label %8

48:                                               ; preds = %44, %2, %16, %15
  %49 = phi i64 [ %9, %16 ], [ %9, %15 ], [ 0, %2 ], [ 0, %44 ]
  store i64 %49, i64* %3, align 8
  br label %50

50:                                               ; preds = %35, %48
  %51 = phi i8* [ null, %48 ], [ %38, %35 ]
  %52 = phi i64 [ 0, %48 ], [ %43, %35 ]
  %53 = insertvalue { i8*, i64 } undef, i8* %51, 0
  %54 = insertvalue { i8*, i64 } %53, i64 %52, 1
  ret { i8*, i64 } %54
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5cppgc8internal8FreeList4SizeEv(%"class.cppgc::internal::FreeList"* readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 0
  %3 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %2, align 8
  %4 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %3, null
  br i1 %4, label %17, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"class.cppgc::internal::FreeList::Entry"* [ %15, %5 ], [ %3, %1 ]
  %7 = phi i64 [ %13, %5 ], [ 0, %1 ]
  %8 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %6, i64 0, i32 0, i32 2
  %9 = load i16, i16* %8, align 2
  %10 = lshr i16 %9, 1
  %11 = zext i16 %10 to i64
  %12 = shl nuw nsw i64 %11, 3
  %13 = add i64 %12, %7
  %14 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %6, i64 0, i32 1
  %15 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %14, align 8
  %16 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %15, null
  br i1 %16, label %17, label %5

17:                                               ; preds = %5, %1
  %18 = phi i64 [ 0, %1 ], [ %13, %5 ]
  %19 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 1
  %20 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %19, align 8
  %21 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %20, null
  br i1 %21, label %34, label %22

22:                                               ; preds = %17, %22
  %23 = phi %"class.cppgc::internal::FreeList::Entry"* [ %32, %22 ], [ %20, %17 ]
  %24 = phi i64 [ %30, %22 ], [ %18, %17 ]
  %25 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %23, i64 0, i32 0, i32 2
  %26 = load i16, i16* %25, align 2
  %27 = lshr i16 %26, 1
  %28 = zext i16 %27 to i64
  %29 = shl nuw nsw i64 %28, 3
  %30 = add i64 %29, %24
  %31 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %23, i64 0, i32 1
  %32 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %31, align 8
  %33 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %32, null
  br i1 %33, label %34, label %22

34:                                               ; preds = %22, %17
  %35 = phi i64 [ %18, %17 ], [ %30, %22 ]
  %36 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 2
  %37 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %36, align 8
  %38 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %37, null
  br i1 %38, label %51, label %39

39:                                               ; preds = %34, %39
  %40 = phi %"class.cppgc::internal::FreeList::Entry"* [ %49, %39 ], [ %37, %34 ]
  %41 = phi i64 [ %47, %39 ], [ %35, %34 ]
  %42 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %40, i64 0, i32 0, i32 2
  %43 = load i16, i16* %42, align 2
  %44 = lshr i16 %43, 1
  %45 = zext i16 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  %47 = add i64 %46, %41
  %48 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %40, i64 0, i32 1
  %49 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %48, align 8
  %50 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %49, null
  br i1 %50, label %51, label %39

51:                                               ; preds = %39, %34
  %52 = phi i64 [ %35, %34 ], [ %47, %39 ]
  %53 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 3
  %54 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %53, align 8
  %55 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %54, null
  br i1 %55, label %68, label %56

56:                                               ; preds = %51, %56
  %57 = phi %"class.cppgc::internal::FreeList::Entry"* [ %66, %56 ], [ %54, %51 ]
  %58 = phi i64 [ %64, %56 ], [ %52, %51 ]
  %59 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %57, i64 0, i32 0, i32 2
  %60 = load i16, i16* %59, align 2
  %61 = lshr i16 %60, 1
  %62 = zext i16 %61 to i64
  %63 = shl nuw nsw i64 %62, 3
  %64 = add i64 %63, %58
  %65 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %57, i64 0, i32 1
  %66 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %65, align 8
  %67 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %66, null
  br i1 %67, label %68, label %56

68:                                               ; preds = %56, %51
  %69 = phi i64 [ %52, %51 ], [ %64, %56 ]
  %70 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 4
  %71 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %70, align 8
  %72 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %71, null
  br i1 %72, label %85, label %73

73:                                               ; preds = %68, %73
  %74 = phi %"class.cppgc::internal::FreeList::Entry"* [ %83, %73 ], [ %71, %68 ]
  %75 = phi i64 [ %81, %73 ], [ %69, %68 ]
  %76 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %74, i64 0, i32 0, i32 2
  %77 = load i16, i16* %76, align 2
  %78 = lshr i16 %77, 1
  %79 = zext i16 %78 to i64
  %80 = shl nuw nsw i64 %79, 3
  %81 = add i64 %80, %75
  %82 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %74, i64 0, i32 1
  %83 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %82, align 8
  %84 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %83, null
  br i1 %84, label %85, label %73

85:                                               ; preds = %73, %68
  %86 = phi i64 [ %69, %68 ], [ %81, %73 ]
  %87 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 5
  %88 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %87, align 8
  %89 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %88, null
  br i1 %89, label %102, label %90

90:                                               ; preds = %85, %90
  %91 = phi %"class.cppgc::internal::FreeList::Entry"* [ %100, %90 ], [ %88, %85 ]
  %92 = phi i64 [ %98, %90 ], [ %86, %85 ]
  %93 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %91, i64 0, i32 0, i32 2
  %94 = load i16, i16* %93, align 2
  %95 = lshr i16 %94, 1
  %96 = zext i16 %95 to i64
  %97 = shl nuw nsw i64 %96, 3
  %98 = add i64 %97, %92
  %99 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %91, i64 0, i32 1
  %100 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %99, align 8
  %101 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %100, null
  br i1 %101, label %102, label %90

102:                                              ; preds = %90, %85
  %103 = phi i64 [ %86, %85 ], [ %98, %90 ]
  %104 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 6
  %105 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %104, align 8
  %106 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %105, null
  br i1 %106, label %119, label %107

107:                                              ; preds = %102, %107
  %108 = phi %"class.cppgc::internal::FreeList::Entry"* [ %117, %107 ], [ %105, %102 ]
  %109 = phi i64 [ %115, %107 ], [ %103, %102 ]
  %110 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %108, i64 0, i32 0, i32 2
  %111 = load i16, i16* %110, align 2
  %112 = lshr i16 %111, 1
  %113 = zext i16 %112 to i64
  %114 = shl nuw nsw i64 %113, 3
  %115 = add i64 %114, %109
  %116 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %108, i64 0, i32 1
  %117 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %116, align 8
  %118 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %117, null
  br i1 %118, label %119, label %107

119:                                              ; preds = %107, %102
  %120 = phi i64 [ %103, %102 ], [ %115, %107 ]
  %121 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 7
  %122 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %121, align 8
  %123 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %122, null
  br i1 %123, label %136, label %124

124:                                              ; preds = %119, %124
  %125 = phi %"class.cppgc::internal::FreeList::Entry"* [ %134, %124 ], [ %122, %119 ]
  %126 = phi i64 [ %132, %124 ], [ %120, %119 ]
  %127 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %125, i64 0, i32 0, i32 2
  %128 = load i16, i16* %127, align 2
  %129 = lshr i16 %128, 1
  %130 = zext i16 %129 to i64
  %131 = shl nuw nsw i64 %130, 3
  %132 = add i64 %131, %126
  %133 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %125, i64 0, i32 1
  %134 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %133, align 8
  %135 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %134, null
  br i1 %135, label %136, label %124

136:                                              ; preds = %124, %119
  %137 = phi i64 [ %120, %119 ], [ %132, %124 ]
  %138 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 8
  %139 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %138, align 8
  %140 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %139, null
  br i1 %140, label %153, label %141

141:                                              ; preds = %136, %141
  %142 = phi %"class.cppgc::internal::FreeList::Entry"* [ %151, %141 ], [ %139, %136 ]
  %143 = phi i64 [ %149, %141 ], [ %137, %136 ]
  %144 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %142, i64 0, i32 0, i32 2
  %145 = load i16, i16* %144, align 2
  %146 = lshr i16 %145, 1
  %147 = zext i16 %146 to i64
  %148 = shl nuw nsw i64 %147, 3
  %149 = add i64 %148, %143
  %150 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %142, i64 0, i32 1
  %151 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %150, align 8
  %152 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %151, null
  br i1 %152, label %153, label %141

153:                                              ; preds = %141, %136
  %154 = phi i64 [ %137, %136 ], [ %149, %141 ]
  %155 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 9
  %156 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %155, align 8
  %157 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %156, null
  br i1 %157, label %170, label %158

158:                                              ; preds = %153, %158
  %159 = phi %"class.cppgc::internal::FreeList::Entry"* [ %168, %158 ], [ %156, %153 ]
  %160 = phi i64 [ %166, %158 ], [ %154, %153 ]
  %161 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %159, i64 0, i32 0, i32 2
  %162 = load i16, i16* %161, align 2
  %163 = lshr i16 %162, 1
  %164 = zext i16 %163 to i64
  %165 = shl nuw nsw i64 %164, 3
  %166 = add i64 %165, %160
  %167 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %159, i64 0, i32 1
  %168 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %167, align 8
  %169 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %168, null
  br i1 %169, label %170, label %158

170:                                              ; preds = %158, %153
  %171 = phi i64 [ %154, %153 ], [ %166, %158 ]
  %172 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 10
  %173 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %172, align 8
  %174 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %173, null
  br i1 %174, label %187, label %175

175:                                              ; preds = %170, %175
  %176 = phi %"class.cppgc::internal::FreeList::Entry"* [ %185, %175 ], [ %173, %170 ]
  %177 = phi i64 [ %183, %175 ], [ %171, %170 ]
  %178 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %176, i64 0, i32 0, i32 2
  %179 = load i16, i16* %178, align 2
  %180 = lshr i16 %179, 1
  %181 = zext i16 %180 to i64
  %182 = shl nuw nsw i64 %181, 3
  %183 = add i64 %182, %177
  %184 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %176, i64 0, i32 1
  %185 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %184, align 8
  %186 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %185, null
  br i1 %186, label %187, label %175

187:                                              ; preds = %175, %170
  %188 = phi i64 [ %171, %170 ], [ %183, %175 ]
  %189 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 11
  %190 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %189, align 8
  %191 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %190, null
  br i1 %191, label %204, label %192

192:                                              ; preds = %187, %192
  %193 = phi %"class.cppgc::internal::FreeList::Entry"* [ %202, %192 ], [ %190, %187 ]
  %194 = phi i64 [ %200, %192 ], [ %188, %187 ]
  %195 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %193, i64 0, i32 0, i32 2
  %196 = load i16, i16* %195, align 2
  %197 = lshr i16 %196, 1
  %198 = zext i16 %197 to i64
  %199 = shl nuw nsw i64 %198, 3
  %200 = add i64 %199, %194
  %201 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %193, i64 0, i32 1
  %202 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %201, align 8
  %203 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %202, null
  br i1 %203, label %204, label %192

204:                                              ; preds = %192, %187
  %205 = phi i64 [ %188, %187 ], [ %200, %192 ]
  %206 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 12
  %207 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %206, align 8
  %208 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %207, null
  br i1 %208, label %221, label %209

209:                                              ; preds = %204, %209
  %210 = phi %"class.cppgc::internal::FreeList::Entry"* [ %219, %209 ], [ %207, %204 ]
  %211 = phi i64 [ %217, %209 ], [ %205, %204 ]
  %212 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %210, i64 0, i32 0, i32 2
  %213 = load i16, i16* %212, align 2
  %214 = lshr i16 %213, 1
  %215 = zext i16 %214 to i64
  %216 = shl nuw nsw i64 %215, 3
  %217 = add i64 %216, %211
  %218 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %210, i64 0, i32 1
  %219 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %218, align 8
  %220 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %219, null
  br i1 %220, label %221, label %209

221:                                              ; preds = %209, %204
  %222 = phi i64 [ %205, %204 ], [ %217, %209 ]
  %223 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 13
  %224 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %223, align 8
  %225 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %224, null
  br i1 %225, label %238, label %226

226:                                              ; preds = %221, %226
  %227 = phi %"class.cppgc::internal::FreeList::Entry"* [ %236, %226 ], [ %224, %221 ]
  %228 = phi i64 [ %234, %226 ], [ %222, %221 ]
  %229 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %227, i64 0, i32 0, i32 2
  %230 = load i16, i16* %229, align 2
  %231 = lshr i16 %230, 1
  %232 = zext i16 %231 to i64
  %233 = shl nuw nsw i64 %232, 3
  %234 = add i64 %233, %228
  %235 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %227, i64 0, i32 1
  %236 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %235, align 8
  %237 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %236, null
  br i1 %237, label %238, label %226

238:                                              ; preds = %226, %221
  %239 = phi i64 [ %222, %221 ], [ %234, %226 ]
  %240 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 14
  %241 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %240, align 8
  %242 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %241, null
  br i1 %242, label %255, label %243

243:                                              ; preds = %238, %243
  %244 = phi %"class.cppgc::internal::FreeList::Entry"* [ %253, %243 ], [ %241, %238 ]
  %245 = phi i64 [ %251, %243 ], [ %239, %238 ]
  %246 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %244, i64 0, i32 0, i32 2
  %247 = load i16, i16* %246, align 2
  %248 = lshr i16 %247, 1
  %249 = zext i16 %248 to i64
  %250 = shl nuw nsw i64 %249, 3
  %251 = add i64 %250, %245
  %252 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %244, i64 0, i32 1
  %253 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %252, align 8
  %254 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %253, null
  br i1 %254, label %255, label %243

255:                                              ; preds = %243, %238
  %256 = phi i64 [ %239, %238 ], [ %251, %243 ]
  %257 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 15
  %258 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %257, align 8
  %259 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %258, null
  br i1 %259, label %272, label %260

260:                                              ; preds = %255, %260
  %261 = phi %"class.cppgc::internal::FreeList::Entry"* [ %270, %260 ], [ %258, %255 ]
  %262 = phi i64 [ %268, %260 ], [ %256, %255 ]
  %263 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %261, i64 0, i32 0, i32 2
  %264 = load i16, i16* %263, align 2
  %265 = lshr i16 %264, 1
  %266 = zext i16 %265 to i64
  %267 = shl nuw nsw i64 %266, 3
  %268 = add i64 %267, %262
  %269 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %261, i64 0, i32 1
  %270 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %269, align 8
  %271 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %270, null
  br i1 %271, label %272, label %260

272:                                              ; preds = %260, %255
  %273 = phi i64 [ %256, %255 ], [ %268, %260 ]
  %274 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 16
  %275 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %274, align 8
  %276 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %275, null
  br i1 %276, label %289, label %277

277:                                              ; preds = %272, %277
  %278 = phi %"class.cppgc::internal::FreeList::Entry"* [ %287, %277 ], [ %275, %272 ]
  %279 = phi i64 [ %285, %277 ], [ %273, %272 ]
  %280 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %278, i64 0, i32 0, i32 2
  %281 = load i16, i16* %280, align 2
  %282 = lshr i16 %281, 1
  %283 = zext i16 %282 to i64
  %284 = shl nuw nsw i64 %283, 3
  %285 = add i64 %284, %279
  %286 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %278, i64 0, i32 1
  %287 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %286, align 8
  %288 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %287, null
  br i1 %288, label %289, label %277

289:                                              ; preds = %277, %272
  %290 = phi i64 [ %273, %272 ], [ %285, %277 ]
  ret i64 %290
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5cppgc8internal8FreeList7IsEmptyEv(%"class.cppgc::internal::FreeList"* readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 0
  %3 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %2, align 8
  %4 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %3, null
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 1
  %7 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %6, align 8
  %8 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %62, %58, %54, %50, %46, %42, %38, %34, %30, %26, %22, %18, %14, %10, %5, %1
  ret i1 false

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 2
  %12 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %11, align 8
  %13 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %12, null
  br i1 %13, label %14, label %9

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 3
  %16 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %15, align 8
  %17 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %16, null
  br i1 %17, label %18, label %9

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 4
  %20 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %19, align 8
  %21 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %20, null
  br i1 %21, label %22, label %9

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 5
  %24 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %23, align 8
  %25 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %24, null
  br i1 %25, label %26, label %9

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 6
  %28 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %27, align 8
  %29 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %28, null
  br i1 %29, label %30, label %9

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 7
  %32 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %31, align 8
  %33 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %32, null
  br i1 %33, label %34, label %9

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 8
  %36 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %35, align 8
  %37 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %36, null
  br i1 %37, label %38, label %9

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 9
  %40 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %39, align 8
  %41 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %40, null
  br i1 %41, label %42, label %9

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 10
  %44 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %43, align 8
  %45 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %44, null
  br i1 %45, label %46, label %9

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 11
  %48 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %47, align 8
  %49 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %48, null
  br i1 %49, label %50, label %9

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 12
  %52 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %51, align 8
  %53 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %52, null
  br i1 %53, label %54, label %9

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 13
  %56 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %55, align 8
  %57 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %56, null
  br i1 %57, label %58, label %9

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 14
  %60 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %59, align 8
  %61 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %60, null
  br i1 %61, label %62, label %9

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 15
  %64 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %63, align 8
  %65 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %64, null
  br i1 %65, label %66, label %9

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 16
  %68 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %67, align 8
  %69 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %68, null
  ret i1 %69
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5cppgc8internal8FreeList18ContainsForTestingENS1_5BlockE(%"class.cppgc::internal::FreeList"* readonly, i8* readnone, i64) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 0
  %5 = getelementptr inbounds i8, i8* %1, i64 %2
  %6 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %4, align 8
  %7 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %6, null
  br i1 %7, label %24, label %8

8:                                                ; preds = %3, %20
  %9 = phi %"class.cppgc::internal::FreeList::Entry"* [ %22, %20 ], [ %6, %3 ]
  %10 = bitcast %"class.cppgc::internal::FreeList::Entry"* %9 to i8*
  %11 = icmp ugt i8* %10, %1
  br i1 %11, label %20, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %9, i64 0, i32 0, i32 2
  %14 = load i16, i16* %13, align 2
  %15 = lshr i16 %14, 1
  %16 = zext i16 %15 to i64
  %17 = shl nuw nsw i64 %16, 3
  %18 = getelementptr inbounds i8, i8* %10, i64 %17
  %19 = icmp ugt i8* %5, %18
  br i1 %19, label %20, label %28

20:                                               ; preds = %12, %8
  %21 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %9, i64 0, i32 1
  %22 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %21, align 8
  %23 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %22, null
  br i1 %23, label %24, label %8

24:                                               ; preds = %20, %3
  %25 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 1
  %26 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %25, align 8
  %27 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %26, null
  br i1 %27, label %46, label %30

28:                                               ; preds = %12, %34, %54, %74, %94, %114, %134, %154, %174, %194, %214, %234, %254, %274, %294, %314, %342, %334, %326
  %29 = phi i1 [ false, %326 ], [ false, %342 ], [ true, %334 ], [ true, %314 ], [ true, %294 ], [ true, %274 ], [ true, %254 ], [ true, %234 ], [ true, %214 ], [ true, %194 ], [ true, %174 ], [ true, %154 ], [ true, %134 ], [ true, %114 ], [ true, %94 ], [ true, %74 ], [ true, %54 ], [ true, %34 ], [ true, %12 ]
  ret i1 %29

30:                                               ; preds = %24, %42
  %31 = phi %"class.cppgc::internal::FreeList::Entry"* [ %44, %42 ], [ %26, %24 ]
  %32 = bitcast %"class.cppgc::internal::FreeList::Entry"* %31 to i8*
  %33 = icmp ugt i8* %32, %1
  br i1 %33, label %42, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %31, i64 0, i32 0, i32 2
  %36 = load i16, i16* %35, align 2
  %37 = lshr i16 %36, 1
  %38 = zext i16 %37 to i64
  %39 = shl nuw nsw i64 %38, 3
  %40 = getelementptr inbounds i8, i8* %32, i64 %39
  %41 = icmp ugt i8* %5, %40
  br i1 %41, label %42, label %28

42:                                               ; preds = %34, %30
  %43 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %31, i64 0, i32 1
  %44 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %43, align 8
  %45 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %44, null
  br i1 %45, label %46, label %30

46:                                               ; preds = %42, %24
  %47 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 2
  %48 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %47, align 8
  %49 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %48, null
  br i1 %49, label %66, label %50

50:                                               ; preds = %46, %62
  %51 = phi %"class.cppgc::internal::FreeList::Entry"* [ %64, %62 ], [ %48, %46 ]
  %52 = bitcast %"class.cppgc::internal::FreeList::Entry"* %51 to i8*
  %53 = icmp ugt i8* %52, %1
  br i1 %53, label %62, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %51, i64 0, i32 0, i32 2
  %56 = load i16, i16* %55, align 2
  %57 = lshr i16 %56, 1
  %58 = zext i16 %57 to i64
  %59 = shl nuw nsw i64 %58, 3
  %60 = getelementptr inbounds i8, i8* %52, i64 %59
  %61 = icmp ugt i8* %5, %60
  br i1 %61, label %62, label %28

62:                                               ; preds = %54, %50
  %63 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %51, i64 0, i32 1
  %64 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %63, align 8
  %65 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %64, null
  br i1 %65, label %66, label %50

66:                                               ; preds = %62, %46
  %67 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 3
  %68 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %67, align 8
  %69 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %68, null
  br i1 %69, label %86, label %70

70:                                               ; preds = %66, %82
  %71 = phi %"class.cppgc::internal::FreeList::Entry"* [ %84, %82 ], [ %68, %66 ]
  %72 = bitcast %"class.cppgc::internal::FreeList::Entry"* %71 to i8*
  %73 = icmp ugt i8* %72, %1
  br i1 %73, label %82, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %71, i64 0, i32 0, i32 2
  %76 = load i16, i16* %75, align 2
  %77 = lshr i16 %76, 1
  %78 = zext i16 %77 to i64
  %79 = shl nuw nsw i64 %78, 3
  %80 = getelementptr inbounds i8, i8* %72, i64 %79
  %81 = icmp ugt i8* %5, %80
  br i1 %81, label %82, label %28

82:                                               ; preds = %74, %70
  %83 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %71, i64 0, i32 1
  %84 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %83, align 8
  %85 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %84, null
  br i1 %85, label %86, label %70

86:                                               ; preds = %82, %66
  %87 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 4
  %88 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %87, align 8
  %89 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %88, null
  br i1 %89, label %106, label %90

90:                                               ; preds = %86, %102
  %91 = phi %"class.cppgc::internal::FreeList::Entry"* [ %104, %102 ], [ %88, %86 ]
  %92 = bitcast %"class.cppgc::internal::FreeList::Entry"* %91 to i8*
  %93 = icmp ugt i8* %92, %1
  br i1 %93, label %102, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %91, i64 0, i32 0, i32 2
  %96 = load i16, i16* %95, align 2
  %97 = lshr i16 %96, 1
  %98 = zext i16 %97 to i64
  %99 = shl nuw nsw i64 %98, 3
  %100 = getelementptr inbounds i8, i8* %92, i64 %99
  %101 = icmp ugt i8* %5, %100
  br i1 %101, label %102, label %28

102:                                              ; preds = %94, %90
  %103 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %91, i64 0, i32 1
  %104 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %103, align 8
  %105 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %104, null
  br i1 %105, label %106, label %90

106:                                              ; preds = %102, %86
  %107 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 5
  %108 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %107, align 8
  %109 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %108, null
  br i1 %109, label %126, label %110

110:                                              ; preds = %106, %122
  %111 = phi %"class.cppgc::internal::FreeList::Entry"* [ %124, %122 ], [ %108, %106 ]
  %112 = bitcast %"class.cppgc::internal::FreeList::Entry"* %111 to i8*
  %113 = icmp ugt i8* %112, %1
  br i1 %113, label %122, label %114

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %111, i64 0, i32 0, i32 2
  %116 = load i16, i16* %115, align 2
  %117 = lshr i16 %116, 1
  %118 = zext i16 %117 to i64
  %119 = shl nuw nsw i64 %118, 3
  %120 = getelementptr inbounds i8, i8* %112, i64 %119
  %121 = icmp ugt i8* %5, %120
  br i1 %121, label %122, label %28

122:                                              ; preds = %114, %110
  %123 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %111, i64 0, i32 1
  %124 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %123, align 8
  %125 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %124, null
  br i1 %125, label %126, label %110

126:                                              ; preds = %122, %106
  %127 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 6
  %128 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %127, align 8
  %129 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %128, null
  br i1 %129, label %146, label %130

130:                                              ; preds = %126, %142
  %131 = phi %"class.cppgc::internal::FreeList::Entry"* [ %144, %142 ], [ %128, %126 ]
  %132 = bitcast %"class.cppgc::internal::FreeList::Entry"* %131 to i8*
  %133 = icmp ugt i8* %132, %1
  br i1 %133, label %142, label %134

134:                                              ; preds = %130
  %135 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %131, i64 0, i32 0, i32 2
  %136 = load i16, i16* %135, align 2
  %137 = lshr i16 %136, 1
  %138 = zext i16 %137 to i64
  %139 = shl nuw nsw i64 %138, 3
  %140 = getelementptr inbounds i8, i8* %132, i64 %139
  %141 = icmp ugt i8* %5, %140
  br i1 %141, label %142, label %28

142:                                              ; preds = %134, %130
  %143 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %131, i64 0, i32 1
  %144 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %143, align 8
  %145 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %144, null
  br i1 %145, label %146, label %130

146:                                              ; preds = %142, %126
  %147 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 7
  %148 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %147, align 8
  %149 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %148, null
  br i1 %149, label %166, label %150

150:                                              ; preds = %146, %162
  %151 = phi %"class.cppgc::internal::FreeList::Entry"* [ %164, %162 ], [ %148, %146 ]
  %152 = bitcast %"class.cppgc::internal::FreeList::Entry"* %151 to i8*
  %153 = icmp ugt i8* %152, %1
  br i1 %153, label %162, label %154

154:                                              ; preds = %150
  %155 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %151, i64 0, i32 0, i32 2
  %156 = load i16, i16* %155, align 2
  %157 = lshr i16 %156, 1
  %158 = zext i16 %157 to i64
  %159 = shl nuw nsw i64 %158, 3
  %160 = getelementptr inbounds i8, i8* %152, i64 %159
  %161 = icmp ugt i8* %5, %160
  br i1 %161, label %162, label %28

162:                                              ; preds = %154, %150
  %163 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %151, i64 0, i32 1
  %164 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %163, align 8
  %165 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %164, null
  br i1 %165, label %166, label %150

166:                                              ; preds = %162, %146
  %167 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 8
  %168 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %167, align 8
  %169 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %168, null
  br i1 %169, label %186, label %170

170:                                              ; preds = %166, %182
  %171 = phi %"class.cppgc::internal::FreeList::Entry"* [ %184, %182 ], [ %168, %166 ]
  %172 = bitcast %"class.cppgc::internal::FreeList::Entry"* %171 to i8*
  %173 = icmp ugt i8* %172, %1
  br i1 %173, label %182, label %174

174:                                              ; preds = %170
  %175 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %171, i64 0, i32 0, i32 2
  %176 = load i16, i16* %175, align 2
  %177 = lshr i16 %176, 1
  %178 = zext i16 %177 to i64
  %179 = shl nuw nsw i64 %178, 3
  %180 = getelementptr inbounds i8, i8* %172, i64 %179
  %181 = icmp ugt i8* %5, %180
  br i1 %181, label %182, label %28

182:                                              ; preds = %174, %170
  %183 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %171, i64 0, i32 1
  %184 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %183, align 8
  %185 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %184, null
  br i1 %185, label %186, label %170

186:                                              ; preds = %182, %166
  %187 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 9
  %188 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %187, align 8
  %189 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %188, null
  br i1 %189, label %206, label %190

190:                                              ; preds = %186, %202
  %191 = phi %"class.cppgc::internal::FreeList::Entry"* [ %204, %202 ], [ %188, %186 ]
  %192 = bitcast %"class.cppgc::internal::FreeList::Entry"* %191 to i8*
  %193 = icmp ugt i8* %192, %1
  br i1 %193, label %202, label %194

194:                                              ; preds = %190
  %195 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %191, i64 0, i32 0, i32 2
  %196 = load i16, i16* %195, align 2
  %197 = lshr i16 %196, 1
  %198 = zext i16 %197 to i64
  %199 = shl nuw nsw i64 %198, 3
  %200 = getelementptr inbounds i8, i8* %192, i64 %199
  %201 = icmp ugt i8* %5, %200
  br i1 %201, label %202, label %28

202:                                              ; preds = %194, %190
  %203 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %191, i64 0, i32 1
  %204 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %203, align 8
  %205 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %204, null
  br i1 %205, label %206, label %190

206:                                              ; preds = %202, %186
  %207 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 10
  %208 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %207, align 8
  %209 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %208, null
  br i1 %209, label %226, label %210

210:                                              ; preds = %206, %222
  %211 = phi %"class.cppgc::internal::FreeList::Entry"* [ %224, %222 ], [ %208, %206 ]
  %212 = bitcast %"class.cppgc::internal::FreeList::Entry"* %211 to i8*
  %213 = icmp ugt i8* %212, %1
  br i1 %213, label %222, label %214

214:                                              ; preds = %210
  %215 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %211, i64 0, i32 0, i32 2
  %216 = load i16, i16* %215, align 2
  %217 = lshr i16 %216, 1
  %218 = zext i16 %217 to i64
  %219 = shl nuw nsw i64 %218, 3
  %220 = getelementptr inbounds i8, i8* %212, i64 %219
  %221 = icmp ugt i8* %5, %220
  br i1 %221, label %222, label %28

222:                                              ; preds = %214, %210
  %223 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %211, i64 0, i32 1
  %224 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %223, align 8
  %225 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %224, null
  br i1 %225, label %226, label %210

226:                                              ; preds = %222, %206
  %227 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 11
  %228 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %227, align 8
  %229 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %228, null
  br i1 %229, label %246, label %230

230:                                              ; preds = %226, %242
  %231 = phi %"class.cppgc::internal::FreeList::Entry"* [ %244, %242 ], [ %228, %226 ]
  %232 = bitcast %"class.cppgc::internal::FreeList::Entry"* %231 to i8*
  %233 = icmp ugt i8* %232, %1
  br i1 %233, label %242, label %234

234:                                              ; preds = %230
  %235 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %231, i64 0, i32 0, i32 2
  %236 = load i16, i16* %235, align 2
  %237 = lshr i16 %236, 1
  %238 = zext i16 %237 to i64
  %239 = shl nuw nsw i64 %238, 3
  %240 = getelementptr inbounds i8, i8* %232, i64 %239
  %241 = icmp ugt i8* %5, %240
  br i1 %241, label %242, label %28

242:                                              ; preds = %234, %230
  %243 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %231, i64 0, i32 1
  %244 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %243, align 8
  %245 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %244, null
  br i1 %245, label %246, label %230

246:                                              ; preds = %242, %226
  %247 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 12
  %248 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %247, align 8
  %249 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %248, null
  br i1 %249, label %266, label %250

250:                                              ; preds = %246, %262
  %251 = phi %"class.cppgc::internal::FreeList::Entry"* [ %264, %262 ], [ %248, %246 ]
  %252 = bitcast %"class.cppgc::internal::FreeList::Entry"* %251 to i8*
  %253 = icmp ugt i8* %252, %1
  br i1 %253, label %262, label %254

254:                                              ; preds = %250
  %255 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %251, i64 0, i32 0, i32 2
  %256 = load i16, i16* %255, align 2
  %257 = lshr i16 %256, 1
  %258 = zext i16 %257 to i64
  %259 = shl nuw nsw i64 %258, 3
  %260 = getelementptr inbounds i8, i8* %252, i64 %259
  %261 = icmp ugt i8* %5, %260
  br i1 %261, label %262, label %28

262:                                              ; preds = %254, %250
  %263 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %251, i64 0, i32 1
  %264 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %263, align 8
  %265 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %264, null
  br i1 %265, label %266, label %250

266:                                              ; preds = %262, %246
  %267 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 13
  %268 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %267, align 8
  %269 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %268, null
  br i1 %269, label %286, label %270

270:                                              ; preds = %266, %282
  %271 = phi %"class.cppgc::internal::FreeList::Entry"* [ %284, %282 ], [ %268, %266 ]
  %272 = bitcast %"class.cppgc::internal::FreeList::Entry"* %271 to i8*
  %273 = icmp ugt i8* %272, %1
  br i1 %273, label %282, label %274

274:                                              ; preds = %270
  %275 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %271, i64 0, i32 0, i32 2
  %276 = load i16, i16* %275, align 2
  %277 = lshr i16 %276, 1
  %278 = zext i16 %277 to i64
  %279 = shl nuw nsw i64 %278, 3
  %280 = getelementptr inbounds i8, i8* %272, i64 %279
  %281 = icmp ugt i8* %5, %280
  br i1 %281, label %282, label %28

282:                                              ; preds = %274, %270
  %283 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %271, i64 0, i32 1
  %284 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %283, align 8
  %285 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %284, null
  br i1 %285, label %286, label %270

286:                                              ; preds = %282, %266
  %287 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 14
  %288 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %287, align 8
  %289 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %288, null
  br i1 %289, label %306, label %290

290:                                              ; preds = %286, %302
  %291 = phi %"class.cppgc::internal::FreeList::Entry"* [ %304, %302 ], [ %288, %286 ]
  %292 = bitcast %"class.cppgc::internal::FreeList::Entry"* %291 to i8*
  %293 = icmp ugt i8* %292, %1
  br i1 %293, label %302, label %294

294:                                              ; preds = %290
  %295 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %291, i64 0, i32 0, i32 2
  %296 = load i16, i16* %295, align 2
  %297 = lshr i16 %296, 1
  %298 = zext i16 %297 to i64
  %299 = shl nuw nsw i64 %298, 3
  %300 = getelementptr inbounds i8, i8* %292, i64 %299
  %301 = icmp ugt i8* %5, %300
  br i1 %301, label %302, label %28

302:                                              ; preds = %294, %290
  %303 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %291, i64 0, i32 1
  %304 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %303, align 8
  %305 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %304, null
  br i1 %305, label %306, label %290

306:                                              ; preds = %302, %286
  %307 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 15
  %308 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %307, align 8
  %309 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %308, null
  br i1 %309, label %326, label %310

310:                                              ; preds = %306, %322
  %311 = phi %"class.cppgc::internal::FreeList::Entry"* [ %324, %322 ], [ %308, %306 ]
  %312 = bitcast %"class.cppgc::internal::FreeList::Entry"* %311 to i8*
  %313 = icmp ugt i8* %312, %1
  br i1 %313, label %322, label %314

314:                                              ; preds = %310
  %315 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %311, i64 0, i32 0, i32 2
  %316 = load i16, i16* %315, align 2
  %317 = lshr i16 %316, 1
  %318 = zext i16 %317 to i64
  %319 = shl nuw nsw i64 %318, 3
  %320 = getelementptr inbounds i8, i8* %312, i64 %319
  %321 = icmp ugt i8* %5, %320
  br i1 %321, label %322, label %28

322:                                              ; preds = %314, %310
  %323 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %311, i64 0, i32 1
  %324 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %323, align 8
  %325 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %324, null
  br i1 %325, label %326, label %310

326:                                              ; preds = %322, %306
  %327 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 16
  %328 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %327, align 8
  %329 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %328, null
  br i1 %329, label %28, label %330

330:                                              ; preds = %326, %342
  %331 = phi %"class.cppgc::internal::FreeList::Entry"* [ %344, %342 ], [ %328, %326 ]
  %332 = bitcast %"class.cppgc::internal::FreeList::Entry"* %331 to i8*
  %333 = icmp ugt i8* %332, %1
  br i1 %333, label %342, label %334

334:                                              ; preds = %330
  %335 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %331, i64 0, i32 0, i32 2
  %336 = load i16, i16* %335, align 2
  %337 = lshr i16 %336, 1
  %338 = zext i16 %337 to i64
  %339 = shl nuw nsw i64 %338, 3
  %340 = getelementptr inbounds i8, i8* %332, i64 %339
  %341 = icmp ugt i8* %5, %340
  br i1 %341, label %342, label %28

342:                                              ; preds = %334, %330
  %343 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %331, i64 0, i32 1
  %344 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %343, align 8
  %345 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %344, null
  br i1 %345, label %28, label %330
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5cppgc8internal8FreeList12IsConsistentEm(%"class.cppgc::internal::FreeList"* nocapture readonly, i64) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 %1
  %4 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %3, align 8
  %5 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %4, null
  %6 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 1, i32 0, i64 %1
  %7 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %6, align 8
  %8 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %7, null
  %9 = or i1 %5, %8
  %10 = and i1 %5, %8
  br i1 %9, label %11, label %13

11:                                               ; preds = %2, %13
  %12 = phi i1 [ %10, %2 ], [ %16, %13 ]
  ret i1 %12

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %7, i64 0, i32 1
  %15 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %14, align 8
  %16 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %15, null
  br label %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5cppgc8internal8FreeList17CollectStatisticsERNS_14HeapStatistics18FreeListStatisticsE(%"class.cppgc::internal::FreeList"* nocapture readonly, %"struct.cppgc::HeapStatistics::FreeListStatistics"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.cppgc::HeapStatistics::FreeListStatistics", %"struct.cppgc::HeapStatistics::FreeListStatistics"* %1, i64 0, i32 1
  %4 = getelementptr inbounds %"struct.cppgc::HeapStatistics::FreeListStatistics", %"struct.cppgc::HeapStatistics::FreeListStatistics"* %1, i64 0, i32 2
  %5 = getelementptr inbounds %"struct.cppgc::HeapStatistics::FreeListStatistics", %"struct.cppgc::HeapStatistics::FreeListStatistics"* %1, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"struct.cppgc::HeapStatistics::FreeListStatistics", %"struct.cppgc::HeapStatistics::FreeListStatistics"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %7 = bitcast i64** %5 to i64*
  %8 = bitcast %"struct.cppgc::HeapStatistics::FreeListStatistics"* %1 to i64*
  %9 = bitcast i64** %6 to i64*
  %10 = getelementptr inbounds %"struct.cppgc::HeapStatistics::FreeListStatistics", %"struct.cppgc::HeapStatistics::FreeListStatistics"* %1, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.cppgc::HeapStatistics::FreeListStatistics", %"struct.cppgc::HeapStatistics::FreeListStatistics"* %1, i64 0, i32 1, i32 0, i32 1
  %12 = getelementptr inbounds %"struct.cppgc::HeapStatistics::FreeListStatistics", %"struct.cppgc::HeapStatistics::FreeListStatistics"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast i64** %11 to i64*
  %14 = bitcast %"class.std::__1::vector"* %3 to i64*
  %15 = bitcast i64** %12 to i64*
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.cppgc::HeapStatistics::FreeListStatistics", %"struct.cppgc::HeapStatistics::FreeListStatistics"* %1, i64 0, i32 2, i32 0, i32 1
  %18 = getelementptr inbounds %"struct.cppgc::HeapStatistics::FreeListStatistics", %"struct.cppgc::HeapStatistics::FreeListStatistics"* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %19 = bitcast i64** %17 to i64*
  %20 = bitcast %"class.std::__1::vector"* %4 to i64*
  %21 = bitcast i64** %18 to i64*
  %22 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  br label %24

23:                                               ; preds = %212
  ret void

24:                                               ; preds = %212, %2
  %25 = phi i64 [ 0, %2 ], [ %213, %212 ]
  %26 = getelementptr inbounds %"class.cppgc::internal::FreeList", %"class.cppgc::internal::FreeList"* %0, i64 0, i32 0, i32 0, i64 %25
  %27 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %26, align 8
  %28 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %27, null
  br i1 %28, label %29, label %215

29:                                               ; preds = %215, %24
  %30 = phi i64 [ 0, %24 ], [ %225, %215 ]
  %31 = phi i64 [ 0, %24 ], [ %219, %215 ]
  %32 = shl i64 1, %25
  %33 = load i64*, i64** %5, align 8
  %34 = load i64*, i64** %6, align 8
  %35 = icmp ult i64* %33, %34
  %36 = ptrtoint i64* %34 to i64
  br i1 %35, label %37, label %40

37:                                               ; preds = %29
  store i64 %32, i64* %33, align 8
  %38 = getelementptr inbounds i64, i64* %33, i64 1
  %39 = ptrtoint i64* %38 to i64
  store i64 %39, i64* %7, align 8
  br label %92

40:                                               ; preds = %29
  %41 = ptrtoint i64* %33 to i64
  %42 = load i64, i64* %8, align 8
  %43 = sub i64 %41, %42
  %44 = ashr exact i64 %43, 3
  %45 = add nsw i64 %44, 1
  %46 = icmp ugt i64 %45, 2305843009213693951
  br i1 %46, label %47, label %49

47:                                               ; preds = %40
  %48 = bitcast %"struct.cppgc::HeapStatistics::FreeListStatistics"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %48) #11
  unreachable

49:                                               ; preds = %40
  %50 = sub i64 %36, %42
  %51 = ashr exact i64 %50, 3
  %52 = icmp ult i64 %51, 1152921504606846975
  br i1 %52, label %53, label %61

53:                                               ; preds = %49
  %54 = ashr exact i64 %50, 2
  %55 = icmp ult i64 %54, %45
  %56 = select i1 %55, i64 %45, i64 %54
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %66, label %58

58:                                               ; preds = %53
  %59 = icmp ugt i64 %56, 2305843009213693951
  br i1 %59, label %60, label %61

60:                                               ; preds = %58
  tail call void @abort() #11
  unreachable

61:                                               ; preds = %58, %49
  %62 = phi i64 [ %56, %58 ], [ 2305843009213693951, %49 ]
  %63 = shl i64 %62, 3
  %64 = tail call i8* @_Znwm(i64 %63) #12
  %65 = bitcast i8* %64 to i64*
  br label %66

66:                                               ; preds = %61, %53
  %67 = phi i64 [ %62, %61 ], [ 0, %53 ]
  %68 = phi i64* [ %65, %61 ], [ null, %53 ]
  %69 = getelementptr inbounds i64, i64* %68, i64 %44
  %70 = getelementptr inbounds i64, i64* %68, i64 %67
  %71 = ptrtoint i64* %70 to i64
  store i64 %32, i64* %69, align 8
  %72 = getelementptr inbounds i64, i64* %69, i64 1
  %73 = ptrtoint i64* %72 to i64
  %74 = load i64*, i64** %10, align 8
  %75 = load i64, i64* %7, align 8
  %76 = ptrtoint i64* %74 to i64
  %77 = sub i64 %75, %76
  %78 = ashr exact i64 %77, 3
  %79 = sub nsw i64 0, %78
  %80 = getelementptr inbounds i64, i64* %69, i64 %79
  %81 = ptrtoint i64* %80 to i64
  %82 = icmp sgt i64 %77, 0
  br i1 %82, label %83, label %87

83:                                               ; preds = %66
  %84 = bitcast i64* %80 to i8*
  %85 = bitcast i64* %74 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %85, i64 %77, i1 false) #10
  %86 = load i64*, i64** %10, align 8
  br label %87

87:                                               ; preds = %83, %66
  %88 = phi i64* [ %74, %66 ], [ %86, %83 ]
  store i64 %81, i64* %8, align 8
  store i64 %73, i64* %7, align 8
  store i64 %71, i64* %9, align 8
  %89 = icmp eq i64* %88, null
  br i1 %89, label %92, label %90

90:                                               ; preds = %87
  %91 = bitcast i64* %88 to i8*
  tail call void @_ZdlPv(i8* %91) #12
  br label %92

92:                                               ; preds = %37, %87, %90
  %93 = load i64*, i64** %11, align 8
  %94 = load i64*, i64** %12, align 8
  %95 = icmp eq i64* %93, %94
  %96 = ptrtoint i64* %94 to i64
  br i1 %95, label %100, label %97

97:                                               ; preds = %92
  store i64 %31, i64* %93, align 8
  %98 = getelementptr inbounds i64, i64* %93, i64 1
  %99 = ptrtoint i64* %98 to i64
  store i64 %99, i64* %13, align 8
  br label %152

100:                                              ; preds = %92
  %101 = ptrtoint i64* %93 to i64
  %102 = load i64, i64* %14, align 8
  %103 = sub i64 %101, %102
  %104 = ashr exact i64 %103, 3
  %105 = add nsw i64 %104, 1
  %106 = icmp ugt i64 %105, 2305843009213693951
  br i1 %106, label %107, label %109

107:                                              ; preds = %100
  %108 = bitcast %"class.std::__1::vector"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %108) #11
  unreachable

109:                                              ; preds = %100
  %110 = sub i64 %96, %102
  %111 = ashr exact i64 %110, 3
  %112 = icmp ult i64 %111, 1152921504606846975
  br i1 %112, label %113, label %121

113:                                              ; preds = %109
  %114 = ashr exact i64 %110, 2
  %115 = icmp ult i64 %114, %105
  %116 = select i1 %115, i64 %105, i64 %114
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %126, label %118

118:                                              ; preds = %113
  %119 = icmp ugt i64 %116, 2305843009213693951
  br i1 %119, label %120, label %121

120:                                              ; preds = %118
  tail call void @abort() #11
  unreachable

121:                                              ; preds = %118, %109
  %122 = phi i64 [ %116, %118 ], [ 2305843009213693951, %109 ]
  %123 = shl i64 %122, 3
  %124 = tail call i8* @_Znwm(i64 %123) #12
  %125 = bitcast i8* %124 to i64*
  br label %126

126:                                              ; preds = %121, %113
  %127 = phi i64 [ %122, %121 ], [ 0, %113 ]
  %128 = phi i64* [ %125, %121 ], [ null, %113 ]
  %129 = getelementptr inbounds i64, i64* %128, i64 %104
  %130 = getelementptr inbounds i64, i64* %128, i64 %127
  %131 = ptrtoint i64* %130 to i64
  store i64 %31, i64* %129, align 8
  %132 = getelementptr inbounds i64, i64* %129, i64 1
  %133 = ptrtoint i64* %132 to i64
  %134 = load i64*, i64** %16, align 8
  %135 = load i64, i64* %13, align 8
  %136 = ptrtoint i64* %134 to i64
  %137 = sub i64 %135, %136
  %138 = ashr exact i64 %137, 3
  %139 = sub nsw i64 0, %138
  %140 = getelementptr inbounds i64, i64* %129, i64 %139
  %141 = ptrtoint i64* %140 to i64
  %142 = icmp sgt i64 %137, 0
  br i1 %142, label %143, label %147

143:                                              ; preds = %126
  %144 = bitcast i64* %140 to i8*
  %145 = bitcast i64* %134 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %144, i8* align 8 %145, i64 %137, i1 false) #10
  %146 = load i64*, i64** %16, align 8
  br label %147

147:                                              ; preds = %143, %126
  %148 = phi i64* [ %134, %126 ], [ %146, %143 ]
  store i64 %141, i64* %14, align 8
  store i64 %133, i64* %13, align 8
  store i64 %131, i64* %15, align 8
  %149 = icmp eq i64* %148, null
  br i1 %149, label %152, label %150

150:                                              ; preds = %147
  %151 = bitcast i64* %148 to i8*
  tail call void @_ZdlPv(i8* %151) #12
  br label %152

152:                                              ; preds = %97, %147, %150
  %153 = load i64*, i64** %17, align 8
  %154 = load i64*, i64** %18, align 8
  %155 = icmp eq i64* %153, %154
  %156 = ptrtoint i64* %154 to i64
  br i1 %155, label %160, label %157

157:                                              ; preds = %152
  store i64 %30, i64* %153, align 8
  %158 = getelementptr inbounds i64, i64* %153, i64 1
  %159 = ptrtoint i64* %158 to i64
  store i64 %159, i64* %19, align 8
  br label %212

160:                                              ; preds = %152
  %161 = ptrtoint i64* %153 to i64
  %162 = load i64, i64* %20, align 8
  %163 = sub i64 %161, %162
  %164 = ashr exact i64 %163, 3
  %165 = add nsw i64 %164, 1
  %166 = icmp ugt i64 %165, 2305843009213693951
  br i1 %166, label %167, label %169

167:                                              ; preds = %160
  %168 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %168) #11
  unreachable

169:                                              ; preds = %160
  %170 = sub i64 %156, %162
  %171 = ashr exact i64 %170, 3
  %172 = icmp ult i64 %171, 1152921504606846975
  br i1 %172, label %173, label %181

173:                                              ; preds = %169
  %174 = ashr exact i64 %170, 2
  %175 = icmp ult i64 %174, %165
  %176 = select i1 %175, i64 %165, i64 %174
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %186, label %178

178:                                              ; preds = %173
  %179 = icmp ugt i64 %176, 2305843009213693951
  br i1 %179, label %180, label %181

180:                                              ; preds = %178
  tail call void @abort() #11
  unreachable

181:                                              ; preds = %178, %169
  %182 = phi i64 [ %176, %178 ], [ 2305843009213693951, %169 ]
  %183 = shl i64 %182, 3
  %184 = tail call i8* @_Znwm(i64 %183) #12
  %185 = bitcast i8* %184 to i64*
  br label %186

186:                                              ; preds = %181, %173
  %187 = phi i64 [ %182, %181 ], [ 0, %173 ]
  %188 = phi i64* [ %185, %181 ], [ null, %173 ]
  %189 = getelementptr inbounds i64, i64* %188, i64 %164
  %190 = getelementptr inbounds i64, i64* %188, i64 %187
  %191 = ptrtoint i64* %190 to i64
  store i64 %30, i64* %189, align 8
  %192 = getelementptr inbounds i64, i64* %189, i64 1
  %193 = ptrtoint i64* %192 to i64
  %194 = load i64*, i64** %22, align 8
  %195 = load i64, i64* %19, align 8
  %196 = ptrtoint i64* %194 to i64
  %197 = sub i64 %195, %196
  %198 = ashr exact i64 %197, 3
  %199 = sub nsw i64 0, %198
  %200 = getelementptr inbounds i64, i64* %189, i64 %199
  %201 = ptrtoint i64* %200 to i64
  %202 = icmp sgt i64 %197, 0
  br i1 %202, label %203, label %207

203:                                              ; preds = %186
  %204 = bitcast i64* %200 to i8*
  %205 = bitcast i64* %194 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %204, i8* align 8 %205, i64 %197, i1 false) #10
  %206 = load i64*, i64** %22, align 8
  br label %207

207:                                              ; preds = %203, %186
  %208 = phi i64* [ %194, %186 ], [ %206, %203 ]
  store i64 %201, i64* %20, align 8
  store i64 %193, i64* %19, align 8
  store i64 %191, i64* %21, align 8
  %209 = icmp eq i64* %208, null
  br i1 %209, label %212, label %210

210:                                              ; preds = %207
  %211 = bitcast i64* %208 to i8*
  tail call void @_ZdlPv(i8* %211) #12
  br label %212

212:                                              ; preds = %157, %207, %210
  %213 = add nuw nsw i64 %25, 1
  %214 = icmp eq i64 %213, 17
  br i1 %214, label %23, label %24

215:                                              ; preds = %24, %215
  %216 = phi %"class.cppgc::internal::FreeList::Entry"* [ %227, %215 ], [ %27, %24 ]
  %217 = phi i64 [ %219, %215 ], [ 0, %24 ]
  %218 = phi i64 [ %225, %215 ], [ 0, %24 ]
  %219 = add i64 %217, 1
  %220 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %216, i64 0, i32 0, i32 2
  %221 = load i16, i16* %220, align 2
  %222 = lshr i16 %221, 1
  %223 = zext i16 %222 to i64
  %224 = shl nuw nsw i64 %223, 3
  %225 = add i64 %224, %218
  %226 = getelementptr inbounds %"class.cppgc::internal::FreeList::Entry", %"class.cppgc::internal::FreeList::Entry"* %216, i64 0, i32 1
  %227 = load %"class.cppgc::internal::FreeList::Entry"*, %"class.cppgc::internal::FreeList::Entry"** %226, align 8
  %228 = icmp eq %"class.cppgc::internal::FreeList::Entry"* %227, null
  br i1 %228, label %29, label %215
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.cttz.i32(i32, i1 immarg) #4

declare i32 @_ZN2v84base4bits21RoundUpToPowerOfTwo32Ej(i32) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 0, i32 33}
