; ModuleID = '../../ui/wm/core/compound_event_filter.cc'
source_filename = "../../ui/wm/core/compound_event_filter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.scoped_refptr = type { %"class.ui::PlatformCursor"* }
%"class.ui::PlatformCursor" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.gfx::Point" = type { i32, i32 }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.33 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.26, i32, i32 }
%class.sk_sp.26 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.28" }
%"struct.std::__1::atomic.28" = type { %"struct.std::__1::__atomic_base.29" }
%"struct.std::__1::__atomic_base.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.33 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"struct.ui::ClassProperty" = type opaque
%"class.wm::CompoundEventFilter" = type { %"class.ui::EventHandler", %"class.base::ObserverList" }
%"class.ui::EventHandler" = type { i32 (...)**, %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.ui::EventDispatcher"**, i64 }
%"class.ui::EventDispatcher" = type { i32 (...)**, %"class.ui::EventDispatcherDelegate"*, %"class.ui::Event"*, %"class.std::__1::vector.8" }
%"class.ui::EventDispatcherDelegate" = type { i32 (...)**, %"class.ui::EventDispatcher"* }
%"class.ui::Event" = type { i32 (...)**, i32, %"class.base::TimeTicks", %"class.ui::LatencyInfo", i32, %"class.ui::Event"*, i8, i8, %"class.ui::EventTarget"*, i32, i32, i32, %"class.std::__1::unique_ptr" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::pair"* }
%"class.ui::EventTarget" = type { i32 (...)**, %"class.std::__1::vector.1", %"class.std::__1::vector.8", %"class.ui::EventHandler"* }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"struct.ui::EventTarget::PrioritizedHandler"*, %"struct.ui::EventTarget::PrioritizedHandler"*, %"class.std::__1::__compressed_pair.3" }
%"struct.ui::EventTarget::PrioritizedHandler" = type <{ %"class.ui::EventHandler"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.ui::EventTarget::PrioritizedHandler"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.base::flat_map.17"* }
%"class.base::flat_map.17" = type opaque
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"class.ui::EventHandler"**, %"class.ui::EventHandler"**, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.ui::EventHandler"** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.19", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.19" = type { %"class.std::__1::__vector_base.20" }
%"class.std::__1::__vector_base.20" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.21" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::Cursor" = type { i32, %class.scoped_refptr, float, %"class.gfx::Point", %class.SkBitmap }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.aura::Window" = type { %"class.ui::LayerDelegate", %"class.ui::LayerOwner", %"class.ui::EventTarget", %"class.ui::GestureConsumer", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", %"class.viz::HostFrameSinkClient", %"class.gfx::Rect", %"class.aura::WindowTreeHost"*, i32, i8, i8, %"class.aura::WindowDelegate"*, %"class.aura::Window"*, %"class.std::__1::vector.61", i8, i32, %class.SkRegion, i32, i8, i8, %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::vector.80", i32, i32, i32, [4 x i8], %"class.base::ObserverList.87", i32, %"class.viz::SubtreeCaptureId", float, %"class.viz::FrameSinkId", i8, i8, i8, %"class.std::__1::unique_ptr.99", %"class.base::WeakPtr.105" }
%"class.ui::LayerDelegate" = type { i32 (...)** }
%"class.ui::LayerOwner" = type { i32 (...)**, %"class.std::__1::unique_ptr.34", %"class.ui::Layer"*, %"class.base::ObserverList.40" }
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.ui::Layer"* }
%"class.ui::Layer" = type opaque
%"class.base::ObserverList.40" = type <{ %"class.std::__1::vector.19", %"class.base::LinkedList.41", i64, i32, [4 x i8] }>
%"class.base::LinkedList.41" = type { %"class.base::LinkNode.42" }
%"class.base::LinkNode.42" = type { %"class.base::internal::LinkNodeBase" }
%"class.ui::GestureConsumer" = type { i32 (...)** }
%"class.ui::PropertyHandler" = type { i32 (...)**, %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.44", %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { i64 }
%"class.ui::metadata::MetaDataProvider" = type { i32 (...)**, %"class.std::__1::map.52" }
%"class.std::__1::map.52" = type { %"class.std::__1::__tree.53" }
%"class.std::__1::__tree.53" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.54", %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"class.viz::HostFrameSinkClient" = type { i32 (...)** }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.aura::WindowTreeHost" = type opaque
%"class.aura::WindowDelegate" = type { %"class.ui::EventHandler" }
%"class.std::__1::vector.61" = type { %"class.std::__1::__vector_base.62" }
%"class.std::__1::__vector_base.62" = type { %"class.aura::Window"**, %"class.aura::Window"**, %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.aura::Window"** }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.aura::LayoutManager"* }
%"class.aura::LayoutManager" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.aura::WindowTargeter"* }
%"class.aura::WindowTargeter" = type opaque
%"class.std::__1::vector.80" = type { %"class.std::__1::__vector_base.81" }
%"class.std::__1::__vector_base.81" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.gfx::Rect"* }
%"class.base::ObserverList.87" = type <{ %"class.std::__1::vector.88", %"class.base::LinkedList.96", i64, i32, [4 x i8] }>
%"class.std::__1::vector.88" = type { %"class.std::__1::__vector_base.89" }
%"class.std::__1::__vector_base.89" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.91" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.90 }
%class.scoped_refptr.90 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.28" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList.96" = type { %"class.base::LinkNode.97" }
%"class.base::LinkNode.97" = type { %"class.base::internal::LinkNodeBase" }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.viz::ParentLocalSurfaceIdAllocator"* }
%"class.viz::ParentLocalSurfaceIdAllocator" = type opaque
%"class.base::WeakPtr.105" = type { %"class.base::internal::WeakPtrBase" }
%"class.ui::MouseEvent" = type { %"class.ui::LocatedEvent", i32, %"class.gfx::Vector2dF", %"struct.ui::PointerDetails" }
%"class.ui::LocatedEvent" = type { %"class.ui::Event", %"class.gfx::PointF", %"class.gfx::PointF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::Vector2dF" = type { float, float }
%"struct.ui::PointerDetails" = type { i32, float, float, float, float, float, float, float, i32, %"class.gfx::Vector2d" }
%"class.gfx::Vector2d" = type { i32, i32 }
%"class.aura::client::DragDropClient" = type { i32 (...)** }
%"class.aura::client::CursorClient" = type { i32 (...)** }
%"class.ui::KeyEvent" = type <{ %"class.ui::Event", i32, i32, i32, i8, [3 x i8], %"class.ui::DomKey", [4 x i8] }>
%"class.ui::DomKey" = type { i32 }
%"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter" = type { %"class.base::internal::WeakLinkNode", i64, i64 }
%"class.base::internal::WeakLinkNode" = type { %"class.base::LinkNode", %"class.base::ObserverList"* }
%"class.ui::TouchEvent" = type <{ %"class.ui::LocatedEvent", i32, i8, i8, [2 x i8], %"struct.ui::PointerDetails", [4 x i8] }>
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.188", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector.188" = type { %"class.std::__1::__vector_base.189" }
%"class.std::__1::__vector_base.189" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.190", i64, i64 }
%"class.std::__1::unique_ptr.190" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.201" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"class.ui::ScrollEvent" = type <{ %"class.ui::MouseEvent", float, float, float, float, i32, i32, i32, [4 x i8] }>
%"class.ui::GestureEvent" = type <{ %"class.ui::LocatedEvent", %"struct.ui::GestureEventDetails", i32, [4 x i8] }>
%"struct.ui::GestureEventDetails" = type { i32, %"union.ui::GestureEventDetails::Details", i32, i8, i32, i32, %"class.gfx::RectF" }
%"union.ui::GestureEventDetails::Details" = type { %struct.anon }
%struct.anon = type { float, float, i8 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.ui::CancelModeEvent" = type { %"class.ui::Event" }

$_ZN20trace_event_internal13AddTraceEventIiRbEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_S8_OT0_ = comdat any

$_ZN20trace_event_internal13AddTraceEventIN2ui9EventTypeEiEEN4base11trace_event16TraceEventHandleEcPKhPKcS9_yjyS9_OT_S9_OT0_ = comdat any

$_ZN20trace_event_internal13AddTraceEventIN2ui9EventTypeEbEEN4base11trace_event16TraceEventHandleEcPKhPKcS9_yjyS9_OT_S9_OT0_ = comdat any

@_ZTVN2wm19CompoundEventFilterE = hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.wm::CompoundEventFilter"*)* @_ZN2wm19CompoundEventFilterD2Ev to i8*), i8* bitcast (void (%"class.wm::CompoundEventFilter"*)* @_ZN2wm19CompoundEventFilterD0Ev to i8*), i8* bitcast (void (%"class.ui::EventHandler"*, %"class.ui::Event"*)* @_ZN2ui12EventHandler7OnEventEPNS_5EventE to i8*), i8* bitcast (void (%"class.wm::CompoundEventFilter"*, %"class.ui::KeyEvent"*)* @_ZN2wm19CompoundEventFilter10OnKeyEventEPN2ui8KeyEventE to i8*), i8* bitcast (void (%"class.wm::CompoundEventFilter"*, %"class.ui::MouseEvent"*)* @_ZN2wm19CompoundEventFilter12OnMouseEventEPN2ui10MouseEventE to i8*), i8* bitcast (void (%"class.wm::CompoundEventFilter"*, %"class.ui::ScrollEvent"*)* @_ZN2wm19CompoundEventFilter13OnScrollEventEPN2ui11ScrollEventE to i8*), i8* bitcast (void (%"class.wm::CompoundEventFilter"*, %"class.ui::TouchEvent"*)* @_ZN2wm19CompoundEventFilter12OnTouchEventEPN2ui10TouchEventE to i8*), i8* bitcast (void (%"class.wm::CompoundEventFilter"*, %"class.ui::GestureEvent"*)* @_ZN2wm19CompoundEventFilter14OnGestureEventEPN2ui12GestureEventE to i8*), i8* bitcast (void (%"class.ui::EventHandler"*, %"class.ui::CancelModeEvent"*)* @_ZN2ui12EventHandler12OnCancelModeEPNS_15CancelModeEventE to i8*), i8* bitcast ({ i8*, i64 } (%"class.wm::CompoundEventFilter"*)* @_ZNK2wm19CompoundEventFilter13GetLogContextEv to i8*)] }, align 8
@__const._ZN2wm19CompoundEventFilter12UpdateCursorEPN4aura6WindowEPN2ui10MouseEventE.cursor = private unnamed_addr constant { i32, [4 x i8], %class.scoped_refptr, float, %"class.gfx::Point", [4 x i8], %class.SkBitmap } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.scoped_refptr { %"class.ui::PlatformCursor"* inttoptr (i64 -6148914691236517206 to %"class.ui::PlatformCursor"*) }, float 0xFFFFFFFFE0000000, %"class.gfx::Point" { i32 -1431655766, i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA", %class.SkBitmap { %class.sk_sp { %class.SkPixelRef* inttoptr (i64 -6148914691236517206 to %class.SkPixelRef*) }, %class.SkPixmap { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, %struct.SkImageInfo { %class.SkColorInfo { %class.sk_sp.26 { %class.SkColorSpace* inttoptr (i64 -6148914691236517206 to %class.SkColorSpace*) }, i32 -1431655766, i32 -1431655766 }, %struct.SkISize { i32 -1431655766, i32 -1431655766 } } }, %class.sk_sp.33 { %class.SkMipmap* inttoptr (i64 -6148914691236517206 to %class.SkMipmap*) } } }, align 8
@_ZN4aura6client18kResizeBehaviorKeyE = external local_unnamed_addr constant %"struct.ui::ClassProperty"*, align 8
@_ZZN2wm19CompoundEventFilter32SetMouseEventsEnableStateOnEventEPN4aura6WindowEPN2ui5EventEbE28trace_event_unique_atomic200 = internal global i64 0, align 8
@.str = private unnamed_addr constant [9 x i8] c"ui,input\00", align 1
@.str.1 = private unnamed_addr constant [54 x i8] c"CompoundEventFilter::SetMouseEventsEnableStateOnEvent\00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"event_flags\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"enable\00", align 1
@_ZZN2wm19CompoundEventFilter32SetMouseEventsEnableStateOnEventEPN4aura6WindowEPN2ui5EventEbE28trace_event_unique_atomic209 = internal global i64 0, align 8
@.str.4 = private unnamed_addr constant [66 x i8] c"CompoundEventFilter::SetMouseEventsEnableStateOnEvent - No Client\00", align 1
@_ZZN2wm19CompoundEventFilter12OnMouseEventEPN2ui10MouseEventEE28trace_event_unique_atomic234 = internal global i64 0, align 8
@.str.5 = private unnamed_addr constant [34 x i8] c"CompoundEventFilter::OnMouseEvent\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"event_type\00", align 1
@_ZZN2wm19CompoundEventFilter12OnTouchEventEPN2ui10TouchEventEE28trace_event_unique_atomic263 = internal global i64 0, align 8
@.str.7 = private unnamed_addr constant [34 x i8] c"CompoundEventFilter::OnTouchEvent\00", align 1
@.str.8 = private unnamed_addr constant [14 x i8] c"event_handled\00", align 1
@.str.9 = private unnamed_addr constant [20 x i8] c"CompoundEventFilter\00", align 1

@_ZN2wm19CompoundEventFilterC1Ev = hidden unnamed_addr alias void (%"class.wm::CompoundEventFilter"*), void (%"class.wm::CompoundEventFilter"*)* @_ZN2wm19CompoundEventFilterC2Ev
@_ZN2wm19CompoundEventFilterD1Ev = hidden unnamed_addr alias void (%"class.wm::CompoundEventFilter"*), void (%"class.wm::CompoundEventFilter"*)* @_ZN2wm19CompoundEventFilterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm19CompoundEventFilterC2Ev(%"class.wm::CompoundEventFilter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.wm::CompoundEventFilter", %"class.wm::CompoundEventFilter"* %0, i64 0, i32 0
  tail call void @_ZN2ui12EventHandlerC2Ev(%"class.ui::EventHandler"* %2) #11
  %3 = getelementptr inbounds %"class.wm::CompoundEventFilter", %"class.wm::CompoundEventFilter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN2wm19CompoundEventFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.wm::CompoundEventFilter", %"class.wm::CompoundEventFilter"* %0, i64 0, i32 1
  %5 = bitcast %"class.base::ObserverList"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #11
  %6 = getelementptr inbounds %"class.wm::CompoundEventFilter", %"class.wm::CompoundEventFilter"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %6, %"class.base::internal::LinkNodeBase"* %6, %"class.base::internal::LinkNodeBase"* %6) #11
  %7 = getelementptr inbounds %"class.wm::CompoundEventFilter", %"class.wm::CompoundEventFilter"* %0, i64 0, i32 1, i32 2
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %"class.wm::CompoundEventFilter", %"class.wm::CompoundEventFilter"* %0, i64 0, i32 1, i32 3
  store i32 0, i32* %8, align 8
  ret void
}

declare void @_ZN2ui12EventHandlerC2Ev(%"class.ui::EventHandler"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm19CompoundEventFilterD2Ev(%"class.wm::CompoundEventFilter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.wm::CompoundEventFilter", %"class.wm::CompoundEventFilter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN2wm19CompoundEventFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.wm::CompoundEventFilter", %"class.wm::CompoundEventFilter"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1
  %4 = bitcast %"class.base::internal::LinkNodeBase"** %3 to %"class.base::LinkNode"**
  %5 = getelementptr inbounds %"class.wm::CompoundEventFilter", %"class.wm::CompoundEventFilter"* %0, i64 0, i32 1, i32 1, i32 0
  %6 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %4, align 8
  %7 = icmp eq %"class.base::LinkNode"* %6, %5
  br i1 %7, label %20, label %8

8:                                                ; preds = %1, %17
  %9 = phi %"class.base::LinkNode"* [ %18, %17 ], [ %6, %1 ]
  %10 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %9, i64 1
  %11 = bitcast %"class.base::LinkNode"* %10 to %"class.base::ObserverList"**
  %12 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %11, align 8
  %13 = icmp eq %"class.base::ObserverList"* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %8
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %11, align 8
  %15 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %9, i64 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %15) #11
  %16 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %4, align 8
  br label %17

17:                                               ; preds = %14, %8
  %18 = phi %"class.base::LinkNode"* [ %9, %8 ], [ %16, %14 ]
  %19 = icmp eq %"class.base::LinkNode"* %18, %5
  br i1 %19, label %20, label %8

20:                                               ; preds = %17, %1
  %21 = getelementptr inbounds %"class.wm::CompoundEventFilter", %"class.wm::CompoundEventFilter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %22 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %21, align 8
  %23 = getelementptr inbounds %"class.wm::CompoundEventFilter", %"class.wm::CompoundEventFilter"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %24 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %23, align 8
  %25 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %22, %24
  br i1 %25, label %34, label %26

26:                                               ; preds = %20, %31
  %27 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %32, %31 ], [ %22, %20 ]
  %28 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %27, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %27, i64 1
  %33 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %32, %24
  br i1 %33, label %98, label %26

34:                                               ; preds = %26, %20
  %35 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %22, %20 ], [ %27, %26 ]
  %36 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %35 to i64
  %37 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %35, %24
  br i1 %37, label %98, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %35, i64 1
  %40 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %39, %24
  br i1 %40, label %93, label %41

41:                                               ; preds = %38
  %42 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %24, i64 -2, i32 0
  %43 = ptrtoint i8** %42 to i64
  %44 = sub i64 %43, %36
  %45 = lshr i64 %44, 3
  %46 = add nuw nsw i64 %45, 1
  %47 = and i64 %46, 3
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %67, label %49

49:                                               ; preds = %41, %62
  %50 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %64, %62 ], [ %39, %41 ]
  %51 = phi i64 [ %63, %62 ], [ %36, %41 ]
  %52 = phi i64 [ %65, %62 ], [ %47, %41 ]
  %53 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %50, i64 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = icmp eq i8* %54, null
  br i1 %55, label %62, label %56

56:                                               ; preds = %49
  %57 = ptrtoint i8* %54 to i64
  %58 = inttoptr i64 %51 to %"class.base::internal::UncheckedObserverAdapter"*
  %59 = inttoptr i64 %51 to i64*
  store i64 %57, i64* %59, align 8
  %60 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %58, i64 1
  %61 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %60 to i64
  br label %62

62:                                               ; preds = %56, %49
  %63 = phi i64 [ %51, %49 ], [ %61, %56 ]
  %64 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %50, i64 1
  %65 = add i64 %52, -1
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %67, label %49, !llvm.loop !2

67:                                               ; preds = %62, %41
  %68 = phi i64 [ undef, %41 ], [ %63, %62 ]
  %69 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %39, %41 ], [ %64, %62 ]
  %70 = phi i64 [ %36, %41 ], [ %63, %62 ]
  %71 = icmp ult i64 %44, 24
  br i1 %71, label %89, label %72

72:                                               ; preds = %67, %135
  %73 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %137, %135 ], [ %69, %67 ]
  %74 = phi i64 [ %136, %135 ], [ %70, %67 ]
  %75 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 0, i32 0
  %76 = load i8*, i8** %75, align 8
  %77 = icmp eq i8* %76, null
  br i1 %77, label %84, label %78

78:                                               ; preds = %72
  %79 = ptrtoint i8* %76 to i64
  %80 = inttoptr i64 %74 to %"class.base::internal::UncheckedObserverAdapter"*
  %81 = inttoptr i64 %74 to i64*
  store i64 %79, i64* %81, align 8
  %82 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %80, i64 1
  %83 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %82 to i64
  br label %84

84:                                               ; preds = %78, %72
  %85 = phi i64 [ %74, %72 ], [ %83, %78 ]
  %86 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 1, i32 0
  %87 = load i8*, i8** %86, align 8
  %88 = icmp eq i8* %87, null
  br i1 %88, label %113, label %107

89:                                               ; preds = %135, %67
  %90 = phi i64 [ %68, %67 ], [ %136, %135 ]
  %91 = inttoptr i64 %90 to %"class.base::internal::UncheckedObserverAdapter"*
  %92 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %23, align 8
  br label %93

93:                                               ; preds = %89, %38
  %94 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %24, %38 ], [ %92, %89 ]
  %95 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %35, %38 ], [ %91, %89 ]
  %96 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %95, %94
  br i1 %96, label %98, label %97

97:                                               ; preds = %93
  store %"class.base::internal::UncheckedObserverAdapter"* %95, %"class.base::internal::UncheckedObserverAdapter"** %23, align 8
  br label %98

98:                                               ; preds = %31, %97, %93, %34
  %99 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %21, align 8
  %100 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %99, null
  br i1 %100, label %105, label %101

101:                                              ; preds = %98
  %102 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %99 to i64
  %103 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %23 to i64*
  store i64 %102, i64* %103, align 8
  %104 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %99 to i8*
  tail call void @_ZdlPv(i8* %104) #12
  br label %105

105:                                              ; preds = %98, %101
  %106 = getelementptr inbounds %"class.wm::CompoundEventFilter", %"class.wm::CompoundEventFilter"* %0, i64 0, i32 0
  tail call void @_ZN2ui12EventHandlerD2Ev(%"class.ui::EventHandler"* %106) #11
  ret void

107:                                              ; preds = %84
  %108 = ptrtoint i8* %87 to i64
  %109 = inttoptr i64 %85 to %"class.base::internal::UncheckedObserverAdapter"*
  %110 = inttoptr i64 %85 to i64*
  store i64 %108, i64* %110, align 8
  %111 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %109, i64 1
  %112 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %111 to i64
  br label %113

113:                                              ; preds = %107, %84
  %114 = phi i64 [ %85, %84 ], [ %112, %107 ]
  %115 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 2, i32 0
  %116 = load i8*, i8** %115, align 8
  %117 = icmp eq i8* %116, null
  br i1 %117, label %124, label %118

118:                                              ; preds = %113
  %119 = ptrtoint i8* %116 to i64
  %120 = inttoptr i64 %114 to %"class.base::internal::UncheckedObserverAdapter"*
  %121 = inttoptr i64 %114 to i64*
  store i64 %119, i64* %121, align 8
  %122 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %120, i64 1
  %123 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %122 to i64
  br label %124

124:                                              ; preds = %118, %113
  %125 = phi i64 [ %114, %113 ], [ %123, %118 ]
  %126 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 3, i32 0
  %127 = load i8*, i8** %126, align 8
  %128 = icmp eq i8* %127, null
  br i1 %128, label %135, label %129

129:                                              ; preds = %124
  %130 = ptrtoint i8* %127 to i64
  %131 = inttoptr i64 %125 to %"class.base::internal::UncheckedObserverAdapter"*
  %132 = inttoptr i64 %125 to i64*
  store i64 %130, i64* %132, align 8
  %133 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %131, i64 1
  %134 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %133 to i64
  br label %135

135:                                              ; preds = %129, %124
  %136 = phi i64 [ %125, %124 ], [ %134, %129 ]
  %137 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 4
  %138 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %137, %24
  br i1 %138, label %89, label %72
}

; Function Attrs: nounwind
declare void @_ZN2ui12EventHandlerD2Ev(%"class.ui::EventHandler"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm19CompoundEventFilterD0Ev(%"class.wm::CompoundEventFilter"*) unnamed_addr #0 align 2 {
  tail call void @_ZN2wm19CompoundEventFilterD2Ev(%"class.wm::CompoundEventFilter"* %0) #11
  %2 = bitcast %"class.wm::CompoundEventFilter"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm19CompoundEventFilter24CursorForWindowComponentEi(%"class.ui::Cursor"* noalias sret, i32) local_unnamed_addr #0 align 2 {
  switch i32 %1, label %10 [
    i32 2, label %11
    i32 3, label %3
    i32 4, label %4
    i32 12, label %5
    i32 17, label %6
    i32 20, label %7
    i32 21, label %8
    i32 22, label %9
  ]

3:                                                ; preds = %2
  br label %11

4:                                                ; preds = %2
  br label %11

5:                                                ; preds = %2
  br label %11

6:                                                ; preds = %2
  br label %11

7:                                                ; preds = %2
  br label %11

8:                                                ; preds = %2
  br label %11

9:                                                ; preds = %2
  br label %11

10:                                               ; preds = %2
  br label %11

11:                                               ; preds = %2, %10, %9, %8, %7, %6, %5, %4, %3
  %12 = phi i32 [ -1, %10 ], [ 8, %9 ], [ 9, %8 ], [ 7, %7 ], [ 6, %6 ], [ 13, %5 ], [ 11, %4 ], [ 12, %3 ], [ 10, %2 ]
  tail call void @_ZN2ui6CursorC1ENS_5mojom10CursorTypeE(%"class.ui::Cursor"* %0, i32 %12) #11
  ret void
}

declare void @_ZN2ui6CursorC1ENS_5mojom10CursorTypeE(%"class.ui::Cursor"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm19CompoundEventFilter32NoResizeCursorForWindowComponentEi(%"class.ui::Cursor"* noalias sret, i32) local_unnamed_addr #0 align 2 {
  switch i32 %1, label %9 [
    i32 2, label %10
    i32 3, label %3
    i32 4, label %4
    i32 12, label %5
    i32 17, label %6
    i32 20, label %10
    i32 21, label %7
    i32 22, label %8
  ]

3:                                                ; preds = %2
  br label %10

4:                                                ; preds = %2
  br label %10

5:                                                ; preds = %2
  br label %10

6:                                                ; preds = %2
  br label %10

7:                                                ; preds = %2
  br label %10

8:                                                ; preds = %2
  br label %10

9:                                                ; preds = %2
  br label %10

10:                                               ; preds = %2, %2, %9, %8, %7, %6, %5, %4, %3
  %11 = phi i32 [ -1, %9 ], [ 52, %8 ], [ 53, %7 ], [ 50, %6 ], [ 50, %5 ], [ 53, %4 ], [ 52, %3 ], [ 51, %2 ], [ 51, %2 ]
  tail call void @_ZN2ui6CursorC1ENS_5mojom10CursorTypeE(%"class.ui::Cursor"* %0, i32 %11) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm19CompoundEventFilter10AddHandlerEPN2ui12EventHandlerE(%"class.wm::CompoundEventFilter"*, %"class.ui::EventHandler"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.wm::CompoundEventFilter", %"class.wm::CompoundEventFilter"* %0, i64 0, i32 1
  %4 = icmp eq %"class.ui::EventHandler"* %1, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.wm::CompoundEventFilter", %"class.wm::CompoundEventFilter"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %7 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %6, align 8
  br label %26

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %9, align 8
  %11 = getelementptr inbounds %"class.wm::CompoundEventFilter", %"class.wm::CompoundEventFilter"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %12 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %11, align 8
  %13 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %10, %12
  %14 = bitcast %"class.ui::EventHandler"* %1 to i8*
  br i1 %13, label %23, label %15

15:                                               ; preds = %8, %20
  %16 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %21, %20 ], [ %10, %8 ]
  %17 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, %14
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 1
  %22 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %21, %12
  br i1 %22, label %26, label %15

23:                                               ; preds = %15, %8
  %24 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %10, %8 ], [ %16, %15 ]
  %25 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %24, %12
  br i1 %25, label %26, label %99

26:                                               ; preds = %20, %5, %23
  %27 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %7, %5 ], [ %12, %23 ], [ %12, %20 ]
  %28 = getelementptr inbounds %"class.wm::CompoundEventFilter", %"class.wm::CompoundEventFilter"* %0, i64 0, i32 1, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %28, align 8
  %31 = ptrtoint %"class.ui::EventHandler"* %1 to i64
  %32 = getelementptr inbounds %"class.wm::CompoundEventFilter", %"class.wm::CompoundEventFilter"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.wm::CompoundEventFilter", %"class.wm::CompoundEventFilter"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %34 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %33, align 8
  %35 = icmp ult %"class.base::internal::UncheckedObserverAdapter"* %27, %34
  %36 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %34 to i64
  br i1 %35, label %37, label %42

37:                                               ; preds = %26
  %38 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %27 to i64*
  store i64 %31, i64* %38, align 8
  %39 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %27, i64 1
  %40 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %39 to i64
  %41 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  store i64 %40, i64* %41, align 8
  br label %99

42:                                               ; preds = %26
  %43 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %27 to i64
  %44 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  %45 = bitcast %"class.base::ObserverList"* %3 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %43, %46
  %48 = ashr exact i64 %47, 3
  %49 = add nsw i64 %48, 1
  %50 = icmp ugt i64 %49, 2305843009213693951
  br i1 %50, label %51, label %53

51:                                               ; preds = %42
  %52 = bitcast %"class.base::ObserverList"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %52) #13
  unreachable

53:                                               ; preds = %42
  %54 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %33 to i64*
  %55 = sub i64 %36, %46
  %56 = ashr exact i64 %55, 3
  %57 = icmp ult i64 %56, 1152921504606846975
  br i1 %57, label %58, label %66

58:                                               ; preds = %53
  %59 = ashr exact i64 %55, 2
  %60 = icmp ult i64 %59, %49
  %61 = select i1 %60, i64 %49, i64 %59
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %58
  %64 = icmp ugt i64 %61, 2305843009213693951
  br i1 %64, label %65, label %66

65:                                               ; preds = %63
  tail call void @abort() #13
  unreachable

66:                                               ; preds = %63, %53
  %67 = phi i64 [ %61, %63 ], [ 2305843009213693951, %53 ]
  %68 = shl i64 %67, 3
  %69 = tail call i8* @_Znwm(i64 %68) #12
  %70 = bitcast i8* %69 to %"class.base::internal::UncheckedObserverAdapter"*
  br label %71

71:                                               ; preds = %66, %58
  %72 = phi i64 [ %67, %66 ], [ 0, %58 ]
  %73 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %70, %66 ], [ null, %58 ]
  %74 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %48
  %75 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %72
  %76 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %75 to i64
  %77 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %74 to i64*
  store i64 %31, i64* %77, align 8
  %78 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 1
  %79 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %78 to i64
  %80 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %3, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  %82 = load i64, i64* %44, align 8
  %83 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %81 to i64
  %84 = sub i64 %82, %83
  %85 = ashr exact i64 %84, 3
  %86 = sub nsw i64 0, %85
  %87 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 %86
  %88 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %87 to i64
  %89 = icmp sgt i64 %84, 0
  br i1 %89, label %90, label %94

90:                                               ; preds = %71
  %91 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %87 to i8*
  %92 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 %84, i1 false) #11
  %93 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  br label %94

94:                                               ; preds = %90, %71
  %95 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %81, %71 ], [ %93, %90 ]
  store i64 %88, i64* %45, align 8
  store i64 %79, i64* %44, align 8
  store i64 %76, i64* %54, align 8
  %96 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %94
  %98 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %95 to i8*
  tail call void @_ZdlPv(i8* %98) #12
  br label %99

99:                                               ; preds = %97, %94, %37, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm19CompoundEventFilter13RemoveHandlerEPN2ui12EventHandlerE(%"class.wm::CompoundEventFilter"*, %"class.ui::EventHandler"* readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.wm::CompoundEventFilter", %"class.wm::CompoundEventFilter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %3, align 8
  %5 = getelementptr inbounds %"class.wm::CompoundEventFilter", %"class.wm::CompoundEventFilter"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %6 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  %7 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %4, %6
  %8 = bitcast %"class.ui::EventHandler"* %1 to i8*
  %9 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %6 to i64
  br i1 %7, label %18, label %10

10:                                               ; preds = %2, %15
  %11 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %16, %15 ], [ %4, %2 ]
  %12 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, %8
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 1
  %17 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %16, %6
  br i1 %17, label %47, label %10

18:                                               ; preds = %10, %2
  %19 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %4, %2 ], [ %11, %10 ]
  %20 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %19, %6
  br i1 %20, label %47, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.wm::CompoundEventFilter", %"class.wm::CompoundEventFilter"* %0, i64 0, i32 1, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, -1
  store i64 %28, i64* %26, align 8
  br label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.wm::CompoundEventFilter", %"class.wm::CompoundEventFilter"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1
  %31 = bitcast %"class.base::internal::LinkNodeBase"** %30 to %"class.base::LinkNode"**
  %32 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %31, align 8
  %33 = getelementptr inbounds %"class.wm::CompoundEventFilter", %"class.wm::CompoundEventFilter"* %0, i64 0, i32 1, i32 1, i32 0
  %34 = icmp eq %"class.base::LinkNode"* %32, %33
  br i1 %34, label %35, label %46

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 1
  %37 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %36 to i64
  %38 = sub i64 %9, %37
  %39 = ashr exact i64 %38, 3
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %19 to i8*
  %43 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %36 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 %38, i1 false) #11
  br label %44

44:                                               ; preds = %41, %35
  %45 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 %39
  store %"class.base::internal::UncheckedObserverAdapter"* %45, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  br label %47

46:                                               ; preds = %29
  store i8* null, i8** %22, align 8
  br label %47

47:                                               ; preds = %15, %18, %44, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm19CompoundEventFilter12UpdateCursorEPN4aura6WindowEPN2ui10MouseEventE(%"class.wm::CompoundEventFilter"* nocapture readnone, %"class.aura::Window"*, %"class.ui::MouseEvent"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.ui::Cursor", align 8
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"class.gfx::Point"*
  %7 = alloca i64, align 8
  %8 = bitcast i64* %7 to %"class.gfx::Point"*
  %9 = alloca %"class.ui::Cursor", align 8
  %10 = alloca %"class.ui::Cursor", align 8
  %11 = alloca %"class.ui::Cursor", align 8
  %12 = alloca %"class.ui::Cursor", align 8
  %13 = tail call %"class.aura::Window"* @_ZN4aura6Window13GetRootWindowEv(%"class.aura::Window"* %1) #11
  %14 = tail call %"class.aura::client::DragDropClient"* @_ZN4aura6client17GetDragDropClientEPNS_6WindowE(%"class.aura::Window"* %13) #11
  %15 = icmp eq %"class.aura::client::DragDropClient"* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %3
  %17 = bitcast %"class.aura::client::DragDropClient"* %14 to i1 (%"class.aura::client::DragDropClient"*)***
  %18 = load i1 (%"class.aura::client::DragDropClient"*)**, i1 (%"class.aura::client::DragDropClient"*)*** %17, align 8
  %19 = getelementptr inbounds i1 (%"class.aura::client::DragDropClient"*)*, i1 (%"class.aura::client::DragDropClient"*)** %18, i64 4
  %20 = load i1 (%"class.aura::client::DragDropClient"*)*, i1 (%"class.aura::client::DragDropClient"*)** %19, align 8
  %21 = tail call zeroext i1 %20(%"class.aura::client::DragDropClient"* nonnull %14) #11
  br i1 %21, label %137, label %22

22:                                               ; preds = %3, %16
  %23 = tail call %"class.aura::client::CursorClient"* @_ZN4aura6client15GetCursorClientEPNS_6WindowE(%"class.aura::Window"* %13) #11
  %24 = icmp eq %"class.aura::client::CursorClient"* %23, null
  br i1 %24, label %137, label %25

25:                                               ; preds = %22
  %26 = bitcast %"class.ui::Cursor"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %26) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* align 8 bitcast ({ i32, [4 x i8], %class.scoped_refptr, float, %"class.gfx::Point", [4 x i8], %class.SkBitmap }* @__const._ZN2wm19CompoundEventFilter12UpdateCursorEPN4aura6WindowEPN2ui10MouseEventE.cursor to i8*), i64 88, i1 false)
  %27 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  %28 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %2, i64 0, i32 0, i32 1
  %29 = tail call i64 @_ZN3gfx14ToFlooredPointERKNS_6PointFE(%"class.gfx::PointF"* dereferenceable(8) %28) #11
  store i64 %29, i64* %5, align 8
  call void @_ZNK4aura6Window9GetCursorERKN3gfx5PointE(%"class.ui::Cursor"* nonnull sret %4, %"class.aura::Window"* %1, %"class.gfx::Point"* nonnull dereferenceable(8) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  %30 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %2, i64 0, i32 0, i32 0, i32 4
  %31 = load i32, i32* %30, align 8
  %32 = and i32 %31, 131072
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %121, label %34

34:                                               ; preds = %25
  %35 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 12
  %36 = load %"class.aura::WindowDelegate"*, %"class.aura::WindowDelegate"** %35, align 8
  %37 = icmp eq %"class.aura::WindowDelegate"* %36, null
  br i1 %37, label %136, label %38

38:                                               ; preds = %34
  %39 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #11
  %40 = call i64 @_ZN3gfx14ToFlooredPointERKNS_6PointFE(%"class.gfx::PointF"* dereferenceable(8) %28) #11
  store i64 %40, i64* %7, align 8
  %41 = bitcast %"class.aura::WindowDelegate"* %36 to i32 (%"class.aura::WindowDelegate"*, %"class.gfx::Point"*)***
  %42 = load i32 (%"class.aura::WindowDelegate"*, %"class.gfx::Point"*)**, i32 (%"class.aura::WindowDelegate"*, %"class.gfx::Point"*)*** %41, align 8
  %43 = getelementptr inbounds i32 (%"class.aura::WindowDelegate"*, %"class.gfx::Point"*)*, i32 (%"class.aura::WindowDelegate"*, %"class.gfx::Point"*)** %42, i64 14
  %44 = load i32 (%"class.aura::WindowDelegate"*, %"class.gfx::Point"*)*, i32 (%"class.aura::WindowDelegate"*, %"class.gfx::Point"*)** %43, align 8
  %45 = call i32 %44(%"class.aura::WindowDelegate"* nonnull %36, %"class.gfx::Point"* nonnull dereferenceable(8) %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #11
  %46 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 4
  %47 = load %"struct.ui::ClassProperty"*, %"struct.ui::ClassProperty"** @_ZN4aura6client18kResizeBehaviorKeyE, align 8
  %48 = call i32 @_ZNK2ui15PropertyHandler11GetPropertyIiEET_PKNS_13ClassPropertyIS2_EE(%"class.ui::PropertyHandler"* %46, %"struct.ui::ClassProperty"* %47) #11
  %49 = and i32 %48, 1
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %81, label %51

51:                                               ; preds = %38
  %52 = bitcast %"class.ui::Cursor"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %52) #11
  call void @_ZN2wm19CompoundEventFilter24CursorForWindowComponentEi(%"class.ui::Cursor"* nonnull sret %9, i32 %45)
  %53 = getelementptr inbounds %"class.ui::Cursor", %"class.ui::Cursor"* %9, i64 0, i32 0
  %54 = load i32, i32* %53, align 8
  %55 = getelementptr inbounds %"class.ui::Cursor", %"class.ui::Cursor"* %4, i64 0, i32 0
  store i32 %54, i32* %55, align 8
  %56 = getelementptr inbounds %"class.ui::Cursor", %"class.ui::Cursor"* %4, i64 0, i32 1
  %57 = getelementptr inbounds %"class.ui::Cursor", %"class.ui::Cursor"* %9, i64 0, i32 1, i32 0
  %58 = load %"class.ui::PlatformCursor"*, %"class.ui::PlatformCursor"** %57, align 8
  %59 = icmp eq %"class.ui::PlatformCursor"* %58, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %51
  %61 = getelementptr inbounds %"class.ui::PlatformCursor", %"class.ui::PlatformCursor"* %58, i64 0, i32 1, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %61) #11
  br label %62

62:                                               ; preds = %60, %51
  %63 = ptrtoint %"class.ui::PlatformCursor"* %58 to i64
  %64 = bitcast %class.scoped_refptr* %56 to i64*
  %65 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %56, i64 0, i32 0
  %66 = load %"class.ui::PlatformCursor"*, %"class.ui::PlatformCursor"** %65, align 8
  store i64 %63, i64* %64, align 8
  %67 = icmp eq %"class.ui::PlatformCursor"* %66, null
  br i1 %67, label %111, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.ui::PlatformCursor", %"class.ui::PlatformCursor"* %66, i64 0, i32 1
  %70 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %69, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %70) #11
  %71 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %69, i64 0, i32 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %111

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %69, i64 -2
  %76 = bitcast %"class.base::RefCounted"* %75 to %"class.ui::PlatformCursor"*
  %77 = bitcast %"class.base::RefCounted"* %75 to void (%"class.ui::PlatformCursor"*)***
  %78 = load void (%"class.ui::PlatformCursor"*)**, void (%"class.ui::PlatformCursor"*)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.ui::PlatformCursor"*)*, void (%"class.ui::PlatformCursor"*)** %78, i64 1
  %80 = load void (%"class.ui::PlatformCursor"*)*, void (%"class.ui::PlatformCursor"*)** %79, align 8
  call void %80(%"class.ui::PlatformCursor"* nonnull %76) #11
  br label %111

81:                                               ; preds = %38
  %82 = bitcast %"class.ui::Cursor"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %82) #11
  call void @_ZN2wm19CompoundEventFilter32NoResizeCursorForWindowComponentEi(%"class.ui::Cursor"* nonnull sret %10, i32 %45)
  %83 = getelementptr inbounds %"class.ui::Cursor", %"class.ui::Cursor"* %10, i64 0, i32 0
  %84 = load i32, i32* %83, align 8
  %85 = getelementptr inbounds %"class.ui::Cursor", %"class.ui::Cursor"* %4, i64 0, i32 0
  store i32 %84, i32* %85, align 8
  %86 = getelementptr inbounds %"class.ui::Cursor", %"class.ui::Cursor"* %4, i64 0, i32 1
  %87 = getelementptr inbounds %"class.ui::Cursor", %"class.ui::Cursor"* %10, i64 0, i32 1, i32 0
  %88 = load %"class.ui::PlatformCursor"*, %"class.ui::PlatformCursor"** %87, align 8
  %89 = icmp eq %"class.ui::PlatformCursor"* %88, null
  br i1 %89, label %92, label %90

90:                                               ; preds = %81
  %91 = getelementptr inbounds %"class.ui::PlatformCursor", %"class.ui::PlatformCursor"* %88, i64 0, i32 1, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %91) #11
  br label %92

92:                                               ; preds = %90, %81
  %93 = ptrtoint %"class.ui::PlatformCursor"* %88 to i64
  %94 = bitcast %class.scoped_refptr* %86 to i64*
  %95 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %86, i64 0, i32 0
  %96 = load %"class.ui::PlatformCursor"*, %"class.ui::PlatformCursor"** %95, align 8
  store i64 %93, i64* %94, align 8
  %97 = icmp eq %"class.ui::PlatformCursor"* %96, null
  br i1 %97, label %111, label %98

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.ui::PlatformCursor", %"class.ui::PlatformCursor"* %96, i64 0, i32 1
  %100 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %99, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %100) #11
  %101 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %99, i64 0, i32 0, i32 0
  %102 = load i32, i32* %101, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %111

104:                                              ; preds = %98
  %105 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %99, i64 -2
  %106 = bitcast %"class.base::RefCounted"* %105 to %"class.ui::PlatformCursor"*
  %107 = bitcast %"class.base::RefCounted"* %105 to void (%"class.ui::PlatformCursor"*)***
  %108 = load void (%"class.ui::PlatformCursor"*)**, void (%"class.ui::PlatformCursor"*)*** %107, align 8
  %109 = getelementptr inbounds void (%"class.ui::PlatformCursor"*)*, void (%"class.ui::PlatformCursor"*)** %108, i64 1
  %110 = load void (%"class.ui::PlatformCursor"*)*, void (%"class.ui::PlatformCursor"*)** %109, align 8
  call void %110(%"class.ui::PlatformCursor"* nonnull %106) #11
  br label %111

111:                                              ; preds = %104, %98, %92, %74, %68, %62
  %112 = phi %"class.ui::Cursor"* [ %9, %62 ], [ %9, %68 ], [ %9, %74 ], [ %10, %92 ], [ %10, %98 ], [ %10, %104 ]
  %113 = phi i8* [ %52, %62 ], [ %52, %68 ], [ %52, %74 ], [ %82, %92 ], [ %82, %98 ], [ %82, %104 ]
  %114 = getelementptr inbounds %"class.ui::Cursor", %"class.ui::Cursor"* %4, i64 0, i32 2
  %115 = getelementptr inbounds %"class.ui::Cursor", %"class.ui::Cursor"* %112, i64 0, i32 2
  %116 = bitcast float* %114 to i8*
  %117 = bitcast float* %115 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %116, i8* align 8 %117, i64 12, i1 false) #11
  %118 = getelementptr inbounds %"class.ui::Cursor", %"class.ui::Cursor"* %4, i64 0, i32 4
  %119 = getelementptr inbounds %"class.ui::Cursor", %"class.ui::Cursor"* %112, i64 0, i32 4
  %120 = call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSERKS_(%class.SkBitmap* %118, %class.SkBitmap* dereferenceable(56) %119) #11
  call void @_ZN2ui6CursorD1Ev(%"class.ui::Cursor"* nonnull %112) #11
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %113) #11
  br label %121

121:                                              ; preds = %111, %25
  %122 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %2, i64 0, i32 0, i32 0, i32 1
  %123 = load i32, i32* %122, align 8
  %124 = icmp eq i32 %123, 5
  br i1 %124, label %125, label %130

125:                                              ; preds = %121
  call void @_ZN2ui6CursorC1ERKS0_(%"class.ui::Cursor"* nonnull %11, %"class.ui::Cursor"* nonnull dereferenceable(88) %4) #11
  %126 = bitcast %"class.aura::client::CursorClient"* %23 to void (%"class.aura::client::CursorClient"*, %"class.ui::Cursor"*)***
  %127 = load void (%"class.aura::client::CursorClient"*, %"class.ui::Cursor"*)**, void (%"class.aura::client::CursorClient"*, %"class.ui::Cursor"*)*** %126, align 8
  %128 = getelementptr inbounds void (%"class.aura::client::CursorClient"*, %"class.ui::Cursor"*)*, void (%"class.aura::client::CursorClient"*, %"class.ui::Cursor"*)** %127, i64 2
  %129 = load void (%"class.aura::client::CursorClient"*, %"class.ui::Cursor"*)*, void (%"class.aura::client::CursorClient"*, %"class.ui::Cursor"*)** %128, align 8
  call void %129(%"class.aura::client::CursorClient"* nonnull %23, %"class.ui::Cursor"* nonnull %11) #11
  br label %134

130:                                              ; preds = %121
  call void @_ZN2ui6CursorC1ERKS0_(%"class.ui::Cursor"* nonnull %12, %"class.ui::Cursor"* nonnull dereferenceable(88) %4) #11
  %131 = bitcast %"class.aura::client::CursorClient"* %23 to void (%"class.aura::client::CursorClient"*, %"class.ui::Cursor"*)***
  %132 = load void (%"class.aura::client::CursorClient"*, %"class.ui::Cursor"*)**, void (%"class.aura::client::CursorClient"*, %"class.ui::Cursor"*)*** %131, align 8
  %133 = load void (%"class.aura::client::CursorClient"*, %"class.ui::Cursor"*)*, void (%"class.aura::client::CursorClient"*, %"class.ui::Cursor"*)** %132, align 8
  call void %133(%"class.aura::client::CursorClient"* nonnull %23, %"class.ui::Cursor"* nonnull %12) #11
  br label %134

134:                                              ; preds = %125, %130
  %135 = phi %"class.ui::Cursor"* [ %11, %125 ], [ %12, %130 ]
  call void @_ZN2ui6CursorD1Ev(%"class.ui::Cursor"* nonnull %135) #11
  call void @_ZN2ui6CursorD1Ev(%"class.ui::Cursor"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %26) #11
  br label %137

136:                                              ; preds = %34
  call void @_ZN2ui6CursorD1Ev(%"class.ui::Cursor"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %26) #11
  br label %137

137:                                              ; preds = %136, %134, %22, %16
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare %"class.aura::Window"* @_ZN4aura6Window13GetRootWindowEv(%"class.aura::Window"*) local_unnamed_addr #1

declare %"class.aura::client::DragDropClient"* @_ZN4aura6client17GetDragDropClientEPNS_6WindowE(%"class.aura::Window"*) local_unnamed_addr #1

declare %"class.aura::client::CursorClient"* @_ZN4aura6client15GetCursorClientEPNS_6WindowE(%"class.aura::Window"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZNK4aura6Window9GetCursorERKN3gfx5PointE(%"class.ui::Cursor"* sret, %"class.aura::Window"*, %"class.gfx::Point"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare i32 @_ZNK2ui15PropertyHandler11GetPropertyIiEET_PKNS_13ClassPropertyIS2_EE(%"class.ui::PropertyHandler"*, %"struct.ui::ClassProperty"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2ui6CursorD1Ev(%"class.ui::Cursor"*) unnamed_addr #2

declare void @_ZN2ui6CursorC1ERKS0_(%"class.ui::Cursor"*, %"class.ui::Cursor"* dereferenceable(88)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm19CompoundEventFilter14FilterKeyEventEPN2ui8KeyEventE(%"class.wm::CompoundEventFilter"*, %"class.ui::KeyEvent"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = alloca %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = getelementptr inbounds %"class.wm::CompoundEventFilter", %"class.wm::CompoundEventFilter"* %0, i64 0, i32 1
  %6 = bitcast %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %9 = getelementptr inbounds %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %10 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %5, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 40, i1 false)
  %12 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %10, align 8, !noalias !4
  %13 = getelementptr inbounds %"class.wm::CompoundEventFilter", %"class.wm::CompoundEventFilter"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %14 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %13, align 8, !noalias !4
  %15 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %12, %14
  %16 = getelementptr inbounds %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %16) #11
  br i1 %15, label %17, label %19

17:                                               ; preds = %2
  %18 = bitcast %"class.base::ObserverList"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #11, !alias.scope !4
  br label %59

19:                                               ; preds = %2
  store %"class.base::ObserverList"* %5, %"class.base::ObserverList"** %7, align 8, !alias.scope !4
  %20 = getelementptr inbounds %"class.wm::CompoundEventFilter", %"class.wm::CompoundEventFilter"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %16, %"class.base::internal::LinkNodeBase"* %20) #11
  store i64 0, i64* %8, align 8, !alias.scope !4
  %21 = getelementptr inbounds %"class.wm::CompoundEventFilter", %"class.wm::CompoundEventFilter"* %0, i64 0, i32 1, i32 3
  %22 = load i32, i32* %21, align 8, !noalias !4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %19
  %25 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %13 to i64*
  %26 = load i64, i64* %25, align 8, !noalias !4
  %27 = bitcast %"class.base::ObserverList"* %5 to i64*
  %28 = load i64, i64* %27, align 8, !noalias !4
  %29 = sub i64 %26, %28
  %30 = ashr exact i64 %29, 3
  br label %31

31:                                               ; preds = %24, %19
  %32 = phi i64 [ %30, %24 ], [ -1, %19 ]
  store i64 %32, i64* %9, align 8, !alias.scope !4
  %33 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8, !alias.scope !4
  %34 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %33, i64 0, i32 0, i32 0, i32 1
  %35 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.base::ObserverList"* %33 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %36, %38
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, %32
  %42 = select i1 %41, i64 %40, i64 %32
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %59, label %44

44:                                               ; preds = %31
  %45 = inttoptr i64 %38 to %"class.base::internal::UncheckedObserverAdapter"*
  %46 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %33, i64 0, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %45, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %50, label %59

50:                                               ; preds = %44, %54
  %51 = phi i64 [ %52, %54 ], [ 0, %44 ]
  %52 = add nuw i64 %51, 1
  store i64 %52, i64* %8, align 8, !alias.scope !4
  %53 = icmp ult i64 %52, %42
  br i1 %53, label %54, label %59

54:                                               ; preds = %50
  %55 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %46, align 8
  %56 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %55, i64 %52, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = icmp eq i8* %57, null
  br i1 %58, label %50, label %59

59:                                               ; preds = %50, %54, %17, %31, %44
  %60 = bitcast %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %60) #11
  %61 = getelementptr inbounds %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %63 = getelementptr inbounds %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %64 = getelementptr inbounds %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %64) #11
  %66 = bitcast %"class.base::ObserverList"** %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 24, i1 false) #11, !alias.scope !7
  %67 = getelementptr inbounds %"class.ui::KeyEvent", %"class.ui::KeyEvent"* %1, i64 0, i32 0, i32 10
  %68 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  br label %69

69:                                               ; preds = %126, %59
  %70 = phi %"class.base::ObserverList"* [ %68, %59 ], [ %124, %126 ]
  %71 = icmp eq %"class.base::ObserverList"* %70, null
  br i1 %71, label %87, label %72

72:                                               ; preds = %69
  %73 = load i64, i64* %8, align 8
  %74 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %70, i64 0, i32 0, i32 0, i32 1
  %75 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"class.base::ObserverList"* %70 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = sub i64 %76, %78
  %80 = ashr exact i64 %79, 3
  %81 = load i64, i64* %9, align 8
  %82 = icmp ult i64 %80, %81
  %83 = select i1 %82, i64 %80, i64 %81
  %84 = icmp eq i64 %73, %83
  br i1 %84, label %87, label %85

85:                                               ; preds = %72
  %86 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %61, align 8
  br label %103

87:                                               ; preds = %72, %69
  %88 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %61, align 8
  %89 = icmp eq %"class.base::ObserverList"* %88, null
  br i1 %89, label %250, label %90

90:                                               ; preds = %87
  %91 = load i64, i64* %62, align 8
  %92 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %88, i64 0, i32 0, i32 0, i32 1
  %93 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.base::ObserverList"* %88 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = sub i64 %94, %96
  %98 = ashr exact i64 %97, 3
  %99 = load i64, i64* %63, align 8
  %100 = icmp ult i64 %98, %99
  %101 = select i1 %100, i64 %98, i64 %99
  %102 = icmp eq i64 %91, %101
  br i1 %102, label %159, label %103

103:                                              ; preds = %90, %85
  %104 = phi %"class.base::ObserverList"* [ %86, %85 ], [ %88, %90 ]
  %105 = icmp eq %"class.base::ObserverList"* %70, %104
  %106 = load i64, i64* %8, align 8
  %107 = load i64, i64* %62, align 8
  %108 = icmp eq i64 %106, %107
  %109 = and i1 %105, %108
  br i1 %109, label %156, label %110

110:                                              ; preds = %103
  %111 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %70, i64 0, i32 0, i32 0, i32 0
  %112 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %111, align 8
  %113 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %112, i64 %106
  %114 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %113 to %"class.ui::EventHandler"**
  %115 = load %"class.ui::EventHandler"*, %"class.ui::EventHandler"** %114, align 8
  %116 = load i32, i32* %67, align 4
  %117 = and i32 %116, 2
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %156

119:                                              ; preds = %110
  %120 = bitcast %"class.ui::EventHandler"* %115 to void (%"class.ui::EventHandler"*, %"class.ui::KeyEvent"*)***
  %121 = load void (%"class.ui::EventHandler"*, %"class.ui::KeyEvent"*)**, void (%"class.ui::EventHandler"*, %"class.ui::KeyEvent"*)*** %120, align 8
  %122 = getelementptr inbounds void (%"class.ui::EventHandler"*, %"class.ui::KeyEvent"*)*, void (%"class.ui::EventHandler"*, %"class.ui::KeyEvent"*)** %121, i64 3
  %123 = load void (%"class.ui::EventHandler"*, %"class.ui::KeyEvent"*)*, void (%"class.ui::EventHandler"*, %"class.ui::KeyEvent"*)** %122, align 8
  call void %123(%"class.ui::EventHandler"* %115, %"class.ui::KeyEvent"* %1) #11
  %124 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %125 = icmp eq %"class.base::ObserverList"* %124, null
  br i1 %125, label %126, label %127

126:                                              ; preds = %151, %147, %119, %127, %141
  br label %69

127:                                              ; preds = %119
  %128 = load i64, i64* %8, align 8
  %129 = add i64 %128, 1
  store i64 %129, i64* %8, align 8
  %130 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %124, i64 0, i32 0, i32 0, i32 1
  %131 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %"class.base::ObserverList"* %124 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = sub i64 %132, %134
  %136 = ashr exact i64 %135, 3
  %137 = load i64, i64* %9, align 8
  %138 = icmp ult i64 %136, %137
  %139 = select i1 %138, i64 %136, i64 %137
  %140 = icmp ult i64 %129, %139
  br i1 %140, label %141, label %126

141:                                              ; preds = %127
  %142 = inttoptr i64 %134 to %"class.base::internal::UncheckedObserverAdapter"*
  %143 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %124, i64 0, i32 0, i32 0, i32 0
  %144 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %142, i64 %129, i32 0
  %145 = load i8*, i8** %144, align 8
  %146 = icmp eq i8* %145, null
  br i1 %146, label %147, label %126

147:                                              ; preds = %141, %151
  %148 = phi i64 [ %149, %151 ], [ %129, %141 ]
  %149 = add nuw i64 %148, 1
  store i64 %149, i64* %8, align 8
  %150 = icmp ult i64 %149, %139
  br i1 %150, label %151, label %126

151:                                              ; preds = %147
  %152 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %143, align 8
  %153 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %152, i64 %149, i32 0
  %154 = load i8*, i8** %153, align 8
  %155 = icmp eq i8* %154, null
  br i1 %155, label %147, label %126

156:                                              ; preds = %103, %110
  %157 = phi %"class.base::ObserverList"* [ %104, %110 ], [ %70, %103 ]
  %158 = icmp eq %"class.base::ObserverList"* %157, null
  br i1 %158, label %250, label %159

159:                                              ; preds = %90, %156
  %160 = phi %"class.base::ObserverList"* [ %157, %156 ], [ %88, %90 ]
  %161 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %160, i64 0, i32 1
  %162 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %160, i64 0, i32 1, i32 0, i32 0, i32 1
  %163 = bitcast %"class.base::internal::LinkNodeBase"** %162 to %"class.base::LinkNode"**
  %164 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %163, align 8
  %165 = bitcast %"class.base::LinkedList"* %161 to %"class.base::LinkNode"**
  %166 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %165, align 8
  %167 = icmp eq %"class.base::LinkNode"* %164, %166
  br i1 %167, label %168, label %246

168:                                              ; preds = %159
  %169 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %160, i64 0, i32 0, i32 0, i32 0
  %170 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %169, align 8
  %171 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %160, i64 0, i32 0, i32 0, i32 1
  %172 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %171, align 8
  %173 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %170, %172
  br i1 %173, label %182, label %174

174:                                              ; preds = %168, %179
  %175 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %180, %179 ], [ %170, %168 ]
  %176 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %175, i64 0, i32 0
  %177 = load i8*, i8** %176, align 8
  %178 = icmp eq i8* %177, null
  br i1 %178, label %182, label %179

179:                                              ; preds = %174
  %180 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %175, i64 1
  %181 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %180, %172
  br i1 %181, label %246, label %174

182:                                              ; preds = %174, %168
  %183 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %170, %168 ], [ %175, %174 ]
  %184 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %183 to i64
  %185 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %183, %172
  br i1 %185, label %246, label %186

186:                                              ; preds = %182
  %187 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %183, i64 1
  %188 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %187, %172
  br i1 %188, label %241, label %189

189:                                              ; preds = %186
  %190 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %172, i64 -2, i32 0
  %191 = ptrtoint i8** %190 to i64
  %192 = sub i64 %191, %184
  %193 = lshr i64 %192, 3
  %194 = add nuw nsw i64 %193, 1
  %195 = and i64 %194, 3
  %196 = icmp eq i64 %195, 0
  br i1 %196, label %215, label %197

197:                                              ; preds = %189, %210
  %198 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %212, %210 ], [ %187, %189 ]
  %199 = phi i64 [ %211, %210 ], [ %184, %189 ]
  %200 = phi i64 [ %213, %210 ], [ %195, %189 ]
  %201 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %198, i64 0, i32 0
  %202 = load i8*, i8** %201, align 8
  %203 = icmp eq i8* %202, null
  br i1 %203, label %210, label %204

204:                                              ; preds = %197
  %205 = ptrtoint i8* %202 to i64
  %206 = inttoptr i64 %199 to %"class.base::internal::UncheckedObserverAdapter"*
  %207 = inttoptr i64 %199 to i64*
  store i64 %205, i64* %207, align 8
  %208 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %206, i64 1
  %209 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %208 to i64
  br label %210

210:                                              ; preds = %204, %197
  %211 = phi i64 [ %199, %197 ], [ %209, %204 ]
  %212 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %198, i64 1
  %213 = add i64 %200, -1
  %214 = icmp eq i64 %213, 0
  br i1 %214, label %215, label %197, !llvm.loop !10

215:                                              ; preds = %210, %189
  %216 = phi i64 [ undef, %189 ], [ %211, %210 ]
  %217 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %187, %189 ], [ %212, %210 ]
  %218 = phi i64 [ %184, %189 ], [ %211, %210 ]
  %219 = icmp ult i64 %192, 24
  br i1 %219, label %237, label %220

220:                                              ; preds = %215, %404
  %221 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %406, %404 ], [ %217, %215 ]
  %222 = phi i64 [ %405, %404 ], [ %218, %215 ]
  %223 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %221, i64 0, i32 0
  %224 = load i8*, i8** %223, align 8
  %225 = icmp eq i8* %224, null
  br i1 %225, label %232, label %226

226:                                              ; preds = %220
  %227 = ptrtoint i8* %224 to i64
  %228 = inttoptr i64 %222 to %"class.base::internal::UncheckedObserverAdapter"*
  %229 = inttoptr i64 %222 to i64*
  store i64 %227, i64* %229, align 8
  %230 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %228, i64 1
  %231 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %230 to i64
  br label %232

232:                                              ; preds = %226, %220
  %233 = phi i64 [ %222, %220 ], [ %231, %226 ]
  %234 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %221, i64 1, i32 0
  %235 = load i8*, i8** %234, align 8
  %236 = icmp eq i8* %235, null
  br i1 %236, label %382, label %376

237:                                              ; preds = %404, %215
  %238 = phi i64 [ %216, %215 ], [ %405, %404 ]
  %239 = inttoptr i64 %238 to %"class.base::internal::UncheckedObserverAdapter"*
  %240 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %171, align 8
  br label %241

241:                                              ; preds = %237, %186
  %242 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %172, %186 ], [ %240, %237 ]
  %243 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %183, %186 ], [ %239, %237 ]
  %244 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %243, %242
  br i1 %244, label %246, label %245

245:                                              ; preds = %241
  store %"class.base::internal::UncheckedObserverAdapter"* %243, %"class.base::internal::UncheckedObserverAdapter"** %171, align 8
  br label %246

246:                                              ; preds = %179, %245, %241, %182, %159
  %247 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %61, align 8
  %248 = icmp eq %"class.base::ObserverList"* %247, null
  br i1 %248, label %250, label %249

249:                                              ; preds = %246
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %61, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %64) #11
  br label %250

250:                                              ; preds = %87, %156, %246, %249
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %60) #11
  %251 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %252 = icmp eq %"class.base::ObserverList"* %251, null
  br i1 %252, label %343, label %253

253:                                              ; preds = %250
  %254 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %251, i64 0, i32 1
  %255 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %251, i64 0, i32 1, i32 0, i32 0, i32 1
  %256 = bitcast %"class.base::internal::LinkNodeBase"** %255 to %"class.base::LinkNode"**
  %257 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %256, align 8
  %258 = bitcast %"class.base::LinkedList"* %254 to %"class.base::LinkNode"**
  %259 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %258, align 8
  %260 = icmp eq %"class.base::LinkNode"* %257, %259
  br i1 %260, label %261, label %339

261:                                              ; preds = %253
  %262 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %251, i64 0, i32 0, i32 0, i32 0
  %263 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %262, align 8
  %264 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %251, i64 0, i32 0, i32 0, i32 1
  %265 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %264, align 8
  %266 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %263, %265
  br i1 %266, label %275, label %267

267:                                              ; preds = %261, %272
  %268 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %273, %272 ], [ %263, %261 ]
  %269 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %268, i64 0, i32 0
  %270 = load i8*, i8** %269, align 8
  %271 = icmp eq i8* %270, null
  br i1 %271, label %275, label %272

272:                                              ; preds = %267
  %273 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %268, i64 1
  %274 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %273, %265
  br i1 %274, label %339, label %267

275:                                              ; preds = %267, %261
  %276 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %263, %261 ], [ %268, %267 ]
  %277 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %276 to i64
  %278 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %276, %265
  br i1 %278, label %339, label %279

279:                                              ; preds = %275
  %280 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %276, i64 1
  %281 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %280, %265
  br i1 %281, label %334, label %282

282:                                              ; preds = %279
  %283 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %265, i64 -2, i32 0
  %284 = ptrtoint i8** %283 to i64
  %285 = sub i64 %284, %277
  %286 = lshr i64 %285, 3
  %287 = add nuw nsw i64 %286, 1
  %288 = and i64 %287, 3
  %289 = icmp eq i64 %288, 0
  br i1 %289, label %308, label %290

290:                                              ; preds = %282, %303
  %291 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %305, %303 ], [ %280, %282 ]
  %292 = phi i64 [ %304, %303 ], [ %277, %282 ]
  %293 = phi i64 [ %306, %303 ], [ %288, %282 ]
  %294 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %291, i64 0, i32 0
  %295 = load i8*, i8** %294, align 8
  %296 = icmp eq i8* %295, null
  br i1 %296, label %303, label %297

297:                                              ; preds = %290
  %298 = ptrtoint i8* %295 to i64
  %299 = inttoptr i64 %292 to %"class.base::internal::UncheckedObserverAdapter"*
  %300 = inttoptr i64 %292 to i64*
  store i64 %298, i64* %300, align 8
  %301 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %299, i64 1
  %302 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %301 to i64
  br label %303

303:                                              ; preds = %297, %290
  %304 = phi i64 [ %292, %290 ], [ %302, %297 ]
  %305 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %291, i64 1
  %306 = add i64 %293, -1
  %307 = icmp eq i64 %306, 0
  br i1 %307, label %308, label %290, !llvm.loop !11

308:                                              ; preds = %303, %282
  %309 = phi i64 [ undef, %282 ], [ %304, %303 ]
  %310 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %280, %282 ], [ %305, %303 ]
  %311 = phi i64 [ %277, %282 ], [ %304, %303 ]
  %312 = icmp ult i64 %285, 24
  br i1 %312, label %330, label %313

313:                                              ; preds = %308, %372
  %314 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %374, %372 ], [ %310, %308 ]
  %315 = phi i64 [ %373, %372 ], [ %311, %308 ]
  %316 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %314, i64 0, i32 0
  %317 = load i8*, i8** %316, align 8
  %318 = icmp eq i8* %317, null
  br i1 %318, label %325, label %319

319:                                              ; preds = %313
  %320 = ptrtoint i8* %317 to i64
  %321 = inttoptr i64 %315 to %"class.base::internal::UncheckedObserverAdapter"*
  %322 = inttoptr i64 %315 to i64*
  store i64 %320, i64* %322, align 8
  %323 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %321, i64 1
  %324 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %323 to i64
  br label %325

325:                                              ; preds = %319, %313
  %326 = phi i64 [ %315, %313 ], [ %324, %319 ]
  %327 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %314, i64 1, i32 0
  %328 = load i8*, i8** %327, align 8
  %329 = icmp eq i8* %328, null
  br i1 %329, label %350, label %344

330:                                              ; preds = %372, %308
  %331 = phi i64 [ %309, %308 ], [ %373, %372 ]
  %332 = inttoptr i64 %331 to %"class.base::internal::UncheckedObserverAdapter"*
  %333 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %264, align 8
  br label %334

334:                                              ; preds = %330, %279
  %335 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %265, %279 ], [ %333, %330 ]
  %336 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %276, %279 ], [ %332, %330 ]
  %337 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %336, %335
  br i1 %337, label %339, label %338

338:                                              ; preds = %334
  store %"class.base::internal::UncheckedObserverAdapter"* %336, %"class.base::internal::UncheckedObserverAdapter"** %264, align 8
  br label %339

339:                                              ; preds = %272, %338, %334, %275, %253
  %340 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %341 = icmp eq %"class.base::ObserverList"* %340, null
  br i1 %341, label %343, label %342

342:                                              ; preds = %339
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %7, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %16) #11
  br label %343

343:                                              ; preds = %250, %339, %342
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #11
  ret void

344:                                              ; preds = %325
  %345 = ptrtoint i8* %328 to i64
  %346 = inttoptr i64 %326 to %"class.base::internal::UncheckedObserverAdapter"*
  %347 = inttoptr i64 %326 to i64*
  store i64 %345, i64* %347, align 8
  %348 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %346, i64 1
  %349 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %348 to i64
  br label %350

350:                                              ; preds = %344, %325
  %351 = phi i64 [ %326, %325 ], [ %349, %344 ]
  %352 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %314, i64 2, i32 0
  %353 = load i8*, i8** %352, align 8
  %354 = icmp eq i8* %353, null
  br i1 %354, label %361, label %355

355:                                              ; preds = %350
  %356 = ptrtoint i8* %353 to i64
  %357 = inttoptr i64 %351 to %"class.base::internal::UncheckedObserverAdapter"*
  %358 = inttoptr i64 %351 to i64*
  store i64 %356, i64* %358, align 8
  %359 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %357, i64 1
  %360 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %359 to i64
  br label %361

361:                                              ; preds = %355, %350
  %362 = phi i64 [ %351, %350 ], [ %360, %355 ]
  %363 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %314, i64 3, i32 0
  %364 = load i8*, i8** %363, align 8
  %365 = icmp eq i8* %364, null
  br i1 %365, label %372, label %366

366:                                              ; preds = %361
  %367 = ptrtoint i8* %364 to i64
  %368 = inttoptr i64 %362 to %"class.base::internal::UncheckedObserverAdapter"*
  %369 = inttoptr i64 %362 to i64*
  store i64 %367, i64* %369, align 8
  %370 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %368, i64 1
  %371 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %370 to i64
  br label %372

372:                                              ; preds = %366, %361
  %373 = phi i64 [ %362, %361 ], [ %371, %366 ]
  %374 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %314, i64 4
  %375 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %374, %265
  br i1 %375, label %330, label %313

376:                                              ; preds = %232
  %377 = ptrtoint i8* %235 to i64
  %378 = inttoptr i64 %233 to %"class.base::internal::UncheckedObserverAdapter"*
  %379 = inttoptr i64 %233 to i64*
  store i64 %377, i64* %379, align 8
  %380 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %378, i64 1
  %381 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %380 to i64
  br label %382

382:                                              ; preds = %376, %232
  %383 = phi i64 [ %233, %232 ], [ %381, %376 ]
  %384 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %221, i64 2, i32 0
  %385 = load i8*, i8** %384, align 8
  %386 = icmp eq i8* %385, null
  br i1 %386, label %393, label %387

387:                                              ; preds = %382
  %388 = ptrtoint i8* %385 to i64
  %389 = inttoptr i64 %383 to %"class.base::internal::UncheckedObserverAdapter"*
  %390 = inttoptr i64 %383 to i64*
  store i64 %388, i64* %390, align 8
  %391 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %389, i64 1
  %392 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %391 to i64
  br label %393

393:                                              ; preds = %387, %382
  %394 = phi i64 [ %383, %382 ], [ %392, %387 ]
  %395 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %221, i64 3, i32 0
  %396 = load i8*, i8** %395, align 8
  %397 = icmp eq i8* %396, null
  br i1 %397, label %404, label %398

398:                                              ; preds = %393
  %399 = ptrtoint i8* %396 to i64
  %400 = inttoptr i64 %394 to %"class.base::internal::UncheckedObserverAdapter"*
  %401 = inttoptr i64 %394 to i64*
  store i64 %399, i64* %401, align 8
  %402 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %400, i64 1
  %403 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %402 to i64
  br label %404

404:                                              ; preds = %398, %393
  %405 = phi i64 [ %394, %393 ], [ %403, %398 ]
  %406 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %221, i64 4
  %407 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %406, %172
  br i1 %407, label %237, label %220
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm19CompoundEventFilter16FilterMouseEventEPN2ui10MouseEventE(%"class.wm::CompoundEventFilter"*, %"class.ui::MouseEvent"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = alloca %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = getelementptr inbounds %"class.wm::CompoundEventFilter", %"class.wm::CompoundEventFilter"* %0, i64 0, i32 1
  %6 = bitcast %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %9 = getelementptr inbounds %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %10 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %5, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 40, i1 false)
  %12 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %10, align 8, !noalias !12
  %13 = getelementptr inbounds %"class.wm::CompoundEventFilter", %"class.wm::CompoundEventFilter"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %14 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %13, align 8, !noalias !12
  %15 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %12, %14
  %16 = getelementptr inbounds %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %16) #11
  br i1 %15, label %17, label %19

17:                                               ; preds = %2
  %18 = bitcast %"class.base::ObserverList"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #11, !alias.scope !12
  br label %59

19:                                               ; preds = %2
  store %"class.base::ObserverList"* %5, %"class.base::ObserverList"** %7, align 8, !alias.scope !12
  %20 = getelementptr inbounds %"class.wm::CompoundEventFilter", %"class.wm::CompoundEventFilter"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %16, %"class.base::internal::LinkNodeBase"* %20) #11
  store i64 0, i64* %8, align 8, !alias.scope !12
  %21 = getelementptr inbounds %"class.wm::CompoundEventFilter", %"class.wm::CompoundEventFilter"* %0, i64 0, i32 1, i32 3
  %22 = load i32, i32* %21, align 8, !noalias !12
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %19
  %25 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %13 to i64*
  %26 = load i64, i64* %25, align 8, !noalias !12
  %27 = bitcast %"class.base::ObserverList"* %5 to i64*
  %28 = load i64, i64* %27, align 8, !noalias !12
  %29 = sub i64 %26, %28
  %30 = ashr exact i64 %29, 3
  br label %31

31:                                               ; preds = %24, %19
  %32 = phi i64 [ %30, %24 ], [ -1, %19 ]
  store i64 %32, i64* %9, align 8, !alias.scope !12
  %33 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8, !alias.scope !12
  %34 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %33, i64 0, i32 0, i32 0, i32 1
  %35 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.base::ObserverList"* %33 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %36, %38
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, %32
  %42 = select i1 %41, i64 %40, i64 %32
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %59, label %44

44:                                               ; preds = %31
  %45 = inttoptr i64 %38 to %"class.base::internal::UncheckedObserverAdapter"*
  %46 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %33, i64 0, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %45, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %50, label %59

50:                                               ; preds = %44, %54
  %51 = phi i64 [ %52, %54 ], [ 0, %44 ]
  %52 = add nuw i64 %51, 1
  store i64 %52, i64* %8, align 8, !alias.scope !12
  %53 = icmp ult i64 %52, %42
  br i1 %53, label %54, label %59

54:                                               ; preds = %50
  %55 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %46, align 8
  %56 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %55, i64 %52, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = icmp eq i8* %57, null
  br i1 %58, label %50, label %59

59:                                               ; preds = %50, %54, %17, %31, %44
  %60 = bitcast %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %60) #11
  %61 = getelementptr inbounds %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %63 = getelementptr inbounds %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %64 = getelementptr inbounds %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %64) #11
  %66 = bitcast %"class.base::ObserverList"** %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 24, i1 false) #11, !alias.scope !15
  %67 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %1, i64 0, i32 0, i32 0, i32 10
  %68 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  br label %69

69:                                               ; preds = %126, %59
  %70 = phi %"class.base::ObserverList"* [ %68, %59 ], [ %124, %126 ]
  %71 = icmp eq %"class.base::ObserverList"* %70, null
  br i1 %71, label %87, label %72

72:                                               ; preds = %69
  %73 = load i64, i64* %8, align 8
  %74 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %70, i64 0, i32 0, i32 0, i32 1
  %75 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"class.base::ObserverList"* %70 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = sub i64 %76, %78
  %80 = ashr exact i64 %79, 3
  %81 = load i64, i64* %9, align 8
  %82 = icmp ult i64 %80, %81
  %83 = select i1 %82, i64 %80, i64 %81
  %84 = icmp eq i64 %73, %83
  br i1 %84, label %87, label %85

85:                                               ; preds = %72
  %86 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %61, align 8
  br label %103

87:                                               ; preds = %72, %69
  %88 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %61, align 8
  %89 = icmp eq %"class.base::ObserverList"* %88, null
  br i1 %89, label %250, label %90

90:                                               ; preds = %87
  %91 = load i64, i64* %62, align 8
  %92 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %88, i64 0, i32 0, i32 0, i32 1
  %93 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.base::ObserverList"* %88 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = sub i64 %94, %96
  %98 = ashr exact i64 %97, 3
  %99 = load i64, i64* %63, align 8
  %100 = icmp ult i64 %98, %99
  %101 = select i1 %100, i64 %98, i64 %99
  %102 = icmp eq i64 %91, %101
  br i1 %102, label %159, label %103

103:                                              ; preds = %90, %85
  %104 = phi %"class.base::ObserverList"* [ %86, %85 ], [ %88, %90 ]
  %105 = icmp eq %"class.base::ObserverList"* %70, %104
  %106 = load i64, i64* %8, align 8
  %107 = load i64, i64* %62, align 8
  %108 = icmp eq i64 %106, %107
  %109 = and i1 %105, %108
  br i1 %109, label %156, label %110

110:                                              ; preds = %103
  %111 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %70, i64 0, i32 0, i32 0, i32 0
  %112 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %111, align 8
  %113 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %112, i64 %106
  %114 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %113 to %"class.ui::EventHandler"**
  %115 = load %"class.ui::EventHandler"*, %"class.ui::EventHandler"** %114, align 8
  %116 = load i32, i32* %67, align 4
  %117 = and i32 %116, 2
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %156

119:                                              ; preds = %110
  %120 = bitcast %"class.ui::EventHandler"* %115 to void (%"class.ui::EventHandler"*, %"class.ui::MouseEvent"*)***
  %121 = load void (%"class.ui::EventHandler"*, %"class.ui::MouseEvent"*)**, void (%"class.ui::EventHandler"*, %"class.ui::MouseEvent"*)*** %120, align 8
  %122 = getelementptr inbounds void (%"class.ui::EventHandler"*, %"class.ui::MouseEvent"*)*, void (%"class.ui::EventHandler"*, %"class.ui::MouseEvent"*)** %121, i64 4
  %123 = load void (%"class.ui::EventHandler"*, %"class.ui::MouseEvent"*)*, void (%"class.ui::EventHandler"*, %"class.ui::MouseEvent"*)** %122, align 8
  call void %123(%"class.ui::EventHandler"* %115, %"class.ui::MouseEvent"* %1) #11
  %124 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %125 = icmp eq %"class.base::ObserverList"* %124, null
  br i1 %125, label %126, label %127

126:                                              ; preds = %151, %147, %119, %127, %141
  br label %69

127:                                              ; preds = %119
  %128 = load i64, i64* %8, align 8
  %129 = add i64 %128, 1
  store i64 %129, i64* %8, align 8
  %130 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %124, i64 0, i32 0, i32 0, i32 1
  %131 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %"class.base::ObserverList"* %124 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = sub i64 %132, %134
  %136 = ashr exact i64 %135, 3
  %137 = load i64, i64* %9, align 8
  %138 = icmp ult i64 %136, %137
  %139 = select i1 %138, i64 %136, i64 %137
  %140 = icmp ult i64 %129, %139
  br i1 %140, label %141, label %126

141:                                              ; preds = %127
  %142 = inttoptr i64 %134 to %"class.base::internal::UncheckedObserverAdapter"*
  %143 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %124, i64 0, i32 0, i32 0, i32 0
  %144 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %142, i64 %129, i32 0
  %145 = load i8*, i8** %144, align 8
  %146 = icmp eq i8* %145, null
  br i1 %146, label %147, label %126

147:                                              ; preds = %141, %151
  %148 = phi i64 [ %149, %151 ], [ %129, %141 ]
  %149 = add nuw i64 %148, 1
  store i64 %149, i64* %8, align 8
  %150 = icmp ult i64 %149, %139
  br i1 %150, label %151, label %126

151:                                              ; preds = %147
  %152 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %143, align 8
  %153 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %152, i64 %149, i32 0
  %154 = load i8*, i8** %153, align 8
  %155 = icmp eq i8* %154, null
  br i1 %155, label %147, label %126

156:                                              ; preds = %103, %110
  %157 = phi %"class.base::ObserverList"* [ %104, %110 ], [ %70, %103 ]
  %158 = icmp eq %"class.base::ObserverList"* %157, null
  br i1 %158, label %250, label %159

159:                                              ; preds = %90, %156
  %160 = phi %"class.base::ObserverList"* [ %157, %156 ], [ %88, %90 ]
  %161 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %160, i64 0, i32 1
  %162 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %160, i64 0, i32 1, i32 0, i32 0, i32 1
  %163 = bitcast %"class.base::internal::LinkNodeBase"** %162 to %"class.base::LinkNode"**
  %164 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %163, align 8
  %165 = bitcast %"class.base::LinkedList"* %161 to %"class.base::LinkNode"**
  %166 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %165, align 8
  %167 = icmp eq %"class.base::LinkNode"* %164, %166
  br i1 %167, label %168, label %246

168:                                              ; preds = %159
  %169 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %160, i64 0, i32 0, i32 0, i32 0
  %170 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %169, align 8
  %171 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %160, i64 0, i32 0, i32 0, i32 1
  %172 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %171, align 8
  %173 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %170, %172
  br i1 %173, label %182, label %174

174:                                              ; preds = %168, %179
  %175 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %180, %179 ], [ %170, %168 ]
  %176 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %175, i64 0, i32 0
  %177 = load i8*, i8** %176, align 8
  %178 = icmp eq i8* %177, null
  br i1 %178, label %182, label %179

179:                                              ; preds = %174
  %180 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %175, i64 1
  %181 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %180, %172
  br i1 %181, label %246, label %174

182:                                              ; preds = %174, %168
  %183 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %170, %168 ], [ %175, %174 ]
  %184 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %183 to i64
  %185 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %183, %172
  br i1 %185, label %246, label %186

186:                                              ; preds = %182
  %187 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %183, i64 1
  %188 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %187, %172
  br i1 %188, label %241, label %189

189:                                              ; preds = %186
  %190 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %172, i64 -2, i32 0
  %191 = ptrtoint i8** %190 to i64
  %192 = sub i64 %191, %184
  %193 = lshr i64 %192, 3
  %194 = add nuw nsw i64 %193, 1
  %195 = and i64 %194, 3
  %196 = icmp eq i64 %195, 0
  br i1 %196, label %215, label %197

197:                                              ; preds = %189, %210
  %198 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %212, %210 ], [ %187, %189 ]
  %199 = phi i64 [ %211, %210 ], [ %184, %189 ]
  %200 = phi i64 [ %213, %210 ], [ %195, %189 ]
  %201 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %198, i64 0, i32 0
  %202 = load i8*, i8** %201, align 8
  %203 = icmp eq i8* %202, null
  br i1 %203, label %210, label %204

204:                                              ; preds = %197
  %205 = ptrtoint i8* %202 to i64
  %206 = inttoptr i64 %199 to %"class.base::internal::UncheckedObserverAdapter"*
  %207 = inttoptr i64 %199 to i64*
  store i64 %205, i64* %207, align 8
  %208 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %206, i64 1
  %209 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %208 to i64
  br label %210

210:                                              ; preds = %204, %197
  %211 = phi i64 [ %199, %197 ], [ %209, %204 ]
  %212 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %198, i64 1
  %213 = add i64 %200, -1
  %214 = icmp eq i64 %213, 0
  br i1 %214, label %215, label %197, !llvm.loop !18

215:                                              ; preds = %210, %189
  %216 = phi i64 [ undef, %189 ], [ %211, %210 ]
  %217 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %187, %189 ], [ %212, %210 ]
  %218 = phi i64 [ %184, %189 ], [ %211, %210 ]
  %219 = icmp ult i64 %192, 24
  br i1 %219, label %237, label %220

220:                                              ; preds = %215, %404
  %221 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %406, %404 ], [ %217, %215 ]
  %222 = phi i64 [ %405, %404 ], [ %218, %215 ]
  %223 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %221, i64 0, i32 0
  %224 = load i8*, i8** %223, align 8
  %225 = icmp eq i8* %224, null
  br i1 %225, label %232, label %226

226:                                              ; preds = %220
  %227 = ptrtoint i8* %224 to i64
  %228 = inttoptr i64 %222 to %"class.base::internal::UncheckedObserverAdapter"*
  %229 = inttoptr i64 %222 to i64*
  store i64 %227, i64* %229, align 8
  %230 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %228, i64 1
  %231 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %230 to i64
  br label %232

232:                                              ; preds = %226, %220
  %233 = phi i64 [ %222, %220 ], [ %231, %226 ]
  %234 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %221, i64 1, i32 0
  %235 = load i8*, i8** %234, align 8
  %236 = icmp eq i8* %235, null
  br i1 %236, label %382, label %376

237:                                              ; preds = %404, %215
  %238 = phi i64 [ %216, %215 ], [ %405, %404 ]
  %239 = inttoptr i64 %238 to %"class.base::internal::UncheckedObserverAdapter"*
  %240 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %171, align 8
  br label %241

241:                                              ; preds = %237, %186
  %242 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %172, %186 ], [ %240, %237 ]
  %243 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %183, %186 ], [ %239, %237 ]
  %244 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %243, %242
  br i1 %244, label %246, label %245

245:                                              ; preds = %241
  store %"class.base::internal::UncheckedObserverAdapter"* %243, %"class.base::internal::UncheckedObserverAdapter"** %171, align 8
  br label %246

246:                                              ; preds = %179, %245, %241, %182, %159
  %247 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %61, align 8
  %248 = icmp eq %"class.base::ObserverList"* %247, null
  br i1 %248, label %250, label %249

249:                                              ; preds = %246
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %61, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %64) #11
  br label %250

250:                                              ; preds = %87, %156, %246, %249
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %60) #11
  %251 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %252 = icmp eq %"class.base::ObserverList"* %251, null
  br i1 %252, label %343, label %253

253:                                              ; preds = %250
  %254 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %251, i64 0, i32 1
  %255 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %251, i64 0, i32 1, i32 0, i32 0, i32 1
  %256 = bitcast %"class.base::internal::LinkNodeBase"** %255 to %"class.base::LinkNode"**
  %257 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %256, align 8
  %258 = bitcast %"class.base::LinkedList"* %254 to %"class.base::LinkNode"**
  %259 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %258, align 8
  %260 = icmp eq %"class.base::LinkNode"* %257, %259
  br i1 %260, label %261, label %339

261:                                              ; preds = %253
  %262 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %251, i64 0, i32 0, i32 0, i32 0
  %263 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %262, align 8
  %264 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %251, i64 0, i32 0, i32 0, i32 1
  %265 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %264, align 8
  %266 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %263, %265
  br i1 %266, label %275, label %267

267:                                              ; preds = %261, %272
  %268 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %273, %272 ], [ %263, %261 ]
  %269 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %268, i64 0, i32 0
  %270 = load i8*, i8** %269, align 8
  %271 = icmp eq i8* %270, null
  br i1 %271, label %275, label %272

272:                                              ; preds = %267
  %273 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %268, i64 1
  %274 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %273, %265
  br i1 %274, label %339, label %267

275:                                              ; preds = %267, %261
  %276 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %263, %261 ], [ %268, %267 ]
  %277 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %276 to i64
  %278 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %276, %265
  br i1 %278, label %339, label %279

279:                                              ; preds = %275
  %280 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %276, i64 1
  %281 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %280, %265
  br i1 %281, label %334, label %282

282:                                              ; preds = %279
  %283 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %265, i64 -2, i32 0
  %284 = ptrtoint i8** %283 to i64
  %285 = sub i64 %284, %277
  %286 = lshr i64 %285, 3
  %287 = add nuw nsw i64 %286, 1
  %288 = and i64 %287, 3
  %289 = icmp eq i64 %288, 0
  br i1 %289, label %308, label %290

290:                                              ; preds = %282, %303
  %291 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %305, %303 ], [ %280, %282 ]
  %292 = phi i64 [ %304, %303 ], [ %277, %282 ]
  %293 = phi i64 [ %306, %303 ], [ %288, %282 ]
  %294 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %291, i64 0, i32 0
  %295 = load i8*, i8** %294, align 8
  %296 = icmp eq i8* %295, null
  br i1 %296, label %303, label %297

297:                                              ; preds = %290
  %298 = ptrtoint i8* %295 to i64
  %299 = inttoptr i64 %292 to %"class.base::internal::UncheckedObserverAdapter"*
  %300 = inttoptr i64 %292 to i64*
  store i64 %298, i64* %300, align 8
  %301 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %299, i64 1
  %302 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %301 to i64
  br label %303

303:                                              ; preds = %297, %290
  %304 = phi i64 [ %292, %290 ], [ %302, %297 ]
  %305 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %291, i64 1
  %306 = add i64 %293, -1
  %307 = icmp eq i64 %306, 0
  br i1 %307, label %308, label %290, !llvm.loop !19

308:                                              ; preds = %303, %282
  %309 = phi i64 [ undef, %282 ], [ %304, %303 ]
  %310 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %280, %282 ], [ %305, %303 ]
  %311 = phi i64 [ %277, %282 ], [ %304, %303 ]
  %312 = icmp ult i64 %285, 24
  br i1 %312, label %330, label %313

313:                                              ; preds = %308, %372
  %314 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %374, %372 ], [ %310, %308 ]
  %315 = phi i64 [ %373, %372 ], [ %311, %308 ]
  %316 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %314, i64 0, i32 0
  %317 = load i8*, i8** %316, align 8
  %318 = icmp eq i8* %317, null
  br i1 %318, label %325, label %319

319:                                              ; preds = %313
  %320 = ptrtoint i8* %317 to i64
  %321 = inttoptr i64 %315 to %"class.base::internal::UncheckedObserverAdapter"*
  %322 = inttoptr i64 %315 to i64*
  store i64 %320, i64* %322, align 8
  %323 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %321, i64 1
  %324 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %323 to i64
  br label %325

325:                                              ; preds = %319, %313
  %326 = phi i64 [ %315, %313 ], [ %324, %319 ]
  %327 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %314, i64 1, i32 0
  %328 = load i8*, i8** %327, align 8
  %329 = icmp eq i8* %328, null
  br i1 %329, label %350, label %344

330:                                              ; preds = %372, %308
  %331 = phi i64 [ %309, %308 ], [ %373, %372 ]
  %332 = inttoptr i64 %331 to %"class.base::internal::UncheckedObserverAdapter"*
  %333 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %264, align 8
  br label %334

334:                                              ; preds = %330, %279
  %335 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %265, %279 ], [ %333, %330 ]
  %336 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %276, %279 ], [ %332, %330 ]
  %337 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %336, %335
  br i1 %337, label %339, label %338

338:                                              ; preds = %334
  store %"class.base::internal::UncheckedObserverAdapter"* %336, %"class.base::internal::UncheckedObserverAdapter"** %264, align 8
  br label %339

339:                                              ; preds = %272, %338, %334, %275, %253
  %340 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %341 = icmp eq %"class.base::ObserverList"* %340, null
  br i1 %341, label %343, label %342

342:                                              ; preds = %339
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %7, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %16) #11
  br label %343

343:                                              ; preds = %250, %339, %342
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #11
  ret void

344:                                              ; preds = %325
  %345 = ptrtoint i8* %328 to i64
  %346 = inttoptr i64 %326 to %"class.base::internal::UncheckedObserverAdapter"*
  %347 = inttoptr i64 %326 to i64*
  store i64 %345, i64* %347, align 8
  %348 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %346, i64 1
  %349 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %348 to i64
  br label %350

350:                                              ; preds = %344, %325
  %351 = phi i64 [ %326, %325 ], [ %349, %344 ]
  %352 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %314, i64 2, i32 0
  %353 = load i8*, i8** %352, align 8
  %354 = icmp eq i8* %353, null
  br i1 %354, label %361, label %355

355:                                              ; preds = %350
  %356 = ptrtoint i8* %353 to i64
  %357 = inttoptr i64 %351 to %"class.base::internal::UncheckedObserverAdapter"*
  %358 = inttoptr i64 %351 to i64*
  store i64 %356, i64* %358, align 8
  %359 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %357, i64 1
  %360 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %359 to i64
  br label %361

361:                                              ; preds = %355, %350
  %362 = phi i64 [ %351, %350 ], [ %360, %355 ]
  %363 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %314, i64 3, i32 0
  %364 = load i8*, i8** %363, align 8
  %365 = icmp eq i8* %364, null
  br i1 %365, label %372, label %366

366:                                              ; preds = %361
  %367 = ptrtoint i8* %364 to i64
  %368 = inttoptr i64 %362 to %"class.base::internal::UncheckedObserverAdapter"*
  %369 = inttoptr i64 %362 to i64*
  store i64 %367, i64* %369, align 8
  %370 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %368, i64 1
  %371 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %370 to i64
  br label %372

372:                                              ; preds = %366, %361
  %373 = phi i64 [ %362, %361 ], [ %371, %366 ]
  %374 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %314, i64 4
  %375 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %374, %265
  br i1 %375, label %330, label %313

376:                                              ; preds = %232
  %377 = ptrtoint i8* %235 to i64
  %378 = inttoptr i64 %233 to %"class.base::internal::UncheckedObserverAdapter"*
  %379 = inttoptr i64 %233 to i64*
  store i64 %377, i64* %379, align 8
  %380 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %378, i64 1
  %381 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %380 to i64
  br label %382

382:                                              ; preds = %376, %232
  %383 = phi i64 [ %233, %232 ], [ %381, %376 ]
  %384 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %221, i64 2, i32 0
  %385 = load i8*, i8** %384, align 8
  %386 = icmp eq i8* %385, null
  br i1 %386, label %393, label %387

387:                                              ; preds = %382
  %388 = ptrtoint i8* %385 to i64
  %389 = inttoptr i64 %383 to %"class.base::internal::UncheckedObserverAdapter"*
  %390 = inttoptr i64 %383 to i64*
  store i64 %388, i64* %390, align 8
  %391 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %389, i64 1
  %392 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %391 to i64
  br label %393

393:                                              ; preds = %387, %382
  %394 = phi i64 [ %383, %382 ], [ %392, %387 ]
  %395 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %221, i64 3, i32 0
  %396 = load i8*, i8** %395, align 8
  %397 = icmp eq i8* %396, null
  br i1 %397, label %404, label %398

398:                                              ; preds = %393
  %399 = ptrtoint i8* %396 to i64
  %400 = inttoptr i64 %394 to %"class.base::internal::UncheckedObserverAdapter"*
  %401 = inttoptr i64 %394 to i64*
  store i64 %399, i64* %401, align 8
  %402 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %400, i64 1
  %403 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %402 to i64
  br label %404

404:                                              ; preds = %398, %393
  %405 = phi i64 [ %394, %393 ], [ %403, %398 ]
  %406 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %221, i64 4
  %407 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %406, %172
  br i1 %407, label %237, label %220
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm19CompoundEventFilter16FilterTouchEventEPN2ui10TouchEventE(%"class.wm::CompoundEventFilter"*, %"class.ui::TouchEvent"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = alloca %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = getelementptr inbounds %"class.wm::CompoundEventFilter", %"class.wm::CompoundEventFilter"* %0, i64 0, i32 1
  %6 = bitcast %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %9 = getelementptr inbounds %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %10 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %5, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 40, i1 false)
  %12 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %10, align 8, !noalias !20
  %13 = getelementptr inbounds %"class.wm::CompoundEventFilter", %"class.wm::CompoundEventFilter"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %14 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %13, align 8, !noalias !20
  %15 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %12, %14
  %16 = getelementptr inbounds %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %16) #11
  br i1 %15, label %17, label %19

17:                                               ; preds = %2
  %18 = bitcast %"class.base::ObserverList"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #11, !alias.scope !20
  br label %59

19:                                               ; preds = %2
  store %"class.base::ObserverList"* %5, %"class.base::ObserverList"** %7, align 8, !alias.scope !20
  %20 = getelementptr inbounds %"class.wm::CompoundEventFilter", %"class.wm::CompoundEventFilter"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %16, %"class.base::internal::LinkNodeBase"* %20) #11
  store i64 0, i64* %8, align 8, !alias.scope !20
  %21 = getelementptr inbounds %"class.wm::CompoundEventFilter", %"class.wm::CompoundEventFilter"* %0, i64 0, i32 1, i32 3
  %22 = load i32, i32* %21, align 8, !noalias !20
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %19
  %25 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %13 to i64*
  %26 = load i64, i64* %25, align 8, !noalias !20
  %27 = bitcast %"class.base::ObserverList"* %5 to i64*
  %28 = load i64, i64* %27, align 8, !noalias !20
  %29 = sub i64 %26, %28
  %30 = ashr exact i64 %29, 3
  br label %31

31:                                               ; preds = %24, %19
  %32 = phi i64 [ %30, %24 ], [ -1, %19 ]
  store i64 %32, i64* %9, align 8, !alias.scope !20
  %33 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8, !alias.scope !20
  %34 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %33, i64 0, i32 0, i32 0, i32 1
  %35 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.base::ObserverList"* %33 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %36, %38
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, %32
  %42 = select i1 %41, i64 %40, i64 %32
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %59, label %44

44:                                               ; preds = %31
  %45 = inttoptr i64 %38 to %"class.base::internal::UncheckedObserverAdapter"*
  %46 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %33, i64 0, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %45, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %50, label %59

50:                                               ; preds = %44, %54
  %51 = phi i64 [ %52, %54 ], [ 0, %44 ]
  %52 = add nuw i64 %51, 1
  store i64 %52, i64* %8, align 8, !alias.scope !20
  %53 = icmp ult i64 %52, %42
  br i1 %53, label %54, label %59

54:                                               ; preds = %50
  %55 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %46, align 8
  %56 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %55, i64 %52, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = icmp eq i8* %57, null
  br i1 %58, label %50, label %59

59:                                               ; preds = %50, %54, %17, %31, %44
  %60 = bitcast %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %60) #11
  %61 = getelementptr inbounds %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %63 = getelementptr inbounds %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %64 = getelementptr inbounds %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %64) #11
  %66 = bitcast %"class.base::ObserverList"** %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 24, i1 false) #11, !alias.scope !23
  %67 = getelementptr inbounds %"class.ui::TouchEvent", %"class.ui::TouchEvent"* %1, i64 0, i32 0, i32 0, i32 10
  %68 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  br label %69

69:                                               ; preds = %126, %59
  %70 = phi %"class.base::ObserverList"* [ %68, %59 ], [ %124, %126 ]
  %71 = icmp eq %"class.base::ObserverList"* %70, null
  br i1 %71, label %87, label %72

72:                                               ; preds = %69
  %73 = load i64, i64* %8, align 8
  %74 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %70, i64 0, i32 0, i32 0, i32 1
  %75 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"class.base::ObserverList"* %70 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = sub i64 %76, %78
  %80 = ashr exact i64 %79, 3
  %81 = load i64, i64* %9, align 8
  %82 = icmp ult i64 %80, %81
  %83 = select i1 %82, i64 %80, i64 %81
  %84 = icmp eq i64 %73, %83
  br i1 %84, label %87, label %85

85:                                               ; preds = %72
  %86 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %61, align 8
  br label %103

87:                                               ; preds = %72, %69
  %88 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %61, align 8
  %89 = icmp eq %"class.base::ObserverList"* %88, null
  br i1 %89, label %250, label %90

90:                                               ; preds = %87
  %91 = load i64, i64* %62, align 8
  %92 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %88, i64 0, i32 0, i32 0, i32 1
  %93 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.base::ObserverList"* %88 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = sub i64 %94, %96
  %98 = ashr exact i64 %97, 3
  %99 = load i64, i64* %63, align 8
  %100 = icmp ult i64 %98, %99
  %101 = select i1 %100, i64 %98, i64 %99
  %102 = icmp eq i64 %91, %101
  br i1 %102, label %159, label %103

103:                                              ; preds = %90, %85
  %104 = phi %"class.base::ObserverList"* [ %86, %85 ], [ %88, %90 ]
  %105 = icmp eq %"class.base::ObserverList"* %70, %104
  %106 = load i64, i64* %8, align 8
  %107 = load i64, i64* %62, align 8
  %108 = icmp eq i64 %106, %107
  %109 = and i1 %105, %108
  br i1 %109, label %156, label %110

110:                                              ; preds = %103
  %111 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %70, i64 0, i32 0, i32 0, i32 0
  %112 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %111, align 8
  %113 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %112, i64 %106
  %114 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %113 to %"class.ui::EventHandler"**
  %115 = load %"class.ui::EventHandler"*, %"class.ui::EventHandler"** %114, align 8
  %116 = load i32, i32* %67, align 4
  %117 = and i32 %116, 2
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %156

119:                                              ; preds = %110
  %120 = bitcast %"class.ui::EventHandler"* %115 to void (%"class.ui::EventHandler"*, %"class.ui::TouchEvent"*)***
  %121 = load void (%"class.ui::EventHandler"*, %"class.ui::TouchEvent"*)**, void (%"class.ui::EventHandler"*, %"class.ui::TouchEvent"*)*** %120, align 8
  %122 = getelementptr inbounds void (%"class.ui::EventHandler"*, %"class.ui::TouchEvent"*)*, void (%"class.ui::EventHandler"*, %"class.ui::TouchEvent"*)** %121, i64 6
  %123 = load void (%"class.ui::EventHandler"*, %"class.ui::TouchEvent"*)*, void (%"class.ui::EventHandler"*, %"class.ui::TouchEvent"*)** %122, align 8
  call void %123(%"class.ui::EventHandler"* %115, %"class.ui::TouchEvent"* %1) #11
  %124 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %125 = icmp eq %"class.base::ObserverList"* %124, null
  br i1 %125, label %126, label %127

126:                                              ; preds = %151, %147, %119, %127, %141
  br label %69

127:                                              ; preds = %119
  %128 = load i64, i64* %8, align 8
  %129 = add i64 %128, 1
  store i64 %129, i64* %8, align 8
  %130 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %124, i64 0, i32 0, i32 0, i32 1
  %131 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %"class.base::ObserverList"* %124 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = sub i64 %132, %134
  %136 = ashr exact i64 %135, 3
  %137 = load i64, i64* %9, align 8
  %138 = icmp ult i64 %136, %137
  %139 = select i1 %138, i64 %136, i64 %137
  %140 = icmp ult i64 %129, %139
  br i1 %140, label %141, label %126

141:                                              ; preds = %127
  %142 = inttoptr i64 %134 to %"class.base::internal::UncheckedObserverAdapter"*
  %143 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %124, i64 0, i32 0, i32 0, i32 0
  %144 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %142, i64 %129, i32 0
  %145 = load i8*, i8** %144, align 8
  %146 = icmp eq i8* %145, null
  br i1 %146, label %147, label %126

147:                                              ; preds = %141, %151
  %148 = phi i64 [ %149, %151 ], [ %129, %141 ]
  %149 = add nuw i64 %148, 1
  store i64 %149, i64* %8, align 8
  %150 = icmp ult i64 %149, %139
  br i1 %150, label %151, label %126

151:                                              ; preds = %147
  %152 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %143, align 8
  %153 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %152, i64 %149, i32 0
  %154 = load i8*, i8** %153, align 8
  %155 = icmp eq i8* %154, null
  br i1 %155, label %147, label %126

156:                                              ; preds = %103, %110
  %157 = phi %"class.base::ObserverList"* [ %104, %110 ], [ %70, %103 ]
  %158 = icmp eq %"class.base::ObserverList"* %157, null
  br i1 %158, label %250, label %159

159:                                              ; preds = %90, %156
  %160 = phi %"class.base::ObserverList"* [ %157, %156 ], [ %88, %90 ]
  %161 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %160, i64 0, i32 1
  %162 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %160, i64 0, i32 1, i32 0, i32 0, i32 1
  %163 = bitcast %"class.base::internal::LinkNodeBase"** %162 to %"class.base::LinkNode"**
  %164 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %163, align 8
  %165 = bitcast %"class.base::LinkedList"* %161 to %"class.base::LinkNode"**
  %166 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %165, align 8
  %167 = icmp eq %"class.base::LinkNode"* %164, %166
  br i1 %167, label %168, label %246

168:                                              ; preds = %159
  %169 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %160, i64 0, i32 0, i32 0, i32 0
  %170 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %169, align 8
  %171 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %160, i64 0, i32 0, i32 0, i32 1
  %172 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %171, align 8
  %173 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %170, %172
  br i1 %173, label %182, label %174

174:                                              ; preds = %168, %179
  %175 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %180, %179 ], [ %170, %168 ]
  %176 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %175, i64 0, i32 0
  %177 = load i8*, i8** %176, align 8
  %178 = icmp eq i8* %177, null
  br i1 %178, label %182, label %179

179:                                              ; preds = %174
  %180 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %175, i64 1
  %181 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %180, %172
  br i1 %181, label %246, label %174

182:                                              ; preds = %174, %168
  %183 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %170, %168 ], [ %175, %174 ]
  %184 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %183 to i64
  %185 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %183, %172
  br i1 %185, label %246, label %186

186:                                              ; preds = %182
  %187 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %183, i64 1
  %188 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %187, %172
  br i1 %188, label %241, label %189

189:                                              ; preds = %186
  %190 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %172, i64 -2, i32 0
  %191 = ptrtoint i8** %190 to i64
  %192 = sub i64 %191, %184
  %193 = lshr i64 %192, 3
  %194 = add nuw nsw i64 %193, 1
  %195 = and i64 %194, 3
  %196 = icmp eq i64 %195, 0
  br i1 %196, label %215, label %197

197:                                              ; preds = %189, %210
  %198 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %212, %210 ], [ %187, %189 ]
  %199 = phi i64 [ %211, %210 ], [ %184, %189 ]
  %200 = phi i64 [ %213, %210 ], [ %195, %189 ]
  %201 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %198, i64 0, i32 0
  %202 = load i8*, i8** %201, align 8
  %203 = icmp eq i8* %202, null
  br i1 %203, label %210, label %204

204:                                              ; preds = %197
  %205 = ptrtoint i8* %202 to i64
  %206 = inttoptr i64 %199 to %"class.base::internal::UncheckedObserverAdapter"*
  %207 = inttoptr i64 %199 to i64*
  store i64 %205, i64* %207, align 8
  %208 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %206, i64 1
  %209 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %208 to i64
  br label %210

210:                                              ; preds = %204, %197
  %211 = phi i64 [ %199, %197 ], [ %209, %204 ]
  %212 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %198, i64 1
  %213 = add i64 %200, -1
  %214 = icmp eq i64 %213, 0
  br i1 %214, label %215, label %197, !llvm.loop !26

215:                                              ; preds = %210, %189
  %216 = phi i64 [ undef, %189 ], [ %211, %210 ]
  %217 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %187, %189 ], [ %212, %210 ]
  %218 = phi i64 [ %184, %189 ], [ %211, %210 ]
  %219 = icmp ult i64 %192, 24
  br i1 %219, label %237, label %220

220:                                              ; preds = %215, %404
  %221 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %406, %404 ], [ %217, %215 ]
  %222 = phi i64 [ %405, %404 ], [ %218, %215 ]
  %223 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %221, i64 0, i32 0
  %224 = load i8*, i8** %223, align 8
  %225 = icmp eq i8* %224, null
  br i1 %225, label %232, label %226

226:                                              ; preds = %220
  %227 = ptrtoint i8* %224 to i64
  %228 = inttoptr i64 %222 to %"class.base::internal::UncheckedObserverAdapter"*
  %229 = inttoptr i64 %222 to i64*
  store i64 %227, i64* %229, align 8
  %230 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %228, i64 1
  %231 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %230 to i64
  br label %232

232:                                              ; preds = %226, %220
  %233 = phi i64 [ %222, %220 ], [ %231, %226 ]
  %234 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %221, i64 1, i32 0
  %235 = load i8*, i8** %234, align 8
  %236 = icmp eq i8* %235, null
  br i1 %236, label %382, label %376

237:                                              ; preds = %404, %215
  %238 = phi i64 [ %216, %215 ], [ %405, %404 ]
  %239 = inttoptr i64 %238 to %"class.base::internal::UncheckedObserverAdapter"*
  %240 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %171, align 8
  br label %241

241:                                              ; preds = %237, %186
  %242 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %172, %186 ], [ %240, %237 ]
  %243 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %183, %186 ], [ %239, %237 ]
  %244 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %243, %242
  br i1 %244, label %246, label %245

245:                                              ; preds = %241
  store %"class.base::internal::UncheckedObserverAdapter"* %243, %"class.base::internal::UncheckedObserverAdapter"** %171, align 8
  br label %246

246:                                              ; preds = %179, %245, %241, %182, %159
  %247 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %61, align 8
  %248 = icmp eq %"class.base::ObserverList"* %247, null
  br i1 %248, label %250, label %249

249:                                              ; preds = %246
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %61, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %64) #11
  br label %250

250:                                              ; preds = %87, %156, %246, %249
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %60) #11
  %251 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %252 = icmp eq %"class.base::ObserverList"* %251, null
  br i1 %252, label %343, label %253

253:                                              ; preds = %250
  %254 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %251, i64 0, i32 1
  %255 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %251, i64 0, i32 1, i32 0, i32 0, i32 1
  %256 = bitcast %"class.base::internal::LinkNodeBase"** %255 to %"class.base::LinkNode"**
  %257 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %256, align 8
  %258 = bitcast %"class.base::LinkedList"* %254 to %"class.base::LinkNode"**
  %259 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %258, align 8
  %260 = icmp eq %"class.base::LinkNode"* %257, %259
  br i1 %260, label %261, label %339

261:                                              ; preds = %253
  %262 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %251, i64 0, i32 0, i32 0, i32 0
  %263 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %262, align 8
  %264 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %251, i64 0, i32 0, i32 0, i32 1
  %265 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %264, align 8
  %266 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %263, %265
  br i1 %266, label %275, label %267

267:                                              ; preds = %261, %272
  %268 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %273, %272 ], [ %263, %261 ]
  %269 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %268, i64 0, i32 0
  %270 = load i8*, i8** %269, align 8
  %271 = icmp eq i8* %270, null
  br i1 %271, label %275, label %272

272:                                              ; preds = %267
  %273 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %268, i64 1
  %274 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %273, %265
  br i1 %274, label %339, label %267

275:                                              ; preds = %267, %261
  %276 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %263, %261 ], [ %268, %267 ]
  %277 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %276 to i64
  %278 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %276, %265
  br i1 %278, label %339, label %279

279:                                              ; preds = %275
  %280 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %276, i64 1
  %281 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %280, %265
  br i1 %281, label %334, label %282

282:                                              ; preds = %279
  %283 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %265, i64 -2, i32 0
  %284 = ptrtoint i8** %283 to i64
  %285 = sub i64 %284, %277
  %286 = lshr i64 %285, 3
  %287 = add nuw nsw i64 %286, 1
  %288 = and i64 %287, 3
  %289 = icmp eq i64 %288, 0
  br i1 %289, label %308, label %290

290:                                              ; preds = %282, %303
  %291 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %305, %303 ], [ %280, %282 ]
  %292 = phi i64 [ %304, %303 ], [ %277, %282 ]
  %293 = phi i64 [ %306, %303 ], [ %288, %282 ]
  %294 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %291, i64 0, i32 0
  %295 = load i8*, i8** %294, align 8
  %296 = icmp eq i8* %295, null
  br i1 %296, label %303, label %297

297:                                              ; preds = %290
  %298 = ptrtoint i8* %295 to i64
  %299 = inttoptr i64 %292 to %"class.base::internal::UncheckedObserverAdapter"*
  %300 = inttoptr i64 %292 to i64*
  store i64 %298, i64* %300, align 8
  %301 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %299, i64 1
  %302 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %301 to i64
  br label %303

303:                                              ; preds = %297, %290
  %304 = phi i64 [ %292, %290 ], [ %302, %297 ]
  %305 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %291, i64 1
  %306 = add i64 %293, -1
  %307 = icmp eq i64 %306, 0
  br i1 %307, label %308, label %290, !llvm.loop !27

308:                                              ; preds = %303, %282
  %309 = phi i64 [ undef, %282 ], [ %304, %303 ]
  %310 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %280, %282 ], [ %305, %303 ]
  %311 = phi i64 [ %277, %282 ], [ %304, %303 ]
  %312 = icmp ult i64 %285, 24
  br i1 %312, label %330, label %313

313:                                              ; preds = %308, %372
  %314 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %374, %372 ], [ %310, %308 ]
  %315 = phi i64 [ %373, %372 ], [ %311, %308 ]
  %316 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %314, i64 0, i32 0
  %317 = load i8*, i8** %316, align 8
  %318 = icmp eq i8* %317, null
  br i1 %318, label %325, label %319

319:                                              ; preds = %313
  %320 = ptrtoint i8* %317 to i64
  %321 = inttoptr i64 %315 to %"class.base::internal::UncheckedObserverAdapter"*
  %322 = inttoptr i64 %315 to i64*
  store i64 %320, i64* %322, align 8
  %323 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %321, i64 1
  %324 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %323 to i64
  br label %325

325:                                              ; preds = %319, %313
  %326 = phi i64 [ %315, %313 ], [ %324, %319 ]
  %327 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %314, i64 1, i32 0
  %328 = load i8*, i8** %327, align 8
  %329 = icmp eq i8* %328, null
  br i1 %329, label %350, label %344

330:                                              ; preds = %372, %308
  %331 = phi i64 [ %309, %308 ], [ %373, %372 ]
  %332 = inttoptr i64 %331 to %"class.base::internal::UncheckedObserverAdapter"*
  %333 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %264, align 8
  br label %334

334:                                              ; preds = %330, %279
  %335 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %265, %279 ], [ %333, %330 ]
  %336 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %276, %279 ], [ %332, %330 ]
  %337 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %336, %335
  br i1 %337, label %339, label %338

338:                                              ; preds = %334
  store %"class.base::internal::UncheckedObserverAdapter"* %336, %"class.base::internal::UncheckedObserverAdapter"** %264, align 8
  br label %339

339:                                              ; preds = %272, %338, %334, %275, %253
  %340 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %341 = icmp eq %"class.base::ObserverList"* %340, null
  br i1 %341, label %343, label %342

342:                                              ; preds = %339
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %7, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %16) #11
  br label %343

343:                                              ; preds = %250, %339, %342
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #11
  ret void

344:                                              ; preds = %325
  %345 = ptrtoint i8* %328 to i64
  %346 = inttoptr i64 %326 to %"class.base::internal::UncheckedObserverAdapter"*
  %347 = inttoptr i64 %326 to i64*
  store i64 %345, i64* %347, align 8
  %348 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %346, i64 1
  %349 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %348 to i64
  br label %350

350:                                              ; preds = %344, %325
  %351 = phi i64 [ %326, %325 ], [ %349, %344 ]
  %352 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %314, i64 2, i32 0
  %353 = load i8*, i8** %352, align 8
  %354 = icmp eq i8* %353, null
  br i1 %354, label %361, label %355

355:                                              ; preds = %350
  %356 = ptrtoint i8* %353 to i64
  %357 = inttoptr i64 %351 to %"class.base::internal::UncheckedObserverAdapter"*
  %358 = inttoptr i64 %351 to i64*
  store i64 %356, i64* %358, align 8
  %359 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %357, i64 1
  %360 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %359 to i64
  br label %361

361:                                              ; preds = %355, %350
  %362 = phi i64 [ %351, %350 ], [ %360, %355 ]
  %363 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %314, i64 3, i32 0
  %364 = load i8*, i8** %363, align 8
  %365 = icmp eq i8* %364, null
  br i1 %365, label %372, label %366

366:                                              ; preds = %361
  %367 = ptrtoint i8* %364 to i64
  %368 = inttoptr i64 %362 to %"class.base::internal::UncheckedObserverAdapter"*
  %369 = inttoptr i64 %362 to i64*
  store i64 %367, i64* %369, align 8
  %370 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %368, i64 1
  %371 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %370 to i64
  br label %372

372:                                              ; preds = %366, %361
  %373 = phi i64 [ %362, %361 ], [ %371, %366 ]
  %374 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %314, i64 4
  %375 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %374, %265
  br i1 %375, label %330, label %313

376:                                              ; preds = %232
  %377 = ptrtoint i8* %235 to i64
  %378 = inttoptr i64 %233 to %"class.base::internal::UncheckedObserverAdapter"*
  %379 = inttoptr i64 %233 to i64*
  store i64 %377, i64* %379, align 8
  %380 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %378, i64 1
  %381 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %380 to i64
  br label %382

382:                                              ; preds = %376, %232
  %383 = phi i64 [ %233, %232 ], [ %381, %376 ]
  %384 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %221, i64 2, i32 0
  %385 = load i8*, i8** %384, align 8
  %386 = icmp eq i8* %385, null
  br i1 %386, label %393, label %387

387:                                              ; preds = %382
  %388 = ptrtoint i8* %385 to i64
  %389 = inttoptr i64 %383 to %"class.base::internal::UncheckedObserverAdapter"*
  %390 = inttoptr i64 %383 to i64*
  store i64 %388, i64* %390, align 8
  %391 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %389, i64 1
  %392 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %391 to i64
  br label %393

393:                                              ; preds = %387, %382
  %394 = phi i64 [ %383, %382 ], [ %392, %387 ]
  %395 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %221, i64 3, i32 0
  %396 = load i8*, i8** %395, align 8
  %397 = icmp eq i8* %396, null
  br i1 %397, label %404, label %398

398:                                              ; preds = %393
  %399 = ptrtoint i8* %396 to i64
  %400 = inttoptr i64 %394 to %"class.base::internal::UncheckedObserverAdapter"*
  %401 = inttoptr i64 %394 to i64*
  store i64 %399, i64* %401, align 8
  %402 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %400, i64 1
  %403 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %402 to i64
  br label %404

404:                                              ; preds = %398, %393
  %405 = phi i64 [ %394, %393 ], [ %403, %398 ]
  %406 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %221, i64 4
  %407 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %406, %172
  br i1 %407, label %237, label %220
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm19CompoundEventFilter26SetCursorVisibilityOnEventEPN4aura6WindowEPN2ui5EventEb(%"class.wm::CompoundEventFilter"* nocapture readnone, %"class.aura::Window"*, %"class.ui::Event"* nocapture readonly, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.ui::Event", %"class.ui::Event"* %2, i64 0, i32 4
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %22

9:                                                ; preds = %4
  %10 = tail call %"class.aura::Window"* @_ZN4aura6Window13GetRootWindowEv(%"class.aura::Window"* %1) #11
  %11 = tail call %"class.aura::client::CursorClient"* @_ZN4aura6client15GetCursorClientEPNS_6WindowE(%"class.aura::Window"* %10) #11
  %12 = icmp eq %"class.aura::client::CursorClient"* %11, null
  br i1 %12, label %22, label %13

13:                                               ; preds = %9
  %14 = bitcast %"class.aura::client::CursorClient"* %11 to void (%"class.aura::client::CursorClient"*)***
  %15 = load void (%"class.aura::client::CursorClient"*)**, void (%"class.aura::client::CursorClient"*)*** %14, align 8
  br i1 %3, label %16, label %19

16:                                               ; preds = %13
  %17 = getelementptr inbounds void (%"class.aura::client::CursorClient"*)*, void (%"class.aura::client::CursorClient"*)** %15, i64 3
  %18 = load void (%"class.aura::client::CursorClient"*)*, void (%"class.aura::client::CursorClient"*)** %17, align 8
  tail call void %18(%"class.aura::client::CursorClient"* nonnull %11) #11
  br label %22

19:                                               ; preds = %13
  %20 = getelementptr inbounds void (%"class.aura::client::CursorClient"*)*, void (%"class.aura::client::CursorClient"*)** %15, i64 4
  %21 = load void (%"class.aura::client::CursorClient"*)*, void (%"class.aura::client::CursorClient"*)** %20, align 8
  tail call void %21(%"class.aura::client::CursorClient"* nonnull %11) #11
  br label %22

22:                                               ; preds = %9, %19, %16, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm19CompoundEventFilter32SetMouseEventsEnableStateOnEventEPN4aura6WindowEPN2ui5EventEb(%"class.wm::CompoundEventFilter"* nocapture readnone, %"class.aura::Window"*, %"class.ui::Event"* nocapture readonly, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca i8, align 1
  %7 = alloca i32, align 4
  %8 = zext i1 %3 to i8
  store i8 %8, i8* %6, align 1
  %9 = load atomic i64, i64* @_ZZN2wm19CompoundEventFilter32SetMouseEventsEnableStateOnEventEPN4aura6WindowEPN2ui5EventEbE28trace_event_unique_atomic200 monotonic, align 8
  %10 = inttoptr i64 %9 to i8*
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %12, label %15, !prof !28

12:                                               ; preds = %4
  %13 = tail call i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0)) #11
  %14 = ptrtoint i8* %13 to i64
  store atomic volatile i64 %14, i64* @_ZZN2wm19CompoundEventFilter32SetMouseEventsEnableStateOnEventEPN4aura6WindowEPN2ui5EventEbE28trace_event_unique_atomic200 monotonic, align 8
  br label %15

15:                                               ; preds = %12, %4
  %16 = phi i8* [ %13, %12 ], [ %10, %4 ]
  %17 = load i8, i8* %16, align 1
  %18 = and i8 %17, 25
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %25, label %20, !prof !29

20:                                               ; preds = %15
  %21 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #11
  %22 = getelementptr inbounds %"class.ui::Event", %"class.ui::Event"* %2, i64 0, i32 4
  %23 = load i32, i32* %22, align 8
  store i32 %23, i32* %7, align 4
  %24 = call i64 @_ZN20trace_event_internal13AddTraceEventIiRbEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_S8_OT0_(i8 signext 88, i8* %16, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull dereferenceable(4) %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), i8* nonnull dereferenceable(1) %6)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #11
  br label %25

25:                                               ; preds = %15, %20
  %26 = phi i64 [ -6148914691236517206, %15 ], [ %24, %20 ]
  %27 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %15 ], [ getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), %20 ]
  %28 = phi i8* [ null, %15 ], [ %16, %20 ]
  %29 = getelementptr inbounds %"class.ui::Event", %"class.ui::Event"* %2, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %66

33:                                               ; preds = %25
  %34 = call %"class.aura::Window"* @_ZN4aura6Window13GetRootWindowEv(%"class.aura::Window"* %1) #11
  %35 = call %"class.aura::client::CursorClient"* @_ZN4aura6client15GetCursorClientEPNS_6WindowE(%"class.aura::Window"* %34) #11
  %36 = icmp eq %"class.aura::client::CursorClient"* %35, null
  br i1 %36, label %37, label %55

37:                                               ; preds = %33
  %38 = load atomic i64, i64* @_ZZN2wm19CompoundEventFilter32SetMouseEventsEnableStateOnEventEPN4aura6WindowEPN2ui5EventEbE28trace_event_unique_atomic209 monotonic, align 8
  %39 = inttoptr i64 %38 to i8*
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %41, label %44, !prof !28

41:                                               ; preds = %37
  %42 = call i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0)) #11
  %43 = ptrtoint i8* %42 to i64
  store atomic volatile i64 %43, i64* @_ZZN2wm19CompoundEventFilter32SetMouseEventsEnableStateOnEventEPN4aura6WindowEPN2ui5EventEbE28trace_event_unique_atomic209 monotonic, align 8
  br label %44

44:                                               ; preds = %41, %37
  %45 = phi i8* [ %42, %41 ], [ %39, %37 ]
  %46 = load i8, i8* %45, align 1
  %47 = and i8 %46, 25
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %66, label %49, !prof !29

49:                                               ; preds = %44
  %50 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #11
  %51 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #11
  %52 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %53 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #11
  store i64 %53, i64* %52, align 8
  %54 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 73, i8* %45, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.4, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %50, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, %"class.base::trace_event::TraceArguments"* null, i32 8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #11
  br label %66

55:                                               ; preds = %33
  %56 = load i8, i8* %6, align 1, !range !30
  %57 = icmp eq i8 %56, 0
  %58 = bitcast %"class.aura::client::CursorClient"* %35 to void (%"class.aura::client::CursorClient"*)***
  %59 = load void (%"class.aura::client::CursorClient"*)**, void (%"class.aura::client::CursorClient"*)*** %58, align 8
  br i1 %57, label %63, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds void (%"class.aura::client::CursorClient"*)*, void (%"class.aura::client::CursorClient"*)** %59, i64 8
  %62 = load void (%"class.aura::client::CursorClient"*)*, void (%"class.aura::client::CursorClient"*)** %61, align 8
  call void %62(%"class.aura::client::CursorClient"* nonnull %35) #11
  br label %66

63:                                               ; preds = %55
  %64 = getelementptr inbounds void (%"class.aura::client::CursorClient"*)*, void (%"class.aura::client::CursorClient"*)** %59, i64 9
  %65 = load void (%"class.aura::client::CursorClient"*)*, void (%"class.aura::client::CursorClient"*)** %64, align 8
  call void %65(%"class.aura::client::CursorClient"* nonnull %35) #11
  br label %66

66:                                               ; preds = %44, %49, %63, %60, %25
  %67 = icmp eq i8* %28, null
  br i1 %67, label %72, label %68

68:                                               ; preds = %66
  %69 = load i8, i8* %28, align 1
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %72, label %71

71:                                               ; preds = %68
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %28, i8* %27, i64 %26) #11
  br label %72

72:                                               ; preds = %66, %68, %71
  ret void
}

declare i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIiRbEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_S8_OT0_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, i32* dereferenceable(4), i8*, i8* dereferenceable(1)) local_unnamed_addr #5 comdat {
  %12 = alloca %"class.base::trace_event::TraceArguments", align 8
  %13 = alloca %"class.base::TimeTicks", align 8
  %14 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #11
  %15 = bitcast %"class.base::TimeTicks"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %13, i64 0, i32 0, i32 0
  %17 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #11
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 40, i1 false) #11
  store i8 2, i8* %18, align 8
  %19 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 1, i64 0
  store i8 3, i8* %19, align 1
  %20 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 1, i64 1
  store i8 1, i8* %20, align 1
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 0
  store i8* %7, i8** %21, align 8
  %22 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 1
  store i8* %9, i8** %22, align 8
  %23 = load i32, i32* %8, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 0, i32 0
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 1
  %27 = load i8, i8* %10, align 1, !range !30
  %28 = bitcast %"union.base::trace_event::TraceValue"* %26 to i8*
  store i8 %27, i8* %28, align 8
  %29 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %14, %"class.base::TimeTicks"* nonnull dereferenceable(8) %13, %"class.base::trace_event::TraceArguments"* nonnull %12, i32 %5) #11
  %30 = load i8, i8* %18, align 8
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %66, label %32

32:                                               ; preds = %11, %61
  %33 = phi i64 [ %62, %61 ], [ 0, %11 ]
  %34 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 1, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, 8
  br i1 %36, label %37, label %48

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %33
  %39 = bitcast %"union.base::trace_event::TraceValue"* %38 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %40 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %39, align 8
  %41 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %40, null
  br i1 %41, label %61, label %42

42:                                               ; preds = %37
  %43 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %40 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %44 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %44, i64 1
  %46 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %45, align 8
  call void %46(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %40) #11
  %47 = load i8, i8* %34, align 1
  br label %48

48:                                               ; preds = %42, %32
  %49 = phi i8 [ %35, %32 ], [ %47, %42 ]
  %50 = icmp eq i8 %49, 9
  br i1 %50, label %51, label %61

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %33
  %53 = bitcast %"union.base::trace_event::TraceValue"* %52 to %"class.protozero::HeapBuffered"**
  %54 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %53, align 8
  %55 = icmp eq %"class.protozero::HeapBuffered"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %57) #11
  %58 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %58) #11
  %59 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %59) #11
  %60 = bitcast %"class.protozero::HeapBuffered"* %54 to i8*
  call void @_ZdlPv(i8* %60) #12
  br label %61

61:                                               ; preds = %56, %51, %48, %37
  %62 = add nuw nsw i64 %33, 1
  %63 = load i8, i8* %18, align 8
  %64 = zext i8 %63 to i64
  %65 = icmp ult i64 %62, %64
  br i1 %65, label %32, label %66

66:                                               ; preds = %61, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  ret i64 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm19CompoundEventFilter10OnKeyEventEPN2ui8KeyEventE(%"class.wm::CompoundEventFilter"*, %"class.ui::KeyEvent"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::KeyEvent", %"class.ui::KeyEvent"* %1, i64 0, i32 0, i32 8
  %4 = load %"class.ui::EventTarget"*, %"class.ui::EventTarget"** %3, align 8
  %5 = icmp eq %"class.ui::EventTarget"* %4, null
  %6 = getelementptr inbounds %"class.ui::EventTarget", %"class.ui::EventTarget"* %4, i64 -2, i32 2, i32 0, i32 1
  %7 = bitcast %"class.ui::EventHandler"*** %6 to %"class.aura::Window"*
  %8 = select i1 %5, %"class.aura::Window"* null, %"class.aura::Window"* %7
  %9 = tail call %"class.aura::Window"* @_ZN4aura6Window13GetRootWindowEv(%"class.aura::Window"* %8) #11
  %10 = tail call %"class.aura::client::CursorClient"* @_ZN4aura6client15GetCursorClientEPNS_6WindowE(%"class.aura::Window"* %9) #11
  %11 = icmp eq %"class.aura::client::CursorClient"* %10, null
  br i1 %11, label %32, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.aura::client::CursorClient"* %10 to i1 (%"class.aura::client::CursorClient"*, %"class.ui::KeyEvent"*)***
  %14 = load i1 (%"class.aura::client::CursorClient"*, %"class.ui::KeyEvent"*)**, i1 (%"class.aura::client::CursorClient"*, %"class.ui::KeyEvent"*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.aura::client::CursorClient"*, %"class.ui::KeyEvent"*)*, i1 (%"class.aura::client::CursorClient"*, %"class.ui::KeyEvent"*)** %14, i64 18
  %16 = load i1 (%"class.aura::client::CursorClient"*, %"class.ui::KeyEvent"*)*, i1 (%"class.aura::client::CursorClient"*, %"class.ui::KeyEvent"*)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.aura::client::CursorClient"* nonnull %10, %"class.ui::KeyEvent"* dereferenceable(168) %1) #11
  br i1 %17, label %18, label %32

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.ui::KeyEvent", %"class.ui::KeyEvent"* %1, i64 0, i32 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 1
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %32

23:                                               ; preds = %18
  %24 = tail call %"class.aura::Window"* @_ZN4aura6Window13GetRootWindowEv(%"class.aura::Window"* %8) #11
  %25 = tail call %"class.aura::client::CursorClient"* @_ZN4aura6client15GetCursorClientEPNS_6WindowE(%"class.aura::Window"* %24) #11
  %26 = icmp eq %"class.aura::client::CursorClient"* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = bitcast %"class.aura::client::CursorClient"* %25 to void (%"class.aura::client::CursorClient"*)***
  %29 = load void (%"class.aura::client::CursorClient"*)**, void (%"class.aura::client::CursorClient"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.aura::client::CursorClient"*)*, void (%"class.aura::client::CursorClient"*)** %29, i64 4
  %31 = load void (%"class.aura::client::CursorClient"*)*, void (%"class.aura::client::CursorClient"*)** %30, align 8
  tail call void %31(%"class.aura::client::CursorClient"* nonnull %25) #11
  br label %32

32:                                               ; preds = %27, %23, %18, %2, %12
  tail call void @_ZN2wm19CompoundEventFilter14FilterKeyEventEPN2ui8KeyEventE(%"class.wm::CompoundEventFilter"* %0, %"class.ui::KeyEvent"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm19CompoundEventFilter12OnMouseEventEPN2ui10MouseEventE(%"class.wm::CompoundEventFilter"*, %"class.ui::MouseEvent"*) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = load atomic i64, i64* @_ZZN2wm19CompoundEventFilter12OnMouseEventEPN2ui10MouseEventEE28trace_event_unique_atomic234 monotonic, align 8
  %6 = inttoptr i64 %5 to i8*
  %7 = icmp eq i64 %5, 0
  br i1 %7, label %8, label %11, !prof !28

8:                                                ; preds = %2
  %9 = tail call i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0)) #11
  %10 = ptrtoint i8* %9 to i64
  store atomic volatile i64 %10, i64* @_ZZN2wm19CompoundEventFilter12OnMouseEventEPN2ui10MouseEventEE28trace_event_unique_atomic234 monotonic, align 8
  br label %11

11:                                               ; preds = %8, %2
  %12 = phi i8* [ %9, %8 ], [ %6, %2 ]
  %13 = load i8, i8* %12, align 1
  %14 = and i8 %13, 25
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %24, label %16, !prof !29

16:                                               ; preds = %11
  %17 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %1, i64 0, i32 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  store i32 %19, i32* %3, align 4
  %20 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #11
  %21 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %1, i64 0, i32 0, i32 0, i32 4
  %22 = load i32, i32* %21, align 8
  store i32 %22, i32* %4, align 4
  %23 = call i64 @_ZN20trace_event_internal13AddTraceEventIN2ui9EventTypeEiEEN4base11trace_event16TraceEventHandleEcPKhPKcS9_yjyS9_OT_S9_OT0_(i8 signext 88, i8* %12, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i32* nonnull dereferenceable(4) %3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* nonnull dereferenceable(4) %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #11
  br label %24

24:                                               ; preds = %11, %16
  %25 = phi i64 [ -6148914691236517206, %11 ], [ %23, %16 ]
  %26 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %11 ], [ getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i64 0, i64 0), %16 ]
  %27 = phi i8* [ null, %11 ], [ %12, %16 ]
  %28 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %1, i64 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %1, i64 0, i32 0, i32 0, i32 8
  %30 = load %"class.ui::EventTarget"*, %"class.ui::EventTarget"** %29, align 8
  %31 = icmp eq %"class.ui::EventTarget"* %30, null
  %32 = getelementptr inbounds %"class.ui::EventTarget", %"class.ui::EventTarget"* %30, i64 -2, i32 2, i32 0, i32 1
  %33 = bitcast %"class.ui::EventHandler"*** %32 to %"class.aura::Window"*
  %34 = select i1 %31, %"class.aura::Window"* null, %"class.aura::Window"* %33
  %35 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %1, i64 0, i32 0, i32 0, i32 4
  %36 = load i32, i32* %35, align 8
  %37 = and i32 %36, 262144
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %56

39:                                               ; preds = %24
  %40 = getelementptr inbounds %"class.ui::MouseEvent", %"class.ui::MouseEvent"* %1, i64 0, i32 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  switch i32 %41, label %56 [
    i32 5, label %42
    i32 4, label %42
    i32 1, label %42
    i32 9, label %42
  ]

42:                                               ; preds = %39, %39, %39, %39
  call void @_ZN2wm19CompoundEventFilter32SetMouseEventsEnableStateOnEventEPN4aura6WindowEPN2ui5EventEb(%"class.wm::CompoundEventFilter"* undef, %"class.aura::Window"* %34, %"class.ui::Event"* %28, i1 zeroext true)
  %43 = load i32, i32* %35, align 8
  %44 = and i32 %43, 1
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %55

46:                                               ; preds = %42
  %47 = call %"class.aura::Window"* @_ZN4aura6Window13GetRootWindowEv(%"class.aura::Window"* %34) #11
  %48 = call %"class.aura::client::CursorClient"* @_ZN4aura6client15GetCursorClientEPNS_6WindowE(%"class.aura::Window"* %47) #11
  %49 = icmp eq %"class.aura::client::CursorClient"* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %46
  %51 = bitcast %"class.aura::client::CursorClient"* %48 to void (%"class.aura::client::CursorClient"*)***
  %52 = load void (%"class.aura::client::CursorClient"*)**, void (%"class.aura::client::CursorClient"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.aura::client::CursorClient"*)*, void (%"class.aura::client::CursorClient"*)** %52, i64 3
  %54 = load void (%"class.aura::client::CursorClient"*)*, void (%"class.aura::client::CursorClient"*)** %53, align 8
  call void %54(%"class.aura::client::CursorClient"* nonnull %48) #11
  br label %55

55:                                               ; preds = %42, %46, %50
  call void @_ZN2wm19CompoundEventFilter12UpdateCursorEPN4aura6WindowEPN2ui10MouseEventE(%"class.wm::CompoundEventFilter"* undef, %"class.aura::Window"* %34, %"class.ui::MouseEvent"* %1)
  br label %56

56:                                               ; preds = %39, %24, %55
  call void @_ZN2wm19CompoundEventFilter16FilterMouseEventEPN2ui10MouseEventE(%"class.wm::CompoundEventFilter"* %0, %"class.ui::MouseEvent"* %1)
  %57 = icmp eq i8* %27, null
  br i1 %57, label %62, label %58

58:                                               ; preds = %56
  %59 = load i8, i8* %27, align 1
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %62, label %61

61:                                               ; preds = %58
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %27, i8* %26, i64 %25) #11
  br label %62

62:                                               ; preds = %56, %58, %61
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIN2ui9EventTypeEiEEN4base11trace_event16TraceEventHandleEcPKhPKcS9_yjyS9_OT_S9_OT0_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, i32* dereferenceable(4), i8*, i32* dereferenceable(4)) local_unnamed_addr #5 comdat {
  %12 = alloca %"class.base::trace_event::TraceArguments", align 8
  %13 = alloca %"class.base::TimeTicks", align 8
  %14 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #11
  %15 = bitcast %"class.base::TimeTicks"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %13, i64 0, i32 0, i32 0
  %17 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #11
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #11
  %19 = bitcast %"class.base::trace_event::TraceArguments"* %12 to i64*
  store i64 -6148914691247504894, i64* %19, align 8
  %20 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 0
  store i8* %7, i8** %20, align 8
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 1
  store i8* %9, i8** %21, align 8
  %22 = load i32, i32* %8, align 4
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 0, i32 0
  store i64 %23, i64* %24, align 8
  %25 = load i32, i32* %10, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 1, i32 0
  store i64 %26, i64* %27, align 8
  %28 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %14, %"class.base::TimeTicks"* nonnull dereferenceable(8) %13, %"class.base::trace_event::TraceArguments"* nonnull %12, i32 %5) #11
  %29 = load i8, i8* %18, align 8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %65, label %31

31:                                               ; preds = %11, %60
  %32 = phi i64 [ %61, %60 ], [ 0, %11 ]
  %33 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 1, i64 %32
  %34 = load i8, i8* %33, align 1
  %35 = icmp eq i8 %34, 8
  br i1 %35, label %36, label %47

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %32
  %38 = bitcast %"union.base::trace_event::TraceValue"* %37 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %39 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %38, align 8
  %40 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %39, null
  br i1 %40, label %60, label %41

41:                                               ; preds = %36
  %42 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %39 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %43 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %43, i64 1
  %45 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %44, align 8
  call void %45(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %39) #11
  %46 = load i8, i8* %33, align 1
  br label %47

47:                                               ; preds = %41, %31
  %48 = phi i8 [ %34, %31 ], [ %46, %41 ]
  %49 = icmp eq i8 %48, 9
  br i1 %49, label %50, label %60

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %32
  %52 = bitcast %"union.base::trace_event::TraceValue"* %51 to %"class.protozero::HeapBuffered"**
  %53 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %52, align 8
  %54 = icmp eq %"class.protozero::HeapBuffered"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %53, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %56) #11
  %57 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %53, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %57) #11
  %58 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %53, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %58) #11
  %59 = bitcast %"class.protozero::HeapBuffered"* %53 to i8*
  call void @_ZdlPv(i8* %59) #12
  br label %60

60:                                               ; preds = %55, %50, %47, %36
  %61 = add nuw nsw i64 %32, 1
  %62 = load i8, i8* %18, align 8
  %63 = zext i8 %62 to i64
  %64 = icmp ult i64 %61, %63
  br i1 %64, label %31, label %65

65:                                               ; preds = %60, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  ret i64 %28
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2wm19CompoundEventFilter13OnScrollEventEPN2ui11ScrollEventE(%"class.wm::CompoundEventFilter"* nocapture, %"class.ui::ScrollEvent"* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm19CompoundEventFilter12OnTouchEventEPN2ui10TouchEventE(%"class.wm::CompoundEventFilter"*, %"class.ui::TouchEvent"*) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i8, align 1
  %5 = load atomic i64, i64* @_ZZN2wm19CompoundEventFilter12OnTouchEventEPN2ui10TouchEventEE28trace_event_unique_atomic263 monotonic, align 8
  %6 = inttoptr i64 %5 to i8*
  %7 = icmp eq i64 %5, 0
  br i1 %7, label %8, label %11, !prof !28

8:                                                ; preds = %2
  %9 = tail call i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0)) #11
  %10 = ptrtoint i8* %9 to i64
  store atomic volatile i64 %10, i64* @_ZZN2wm19CompoundEventFilter12OnTouchEventEPN2ui10TouchEventEE28trace_event_unique_atomic263 monotonic, align 8
  br label %11

11:                                               ; preds = %8, %2
  %12 = phi i8* [ %9, %8 ], [ %6, %2 ]
  %13 = load i8, i8* %12, align 1
  %14 = and i8 %13, 25
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %17, !prof !29

16:                                               ; preds = %11
  call void @_ZN2wm19CompoundEventFilter16FilterTouchEventEPN2ui10TouchEventE(%"class.wm::CompoundEventFilter"* %0, %"class.ui::TouchEvent"* %1)
  br label %31

17:                                               ; preds = %11
  %18 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.ui::TouchEvent", %"class.ui::TouchEvent"* %1, i64 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  store i32 %20, i32* %3, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #11
  %21 = getelementptr inbounds %"class.ui::TouchEvent", %"class.ui::TouchEvent"* %1, i64 0, i32 0, i32 0, i32 10
  %22 = load i32, i32* %21, align 4
  %23 = icmp ne i32 %22, 0
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %4, align 1
  %25 = call i64 @_ZN20trace_event_internal13AddTraceEventIN2ui9EventTypeEbEEN4base11trace_event16TraceEventHandleEcPKhPKcS9_yjyS9_OT_S9_OT0_(i8 signext 88, i8* %12, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.7, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i32* nonnull dereferenceable(4) %3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0), i8* nonnull dereferenceable(1) %4)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #11
  call void @_ZN2wm19CompoundEventFilter16FilterTouchEventEPN2ui10TouchEventE(%"class.wm::CompoundEventFilter"* %0, %"class.ui::TouchEvent"* %1)
  %26 = icmp eq i8* %12, null
  br i1 %26, label %31, label %27

27:                                               ; preds = %17
  %28 = load i8, i8* %12, align 1
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %31, label %30

30:                                               ; preds = %27
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %12, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.7, i64 0, i64 0), i64 %25) #11
  br label %31

31:                                               ; preds = %16, %17, %27, %30
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIN2ui9EventTypeEbEEN4base11trace_event16TraceEventHandleEcPKhPKcS9_yjyS9_OT_S9_OT0_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, i32* dereferenceable(4), i8*, i8* dereferenceable(1)) local_unnamed_addr #5 comdat {
  %12 = alloca %"class.base::trace_event::TraceArguments", align 8
  %13 = alloca %"class.base::TimeTicks", align 8
  %14 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #11
  %15 = bitcast %"class.base::TimeTicks"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %13, i64 0, i32 0, i32 0
  %17 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #11
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 40, i1 false) #11
  store i8 2, i8* %18, align 8
  %19 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 1, i64 0
  store i8 2, i8* %19, align 1
  %20 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 1, i64 1
  store i8 1, i8* %20, align 1
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 0
  store i8* %7, i8** %21, align 8
  %22 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 1
  store i8* %9, i8** %22, align 8
  %23 = load i32, i32* %8, align 4
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 0, i32 0
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 1
  %27 = load i8, i8* %10, align 1, !range !30
  %28 = bitcast %"union.base::trace_event::TraceValue"* %26 to i8*
  store i8 %27, i8* %28, align 8
  %29 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %14, %"class.base::TimeTicks"* nonnull dereferenceable(8) %13, %"class.base::trace_event::TraceArguments"* nonnull %12, i32 %5) #11
  %30 = load i8, i8* %18, align 8
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %66, label %32

32:                                               ; preds = %11, %61
  %33 = phi i64 [ %62, %61 ], [ 0, %11 ]
  %34 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 1, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, 8
  br i1 %36, label %37, label %48

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %33
  %39 = bitcast %"union.base::trace_event::TraceValue"* %38 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %40 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %39, align 8
  %41 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %40, null
  br i1 %41, label %61, label %42

42:                                               ; preds = %37
  %43 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %40 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %44 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %44, i64 1
  %46 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %45, align 8
  call void %46(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %40) #11
  %47 = load i8, i8* %34, align 1
  br label %48

48:                                               ; preds = %42, %32
  %49 = phi i8 [ %35, %32 ], [ %47, %42 ]
  %50 = icmp eq i8 %49, 9
  br i1 %50, label %51, label %61

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %33
  %53 = bitcast %"union.base::trace_event::TraceValue"* %52 to %"class.protozero::HeapBuffered"**
  %54 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %53, align 8
  %55 = icmp eq %"class.protozero::HeapBuffered"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %57) #11
  %58 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %58) #11
  %59 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %59) #11
  %60 = bitcast %"class.protozero::HeapBuffered"* %54 to i8*
  call void @_ZdlPv(i8* %60) #12
  br label %61

61:                                               ; preds = %56, %51, %48, %37
  %62 = add nuw nsw i64 %33, 1
  %63 = load i8, i8* %18, align 8
  %64 = zext i8 %63 to i64
  %65 = icmp ult i64 %62, %64
  br i1 %65, label %32, label %66

66:                                               ; preds = %61, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  ret i64 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2wm19CompoundEventFilter14OnGestureEventEPN2ui12GestureEventE(%"class.wm::CompoundEventFilter"*, %"class.ui::GestureEvent"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = alloca %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = getelementptr inbounds %"class.wm::CompoundEventFilter", %"class.wm::CompoundEventFilter"* %0, i64 0, i32 1
  %6 = bitcast %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %9 = getelementptr inbounds %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %10 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %5, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 40, i1 false)
  %12 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %10, align 8, !noalias !31
  %13 = getelementptr inbounds %"class.wm::CompoundEventFilter", %"class.wm::CompoundEventFilter"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %14 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %13, align 8, !noalias !31
  %15 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %12, %14
  %16 = getelementptr inbounds %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %16) #11
  br i1 %15, label %17, label %19

17:                                               ; preds = %2
  %18 = bitcast %"class.base::ObserverList"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #11, !alias.scope !31
  br label %59

19:                                               ; preds = %2
  store %"class.base::ObserverList"* %5, %"class.base::ObserverList"** %7, align 8, !alias.scope !31
  %20 = getelementptr inbounds %"class.wm::CompoundEventFilter", %"class.wm::CompoundEventFilter"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %16, %"class.base::internal::LinkNodeBase"* %20) #11
  store i64 0, i64* %8, align 8, !alias.scope !31
  %21 = getelementptr inbounds %"class.wm::CompoundEventFilter", %"class.wm::CompoundEventFilter"* %0, i64 0, i32 1, i32 3
  %22 = load i32, i32* %21, align 8, !noalias !31
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %19
  %25 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %13 to i64*
  %26 = load i64, i64* %25, align 8, !noalias !31
  %27 = bitcast %"class.base::ObserverList"* %5 to i64*
  %28 = load i64, i64* %27, align 8, !noalias !31
  %29 = sub i64 %26, %28
  %30 = ashr exact i64 %29, 3
  br label %31

31:                                               ; preds = %24, %19
  %32 = phi i64 [ %30, %24 ], [ -1, %19 ]
  store i64 %32, i64* %9, align 8, !alias.scope !31
  %33 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8, !alias.scope !31
  %34 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %33, i64 0, i32 0, i32 0, i32 1
  %35 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.base::ObserverList"* %33 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %36, %38
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, %32
  %42 = select i1 %41, i64 %40, i64 %32
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %59, label %44

44:                                               ; preds = %31
  %45 = inttoptr i64 %38 to %"class.base::internal::UncheckedObserverAdapter"*
  %46 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %33, i64 0, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %45, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %50, label %59

50:                                               ; preds = %44, %54
  %51 = phi i64 [ %52, %54 ], [ 0, %44 ]
  %52 = add nuw i64 %51, 1
  store i64 %52, i64* %8, align 8, !alias.scope !31
  %53 = icmp ult i64 %52, %42
  br i1 %53, label %54, label %59

54:                                               ; preds = %50
  %55 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %46, align 8
  %56 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %55, i64 %52, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = icmp eq i8* %57, null
  br i1 %58, label %50, label %59

59:                                               ; preds = %50, %54, %17, %31, %44
  %60 = bitcast %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %60) #11
  %61 = getelementptr inbounds %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %63 = getelementptr inbounds %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %64 = getelementptr inbounds %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.base::ObserverList<ui::EventHandler, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %64) #11
  %66 = bitcast %"class.base::ObserverList"** %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 24, i1 false) #11, !alias.scope !34
  %67 = getelementptr inbounds %"class.ui::GestureEvent", %"class.ui::GestureEvent"* %1, i64 0, i32 0, i32 0, i32 10
  %68 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  br label %69

69:                                               ; preds = %126, %59
  %70 = phi %"class.base::ObserverList"* [ %68, %59 ], [ %124, %126 ]
  %71 = icmp eq %"class.base::ObserverList"* %70, null
  br i1 %71, label %87, label %72

72:                                               ; preds = %69
  %73 = load i64, i64* %8, align 8
  %74 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %70, i64 0, i32 0, i32 0, i32 1
  %75 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"class.base::ObserverList"* %70 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = sub i64 %76, %78
  %80 = ashr exact i64 %79, 3
  %81 = load i64, i64* %9, align 8
  %82 = icmp ult i64 %80, %81
  %83 = select i1 %82, i64 %80, i64 %81
  %84 = icmp eq i64 %73, %83
  br i1 %84, label %87, label %85

85:                                               ; preds = %72
  %86 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %61, align 8
  br label %103

87:                                               ; preds = %72, %69
  %88 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %61, align 8
  %89 = icmp eq %"class.base::ObserverList"* %88, null
  br i1 %89, label %250, label %90

90:                                               ; preds = %87
  %91 = load i64, i64* %62, align 8
  %92 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %88, i64 0, i32 0, i32 0, i32 1
  %93 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.base::ObserverList"* %88 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = sub i64 %94, %96
  %98 = ashr exact i64 %97, 3
  %99 = load i64, i64* %63, align 8
  %100 = icmp ult i64 %98, %99
  %101 = select i1 %100, i64 %98, i64 %99
  %102 = icmp eq i64 %91, %101
  br i1 %102, label %159, label %103

103:                                              ; preds = %90, %85
  %104 = phi %"class.base::ObserverList"* [ %86, %85 ], [ %88, %90 ]
  %105 = icmp eq %"class.base::ObserverList"* %70, %104
  %106 = load i64, i64* %8, align 8
  %107 = load i64, i64* %62, align 8
  %108 = icmp eq i64 %106, %107
  %109 = and i1 %105, %108
  br i1 %109, label %156, label %110

110:                                              ; preds = %103
  %111 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %70, i64 0, i32 0, i32 0, i32 0
  %112 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %111, align 8
  %113 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %112, i64 %106
  %114 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %113 to %"class.ui::EventHandler"**
  %115 = load %"class.ui::EventHandler"*, %"class.ui::EventHandler"** %114, align 8
  %116 = load i32, i32* %67, align 4
  %117 = and i32 %116, 2
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %156

119:                                              ; preds = %110
  %120 = bitcast %"class.ui::EventHandler"* %115 to void (%"class.ui::EventHandler"*, %"class.ui::GestureEvent"*)***
  %121 = load void (%"class.ui::EventHandler"*, %"class.ui::GestureEvent"*)**, void (%"class.ui::EventHandler"*, %"class.ui::GestureEvent"*)*** %120, align 8
  %122 = getelementptr inbounds void (%"class.ui::EventHandler"*, %"class.ui::GestureEvent"*)*, void (%"class.ui::EventHandler"*, %"class.ui::GestureEvent"*)** %121, i64 7
  %123 = load void (%"class.ui::EventHandler"*, %"class.ui::GestureEvent"*)*, void (%"class.ui::EventHandler"*, %"class.ui::GestureEvent"*)** %122, align 8
  call void %123(%"class.ui::EventHandler"* %115, %"class.ui::GestureEvent"* %1) #11
  %124 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %125 = icmp eq %"class.base::ObserverList"* %124, null
  br i1 %125, label %126, label %127

126:                                              ; preds = %151, %147, %119, %127, %141
  br label %69

127:                                              ; preds = %119
  %128 = load i64, i64* %8, align 8
  %129 = add i64 %128, 1
  store i64 %129, i64* %8, align 8
  %130 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %124, i64 0, i32 0, i32 0, i32 1
  %131 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %"class.base::ObserverList"* %124 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = sub i64 %132, %134
  %136 = ashr exact i64 %135, 3
  %137 = load i64, i64* %9, align 8
  %138 = icmp ult i64 %136, %137
  %139 = select i1 %138, i64 %136, i64 %137
  %140 = icmp ult i64 %129, %139
  br i1 %140, label %141, label %126

141:                                              ; preds = %127
  %142 = inttoptr i64 %134 to %"class.base::internal::UncheckedObserverAdapter"*
  %143 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %124, i64 0, i32 0, i32 0, i32 0
  %144 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %142, i64 %129, i32 0
  %145 = load i8*, i8** %144, align 8
  %146 = icmp eq i8* %145, null
  br i1 %146, label %147, label %126

147:                                              ; preds = %141, %151
  %148 = phi i64 [ %149, %151 ], [ %129, %141 ]
  %149 = add nuw i64 %148, 1
  store i64 %149, i64* %8, align 8
  %150 = icmp ult i64 %149, %139
  br i1 %150, label %151, label %126

151:                                              ; preds = %147
  %152 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %143, align 8
  %153 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %152, i64 %149, i32 0
  %154 = load i8*, i8** %153, align 8
  %155 = icmp eq i8* %154, null
  br i1 %155, label %147, label %126

156:                                              ; preds = %103, %110
  %157 = phi %"class.base::ObserverList"* [ %104, %110 ], [ %70, %103 ]
  %158 = icmp eq %"class.base::ObserverList"* %157, null
  br i1 %158, label %250, label %159

159:                                              ; preds = %90, %156
  %160 = phi %"class.base::ObserverList"* [ %157, %156 ], [ %88, %90 ]
  %161 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %160, i64 0, i32 1
  %162 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %160, i64 0, i32 1, i32 0, i32 0, i32 1
  %163 = bitcast %"class.base::internal::LinkNodeBase"** %162 to %"class.base::LinkNode"**
  %164 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %163, align 8
  %165 = bitcast %"class.base::LinkedList"* %161 to %"class.base::LinkNode"**
  %166 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %165, align 8
  %167 = icmp eq %"class.base::LinkNode"* %164, %166
  br i1 %167, label %168, label %246

168:                                              ; preds = %159
  %169 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %160, i64 0, i32 0, i32 0, i32 0
  %170 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %169, align 8
  %171 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %160, i64 0, i32 0, i32 0, i32 1
  %172 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %171, align 8
  %173 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %170, %172
  br i1 %173, label %182, label %174

174:                                              ; preds = %168, %179
  %175 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %180, %179 ], [ %170, %168 ]
  %176 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %175, i64 0, i32 0
  %177 = load i8*, i8** %176, align 8
  %178 = icmp eq i8* %177, null
  br i1 %178, label %182, label %179

179:                                              ; preds = %174
  %180 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %175, i64 1
  %181 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %180, %172
  br i1 %181, label %246, label %174

182:                                              ; preds = %174, %168
  %183 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %170, %168 ], [ %175, %174 ]
  %184 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %183 to i64
  %185 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %183, %172
  br i1 %185, label %246, label %186

186:                                              ; preds = %182
  %187 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %183, i64 1
  %188 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %187, %172
  br i1 %188, label %241, label %189

189:                                              ; preds = %186
  %190 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %172, i64 -2, i32 0
  %191 = ptrtoint i8** %190 to i64
  %192 = sub i64 %191, %184
  %193 = lshr i64 %192, 3
  %194 = add nuw nsw i64 %193, 1
  %195 = and i64 %194, 3
  %196 = icmp eq i64 %195, 0
  br i1 %196, label %215, label %197

197:                                              ; preds = %189, %210
  %198 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %212, %210 ], [ %187, %189 ]
  %199 = phi i64 [ %211, %210 ], [ %184, %189 ]
  %200 = phi i64 [ %213, %210 ], [ %195, %189 ]
  %201 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %198, i64 0, i32 0
  %202 = load i8*, i8** %201, align 8
  %203 = icmp eq i8* %202, null
  br i1 %203, label %210, label %204

204:                                              ; preds = %197
  %205 = ptrtoint i8* %202 to i64
  %206 = inttoptr i64 %199 to %"class.base::internal::UncheckedObserverAdapter"*
  %207 = inttoptr i64 %199 to i64*
  store i64 %205, i64* %207, align 8
  %208 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %206, i64 1
  %209 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %208 to i64
  br label %210

210:                                              ; preds = %204, %197
  %211 = phi i64 [ %199, %197 ], [ %209, %204 ]
  %212 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %198, i64 1
  %213 = add i64 %200, -1
  %214 = icmp eq i64 %213, 0
  br i1 %214, label %215, label %197, !llvm.loop !37

215:                                              ; preds = %210, %189
  %216 = phi i64 [ undef, %189 ], [ %211, %210 ]
  %217 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %187, %189 ], [ %212, %210 ]
  %218 = phi i64 [ %184, %189 ], [ %211, %210 ]
  %219 = icmp ult i64 %192, 24
  br i1 %219, label %237, label %220

220:                                              ; preds = %215, %404
  %221 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %406, %404 ], [ %217, %215 ]
  %222 = phi i64 [ %405, %404 ], [ %218, %215 ]
  %223 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %221, i64 0, i32 0
  %224 = load i8*, i8** %223, align 8
  %225 = icmp eq i8* %224, null
  br i1 %225, label %232, label %226

226:                                              ; preds = %220
  %227 = ptrtoint i8* %224 to i64
  %228 = inttoptr i64 %222 to %"class.base::internal::UncheckedObserverAdapter"*
  %229 = inttoptr i64 %222 to i64*
  store i64 %227, i64* %229, align 8
  %230 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %228, i64 1
  %231 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %230 to i64
  br label %232

232:                                              ; preds = %226, %220
  %233 = phi i64 [ %222, %220 ], [ %231, %226 ]
  %234 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %221, i64 1, i32 0
  %235 = load i8*, i8** %234, align 8
  %236 = icmp eq i8* %235, null
  br i1 %236, label %382, label %376

237:                                              ; preds = %404, %215
  %238 = phi i64 [ %216, %215 ], [ %405, %404 ]
  %239 = inttoptr i64 %238 to %"class.base::internal::UncheckedObserverAdapter"*
  %240 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %171, align 8
  br label %241

241:                                              ; preds = %237, %186
  %242 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %172, %186 ], [ %240, %237 ]
  %243 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %183, %186 ], [ %239, %237 ]
  %244 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %243, %242
  br i1 %244, label %246, label %245

245:                                              ; preds = %241
  store %"class.base::internal::UncheckedObserverAdapter"* %243, %"class.base::internal::UncheckedObserverAdapter"** %171, align 8
  br label %246

246:                                              ; preds = %179, %245, %241, %182, %159
  %247 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %61, align 8
  %248 = icmp eq %"class.base::ObserverList"* %247, null
  br i1 %248, label %250, label %249

249:                                              ; preds = %246
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %61, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %64) #11
  br label %250

250:                                              ; preds = %87, %156, %246, %249
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %60) #11
  %251 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %252 = icmp eq %"class.base::ObserverList"* %251, null
  br i1 %252, label %343, label %253

253:                                              ; preds = %250
  %254 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %251, i64 0, i32 1
  %255 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %251, i64 0, i32 1, i32 0, i32 0, i32 1
  %256 = bitcast %"class.base::internal::LinkNodeBase"** %255 to %"class.base::LinkNode"**
  %257 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %256, align 8
  %258 = bitcast %"class.base::LinkedList"* %254 to %"class.base::LinkNode"**
  %259 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %258, align 8
  %260 = icmp eq %"class.base::LinkNode"* %257, %259
  br i1 %260, label %261, label %339

261:                                              ; preds = %253
  %262 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %251, i64 0, i32 0, i32 0, i32 0
  %263 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %262, align 8
  %264 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %251, i64 0, i32 0, i32 0, i32 1
  %265 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %264, align 8
  %266 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %263, %265
  br i1 %266, label %275, label %267

267:                                              ; preds = %261, %272
  %268 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %273, %272 ], [ %263, %261 ]
  %269 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %268, i64 0, i32 0
  %270 = load i8*, i8** %269, align 8
  %271 = icmp eq i8* %270, null
  br i1 %271, label %275, label %272

272:                                              ; preds = %267
  %273 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %268, i64 1
  %274 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %273, %265
  br i1 %274, label %339, label %267

275:                                              ; preds = %267, %261
  %276 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %263, %261 ], [ %268, %267 ]
  %277 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %276 to i64
  %278 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %276, %265
  br i1 %278, label %339, label %279

279:                                              ; preds = %275
  %280 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %276, i64 1
  %281 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %280, %265
  br i1 %281, label %334, label %282

282:                                              ; preds = %279
  %283 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %265, i64 -2, i32 0
  %284 = ptrtoint i8** %283 to i64
  %285 = sub i64 %284, %277
  %286 = lshr i64 %285, 3
  %287 = add nuw nsw i64 %286, 1
  %288 = and i64 %287, 3
  %289 = icmp eq i64 %288, 0
  br i1 %289, label %308, label %290

290:                                              ; preds = %282, %303
  %291 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %305, %303 ], [ %280, %282 ]
  %292 = phi i64 [ %304, %303 ], [ %277, %282 ]
  %293 = phi i64 [ %306, %303 ], [ %288, %282 ]
  %294 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %291, i64 0, i32 0
  %295 = load i8*, i8** %294, align 8
  %296 = icmp eq i8* %295, null
  br i1 %296, label %303, label %297

297:                                              ; preds = %290
  %298 = ptrtoint i8* %295 to i64
  %299 = inttoptr i64 %292 to %"class.base::internal::UncheckedObserverAdapter"*
  %300 = inttoptr i64 %292 to i64*
  store i64 %298, i64* %300, align 8
  %301 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %299, i64 1
  %302 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %301 to i64
  br label %303

303:                                              ; preds = %297, %290
  %304 = phi i64 [ %292, %290 ], [ %302, %297 ]
  %305 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %291, i64 1
  %306 = add i64 %293, -1
  %307 = icmp eq i64 %306, 0
  br i1 %307, label %308, label %290, !llvm.loop !38

308:                                              ; preds = %303, %282
  %309 = phi i64 [ undef, %282 ], [ %304, %303 ]
  %310 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %280, %282 ], [ %305, %303 ]
  %311 = phi i64 [ %277, %282 ], [ %304, %303 ]
  %312 = icmp ult i64 %285, 24
  br i1 %312, label %330, label %313

313:                                              ; preds = %308, %372
  %314 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %374, %372 ], [ %310, %308 ]
  %315 = phi i64 [ %373, %372 ], [ %311, %308 ]
  %316 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %314, i64 0, i32 0
  %317 = load i8*, i8** %316, align 8
  %318 = icmp eq i8* %317, null
  br i1 %318, label %325, label %319

319:                                              ; preds = %313
  %320 = ptrtoint i8* %317 to i64
  %321 = inttoptr i64 %315 to %"class.base::internal::UncheckedObserverAdapter"*
  %322 = inttoptr i64 %315 to i64*
  store i64 %320, i64* %322, align 8
  %323 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %321, i64 1
  %324 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %323 to i64
  br label %325

325:                                              ; preds = %319, %313
  %326 = phi i64 [ %315, %313 ], [ %324, %319 ]
  %327 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %314, i64 1, i32 0
  %328 = load i8*, i8** %327, align 8
  %329 = icmp eq i8* %328, null
  br i1 %329, label %350, label %344

330:                                              ; preds = %372, %308
  %331 = phi i64 [ %309, %308 ], [ %373, %372 ]
  %332 = inttoptr i64 %331 to %"class.base::internal::UncheckedObserverAdapter"*
  %333 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %264, align 8
  br label %334

334:                                              ; preds = %330, %279
  %335 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %265, %279 ], [ %333, %330 ]
  %336 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %276, %279 ], [ %332, %330 ]
  %337 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %336, %335
  br i1 %337, label %339, label %338

338:                                              ; preds = %334
  store %"class.base::internal::UncheckedObserverAdapter"* %336, %"class.base::internal::UncheckedObserverAdapter"** %264, align 8
  br label %339

339:                                              ; preds = %272, %338, %334, %275, %253
  %340 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %341 = icmp eq %"class.base::ObserverList"* %340, null
  br i1 %341, label %343, label %342

342:                                              ; preds = %339
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %7, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %16) #11
  br label %343

343:                                              ; preds = %250, %339, %342
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #11
  ret void

344:                                              ; preds = %325
  %345 = ptrtoint i8* %328 to i64
  %346 = inttoptr i64 %326 to %"class.base::internal::UncheckedObserverAdapter"*
  %347 = inttoptr i64 %326 to i64*
  store i64 %345, i64* %347, align 8
  %348 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %346, i64 1
  %349 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %348 to i64
  br label %350

350:                                              ; preds = %344, %325
  %351 = phi i64 [ %326, %325 ], [ %349, %344 ]
  %352 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %314, i64 2, i32 0
  %353 = load i8*, i8** %352, align 8
  %354 = icmp eq i8* %353, null
  br i1 %354, label %361, label %355

355:                                              ; preds = %350
  %356 = ptrtoint i8* %353 to i64
  %357 = inttoptr i64 %351 to %"class.base::internal::UncheckedObserverAdapter"*
  %358 = inttoptr i64 %351 to i64*
  store i64 %356, i64* %358, align 8
  %359 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %357, i64 1
  %360 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %359 to i64
  br label %361

361:                                              ; preds = %355, %350
  %362 = phi i64 [ %351, %350 ], [ %360, %355 ]
  %363 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %314, i64 3, i32 0
  %364 = load i8*, i8** %363, align 8
  %365 = icmp eq i8* %364, null
  br i1 %365, label %372, label %366

366:                                              ; preds = %361
  %367 = ptrtoint i8* %364 to i64
  %368 = inttoptr i64 %362 to %"class.base::internal::UncheckedObserverAdapter"*
  %369 = inttoptr i64 %362 to i64*
  store i64 %367, i64* %369, align 8
  %370 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %368, i64 1
  %371 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %370 to i64
  br label %372

372:                                              ; preds = %366, %361
  %373 = phi i64 [ %362, %361 ], [ %371, %366 ]
  %374 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %314, i64 4
  %375 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %374, %265
  br i1 %375, label %330, label %313

376:                                              ; preds = %232
  %377 = ptrtoint i8* %235 to i64
  %378 = inttoptr i64 %233 to %"class.base::internal::UncheckedObserverAdapter"*
  %379 = inttoptr i64 %233 to i64*
  store i64 %377, i64* %379, align 8
  %380 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %378, i64 1
  %381 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %380 to i64
  br label %382

382:                                              ; preds = %376, %232
  %383 = phi i64 [ %233, %232 ], [ %381, %376 ]
  %384 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %221, i64 2, i32 0
  %385 = load i8*, i8** %384, align 8
  %386 = icmp eq i8* %385, null
  br i1 %386, label %393, label %387

387:                                              ; preds = %382
  %388 = ptrtoint i8* %385 to i64
  %389 = inttoptr i64 %383 to %"class.base::internal::UncheckedObserverAdapter"*
  %390 = inttoptr i64 %383 to i64*
  store i64 %388, i64* %390, align 8
  %391 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %389, i64 1
  %392 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %391 to i64
  br label %393

393:                                              ; preds = %387, %382
  %394 = phi i64 [ %383, %382 ], [ %392, %387 ]
  %395 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %221, i64 3, i32 0
  %396 = load i8*, i8** %395, align 8
  %397 = icmp eq i8* %396, null
  br i1 %397, label %404, label %398

398:                                              ; preds = %393
  %399 = ptrtoint i8* %396 to i64
  %400 = inttoptr i64 %394 to %"class.base::internal::UncheckedObserverAdapter"*
  %401 = inttoptr i64 %394 to i64*
  store i64 %399, i64* %401, align 8
  %402 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %400, i64 1
  %403 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %402 to i64
  br label %404

404:                                              ; preds = %398, %393
  %405 = phi i64 [ %394, %393 ], [ %403, %398 ]
  %406 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %221, i64 4
  %407 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %406, %172
  br i1 %407, label %237, label %220
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden { i8*, i64 } @_ZNK2wm19CompoundEventFilter13GetLogContextEv(%"class.wm::CompoundEventFilter"* nocapture readnone) unnamed_addr #7 align 2 {
  ret { i8*, i64 } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9, i64 0, i64 0), i64 19 }
}

declare void @_ZN2ui12EventHandler7OnEventEPNS_5EventE(%"class.ui::EventHandler"*, %"class.ui::Event"*) unnamed_addr #1

declare void @_ZN2ui12EventHandler12OnCancelModeEPNS_15CancelModeEventE(%"class.ui::EventHandler"*, %"class.ui::CancelModeEvent"*) unnamed_addr #1

declare i64 @_ZN3gfx14ToFlooredPointERKNS_6PointFE(%"class.gfx::PointF"* dereferenceable(8)) local_unnamed_addr #1

declare dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSERKS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) unnamed_addr #1

declare void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"*) unnamed_addr #1

declare void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNK4base12ObserverListIN2ui12EventHandlerELb1ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!6 = distinct !{!6, !"_ZNK4base12ObserverListIN2ui12EventHandlerELb1ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK4base12ObserverListIN2ui12EventHandlerELb1ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!9 = distinct !{!9, !"_ZNK4base12ObserverListIN2ui12EventHandlerELb1ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!10 = distinct !{!10, !3}
!11 = distinct !{!11, !3}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK4base12ObserverListIN2ui12EventHandlerELb1ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!14 = distinct !{!14, !"_ZNK4base12ObserverListIN2ui12EventHandlerELb1ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK4base12ObserverListIN2ui12EventHandlerELb1ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!17 = distinct !{!17, !"_ZNK4base12ObserverListIN2ui12EventHandlerELb1ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!18 = distinct !{!18, !3}
!19 = distinct !{!19, !3}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNK4base12ObserverListIN2ui12EventHandlerELb1ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!22 = distinct !{!22, !"_ZNK4base12ObserverListIN2ui12EventHandlerELb1ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNK4base12ObserverListIN2ui12EventHandlerELb1ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!25 = distinct !{!25, !"_ZNK4base12ObserverListIN2ui12EventHandlerELb1ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!26 = distinct !{!26, !3}
!27 = distinct !{!27, !3}
!28 = !{!"branch_weights", i32 1, i32 2000}
!29 = !{!"branch_weights", i32 2000, i32 1}
!30 = !{i8 0, i8 2}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZNK4base12ObserverListIN2ui12EventHandlerELb1ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!33 = distinct !{!33, !"_ZNK4base12ObserverListIN2ui12EventHandlerELb1ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZNK4base12ObserverListIN2ui12EventHandlerELb1ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!36 = distinct !{!36, !"_ZNK4base12ObserverListIN2ui12EventHandlerELb1ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!37 = distinct !{!37, !3}
!38 = distinct !{!38, !3}
