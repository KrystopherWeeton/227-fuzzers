; ModuleID = '../../third_party/swiftshader/third_party/subzero/src/IceSwitchLowering.cpp'
source_filename = "../../third_party/swiftshader/third_party/subzero/src/IceSwitchLowering.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::vector.311" = type { %"class.std::__1::__vector_base.312" }
%"class.std::__1::__vector_base.312" = type { %"class.Ice::CaseCluster"*, %"class.Ice::CaseCluster"*, %"class.std::__1::__compressed_pair.314" }
%"class.Ice::CaseCluster" = type { i32, i64, i64, %union.anon.313 }
%union.anon.313 = type { %"class.Ice::CfgNode"* }
%"class.Ice::CfgNode" = type { %"class.Ice::Cfg"*, i32, i32, %"class.Ice::StringID.195", i32, i8, i8, i8, i32, %"class.std::__1::vector.196", %"class.std::__1::vector.196", %"class.llvm::iplist", %"class.llvm::iplist", i8* }
%"class.Ice::StringID.195" = type { i64 }
%"class.std::__1::vector.196" = type { %"class.std::__1::__vector_base.197" }
%"class.std::__1::__vector_base.197" = type { %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"**, %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199", %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.Ice::CfgNode"** }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"struct.Ice::sz_allocator" }
%"struct.Ice::sz_allocator" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.llvm::BumpPtrAllocatorImpl" = type <{ i8*, i8*, %"class.llvm::SmallVector", %"class.llvm::SmallVector.0", i64, %"class.llvm::MallocAllocator", [7 x i8] }>
%"class.llvm::SmallVector" = type { %"class.llvm::SmallVectorImpl", %"struct.llvm::SmallVectorStorage" }
%"class.llvm::SmallVectorImpl" = type { %"class.llvm::SmallVectorTemplateBase" }
%"class.llvm::SmallVectorTemplateBase" = type { %"class.llvm::SmallVectorTemplateCommon" }
%"class.llvm::SmallVectorTemplateCommon" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion" }
%"class.llvm::SmallVectorBase" = type { i8*, i8*, i8* }
%"struct.llvm::AlignedCharArrayUnion" = type { %"struct.llvm::AlignedCharArray" }
%"struct.llvm::AlignedCharArray" = type { [8 x i8] }
%"struct.llvm::SmallVectorStorage" = type { [3 x %"struct.llvm::AlignedCharArrayUnion"] }
%"class.llvm::SmallVector.0" = type <{ %"class.llvm::SmallVectorImpl.1", %"struct.llvm::SmallVectorStorage.6", [7 x i8] }>
%"class.llvm::SmallVectorImpl.1" = type { %"class.llvm::SmallVectorTemplateBase.2" }
%"class.llvm::SmallVectorTemplateBase.2" = type { %"class.llvm::SmallVectorTemplateCommon.3" }
%"class.llvm::SmallVectorTemplateCommon.3" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.4" }
%"struct.llvm::AlignedCharArrayUnion.4" = type { %"struct.llvm::AlignedCharArray.5" }
%"struct.llvm::AlignedCharArray.5" = type { [16 x i8] }
%"struct.llvm::SmallVectorStorage.6" = type { i8 }
%"class.llvm::MallocAllocator" = type { i8 }
%"class.llvm::iplist" = type { %"class.llvm::iplist_impl" }
%"class.llvm::iplist_impl" = type { %"class.llvm::simple_ilist" }
%"class.llvm::simple_ilist" = type { %"class.llvm::ilist_sentinel" }
%"class.llvm::ilist_sentinel" = type { %"class.llvm::ilist_node_impl" }
%"class.llvm::ilist_node_impl" = type { %"class.llvm::ilist_node_base" }
%"class.llvm::ilist_node_base" = type { %"class.llvm::ilist_node_base"*, %"class.llvm::ilist_node_base"* }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.315", %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.315" = type { %"class.Ice::CaseCluster"* }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"struct.Ice::sz_allocator.317" }
%"struct.Ice::sz_allocator.317" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.Ice::Cfg" = type <{ %"class.std::__1::unique_ptr", %"class.Ice::GlobalContext"*, i32, i32, i32, [4 x i8], %"class.Ice::StringID", i32, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.Ice::CfgNode"*, %"class.std::__1::vector.196", i32, [4 x i8], %"class.std::__1::vector.201", %"class.std::__1::vector.201", %"class.std::__1::vector.201", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.138", %"class.std::__1::vector.243", %"class.Ice::CfgNode"*, %"class.std::__1::vector.249", i32, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.Ice::GlobalContext" = type { %"class.std::__1::mutex", %"class.llvm::BumpPtrAllocatorImpl", [16 x i8], %"class.std::__1::mutex", %"class.Ice::VariableDeclarationList", [8 x i8], %"class.std::__1::mutex", %"class.std::__1::vector.12", %"class.std::__1::mutex", %"class.std::__1::unique_ptr.26", [16 x i8], %"class.std::__1::mutex", %"class.std::__1::unique_ptr.51", [16 x i8], %"class.std::__1::mutex", %"class.std::__1::vector.57", %"class.std::__1::mutex", %"class.Ice::ErrorCode", %"class.std::__1::mutex", %"class.Ice::GlobalContext::CodeStats", %"class.std::__1::mutex", %"class.Ice::GlobalContext::TimerList", %"class.std::__1::mutex", %"class.llvm::raw_ostream"*, %"class.llvm::raw_ostream"*, %"class.llvm::raw_ostream"*, %"struct.std::__1::atomic", [63 x i8], %"class.std::__1::unique_ptr.118", i64, %"class.Ice::BoundedProducerConsumerQueue", %"class.Ice::BoundedProducerConsumerQueue.134", %"class.std::__1::unique_ptr.171", i8, %"class.std::__1::unique_ptr.177", i8, [15 x %"class.Ice::Constant"*], %"class.Ice::Constant"*, [36 x %"class.Ice::Constant"*], %"class.llvm::SmallVector.183", %"class.llvm::SmallVector.189", %"class.llvm::SmallVector.189" }
%"class.Ice::VariableDeclarationList" = type { %"class.std::__1::unique_ptr", %"class.std::__1::vector", %"class.std::__1::vector.12", %"class.std::__1::vector.19" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.Ice::VariableDeclaration"**, %"class.Ice::VariableDeclaration"**, %"class.std::__1::__compressed_pair.9" }
%"class.Ice::VariableDeclaration" = type opaque
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.Ice::VariableDeclaration"** }
%"class.std::__1::vector.19" = type { %"class.std::__1::__vector_base.20" }
%"class.std::__1::__vector_base.20" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %"class.std::__1::function"*, %"class.std::__1::function"*, %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.std::__1::function"* }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.Ice::ConstantPool"* }
%"class.Ice::ConstantPool" = type opaque
%"class.std::__1::vector.57" = type { %"class.std::__1::__vector_base.58" }
%"class.std::__1::__vector_base.58" = type { %"class.Ice::JumpTableData"*, %"class.Ice::JumpTableData"*, %"class.std::__1::__compressed_pair.66" }
%"class.Ice::JumpTableData" = type { %"class.Ice::StringID", %"class.Ice::StringID", i32, %"class.std::__1::vector.59" }
%"class.std::__1::vector.59" = type { %"class.std::__1::__vector_base.60" }
%"class.std::__1::__vector_base.60" = type { i64*, i64*, %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { i64* }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.Ice::JumpTableData"* }
%"class.Ice::ErrorCode" = type <{ %"class.std::__1::error_code", i8, [7 x i8] }>
%"class.std::__1::error_code" = type { i32, %"class.std::__1::error_category"* }
%"class.std::__1::error_category" = type { i32 (...)** }
%"class.Ice::GlobalContext::CodeStats" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [6 x i32] }
%"class.Ice::GlobalContext::TimerList" = type { %"class.std::__1::vector.71" }
%"class.std::__1::vector.71" = type { %"class.std::__1::__vector_base.72" }
%"class.std::__1::__vector_base.72" = type { %"class.Ice::TimerStack"*, %"class.Ice::TimerStack"*, %"class.std::__1::__compressed_pair.113" }
%"class.Ice::TimerStack" = type { %"class.std::__1::basic_string", double, double, i64, %"class.std::__1::map", %"class.std::__1::vector.85", %"class.std::__1::vector.92", %"class.std::__1::vector.106", %"class.std::__1::vector.94", i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.78", %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { i64 }
%"class.std::__1::vector.85" = type { %"class.std::__1::__vector_base.86" }
%"class.std::__1::__vector_base.86" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.92" = type { %"class.std::__1::__vector_base.93" }
%"class.std::__1::__vector_base.93" = type { %"class.Ice::TimerStack::TimerTreeNode"*, %"class.Ice::TimerStack::TimerTreeNode"*, %"class.std::__1::__compressed_pair.101" }
%"class.Ice::TimerStack::TimerTreeNode" = type { %"class.std::__1::vector.94", i64, i32, double, i64 }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.Ice::TimerStack::TimerTreeNode"* }
%"class.std::__1::vector.106" = type { %"class.std::__1::__vector_base.107" }
%"class.std::__1::__vector_base.107" = type { double*, double*, %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { double* }
%"class.std::__1::vector.94" = type { %"class.std::__1::__vector_base.95" }
%"class.std::__1::__vector_base.95" = type { i64*, i64*, %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { i64* }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.Ice::TimerStack"* }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.llvm::raw_ostream" = type <{ i32 (...)**, i8*, i8*, i8*, i32, [4 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i8 }
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.Ice::ELFObjectWriter"* }
%"class.Ice::ELFObjectWriter" = type opaque
%"class.Ice::BoundedProducerConsumerQueue" = type <{ [65536 x %"class.std::__1::unique_ptr.124"], %"class.std::__1::mutex", [24 x i8], %"class.std::__1::condition_variable", i64, [8 x i8], %"class.std::__1::condition_variable", i64, [8 x i8], i64, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.Ice::OptWorkItem"* }
%"class.Ice::OptWorkItem" = type { i32 (...)** }
%"class.std::__1::condition_variable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.130, %union.anon.132, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.130 = type { i64 }
%union.anon.132 = type { i64 }
%"class.Ice::BoundedProducerConsumerQueue.134" = type <{ [128 x %"class.std::__1::unique_ptr.135"], %"class.std::__1::mutex", [24 x i8], %"class.std::__1::condition_variable", i64, [8 x i8], %"class.std::__1::condition_variable", i64, [8 x i8], i64, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.Ice::EmitterWorkItem"* }
%"class.Ice::EmitterWorkItem" = type { i32, i32, %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.161" }
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.Ice::Cfg"* }
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.Ice::TargetDataLowering"* }
%"class.Ice::TargetDataLowering" = type { i32 (...)**, %"class.Ice::GlobalContext"* }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.Ice::Instrumentation"* }
%"class.Ice::Instrumentation" = type { i32 (...)**, %"class.Ice::GlobalContext"*, i8, %"class.std::__1::mutex", %"class.std::__1::condition_variable" }
%"class.Ice::Constant" = type <{ %"class.Ice::Operand", %"class.Ice::StringID", i8, i8, [6 x i8] }>
%"class.Ice::Operand" = type { i32 (...)**, i32, i32, i32, %"class.Ice::Variable"**, i8* }
%"class.Ice::Variable" = type { %"class.Ice::Operand", i32, %"class.Ice::StringID.278", i8, i8, i8, i8, i8, i8, %"class.Ice::RegNumT", %"class.Ice::RegNumT", i32, %"class.Ice::LiveRange", [1 x %"class.Ice::Variable"*], %"class.Ice::Variable"*, i8* }
%"class.Ice::StringID.278" = type { i64 }
%"class.Ice::RegNumT" = type { i32 }
%"class.Ice::LiveRange" = type { %"class.std::__1::vector.279", %"class.std::__1::unordered_map.285", %"class.std::__1::__wrap_iter" }
%"class.std::__1::vector.279" = type { %"class.std::__1::__vector_base.280" }
%"class.std::__1::__vector_base.280" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.281" }
%"struct.std::__1::pair" = type { i32, i32 }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282", %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"struct.std::__1::pair"* }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"struct.Ice::sz_allocator.284" }
%"struct.Ice::sz_allocator.284" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::unordered_map.285" = type { %"class.std::__1::__hash_table.286" }
%"class.std::__1::__hash_table.286" = type <{ %"class.std::__1::unique_ptr.287", %"class.std::__1::__compressed_pair.296", %"class.std::__1::__compressed_pair.300", %"class.std::__1::__compressed_pair.305", [4 x i8] }>
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289", %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::__hash_node_base.290"** }
%"struct.std::__1::__hash_node_base.290" = type { %"struct.std::__1::__hash_node_base.290"* }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"class.std::__1::__bucket_list_deallocator.292" }
%"class.std::__1::__bucket_list_deallocator.292" = type { %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.34", %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"struct.Ice::sz_allocator.295" }
%"struct.Ice::sz_allocator.295" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297", %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"struct.std::__1::__hash_node_base.290" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"struct.Ice::sz_allocator.299" }
%"struct.Ice::sz_allocator.299" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { float }
%"class.std::__1::__wrap_iter" = type { %"struct.std::__1::pair"* }
%"class.llvm::SmallVector.183" = type { %"class.llvm::SmallVectorImpl.184", %"struct.llvm::SmallVectorStorage.188" }
%"class.llvm::SmallVectorImpl.184" = type { %"class.llvm::SmallVectorTemplateBase.185" }
%"class.llvm::SmallVectorTemplateBase.185" = type { %"class.llvm::SmallVectorTemplateCommon.186" }
%"class.llvm::SmallVectorTemplateCommon.186" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.187" }
%"struct.llvm::AlignedCharArrayUnion.187" = type { %"struct.llvm::AlignedCharArray" }
%"struct.llvm::SmallVectorStorage.188" = type { [127 x %"struct.llvm::AlignedCharArrayUnion.187"] }
%"class.llvm::SmallVector.189" = type { %"class.llvm::SmallVectorImpl.190", %"struct.llvm::SmallVectorStorage.194" }
%"class.llvm::SmallVectorImpl.190" = type { %"class.llvm::SmallVectorTemplateBase.191" }
%"class.llvm::SmallVectorTemplateBase.191" = type { %"class.llvm::SmallVectorTemplateCommon.192" }
%"class.llvm::SmallVectorTemplateCommon.192" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.193" }
%"struct.llvm::AlignedCharArrayUnion.193" = type { %"struct.llvm::AlignedCharArray" }
%"struct.llvm::SmallVectorStorage.194" = type { [127 x %"struct.llvm::AlignedCharArrayUnion.193"] }
%"class.Ice::StringID" = type { i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.201" = type { %"class.std::__1::__vector_base.202" }
%"class.std::__1::__vector_base.202" = type { %"class.Ice::Variable"**, %"class.Ice::Variable"**, %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204", %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"class.Ice::Variable"** }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.Ice::sz_allocator.206" }
%"struct.Ice::sz_allocator.206" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.Ice::StringPool"* }
%"class.Ice::StringPool" = type { i64, %"class.std::__1::unordered_map" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.29", %"class.std::__1::__compressed_pair.38", %"class.std::__1::__compressed_pair.43", %"class.std::__1::__compressed_pair.45", [4 x i8] }>
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31", %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.Ice::Liveness"* }
%"class.Ice::Liveness" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.Ice::TargetLowering"* }
%"class.Ice::TargetLowering" = type <{ i32 (...)**, i8, i8, [6 x i8], %"class.Ice::Cfg"*, %"class.Ice::GlobalContext"*, i8, i8, [2 x i8], i32, i32, [4 x i8], %"class.Ice::LoweringContext", i32, [4 x i8] }>
%"class.Ice::LoweringContext" = type { %"class.Ice::CfgNode"*, %"class.Ice::Inst"*, %"class.llvm::ilist_iterator", %"class.llvm::ilist_iterator", %"class.llvm::ilist_iterator", %"class.llvm::ilist_iterator", %"class.Ice::Variable"*, %"class.Ice::Variable"* }
%"class.Ice::Inst" = type <{ i32 (...)**, %"class.llvm::ilist_node", i32, i32, i8, i8, i8, i8, [4 x i8], i8*, %"class.Ice::Variable"*, i32, [4 x i8], %"class.std::__1::vector.216", i32, [4 x i8] }>
%"class.llvm::ilist_node" = type { %"class.llvm::ilist_node_impl" }
%"class.std::__1::vector.216" = type { %"class.std::__1::__vector_base.217" }
%"class.std::__1::__vector_base.217" = type { %"class.Ice::Operand"**, %"class.Ice::Operand"**, %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219", %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.Ice::Operand"** }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"struct.Ice::sz_allocator.221" }
%"struct.Ice::sz_allocator.221" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.llvm::ilist_iterator" = type { %"class.llvm::ilist_node_impl"* }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.Ice::VariablesMetadata"* }
%"class.Ice::VariablesMetadata" = type { %"class.Ice::Cfg"*, i32, %"class.std::__1::vector.228" }
%"class.std::__1::vector.228" = type { %"class.std::__1::__vector_base.229" }
%"class.std::__1::__vector_base.229" = type { %"class.Ice::VariableTracking"*, %"class.Ice::VariableTracking"*, %"class.std::__1::__compressed_pair.236" }
%"class.Ice::VariableTracking" = type <{ i32, i32, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*, %"class.std::__1::vector.230", %"class.Ice::Inst"*, %"class.Ice::RegWeight", [4 x i8] }>
%"class.std::__1::vector.230" = type { %"class.std::__1::__vector_base.231" }
%"class.std::__1::__vector_base.231" = type { %"class.Ice::Inst"**, %"class.Ice::Inst"**, %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233", %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.Ice::Inst"** }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"struct.Ice::sz_allocator.235" }
%"struct.Ice::sz_allocator.235" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.Ice::RegWeight" = type { i32 }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237", %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.Ice::VariableTracking"* }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.Ice::sz_allocator.239" }
%"struct.Ice::sz_allocator.239" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.Ice::Assembler"* }
%"class.Ice::Assembler" = type { i32 (...)**, i32, [4 x i8], %"class.llvm::BumpPtrAllocatorImpl.147", %"class.Ice::StringID", i8, i8, [6 x i8], %"class.Ice::AssemblerBuffer" }
%"class.llvm::BumpPtrAllocatorImpl.147" = type <{ i8*, i8*, %"class.llvm::SmallVector", %"class.llvm::SmallVector.0", i64, %"class.llvm::MallocAllocator", [7 x i8] }>
%"class.Ice::AssemblerBuffer" = type <{ i8, [7 x i8], i64, i64, i64, %"class.Ice::Assembler"*, %"class.std::__1::vector.150", i8, [7 x i8] }>
%"class.std::__1::vector.150" = type { %"class.std::__1::__vector_base.151" }
%"class.std::__1::__vector_base.151" = type { %"class.Ice::AssemblerFixup"**, %"class.Ice::AssemblerFixup"**, %"class.std::__1::__compressed_pair.153" }
%"class.Ice::AssemblerFixup" = type { i32 (...)**, i64, i32, i32, i8, %union.anon.152 }
%union.anon.152 = type { %"class.Ice::Constant"* }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.Ice::AssemblerFixup"** }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.Ice::VariableDeclarationList"* }
%"class.std::__1::vector.243" = type { %"class.std::__1::__vector_base.244" }
%"class.std::__1::__vector_base.244" = type { %"class.Ice::InstJumpTable"**, %"class.Ice::InstJumpTable"**, %"class.std::__1::__compressed_pair.245" }
%"class.Ice::InstJumpTable" = type { %"class.Ice::InstHighLevel.base", i32, i32, %"class.Ice::CfgNode"**, %"class.Ice::StringID", %"class.Ice::StringID" }
%"class.Ice::InstHighLevel.base" = type { %"class.Ice::Inst.base" }
%"class.Ice::Inst.base" = type <{ i32 (...)**, %"class.llvm::ilist_node", i32, i32, i8, i8, i8, i8, [4 x i8], i8*, %"class.Ice::Variable"*, i32, [4 x i8], %"class.std::__1::vector.216", i32 }>
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246", %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"class.Ice::InstJumpTable"** }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"struct.Ice::sz_allocator.248" }
%"struct.Ice::sz_allocator.248" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::vector.249" = type { %"class.std::__1::__vector_base.250" }
%"class.std::__1::__vector_base.250" = type { %"struct.Ice::Loop"*, %"struct.Ice::Loop"*, %"class.std::__1::__compressed_pair.274" }
%"struct.Ice::Loop" = type { %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*, %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.251" }
%"class.std::__1::__hash_table.251" = type <{ %"class.std::__1::unique_ptr.252", %"class.std::__1::__compressed_pair.261", %"class.std::__1::__compressed_pair.265", %"class.std::__1::__compressed_pair.269", [4 x i8] }>
%"class.std::__1::unique_ptr.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254", %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"struct.std::__1::__hash_node_base.255"** }
%"struct.std::__1::__hash_node_base.255" = type { %"struct.std::__1::__hash_node_base.255"* }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"class.std::__1::__bucket_list_deallocator.257" }
%"class.std::__1::__bucket_list_deallocator.257" = type { %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.34", %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"struct.Ice::sz_allocator.260" }
%"struct.Ice::sz_allocator.260" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262", %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.255" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"struct.Ice::sz_allocator.264" }
%"struct.Ice::sz_allocator.264" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275", %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"struct.Ice::Loop"* }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"struct.Ice::sz_allocator.277" }
%"struct.Ice::sz_allocator.277" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.Ice::InstSwitch" = type { %"class.Ice::InstHighLevel.base", %"class.Ice::CfgNode"*, i32, i64*, %"class.Ice::CfgNode"** }
%"struct.std::__1::__split_buffer.324" = type { %"class.Ice::CaseCluster"*, %"class.Ice::CaseCluster"*, %"class.Ice::CaseCluster"*, %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.315", %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"struct.Ice::sz_allocator.317"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::pair.321" = type { i8*, i64 }

$_ZNSt3__16vectorIN3Ice11CaseClusterENS1_12sz_allocatorIS2_NS1_18CfgAllocatorTraitsEEEE7reserveEm = comdat any

$_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm = comdat any

$_ZN4llvm23SmallVectorTemplateBaseINSt3__14pairIPvmEELb1EE9push_backERKS4_ = comdat any

$_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE12StartNewSlabEv = comdat any

$_ZN4llvm23SmallVectorTemplateBaseIPvLb1EE9push_backERKS1_ = comdat any

$_ZNSt3__114__split_bufferIN3Ice11CaseClusterERNS1_12sz_allocatorIS2_NS1_18CfgAllocatorTraitsEEEEC2EmmS6_ = comdat any

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice11CaseCluster16clusterizeSwitchEPNS_3CfgEPKNS_10InstSwitchE(%"class.std::__1::vector.311"* noalias sret, %"class.Ice::Cfg"*, %"class.Ice::InstSwitch"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.std::__1::__split_buffer.324", align 8
  %5 = alloca %"struct.std::__1::__split_buffer.324", align 8
  %6 = getelementptr inbounds %"class.Ice::InstSwitch", %"class.Ice::InstSwitch"* %2, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.311", %"class.std::__1::vector.311"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector.311", %"class.std::__1::vector.311"* %0, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::vector.311", %"class.std::__1::vector.311"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = bitcast %"class.std::__1::vector.311"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false) #6
  %12 = zext i32 %7 to i64
  tail call void @_ZNSt3__16vectorIN3Ice11CaseClusterENS1_12sz_allocatorIS2_NS1_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.311"* %0, i64 %12) #7
  tail call void @_ZNSt3__16vectorIN3Ice11CaseClusterENS1_12sz_allocatorIS2_NS1_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.311"* %0, i64 %12) #7
  %13 = icmp eq i32 %7, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %3
  %15 = load %"class.Ice::CaseCluster"*, %"class.Ice::CaseCluster"** %9, align 8
  br label %33

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.Ice::InstSwitch", %"class.Ice::InstSwitch"* %2, i64 0, i32 3
  %18 = getelementptr inbounds %"class.Ice::InstSwitch", %"class.Ice::InstSwitch"* %2, i64 0, i32 4
  %19 = getelementptr inbounds %"class.std::__1::vector.311", %"class.std::__1::vector.311"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %20 = bitcast %"struct.std::__1::__split_buffer.324"* %4 to i8*
  %21 = getelementptr inbounds %"struct.std::__1::__split_buffer.324", %"struct.std::__1::__split_buffer.324"* %4, i64 0, i32 1
  %22 = getelementptr inbounds %"struct.std::__1::__split_buffer.324", %"struct.std::__1::__split_buffer.324"* %4, i64 0, i32 2
  %23 = getelementptr inbounds %"struct.std::__1::__split_buffer.324", %"struct.std::__1::__split_buffer.324"* %4, i64 0, i32 3, i32 0, i32 0
  %24 = bitcast %"class.Ice::CaseCluster"** %9 to i64*
  %25 = bitcast %"class.std::__1::vector.311"* %0 to i64*
  %26 = bitcast %"class.Ice::CaseCluster"** %10 to i64*
  %27 = bitcast %"class.Ice::CaseCluster"** %21 to i64*
  %28 = bitcast %"class.Ice::CaseCluster"** %22 to i64*
  %29 = bitcast %"class.Ice::CaseCluster"** %23 to i64*
  %30 = bitcast %"struct.std::__1::__split_buffer.324"* %4 to i64*
  %31 = load %"class.Ice::CaseCluster"*, %"class.Ice::CaseCluster"** %9, align 8
  %32 = ptrtoint %"class.Ice::CaseCluster"* %31 to i64
  br label %102

33:                                               ; preds = %193, %14
  %34 = phi %"class.Ice::CaseCluster"* [ %15, %14 ], [ %194, %193 ]
  %35 = load %"class.Ice::CaseCluster"*, %"class.Ice::CaseCluster"** %8, align 8
  call fastcc void @"_ZNSt3__16__sortIRZN3Ice11CaseCluster16clusterizeSwitchEPNS1_3CfgEPKNS1_10InstSwitchEE3$_0PS2_EEvT0_SB_T_"(%"class.Ice::CaseCluster"* %35, %"class.Ice::CaseCluster"* %34) #8
  %36 = load %"class.Ice::CaseCluster"*, %"class.Ice::CaseCluster"** %8, align 8
  %37 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %36, i64 1
  %38 = load %"class.Ice::CaseCluster"*, %"class.Ice::CaseCluster"** %9, align 8
  %39 = icmp eq %"class.Ice::CaseCluster"* %37, %38
  br i1 %39, label %68, label %40

40:                                               ; preds = %33, %62
  %41 = phi %"class.Ice::CaseCluster"* [ %63, %62 ], [ %36, %33 ]
  %42 = phi %"class.Ice::CaseCluster"* [ %64, %62 ], [ %37, %33 ]
  %43 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %41, i64 0, i32 3, i32 0
  %44 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %43, align 8
  %45 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %42, i64 0, i32 3, i32 0
  %46 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %45, align 8
  %47 = icmp eq %"class.Ice::CfgNode"* %44, %46
  br i1 %47, label %48, label %58

48:                                               ; preds = %40
  %49 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %41, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = add i64 %50, 1
  %52 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %42, i64 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %51, %53
  br i1 %54, label %55, label %58

55:                                               ; preds = %48
  %56 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %42, i64 0, i32 2
  %57 = load i64, i64* %56, align 8
  store i64 %57, i64* %49, align 8
  br label %62

58:                                               ; preds = %48, %40
  %59 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %41, i64 1
  %60 = bitcast %"class.Ice::CaseCluster"* %59 to i8*
  %61 = bitcast %"class.Ice::CaseCluster"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 32, i1 false) #6
  br label %62

62:                                               ; preds = %58, %55
  %63 = phi %"class.Ice::CaseCluster"* [ %41, %55 ], [ %59, %58 ]
  %64 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %42, i64 1
  %65 = icmp eq %"class.Ice::CaseCluster"* %64, %38
  br i1 %65, label %66, label %40

66:                                               ; preds = %62
  %67 = load %"class.Ice::CaseCluster"*, %"class.Ice::CaseCluster"** %9, align 8
  br label %68

68:                                               ; preds = %66, %33
  %69 = phi %"class.Ice::CaseCluster"* [ %38, %33 ], [ %67, %66 ]
  %70 = phi %"class.Ice::CaseCluster"* [ %37, %33 ], [ %67, %66 ]
  %71 = phi %"class.Ice::CaseCluster"* [ %36, %33 ], [ %63, %66 ]
  %72 = ptrtoint %"class.Ice::CaseCluster"* %69 to i64
  %73 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %71, i64 1
  %74 = icmp eq %"class.Ice::CaseCluster"* %73, %70
  br i1 %74, label %86, label %75

75:                                               ; preds = %68
  %76 = ptrtoint %"class.Ice::CaseCluster"* %70 to i64
  %77 = sub i64 %72, %76
  %78 = ashr exact i64 %77, 5
  %79 = icmp eq i64 %77, 0
  br i1 %79, label %83, label %80

80:                                               ; preds = %75
  %81 = bitcast %"class.Ice::CaseCluster"* %73 to i8*
  %82 = bitcast %"class.Ice::CaseCluster"* %70 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %82, i64 %77, i1 false) #6
  br label %83

83:                                               ; preds = %80, %75
  %84 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %73, i64 %78
  store %"class.Ice::CaseCluster"* %84, %"class.Ice::CaseCluster"** %9, align 8
  %85 = ptrtoint %"class.Ice::CaseCluster"* %84 to i64
  br label %86

86:                                               ; preds = %68, %83
  %87 = phi i64 [ %85, %83 ], [ %72, %68 ]
  %88 = bitcast %"class.Ice::CaseCluster"** %9 to i64*
  %89 = bitcast %"class.std::__1::vector.311"* %0 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = sub i64 %87, %90
  %92 = ashr exact i64 %91, 5
  %93 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 23, i32 0, i32 0, i32 0
  %94 = load %"class.Ice::TargetLowering"*, %"class.Ice::TargetLowering"** %93, align 8
  %95 = bitcast %"class.Ice::TargetLowering"* %94 to i32 (%"class.Ice::TargetLowering"*)***
  %96 = load i32 (%"class.Ice::TargetLowering"*)**, i32 (%"class.Ice::TargetLowering"*)*** %95, align 8
  %97 = getelementptr inbounds i32 (%"class.Ice::TargetLowering"*)*, i32 (%"class.Ice::TargetLowering"*)** %96, i64 28
  %98 = load i32 (%"class.Ice::TargetLowering"*)*, i32 (%"class.Ice::TargetLowering"*)** %97, align 8
  %99 = call i32 %98(%"class.Ice::TargetLowering"* %94) #8
  %100 = zext i32 %99 to i64
  %101 = icmp ult i64 %92, %100
  br i1 %101, label %415, label %198

102:                                              ; preds = %193, %16
  %103 = phi i64 [ %32, %16 ], [ %195, %193 ]
  %104 = phi %"class.Ice::CaseCluster"* [ %31, %16 ], [ %194, %193 ]
  %105 = phi i64 [ 0, %16 ], [ %196, %193 ]
  %106 = load i64*, i64** %17, align 8
  %107 = getelementptr inbounds i64, i64* %106, i64 %105
  %108 = load i64, i64* %107, align 8
  %109 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %18, align 8
  %110 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %109, i64 %105
  %111 = bitcast %"class.Ice::CfgNode"** %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = load %"class.Ice::CaseCluster"*, %"class.Ice::CaseCluster"** %10, align 8
  %114 = icmp ult %"class.Ice::CaseCluster"* %104, %113
  %115 = ptrtoint %"class.Ice::CaseCluster"* %113 to i64
  br i1 %114, label %116, label %124

116:                                              ; preds = %102
  %117 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %104, i64 0, i32 0
  store i32 0, i32* %117, align 8
  %118 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %104, i64 0, i32 1
  store i64 %108, i64* %118, align 8
  %119 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %104, i64 0, i32 2
  store i64 %108, i64* %119, align 8
  %120 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %104, i64 0, i32 3, i32 0
  %121 = bitcast %"class.Ice::CfgNode"** %120 to i64*
  store i64 %112, i64* %121, align 8
  %122 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %104, i64 1
  %123 = ptrtoint %"class.Ice::CaseCluster"* %122 to i64
  store i64 %123, i64* %24, align 8
  br label %193

124:                                              ; preds = %102
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %20) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 40, i1 false) #6
  %125 = load i64, i64* %25, align 8
  %126 = sub i64 %103, %125
  %127 = ashr exact i64 %126, 5
  %128 = add nsw i64 %127, 1
  %129 = icmp ugt i64 %128, 576460752303423487
  br i1 %129, label %130, label %132

130:                                              ; preds = %124
  %131 = bitcast %"class.std::__1::vector.311"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %131) #9
  unreachable

132:                                              ; preds = %124
  %133 = sub i64 %115, %125
  %134 = ashr exact i64 %133, 5
  %135 = icmp ult i64 %134, 288230376151711743
  br i1 %135, label %136, label %140

136:                                              ; preds = %132
  %137 = ashr exact i64 %133, 4
  %138 = icmp ult i64 %137, %128
  %139 = select i1 %138, i64 %128, i64 %137
  br label %140

140:                                              ; preds = %136, %132
  %141 = phi i64 [ %139, %136 ], [ 576460752303423487, %132 ]
  call void @_ZNSt3__114__split_bufferIN3Ice11CaseClusterERNS1_12sz_allocatorIS2_NS1_18CfgAllocatorTraitsEEEEC2EmmS6_(%"struct.std::__1::__split_buffer.324"* nonnull %4, i64 %141, i64 %127, %"struct.Ice::sz_allocator.317"* dereferenceable(8) %19) #8
  %142 = load %"class.Ice::CaseCluster"*, %"class.Ice::CaseCluster"** %22, align 8
  %143 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %142, i64 0, i32 0
  store i32 0, i32* %143, align 8
  %144 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %142, i64 0, i32 1
  store i64 %108, i64* %144, align 8
  %145 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %142, i64 0, i32 2
  store i64 %108, i64* %145, align 8
  %146 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %142, i64 0, i32 3, i32 0
  %147 = bitcast %"class.Ice::CfgNode"** %146 to i64*
  store i64 %112, i64* %147, align 8
  %148 = load %"class.Ice::CaseCluster"*, %"class.Ice::CaseCluster"** %22, align 8
  %149 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %148, i64 1
  store %"class.Ice::CaseCluster"* %149, %"class.Ice::CaseCluster"** %22, align 8
  %150 = load %"class.Ice::CaseCluster"*, %"class.Ice::CaseCluster"** %8, align 8
  %151 = load %"class.Ice::CaseCluster"*, %"class.Ice::CaseCluster"** %9, align 8
  %152 = icmp eq %"class.Ice::CaseCluster"* %151, %150
  br i1 %152, label %153, label %157

153:                                              ; preds = %140
  %154 = ptrtoint %"class.Ice::CaseCluster"* %149 to i64
  %155 = ptrtoint %"class.Ice::CaseCluster"* %150 to i64
  %156 = load i64, i64* %27, align 8
  br label %174

157:                                              ; preds = %140
  %158 = load %"class.Ice::CaseCluster"*, %"class.Ice::CaseCluster"** %21, align 8
  br label %159

159:                                              ; preds = %159, %157
  %160 = phi %"class.Ice::CaseCluster"* [ %167, %159 ], [ %158, %157 ]
  %161 = phi %"class.Ice::CaseCluster"* [ %163, %159 ], [ %151, %157 ]
  %162 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %160, i64 -1
  %163 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %161, i64 -1
  %164 = bitcast %"class.Ice::CaseCluster"* %162 to i8*
  %165 = bitcast %"class.Ice::CaseCluster"* %163 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %164, i8* align 8 %165, i64 32, i1 false) #6
  %166 = load %"class.Ice::CaseCluster"*, %"class.Ice::CaseCluster"** %21, align 8
  %167 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %166, i64 -1
  store %"class.Ice::CaseCluster"* %167, %"class.Ice::CaseCluster"** %21, align 8
  %168 = icmp eq %"class.Ice::CaseCluster"* %163, %150
  br i1 %168, label %169, label %159

169:                                              ; preds = %159
  %170 = ptrtoint %"class.Ice::CaseCluster"* %167 to i64
  %171 = load i64, i64* %25, align 8
  %172 = load i64, i64* %24, align 8
  %173 = load i64, i64* %28, align 8
  br label %174

174:                                              ; preds = %169, %153
  %175 = phi i64 [ %154, %153 ], [ %173, %169 ]
  %176 = phi i64 [ %155, %153 ], [ %172, %169 ]
  %177 = phi i64 [ %156, %153 ], [ %170, %169 ]
  %178 = phi i64 [ %155, %153 ], [ %171, %169 ]
  store i64 %177, i64* %25, align 8
  store i64 %178, i64* %27, align 8
  store i64 %175, i64* %24, align 8
  store i64 %176, i64* %28, align 8
  %179 = load i64, i64* %26, align 8
  %180 = load i64, i64* %29, align 8
  store i64 %180, i64* %26, align 8
  store i64 %179, i64* %29, align 8
  store i64 %178, i64* %30, align 8
  %181 = inttoptr i64 %178 to %"class.Ice::CaseCluster"*
  %182 = inttoptr i64 %176 to %"class.Ice::CaseCluster"*
  %183 = icmp eq %"class.Ice::CaseCluster"* %182, %181
  %184 = inttoptr i64 %175 to %"class.Ice::CaseCluster"*
  br i1 %183, label %192, label %185

185:                                              ; preds = %174
  %186 = getelementptr %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %182, i64 -1, i32 0
  %187 = ptrtoint i32* %186 to i64
  %188 = sub i64 %187, %178
  %189 = lshr i64 %188, 5
  %190 = xor i64 %189, -1
  %191 = getelementptr %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %182, i64 %190
  store %"class.Ice::CaseCluster"* %191, %"class.Ice::CaseCluster"** %22, align 8
  br label %192

192:                                              ; preds = %174, %185
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %20) #6
  br label %193

193:                                              ; preds = %116, %192
  %194 = phi %"class.Ice::CaseCluster"* [ %122, %116 ], [ %184, %192 ]
  %195 = phi i64 [ %123, %116 ], [ %175, %192 ]
  %196 = add nuw nsw i64 %105, 1
  %197 = icmp eq i64 %196, %12
  br i1 %197, label %33, label %102

198:                                              ; preds = %86
  %199 = load %"class.Ice::CaseCluster"*, %"class.Ice::CaseCluster"** %9, align 8
  %200 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %199, i64 -1, i32 2
  %201 = load i64, i64* %200, align 8
  %202 = load %"class.Ice::CaseCluster"*, %"class.Ice::CaseCluster"** %8, align 8
  %203 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %202, i64 0, i32 1
  %204 = load i64, i64* %203, align 8
  %205 = sub i64 %201, %204
  %206 = shl i32 %7, 1
  %207 = zext i32 %206 to i64
  %208 = icmp uge i64 %205, %207
  %209 = icmp eq i64 %205, -1
  %210 = or i1 %208, %209
  br i1 %210, label %415, label %211

211:                                              ; preds = %198
  %212 = trunc i64 %205 to i32
  %213 = add i32 %212, 1
  %214 = getelementptr inbounds %"class.Ice::InstSwitch", %"class.Ice::InstSwitch"* %2, i64 0, i32 1
  %215 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %214, align 8
  %216 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %217 = load %"class.llvm::BumpPtrAllocatorImpl"*, %"class.llvm::BumpPtrAllocatorImpl"** %216, align 8
  %218 = call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %217, i64 136, i64 8) #8
  %219 = bitcast i8* %218 to %"class.Ice::InstJumpTable"*
  call void @_ZN3Ice13InstJumpTableC1EPNS_3CfgEjPNS_7CfgNodeE(%"class.Ice::InstJumpTable"* %219, %"class.Ice::Cfg"* %1, i32 %213, %"class.Ice::CfgNode"* %215) #8
  %220 = ptrtoint i8* %218 to i64
  %221 = load %"class.Ice::CaseCluster"*, %"class.Ice::CaseCluster"** %8, align 8
  %222 = load %"class.Ice::CaseCluster"*, %"class.Ice::CaseCluster"** %9, align 8
  %223 = icmp eq %"class.Ice::CaseCluster"* %221, %222
  br i1 %223, label %227, label %224

224:                                              ; preds = %211
  %225 = getelementptr inbounds i8, i8* %218, i64 112
  %226 = bitcast i8* %225 to %"class.Ice::CfgNode"***
  br label %380

227:                                              ; preds = %390, %211
  %228 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 27
  %229 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 27, i32 0, i32 1
  %230 = load %"class.Ice::InstJumpTable"**, %"class.Ice::InstJumpTable"*** %229, align 8
  %231 = getelementptr inbounds %"class.Ice::Cfg", %"class.Ice::Cfg"* %1, i64 0, i32 27, i32 0, i32 2, i32 0, i32 0
  %232 = load %"class.Ice::InstJumpTable"**, %"class.Ice::InstJumpTable"*** %231, align 8
  %233 = icmp ult %"class.Ice::InstJumpTable"** %230, %232
  %234 = ptrtoint %"class.Ice::InstJumpTable"** %232 to i64
  br i1 %233, label %235, label %240

235:                                              ; preds = %227
  %236 = bitcast %"class.Ice::InstJumpTable"** %230 to i64*
  store i64 %220, i64* %236, align 8
  %237 = getelementptr inbounds %"class.Ice::InstJumpTable"*, %"class.Ice::InstJumpTable"** %230, i64 1
  %238 = ptrtoint %"class.Ice::InstJumpTable"** %237 to i64
  %239 = bitcast %"class.Ice::InstJumpTable"*** %229 to i64*
  store i64 %238, i64* %239, align 8
  br label %292

240:                                              ; preds = %227
  %241 = ptrtoint %"class.Ice::InstJumpTable"** %230 to i64
  %242 = bitcast %"class.Ice::InstJumpTable"*** %229 to i64*
  %243 = bitcast %"class.std::__1::vector.243"* %228 to i64*
  %244 = load i64, i64* %243, align 8
  %245 = sub i64 %241, %244
  %246 = ashr exact i64 %245, 3
  %247 = add nsw i64 %246, 1
  %248 = icmp ugt i64 %247, 2305843009213693951
  br i1 %248, label %249, label %251

249:                                              ; preds = %240
  %250 = bitcast %"class.std::__1::vector.243"* %228 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %250) #9
  unreachable

251:                                              ; preds = %240
  %252 = bitcast %"class.Ice::InstJumpTable"*** %231 to i64*
  %253 = sub i64 %234, %244
  %254 = ashr exact i64 %253, 3
  %255 = icmp ult i64 %254, 1152921504606846975
  br i1 %255, label %256, label %261

256:                                              ; preds = %251
  %257 = ashr exact i64 %253, 2
  %258 = icmp ult i64 %257, %247
  %259 = select i1 %258, i64 %247, i64 %257
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %267, label %261

261:                                              ; preds = %256, %251
  %262 = phi i64 [ %259, %256 ], [ 2305843009213693951, %251 ]
  %263 = call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #8
  %264 = shl i64 %262, 3
  %265 = call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %263, i64 %264, i64 8) #8
  %266 = bitcast i8* %265 to %"class.Ice::InstJumpTable"**
  br label %267

267:                                              ; preds = %261, %256
  %268 = phi i64 [ %262, %261 ], [ 0, %256 ]
  %269 = phi %"class.Ice::InstJumpTable"** [ %266, %261 ], [ null, %256 ]
  %270 = getelementptr inbounds %"class.Ice::InstJumpTable"*, %"class.Ice::InstJumpTable"** %269, i64 %246
  %271 = getelementptr inbounds %"class.Ice::InstJumpTable"*, %"class.Ice::InstJumpTable"** %269, i64 %268
  %272 = ptrtoint %"class.Ice::InstJumpTable"** %271 to i64
  %273 = bitcast %"class.Ice::InstJumpTable"** %270 to i64*
  store i64 %220, i64* %273, align 8
  %274 = getelementptr inbounds %"class.Ice::InstJumpTable"*, %"class.Ice::InstJumpTable"** %270, i64 1
  %275 = ptrtoint %"class.Ice::InstJumpTable"** %274 to i64
  %276 = getelementptr inbounds %"class.std::__1::vector.243", %"class.std::__1::vector.243"* %228, i64 0, i32 0, i32 0
  %277 = load %"class.Ice::InstJumpTable"**, %"class.Ice::InstJumpTable"*** %276, align 8
  %278 = load %"class.Ice::InstJumpTable"**, %"class.Ice::InstJumpTable"*** %229, align 8
  %279 = icmp eq %"class.Ice::InstJumpTable"** %278, %277
  br i1 %279, label %289, label %280

280:                                              ; preds = %267, %280
  %281 = phi %"class.Ice::InstJumpTable"** [ %283, %280 ], [ %270, %267 ]
  %282 = phi %"class.Ice::InstJumpTable"** [ %284, %280 ], [ %278, %267 ]
  %283 = getelementptr inbounds %"class.Ice::InstJumpTable"*, %"class.Ice::InstJumpTable"** %281, i64 -1
  %284 = getelementptr inbounds %"class.Ice::InstJumpTable"*, %"class.Ice::InstJumpTable"** %282, i64 -1
  %285 = bitcast %"class.Ice::InstJumpTable"** %284 to i64*
  %286 = load i64, i64* %285, align 8
  %287 = bitcast %"class.Ice::InstJumpTable"** %283 to i64*
  store i64 %286, i64* %287, align 8
  %288 = icmp eq %"class.Ice::InstJumpTable"** %284, %277
  br i1 %288, label %289, label %280

289:                                              ; preds = %280, %267
  %290 = phi %"class.Ice::InstJumpTable"** [ %270, %267 ], [ %283, %280 ]
  %291 = ptrtoint %"class.Ice::InstJumpTable"** %290 to i64
  store i64 %291, i64* %243, align 8
  store i64 %275, i64* %242, align 8
  store i64 %272, i64* %252, align 8
  br label %292

292:                                              ; preds = %235, %289
  %293 = load i64, i64* %89, align 8
  store i64 %293, i64* %88, align 8
  %294 = inttoptr i64 %293 to %"class.Ice::CaseCluster"*
  %295 = load %"class.Ice::CaseCluster"*, %"class.Ice::CaseCluster"** %10, align 8
  %296 = icmp ugt %"class.Ice::CaseCluster"* %295, %294
  br i1 %296, label %297, label %305

297:                                              ; preds = %292
  %298 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %294, i64 0, i32 0
  store i32 1, i32* %298, align 8
  %299 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %294, i64 0, i32 1
  store i64 %204, i64* %299, align 8
  %300 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %294, i64 0, i32 2
  store i64 %201, i64* %300, align 8
  %301 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %294, i64 0, i32 3
  %302 = bitcast %union.anon.313* %301 to i64*
  store i64 %220, i64* %302, align 8
  %303 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %294, i64 1
  %304 = ptrtoint %"class.Ice::CaseCluster"* %303 to i64
  store i64 %304, i64* %88, align 8
  br label %415

305:                                              ; preds = %292
  %306 = ptrtoint %"class.Ice::CaseCluster"* %295 to i64
  %307 = getelementptr inbounds %"class.std::__1::vector.311", %"class.std::__1::vector.311"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %308 = bitcast %"struct.std::__1::__split_buffer.324"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %308) #6
  %309 = getelementptr inbounds %"struct.std::__1::__split_buffer.324", %"struct.std::__1::__split_buffer.324"* %5, i64 0, i32 1
  %310 = getelementptr inbounds %"struct.std::__1::__split_buffer.324", %"struct.std::__1::__split_buffer.324"* %5, i64 0, i32 2
  %311 = getelementptr inbounds %"struct.std::__1::__split_buffer.324", %"struct.std::__1::__split_buffer.324"* %5, i64 0, i32 3, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %308, i8 -86, i64 40, i1 false) #6
  %312 = bitcast %"class.Ice::CaseCluster"** %10 to i64*
  %313 = sub i64 %306, %293
  %314 = ashr exact i64 %313, 5
  %315 = icmp ult i64 %314, 288230376151711743
  br i1 %315, label %316, label %320

316:                                              ; preds = %305
  %317 = ashr exact i64 %313, 4
  %318 = icmp eq i64 %313, 0
  %319 = select i1 %318, i64 1, i64 %317
  br label %320

320:                                              ; preds = %316, %305
  %321 = phi i64 [ %319, %316 ], [ 576460752303423487, %305 ]
  call void @_ZNSt3__114__split_bufferIN3Ice11CaseClusterERNS1_12sz_allocatorIS2_NS1_18CfgAllocatorTraitsEEEEC2EmmS6_(%"struct.std::__1::__split_buffer.324"* nonnull %5, i64 %321, i64 0, %"struct.Ice::sz_allocator.317"* dereferenceable(8) %307) #8
  %322 = load %"class.Ice::CaseCluster"*, %"class.Ice::CaseCluster"** %310, align 8
  %323 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %322, i64 0, i32 0
  store i32 1, i32* %323, align 8
  %324 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %322, i64 0, i32 1
  store i64 %204, i64* %324, align 8
  %325 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %322, i64 0, i32 2
  store i64 %201, i64* %325, align 8
  %326 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %322, i64 0, i32 3
  %327 = bitcast %union.anon.313* %326 to i64*
  store i64 %220, i64* %327, align 8
  %328 = load %"class.Ice::CaseCluster"*, %"class.Ice::CaseCluster"** %310, align 8
  %329 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %328, i64 1
  store %"class.Ice::CaseCluster"* %329, %"class.Ice::CaseCluster"** %310, align 8
  %330 = load %"class.Ice::CaseCluster"*, %"class.Ice::CaseCluster"** %8, align 8
  %331 = load %"class.Ice::CaseCluster"*, %"class.Ice::CaseCluster"** %9, align 8
  %332 = icmp eq %"class.Ice::CaseCluster"* %331, %330
  br i1 %332, label %333, label %339

333:                                              ; preds = %320
  %334 = ptrtoint %"class.Ice::CaseCluster"* %329 to i64
  %335 = ptrtoint %"class.Ice::CaseCluster"* %330 to i64
  %336 = bitcast %"class.Ice::CaseCluster"** %309 to i64*
  %337 = load i64, i64* %336, align 8
  %338 = bitcast %"class.Ice::CaseCluster"** %310 to i64*
  br label %358

339:                                              ; preds = %320
  %340 = load %"class.Ice::CaseCluster"*, %"class.Ice::CaseCluster"** %309, align 8
  br label %341

341:                                              ; preds = %341, %339
  %342 = phi %"class.Ice::CaseCluster"* [ %349, %341 ], [ %340, %339 ]
  %343 = phi %"class.Ice::CaseCluster"* [ %345, %341 ], [ %331, %339 ]
  %344 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %342, i64 -1
  %345 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %343, i64 -1
  %346 = bitcast %"class.Ice::CaseCluster"* %344 to i8*
  %347 = bitcast %"class.Ice::CaseCluster"* %345 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %346, i8* align 8 %347, i64 32, i1 false) #6
  %348 = load %"class.Ice::CaseCluster"*, %"class.Ice::CaseCluster"** %309, align 8
  %349 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %348, i64 -1
  store %"class.Ice::CaseCluster"* %349, %"class.Ice::CaseCluster"** %309, align 8
  %350 = icmp eq %"class.Ice::CaseCluster"* %345, %330
  br i1 %350, label %351, label %341

351:                                              ; preds = %341
  %352 = ptrtoint %"class.Ice::CaseCluster"* %349 to i64
  %353 = load i64, i64* %89, align 8
  %354 = bitcast %"class.Ice::CaseCluster"** %309 to i64*
  %355 = load i64, i64* %88, align 8
  %356 = bitcast %"class.Ice::CaseCluster"** %310 to i64*
  %357 = load i64, i64* %356, align 8
  br label %358

358:                                              ; preds = %351, %333
  %359 = phi i64* [ %338, %333 ], [ %356, %351 ]
  %360 = phi i64 [ %334, %333 ], [ %357, %351 ]
  %361 = phi i64 [ %335, %333 ], [ %355, %351 ]
  %362 = phi i64* [ %336, %333 ], [ %354, %351 ]
  %363 = phi i64 [ %337, %333 ], [ %352, %351 ]
  %364 = phi i64 [ %335, %333 ], [ %353, %351 ]
  store i64 %363, i64* %89, align 8
  store i64 %364, i64* %362, align 8
  store i64 %360, i64* %88, align 8
  store i64 %361, i64* %359, align 8
  %365 = load i64, i64* %312, align 8
  %366 = bitcast %"class.Ice::CaseCluster"** %311 to i64*
  %367 = load i64, i64* %366, align 8
  store i64 %367, i64* %312, align 8
  store i64 %365, i64* %366, align 8
  %368 = bitcast %"struct.std::__1::__split_buffer.324"* %5 to i64*
  store i64 %364, i64* %368, align 8
  %369 = inttoptr i64 %364 to %"class.Ice::CaseCluster"*
  %370 = inttoptr i64 %361 to %"class.Ice::CaseCluster"*
  %371 = icmp eq %"class.Ice::CaseCluster"* %370, %369
  br i1 %371, label %379, label %372

372:                                              ; preds = %358
  %373 = getelementptr %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %370, i64 -1, i32 0
  %374 = ptrtoint i32* %373 to i64
  %375 = sub i64 %374, %364
  %376 = lshr i64 %375, 5
  %377 = xor i64 %376, -1
  %378 = getelementptr %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %370, i64 %377
  store %"class.Ice::CaseCluster"* %378, %"class.Ice::CaseCluster"** %310, align 8
  br label %379

379:                                              ; preds = %358, %372
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %308) #6
  br label %415

380:                                              ; preds = %224, %390
  %381 = phi %"class.Ice::CaseCluster"* [ %221, %224 ], [ %402, %390 ]
  %382 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %381, i64 0, i32 1
  %383 = load i64, i64* %382, align 8
  %384 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %381, i64 0, i32 2
  %385 = load i64, i64* %384, align 8
  %386 = icmp ult i64 %383, %385
  br i1 %386, label %387, label %390

387:                                              ; preds = %380
  %388 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %381, i64 0, i32 3, i32 0
  %389 = bitcast %"class.Ice::CfgNode"** %388 to i64*
  br label %404

390:                                              ; preds = %404, %380
  %391 = phi i64 [ %385, %380 ], [ %413, %404 ]
  %392 = sub i64 %391, %204
  %393 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %381, i64 0, i32 3, i32 0
  %394 = bitcast %"class.Ice::CfgNode"** %393 to i64*
  %395 = load i64, i64* %394, align 8
  %396 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %226, align 8
  %397 = and i64 %392, 4294967295
  %398 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %396, i64 %397
  %399 = bitcast %"class.Ice::CfgNode"** %398 to i64*
  store i64 %395, i64* %399, align 8
  %400 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %393, align 8
  %401 = getelementptr inbounds %"class.Ice::CfgNode", %"class.Ice::CfgNode"* %400, i64 0, i32 7
  store i8 1, i8* %401, align 2
  %402 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %381, i64 1
  %403 = icmp eq %"class.Ice::CaseCluster"* %402, %222
  br i1 %403, label %227, label %380

404:                                              ; preds = %387, %404
  %405 = phi i64 [ %383, %387 ], [ %412, %404 ]
  %406 = sub i64 %405, %204
  %407 = load i64, i64* %389, align 8
  %408 = load %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"*** %226, align 8
  %409 = and i64 %406, 4294967295
  %410 = getelementptr inbounds %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %408, i64 %409
  %411 = bitcast %"class.Ice::CfgNode"** %410 to i64*
  store i64 %407, i64* %411, align 8
  %412 = add nuw i64 %405, 1
  %413 = load i64, i64* %384, align 8
  %414 = icmp ult i64 %412, %413
  br i1 %414, label %404, label %390

415:                                              ; preds = %198, %297, %379, %86
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3Ice11CaseClusterENS1_12sz_allocatorIS2_NS1_18CfgAllocatorTraitsEEEE7reserveEm(%"class.std::__1::vector.311"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::__split_buffer.324", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector.311", %"class.std::__1::vector.311"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast %"class.Ice::CaseCluster"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.311"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 5
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %12, label %73

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.311", %"class.std::__1::vector.311"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %14 = bitcast %"struct.std::__1::__split_buffer.324"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %14) #6
  %15 = getelementptr inbounds %"struct.std::__1::__split_buffer.324", %"struct.std::__1::__split_buffer.324"* %3, i64 0, i32 1
  %16 = getelementptr inbounds %"struct.std::__1::__split_buffer.324", %"struct.std::__1::__split_buffer.324"* %3, i64 0, i32 2
  %17 = getelementptr inbounds %"struct.std::__1::__split_buffer.324", %"struct.std::__1::__split_buffer.324"* %3, i64 0, i32 3, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::vector.311", %"class.std::__1::vector.311"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.Ice::CaseCluster"** %18 to i64*
  %20 = bitcast %"struct.std::__1::__split_buffer.324"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 40, i1 false)
  %21 = load i64, i64* %19, align 8
  %22 = sub i64 %21, %8
  %23 = ashr exact i64 %22, 5
  call void @_ZNSt3__114__split_bufferIN3Ice11CaseClusterERNS1_12sz_allocatorIS2_NS1_18CfgAllocatorTraitsEEEEC2EmmS6_(%"struct.std::__1::__split_buffer.324"* nonnull %3, i64 %1, i64 %23, %"struct.Ice::sz_allocator.317"* dereferenceable(8) %13) #7
  %24 = getelementptr inbounds %"class.std::__1::vector.311", %"class.std::__1::vector.311"* %0, i64 0, i32 0, i32 0
  %25 = load %"class.Ice::CaseCluster"*, %"class.Ice::CaseCluster"** %24, align 8
  %26 = load %"class.Ice::CaseCluster"*, %"class.Ice::CaseCluster"** %18, align 8
  %27 = icmp eq %"class.Ice::CaseCluster"* %26, %25
  br i1 %27, label %28, label %33

28:                                               ; preds = %12
  %29 = ptrtoint %"class.Ice::CaseCluster"* %26 to i64
  %30 = ptrtoint %"class.Ice::CaseCluster"* %25 to i64
  %31 = bitcast %"class.Ice::CaseCluster"** %15 to i64*
  %32 = load i64, i64* %31, align 8
  br label %50

33:                                               ; preds = %12
  %34 = load %"class.Ice::CaseCluster"*, %"class.Ice::CaseCluster"** %15, align 8
  br label %35

35:                                               ; preds = %35, %33
  %36 = phi %"class.Ice::CaseCluster"* [ %43, %35 ], [ %34, %33 ]
  %37 = phi %"class.Ice::CaseCluster"* [ %39, %35 ], [ %26, %33 ]
  %38 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %36, i64 -1
  %39 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %37, i64 -1
  %40 = bitcast %"class.Ice::CaseCluster"* %38 to i8*
  %41 = bitcast %"class.Ice::CaseCluster"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 32, i1 false) #6
  %42 = load %"class.Ice::CaseCluster"*, %"class.Ice::CaseCluster"** %15, align 8
  %43 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %42, i64 -1
  store %"class.Ice::CaseCluster"* %43, %"class.Ice::CaseCluster"** %15, align 8
  %44 = icmp eq %"class.Ice::CaseCluster"* %39, %25
  br i1 %44, label %45, label %35

45:                                               ; preds = %35
  %46 = ptrtoint %"class.Ice::CaseCluster"* %43 to i64
  %47 = load i64, i64* %7, align 8
  %48 = bitcast %"class.Ice::CaseCluster"** %15 to i64*
  %49 = load i64, i64* %19, align 8
  br label %50

50:                                               ; preds = %28, %45
  %51 = phi i64 [ %29, %28 ], [ %49, %45 ]
  %52 = phi i64* [ %31, %28 ], [ %48, %45 ]
  %53 = phi i64 [ %32, %28 ], [ %46, %45 ]
  %54 = phi i64 [ %30, %28 ], [ %47, %45 ]
  store i64 %53, i64* %7, align 8
  store i64 %54, i64* %52, align 8
  %55 = bitcast %"class.Ice::CaseCluster"** %16 to i64*
  %56 = bitcast %"class.Ice::CaseCluster"** %17 to i64*
  %57 = bitcast %"class.Ice::CaseCluster"** %16 to <2 x i64>*
  %58 = load <2 x i64>, <2 x i64>* %57, align 8
  store i64 %51, i64* %55, align 8
  %59 = load i64, i64* %5, align 8
  %60 = bitcast %"class.Ice::CaseCluster"** %18 to <2 x i64>*
  store <2 x i64> %58, <2 x i64>* %60, align 8
  store i64 %59, i64* %56, align 8
  %61 = bitcast %"struct.std::__1::__split_buffer.324"* %3 to i64*
  store i64 %54, i64* %61, align 8
  %62 = inttoptr i64 %54 to %"class.Ice::CaseCluster"*
  %63 = inttoptr i64 %51 to %"class.Ice::CaseCluster"*
  %64 = icmp eq %"class.Ice::CaseCluster"* %63, %62
  br i1 %64, label %72, label %65

65:                                               ; preds = %50
  %66 = getelementptr %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %63, i64 -1, i32 0
  %67 = ptrtoint i32* %66 to i64
  %68 = sub i64 %67, %54
  %69 = lshr i64 %68, 5
  %70 = xor i64 %69, -1
  %71 = getelementptr %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %63, i64 %70
  store %"class.Ice::CaseCluster"* %71, %"class.Ice::CaseCluster"** %16, align 8
  br label %72

72:                                               ; preds = %50, %65
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %14) #6
  br label %73

73:                                               ; preds = %72, %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN3Ice11CaseCluster9tryAppendERKS0_(%"class.Ice::CaseCluster"* nocapture, %"class.Ice::CaseCluster"* nocapture readonly dereferenceable(32)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %0, i64 0, i32 3, i32 0
  %4 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %3, align 8
  %5 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %1, i64 0, i32 3, i32 0
  %6 = load %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"** %5, align 8
  %7 = icmp eq %"class.Ice::CfgNode"* %4, %6
  br i1 %7, label %8, label %18

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %0, i64 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, 1
  %12 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %1, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %11, %13
  br i1 %14, label %15, label %18

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %1, i64 0, i32 2
  %17 = load i64, i64* %16, align 8
  store i64 %17, i64* %9, align 8
  br label %18

18:                                               ; preds = %2, %15, %8
  %19 = phi i1 [ true, %15 ], [ false, %8 ], [ false, %2 ]
  ret i1 %19
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: optsize
declare void @_ZN3Ice13InstJumpTableC1EPNS_3CfgEjPNS_7CfgNodeE(%"class.Ice::InstJumpTable"*, %"class.Ice::Cfg"*, i32, %"class.Ice::CfgNode"*) unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::pair.321", align 8
  %5 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 4
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, %1
  store i64 %7, i64* %5, align 8
  %8 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = ptrtoint i8* %9 to i64
  %11 = add i64 %2, -1
  %12 = add i64 %11, %10
  %13 = sub i64 0, %2
  %14 = and i64 %12, %13
  %15 = sub i64 %14, %10
  %16 = add i64 %15, %1
  %17 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 1
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %19, %10
  %21 = icmp ugt i64 %16, %20
  br i1 %21, label %25, label %22

22:                                               ; preds = %3
  %23 = getelementptr inbounds i8, i8* %9, i64 %15
  %24 = getelementptr inbounds i8, i8* %23, i64 %1
  store i8* %24, i8** %8, align 8
  br label %45

25:                                               ; preds = %3
  %26 = add i64 %11, %1
  %27 = icmp ugt i64 %26, 1048576
  br i1 %27, label %28, label %38

28:                                               ; preds = %25
  %29 = tail call noalias i8* @malloc(i64 %26) #8
  %30 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 3, i32 0, i32 0
  %31 = bitcast %"struct.std::__1::pair.321"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #6
  %32 = getelementptr inbounds %"struct.std::__1::pair.321", %"struct.std::__1::pair.321"* %4, i64 0, i32 0
  store i8* %29, i8** %32, align 8
  %33 = getelementptr inbounds %"struct.std::__1::pair.321", %"struct.std::__1::pair.321"* %4, i64 0, i32 1
  store i64 %26, i64* %33, align 8
  call void @_ZN4llvm23SmallVectorTemplateBaseINSt3__14pairIPvmEELb1EE9push_backERKS4_(%"class.llvm::SmallVectorTemplateBase.2"* %30, %"struct.std::__1::pair.321"* nonnull dereferenceable(16) %4) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #6
  %34 = ptrtoint i8* %29 to i64
  %35 = add i64 %11, %34
  %36 = and i64 %35, %13
  %37 = inttoptr i64 %36 to i8*
  br label %45

38:                                               ; preds = %25
  tail call void @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE12StartNewSlabEv(%"class.llvm::BumpPtrAllocatorImpl"* %0) #7
  %39 = bitcast %"class.llvm::BumpPtrAllocatorImpl"* %0 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, %11
  %42 = and i64 %41, %13
  %43 = inttoptr i64 %42 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 %1
  store i8* %44, i8** %8, align 8
  br label %45

45:                                               ; preds = %28, %38, %22
  %46 = phi i8* [ %23, %22 ], [ %37, %28 ], [ %43, %38 ]
  ret i8* %46
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm23SmallVectorTemplateBaseINSt3__14pairIPvmEELb1EE9push_backERKS4_(%"class.llvm::SmallVectorTemplateBase.2"*, %"struct.std::__1::pair.321"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.2", %"class.llvm::SmallVectorTemplateBase.2"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.2", %"class.llvm::SmallVectorTemplateBase.2"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ult i8* %4, %6
  br i1 %7, label %12, label %8, !prof !2

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.2", %"class.llvm::SmallVectorTemplateBase.2"* %0, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase.2", %"class.llvm::SmallVectorTemplateBase.2"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  tail call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* %9, i8* %10, i64 0, i64 16) #8
  %11 = load i8*, i8** %3, align 8
  br label %12

12:                                               ; preds = %2, %8
  %13 = phi i8* [ %4, %2 ], [ %11, %8 ]
  %14 = bitcast i8** %3 to %"struct.std::__1::pair.321"**
  %15 = bitcast %"struct.std::__1::pair.321"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* align 8 %15, i64 16, i1 false)
  %16 = load %"struct.std::__1::pair.321"*, %"struct.std::__1::pair.321"** %14, align 8
  %17 = getelementptr inbounds %"struct.std::__1::pair.321", %"struct.std::__1::pair.321"* %16, i64 1
  store %"struct.std::__1::pair.321"* %17, %"struct.std::__1::pair.321"** %14, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE12StartNewSlabEv(%"class.llvm::BumpPtrAllocatorImpl"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i8*, align 8
  %3 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.llvm::SmallVector"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = lshr i64 %9, 10
  %11 = and i64 %10, 33554431
  %12 = icmp ult i64 %11, 30
  %13 = select i1 %12, i64 %11, i64 30
  %14 = shl i64 1048576, %13
  %15 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #6
  %16 = tail call noalias i8* @malloc(i64 %14) #8
  store i8* %16, i8** %2, align 8
  %17 = getelementptr inbounds %"class.llvm::SmallVector", %"class.llvm::SmallVector"* %3, i64 0, i32 0, i32 0
  call void @_ZN4llvm23SmallVectorTemplateBaseIPvLb1EE9push_backERKS1_(%"class.llvm::SmallVectorTemplateBase"* %17, i8** nonnull dereferenceable(8) %2) #7
  %18 = bitcast i8** %2 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.llvm::BumpPtrAllocatorImpl"* %0 to i64*
  store i64 %19, i64* %20, align 8
  %21 = inttoptr i64 %19 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 %14
  %23 = getelementptr inbounds %"class.llvm::BumpPtrAllocatorImpl", %"class.llvm::BumpPtrAllocatorImpl"* %0, i64 0, i32 1
  store i8* %22, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #6
  ret void
}

; Function Attrs: nofree nounwind optsize
declare noalias i8* @malloc(i64) local_unnamed_addr #4

; Function Attrs: optsize
declare void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"*, i8*, i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm23SmallVectorTemplateBaseIPvLb1EE9push_backERKS1_(%"class.llvm::SmallVectorTemplateBase"*, i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ult i8* %4, %6
  br i1 %7, label %8, label %10, !prof !2

8:                                                ; preds = %2
  %9 = bitcast i8* %4 to i64*
  br label %15

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  tail call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* %11, i8* %12, i64 0, i64 8) #8
  %13 = bitcast i8** %3 to i64**
  %14 = load i64*, i64** %13, align 8
  br label %15

15:                                               ; preds = %8, %10
  %16 = phi i64* [ %9, %8 ], [ %14, %10 ]
  %17 = bitcast i8** %3 to i8***
  %18 = bitcast i8** %1 to i64*
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %16, align 1
  %20 = load i8**, i8*** %17, align 8
  %21 = getelementptr inbounds i8*, i8** %20, i64 1
  store i8** %21, i8*** %17, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn optsize
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: optsize
declare %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIN3Ice11CaseClusterERNS1_12sz_allocatorIS2_NS1_18CfgAllocatorTraitsEEEEC2EmmS6_(%"struct.std::__1::__split_buffer.324"*, i64, i64, %"struct.Ice::sz_allocator.317"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.324", %"struct.std::__1::__split_buffer.324"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.Ice::CaseCluster"* null, %"class.Ice::CaseCluster"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer.324", %"struct.std::__1::__split_buffer.324"* %0, i64 0, i32 3, i32 1, i32 0
  store %"struct.Ice::sz_allocator.317"* %3, %"struct.Ice::sz_allocator.317"** %6, align 8
  %7 = icmp eq i64 %1, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %4
  %9 = tail call %"class.llvm::BumpPtrAllocatorImpl"* @_ZN3Ice18CfgAllocatorTraits7currentEv() #8
  %10 = shl i64 %1, 5
  %11 = tail call noalias i8* @_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm1048576ELm1048576EE8AllocateEmm(%"class.llvm::BumpPtrAllocatorImpl"* %9, i64 %10, i64 8) #8
  %12 = bitcast i8* %11 to %"class.Ice::CaseCluster"*
  br label %13

13:                                               ; preds = %4, %8
  %14 = phi %"class.Ice::CaseCluster"* [ %12, %8 ], [ null, %4 ]
  %15 = getelementptr inbounds %"struct.std::__1::__split_buffer.324", %"struct.std::__1::__split_buffer.324"* %0, i64 0, i32 0
  store %"class.Ice::CaseCluster"* %14, %"class.Ice::CaseCluster"** %15, align 8
  %16 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %14, i64 %2
  %17 = getelementptr inbounds %"struct.std::__1::__split_buffer.324", %"struct.std::__1::__split_buffer.324"* %0, i64 0, i32 2
  store %"class.Ice::CaseCluster"* %16, %"class.Ice::CaseCluster"** %17, align 8
  %18 = getelementptr inbounds %"struct.std::__1::__split_buffer.324", %"struct.std::__1::__split_buffer.324"* %0, i64 0, i32 1
  store %"class.Ice::CaseCluster"* %16, %"class.Ice::CaseCluster"** %18, align 8
  %19 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %14, i64 %1
  store %"class.Ice::CaseCluster"* %19, %"class.Ice::CaseCluster"** %5, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc void @"_ZNSt3__16__sortIRZN3Ice11CaseCluster16clusterizeSwitchEPNS1_3CfgEPKNS1_10InstSwitchEE3$_0PS2_EEvT0_SB_T_"(%"class.Ice::CaseCluster"*, %"class.Ice::CaseCluster"*) unnamed_addr #0 {
  %3 = alloca %"class.Ice::CaseCluster", align 8
  %4 = alloca %"class.Ice::CaseCluster", align 8
  %5 = alloca %"class.Ice::CaseCluster", align 8
  %6 = alloca %"class.Ice::CaseCluster", align 8
  %7 = alloca %"class.Ice::CaseCluster", align 8
  %8 = alloca { i32, i64 }, align 8
  %9 = alloca %"class.Ice::CaseCluster", align 8
  %10 = bitcast %"class.Ice::CaseCluster"* %5 to i8*
  %11 = bitcast %"class.Ice::CaseCluster"* %3 to i8*
  %12 = bitcast %"class.Ice::CaseCluster"* %4 to i8*
  %13 = bitcast %"class.Ice::CaseCluster"* %6 to i8*
  %14 = bitcast %"class.Ice::CaseCluster"* %7 to i8*
  br label %15

15:                                               ; preds = %226, %2
  %16 = phi %"class.Ice::CaseCluster"* [ %1, %2 ], [ %206, %226 ]
  %17 = phi %"class.Ice::CaseCluster"* [ %0, %2 ], [ %26, %226 ]
  %18 = ptrtoint %"class.Ice::CaseCluster"* %16 to i64
  %19 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %16, i64 -1
  %20 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %16, i64 -1, i32 1
  %21 = bitcast %"class.Ice::CaseCluster"* %19 to i8*
  %22 = ptrtoint %"class.Ice::CaseCluster"* %16 to i64
  br label %23

23:                                               ; preds = %235, %15
  %24 = phi %"class.Ice::CaseCluster"* [ %17, %15 ], [ %236, %235 ]
  br label %25

25:                                               ; preds = %157, %23
  %26 = phi %"class.Ice::CaseCluster"* [ %24, %23 ], [ %146, %157 ]
  %27 = ptrtoint %"class.Ice::CaseCluster"* %26 to i64
  %28 = sub i64 %18, %27
  %29 = ashr exact i64 %28, 5
  switch i64 %29, label %56 [
    i64 0, label %239
    i64 1, label %239
    i64 2, label %30
    i64 3, label %41
    i64 4, label %45
    i64 5, label %50
  ]

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %16, i64 -1, i32 2
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %26, i64 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = icmp ult i64 %32, %34
  br i1 %35, label %36, label %239

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %16, i64 -1
  %38 = bitcast %"class.Ice::CaseCluster"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %38)
  %39 = bitcast %"class.Ice::CaseCluster"* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* align 8 %39, i64 32, i1 false) #6
  %40 = bitcast %"class.Ice::CaseCluster"* %37 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 32, i1 false) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* nonnull align 8 %38, i64 32, i1 false) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %38)
  br label %239

41:                                               ; preds = %25
  %42 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %26, i64 1
  %43 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %16, i64 -1
  %44 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN3Ice11CaseCluster16clusterizeSwitchEPNS1_3CfgEPKNS1_10InstSwitchEE3$_0PS2_EEjT0_SB_SB_T_"(%"class.Ice::CaseCluster"* %26, %"class.Ice::CaseCluster"* %42, %"class.Ice::CaseCluster"* %43) #7
  br label %239

45:                                               ; preds = %25
  %46 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %26, i64 1
  %47 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %26, i64 2
  %48 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %16, i64 -1
  %49 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN3Ice11CaseCluster16clusterizeSwitchEPNS1_3CfgEPKNS1_10InstSwitchEE3$_0PS2_EEjT0_SB_SB_SB_T_"(%"class.Ice::CaseCluster"* %26, %"class.Ice::CaseCluster"* %46, %"class.Ice::CaseCluster"* %47, %"class.Ice::CaseCluster"* %48) #7
  br label %239

50:                                               ; preds = %25
  %51 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %26, i64 1
  %52 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %26, i64 2
  %53 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %26, i64 3
  %54 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %16, i64 -1
  %55 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN3Ice11CaseCluster16clusterizeSwitchEPNS1_3CfgEPKNS1_10InstSwitchEE3$_0PS2_EEjT0_SB_SB_SB_SB_T_"(%"class.Ice::CaseCluster"* %26, %"class.Ice::CaseCluster"* %51, %"class.Ice::CaseCluster"* %52, %"class.Ice::CaseCluster"* %53, %"class.Ice::CaseCluster"* %54) #7
  br label %239

56:                                               ; preds = %25
  %57 = icmp slt i64 %28, 992
  br i1 %57, label %58, label %99

58:                                               ; preds = %56
  %59 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %26, i64 2
  %60 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %26, i64 1
  %61 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN3Ice11CaseCluster16clusterizeSwitchEPNS1_3CfgEPKNS1_10InstSwitchEE3$_0PS2_EEjT0_SB_SB_T_"(%"class.Ice::CaseCluster"* %26, %"class.Ice::CaseCluster"* %60, %"class.Ice::CaseCluster"* %59) #8
  %62 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %26, i64 3
  %63 = icmp eq %"class.Ice::CaseCluster"* %62, %16
  br i1 %63, label %239, label %64

64:                                               ; preds = %58
  %65 = bitcast { i32, i64 }* %8 to i8*
  br label %66

66:                                               ; preds = %96, %64
  %67 = phi %"class.Ice::CaseCluster"* [ %62, %64 ], [ %97, %96 ]
  %68 = phi %"class.Ice::CaseCluster"* [ %59, %64 ], [ %67, %96 ]
  %69 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %67, i64 0, i32 2
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %68, i64 0, i32 1
  %72 = load i64, i64* %71, align 8
  %73 = icmp ult i64 %70, %72
  br i1 %73, label %74, label %96

74:                                               ; preds = %66
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %65)
  %75 = bitcast %"class.Ice::CaseCluster"* %67 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %65, i8* align 8 %75, i64 16, i1 false) #6
  %76 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %67, i64 0, i32 3, i32 0
  %77 = bitcast %"class.Ice::CfgNode"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  br label %79

79:                                               ; preds = %85, %74
  %80 = phi %"class.Ice::CaseCluster"* [ %67, %74 ], [ %81, %85 ]
  %81 = phi %"class.Ice::CaseCluster"* [ %68, %74 ], [ %86, %85 ]
  %82 = bitcast %"class.Ice::CaseCluster"* %80 to i8*
  %83 = bitcast %"class.Ice::CaseCluster"* %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* align 8 %83, i64 32, i1 false) #6
  %84 = icmp eq %"class.Ice::CaseCluster"* %81, %26
  br i1 %84, label %90, label %85

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %81, i64 -1
  %87 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %81, i64 -1, i32 1
  %88 = load i64, i64* %87, align 8
  %89 = icmp ult i64 %70, %88
  br i1 %89, label %79, label %90

90:                                               ; preds = %79, %85
  %91 = phi %"class.Ice::CaseCluster"* [ %81, %85 ], [ %26, %79 ]
  %92 = bitcast %"class.Ice::CaseCluster"* %91 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* nonnull align 8 %65, i64 16, i1 false) #6
  %93 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %91, i64 0, i32 2
  store i64 %70, i64* %93, align 8
  %94 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %91, i64 0, i32 3, i32 0
  %95 = bitcast %"class.Ice::CfgNode"** %94 to i64*
  store i64 %78, i64* %95, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %65)
  br label %96

96:                                               ; preds = %90, %66
  %97 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %67, i64 1
  %98 = icmp eq %"class.Ice::CaseCluster"* %97, %16
  br i1 %98, label %239, label %66

99:                                               ; preds = %56
  %100 = icmp sgt i64 %28, 31968
  %101 = sdiv i64 %29, 2
  %102 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %26, i64 %101
  br i1 %100, label %103, label %108

103:                                              ; preds = %99
  %104 = sdiv i64 %29, 4
  %105 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %26, i64 %104
  %106 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %102, i64 %104
  %107 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN3Ice11CaseCluster16clusterizeSwitchEPNS1_3CfgEPKNS1_10InstSwitchEE3$_0PS2_EEjT0_SB_SB_SB_SB_T_"(%"class.Ice::CaseCluster"* %26, %"class.Ice::CaseCluster"* %105, %"class.Ice::CaseCluster"* %102, %"class.Ice::CaseCluster"* %106, %"class.Ice::CaseCluster"* %19) #7
  br label %110

108:                                              ; preds = %99
  %109 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN3Ice11CaseCluster16clusterizeSwitchEPNS1_3CfgEPKNS1_10InstSwitchEE3$_0PS2_EEjT0_SB_SB_T_"(%"class.Ice::CaseCluster"* %26, %"class.Ice::CaseCluster"* %102, %"class.Ice::CaseCluster"* %19) #7
  br label %110

110:                                              ; preds = %108, %103
  %111 = phi i32 [ %107, %103 ], [ %109, %108 ]
  %112 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %26, i64 0, i32 2
  %113 = load i64, i64* %112, align 8
  %114 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %26, i64 %101, i32 1
  %115 = load i64, i64* %114, align 8
  %116 = icmp ult i64 %113, %115
  br i1 %116, label %170, label %117

117:                                              ; preds = %110, %162
  %118 = phi %"class.Ice::CaseCluster"* [ %119, %162 ], [ %19, %110 ]
  %119 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %118, i64 -1
  %120 = icmp eq %"class.Ice::CaseCluster"* %26, %119
  br i1 %120, label %121, label %162

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %26, i64 1
  %123 = load i64, i64* %20, align 8
  %124 = icmp ult i64 %113, %123
  br i1 %124, label %138, label %125

125:                                              ; preds = %121
  %126 = icmp eq %"class.Ice::CaseCluster"* %122, %19
  br i1 %126, label %239, label %127

127:                                              ; preds = %125, %135
  %128 = phi %"class.Ice::CaseCluster"* [ %136, %135 ], [ %122, %125 ]
  %129 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %128, i64 0, i32 1
  %130 = load i64, i64* %129, align 8
  %131 = icmp ult i64 %113, %130
  br i1 %131, label %132, label %135

132:                                              ; preds = %127
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11)
  %133 = bitcast %"class.Ice::CaseCluster"* %128 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 %133, i64 32, i1 false) #6
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %133, i8* align 8 %21, i64 32, i1 false) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* nonnull align 8 %11, i64 32, i1 false) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11)
  %134 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %128, i64 1
  br label %138

135:                                              ; preds = %127
  %136 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %128, i64 1
  %137 = icmp eq %"class.Ice::CaseCluster"* %136, %19
  br i1 %137, label %239, label %127

138:                                              ; preds = %132, %121
  %139 = phi %"class.Ice::CaseCluster"* [ %122, %121 ], [ %134, %132 ]
  %140 = icmp eq %"class.Ice::CaseCluster"* %139, %19
  br i1 %140, label %239, label %141

141:                                              ; preds = %138, %159
  %142 = phi %"class.Ice::CaseCluster"* [ %150, %159 ], [ %139, %138 ]
  %143 = phi %"class.Ice::CaseCluster"* [ %153, %159 ], [ %19, %138 ]
  %144 = load i64, i64* %112, align 8
  br label %145

145:                                              ; preds = %145, %141
  %146 = phi %"class.Ice::CaseCluster"* [ %142, %141 ], [ %150, %145 ]
  %147 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %146, i64 0, i32 1
  %148 = load i64, i64* %147, align 8
  %149 = icmp ult i64 %144, %148
  %150 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %146, i64 1
  br i1 %149, label %151, label %145

151:                                              ; preds = %145, %151
  %152 = phi %"class.Ice::CaseCluster"* [ %153, %151 ], [ %143, %145 ]
  %153 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %152, i64 -1
  %154 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %152, i64 -1, i32 1
  %155 = load i64, i64* %154, align 8
  %156 = icmp ult i64 %144, %155
  br i1 %156, label %151, label %157

157:                                              ; preds = %151
  %158 = icmp ult %"class.Ice::CaseCluster"* %146, %153
  br i1 %158, label %159, label %25

159:                                              ; preds = %157
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12)
  %160 = bitcast %"class.Ice::CaseCluster"* %146 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 %160, i64 32, i1 false) #6
  %161 = bitcast %"class.Ice::CaseCluster"* %153 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %160, i8* align 8 %161, i64 32, i1 false) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %161, i8* nonnull align 8 %12, i64 32, i1 false) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12)
  br label %141

162:                                              ; preds = %117
  %163 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %118, i64 -1, i32 2
  %164 = load i64, i64* %163, align 8
  %165 = icmp ult i64 %164, %115
  br i1 %165, label %166, label %117

166:                                              ; preds = %162
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10)
  %167 = bitcast %"class.Ice::CaseCluster"* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 %167, i64 32, i1 false) #6
  %168 = bitcast %"class.Ice::CaseCluster"* %119 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %167, i8* align 8 %168, i64 32, i1 false) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %168, i8* nonnull align 8 %10, i64 32, i1 false) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10)
  %169 = add i32 %111, 1
  br label %170

170:                                              ; preds = %110, %166
  %171 = phi i32 [ %169, %166 ], [ %111, %110 ]
  %172 = phi %"class.Ice::CaseCluster"* [ %119, %166 ], [ %19, %110 ]
  %173 = ptrtoint %"class.Ice::CaseCluster"* %26 to i64
  %174 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %26, i64 1
  %175 = icmp ult %"class.Ice::CaseCluster"* %174, %172
  br i1 %175, label %176, label %203

176:                                              ; preds = %170, %197
  %177 = phi %"class.Ice::CaseCluster"* [ %202, %197 ], [ %102, %170 ]
  %178 = phi i32 [ %200, %197 ], [ %171, %170 ]
  %179 = phi %"class.Ice::CaseCluster"* [ %188, %197 ], [ %174, %170 ]
  %180 = phi %"class.Ice::CaseCluster"* [ %191, %197 ], [ %172, %170 ]
  %181 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %177, i64 0, i32 1
  %182 = load i64, i64* %181, align 8
  br label %183

183:                                              ; preds = %183, %176
  %184 = phi %"class.Ice::CaseCluster"* [ %179, %176 ], [ %188, %183 ]
  %185 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %184, i64 0, i32 2
  %186 = load i64, i64* %185, align 8
  %187 = icmp ult i64 %186, %182
  %188 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %184, i64 1
  br i1 %187, label %183, label %189

189:                                              ; preds = %183, %189
  %190 = phi %"class.Ice::CaseCluster"* [ %191, %189 ], [ %180, %183 ]
  %191 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %190, i64 -1
  %192 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %190, i64 -1, i32 2
  %193 = load i64, i64* %192, align 8
  %194 = icmp ult i64 %193, %182
  br i1 %194, label %195, label %189

195:                                              ; preds = %189
  %196 = icmp ugt %"class.Ice::CaseCluster"* %184, %191
  br i1 %196, label %203, label %197

197:                                              ; preds = %195
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13)
  %198 = bitcast %"class.Ice::CaseCluster"* %184 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 %198, i64 32, i1 false) #6
  %199 = bitcast %"class.Ice::CaseCluster"* %191 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %198, i8* align 8 %199, i64 32, i1 false) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %199, i8* nonnull align 8 %13, i64 32, i1 false) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13)
  %200 = add i32 %178, 1
  %201 = icmp eq %"class.Ice::CaseCluster"* %177, %184
  %202 = select i1 %201, %"class.Ice::CaseCluster"* %191, %"class.Ice::CaseCluster"* %177
  br label %176

203:                                              ; preds = %195, %170
  %204 = phi %"class.Ice::CaseCluster"* [ %102, %170 ], [ %177, %195 ]
  %205 = phi i32 [ %171, %170 ], [ %178, %195 ]
  %206 = phi %"class.Ice::CaseCluster"* [ %174, %170 ], [ %184, %195 ]
  %207 = icmp eq %"class.Ice::CaseCluster"* %206, %204
  br i1 %207, label %218, label %208

208:                                              ; preds = %203
  %209 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %204, i64 0, i32 2
  %210 = load i64, i64* %209, align 8
  %211 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %206, i64 0, i32 1
  %212 = load i64, i64* %211, align 8
  %213 = icmp ult i64 %210, %212
  br i1 %213, label %214, label %218

214:                                              ; preds = %208
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14)
  %215 = bitcast %"class.Ice::CaseCluster"* %206 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 8 %215, i64 32, i1 false) #6
  %216 = bitcast %"class.Ice::CaseCluster"* %204 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %215, i8* align 8 %216, i64 32, i1 false) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %216, i8* nonnull align 8 %14, i64 32, i1 false) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14)
  %217 = add i32 %205, 1
  br label %218

218:                                              ; preds = %203, %214, %208
  %219 = phi i32 [ %217, %214 ], [ %205, %208 ], [ %205, %203 ]
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %228

221:                                              ; preds = %218
  %222 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN3Ice11CaseCluster16clusterizeSwitchEPNS1_3CfgEPKNS1_10InstSwitchEE3$_0PS2_EEbT0_SB_T_"(%"class.Ice::CaseCluster"* %26, %"class.Ice::CaseCluster"* %206) #7
  %223 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %206, i64 1
  %224 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN3Ice11CaseCluster16clusterizeSwitchEPNS1_3CfgEPKNS1_10InstSwitchEE3$_0PS2_EEbT0_SB_T_"(%"class.Ice::CaseCluster"* %223, %"class.Ice::CaseCluster"* %16) #7
  br i1 %224, label %225, label %227

225:                                              ; preds = %221
  br i1 %222, label %239, label %226

226:                                              ; preds = %225, %237
  br label %15

227:                                              ; preds = %221
  br i1 %222, label %235, label %228

228:                                              ; preds = %227, %218
  %229 = ptrtoint %"class.Ice::CaseCluster"* %206 to i64
  %230 = sub i64 %229, %173
  %231 = sub i64 %22, %229
  %232 = icmp slt i64 %230, %231
  br i1 %232, label %233, label %237

233:                                              ; preds = %228
  tail call fastcc void @"_ZNSt3__16__sortIRZN3Ice11CaseCluster16clusterizeSwitchEPNS1_3CfgEPKNS1_10InstSwitchEE3$_0PS2_EEvT0_SB_T_"(%"class.Ice::CaseCluster"* %26, %"class.Ice::CaseCluster"* %206) #7
  %234 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %206, i64 1
  br label %235

235:                                              ; preds = %233, %227
  %236 = phi %"class.Ice::CaseCluster"* [ %223, %227 ], [ %234, %233 ]
  br label %23

237:                                              ; preds = %228
  %238 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %206, i64 1
  tail call fastcc void @"_ZNSt3__16__sortIRZN3Ice11CaseCluster16clusterizeSwitchEPNS1_3CfgEPKNS1_10InstSwitchEE3$_0PS2_EEvT0_SB_T_"(%"class.Ice::CaseCluster"* %238, %"class.Ice::CaseCluster"* %16) #7
  br label %226

239:                                              ; preds = %225, %138, %25, %25, %125, %135, %96, %58, %30, %36, %41, %45, %50
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort3IRZN3Ice11CaseCluster16clusterizeSwitchEPNS1_3CfgEPKNS1_10InstSwitchEE3$_0PS2_EEjT0_SB_SB_T_"(%"class.Ice::CaseCluster"* nocapture, %"class.Ice::CaseCluster"* nocapture, %"class.Ice::CaseCluster"* nocapture) unnamed_addr #0 {
  %4 = alloca %"class.Ice::CaseCluster", align 8
  %5 = alloca %"class.Ice::CaseCluster", align 8
  %6 = alloca %"class.Ice::CaseCluster", align 8
  %7 = alloca %"class.Ice::CaseCluster", align 8
  %8 = alloca %"class.Ice::CaseCluster", align 8
  %9 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %1, i64 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp ult i64 %10, %12
  %14 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %2, i64 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %1, i64 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %15, %17
  br i1 %13, label %30, label %19

19:                                               ; preds = %3
  br i1 %18, label %20, label %45

20:                                               ; preds = %19
  %21 = bitcast %"class.Ice::CaseCluster"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21)
  %22 = bitcast %"class.Ice::CaseCluster"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %22, i64 32, i1 false) #6
  %23 = bitcast %"class.Ice::CaseCluster"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 32, i1 false) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* nonnull align 8 %21, i64 32, i1 false) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21)
  %24 = load i64, i64* %9, align 8
  %25 = load i64, i64* %11, align 8
  %26 = icmp ult i64 %24, %25
  br i1 %26, label %27, label %45

27:                                               ; preds = %20
  %28 = bitcast %"class.Ice::CaseCluster"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28)
  %29 = bitcast %"class.Ice::CaseCluster"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* align 8 %29, i64 32, i1 false) #6
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %22, i64 32, i1 false) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* nonnull align 8 %28, i64 32, i1 false) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28)
  br label %45

30:                                               ; preds = %3
  br i1 %18, label %31, label %35

31:                                               ; preds = %30
  %32 = bitcast %"class.Ice::CaseCluster"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %32)
  %33 = bitcast %"class.Ice::CaseCluster"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* align 8 %33, i64 32, i1 false) #6
  %34 = bitcast %"class.Ice::CaseCluster"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 32, i1 false) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* nonnull align 8 %32, i64 32, i1 false) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %32)
  br label %45

35:                                               ; preds = %30
  %36 = bitcast %"class.Ice::CaseCluster"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36)
  %37 = bitcast %"class.Ice::CaseCluster"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %36, i8* align 8 %37, i64 32, i1 false) #6
  %38 = bitcast %"class.Ice::CaseCluster"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 32, i1 false) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* nonnull align 8 %36, i64 32, i1 false) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36)
  %39 = load i64, i64* %14, align 8
  %40 = load i64, i64* %16, align 8
  %41 = icmp ult i64 %39, %40
  br i1 %41, label %42, label %45

42:                                               ; preds = %35
  %43 = bitcast %"class.Ice::CaseCluster"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %43)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %43, i8* align 8 %38, i64 32, i1 false) #6
  %44 = bitcast %"class.Ice::CaseCluster"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %44, i64 32, i1 false) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* nonnull align 8 %43, i64 32, i1 false) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %43)
  br label %45

45:                                               ; preds = %35, %42, %20, %27, %19, %31
  %46 = phi i32 [ 1, %31 ], [ 0, %19 ], [ 2, %27 ], [ 1, %20 ], [ 2, %42 ], [ 1, %35 ]
  ret i32 %46
}

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort4IRZN3Ice11CaseCluster16clusterizeSwitchEPNS1_3CfgEPKNS1_10InstSwitchEE3$_0PS2_EEjT0_SB_SB_SB_T_"(%"class.Ice::CaseCluster"* nocapture, %"class.Ice::CaseCluster"* nocapture, %"class.Ice::CaseCluster"* nocapture, %"class.Ice::CaseCluster"* nocapture) unnamed_addr #0 {
  %5 = alloca %"class.Ice::CaseCluster", align 8
  %6 = alloca %"class.Ice::CaseCluster", align 8
  %7 = alloca %"class.Ice::CaseCluster", align 8
  %8 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN3Ice11CaseCluster16clusterizeSwitchEPNS1_3CfgEPKNS1_10InstSwitchEE3$_0PS2_EEjT0_SB_SB_T_"(%"class.Ice::CaseCluster"* %0, %"class.Ice::CaseCluster"* %1, %"class.Ice::CaseCluster"* %2) #7
  %9 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %3, i64 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %2, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp ult i64 %10, %12
  br i1 %13, label %14, label %37

14:                                               ; preds = %4
  %15 = bitcast %"class.Ice::CaseCluster"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15)
  %16 = bitcast %"class.Ice::CaseCluster"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* align 8 %16, i64 32, i1 false) #6
  %17 = bitcast %"class.Ice::CaseCluster"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 32, i1 false) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* nonnull align 8 %15, i64 32, i1 false) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15)
  %18 = add i32 %8, 1
  %19 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %2, i64 0, i32 2
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %1, i64 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %20, %22
  br i1 %23, label %24, label %37

24:                                               ; preds = %14
  %25 = bitcast %"class.Ice::CaseCluster"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25)
  %26 = bitcast %"class.Ice::CaseCluster"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %25, i8* align 8 %26, i64 32, i1 false) #6
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %16, i64 32, i1 false) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* nonnull align 8 %25, i64 32, i1 false) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25)
  %27 = add i32 %8, 2
  %28 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %1, i64 0, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %0, i64 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = icmp ult i64 %29, %31
  br i1 %32, label %33, label %37

33:                                               ; preds = %24
  %34 = bitcast %"class.Ice::CaseCluster"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %34)
  %35 = bitcast %"class.Ice::CaseCluster"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %34, i8* align 8 %35, i64 32, i1 false) #6
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %26, i64 32, i1 false) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* nonnull align 8 %34, i64 32, i1 false) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %34)
  %36 = add i32 %8, 3
  br label %37

37:                                               ; preds = %14, %33, %24, %4
  %38 = phi i32 [ %36, %33 ], [ %27, %24 ], [ %18, %14 ], [ %8, %4 ]
  ret i32 %38
}

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort5IRZN3Ice11CaseCluster16clusterizeSwitchEPNS1_3CfgEPKNS1_10InstSwitchEE3$_0PS2_EEjT0_SB_SB_SB_SB_T_"(%"class.Ice::CaseCluster"* nocapture, %"class.Ice::CaseCluster"* nocapture, %"class.Ice::CaseCluster"* nocapture, %"class.Ice::CaseCluster"* nocapture, %"class.Ice::CaseCluster"* nocapture) unnamed_addr #0 {
  %6 = alloca %"class.Ice::CaseCluster", align 8
  %7 = alloca %"class.Ice::CaseCluster", align 8
  %8 = alloca %"class.Ice::CaseCluster", align 8
  %9 = alloca %"class.Ice::CaseCluster", align 8
  %10 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN3Ice11CaseCluster16clusterizeSwitchEPNS1_3CfgEPKNS1_10InstSwitchEE3$_0PS2_EEjT0_SB_SB_SB_T_"(%"class.Ice::CaseCluster"* %0, %"class.Ice::CaseCluster"* %1, %"class.Ice::CaseCluster"* %2, %"class.Ice::CaseCluster"* %3) #7
  %11 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %4, i64 0, i32 2
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %3, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %12, %14
  br i1 %15, label %16, label %48

16:                                               ; preds = %5
  %17 = bitcast %"class.Ice::CaseCluster"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17)
  %18 = bitcast %"class.Ice::CaseCluster"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* align 8 %18, i64 32, i1 false) #6
  %19 = bitcast %"class.Ice::CaseCluster"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 32, i1 false) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* nonnull align 8 %17, i64 32, i1 false) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17)
  %20 = add i32 %10, 1
  %21 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %3, i64 0, i32 2
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %2, i64 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = icmp ult i64 %22, %24
  br i1 %25, label %26, label %48

26:                                               ; preds = %16
  %27 = bitcast %"class.Ice::CaseCluster"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27)
  %28 = bitcast %"class.Ice::CaseCluster"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %27, i8* align 8 %28, i64 32, i1 false) #6
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %18, i64 32, i1 false) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* nonnull align 8 %27, i64 32, i1 false) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27)
  %29 = add i32 %10, 2
  %30 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %2, i64 0, i32 2
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %1, i64 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %31, %33
  br i1 %34, label %35, label %48

35:                                               ; preds = %26
  %36 = bitcast %"class.Ice::CaseCluster"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36)
  %37 = bitcast %"class.Ice::CaseCluster"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %36, i8* align 8 %37, i64 32, i1 false) #6
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %28, i64 32, i1 false) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* nonnull align 8 %36, i64 32, i1 false) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36)
  %38 = add i32 %10, 3
  %39 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %1, i64 0, i32 2
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %0, i64 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = icmp ult i64 %40, %42
  br i1 %43, label %44, label %48

44:                                               ; preds = %35
  %45 = bitcast %"class.Ice::CaseCluster"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %45)
  %46 = bitcast %"class.Ice::CaseCluster"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %45, i8* align 8 %46, i64 32, i1 false) #6
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %37, i64 32, i1 false) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* nonnull align 8 %45, i64 32, i1 false) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %45)
  %47 = add i32 %10, 4
  br label %48

48:                                               ; preds = %16, %35, %44, %26, %5
  %49 = phi i32 [ %47, %44 ], [ %38, %35 ], [ %29, %26 ], [ %20, %16 ], [ %10, %5 ]
  ret i32 %49
}

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN3Ice11CaseCluster16clusterizeSwitchEPNS1_3CfgEPKNS1_10InstSwitchEE3$_0PS2_EEbT0_SB_T_"(%"class.Ice::CaseCluster"*, %"class.Ice::CaseCluster"*) unnamed_addr #0 {
  %3 = alloca %"class.Ice::CaseCluster", align 8
  %4 = alloca { i32, i64 }, align 8
  %5 = ptrtoint %"class.Ice::CaseCluster"* %1 to i64
  %6 = ptrtoint %"class.Ice::CaseCluster"* %0 to i64
  %7 = sub i64 %5, %6
  %8 = ashr exact i64 %7, 5
  switch i64 %8, label %35 [
    i64 0, label %83
    i64 1, label %83
    i64 2, label %9
    i64 3, label %20
    i64 4, label %24
    i64 5, label %29
  ]

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %1, i64 -1, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %0, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %83

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %1, i64 -1
  %17 = bitcast %"class.Ice::CaseCluster"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17)
  %18 = bitcast %"class.Ice::CaseCluster"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* align 8 %18, i64 32, i1 false) #6
  %19 = bitcast %"class.Ice::CaseCluster"* %16 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 32, i1 false) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* nonnull align 8 %17, i64 32, i1 false) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17)
  br label %83

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %0, i64 1
  %22 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %1, i64 -1
  %23 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN3Ice11CaseCluster16clusterizeSwitchEPNS1_3CfgEPKNS1_10InstSwitchEE3$_0PS2_EEjT0_SB_SB_T_"(%"class.Ice::CaseCluster"* %0, %"class.Ice::CaseCluster"* %21, %"class.Ice::CaseCluster"* %22) #7
  br label %83

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %0, i64 1
  %26 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %0, i64 2
  %27 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %1, i64 -1
  %28 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN3Ice11CaseCluster16clusterizeSwitchEPNS1_3CfgEPKNS1_10InstSwitchEE3$_0PS2_EEjT0_SB_SB_SB_T_"(%"class.Ice::CaseCluster"* %0, %"class.Ice::CaseCluster"* %25, %"class.Ice::CaseCluster"* %26, %"class.Ice::CaseCluster"* %27) #7
  br label %83

29:                                               ; preds = %2
  %30 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %0, i64 1
  %31 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %0, i64 2
  %32 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %0, i64 3
  %33 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %1, i64 -1
  %34 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN3Ice11CaseCluster16clusterizeSwitchEPNS1_3CfgEPKNS1_10InstSwitchEE3$_0PS2_EEjT0_SB_SB_SB_SB_T_"(%"class.Ice::CaseCluster"* %0, %"class.Ice::CaseCluster"* %30, %"class.Ice::CaseCluster"* %31, %"class.Ice::CaseCluster"* %32, %"class.Ice::CaseCluster"* %33) #7
  br label %83

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %0, i64 2
  %37 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %0, i64 1
  %38 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN3Ice11CaseCluster16clusterizeSwitchEPNS1_3CfgEPKNS1_10InstSwitchEE3$_0PS2_EEjT0_SB_SB_T_"(%"class.Ice::CaseCluster"* %0, %"class.Ice::CaseCluster"* %37, %"class.Ice::CaseCluster"* %36) #7
  %39 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %0, i64 3
  %40 = icmp eq %"class.Ice::CaseCluster"* %39, %1
  br i1 %40, label %83, label %41

41:                                               ; preds = %35
  %42 = bitcast { i32, i64 }* %4 to i8*
  br label %43

43:                                               ; preds = %41, %76
  %44 = phi %"class.Ice::CaseCluster"* [ %39, %41 ], [ %78, %76 ]
  %45 = phi i32 [ 0, %41 ], [ %77, %76 ]
  %46 = phi %"class.Ice::CaseCluster"* [ %36, %41 ], [ %44, %76 ]
  %47 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %44, i64 0, i32 2
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %46, i64 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = icmp ult i64 %48, %50
  br i1 %51, label %52, label %76

52:                                               ; preds = %43
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42)
  %53 = bitcast %"class.Ice::CaseCluster"* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %42, i8* align 8 %53, i64 16, i1 false)
  %54 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %44, i64 0, i32 3, i32 0
  %55 = bitcast %"class.Ice::CfgNode"** %54 to i64*
  %56 = load i64, i64* %55, align 8
  br label %57

57:                                               ; preds = %63, %52
  %58 = phi %"class.Ice::CaseCluster"* [ %44, %52 ], [ %59, %63 ]
  %59 = phi %"class.Ice::CaseCluster"* [ %46, %52 ], [ %64, %63 ]
  %60 = bitcast %"class.Ice::CaseCluster"* %58 to i8*
  %61 = bitcast %"class.Ice::CaseCluster"* %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 32, i1 false)
  %62 = icmp eq %"class.Ice::CaseCluster"* %59, %0
  br i1 %62, label %68, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %59, i64 -1
  %65 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %59, i64 -1, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = icmp ult i64 %48, %66
  br i1 %67, label %57, label %68

68:                                               ; preds = %57, %63
  %69 = phi %"class.Ice::CaseCluster"* [ %59, %63 ], [ %0, %57 ]
  %70 = bitcast %"class.Ice::CaseCluster"* %69 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* nonnull align 8 %42, i64 16, i1 false)
  %71 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %69, i64 0, i32 2
  store i64 %48, i64* %71, align 8
  %72 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %69, i64 0, i32 3, i32 0
  %73 = bitcast %"class.Ice::CfgNode"** %72 to i64*
  store i64 %56, i64* %73, align 8
  %74 = add i32 %45, 1
  %75 = icmp eq i32 %74, 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42)
  br i1 %75, label %80, label %76

76:                                               ; preds = %68, %43
  %77 = phi i32 [ %74, %68 ], [ %45, %43 ]
  %78 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %44, i64 1
  %79 = icmp eq %"class.Ice::CaseCluster"* %78, %1
  br i1 %79, label %83, label %43

80:                                               ; preds = %68
  %81 = getelementptr inbounds %"class.Ice::CaseCluster", %"class.Ice::CaseCluster"* %44, i64 1
  %82 = icmp eq %"class.Ice::CaseCluster"* %81, %1
  br label %83

83:                                               ; preds = %76, %80, %35, %9, %15, %2, %2, %29, %24, %20
  %84 = phi i1 [ true, %29 ], [ true, %24 ], [ true, %20 ], [ true, %2 ], [ true, %2 ], [ true, %15 ], [ true, %9 ], [ true, %35 ], [ %82, %80 ], [ true, %76 ]
  ret i1 %84
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { optsize }
attributes #8 = { nounwind optsize }
attributes #9 = { noreturn nounwind optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
