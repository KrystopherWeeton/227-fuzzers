; ModuleID = '../../third_party/boringssl/src/crypto/x509/t_crl.c'
source_filename = "../../third_party/boringssl/src/crypto/x509/t_crl.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.X509_crl_st = type { %struct.X509_crl_info_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, i32, %struct.AUTHORITY_KEYID_st*, %struct.ISSUING_DIST_POINT_st*, i32, i32, %struct.asn1_string_st*, %struct.asn1_string_st*, [20 x i8], %struct.stack_st_GENERAL_NAMES*, %struct.x509_crl_method_st*, i8* }
%struct.X509_crl_info_st = type { %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_REVOKED*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.X509_name_st = type { %struct.stack_st_X509_NAME_ENTRY*, i32, %struct.buf_mem_st*, i8*, i32 }
%struct.stack_st_X509_NAME_ENTRY = type opaque
%struct.buf_mem_st = type { i64, i8*, i64 }
%struct.stack_st_X509_REVOKED = type opaque
%struct.stack_st_X509_EXTENSION = type opaque
%struct.ASN1_ENCODING_st = type { i8*, i64, i32, i8 }
%struct.X509_algor_st = type { %struct.asn1_object_st*, %struct.asn1_type_st* }
%struct.asn1_object_st = type { i8*, i8*, i32, i32, i8*, i32 }
%struct.asn1_type_st = type { i32, %union.anon }
%union.anon = type { i8* }
%struct.AUTHORITY_KEYID_st = type { %struct.asn1_string_st*, %struct.stack_st_GENERAL_NAME*, %struct.asn1_string_st* }
%struct.stack_st_GENERAL_NAME = type opaque
%struct.ISSUING_DIST_POINT_st = type { %struct.DIST_POINT_NAME_st*, i32, i32, %struct.asn1_string_st*, i32, i32 }
%struct.DIST_POINT_NAME_st = type { i32, %union.anon.0, %struct.X509_name_st* }
%union.anon.0 = type { %struct.stack_st_GENERAL_NAME* }
%struct.asn1_string_st = type { i32, i32, i8*, i64 }
%struct.stack_st_GENERAL_NAMES = type opaque
%struct.x509_crl_method_st = type opaque
%struct.bio_st = type { %struct.bio_method_st*, i32, i32, i32, i32, i32, i32, i8*, %struct.bio_st*, i64, i64 }
%struct.bio_method_st = type { i32, i8*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*)*, i32 (%struct.bio_st*, i8*, i32)*, i64 (%struct.bio_st*, i32, i64, i8*)*, i32 (%struct.bio_st*)*, i32 (%struct.bio_st*)*, i64 (%struct.bio_st*, i32, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)*)* }
%struct.stack_st = type { i64, i8**, i32, i64, i32 (i8**, i8**)* }

@.str = private unnamed_addr constant [52 x i8] c"../../third_party/boringssl/src/crypto/x509/t_crl.c\00", align 1
@.str.1 = private unnamed_addr constant [36 x i8] c"Certificate Revocation List (CRL):\0A\00", align 1
@.str.2 = private unnamed_addr constant [24 x i8] c"%8sVersion %lu (0x%lx)\0A\00", align 1
@.str.3 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"%8sIssuer: %s\0A\00", align 1
@.str.5 = private unnamed_addr constant [17 x i8] c"%8sLast Update: \00", align 1
@.str.6 = private unnamed_addr constant [18 x i8] c"\0A%8sNext Update: \00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"NONE\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.9 = private unnamed_addr constant [15 x i8] c"CRL extensions\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"Revoked Certificates:\0A\00", align 1
@.str.11 = private unnamed_addr constant [26 x i8] c"No Revoked Certificates.\0A\00", align 1
@.str.12 = private unnamed_addr constant [20 x i8] c"    Serial Number: \00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"\0A        Revocation Date: \00", align 1
@.str.14 = private unnamed_addr constant [21 x i8] c"CRL entry extensions\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_CRL_print_fp(%struct._IO_FILE*, %struct.X509_crl_st*) local_unnamed_addr #0 {
  %3 = tail call %struct.bio_st* @BIO_new_fp(%struct._IO_FILE* %0, i32 0) #2
  %4 = icmp eq %struct.bio_st* %3, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %2
  tail call void @ERR_put_error(i32 11, i32 0, i32 7, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i32 69) #2
  br label %9

6:                                                ; preds = %2
  %7 = tail call i32 @X509_CRL_print(%struct.bio_st* nonnull %3, %struct.X509_crl_st* %1)
  %8 = tail call i32 @BIO_free(%struct.bio_st* nonnull %3) #2
  br label %9

9:                                                ; preds = %6, %5
  %10 = phi i32 [ 0, %5 ], [ 1, %6 ]
  ret i32 %10
}

declare %struct.bio_st* @BIO_new_fp(%struct._IO_FILE*, i32) local_unnamed_addr #1

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_CRL_print(%struct.bio_st*, %struct.X509_crl_st*) local_unnamed_addr #0 {
  %3 = tail call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0)) #2
  %4 = tail call i64 @X509_CRL_get_version(%struct.X509_crl_st* %1) #2
  %5 = add nsw i64 %4, 1
  %6 = tail call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i64 %5, i64 %4) #2
  %7 = getelementptr inbounds %struct.X509_crl_st, %struct.X509_crl_st* %1, i64 0, i32 1
  %8 = load %struct.X509_algor_st*, %struct.X509_algor_st** %7, align 8
  %9 = tail call i32 @X509_signature_print(%struct.bio_st* %0, %struct.X509_algor_st* %8, %struct.asn1_string_st* null) #2
  %10 = tail call %struct.X509_name_st* @X509_CRL_get_issuer(%struct.X509_crl_st* %1) #2
  %11 = tail call i8* @X509_NAME_oneline(%struct.X509_name_st* %10, i8* null, i32 0) #2
  %12 = tail call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i8* %11) #2
  tail call void @OPENSSL_free(i8* %11) #2
  %13 = tail call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0)) #2
  %14 = tail call %struct.asn1_string_st* @X509_CRL_get0_lastUpdate(%struct.X509_crl_st* %1) #2
  %15 = tail call i32 @ASN1_TIME_print(%struct.bio_st* %0, %struct.asn1_string_st* %14) #2
  %16 = tail call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0)) #2
  %17 = tail call %struct.asn1_string_st* @X509_CRL_get0_nextUpdate(%struct.X509_crl_st* %1) #2
  %18 = icmp eq %struct.asn1_string_st* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %2
  %20 = tail call %struct.asn1_string_st* @X509_CRL_get0_nextUpdate(%struct.X509_crl_st* %1) #2
  %21 = tail call i32 @ASN1_TIME_print(%struct.bio_st* %0, %struct.asn1_string_st* %20) #2
  br label %24

22:                                               ; preds = %2
  %23 = tail call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0)) #2
  br label %24

24:                                               ; preds = %22, %19
  %25 = tail call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #2
  %26 = getelementptr inbounds %struct.X509_crl_st, %struct.X509_crl_st* %1, i64 0, i32 0
  %27 = load %struct.X509_crl_info_st*, %struct.X509_crl_info_st** %26, align 8
  %28 = getelementptr inbounds %struct.X509_crl_info_st, %struct.X509_crl_info_st* %27, i64 0, i32 6
  %29 = load %struct.stack_st_X509_EXTENSION*, %struct.stack_st_X509_EXTENSION** %28, align 8
  %30 = tail call i32 @X509V3_extensions_print(%struct.bio_st* %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0), %struct.stack_st_X509_EXTENSION* %29, i64 0, i32 8) #2
  %31 = tail call %struct.stack_st_X509_REVOKED* @X509_CRL_get_REVOKED(%struct.X509_crl_st* %1) #2
  %32 = bitcast %struct.stack_st_X509_REVOKED* %31 to %struct.stack_st*
  %33 = tail call i64 @sk_num(%struct.stack_st* %32) #2
  %34 = icmp eq i64 %33, 0
  %35 = select i1 %34, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0)
  %36 = tail call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %0, i8* %35) #2
  %37 = tail call i64 @sk_num(%struct.stack_st* %32) #2
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %59, label %39

39:                                               ; preds = %24, %39
  %40 = phi i64 [ %56, %39 ], [ 0, %24 ]
  %41 = tail call i8* @sk_value(%struct.stack_st* %32, i64 %40) #2
  %42 = tail call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i64 0, i64 0)) #2
  %43 = bitcast i8* %41 to %struct.asn1_string_st**
  %44 = load %struct.asn1_string_st*, %struct.asn1_string_st** %43, align 8
  %45 = tail call i32 @i2a_ASN1_INTEGER(%struct.bio_st* %0, %struct.asn1_string_st* %44) #2
  %46 = tail call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0)) #2
  %47 = getelementptr inbounds i8, i8* %41, i64 8
  %48 = bitcast i8* %47 to %struct.asn1_string_st**
  %49 = load %struct.asn1_string_st*, %struct.asn1_string_st** %48, align 8
  %50 = tail call i32 @ASN1_TIME_print(%struct.bio_st* %0, %struct.asn1_string_st* %49) #2
  %51 = tail call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #2
  %52 = getelementptr inbounds i8, i8* %41, i64 16
  %53 = bitcast i8* %52 to %struct.stack_st_X509_EXTENSION**
  %54 = load %struct.stack_st_X509_EXTENSION*, %struct.stack_st_X509_EXTENSION** %53, align 8
  %55 = tail call i32 @X509V3_extensions_print(%struct.bio_st* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14, i64 0, i64 0), %struct.stack_st_X509_EXTENSION* %54, i64 0, i32 8) #2
  %56 = add nuw i64 %40, 1
  %57 = tail call i64 @sk_num(%struct.stack_st* %32) #2
  %58 = icmp ult i64 %56, %57
  br i1 %58, label %39, label %59

59:                                               ; preds = %39, %24
  %60 = load %struct.X509_algor_st*, %struct.X509_algor_st** %7, align 8
  %61 = getelementptr inbounds %struct.X509_crl_st, %struct.X509_crl_st* %1, i64 0, i32 2
  %62 = load %struct.asn1_string_st*, %struct.asn1_string_st** %61, align 8
  %63 = tail call i32 @X509_signature_print(%struct.bio_st* %0, %struct.X509_algor_st* %60, %struct.asn1_string_st* %62) #2
  ret i32 1
}

declare i32 @BIO_free(%struct.bio_st*) local_unnamed_addr #1

declare i32 @BIO_printf(%struct.bio_st*, i8*, ...) local_unnamed_addr #1

declare i64 @X509_CRL_get_version(%struct.X509_crl_st*) local_unnamed_addr #1

declare i32 @X509_signature_print(%struct.bio_st*, %struct.X509_algor_st*, %struct.asn1_string_st*) local_unnamed_addr #1

declare i8* @X509_NAME_oneline(%struct.X509_name_st*, i8*, i32) local_unnamed_addr #1

declare %struct.X509_name_st* @X509_CRL_get_issuer(%struct.X509_crl_st*) local_unnamed_addr #1

declare void @OPENSSL_free(i8*) local_unnamed_addr #1

declare i32 @ASN1_TIME_print(%struct.bio_st*, %struct.asn1_string_st*) local_unnamed_addr #1

declare %struct.asn1_string_st* @X509_CRL_get0_lastUpdate(%struct.X509_crl_st*) local_unnamed_addr #1

declare %struct.asn1_string_st* @X509_CRL_get0_nextUpdate(%struct.X509_crl_st*) local_unnamed_addr #1

declare i32 @X509V3_extensions_print(%struct.bio_st*, i8*, %struct.stack_st_X509_EXTENSION*, i64, i32) local_unnamed_addr #1

declare %struct.stack_st_X509_REVOKED* @X509_CRL_get_REVOKED(%struct.X509_crl_st*) local_unnamed_addr #1

declare i32 @i2a_ASN1_INTEGER(%struct.bio_st*, %struct.asn1_string_st*) local_unnamed_addr #1

declare i64 @sk_num(%struct.stack_st*) local_unnamed_addr #1

declare i8* @sk_value(%struct.stack_st*, i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
