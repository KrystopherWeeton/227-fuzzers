; ModuleID = '../../third_party/blink/renderer/platform/graphics/filters/fe_color_matrix.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/filters/fe_color_matrix.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%union.anon = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::FEColorMatrix" = type { %"class.blink::FilterEffect", i32, %"class.WTF::Vector.5" }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector", %"class.blink::Member.2", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp] }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type opaque
%"class.blink::Member.2" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Filter"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.4, i32, %"class.absl::optional", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.4 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%"class.WTF::Vector.5" = type { %"class.WTF::VectorBuffer.6" }
%"class.WTF::VectorBuffer.6" = type { %"class.WTF::VectorBufferBase.7" }
%"class.WTF::VectorBufferBase.7" = type { float*, i32, i32 }
%"class.blink::Filter" = type opaque
%class.sk_sp.9 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%"class.cc::ColorFilterPaintFilter" = type { %"class.cc::PaintFilter", %class.sk_sp.9, %class.sk_sp }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.WTF::TextStream" = type { %"class.WTF::StringBuilder" }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.16, i32, i8, i8, [2 x i8] }>
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.11" }
%"struct.std::__1::atomic.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl.14" }
%"struct.std::__1::__cxx_atomic_impl.14" = type { %"struct.std::__1::__cxx_atomic_base_impl.15" }
%"struct.std::__1::__cxx_atomic_base_impl.15" = type { i32 }
%union.anon.16 = type { %"class.WTF::Vector.17" }
%"class.WTF::Vector.17" = type { %"class.WTF::VectorBuffer.18" }
%"class.WTF::VectorBuffer.18" = type { %"class.WTF::VectorBufferBase.19", [16 x i8] }
%"class.WTF::VectorBufferBase.19" = type { i8*, i32, i32 }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.158", %"class.std::__1::unique_ptr.158", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.174", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.186", %"class.std::__1::unique_ptr.192", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.199", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.87", %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.108", %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.138", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.58" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.58" = type { %"struct.std::__1::__atomic_base.59" }
%"struct.std::__1::__atomic_base.59" = type { %"struct.std::__1::__atomic_base.60" }
%"struct.std::__1::__atomic_base.60" = type { %"struct.std::__1::__cxx_atomic_impl.61" }
%"struct.std::__1::__cxx_atomic_impl.61" = type { %"struct.std::__1::__cxx_atomic_base_impl.62" }
%"struct.std::__1::__cxx_atomic_base_impl.62" = type { i64 }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.blink::Worklist.69"* }
%"class.blink::Worklist.69" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.58" }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.blink::Worklist.76"* }
%"class.blink::Worklist.76" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.58" }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::Worklist.83"* }
%"class.blink::Worklist.83" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.58" }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.blink::Worklist.90"* }
%"class.blink::Worklist.90" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.58" }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.blink::Worklist.97"* }
%"class.blink::Worklist.97" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.58" }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.blink::Worklist.104"* }
%"class.blink::Worklist.104" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.58" }
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.blink::Worklist.111"* }
%"class.blink::Worklist.111" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.58" }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.118", %"class.std::__1::__compressed_pair.125", %"class.std::__1::__compressed_pair.130", %"class.std::__1::__compressed_pair.132", [4 x i8] }>
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120", %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { i64 }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { float }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.141", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.150" }
%"class.WTF::Vector.150" = type { %"class.WTF::VectorBuffer.151" }
%"class.WTF::VectorBuffer.151" = type { %"class.WTF::VectorBufferBase.152" }
%"class.WTF::VectorBufferBase.152" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.166" }
%"class.WTF::VectorBuffer.166" = type { %"class.WTF::VectorBufferBase.167" }
%"class.WTF::VectorBufferBase.167" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.180" }
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.69"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.76"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.83"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.90"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.97"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.203" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.198 }
%class.scoped_refptr.198 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.199" = type { %"struct.std::__1::__atomic_base.200" }
%"struct.std::__1::__atomic_base.200" = type { %"struct.std::__1::__cxx_atomic_impl.201" }
%"struct.std::__1::__cxx_atomic_impl.201" = type { %"struct.std::__1::__cxx_atomic_base_impl.202" }
%"struct.std::__1::__cxx_atomic_base_impl.202" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.214 }
%union.anon.214 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN5blink13FEColorMatrixD2Ev = comdat any

$_ZN5blink13FEColorMatrixD0Ev = comdat any

$_ZNK5blink12FilterEffect19GetFilterEffectTypeEv = comdat any

$_ZN5blink12FilterEffect30SetOperatingInterpolationSpaceENS_18InterpolationSpaceE = comdat any

$_ZN5blink12FilterEffect36MayProduceInvalidPreMultipliedPixelsEv = comdat any

$_ZNK3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj = comdat any

@_ZTVN5blink13FEColorMatrixE = hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::FEColorMatrix"*)* @_ZN5blink13FEColorMatrixD2Ev to i8*), i8* bitcast (void (%"class.blink::FEColorMatrix"*)* @_ZN5blink13FEColorMatrixD0Ev to i8*), i8* bitcast (void (%"class.blink::FilterEffect"*, %"class.blink::Visitor"*)* @_ZNK5blink12FilterEffect5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%class.sk_sp*, %"class.blink::FEColorMatrix"*)* @_ZN5blink13FEColorMatrix17CreateImageFilterEv to i8*), i8* bitcast (void (%class.sk_sp*, %"class.blink::FilterEffect"*)* @_ZN5blink12FilterEffect34CreateImageFilterWithoutValidationEv to i8*), i8* bitcast (i32 (%"class.blink::FilterEffect"*)* @_ZNK5blink12FilterEffect19GetFilterEffectTypeEv to i8*), i8* bitcast (%"class.WTF::TextStream"* (%"class.blink::FEColorMatrix"*, %"class.WTF::TextStream"*, i32)* @_ZNK5blink13FEColorMatrix22ExternalRepresentationERN3WTF10TextStreamEi to i8*), i8* bitcast (void (%"class.blink::FilterEffect"*, i32)* @_ZN5blink12FilterEffect30SetOperatingInterpolationSpaceENS_18InterpolationSpaceE to i8*), i8* bitcast (i1 (%"class.blink::FEColorMatrix"*)* @_ZNK5blink13FEColorMatrix24AffectsTransparentPixelsEv to i8*), i8* bitcast (i1 (%"class.blink::FilterEffect"*)* @_ZN5blink12FilterEffect36MayProduceInvalidPreMultipliedPixelsEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::FilterEffect"*, %"class.blink::FloatRect"*)* @_ZNK5blink12FilterEffect9MapInputsERKNS_9FloatRectE to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::FilterEffect"*, %"class.blink::FloatRect"*)* @_ZNK5blink12FilterEffect9MapEffectERKNS_9FloatRectE to i8*)] }, align 8
@__const._ZN5blink13FEColorMatrix17CreateImageFilterEv.crop_rect = private unnamed_addr constant { { { { i8, [3 x i8], %union.anon } } } } { { { { i8, [3 x i8], %union.anon } } } { { { i8, [3 x i8], %union.anon } } { { i8, [3 x i8], %union.anon } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon { %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } } } } } }, align 4
@.str = private unnamed_addr constant [15 x i8] c"[feColorMatrix\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c" type=\22\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.3 = private unnamed_addr constant [10 x i8] c" values=\22\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"]\0A\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"UNKNOWN\00", align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"MATRIX\00", align 1
@.str.8 = private unnamed_addr constant [9 x i8] c"SATURATE\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"HUEROTATE\00", align 1
@.str.10 = private unnamed_addr constant [17 x i8] c"LUMINANCETOALPHA\00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.12 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@switch.table._ZNK5blink13FEColorMatrix22ExternalRepresentationERN3WTF10TextStreamEi = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0)], align 8

@_ZN5blink13FEColorMatrixC1EPNS_6FilterENS_15ColorMatrixTypeEN3WTF6VectorIfLj0ENS4_18PartitionAllocatorEEE = hidden unnamed_addr alias void (%"class.blink::FEColorMatrix"*, %"class.blink::Filter"*, i32, %"class.WTF::Vector.5"*), void (%"class.blink::FEColorMatrix"*, %"class.blink::Filter"*, i32, %"class.WTF::Vector.5"*)* @_ZN5blink13FEColorMatrixC2EPNS_6FilterENS_15ColorMatrixTypeEN3WTF6VectorIfLj0ENS4_18PartitionAllocatorEEE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13FEColorMatrixC2EPNS_6FilterENS_15ColorMatrixTypeEN3WTF6VectorIfLj0ENS4_18PartitionAllocatorEEE(%"class.blink::FEColorMatrix"*, %"class.blink::Filter"*, i32, %"class.WTF::Vector.5"* nocapture) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::FEColorMatrix", %"class.blink::FEColorMatrix"* %0, i64 0, i32 0
  tail call void @_ZN5blink12FilterEffectC2EPNS_6FilterE(%"class.blink::FilterEffect"* %5, %"class.blink::Filter"* %1) #12
  %6 = getelementptr inbounds %"class.blink::FEColorMatrix", %"class.blink::FEColorMatrix"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink13FEColorMatrixE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::FEColorMatrix", %"class.blink::FEColorMatrix"* %0, i64 0, i32 1
  store i32 %2, i32* %7, align 8
  %8 = getelementptr inbounds %"class.blink::FEColorMatrix", %"class.blink::FEColorMatrix"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.blink::FEColorMatrix", %"class.blink::FEColorMatrix"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.blink::FEColorMatrix", %"class.blink::FEColorMatrix"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %11 = bitcast %"class.WTF::Vector.5"* %3 to i64*
  %12 = bitcast %"class.WTF::Vector.5"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #12
  %13 = load i64, i64* %11, align 8
  %14 = bitcast %"class.WTF::Vector.5"* %8 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %3, i64 0, i32 0, i32 0, i32 1
  %16 = load i32, i32* %9, align 4
  %17 = load i32, i32* %15, align 4
  store i32 %17, i32* %9, align 4
  store i32 %16, i32* %15, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %3, i64 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %10, align 4
  %20 = load i32, i32* %18, align 4
  store i32 %20, i32* %10, align 4
  store i32 %19, i32* %18, align 4
  ret void
}

declare void @_ZN5blink12FilterEffectC2EPNS_6FilterE(%"class.blink::FilterEffect"*, %"class.blink::Filter"*) unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink13FEColorMatrix7GetTypeEv(%"class.blink::FEColorMatrix"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::FEColorMatrix", %"class.blink::FEColorMatrix"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink13FEColorMatrix7SetTypeENS_15ColorMatrixTypeE(%"class.blink::FEColorMatrix"* nocapture, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::FEColorMatrix", %"class.blink::FEColorMatrix"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, %1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  store i32 %1, i32* %3, align 8
  br label %7

7:                                                ; preds = %2, %6
  %8 = phi i1 [ true, %6 ], [ false, %2 ]
  ret i1 %8
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(16) %"class.WTF::Vector.5"* @_ZNK5blink13FEColorMatrix6ValuesEv(%"class.blink::FEColorMatrix"* readnone) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::FEColorMatrix", %"class.blink::FEColorMatrix"* %0, i64 0, i32 2
  ret %"class.WTF::Vector.5"* %2
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink13FEColorMatrix9SetValuesEN3WTF6VectorIfLj0ENS1_18PartitionAllocatorEEE(%"class.blink::FEColorMatrix"* nocapture, %"class.WTF::Vector.5"* nocapture) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.blink::FEColorMatrix", %"class.blink::FEColorMatrix"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.blink::FEColorMatrix", %"class.blink::FEColorMatrix"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %1, i64 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %14, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.WTF::Vector.5"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.WTF::Vector.5"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  br label %30

14:                                               ; preds = %2
  %15 = icmp eq i32 %5, 0
  br i1 %15, label %41, label %16

16:                                               ; preds = %14
  %17 = bitcast %"class.WTF::Vector.5"* %3 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = bitcast %"class.WTF::Vector.5"* %1 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = zext i32 %5 to i64
  %22 = shl nuw nsw i64 %21, 2
  %23 = tail call i32 @bcmp(i8* %18, i8* %20, i64 %22) #12
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %16
  %26 = ptrtoint i8* %18 to i64
  %27 = ptrtoint i8* %20 to i64
  %28 = bitcast %"class.WTF::Vector.5"* %1 to i64*
  %29 = bitcast %"class.WTF::Vector.5"* %3 to i64*
  br label %30

30:                                               ; preds = %25, %9
  %31 = phi i64* [ %29, %25 ], [ %12, %9 ]
  %32 = phi i64* [ %28, %25 ], [ %10, %9 ]
  %33 = phi i64 [ %26, %25 ], [ %13, %9 ]
  %34 = phi i64 [ %27, %25 ], [ %11, %9 ]
  store atomic i64 %33, i64* %32 monotonic, align 8
  store atomic i64 %34, i64* %31 monotonic, align 8
  %35 = getelementptr inbounds %"class.blink::FEColorMatrix", %"class.blink::FEColorMatrix"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %36 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %1, i64 0, i32 0, i32 0, i32 1
  %37 = load i32, i32* %35, align 4
  %38 = load i32, i32* %36, align 4
  store i32 %38, i32* %35, align 4
  store i32 %37, i32* %36, align 4
  %39 = load i32, i32* %4, align 4
  %40 = load i32, i32* %6, align 4
  store i32 %40, i32* %4, align 4
  store i32 %39, i32* %6, align 4
  br label %41

41:                                               ; preds = %14, %16, %30
  %42 = phi i1 [ true, %30 ], [ false, %16 ], [ false, %14 ]
  ret i1 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13FEColorMatrix24AffectsTransparentPixelsEv(%"class.blink::FEColorMatrix"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FEColorMatrix", %"class.blink::FEColorMatrix"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 1
  br i1 %4, label %5, label %14

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::FEColorMatrix", %"class.blink::FEColorMatrix"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp ugt i32 %7, 19
  br i1 %8, label %9, label %14

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::FEColorMatrix", %"class.blink::FEColorMatrix"* %0, i64 0, i32 2
  %11 = tail call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.5"* %10, i32 19) #12
  %12 = load float, float* %11, align 4
  %13 = fcmp ogt float %12, 0.000000e+00
  br label %14

14:                                               ; preds = %9, %5, %1
  %15 = phi i1 [ false, %5 ], [ false, %1 ], [ %13, %9 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13FEColorMatrix17CreateImageFilterEv(%class.sk_sp* noalias nocapture sret, %"class.blink::FEColorMatrix"*) unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp.9, align 8
  %4 = alloca %class.sk_sp, align 8
  %5 = alloca [20 x float], align 16
  %6 = alloca %class.sk_sp, align 8
  %7 = alloca %class.sk_sp.9, align 8
  %8 = alloca %"class.absl::optional", align 4
  %9 = bitcast %class.sk_sp* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %6, i64 0, i32 0
  store %"class.cc::PaintFilter"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintFilter"*), %"class.cc::PaintFilter"** %10, align 8
  %11 = getelementptr inbounds %"class.blink::FEColorMatrix", %"class.blink::FEColorMatrix"* %1, i64 0, i32 0
  %12 = tail call %"class.blink::FilterEffect"* @_ZNK5blink12FilterEffect11InputEffectEj(%"class.blink::FilterEffect"* %11, i32 0) #12
  %13 = getelementptr inbounds %"class.blink::FEColorMatrix", %"class.blink::FEColorMatrix"* %1, i64 0, i32 0, i32 6
  %14 = load i32, i32* %13, align 4
  call void @_ZN5blink20paint_filter_builder5BuildEPNS_12FilterEffectENS_18InterpolationSpaceEb(%class.sk_sp* nonnull sret %6, %"class.blink::FilterEffect"* %12, i32 %14, i1 zeroext true) #12
  %15 = bitcast %class.sk_sp.9* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #12
  %16 = getelementptr inbounds %class.sk_sp.9, %class.sk_sp.9* %7, i64 0, i32 0
  store %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*), %class.SkColorFilter** %16, align 8
  %17 = getelementptr inbounds %"class.blink::FEColorMatrix", %"class.blink::FEColorMatrix"* %1, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %"class.blink::FEColorMatrix", %"class.blink::FEColorMatrix"* %1, i64 0, i32 2
  %20 = bitcast [20 x float]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %20) #12, !noalias !2
  %21 = getelementptr inbounds [20 x float], [20 x float]* %5, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %20, i8 0, i64 80, i1 false) #12, !noalias !2
  %22 = getelementptr inbounds [20 x float], [20 x float]* %5, i64 0, i64 18
  store float 1.000000e+00, float* %22, align 8, !noalias !2
  %23 = getelementptr inbounds [20 x float], [20 x float]* %5, i64 0, i64 12
  store float 1.000000e+00, float* %23, align 16, !noalias !2
  %24 = getelementptr inbounds [20 x float], [20 x float]* %5, i64 0, i64 6
  store float 1.000000e+00, float* %24, align 8, !noalias !2
  store float 1.000000e+00, float* %21, align 16, !noalias !2
  switch i32 %18, label %215 [
    i32 4, label %211
    i32 1, label %25
    i32 2, label %126
    i32 3, label %158
  ]

25:                                               ; preds = %2
  %26 = getelementptr inbounds %"class.blink::FEColorMatrix", %"class.blink::FEColorMatrix"* %1, i64 0, i32 2, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4, !noalias !2
  %28 = icmp eq i32 %27, 20
  br i1 %28, label %29, label %215

29:                                               ; preds = %25
  %30 = call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.5"* %19, i32 0) #12
  %31 = bitcast float* %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = bitcast [20 x float]* %5 to i32*
  store i32 %32, i32* %33, align 16, !noalias !2
  %34 = call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.5"* %19, i32 1) #12
  %35 = bitcast float* %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds [20 x float], [20 x float]* %5, i64 0, i64 1
  %38 = bitcast float* %37 to i32*
  store i32 %36, i32* %38, align 4, !noalias !2
  %39 = call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.5"* %19, i32 2) #12
  %40 = bitcast float* %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds [20 x float], [20 x float]* %5, i64 0, i64 2
  %43 = bitcast float* %42 to i32*
  store i32 %41, i32* %43, align 8, !noalias !2
  %44 = call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.5"* %19, i32 3) #12
  %45 = bitcast float* %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds [20 x float], [20 x float]* %5, i64 0, i64 3
  %48 = bitcast float* %47 to i32*
  store i32 %46, i32* %48, align 4, !noalias !2
  %49 = call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.5"* %19, i32 4) #12
  %50 = bitcast float* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds [20 x float], [20 x float]* %5, i64 0, i64 4
  %53 = bitcast float* %52 to i32*
  store i32 %51, i32* %53, align 16, !noalias !2
  %54 = call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.5"* %19, i32 5) #12
  %55 = bitcast float* %54 to i32*
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds [20 x float], [20 x float]* %5, i64 0, i64 5
  %58 = bitcast float* %57 to i32*
  store i32 %56, i32* %58, align 4, !noalias !2
  %59 = call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.5"* %19, i32 6) #12
  %60 = bitcast float* %59 to i32*
  %61 = load i32, i32* %60, align 4
  %62 = bitcast float* %24 to i32*
  store i32 %61, i32* %62, align 8, !noalias !2
  %63 = call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.5"* %19, i32 7) #12
  %64 = bitcast float* %63 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds [20 x float], [20 x float]* %5, i64 0, i64 7
  %67 = bitcast float* %66 to i32*
  store i32 %65, i32* %67, align 4, !noalias !2
  %68 = call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.5"* %19, i32 8) #12
  %69 = bitcast float* %68 to i32*
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds [20 x float], [20 x float]* %5, i64 0, i64 8
  %72 = bitcast float* %71 to i32*
  store i32 %70, i32* %72, align 16, !noalias !2
  %73 = call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.5"* %19, i32 9) #12
  %74 = bitcast float* %73 to i32*
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds [20 x float], [20 x float]* %5, i64 0, i64 9
  %77 = bitcast float* %76 to i32*
  store i32 %75, i32* %77, align 4, !noalias !2
  %78 = call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.5"* %19, i32 10) #12
  %79 = bitcast float* %78 to i32*
  %80 = load i32, i32* %79, align 4
  %81 = getelementptr inbounds [20 x float], [20 x float]* %5, i64 0, i64 10
  %82 = bitcast float* %81 to i32*
  store i32 %80, i32* %82, align 8, !noalias !2
  %83 = call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.5"* %19, i32 11) #12
  %84 = bitcast float* %83 to i32*
  %85 = load i32, i32* %84, align 4
  %86 = getelementptr inbounds [20 x float], [20 x float]* %5, i64 0, i64 11
  %87 = bitcast float* %86 to i32*
  store i32 %85, i32* %87, align 4, !noalias !2
  %88 = call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.5"* %19, i32 12) #12
  %89 = bitcast float* %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = bitcast float* %23 to i32*
  store i32 %90, i32* %91, align 16, !noalias !2
  %92 = call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.5"* %19, i32 13) #12
  %93 = bitcast float* %92 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = getelementptr inbounds [20 x float], [20 x float]* %5, i64 0, i64 13
  %96 = bitcast float* %95 to i32*
  store i32 %94, i32* %96, align 4, !noalias !2
  %97 = call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.5"* %19, i32 14) #12
  %98 = bitcast float* %97 to i32*
  %99 = load i32, i32* %98, align 4
  %100 = getelementptr inbounds [20 x float], [20 x float]* %5, i64 0, i64 14
  %101 = bitcast float* %100 to i32*
  store i32 %99, i32* %101, align 8, !noalias !2
  %102 = call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.5"* %19, i32 15) #12
  %103 = bitcast float* %102 to i32*
  %104 = load i32, i32* %103, align 4
  %105 = getelementptr inbounds [20 x float], [20 x float]* %5, i64 0, i64 15
  %106 = bitcast float* %105 to i32*
  store i32 %104, i32* %106, align 4, !noalias !2
  %107 = call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.5"* %19, i32 16) #12
  %108 = bitcast float* %107 to i32*
  %109 = load i32, i32* %108, align 4
  %110 = getelementptr inbounds [20 x float], [20 x float]* %5, i64 0, i64 16
  %111 = bitcast float* %110 to i32*
  store i32 %109, i32* %111, align 16, !noalias !2
  %112 = call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.5"* %19, i32 17) #12
  %113 = bitcast float* %112 to i32*
  %114 = load i32, i32* %113, align 4
  %115 = getelementptr inbounds [20 x float], [20 x float]* %5, i64 0, i64 17
  %116 = bitcast float* %115 to i32*
  store i32 %114, i32* %116, align 4, !noalias !2
  %117 = call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.5"* %19, i32 18) #12
  %118 = bitcast float* %117 to i32*
  %119 = load i32, i32* %118, align 4
  %120 = bitcast float* %22 to i32*
  store i32 %119, i32* %120, align 8, !noalias !2
  %121 = call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.5"* %19, i32 19) #12
  %122 = bitcast float* %121 to i32*
  %123 = load i32, i32* %122, align 4
  %124 = getelementptr inbounds [20 x float], [20 x float]* %5, i64 0, i64 19
  %125 = bitcast float* %124 to i32*
  store i32 %123, i32* %125, align 4, !noalias !2
  br label %215

126:                                              ; preds = %2
  %127 = getelementptr inbounds %"class.blink::FEColorMatrix", %"class.blink::FEColorMatrix"* %1, i64 0, i32 2, i32 0, i32 0, i32 2
  %128 = load i32, i32* %127, align 4, !noalias !2
  %129 = icmp eq i32 %128, 1
  br i1 %129, label %130, label %215

130:                                              ; preds = %126
  %131 = call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.5"* %19, i32 0) #12
  %132 = load float, float* %131, align 4
  %133 = fmul float %132, 0x3FE92F1AA0000000
  %134 = fadd float %133, 0x3FCB439580000000
  store float %134, float* %21, align 16, !noalias !2
  %135 = fmul float %132, 0x3FE6E147A0000000
  %136 = fsub float 0x3FE6E147A0000000, %135
  %137 = getelementptr inbounds [20 x float], [20 x float]* %5, i64 0, i64 1
  store float %136, float* %137, align 4, !noalias !2
  %138 = fmul float %132, 0x3FB26E9780000000
  %139 = fsub float 0x3FB26E9780000000, %138
  %140 = getelementptr inbounds [20 x float], [20 x float]* %5, i64 0, i64 2
  store float %139, float* %140, align 8, !noalias !2
  %141 = getelementptr inbounds [20 x float], [20 x float]* %5, i64 0, i64 4
  store float 0.000000e+00, float* %141, align 16, !noalias !2
  %142 = getelementptr inbounds [20 x float], [20 x float]* %5, i64 0, i64 3
  store float 0.000000e+00, float* %142, align 4, !noalias !2
  %143 = fmul float %132, 0x3FCB439580000000
  %144 = fsub float 0x3FCB439580000000, %143
  %145 = getelementptr inbounds [20 x float], [20 x float]* %5, i64 0, i64 5
  store float %144, float* %145, align 4, !noalias !2
  %146 = fmul float %132, 0x3FD23D70A0000000
  %147 = fadd float %146, 0x3FE6E147A0000000
  store float %147, float* %24, align 8, !noalias !2
  %148 = getelementptr inbounds [20 x float], [20 x float]* %5, i64 0, i64 7
  store float %139, float* %148, align 4, !noalias !2
  %149 = getelementptr inbounds [20 x float], [20 x float]* %5, i64 0, i64 9
  store float 0.000000e+00, float* %149, align 4, !noalias !2
  %150 = getelementptr inbounds [20 x float], [20 x float]* %5, i64 0, i64 8
  store float 0.000000e+00, float* %150, align 16, !noalias !2
  %151 = getelementptr inbounds [20 x float], [20 x float]* %5, i64 0, i64 10
  store float %144, float* %151, align 8, !noalias !2
  %152 = getelementptr inbounds [20 x float], [20 x float]* %5, i64 0, i64 11
  store float %136, float* %152, align 4, !noalias !2
  %153 = fmul float %132, 0x3FEDB22D00000000
  %154 = fadd float %153, 0x3FB26E9780000000
  store float %154, float* %23, align 16, !noalias !2
  %155 = getelementptr inbounds [20 x float], [20 x float]* %5, i64 0, i64 13
  %156 = bitcast float* %155 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %156, i8 0, i64 20, i1 false) #12, !noalias !2
  store float 1.000000e+00, float* %22, align 8, !noalias !2
  %157 = getelementptr inbounds [20 x float], [20 x float]* %5, i64 0, i64 19
  store float 0.000000e+00, float* %157, align 4, !noalias !2
  br label %215

158:                                              ; preds = %2
  %159 = getelementptr inbounds %"class.blink::FEColorMatrix", %"class.blink::FEColorMatrix"* %1, i64 0, i32 2, i32 0, i32 0, i32 2
  %160 = load i32, i32* %159, align 4, !noalias !2
  %161 = icmp eq i32 %160, 1
  br i1 %161, label %162, label %215

162:                                              ; preds = %158
  %163 = call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.5"* %19, i32 0) #12
  %164 = load float, float* %163, align 4
  %165 = fmul float %164, 0x400921FB60000000
  %166 = fdiv float %165, 1.800000e+02
  %167 = call float @cosf(float %166) #12
  %168 = call float @sinf(float %166) #12
  %169 = fmul float %167, 0x3FE92F1AA0000000
  %170 = fadd float %169, 0x3FCB439580000000
  %171 = fmul float %168, 0x3FCB439580000000
  %172 = fsub float %170, %171
  store float %172, float* %21, align 16, !noalias !2
  %173 = fmul float %167, 0x3FE6E147A0000000
  %174 = fsub float 0x3FE6E147A0000000, %173
  %175 = fmul float %168, 0x3FE6E147A0000000
  %176 = fsub float %174, %175
  %177 = getelementptr inbounds [20 x float], [20 x float]* %5, i64 0, i64 1
  store float %176, float* %177, align 4, !noalias !2
  %178 = fmul float %167, 0x3FB26E9780000000
  %179 = fsub float 0x3FB26E9780000000, %178
  %180 = fmul float %168, 0x3FEDB22D00000000
  %181 = fadd float %179, %180
  %182 = getelementptr inbounds [20 x float], [20 x float]* %5, i64 0, i64 2
  store float %181, float* %182, align 8, !noalias !2
  %183 = getelementptr inbounds [20 x float], [20 x float]* %5, i64 0, i64 4
  store float 0.000000e+00, float* %183, align 16, !noalias !2
  %184 = getelementptr inbounds [20 x float], [20 x float]* %5, i64 0, i64 3
  store float 0.000000e+00, float* %184, align 4, !noalias !2
  %185 = fmul float %167, 0x3FCB439580000000
  %186 = fsub float 0x3FCB439580000000, %185
  %187 = fmul float %168, 0x3FC24DD300000000
  %188 = fadd float %186, %187
  %189 = getelementptr inbounds [20 x float], [20 x float]* %5, i64 0, i64 5
  store float %188, float* %189, align 4, !noalias !2
  %190 = fmul float %167, 0x3FD23D70A0000000
  %191 = fadd float %190, 0x3FE6E147A0000000
  %192 = fmul float %168, 0x3FC1EB8520000000
  %193 = fadd float %191, %192
  store float %193, float* %24, align 8, !noalias !2
  %194 = fmul float %168, 0x3FD21CAC00000000
  %195 = fsub float %179, %194
  %196 = getelementptr inbounds [20 x float], [20 x float]* %5, i64 0, i64 7
  store float %195, float* %196, align 4, !noalias !2
  %197 = getelementptr inbounds [20 x float], [20 x float]* %5, i64 0, i64 9
  store float 0.000000e+00, float* %197, align 4, !noalias !2
  %198 = getelementptr inbounds [20 x float], [20 x float]* %5, i64 0, i64 8
  store float 0.000000e+00, float* %198, align 16, !noalias !2
  %199 = fmul float %168, 0x3FE92F1AA0000000
  %200 = fsub float %186, %199
  %201 = getelementptr inbounds [20 x float], [20 x float]* %5, i64 0, i64 10
  store float %200, float* %201, align 8, !noalias !2
  %202 = fadd float %174, %175
  %203 = getelementptr inbounds [20 x float], [20 x float]* %5, i64 0, i64 11
  store float %202, float* %203, align 4, !noalias !2
  %204 = fmul float %167, 0x3FEDB22D00000000
  %205 = fadd float %204, 0x3FB26E9780000000
  %206 = fmul float %168, 0x3FB26E9780000000
  %207 = fadd float %205, %206
  store float %207, float* %23, align 16, !noalias !2
  %208 = getelementptr inbounds [20 x float], [20 x float]* %5, i64 0, i64 13
  %209 = bitcast float* %208 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %209, i8 0, i64 20, i1 false) #12, !noalias !2
  store float 1.000000e+00, float* %22, align 8, !noalias !2
  %210 = getelementptr inbounds [20 x float], [20 x float]* %5, i64 0, i64 19
  store float 0.000000e+00, float* %210, align 4, !noalias !2
  br label %215

211:                                              ; preds = %2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %20, i8 0, i64 80, i1 false) #12, !noalias !2
  %212 = getelementptr inbounds [20 x float], [20 x float]* %5, i64 0, i64 15
  store float 0x3FCB333340000000, float* %212, align 4, !noalias !2
  %213 = getelementptr inbounds [20 x float], [20 x float]* %5, i64 0, i64 16
  store float 0x3FE6E48E80000000, float* %213, align 16, !noalias !2
  %214 = getelementptr inbounds [20 x float], [20 x float]* %5, i64 0, i64 17
  store float 0x3FB2752540000000, float* %214, align 4, !noalias !2
  br label %215

215:                                              ; preds = %2, %25, %29, %126, %130, %158, %162, %211
  call void @_ZN14SkColorFilters6MatrixEPKf(%class.sk_sp.9* nonnull sret %7, float* nonnull %21) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %20) #12, !noalias !2
  %216 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %216) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %216, i8* align 4 getelementptr inbounds ({ { { { i8, [3 x i8], %union.anon } } } }, { { { { i8, [3 x i8], %union.anon } } } }* @__const._ZN5blink13FEColorMatrix17CreateImageFilterEv.crop_rect, i64 0, i32 0, i32 0, i32 0, i32 0), i64 20, i1 false)
  call void @_ZNK5blink12FilterEffect11GetCropRectEv(%"class.absl::optional"* nonnull sret %8, %"class.blink::FilterEffect"* %11) #12
  %217 = load i8, i8* %216, align 4, !range !5
  %218 = icmp eq i8 %217, 0
  %219 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %220 = select i1 %218, %struct.SkRect* null, %struct.SkRect* %219
  %221 = bitcast %class.sk_sp.9* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %221)
  %222 = bitcast %class.sk_sp* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %222)
  %223 = call i8* @_Znwm(i64 72) #13, !noalias !6
  %224 = bitcast i8* %223 to %"class.cc::ColorFilterPaintFilter"*
  %225 = bitcast %class.sk_sp.9* %7 to i64*
  %226 = load i64, i64* %225, align 8, !noalias !6
  store %class.SkColorFilter* null, %class.SkColorFilter** %16, align 8, !noalias !6
  %227 = bitcast %class.sk_sp.9* %3 to i64*
  store i64 %226, i64* %227, align 8, !noalias !6
  %228 = bitcast %class.sk_sp* %6 to i64*
  %229 = load i64, i64* %228, align 8, !noalias !6
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %10, align 8, !noalias !6
  %230 = bitcast %class.sk_sp* %4 to i64*
  store i64 %229, i64* %230, align 8, !noalias !6
  call void @_ZN2cc22ColorFilterPaintFilterC1E5sk_spI13SkColorFilterES1_INS_11PaintFilterEEPK6SkRect(%"class.cc::ColorFilterPaintFilter"* nonnull %224, %class.sk_sp.9* nonnull %3, %class.sk_sp* nonnull %4, %struct.SkRect* %220) #12, !noalias !6
  %231 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  %232 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %231, align 8, !noalias !6
  %233 = icmp eq %"class.cc::PaintFilter"* %232, null
  br i1 %233, label %244, label %234

234:                                              ; preds = %215
  %235 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %232, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %236 = atomicrmw add i32* %235, i32 -1 acq_rel, !noalias !6
  %237 = icmp eq i32 %236, 1
  br i1 %237, label %238, label %244

238:                                              ; preds = %234
  %239 = bitcast %"class.cc::PaintFilter"* %232 to %class.SkRefCntBase*
  %240 = bitcast %"class.cc::PaintFilter"* %232 to void (%class.SkRefCntBase*)***
  %241 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %240, align 8, !noalias !6
  %242 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %241, i64 2
  %243 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %242, align 8, !noalias !6
  call void %243(%class.SkRefCntBase* nonnull %239) #12, !noalias !6
  br label %244

244:                                              ; preds = %238, %234, %215
  %245 = getelementptr inbounds %class.sk_sp.9, %class.sk_sp.9* %3, i64 0, i32 0
  %246 = load %class.SkColorFilter*, %class.SkColorFilter** %245, align 8, !noalias !6
  %247 = icmp eq %class.SkColorFilter* %246, null
  br i1 %247, label %258, label %248

248:                                              ; preds = %244
  %249 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %246, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %250 = atomicrmw add i32* %249, i32 -1 acq_rel, !noalias !6
  %251 = icmp eq i32 %250, 1
  br i1 %251, label %252, label %258

252:                                              ; preds = %248
  %253 = bitcast %class.SkColorFilter* %246 to %class.SkRefCntBase*
  %254 = bitcast %class.SkColorFilter* %246 to void (%class.SkRefCntBase*)***
  %255 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %254, align 8, !noalias !6
  %256 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %255, i64 2
  %257 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %256, align 8, !noalias !6
  call void %257(%class.SkRefCntBase* nonnull %253) #12, !noalias !6
  br label %258

258:                                              ; preds = %252, %248, %244
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %221)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %222)
  %259 = bitcast %class.sk_sp* %0 to i8**
  store i8* %223, i8** %259, align 8
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %216) #12
  %260 = load %class.SkColorFilter*, %class.SkColorFilter** %16, align 8
  %261 = icmp eq %class.SkColorFilter* %260, null
  br i1 %261, label %272, label %262

262:                                              ; preds = %258
  %263 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %260, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %264 = atomicrmw add i32* %263, i32 -1 acq_rel
  %265 = icmp eq i32 %264, 1
  br i1 %265, label %266, label %272

266:                                              ; preds = %262
  %267 = bitcast %class.SkColorFilter* %260 to %class.SkRefCntBase*
  %268 = bitcast %class.SkColorFilter* %260 to void (%class.SkRefCntBase*)***
  %269 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %268, align 8
  %270 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %269, i64 2
  %271 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %270, align 8
  call void %271(%class.SkRefCntBase* nonnull %267) #12
  br label %272

272:                                              ; preds = %258, %262, %266
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #12
  %273 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %10, align 8
  %274 = icmp eq %"class.cc::PaintFilter"* %273, null
  br i1 %274, label %285, label %275

275:                                              ; preds = %272
  %276 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %273, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %277 = atomicrmw add i32* %276, i32 -1 acq_rel
  %278 = icmp eq i32 %277, 1
  br i1 %278, label %279, label %285

279:                                              ; preds = %275
  %280 = bitcast %"class.cc::PaintFilter"* %273 to %class.SkRefCntBase*
  %281 = bitcast %"class.cc::PaintFilter"* %273 to void (%class.SkRefCntBase*)***
  %282 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %281, align 8
  %283 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %282, i64 2
  %284 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %283, align 8
  call void %284(%class.SkRefCntBase* nonnull %280) #12
  br label %285

285:                                              ; preds = %272, %275, %279
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

declare void @_ZN5blink20paint_filter_builder5BuildEPNS_12FilterEffectENS_18InterpolationSpaceEb(%class.sk_sp* sret, %"class.blink::FilterEffect"*, i32, i1 zeroext) local_unnamed_addr #1

declare %"class.blink::FilterEffect"* @_ZNK5blink12FilterEffect11InputEffectEj(%"class.blink::FilterEffect"*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

declare void @_ZNK5blink12FilterEffect11GetCropRectEv(%"class.absl::optional"* sret, %"class.blink::FilterEffect"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %"class.WTF::TextStream"* @_ZNK5blink13FEColorMatrix22ExternalRepresentationERN3WTF10TextStreamEi(%"class.blink::FEColorMatrix"*, %"class.WTF::TextStream"* returned dereferenceable(48), i32) unnamed_addr #0 align 2 {
  tail call void @_ZN3WTF11WriteIndentERNS_10TextStreamEi(%"class.WTF::TextStream"* dereferenceable(48) %1, i32 %2) #12
  %4 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0)) #12
  %5 = getelementptr inbounds %"class.blink::FEColorMatrix", %"class.blink::FEColorMatrix"* %0, i64 0, i32 0
  %6 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZNK5blink12FilterEffect22ExternalRepresentationERN3WTF10TextStreamEi(%"class.blink::FilterEffect"* %5, %"class.WTF::TextStream"* dereferenceable(48) %1, i32 0) #12
  %7 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0)) #12
  %8 = getelementptr inbounds %"class.blink::FEColorMatrix", %"class.blink::FEColorMatrix"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp ult i32 %9, 5
  br i1 %10, label %11, label %16

11:                                               ; preds = %3
  %12 = sext i32 %9 to i64
  %13 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table._ZNK5blink13FEColorMatrix22ExternalRepresentationERN3WTF10TextStreamEi, i64 0, i64 %12
  %14 = load i8*, i8** %13, align 8
  %15 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %7, i8* %14) #12
  br label %16

16:                                               ; preds = %3, %11
  %17 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #12
  %18 = getelementptr inbounds %"class.blink::FEColorMatrix", %"class.blink::FEColorMatrix"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %50, label %21

21:                                               ; preds = %16
  %22 = load i32, i32* %8, align 8
  switch i32 %22, label %50 [
    i32 1, label %25
    i32 2, label %23
    i32 3, label %23
  ]

23:                                               ; preds = %21, %21
  %24 = icmp eq i32 %19, 1
  br i1 %24, label %27, label %50

25:                                               ; preds = %21
  %26 = icmp eq i32 %19, 20
  br i1 %26, label %27, label %50

27:                                               ; preds = %23, %25
  %28 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0)) #12
  %29 = getelementptr inbounds %"class.blink::FEColorMatrix", %"class.blink::FEColorMatrix"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %30 = load float*, float** %29, align 8
  %31 = load i32, i32* %18, align 4
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds float, float* %30, i64 %32
  %34 = icmp eq i32 %31, 0
  br i1 %34, label %48, label %35

35:                                               ; preds = %27
  %36 = load float, float* %30, align 4
  %37 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEf(%"class.WTF::TextStream"* %1, float %36) #12
  %38 = icmp eq i32 %31, 1
  br i1 %38, label %48, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds float, float* %30, i64 1
  br label %41

41:                                               ; preds = %39, %41
  %42 = phi float* [ %40, %39 ], [ %46, %41 ]
  %43 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #12
  %44 = load float, float* %42, align 4
  %45 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEf(%"class.WTF::TextStream"* %1, float %44) #12
  %46 = getelementptr inbounds float, float* %42, i64 1
  %47 = icmp ult float* %46, %33
  br i1 %47, label %41, label %48

48:                                               ; preds = %41, %35, %27
  %49 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #12
  br label %50

50:                                               ; preds = %21, %23, %48, %25, %16
  %51 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0)) #12
  %52 = tail call %"class.blink::FilterEffect"* @_ZNK5blink12FilterEffect11InputEffectEj(%"class.blink::FilterEffect"* %5, i32 0) #12
  %53 = add nsw i32 %2, 1
  %54 = bitcast %"class.blink::FilterEffect"* %52 to %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)***
  %55 = load %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)**, %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)*** %54, align 8
  %56 = getelementptr inbounds %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)*, %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)** %55, i64 6
  %57 = load %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)*, %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)** %56, align 8
  %58 = tail call dereferenceable(48) %"class.WTF::TextStream"* %57(%"class.blink::FilterEffect"* %52, %"class.WTF::TextStream"* dereferenceable(48) %1, i32 %53) #12
  ret %"class.WTF::TextStream"* %1
}

declare void @_ZN3WTF11WriteIndentERNS_10TextStreamEi(%"class.WTF::TextStream"* dereferenceable(48), i32) local_unnamed_addr #1

declare dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"*, i8*) local_unnamed_addr #1

declare dereferenceable(48) %"class.WTF::TextStream"* @_ZNK5blink12FilterEffect22ExternalRepresentationERN3WTF10TextStreamEi(%"class.blink::FilterEffect"*, %"class.WTF::TextStream"* dereferenceable(48), i32) unnamed_addr #1

declare dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEf(%"class.WTF::TextStream"*, float) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13FEColorMatrixD2Ev(%"class.blink::FEColorMatrix"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FEColorMatrix", %"class.blink::FEColorMatrix"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink13FEColorMatrixE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::FEColorMatrix", %"class.blink::FEColorMatrix"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load float*, float** %3, align 8
  %5 = icmp eq float* %4, null
  %6 = bitcast float* %4 to i8*
  br i1 %5, label %13, label %7, !prof !9

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::FEColorMatrix", %"class.blink::FEColorMatrix"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11, !prof !10

11:                                               ; preds = %7
  store i32 0, i32* %8, align 4
  br label %12

12:                                               ; preds = %11, %7
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %6) #12
  store float* null, float** %3, align 8
  br label %13

13:                                               ; preds = %1, %12
  %14 = getelementptr inbounds %"class.blink::FEColorMatrix", %"class.blink::FEColorMatrix"* %0, i64 0, i32 0
  tail call void @_ZN5blink12FilterEffectD2Ev(%"class.blink::FilterEffect"* %14) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13FEColorMatrixD0Ev(%"class.blink::FEColorMatrix"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FEColorMatrix", %"class.blink::FEColorMatrix"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink13FEColorMatrixE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::FEColorMatrix", %"class.blink::FEColorMatrix"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load float*, float** %3, align 8
  %5 = icmp eq float* %4, null
  %6 = bitcast float* %4 to i8*
  br i1 %5, label %13, label %7, !prof !9

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::FEColorMatrix", %"class.blink::FEColorMatrix"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11, !prof !10

11:                                               ; preds = %7
  store i32 0, i32* %8, align 4
  br label %12

12:                                               ; preds = %11, %7
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %6) #12
  store float* null, float** %3, align 8
  br label %13

13:                                               ; preds = %1, %12
  %14 = getelementptr inbounds %"class.blink::FEColorMatrix", %"class.blink::FEColorMatrix"* %0, i64 0, i32 0
  tail call void @_ZN5blink12FilterEffectD2Ev(%"class.blink::FilterEffect"* %14) #12
  ret void
}

declare void @_ZNK5blink12FilterEffect5TraceEPNS_7VisitorE(%"class.blink::FilterEffect"*, %"class.blink::Visitor"*) unnamed_addr #1

declare void @_ZN5blink12FilterEffect34CreateImageFilterWithoutValidationEv(%class.sk_sp* sret, %"class.blink::FilterEffect"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink12FilterEffect19GetFilterEffectTypeEv(%"class.blink::FilterEffect"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12FilterEffect30SetOperatingInterpolationSpaceENS_18InterpolationSpaceE(%"class.blink::FilterEffect"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 6
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12FilterEffect36MayProduceInvalidPreMultipliedPixelsEv(%"class.blink::FilterEffect"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare { <2 x float>, <2 x float> } @_ZNK5blink12FilterEffect9MapInputsERKNS_9FloatRectE(%"class.blink::FilterEffect"*, %"class.blink::FloatRect"* dereferenceable(16)) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK5blink12FilterEffect9MapEffectERKNS_9FloatRectE(%"class.blink::FilterEffect"*, %"class.blink::FloatRect"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

declare void @_ZN14SkColorFilters6MatrixEPKf(%class.sk_sp.9* sret, float*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare float @cosf(float) local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare float @sinf(float) local_unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN5blink12FilterEffectD2Ev(%"class.blink::FilterEffect"*) unnamed_addr #9

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) float* @_ZNK3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.5"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load float*, float** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds float, float* %24, i64 %25
  ret float* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #9

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare void @_ZN2cc22ColorFilterPaintFilterC1E5sk_spI13SkColorFilterES1_INS_11PaintFilterEEPK6SkRect(%"class.cc::ColorFilterPaintFilter"*, %class.sk_sp.9*, %class.sk_sp*, %struct.SkRect*) unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind readonly }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN5blinkL17CreateColorFilterENS_15ColorMatrixTypeERKN3WTF6VectorIfLj0ENS1_18PartitionAllocatorEEE: argument 0"}
!4 = distinct !{!4, !"_ZN5blinkL17CreateColorFilterENS_15ColorMatrixTypeERKN3WTF6VectorIfLj0ENS1_18PartitionAllocatorEEE"}
!5 = !{i8 0, i8 2}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_Z10sk_make_spIN2cc22ColorFilterPaintFilterEJ5sk_spI13SkColorFilterES2_INS0_11PaintFilterEEP6SkRectEES2_IT_EDpOT0_: argument 0"}
!8 = distinct !{!8, !"_Z10sk_make_spIN2cc22ColorFilterPaintFilterEJ5sk_spI13SkColorFilterES2_INS0_11PaintFilterEEP6SkRectEES2_IT_EDpOT0_"}
!9 = !{!"branch_weights", i32 2000, i32 1}
!10 = !{!"branch_weights", i32 1, i32 2000}
