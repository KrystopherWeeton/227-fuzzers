; ModuleID = '../../third_party/pdfium/third_party/lcms/src/cmsxform.c'
source_filename = "../../third_party/pdfium/third_party/lcms/src/cmsxform.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct._cmsAdaptationStateChunkType = type { double }
%struct._cmsTransformPluginChunkType = type { %struct._cmsTransformCollection_st* }
%struct._cmsTransformCollection_st = type { i32 (void (%struct._cmstransform_struct*, i8*, i8*, i32, i32, %struct.cmsStride*)**, i8**, void (%struct._cmsContext_struct*, i8*)**, %struct._cmsPipeline_struct**, i32*, i32*, i32*)*, i32, %struct._cmsTransformCollection_st* }
%struct._cmstransform_struct = type { i32, i32, void (%struct._cmstransform_struct*, i8*, i8*, i32, i32, %struct.cmsStride*)*, i8* (%struct._cmstransform_struct*, i16*, i8*, i32)*, i8* (%struct._cmstransform_struct*, i16*, i8*, i32)*, i8* (%struct._cmstransform_struct*, float*, i8*, i32)*, i8* (%struct._cmstransform_struct*, float*, i8*, i32)*, %struct._cmsCACHE, %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct*, %struct._cms_NAMEDCOLORLIST_struct*, %struct._cms_NAMEDCOLORLIST_struct*, i32, i32, %struct.cmsCIEXYZ, %struct.cmsCIEXYZ, %struct.cmsSEQ*, i32, double, i32, %struct._cmsContext_struct*, i8*, void (%struct._cmsContext_struct*, i8*)*, void (%struct._cmstransform_struct*, i8*, i8*, i32, i32)* }
%struct._cmsCACHE = type { [16 x i16], [16 x i16] }
%struct._cmsPipeline_struct = type { %struct._cmsStage_struct*, i32, i32, i8*, void (i16*, i16*, i8*)*, void (float*, float*, i8*)*, void (%struct._cmsContext_struct*, i8*)*, i8* (%struct._cmsContext_struct*, i8*)*, %struct._cmsContext_struct*, i32 }
%struct._cmsStage_struct = type { %struct._cmsContext_struct*, i32, i32, i32, i32, void (float*, float*, %struct._cmsStage_struct*)*, i8* (%struct._cmsStage_struct*)*, void (%struct._cmsStage_struct*)*, i8*, %struct._cmsStage_struct* }
%struct._cms_NAMEDCOLORLIST_struct = type { i32, i32, i32, [33 x i8], [33 x i8], %struct._cmsNAMEDCOLOR*, %struct._cmsContext_struct* }
%struct._cmsNAMEDCOLOR = type { [256 x i8], [3 x i16], [16 x i16] }
%struct.cmsCIEXYZ = type { double, double, double }
%struct.cmsSEQ = type { i32, %struct._cmsContext_struct*, %struct.cmsPSEQDESC* }
%struct.cmsPSEQDESC = type { i32, i32, i64, i32, %union.cmsProfileID, %struct._cms_MLU_struct*, %struct._cms_MLU_struct*, %struct._cms_MLU_struct* }
%union.cmsProfileID = type { [4 x i32] }
%struct._cms_MLU_struct = type { %struct._cmsContext_struct*, i32, i32, %struct._cmsMLUentry*, i32, i32, i8* }
%struct._cmsMLUentry = type { i16, i16, i32, i32 }
%struct._cmsContext_struct = type { %struct._cmsContext_struct*, %struct._cmsSubAllocator*, [15 x i8*], %struct._cmsMemPluginChunkType }
%struct._cmsSubAllocator = type { %struct._cmsContext_struct*, %struct._cmsSubAllocator_chunk_st* }
%struct._cmsSubAllocator_chunk_st = type { i8*, i32, i32, %struct._cmsSubAllocator_chunk_st* }
%struct._cmsMemPluginChunkType = type { i8* (%struct._cmsContext_struct*, i32)*, i8* (%struct._cmsContext_struct*, i32)*, void (%struct._cmsContext_struct*, i8*)*, i8* (%struct._cmsContext_struct*, i8*, i32)*, i8* (%struct._cmsContext_struct*, i32, i32)*, i8* (%struct._cmsContext_struct*, i8*, i32)* }
%struct.cmsStride = type { i32, i32, i32, i32 }
%struct._cmsPluginBaseStruct = type { i32, i32, i32, %struct._cmsPluginBaseStruct* }

@_cmsAdaptationStateChunk = hidden local_unnamed_addr global %struct._cmsAdaptationStateChunkType { double 1.000000e+00 }, align 8
@_cmsAllocAdaptationStateChunk.AdaptationStateChunk = internal global %struct._cmsAdaptationStateChunkType { double 1.000000e+00 }, align 8
@_cmsAlarmCodesChunk = hidden local_unnamed_addr global { <{ i16, i16, i16, [13 x i16] }> } { <{ i16, i16, i16, [13 x i16] }> <{ i16 32512, i16 32512, i16 32512, [13 x i16] zeroinitializer }> }, align 2
@_cmsAllocAlarmCodesChunk.AlarmCodesChunk = internal global { <{ i16, i16, i16, [13 x i16] }> } { <{ i16, i16, i16, [13 x i16] }> <{ i16 32512, i16 32512, i16 32512, [13 x i16] zeroinitializer }> }, align 2
@_cmsTransformPluginChunk = hidden local_unnamed_addr global %struct._cmsTransformPluginChunkType zeroinitializer, align 8
@_cmsAllocTransformPluginChunk.TransformPluginChunkType = internal global %struct._cmsTransformPluginChunkType zeroinitializer, align 8
@.str = private unnamed_addr constant [33 x i8] c"NULL input profiles on transform\00", align 1
@.str.1 = private unnamed_addr constant [37 x i8] c"Wrong input color space on transform\00", align 1
@.str.2 = private unnamed_addr constant [38 x i8] c"Wrong output color space on transform\00", align 1
@.str.3 = private unnamed_addr constant [27 x i8] c"Couldn't link the profiles\00", align 1
@.str.4 = private unnamed_addr constant [50 x i8] c"Channel count doesn't match. Profile is corrupted\00", align 1
@.str.5 = private unnamed_addr constant [53 x i8] c"Wrong number of profiles. 1..255 expected, %d found.\00", align 1
@.str.6 = private unnamed_addr constant [102 x i8] c"cmsChangeBuffersFormat works only on transforms created originally with at least 16 bits of precision\00", align 1
@.str.7 = private unnamed_addr constant [26 x i8] c"Unsupported raster format\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_cmsAllocAdaptationStateChunk(%struct._cmsContext_struct* nocapture, %struct._cmsContext_struct* readonly) local_unnamed_addr #0 {
  %3 = icmp eq %struct._cmsContext_struct* %1, null
  br i1 %3, label %7, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %1, i64 0, i32 2, i64 3
  %6 = load i8*, i8** %5, align 8
  br label %7

7:                                                ; preds = %2, %4
  %8 = phi i8* [ %6, %4 ], [ bitcast (%struct._cmsAdaptationStateChunkType* @_cmsAllocAdaptationStateChunk.AdaptationStateChunk to i8*), %2 ]
  %9 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %0, i64 0, i32 1
  %10 = load %struct._cmsSubAllocator*, %struct._cmsSubAllocator** %9, align 8
  %11 = tail call i8* @_cmsSubAllocDup(%struct._cmsSubAllocator* %10, i8* %8, i32 8) #7
  %12 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %0, i64 0, i32 2, i64 3
  store i8* %11, i8** %12, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i8* @_cmsSubAllocDup(%struct._cmsSubAllocator*, i8*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden double @cmsSetAdaptationStateTHR(%struct._cmsContext_struct*, double) local_unnamed_addr #0 {
  %3 = tail call i8* @_cmsContextGetClientChunk(%struct._cmsContext_struct* %0, i32 3) #7
  %4 = bitcast i8* %3 to double*
  %5 = load double, double* %4, align 8
  %6 = fcmp ult double %1, 0.000000e+00
  br i1 %6, label %8, label %7

7:                                                ; preds = %2
  store double %1, double* %4, align 8
  br label %8

8:                                                ; preds = %2, %7
  ret double %5
}

declare i8* @_cmsContextGetClientChunk(%struct._cmsContext_struct*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden double @cmsSetAdaptationState(double) local_unnamed_addr #0 {
  %2 = tail call i8* @_cmsContextGetClientChunk(%struct._cmsContext_struct* null, i32 3) #7
  %3 = bitcast i8* %2 to double*
  %4 = load double, double* %3, align 8
  %5 = fcmp ult double %0, 0.000000e+00
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  store double %0, double* %3, align 8
  br label %7

7:                                                ; preds = %1, %6
  ret double %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cmsSetAlarmCodesTHR(%struct._cmsContext_struct*, i16* nocapture readonly) local_unnamed_addr #0 {
  %3 = tail call i8* @_cmsContextGetClientChunk(%struct._cmsContext_struct* %0, i32 2) #7
  %4 = bitcast i16* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %3, i8* align 2 %4, i64 32, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @cmsGetAlarmCodesTHR(%struct._cmsContext_struct*, i16* nocapture) local_unnamed_addr #0 {
  %3 = tail call i8* @_cmsContextGetClientChunk(%struct._cmsContext_struct* %0, i32 2) #7
  %4 = bitcast i16* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %4, i8* align 2 %3, i64 32, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cmsSetAlarmCodes(i16* nocapture readonly) local_unnamed_addr #0 {
  %2 = tail call i8* @_cmsContextGetClientChunk(%struct._cmsContext_struct* null, i32 2) #7
  %3 = bitcast i16* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %2, i8* align 2 %3, i64 32, i1 false) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cmsGetAlarmCodes(i16* nocapture) local_unnamed_addr #0 {
  %2 = tail call i8* @_cmsContextGetClientChunk(%struct._cmsContext_struct* null, i32 2) #7
  %3 = bitcast i16* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %3, i8* align 2 %2, i64 32, i1 false) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_cmsAllocAlarmCodesChunk(%struct._cmsContext_struct* nocapture, %struct._cmsContext_struct* readonly) local_unnamed_addr #0 {
  %3 = icmp eq %struct._cmsContext_struct* %1, null
  br i1 %3, label %7, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %1, i64 0, i32 2, i64 2
  %6 = load i8*, i8** %5, align 8
  br label %7

7:                                                ; preds = %2, %4
  %8 = phi i8* [ %6, %4 ], [ bitcast ({ <{ i16, i16, i16, [13 x i16] }> }* @_cmsAllocAlarmCodesChunk.AlarmCodesChunk to i8*), %2 ]
  %9 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %0, i64 0, i32 1
  %10 = load %struct._cmsSubAllocator*, %struct._cmsSubAllocator** %9, align 8
  %11 = tail call i8* @_cmsSubAllocDup(%struct._cmsSubAllocator* %10, i8* %8, i32 32) #7
  %12 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %0, i64 0, i32 2, i64 2
  store i8* %11, i8** %12, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cmsDeleteTransform(i8*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds i8, i8* %0, i64 120
  %3 = bitcast i8* %2 to %struct._cmsPipeline_struct**
  %4 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %3, align 8
  %5 = icmp eq %struct._cmsPipeline_struct* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @cmsPipelineFree(%struct._cmsPipeline_struct* nonnull %4) #7
  br label %7

7:                                                ; preds = %1, %6
  %8 = getelementptr inbounds i8, i8* %0, i64 112
  %9 = bitcast i8* %8 to %struct._cmsPipeline_struct**
  %10 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %9, align 8
  %11 = icmp eq %struct._cmsPipeline_struct* %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %7
  tail call void @cmsPipelineFree(%struct._cmsPipeline_struct* nonnull %10) #7
  br label %13

13:                                               ; preds = %7, %12
  %14 = getelementptr inbounds i8, i8* %0, i64 128
  %15 = bitcast i8* %14 to %struct._cms_NAMEDCOLORLIST_struct**
  %16 = load %struct._cms_NAMEDCOLORLIST_struct*, %struct._cms_NAMEDCOLORLIST_struct** %15, align 8
  %17 = icmp eq %struct._cms_NAMEDCOLORLIST_struct* %16, null
  br i1 %17, label %19, label %18

18:                                               ; preds = %13
  tail call void @cmsFreeNamedColorList(%struct._cms_NAMEDCOLORLIST_struct* nonnull %16) #7
  br label %19

19:                                               ; preds = %13, %18
  %20 = getelementptr inbounds i8, i8* %0, i64 136
  %21 = bitcast i8* %20 to %struct._cms_NAMEDCOLORLIST_struct**
  %22 = load %struct._cms_NAMEDCOLORLIST_struct*, %struct._cms_NAMEDCOLORLIST_struct** %21, align 8
  %23 = icmp eq %struct._cms_NAMEDCOLORLIST_struct* %22, null
  br i1 %23, label %25, label %24

24:                                               ; preds = %19
  tail call void @cmsFreeNamedColorList(%struct._cms_NAMEDCOLORLIST_struct* nonnull %22) #7
  br label %25

25:                                               ; preds = %19, %24
  %26 = getelementptr inbounds i8, i8* %0, i64 200
  %27 = bitcast i8* %26 to %struct.cmsSEQ**
  %28 = load %struct.cmsSEQ*, %struct.cmsSEQ** %27, align 8
  %29 = icmp eq %struct.cmsSEQ* %28, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %25
  tail call void @cmsFreeProfileSequenceDescription(%struct.cmsSEQ* nonnull %28) #7
  br label %31

31:                                               ; preds = %25, %30
  %32 = getelementptr inbounds i8, i8* %0, i64 240
  %33 = bitcast i8* %32 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = icmp eq i8* %34, null
  br i1 %35, label %43, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds i8, i8* %0, i64 248
  %38 = bitcast i8* %37 to void (%struct._cmsContext_struct*, i8*)**
  %39 = load void (%struct._cmsContext_struct*, i8*)*, void (%struct._cmsContext_struct*, i8*)** %38, align 8
  %40 = getelementptr inbounds i8, i8* %0, i64 232
  %41 = bitcast i8* %40 to %struct._cmsContext_struct**
  %42 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %41, align 8
  tail call void %39(%struct._cmsContext_struct* %42, i8* nonnull %34) #7
  br label %43

43:                                               ; preds = %31, %36
  %44 = getelementptr inbounds i8, i8* %0, i64 232
  %45 = bitcast i8* %44 to %struct._cmsContext_struct**
  %46 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %45, align 8
  tail call void @_cmsFree(%struct._cmsContext_struct* %46, i8* %0) #7
  ret void
}

declare void @cmsPipelineFree(%struct._cmsPipeline_struct*) local_unnamed_addr #2

declare void @cmsFreeNamedColorList(%struct._cms_NAMEDCOLORLIST_struct*) local_unnamed_addr #2

declare void @cmsFreeProfileSequenceDescription(%struct.cmsSEQ*) local_unnamed_addr #2

declare void @_cmsFree(%struct._cmsContext_struct*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @cmsDoTransform(i8*, i8*, i8*, i32) local_unnamed_addr #0 {
  %5 = alloca %struct.cmsStride, align 4
  %6 = bitcast i8* %0 to %struct._cmstransform_struct*
  %7 = bitcast %struct.cmsStride* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #7
  %8 = getelementptr inbounds %struct.cmsStride, %struct.cmsStride* %5, i64 0, i32 0
  %9 = getelementptr inbounds %struct.cmsStride, %struct.cmsStride* %5, i64 0, i32 1
  %10 = getelementptr inbounds %struct.cmsStride, %struct.cmsStride* %5, i64 0, i32 2
  %11 = getelementptr inbounds %struct.cmsStride, %struct.cmsStride* %5, i64 0, i32 3
  store i32 0, i32* %8, align 4
  store i32 0, i32* %9, align 4
  %12 = bitcast i8* %0 to i32*
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 7
  %15 = icmp eq i32 %14, 0
  %16 = select i1 %15, i32 8, i32 %14
  %17 = mul i32 %16, %3
  store i32 %17, i32* %10, align 4
  %18 = getelementptr inbounds i8, i8* %0, i64 4
  %19 = bitcast i8* %18 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = and i32 %20, 7
  %22 = icmp eq i32 %21, 0
  %23 = select i1 %22, i32 8, i32 %21
  %24 = mul i32 %23, %3
  store i32 %24, i32* %11, align 4
  %25 = getelementptr inbounds i8, i8* %0, i64 8
  %26 = bitcast i8* %25 to void (%struct._cmstransform_struct*, i8*, i8*, i32, i32, %struct.cmsStride*)**
  %27 = load void (%struct._cmstransform_struct*, i8*, i8*, i32, i32, %struct.cmsStride*)*, void (%struct._cmstransform_struct*, i8*, i8*, i32, i32, %struct.cmsStride*)** %26, align 8
  call void %27(%struct._cmstransform_struct* %6, i8* %1, i8* %2, i32 %3, i32 1, %struct.cmsStride* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cmsDoTransformStride(i8*, i8*, i8*, i32, i32) local_unnamed_addr #0 {
  %6 = alloca %struct.cmsStride, align 4
  %7 = bitcast i8* %0 to %struct._cmstransform_struct*
  %8 = bitcast %struct.cmsStride* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #7
  %9 = getelementptr inbounds %struct.cmsStride, %struct.cmsStride* %6, i64 0, i32 0
  %10 = getelementptr inbounds %struct.cmsStride, %struct.cmsStride* %6, i64 0, i32 1
  %11 = getelementptr inbounds %struct.cmsStride, %struct.cmsStride* %6, i64 0, i32 2
  %12 = getelementptr inbounds %struct.cmsStride, %struct.cmsStride* %6, i64 0, i32 3
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 4
  store i32 %4, i32* %11, align 4
  store i32 %4, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %0, i64 8
  %14 = bitcast i8* %13 to void (%struct._cmstransform_struct*, i8*, i8*, i32, i32, %struct.cmsStride*)**
  %15 = load void (%struct._cmstransform_struct*, i8*, i8*, i32, i32, %struct.cmsStride*)*, void (%struct._cmstransform_struct*, i8*, i8*, i32, i32, %struct.cmsStride*)** %14, align 8
  call void %15(%struct._cmstransform_struct* %7, i8* %1, i8* %2, i32 %3, i32 1, %struct.cmsStride* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cmsDoTransformLineStride(i8*, i8*, i8*, i32, i32, i32, i32, i32, i32) local_unnamed_addr #0 {
  %10 = alloca %struct.cmsStride, align 4
  %11 = bitcast i8* %0 to %struct._cmstransform_struct*
  %12 = bitcast %struct.cmsStride* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #7
  %13 = getelementptr inbounds %struct.cmsStride, %struct.cmsStride* %10, i64 0, i32 0
  %14 = getelementptr inbounds %struct.cmsStride, %struct.cmsStride* %10, i64 0, i32 1
  %15 = getelementptr inbounds %struct.cmsStride, %struct.cmsStride* %10, i64 0, i32 2
  %16 = getelementptr inbounds %struct.cmsStride, %struct.cmsStride* %10, i64 0, i32 3
  store i32 %5, i32* %13, align 4
  store i32 %6, i32* %14, align 4
  store i32 %7, i32* %15, align 4
  store i32 %8, i32* %16, align 4
  %17 = getelementptr inbounds i8, i8* %0, i64 8
  %18 = bitcast i8* %17 to void (%struct._cmstransform_struct*, i8*, i8*, i32, i32, %struct.cmsStride*)**
  %19 = load void (%struct._cmstransform_struct*, i8*, i8*, i32, i32, %struct.cmsStride*)*, void (%struct._cmstransform_struct*, i8*, i8*, i32, i32, %struct.cmsStride*)** %18, align 8
  call void %19(%struct._cmstransform_struct* %11, i8* %1, i8* %2, i32 %3, i32 %4, %struct.cmsStride* nonnull %10) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_cmsAllocTransformPluginChunk(%struct._cmsContext_struct* nocapture, %struct._cmsContext_struct* readonly) local_unnamed_addr #0 {
  %3 = alloca %struct._cmsTransformPluginChunkType, align 8
  %4 = icmp eq %struct._cmsContext_struct* %1, null
  br i1 %4, label %48, label %5

5:                                                ; preds = %2
  %6 = bitcast %struct._cmsTransformPluginChunkType* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  %7 = bitcast %struct._cmsTransformPluginChunkType* %3 to i64*
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %1, i64 0, i32 2, i64 13
  %9 = bitcast i8** %8 to %struct._cmsTransformPluginChunkType**
  %10 = load %struct._cmsTransformPluginChunkType*, %struct._cmsTransformPluginChunkType** %9, align 8
  %11 = getelementptr inbounds %struct._cmsTransformPluginChunkType, %struct._cmsTransformPluginChunkType* %10, i64 0, i32 0
  %12 = load %struct._cmsTransformCollection_st*, %struct._cmsTransformCollection_st** %11, align 8
  %13 = icmp eq %struct._cmsTransformCollection_st* %12, null
  %14 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %0, i64 0, i32 1
  %15 = load %struct._cmsSubAllocator*, %struct._cmsSubAllocator** %14, align 8
  br i1 %13, label %43, label %16

16:                                               ; preds = %5
  %17 = bitcast %struct._cmsTransformPluginChunkType* %3 to i8**
  br label %18

18:                                               ; preds = %37, %16
  %19 = phi %struct._cmsTransformCollection_st* [ null, %16 ], [ %38, %37 ]
  %20 = phi %struct._cmsSubAllocator* [ %15, %16 ], [ %42, %37 ]
  %21 = phi %struct._cmsTransformCollection_st* [ %12, %16 ], [ %40, %37 ]
  %22 = phi %struct._cmsTransformCollection_st* [ null, %16 ], [ %25, %37 ]
  %23 = bitcast %struct._cmsTransformCollection_st* %21 to i8*
  %24 = tail call i8* @_cmsSubAllocDup(%struct._cmsSubAllocator* %20, i8* nonnull %23, i32 24) #7
  %25 = bitcast i8* %24 to %struct._cmsTransformCollection_st*
  %26 = icmp eq i8* %24, null
  br i1 %26, label %47, label %27

27:                                               ; preds = %18
  %28 = getelementptr inbounds i8, i8* %24, i64 16
  %29 = bitcast i8* %28 to %struct._cmsTransformCollection_st**
  store %struct._cmsTransformCollection_st* null, %struct._cmsTransformCollection_st** %29, align 8
  %30 = icmp eq %struct._cmsTransformCollection_st* %22, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct._cmsTransformCollection_st, %struct._cmsTransformCollection_st* %22, i64 0, i32 2
  %33 = bitcast %struct._cmsTransformCollection_st** %32 to i8**
  store i8* %24, i8** %33, align 8
  br label %34

34:                                               ; preds = %31, %27
  %35 = icmp eq %struct._cmsTransformCollection_st* %19, null
  br i1 %35, label %36, label %37

36:                                               ; preds = %34
  store i8* %24, i8** %17, align 8
  br label %37

37:                                               ; preds = %36, %34
  %38 = phi %struct._cmsTransformCollection_st* [ %25, %36 ], [ %19, %34 ]
  %39 = getelementptr inbounds %struct._cmsTransformCollection_st, %struct._cmsTransformCollection_st* %21, i64 0, i32 2
  %40 = load %struct._cmsTransformCollection_st*, %struct._cmsTransformCollection_st** %39, align 8
  %41 = icmp eq %struct._cmsTransformCollection_st* %40, null
  %42 = load %struct._cmsSubAllocator*, %struct._cmsSubAllocator** %14, align 8
  br i1 %41, label %43, label %18

43:                                               ; preds = %37, %5
  %44 = phi %struct._cmsSubAllocator* [ %15, %5 ], [ %42, %37 ]
  %45 = call i8* @_cmsSubAllocDup(%struct._cmsSubAllocator* %44, i8* nonnull %6, i32 8) #7
  %46 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %0, i64 0, i32 2, i64 13
  store i8* %45, i8** %46, align 8
  br label %47

47:                                               ; preds = %18, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  br label %53

48:                                               ; preds = %2
  %49 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %0, i64 0, i32 1
  %50 = load %struct._cmsSubAllocator*, %struct._cmsSubAllocator** %49, align 8
  %51 = tail call i8* @_cmsSubAllocDup(%struct._cmsSubAllocator* %50, i8* bitcast (%struct._cmsTransformPluginChunkType* @_cmsAllocTransformPluginChunk.TransformPluginChunkType to i8*), i32 8) #7
  %52 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %0, i64 0, i32 2, i64 13
  store i8* %51, i8** %52, align 8
  br label %53

53:                                               ; preds = %48, %47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_cmsRegisterTransformPlugin(%struct._cmsContext_struct*, %struct._cmsPluginBaseStruct* readonly) local_unnamed_addr #0 {
  %3 = tail call i8* @_cmsContextGetClientChunk(%struct._cmsContext_struct* %0, i32 13) #7
  %4 = icmp eq %struct._cmsPluginBaseStruct* %1, null
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = bitcast i8* %3 to %struct._cmsTransformCollection_st**
  store %struct._cmsTransformCollection_st* null, %struct._cmsTransformCollection_st** %6, align 8
  br label %30

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct._cmsPluginBaseStruct, %struct._cmsPluginBaseStruct* %1, i64 1
  %9 = bitcast %struct._cmsPluginBaseStruct* %8 to i32 (void (%struct._cmstransform_struct*, i8*, i8*, i32, i32, %struct.cmsStride*)**, i8**, void (%struct._cmsContext_struct*, i8*)**, %struct._cmsPipeline_struct**, i32*, i32*, i32*)**
  %10 = load i32 (void (%struct._cmstransform_struct*, i8*, i8*, i32, i32, %struct.cmsStride*)**, i8**, void (%struct._cmsContext_struct*, i8*)**, %struct._cmsPipeline_struct**, i32*, i32*, i32*)*, i32 (void (%struct._cmstransform_struct*, i8*, i8*, i32, i32, %struct.cmsStride*)**, i8**, void (%struct._cmsContext_struct*, i8*)**, %struct._cmsPipeline_struct**, i32*, i32*, i32*)** %9, align 8
  %11 = icmp eq i32 (void (%struct._cmstransform_struct*, i8*, i8*, i32, i32, %struct.cmsStride*)**, i8**, void (%struct._cmsContext_struct*, i8*)**, %struct._cmsPipeline_struct**, i32*, i32*, i32*)* %10, null
  br i1 %11, label %30, label %12

12:                                               ; preds = %7
  %13 = tail call i8* @_cmsPluginMalloc(%struct._cmsContext_struct* %0, i32 24) #7
  %14 = icmp eq i8* %13, null
  br i1 %14, label %30, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct._cmsPluginBaseStruct, %struct._cmsPluginBaseStruct* %1, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp ult i32 %17, 2080
  %19 = getelementptr inbounds i8, i8* %13, i64 8
  %20 = bitcast i8* %19 to i32*
  %21 = zext i1 %18 to i32
  store i32 %21, i32* %20, align 8
  %22 = bitcast %struct._cmsPluginBaseStruct* %8 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast i8* %13 to i64*
  store i64 %23, i64* %24, align 8
  %25 = bitcast i8* %3 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds i8, i8* %13, i64 16
  %28 = bitcast i8* %27 to i64*
  store i64 %26, i64* %28, align 8
  %29 = bitcast i8* %3 to i8**
  store i8* %13, i8** %29, align 8
  br label %30

30:                                               ; preds = %12, %7, %15, %5
  %31 = phi i32 [ 1, %5 ], [ 1, %15 ], [ 0, %7 ], [ 0, %12 ]
  ret i32 %31
}

declare i8* @_cmsPluginMalloc(%struct._cmsContext_struct*, i32) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_cmsSetTransformUserData(%struct._cmstransform_struct* nocapture, i8*, void (%struct._cmsContext_struct*, i8*)*) local_unnamed_addr #3 {
  %4 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %0, i64 0, i32 21
  store i8* %1, i8** %4, align 8
  %5 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %0, i64 0, i32 22
  store void (%struct._cmsContext_struct*, i8*)* %2, void (%struct._cmsContext_struct*, i8*)** %5, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_cmsGetTransformUserData(%struct._cmstransform_struct* nocapture readonly) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %0, i64 0, i32 21
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_cmsGetTransformFormatters16(%struct._cmstransform_struct* nocapture readonly, i8* (%struct._cmstransform_struct*, i16*, i8*, i32)**, i8* (%struct._cmstransform_struct*, i16*, i8*, i32)**) local_unnamed_addr #5 {
  %4 = icmp eq i8* (%struct._cmstransform_struct*, i16*, i8*, i32)** %1, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %0, i64 0, i32 3
  %7 = bitcast i8* (%struct._cmstransform_struct*, i16*, i8*, i32)** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast i8* (%struct._cmstransform_struct*, i16*, i8*, i32)** %1 to i64*
  store i64 %8, i64* %9, align 8
  br label %10

10:                                               ; preds = %3, %5
  %11 = icmp eq i8* (%struct._cmstransform_struct*, i16*, i8*, i32)** %2, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %0, i64 0, i32 4
  %14 = bitcast i8* (%struct._cmstransform_struct*, i16*, i8*, i32)** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast i8* (%struct._cmstransform_struct*, i16*, i8*, i32)** %2 to i64*
  store i64 %15, i64* %16, align 8
  br label %17

17:                                               ; preds = %10, %12
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_cmsGetTransformFormattersFloat(%struct._cmstransform_struct* nocapture readonly, i8* (%struct._cmstransform_struct*, float*, i8*, i32)**, i8* (%struct._cmstransform_struct*, float*, i8*, i32)**) local_unnamed_addr #5 {
  %4 = icmp eq i8* (%struct._cmstransform_struct*, float*, i8*, i32)** %1, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %0, i64 0, i32 5
  %7 = bitcast i8* (%struct._cmstransform_struct*, float*, i8*, i32)** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast i8* (%struct._cmstransform_struct*, float*, i8*, i32)** %1 to i64*
  store i64 %8, i64* %9, align 8
  br label %10

10:                                               ; preds = %3, %5
  %11 = icmp eq i8* (%struct._cmstransform_struct*, float*, i8*, i32)** %2, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %0, i64 0, i32 6
  %14 = bitcast i8* (%struct._cmstransform_struct*, float*, i8*, i32)** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast i8* (%struct._cmstransform_struct*, float*, i8*, i32)** %2 to i64*
  store i64 %15, i64* %16, align 8
  br label %17

17:                                               ; preds = %10, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @cmsCreateExtendedTransform(%struct._cmsContext_struct*, i32, i8**, i32*, i32*, double*, i8*, i32, i32, i32, i32) local_unnamed_addr #0 {
  %12 = alloca i16, align 2
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  store i32 %8, i32* %13, align 4
  store i32 %9, i32* %14, align 4
  store i32 %10, i32* %15, align 4
  %16 = add i32 %1, -1
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds i32, i32* %4, i64 %17
  %19 = load i32, i32* %18, align 4
  %20 = and i32 %10, 512
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %11
  %23 = call fastcc %struct._cmstransform_struct* @AllocEmptyTransform(%struct._cmsContext_struct* %0, %struct._cmsPipeline_struct* null, i32 0, i32* nonnull %13, i32* nonnull %14, i32* nonnull %15)
  %24 = bitcast %struct._cmstransform_struct* %23 to i8*
  br label %335

25:                                               ; preds = %11
  %26 = and i32 %10, 4096
  %27 = icmp ne i32 %26, 0
  %28 = icmp eq i8* %6, null
  %29 = and i1 %28, %27
  br i1 %29, label %30, label %32

30:                                               ; preds = %25
  %31 = and i32 %10, -4097
  store i32 %31, i32* %15, align 4
  br label %32

32:                                               ; preds = %30, %25
  %33 = phi i32 [ %31, %30 ], [ %10, %25 ]
  %34 = tail call i32 @_cmsFormatterIsFloat(i32 %8) #7
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %32
  %37 = tail call i32 @_cmsFormatterIsFloat(i32 %9) #7
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %36, %32
  %40 = or i32 %33, 64
  store i32 %40, i32* %15, align 4
  br label %41

41:                                               ; preds = %36, %39
  %42 = phi i32 [ %33, %36 ], [ %40, %39 ]
  %43 = icmp eq i32 %1, 0
  br i1 %43, label %85, label %44

44:                                               ; preds = %41
  %45 = load i8*, i8** %2, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %85, label %47

47:                                               ; preds = %44
  %48 = tail call i32 @cmsGetColorSpace(i8* nonnull %45) #7
  %49 = icmp eq i32 %1, 1
  br label %50

50:                                               ; preds = %78, %47
  %51 = phi i32 [ %48, %47 ], [ %82, %78 ]
  %52 = phi i32 [ 0, %47 ], [ %83, %78 ]
  %53 = phi i32 [ %48, %47 ], [ %80, %78 ]
  %54 = zext i32 %52 to i64
  %55 = getelementptr inbounds i8*, i8** %2, i64 %54
  %56 = load i8*, i8** %55, align 8
  %57 = icmp ne i32 %53, 1482250784
  %58 = icmp ne i32 %53, 1281450528
  %59 = and i1 %57, %58
  %60 = icmp eq i8* %56, null
  br i1 %60, label %85, label %61

61:                                               ; preds = %50
  %62 = tail call i32 @cmsGetDeviceClass(i8* nonnull %56) #7
  %63 = icmp eq i32 %62, 1852662636
  br i1 %63, label %64, label %69

64:                                               ; preds = %61
  br i1 %49, label %67, label %65

65:                                               ; preds = %64
  %66 = tail call i32 @cmsGetPCS(i8* nonnull %56) #7
  br label %78

67:                                               ; preds = %64
  %68 = tail call i32 @cmsGetColorSpace(i8* nonnull %56) #7
  br label %78

69:                                               ; preds = %61
  %70 = icmp eq i32 %62, 1818848875
  %71 = or i1 %59, %70
  br i1 %71, label %72, label %75

72:                                               ; preds = %69
  %73 = tail call i32 @cmsGetColorSpace(i8* nonnull %56) #7
  %74 = tail call i32 @cmsGetPCS(i8* nonnull %56) #7
  br label %78

75:                                               ; preds = %69
  %76 = tail call i32 @cmsGetPCS(i8* nonnull %56) #7
  %77 = tail call i32 @cmsGetColorSpace(i8* nonnull %56) #7
  br label %78

78:                                               ; preds = %75, %72, %67, %65
  %79 = phi i32 [ %73, %72 ], [ %76, %75 ], [ 826494034, %67 ], [ 826494034, %65 ]
  %80 = phi i32 [ %74, %72 ], [ %77, %75 ], [ %68, %67 ], [ %66, %65 ]
  %81 = icmp eq i32 %52, 0
  %82 = select i1 %81, i32 %79, i32 %51
  %83 = add i32 %52, 1
  %84 = icmp eq i32 %83, %1
  br i1 %84, label %86, label %50

85:                                               ; preds = %50, %41, %44
  tail call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %0, i32 4, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0)) #7
  br label %335

86:                                               ; preds = %78
  %87 = lshr i32 %8, 16
  %88 = and i32 %87, 31
  %89 = tail call i32 @_cmsLCMScolorSpace(i32 %82) #7
  %90 = icmp eq i32 %88, 0
  %91 = icmp eq i32 %88, %89
  %92 = or i1 %90, %91
  br i1 %92, label %102, label %93

93:                                               ; preds = %86
  %94 = icmp eq i32 %88, 30
  %95 = icmp eq i32 %89, 10
  %96 = and i1 %95, %94
  br i1 %96, label %102, label %97

97:                                               ; preds = %93
  %98 = icmp ne i32 %88, 10
  %99 = icmp ne i32 %89, 30
  %100 = or i1 %99, %98
  br i1 %100, label %101, label %102

101:                                              ; preds = %97
  tail call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %0, i32 9, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0)) #7
  br label %335

102:                                              ; preds = %93, %86, %97
  %103 = lshr i32 %9, 16
  %104 = and i32 %103, 31
  %105 = tail call i32 @_cmsLCMScolorSpace(i32 %80) #7
  %106 = icmp eq i32 %104, 0
  %107 = icmp eq i32 %104, %105
  %108 = or i1 %106, %107
  br i1 %108, label %118, label %109

109:                                              ; preds = %102
  %110 = icmp eq i32 %104, 30
  %111 = icmp eq i32 %105, 10
  %112 = and i1 %111, %110
  br i1 %112, label %118, label %113

113:                                              ; preds = %109
  %114 = icmp ne i32 %104, 10
  %115 = icmp ne i32 %105, 30
  %116 = or i1 %115, %114
  br i1 %116, label %117, label %118

117:                                              ; preds = %113
  tail call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %0, i32 9, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0)) #7
  br label %335

118:                                              ; preds = %109, %102, %113
  %119 = tail call %struct._cmsPipeline_struct* @_cmsLinkProfiles(%struct._cmsContext_struct* %0, i32 %1, i32* %4, i8** %2, i32* %3, double* %5, i32 %42) #7
  %120 = icmp eq %struct._cmsPipeline_struct* %119, null
  br i1 %120, label %121, label %122

121:                                              ; preds = %118
  tail call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %0, i32 13, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0)) #7
  br label %335

122:                                              ; preds = %118
  %123 = tail call i32 @cmsChannelsOf(i32 %82) #7
  %124 = tail call i32 @cmsPipelineInputChannels(%struct._cmsPipeline_struct* nonnull %119) #7
  %125 = icmp eq i32 %123, %124
  br i1 %125, label %126, label %130

126:                                              ; preds = %122
  %127 = tail call i32 @cmsChannelsOf(i32 %80) #7
  %128 = tail call i32 @cmsPipelineOutputChannels(%struct._cmsPipeline_struct* nonnull %119) #7
  %129 = icmp eq i32 %127, %128
  br i1 %129, label %131, label %130

130:                                              ; preds = %126, %122
  tail call void @cmsPipelineFree(%struct._cmsPipeline_struct* nonnull %119) #7
  tail call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %0, i32 13, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.4, i64 0, i64 0)) #7
  br label %335

131:                                              ; preds = %126
  %132 = call fastcc %struct._cmstransform_struct* @AllocEmptyTransform(%struct._cmsContext_struct* %0, %struct._cmsPipeline_struct* nonnull %119, i32 %19, i32* nonnull %13, i32* nonnull %14, i32* nonnull %15)
  %133 = icmp eq %struct._cmstransform_struct* %132, null
  br i1 %133, label %335, label %134

134:                                              ; preds = %131
  %135 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %132, i64 0, i32 12
  store i32 %82, i32* %135, align 8
  %136 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %132, i64 0, i32 13
  store i32 %80, i32* %136, align 4
  %137 = load i32, i32* %18, align 4
  %138 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %132, i64 0, i32 19
  store i32 %137, i32* %138, align 8
  %139 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %132, i64 0, i32 14
  %140 = load i8*, i8** %2, align 8
  %141 = call i8* @cmsReadTag(i8* %140, i32 2004119668) #7
  %142 = icmp eq i8* %141, null
  br i1 %142, label %143, label %146

143:                                              ; preds = %134
  %144 = bitcast %struct.cmsCIEXYZ* %139 to <2 x double>*
  store <2 x double> <double 0x3FEEDAB9F559B3D0, double 1.000000e+00>, <2 x double>* %144, align 8
  %145 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %132, i64 0, i32 14, i32 2
  store double 0x3FEA6594AF4F0D84, double* %145, align 8
  br label %180

146:                                              ; preds = %134
  %147 = bitcast i8* %141 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = bitcast %struct.cmsCIEXYZ* %139 to i64*
  store i64 %148, i64* %149, align 8
  %150 = getelementptr inbounds i8, i8* %141, i64 8
  %151 = bitcast i8* %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %132, i64 0, i32 14, i32 1
  %154 = bitcast double* %153 to i64*
  store i64 %152, i64* %154, align 8
  %155 = getelementptr inbounds i8, i8* %141, i64 16
  %156 = bitcast i8* %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %132, i64 0, i32 14, i32 2
  %159 = bitcast double* %158 to i64*
  store i64 %157, i64* %159, align 8
  %160 = bitcast i64 %148 to double
  %161 = fcmp ogt double %160, 2.000000e+00
  br i1 %161, label %162, label %180

162:                                              ; preds = %146
  %163 = bitcast i64 %157 to double
  %164 = bitcast i64 %152 to double
  %165 = insertelement <2 x double> undef, double %160, i32 0
  %166 = insertelement <2 x double> %165, double %164, i32 1
  %167 = bitcast %struct.cmsCIEXYZ* %139 to <2 x double>*
  br label %168

168:                                              ; preds = %175, %162
  %169 = phi double [ %177, %175 ], [ %163, %162 ]
  %170 = phi <2 x double> [ %176, %175 ], [ %166, %162 ]
  %171 = extractelement <2 x double> %170, i32 1
  %172 = fcmp ogt double %171, 2.000000e+00
  %173 = fcmp ogt double %169, 2.000000e+00
  %174 = and i1 %173, %172
  br i1 %174, label %175, label %180

175:                                              ; preds = %168
  %176 = fdiv <2 x double> %170, <double 1.000000e+01, double 1.000000e+01>
  store <2 x double> %176, <2 x double>* %167, align 8
  %177 = fdiv double %169, 1.000000e+01
  store double %177, double* %158, align 8
  %178 = extractelement <2 x double> %176, i32 0
  %179 = fcmp ogt double %178, 2.000000e+00
  br i1 %179, label %168, label %180

180:                                              ; preds = %168, %175, %143, %146
  %181 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %132, i64 0, i32 15
  %182 = getelementptr inbounds i8*, i8** %2, i64 %17
  %183 = load i8*, i8** %182, align 8
  %184 = call i8* @cmsReadTag(i8* %183, i32 2004119668) #7
  %185 = icmp eq i8* %184, null
  br i1 %185, label %186, label %189

186:                                              ; preds = %180
  %187 = bitcast %struct.cmsCIEXYZ* %181 to <2 x double>*
  store <2 x double> <double 0x3FEEDAB9F559B3D0, double 1.000000e+00>, <2 x double>* %187, align 8
  %188 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %132, i64 0, i32 15, i32 2
  store double 0x3FEA6594AF4F0D84, double* %188, align 8
  br label %223

189:                                              ; preds = %180
  %190 = bitcast i8* %184 to i64*
  %191 = load i64, i64* %190, align 8
  %192 = bitcast %struct.cmsCIEXYZ* %181 to i64*
  store i64 %191, i64* %192, align 8
  %193 = getelementptr inbounds i8, i8* %184, i64 8
  %194 = bitcast i8* %193 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %132, i64 0, i32 15, i32 1
  %197 = bitcast double* %196 to i64*
  store i64 %195, i64* %197, align 8
  %198 = getelementptr inbounds i8, i8* %184, i64 16
  %199 = bitcast i8* %198 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %132, i64 0, i32 15, i32 2
  %202 = bitcast double* %201 to i64*
  store i64 %200, i64* %202, align 8
  %203 = bitcast i64 %191 to double
  %204 = fcmp ogt double %203, 2.000000e+00
  br i1 %204, label %205, label %223

205:                                              ; preds = %189
  %206 = bitcast i64 %200 to double
  %207 = bitcast i64 %195 to double
  %208 = insertelement <2 x double> undef, double %203, i32 0
  %209 = insertelement <2 x double> %208, double %207, i32 1
  %210 = bitcast %struct.cmsCIEXYZ* %181 to <2 x double>*
  br label %211

211:                                              ; preds = %218, %205
  %212 = phi double [ %220, %218 ], [ %206, %205 ]
  %213 = phi <2 x double> [ %219, %218 ], [ %209, %205 ]
  %214 = extractelement <2 x double> %213, i32 1
  %215 = fcmp ogt double %214, 2.000000e+00
  %216 = fcmp ogt double %212, 2.000000e+00
  %217 = and i1 %216, %215
  br i1 %217, label %218, label %223

218:                                              ; preds = %211
  %219 = fdiv <2 x double> %213, <double 1.000000e+01, double 1.000000e+01>
  store <2 x double> %219, <2 x double>* %210, align 8
  %220 = fdiv double %212, 1.000000e+01
  store double %220, double* %201, align 8
  %221 = extractelement <2 x double> %219, i32 0
  %222 = fcmp ogt double %221, 2.000000e+00
  br i1 %222, label %211, label %223

223:                                              ; preds = %211, %218, %186, %189
  br i1 %28, label %231, label %224

224:                                              ; preds = %223
  %225 = load i32, i32* %15, align 4
  %226 = and i32 %225, 4096
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %231, label %228

228:                                              ; preds = %224
  %229 = call %struct._cmsPipeline_struct* @_cmsCreateGamutCheckPipeline(%struct._cmsContext_struct* %0, i8** %2, i32* %3, i32* %4, double* %5, i32 %7, i8* nonnull %6) #7
  %230 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %132, i64 0, i32 9
  store %struct._cmsPipeline_struct* %229, %struct._cmsPipeline_struct** %230, align 8
  br label %231

231:                                              ; preds = %224, %223, %228
  %232 = load i8*, i8** %2, align 8
  %233 = call i32 @cmsIsTag(i8* %232, i32 1668051572) #7
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %241, label %235

235:                                              ; preds = %231
  %236 = load i8*, i8** %2, align 8
  %237 = call i8* @cmsReadTag(i8* %236, i32 1668051572) #7
  %238 = bitcast i8* %237 to %struct._cms_NAMEDCOLORLIST_struct*
  %239 = call %struct._cms_NAMEDCOLORLIST_struct* @cmsDupNamedColorList(%struct._cms_NAMEDCOLORLIST_struct* %238) #7
  %240 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %132, i64 0, i32 10
  store %struct._cms_NAMEDCOLORLIST_struct* %239, %struct._cms_NAMEDCOLORLIST_struct** %240, align 8
  br label %241

241:                                              ; preds = %231, %235
  %242 = load i8*, i8** %182, align 8
  %243 = call i32 @cmsGetDeviceClass(i8* %242) #7
  %244 = icmp eq i32 %243, 1818848875
  %245 = load i8*, i8** %182, align 8
  br i1 %244, label %246, label %255

246:                                              ; preds = %241
  %247 = call i32 @cmsIsTag(i8* %245, i32 1668050804) #7
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %264, label %249

249:                                              ; preds = %246
  %250 = load i8*, i8** %182, align 8
  %251 = call i8* @cmsReadTag(i8* %250, i32 1668050804) #7
  %252 = bitcast i8* %251 to %struct._cms_NAMEDCOLORLIST_struct*
  %253 = call %struct._cms_NAMEDCOLORLIST_struct* @cmsDupNamedColorList(%struct._cms_NAMEDCOLORLIST_struct* %252) #7
  %254 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %132, i64 0, i32 11
  store %struct._cms_NAMEDCOLORLIST_struct* %253, %struct._cms_NAMEDCOLORLIST_struct** %254, align 8
  br label %264

255:                                              ; preds = %241
  %256 = call i32 @cmsIsTag(i8* %245, i32 1668051572) #7
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %264, label %258

258:                                              ; preds = %255
  %259 = load i8*, i8** %182, align 8
  %260 = call i8* @cmsReadTag(i8* %259, i32 1668051572) #7
  %261 = bitcast i8* %260 to %struct._cms_NAMEDCOLORLIST_struct*
  %262 = call %struct._cms_NAMEDCOLORLIST_struct* @cmsDupNamedColorList(%struct._cms_NAMEDCOLORLIST_struct* %261) #7
  %263 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %132, i64 0, i32 11
  store %struct._cms_NAMEDCOLORLIST_struct* %262, %struct._cms_NAMEDCOLORLIST_struct** %263, align 8
  br label %264

264:                                              ; preds = %246, %255, %258, %249
  %265 = load i32, i32* %15, align 4
  %266 = trunc i32 %265 to i8
  %267 = icmp slt i8 %266, 0
  br i1 %267, label %268, label %271

268:                                              ; preds = %264
  %269 = call %struct.cmsSEQ* @_cmsCompileProfileSequence(%struct._cmsContext_struct* %0, i32 %1, i8** %2) #7
  %270 = load i32, i32* %15, align 4
  br label %271

271:                                              ; preds = %264, %268
  %272 = phi i32 [ %270, %268 ], [ %265, %264 ]
  %273 = phi %struct.cmsSEQ* [ %269, %268 ], [ null, %264 ]
  %274 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %132, i64 0, i32 16
  store %struct.cmsSEQ* %273, %struct.cmsSEQ** %274, align 8
  %275 = and i32 %272, 64
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %277, label %333

277:                                              ; preds = %271
  %278 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %132, i64 0, i32 7
  %279 = bitcast %struct._cmsCACHE* %278 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %279, i8 0, i64 32, i1 false)
  %280 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %132, i64 0, i32 9
  %281 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %280, align 8
  %282 = icmp eq %struct._cmsPipeline_struct* %281, null
  br i1 %282, label %324, label %283

283:                                              ; preds = %277
  %284 = getelementptr inbounds %struct._cmsCACHE, %struct._cmsCACHE* %278, i64 0, i32 0, i64 0
  %285 = bitcast i16* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %285) #7
  store i16 -21846, i16* %12, align 2
  %286 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %281, i64 0, i32 4
  %287 = load void (i16*, i16*, i8*)*, void (i16*, i16*, i8*)** %286, align 8
  %288 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %281, i64 0, i32 3
  %289 = load i8*, i8** %288, align 8
  call void %287(i16* %284, i16* nonnull %12, i8* %289) #7
  %290 = load i16, i16* %12, align 2
  %291 = icmp eq i16 %290, 0
  br i1 %291, label %315, label %292

292:                                              ; preds = %283
  %293 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %132, i64 0, i32 20
  %294 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %293, align 8
  %295 = call i8* @_cmsContextGetClientChunk(%struct._cmsContext_struct* %294, i32 2) #7
  %296 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %132, i64 0, i32 8
  %297 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %296, align 8
  %298 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %297, i64 0, i32 2
  %299 = load i32, i32* %298, align 4
  %300 = icmp eq i32 %299, 0
  br i1 %300, label %323, label %301

301:                                              ; preds = %292
  %302 = bitcast i8* %295 to [16 x i16]*
  br label %303

303:                                              ; preds = %303, %301
  %304 = phi i16 [ 0, %301 ], [ %309, %303 ]
  %305 = zext i16 %304 to i64
  %306 = getelementptr inbounds [16 x i16], [16 x i16]* %302, i64 0, i64 %305
  %307 = load i16, i16* %306, align 2
  %308 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %132, i64 0, i32 7, i32 1, i64 %305
  store i16 %307, i16* %308, align 2
  %309 = add i16 %304, 1
  %310 = zext i16 %309 to i32
  %311 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %296, align 8
  %312 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %311, i64 0, i32 2
  %313 = load i32, i32* %312, align 4
  %314 = icmp ugt i32 %313, %310
  br i1 %314, label %303, label %323

315:                                              ; preds = %283
  %316 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %132, i64 0, i32 7, i32 1, i64 0
  %317 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %132, i64 0, i32 8
  %318 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %317, align 8
  %319 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %318, i64 0, i32 4
  %320 = load void (i16*, i16*, i8*)*, void (i16*, i16*, i8*)** %319, align 8
  %321 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %318, i64 0, i32 3
  %322 = load i8*, i8** %321, align 8
  call void %320(i16* %284, i16* %316, i8* %322) #7
  br label %323

323:                                              ; preds = %303, %292, %315
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %285) #7
  br label %333

324:                                              ; preds = %277
  %325 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %132, i64 0, i32 8
  %326 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %325, align 8
  %327 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %326, i64 0, i32 4
  %328 = load void (i16*, i16*, i8*)*, void (i16*, i16*, i8*)** %327, align 8
  %329 = getelementptr inbounds %struct._cmsCACHE, %struct._cmsCACHE* %278, i64 0, i32 0, i64 0
  %330 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %132, i64 0, i32 7, i32 1, i64 0
  %331 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %326, i64 0, i32 3
  %332 = load i8*, i8** %331, align 8
  call void %328(i16* %329, i16* %330, i8* %332) #7
  br label %333

333:                                              ; preds = %271, %323, %324
  %334 = bitcast %struct._cmstransform_struct* %132 to i8*
  br label %335

335:                                              ; preds = %131, %333, %130, %121, %117, %101, %85, %22
  %336 = phi i8* [ %24, %22 ], [ null, %121 ], [ null, %130 ], [ %334, %333 ], [ null, %117 ], [ null, %101 ], [ null, %85 ], [ null, %131 ]
  ret i8* %336
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %struct._cmstransform_struct* @AllocEmptyTransform(%struct._cmsContext_struct*, %struct._cmsPipeline_struct*, i32, i32*, i32*, i32*) unnamed_addr #0 {
  %7 = tail call i8* @_cmsContextGetClientChunk(%struct._cmsContext_struct* %0, i32 13) #7
  %8 = tail call i8* @_cmsMallocZero(%struct._cmsContext_struct* %0, i32 264) #7
  %9 = bitcast i8* %8 to %struct._cmstransform_struct*
  %10 = icmp eq i8* %8, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %6
  tail call void @cmsPipelineFree(%struct._cmsPipeline_struct* %1) #7
  br label %178

12:                                               ; preds = %6
  %13 = getelementptr inbounds i8, i8* %8, i64 112
  %14 = bitcast i8* %13 to %struct._cmsPipeline_struct**
  store %struct._cmsPipeline_struct* %1, %struct._cmsPipeline_struct** %14, align 8
  %15 = icmp eq %struct._cmsPipeline_struct* %1, null
  br i1 %15, label %78, label %16

16:                                               ; preds = %12
  %17 = load i32, i32* %5, align 4
  %18 = and i32 %17, 256
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %76

20:                                               ; preds = %16
  %21 = bitcast i8* %7 to %struct._cmsTransformCollection_st**
  %22 = load %struct._cmsTransformCollection_st*, %struct._cmsTransformCollection_st** %21, align 8
  %23 = icmp eq %struct._cmsTransformCollection_st* %22, null
  br i1 %23, label %76, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds i8, i8* %8, i64 8
  %26 = bitcast i8* %25 to void (%struct._cmstransform_struct*, i8*, i8*, i32, i32, %struct.cmsStride*)**
  %27 = getelementptr inbounds i8, i8* %8, i64 240
  %28 = bitcast i8* %27 to i8**
  %29 = getelementptr inbounds i8, i8* %8, i64 248
  %30 = bitcast i8* %29 to void (%struct._cmsContext_struct*, i8*)**
  br label %31

31:                                               ; preds = %24, %72
  %32 = phi %struct._cmsTransformCollection_st* [ %22, %24 ], [ %74, %72 ]
  %33 = getelementptr inbounds %struct._cmsTransformCollection_st, %struct._cmsTransformCollection_st* %32, i64 0, i32 0
  %34 = load i32 (void (%struct._cmstransform_struct*, i8*, i8*, i32, i32, %struct.cmsStride*)**, i8**, void (%struct._cmsContext_struct*, i8*)**, %struct._cmsPipeline_struct**, i32*, i32*, i32*)*, i32 (void (%struct._cmstransform_struct*, i8*, i8*, i32, i32, %struct.cmsStride*)**, i8**, void (%struct._cmsContext_struct*, i8*)**, %struct._cmsPipeline_struct**, i32*, i32*, i32*)** %33, align 8
  %35 = tail call i32 %34(void (%struct._cmstransform_struct*, i8*, i8*, i32, i32, %struct.cmsStride*)** %26, i8** %28, void (%struct._cmsContext_struct*, i8*)** %30, %struct._cmsPipeline_struct** %14, i32* %3, i32* %4, i32* %5) #7
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %72, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds i8, i8* %8, i64 232
  %39 = bitcast i8* %38 to %struct._cmsContext_struct**
  store %struct._cmsContext_struct* %0, %struct._cmsContext_struct** %39, align 8
  %40 = load i32, i32* %3, align 4
  %41 = bitcast i8* %8 to i32*
  store i32 %40, i32* %41, align 8
  %42 = load i32, i32* %4, align 4
  %43 = getelementptr inbounds i8, i8* %8, i64 4
  %44 = bitcast i8* %43 to i32*
  store i32 %42, i32* %44, align 4
  %45 = load i32, i32* %5, align 4
  %46 = getelementptr inbounds i8, i8* %8, i64 208
  %47 = bitcast i8* %46 to i32*
  store i32 %45, i32* %47, align 8
  %48 = load i32, i32* %3, align 4
  %49 = tail call i8* (%struct._cmstransform_struct*, i16*, i8*, i32)* @_cmsGetFormatter(%struct._cmsContext_struct* %0, i32 %48, i32 0, i32 0) #7
  %50 = getelementptr inbounds i8, i8* %8, i64 16
  %51 = bitcast i8* %50 to i8* (%struct._cmstransform_struct*, i16*, i8*, i32)**
  store i8* (%struct._cmstransform_struct*, i16*, i8*, i32)* %49, i8* (%struct._cmstransform_struct*, i16*, i8*, i32)** %51, align 8
  %52 = load i32, i32* %4, align 4
  %53 = tail call i8* (%struct._cmstransform_struct*, i16*, i8*, i32)* @_cmsGetFormatter(%struct._cmsContext_struct* %0, i32 %52, i32 1, i32 0) #7
  %54 = getelementptr inbounds i8, i8* %8, i64 24
  %55 = bitcast i8* %54 to i8* (%struct._cmstransform_struct*, i16*, i8*, i32)**
  store i8* (%struct._cmstransform_struct*, i16*, i8*, i32)* %53, i8* (%struct._cmstransform_struct*, i16*, i8*, i32)** %55, align 8
  %56 = load i32, i32* %3, align 4
  %57 = tail call i8* (%struct._cmstransform_struct*, i16*, i8*, i32)* @_cmsGetFormatter(%struct._cmsContext_struct* %0, i32 %56, i32 0, i32 1) #7
  %58 = getelementptr inbounds i8, i8* %8, i64 32
  %59 = bitcast i8* %58 to i8* (%struct._cmstransform_struct*, i16*, i8*, i32)**
  store i8* (%struct._cmstransform_struct*, i16*, i8*, i32)* %57, i8* (%struct._cmstransform_struct*, i16*, i8*, i32)** %59, align 8
  %60 = load i32, i32* %4, align 4
  %61 = tail call i8* (%struct._cmstransform_struct*, i16*, i8*, i32)* @_cmsGetFormatter(%struct._cmsContext_struct* %0, i32 %60, i32 1, i32 1) #7
  %62 = getelementptr inbounds i8, i8* %8, i64 40
  %63 = bitcast i8* %62 to i8* (%struct._cmstransform_struct*, i16*, i8*, i32)**
  store i8* (%struct._cmstransform_struct*, i16*, i8*, i32)* %61, i8* (%struct._cmstransform_struct*, i16*, i8*, i32)** %63, align 8
  %64 = getelementptr inbounds %struct._cmsTransformCollection_st, %struct._cmsTransformCollection_st* %32, i64 0, i32 1
  %65 = load i32, i32* %64, align 8
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %178, label %67

67:                                               ; preds = %37
  %68 = bitcast i8* %25 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds i8, i8* %8, i64 256
  %71 = bitcast i8* %70 to i64*
  store i64 %69, i64* %71, align 8
  store void (%struct._cmstransform_struct*, i8*, i8*, i32, i32, %struct.cmsStride*)* @_cmsTransform2toTransformAdaptor, void (%struct._cmstransform_struct*, i8*, i8*, i32, i32, %struct.cmsStride*)** %26, align 8
  br label %178

72:                                               ; preds = %31
  %73 = getelementptr inbounds %struct._cmsTransformCollection_st, %struct._cmsTransformCollection_st* %32, i64 0, i32 2
  %74 = load %struct._cmsTransformCollection_st*, %struct._cmsTransformCollection_st** %73, align 8
  %75 = icmp eq %struct._cmsTransformCollection_st* %74, null
  br i1 %75, label %76, label %31

76:                                               ; preds = %72, %20, %16
  %77 = tail call i32 @_cmsOptimizePipeline(%struct._cmsContext_struct* %0, %struct._cmsPipeline_struct** %14, i32 %2, i32* %3, i32* %4, i32* %5) #7
  br label %78

78:                                               ; preds = %12, %76
  %79 = load i32, i32* %3, align 4
  %80 = tail call i32 @_cmsFormatterIsFloat(i32 %79) #7
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %112, label %82

82:                                               ; preds = %78
  %83 = load i32, i32* %4, align 4
  %84 = tail call i32 @_cmsFormatterIsFloat(i32 %83) #7
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %112, label %86

86:                                               ; preds = %82
  %87 = load i32, i32* %3, align 4
  %88 = tail call i8* (%struct._cmstransform_struct*, i16*, i8*, i32)* @_cmsGetFormatter(%struct._cmsContext_struct* %0, i32 %87, i32 0, i32 1) #7
  %89 = getelementptr inbounds i8, i8* %8, i64 32
  %90 = bitcast i8* %89 to i8* (%struct._cmstransform_struct*, float*, i8*, i32)**
  %91 = bitcast i8* %89 to i8* (%struct._cmstransform_struct*, i16*, i8*, i32)**
  store i8* (%struct._cmstransform_struct*, i16*, i8*, i32)* %88, i8* (%struct._cmstransform_struct*, i16*, i8*, i32)** %91, align 8
  %92 = load i32, i32* %4, align 4
  %93 = tail call i8* (%struct._cmstransform_struct*, i16*, i8*, i32)* @_cmsGetFormatter(%struct._cmsContext_struct* %0, i32 %92, i32 1, i32 1) #7
  %94 = getelementptr inbounds i8, i8* %8, i64 40
  %95 = bitcast i8* %94 to i8* (%struct._cmstransform_struct*, i16*, i8*, i32)**
  store i8* (%struct._cmstransform_struct*, i16*, i8*, i32)* %93, i8* (%struct._cmstransform_struct*, i16*, i8*, i32)** %95, align 8
  %96 = load i32, i32* %5, align 4
  %97 = or i32 %96, 33554432
  store i32 %97, i32* %5, align 4
  %98 = load i8* (%struct._cmstransform_struct*, float*, i8*, i32)*, i8* (%struct._cmstransform_struct*, float*, i8*, i32)** %90, align 8
  %99 = icmp eq i8* (%struct._cmstransform_struct*, float*, i8*, i32)* %98, null
  br i1 %99, label %104, label %100

100:                                              ; preds = %86
  %101 = bitcast i8* %94 to i8* (%struct._cmstransform_struct*, float*, i8*, i32)**
  %102 = load i8* (%struct._cmstransform_struct*, float*, i8*, i32)*, i8* (%struct._cmstransform_struct*, float*, i8*, i32)** %101, align 8
  %103 = icmp eq i8* (%struct._cmstransform_struct*, float*, i8*, i32)* %102, null
  br i1 %103, label %104, label %105

104:                                              ; preds = %100, %86
  tail call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %0, i32 8, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.7, i64 0, i64 0)) #7
  tail call void @cmsDeleteTransform(i8* nonnull %8)
  br label %178

105:                                              ; preds = %100
  %106 = and i32 %96, 512
  %107 = icmp eq i32 %106, 0
  %108 = getelementptr inbounds i8, i8* %8, i64 8
  %109 = bitcast i8* %108 to void (%struct._cmstransform_struct*, i8*, i8*, i32, i32, %struct.cmsStride*)**
  br i1 %107, label %111, label %110

110:                                              ; preds = %105
  store void (%struct._cmstransform_struct*, i8*, i8*, i32, i32, %struct.cmsStride*)* @NullFloatXFORM, void (%struct._cmstransform_struct*, i8*, i8*, i32, i32, %struct.cmsStride*)** %109, align 8
  br label %165

111:                                              ; preds = %105
  store void (%struct._cmstransform_struct*, i8*, i8*, i32, i32, %struct.cmsStride*)* @FloatXFORM, void (%struct._cmstransform_struct*, i8*, i8*, i32, i32, %struct.cmsStride*)** %109, align 8
  br label %165

112:                                              ; preds = %82, %78
  %113 = load i32, i32* %3, align 4
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %122

115:                                              ; preds = %112
  %116 = load i32, i32* %4, align 4
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %122

118:                                              ; preds = %115
  %119 = getelementptr inbounds i8, i8* %8, i64 16
  call void @llvm.memset.p0i8.i64(i8* align 8 %119, i8 0, i64 16, i1 false)
  %120 = load i32, i32* %5, align 4
  %121 = or i32 %120, 33554432
  br label %143

122:                                              ; preds = %115, %112
  %123 = tail call i8* (%struct._cmstransform_struct*, i16*, i8*, i32)* @_cmsGetFormatter(%struct._cmsContext_struct* %0, i32 %113, i32 0, i32 0) #7
  %124 = getelementptr inbounds i8, i8* %8, i64 16
  %125 = bitcast i8* %124 to i8* (%struct._cmstransform_struct*, i16*, i8*, i32)**
  store i8* (%struct._cmstransform_struct*, i16*, i8*, i32)* %123, i8* (%struct._cmstransform_struct*, i16*, i8*, i32)** %125, align 8
  %126 = load i32, i32* %4, align 4
  %127 = tail call i8* (%struct._cmstransform_struct*, i16*, i8*, i32)* @_cmsGetFormatter(%struct._cmsContext_struct* %0, i32 %126, i32 1, i32 0) #7
  %128 = getelementptr inbounds i8, i8* %8, i64 24
  %129 = bitcast i8* %128 to i8* (%struct._cmstransform_struct*, i16*, i8*, i32)**
  store i8* (%struct._cmstransform_struct*, i16*, i8*, i32)* %127, i8* (%struct._cmstransform_struct*, i16*, i8*, i32)** %129, align 8
  %130 = load i8* (%struct._cmstransform_struct*, i16*, i8*, i32)*, i8* (%struct._cmstransform_struct*, i16*, i8*, i32)** %125, align 8
  %131 = icmp eq i8* (%struct._cmstransform_struct*, i16*, i8*, i32)* %130, null
  %132 = icmp eq i8* (%struct._cmstransform_struct*, i16*, i8*, i32)* %127, null
  %133 = or i1 %132, %131
  br i1 %133, label %134, label %135

134:                                              ; preds = %122
  tail call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %0, i32 8, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.7, i64 0, i64 0)) #7
  tail call void @cmsDeleteTransform(i8* nonnull %8)
  br label %178

135:                                              ; preds = %122
  %136 = bitcast i8* %8 to i32*
  %137 = load i32, i32* %136, align 8
  %138 = and i32 %137, 7
  %139 = icmp eq i32 %138, 1
  %140 = load i32, i32* %5, align 4
  br i1 %139, label %145, label %141

141:                                              ; preds = %135
  %142 = or i32 %140, 33554432
  br label %143

143:                                              ; preds = %118, %141
  %144 = phi i32 [ %142, %141 ], [ %121, %118 ]
  store i32 %144, i32* %5, align 4
  br label %145

145:                                              ; preds = %143, %135
  %146 = phi i32 [ %140, %135 ], [ %144, %143 ]
  %147 = and i32 %146, 512
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %152, label %149

149:                                              ; preds = %145
  %150 = getelementptr inbounds i8, i8* %8, i64 8
  %151 = bitcast i8* %150 to void (%struct._cmstransform_struct*, i8*, i8*, i32, i32, %struct.cmsStride*)**
  store void (%struct._cmstransform_struct*, i8*, i8*, i32, i32, %struct.cmsStride*)* @NullXFORM, void (%struct._cmstransform_struct*, i8*, i8*, i32, i32, %struct.cmsStride*)** %151, align 8
  br label %165

152:                                              ; preds = %145
  %153 = and i32 %146, 64
  %154 = icmp eq i32 %153, 0
  %155 = and i32 %146, 4096
  %156 = icmp ne i32 %155, 0
  %157 = getelementptr inbounds i8, i8* %8, i64 8
  %158 = bitcast i8* %157 to void (%struct._cmstransform_struct*, i8*, i8*, i32, i32, %struct.cmsStride*)**
  br i1 %154, label %162, label %159

159:                                              ; preds = %152
  br i1 %156, label %160, label %161

160:                                              ; preds = %159
  store void (%struct._cmstransform_struct*, i8*, i8*, i32, i32, %struct.cmsStride*)* @PrecalculatedXFORMGamutCheck, void (%struct._cmstransform_struct*, i8*, i8*, i32, i32, %struct.cmsStride*)** %158, align 8
  br label %165

161:                                              ; preds = %159
  store void (%struct._cmstransform_struct*, i8*, i8*, i32, i32, %struct.cmsStride*)* @PrecalculatedXFORM, void (%struct._cmstransform_struct*, i8*, i8*, i32, i32, %struct.cmsStride*)** %158, align 8
  br label %165

162:                                              ; preds = %152
  br i1 %156, label %163, label %164

163:                                              ; preds = %162
  store void (%struct._cmstransform_struct*, i8*, i8*, i32, i32, %struct.cmsStride*)* @CachedXFORMGamutCheck, void (%struct._cmstransform_struct*, i8*, i8*, i32, i32, %struct.cmsStride*)** %158, align 8
  br label %165

164:                                              ; preds = %162
  store void (%struct._cmstransform_struct*, i8*, i8*, i32, i32, %struct.cmsStride*)* @CachedXFORM, void (%struct._cmstransform_struct*, i8*, i8*, i32, i32, %struct.cmsStride*)** %158, align 8
  br label %165

165:                                              ; preds = %149, %163, %164, %160, %161, %110, %111
  %166 = load i32, i32* %3, align 4
  %167 = bitcast i8* %8 to i32*
  store i32 %166, i32* %167, align 8
  %168 = load i32, i32* %4, align 4
  %169 = getelementptr inbounds i8, i8* %8, i64 4
  %170 = bitcast i8* %169 to i32*
  store i32 %168, i32* %170, align 4
  %171 = load i32, i32* %5, align 4
  %172 = getelementptr inbounds i8, i8* %8, i64 208
  %173 = bitcast i8* %172 to i32*
  store i32 %171, i32* %173, align 8
  %174 = getelementptr inbounds i8, i8* %8, i64 232
  %175 = bitcast i8* %174 to %struct._cmsContext_struct**
  store %struct._cmsContext_struct* %0, %struct._cmsContext_struct** %175, align 8
  %176 = getelementptr inbounds i8, i8* %8, i64 240
  %177 = bitcast i8* %176 to i8**
  store i8* null, i8** %177, align 8
  br label %178

178:                                              ; preds = %134, %67, %37, %165, %104, %11
  %179 = phi %struct._cmstransform_struct* [ null, %104 ], [ %9, %165 ], [ null, %11 ], [ %9, %37 ], [ %9, %67 ], [ null, %134 ]
  ret %struct._cmstransform_struct* %179
}

declare i32 @_cmsFormatterIsFloat(i32) local_unnamed_addr #2

declare void @cmsSignalError(%struct._cmsContext_struct*, i32, i8*, ...) local_unnamed_addr #2

declare %struct._cmsPipeline_struct* @_cmsLinkProfiles(%struct._cmsContext_struct*, i32, i32*, i8**, i32*, double*, i32) local_unnamed_addr #2

declare i32 @cmsChannelsOf(i32) local_unnamed_addr #2

declare i32 @cmsPipelineInputChannels(%struct._cmsPipeline_struct*) local_unnamed_addr #2

declare i32 @cmsPipelineOutputChannels(%struct._cmsPipeline_struct*) local_unnamed_addr #2

declare i8* @cmsReadTag(i8*, i32) local_unnamed_addr #2

declare %struct._cmsPipeline_struct* @_cmsCreateGamutCheckPipeline(%struct._cmsContext_struct*, i8**, i32*, i32*, double*, i32, i8*) local_unnamed_addr #2

declare i32 @cmsIsTag(i8*, i32) local_unnamed_addr #2

declare %struct._cms_NAMEDCOLORLIST_struct* @cmsDupNamedColorList(%struct._cms_NAMEDCOLORLIST_struct*) local_unnamed_addr #2

declare i32 @cmsGetDeviceClass(i8*) local_unnamed_addr #2

declare %struct.cmsSEQ* @_cmsCompileProfileSequence(%struct._cmsContext_struct*, i32, i8**) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i8* @cmsCreateMultiprofileTransformTHR(%struct._cmsContext_struct*, i8**, i32, i32, i32, i32, i32) local_unnamed_addr #0 {
  %8 = alloca [256 x i32], align 16
  %9 = alloca [256 x i32], align 16
  %10 = alloca [256 x double], align 16
  %11 = bitcast [256 x i32]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %11) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 1024, i1 false)
  %12 = bitcast [256 x i32]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %12) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -86, i64 1024, i1 false)
  %13 = bitcast [256 x double]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %13) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 -1, i64 2048, i1 false)
  %14 = add i32 %2, -1
  %15 = icmp ugt i32 %14, 254
  br i1 %15, label %20, label %16

16:                                               ; preds = %7
  %17 = lshr i32 %6, 13
  %18 = and i32 %17, 1
  %19 = zext i32 %2 to i64
  br label %21

20:                                               ; preds = %7
  tail call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %0, i32 2, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.5, i64 0, i64 0), i32 %2) #7
  br label %37

21:                                               ; preds = %21, %16
  %22 = phi i64 [ 0, %16 ], [ %30, %21 ]
  %23 = getelementptr inbounds [256 x i32], [256 x i32]* %8, i64 0, i64 %22
  store i32 %18, i32* %23, align 4
  %24 = getelementptr inbounds [256 x i32], [256 x i32]* %9, i64 0, i64 %22
  store i32 %5, i32* %24, align 4
  %25 = tail call i8* @_cmsContextGetClientChunk(%struct._cmsContext_struct* %0, i32 3) #7
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds [256 x double], [256 x double]* %10, i64 0, i64 %22
  %29 = bitcast double* %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = add nuw nsw i64 %22, 1
  %31 = icmp eq i64 %30, %19
  br i1 %31, label %32, label %21

32:                                               ; preds = %21
  %33 = getelementptr inbounds [256 x i32], [256 x i32]* %8, i64 0, i64 0
  %34 = getelementptr inbounds [256 x i32], [256 x i32]* %9, i64 0, i64 0
  %35 = getelementptr inbounds [256 x double], [256 x double]* %10, i64 0, i64 0
  %36 = call i8* @cmsCreateExtendedTransform(%struct._cmsContext_struct* %0, i32 %2, i8** %1, i32* nonnull %33, i32* nonnull %34, double* nonnull %35, i8* null, i32 0, i32 %3, i32 %4, i32 %6)
  br label %37

37:                                               ; preds = %32, %20
  %38 = phi i8* [ null, %20 ], [ %36, %32 ]
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %13) #7
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %12) #7
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %11) #7
  ret i8* %38
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @cmsCreateMultiprofileTransform(i8**, i32, i32, i32, i32, i32) local_unnamed_addr #0 {
  %7 = alloca [256 x i32], align 16
  %8 = alloca [256 x i32], align 16
  %9 = alloca [256 x double], align 16
  %10 = add i32 %1, -1
  %11 = icmp ugt i32 %10, 254
  br i1 %11, label %12, label %13

12:                                               ; preds = %6
  tail call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* null, i32 2, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.5, i64 0, i64 0), i32 %1) #7
  br label %38

13:                                               ; preds = %6
  %14 = load i8*, i8** %0, align 8
  %15 = tail call %struct._cmsContext_struct* @cmsGetProfileContextID(i8* %14) #7
  %16 = bitcast [256 x i32]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %16) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %16, i8 -86, i64 1024, i1 false) #7
  %17 = bitcast [256 x i32]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %17) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %17, i8 -86, i64 1024, i1 false) #7
  %18 = bitcast [256 x double]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %18) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %18, i8 -1, i64 2048, i1 false) #7
  %19 = lshr i32 %5, 13
  %20 = and i32 %19, 1
  %21 = zext i32 %1 to i64
  br label %22

22:                                               ; preds = %22, %13
  %23 = phi i64 [ 0, %13 ], [ %31, %22 ]
  %24 = getelementptr inbounds [256 x i32], [256 x i32]* %7, i64 0, i64 %23
  store i32 %20, i32* %24, align 4
  %25 = getelementptr inbounds [256 x i32], [256 x i32]* %8, i64 0, i64 %23
  store i32 %4, i32* %25, align 4
  %26 = tail call i8* @_cmsContextGetClientChunk(%struct._cmsContext_struct* %15, i32 3) #7
  %27 = bitcast i8* %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds [256 x double], [256 x double]* %9, i64 0, i64 %23
  %30 = bitcast double* %29 to i64*
  store i64 %28, i64* %30, align 8
  %31 = add nuw nsw i64 %23, 1
  %32 = icmp eq i64 %31, %21
  br i1 %32, label %33, label %22

33:                                               ; preds = %22
  %34 = getelementptr inbounds [256 x i32], [256 x i32]* %7, i64 0, i64 0
  %35 = getelementptr inbounds [256 x i32], [256 x i32]* %8, i64 0, i64 0
  %36 = getelementptr inbounds [256 x double], [256 x double]* %9, i64 0, i64 0
  %37 = call i8* @cmsCreateExtendedTransform(%struct._cmsContext_struct* %15, i32 %1, i8** %0, i32* nonnull %34, i32* nonnull %35, double* nonnull %36, i8* null, i32 0, i32 %2, i32 %3, i32 %5) #7
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %18) #7
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %17) #7
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %16) #7
  br label %38

38:                                               ; preds = %33, %12
  %39 = phi i8* [ null, %12 ], [ %37, %33 ]
  ret i8* %39
}

declare %struct._cmsContext_struct* @cmsGetProfileContextID(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i8* @cmsCreateTransformTHR(%struct._cmsContext_struct*, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %8 = alloca [256 x i32], align 16
  %9 = alloca [256 x i32], align 16
  %10 = alloca [256 x double], align 16
  %11 = alloca [2 x i8*], align 16
  %12 = bitcast [2 x i8*]* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #7
  %13 = getelementptr inbounds [2 x i8*], [2 x i8*]* %11, i64 0, i64 0
  %14 = getelementptr inbounds [2 x i8*], [2 x i8*]* %11, i64 0, i64 1
  store i8* %1, i8** %13, align 16
  store i8* %3, i8** %14, align 8
  %15 = icmp eq i8* %3, null
  %16 = select i1 %15, i32 1, i32 2
  %17 = bitcast [256 x i32]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %17) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %17, i8 -86, i64 1024, i1 false) #7
  %18 = bitcast [256 x i32]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %18) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %18, i8 -86, i64 1024, i1 false) #7
  %19 = bitcast [256 x double]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %19) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %19, i8 -1, i64 2048, i1 false) #7
  %20 = add nsw i32 %16, -1
  %21 = icmp ugt i32 %20, 254
  br i1 %21, label %26, label %22

22:                                               ; preds = %7
  %23 = lshr i32 %6, 13
  %24 = and i32 %23, 1
  %25 = zext i32 %16 to i64
  br label %27

26:                                               ; preds = %7
  tail call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %0, i32 2, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.5, i64 0, i64 0), i32 %16) #7
  br label %43

27:                                               ; preds = %27, %22
  %28 = phi i64 [ 0, %22 ], [ %36, %27 ]
  %29 = getelementptr inbounds [256 x i32], [256 x i32]* %8, i64 0, i64 %28
  store i32 %24, i32* %29, align 4
  %30 = getelementptr inbounds [256 x i32], [256 x i32]* %9, i64 0, i64 %28
  store i32 %5, i32* %30, align 4
  %31 = tail call i8* @_cmsContextGetClientChunk(%struct._cmsContext_struct* %0, i32 3) #7
  %32 = bitcast i8* %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds [256 x double], [256 x double]* %10, i64 0, i64 %28
  %35 = bitcast double* %34 to i64*
  store i64 %33, i64* %35, align 8
  %36 = add nuw nsw i64 %28, 1
  %37 = icmp eq i64 %36, %25
  br i1 %37, label %38, label %27

38:                                               ; preds = %27
  %39 = getelementptr inbounds [256 x i32], [256 x i32]* %8, i64 0, i64 0
  %40 = getelementptr inbounds [256 x i32], [256 x i32]* %9, i64 0, i64 0
  %41 = getelementptr inbounds [256 x double], [256 x double]* %10, i64 0, i64 0
  %42 = call i8* @cmsCreateExtendedTransform(%struct._cmsContext_struct* %0, i32 %16, i8** nonnull %13, i32* nonnull %39, i32* nonnull %40, double* nonnull %41, i8* null, i32 0, i32 %2, i32 %4, i32 %6) #7
  br label %43

43:                                               ; preds = %26, %38
  %44 = phi i8* [ null, %26 ], [ %42, %38 ]
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %19) #7
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %18) #7
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %17) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #7
  ret i8* %44
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @cmsCreateTransform(i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %7 = tail call %struct._cmsContext_struct* @cmsGetProfileContextID(i8* %0) #7
  %8 = tail call i8* @cmsCreateTransformTHR(%struct._cmsContext_struct* %7, i8* %0, i32 %1, i8* %2, i32 %3, i32 %4, i32 %5)
  ret i8* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @cmsCreateProofingTransformTHR(%struct._cmsContext_struct*, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %10 = alloca [4 x i8*], align 16
  %11 = alloca [4 x i32], align 16
  %12 = alloca [4 x i32], align 16
  %13 = alloca [4 x double], align 16
  %14 = bitcast [4 x i8*]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #7
  %15 = getelementptr inbounds [4 x i8*], [4 x i8*]* %10, i64 0, i64 0
  %16 = getelementptr inbounds [4 x i8*], [4 x i8*]* %10, i64 0, i64 1
  %17 = getelementptr inbounds [4 x i8*], [4 x i8*]* %10, i64 0, i64 2
  %18 = getelementptr inbounds [4 x i8*], [4 x i8*]* %10, i64 0, i64 3
  %19 = bitcast [4 x i32]* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #7
  %20 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 0
  %21 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 1
  %22 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 2
  %23 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 3
  %24 = bitcast [4 x i32]* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #7
  %25 = getelementptr inbounds [4 x i32], [4 x i32]* %12, i64 0, i64 0
  %26 = getelementptr inbounds [4 x i32], [4 x i32]* %12, i64 0, i64 1
  %27 = getelementptr inbounds [4 x i32], [4 x i32]* %12, i64 0, i64 2
  %28 = getelementptr inbounds [4 x i32], [4 x i32]* %12, i64 0, i64 3
  %29 = bitcast [4 x double]* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #7
  %30 = getelementptr inbounds [4 x double], [4 x double]* %13, i64 0, i64 1
  %31 = getelementptr inbounds [4 x double], [4 x double]* %13, i64 0, i64 2
  %32 = getelementptr inbounds [4 x double], [4 x double]* %13, i64 0, i64 3
  %33 = lshr i32 %8, 13
  %34 = and i32 %33, 1
  %35 = bitcast [4 x double]* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %35, i8 -1, i64 32, i1 false)
  store i8* %1, i8** %15, align 16
  store i8* %5, i8** %16, align 8
  store i8* %5, i8** %17, align 16
  store i8* %3, i8** %18, align 8
  store i32 %6, i32* %20, align 16
  store i32 %6, i32* %21, align 4
  store i32 1, i32* %22, align 8
  store i32 %7, i32* %23, align 4
  store i32 %34, i32* %25, align 16
  store i32 %34, i32* %26, align 4
  store i32 0, i32* %27, align 8
  store i32 0, i32* %28, align 4
  %36 = tail call i8* @_cmsContextGetClientChunk(%struct._cmsContext_struct* %0, i32 3) #7
  %37 = bitcast i8* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast double* %32 to i64*
  store i64 %38, i64* %39, align 8
  %40 = bitcast double* %31 to i64*
  store i64 %38, i64* %40, align 16
  %41 = bitcast double* %30 to i64*
  store i64 %38, i64* %41, align 8
  %42 = bitcast [4 x double]* %13 to i64*
  store i64 %38, i64* %42, align 16
  %43 = and i32 %8, 20480
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %9
  %46 = tail call i8* @cmsCreateTransformTHR(%struct._cmsContext_struct* %0, i8* %1, i32 %2, i8* %3, i32 %4, i32 %6, i32 %8)
  br label %50

47:                                               ; preds = %9
  %48 = getelementptr inbounds [4 x double], [4 x double]* %13, i64 0, i64 0
  %49 = call i8* @cmsCreateExtendedTransform(%struct._cmsContext_struct* %0, i32 4, i8** nonnull %15, i32* nonnull %25, i32* nonnull %20, double* nonnull %48, i8* %5, i32 1, i32 %2, i32 %4, i32 %8)
  br label %50

50:                                               ; preds = %47, %45
  %51 = phi i8* [ %49, %47 ], [ %46, %45 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #7
  ret i8* %51
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @cmsCreateProofingTransform(i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %9 = tail call %struct._cmsContext_struct* @cmsGetProfileContextID(i8* %0) #7
  %10 = tail call i8* @cmsCreateProofingTransformTHR(%struct._cmsContext_struct* %9, i8* %0, i32 %1, i8* %2, i32 %3, i8* %4, i32 %5, i32 %6, i32 %7)
  ret i8* %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct._cmsContext_struct* @cmsGetTransformContextID(i8* readonly) local_unnamed_addr #4 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds i8, i8* %0, i64 232
  %5 = bitcast i8* %4 to %struct._cmsContext_struct**
  %6 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %5, align 8
  br label %7

7:                                                ; preds = %1, %3
  %8 = phi %struct._cmsContext_struct* [ %6, %3 ], [ null, %1 ]
  ret %struct._cmsContext_struct* %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @cmsGetTransformInputFormat(i8* readonly) local_unnamed_addr #4 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = bitcast i8* %0 to i32*
  %5 = load i32, i32* %4, align 8
  br label %6

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 0, %1 ]
  ret i32 %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @cmsGetTransformOutputFormat(i8* readonly) local_unnamed_addr #4 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds i8, i8* %0, i64 4
  %5 = bitcast i8* %4 to i32*
  %6 = load i32, i32* %5, align 4
  br label %7

7:                                                ; preds = %1, %3
  %8 = phi i32 [ %6, %3 ], [ 0, %1 ]
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @cmsChangeBuffersFormat(i8* nocapture, i32, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds i8, i8* %0, i64 208
  %5 = bitcast i8* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 33554432
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds i8, i8* %0, i64 232
  %10 = bitcast i8* %9 to %struct._cmsContext_struct**
  %11 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %10, align 8
  br i1 %8, label %12, label %13

12:                                               ; preds = %3
  tail call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %11, i32 13, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str.6, i64 0, i64 0)) #7
  br label %30

13:                                               ; preds = %3
  %14 = tail call i8* (%struct._cmstransform_struct*, i16*, i8*, i32)* @_cmsGetFormatter(%struct._cmsContext_struct* %11, i32 %1, i32 0, i32 0) #7
  %15 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %10, align 8
  %16 = tail call i8* (%struct._cmstransform_struct*, i16*, i8*, i32)* @_cmsGetFormatter(%struct._cmsContext_struct* %15, i32 %2, i32 1, i32 0) #7
  %17 = icmp eq i8* (%struct._cmstransform_struct*, i16*, i8*, i32)* %14, null
  %18 = icmp eq i8* (%struct._cmstransform_struct*, i16*, i8*, i32)* %16, null
  %19 = or i1 %17, %18
  br i1 %19, label %20, label %22

20:                                               ; preds = %13
  %21 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %10, align 8
  tail call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %21, i32 8, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.7, i64 0, i64 0)) #7
  br label %30

22:                                               ; preds = %13
  %23 = bitcast i8* %0 to i32*
  store i32 %1, i32* %23, align 8
  %24 = getelementptr inbounds i8, i8* %0, i64 4
  %25 = bitcast i8* %24 to i32*
  store i32 %2, i32* %25, align 4
  %26 = getelementptr inbounds i8, i8* %0, i64 16
  %27 = bitcast i8* %26 to i8* (%struct._cmstransform_struct*, i16*, i8*, i32)**
  store i8* (%struct._cmstransform_struct*, i16*, i8*, i32)* %14, i8* (%struct._cmstransform_struct*, i16*, i8*, i32)** %27, align 8
  %28 = getelementptr inbounds i8, i8* %0, i64 24
  %29 = bitcast i8* %28 to i8* (%struct._cmstransform_struct*, i16*, i8*, i32)**
  store i8* (%struct._cmstransform_struct*, i16*, i8*, i32)* %16, i8* (%struct._cmstransform_struct*, i16*, i8*, i32)** %29, align 8
  br label %30

30:                                               ; preds = %22, %20, %12
  %31 = phi i32 [ 0, %20 ], [ 1, %22 ], [ 0, %12 ]
  ret i32 %31
}

declare i8* (%struct._cmstransform_struct*, i16*, i8*, i32)* @_cmsGetFormatter(%struct._cmsContext_struct*, i32, i32, i32) local_unnamed_addr #2

declare i8* @_cmsMallocZero(%struct._cmsContext_struct*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_cmsTransform2toTransformAdaptor(%struct._cmstransform_struct*, i8*, i8*, i32, i32, %struct.cmsStride*) #0 {
  tail call void @_cmsHandleExtraChannels(%struct._cmstransform_struct* %0, i8* %1, i8* %2, i32 %3, i32 %4, %struct.cmsStride* %5) #7
  %7 = icmp eq i32 %4, 0
  br i1 %7, label %29, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %0, i64 0, i32 23
  %10 = getelementptr inbounds %struct.cmsStride, %struct.cmsStride* %5, i64 0, i32 2
  %11 = getelementptr inbounds %struct.cmsStride, %struct.cmsStride* %5, i64 0, i32 0
  %12 = getelementptr inbounds %struct.cmsStride, %struct.cmsStride* %5, i64 0, i32 1
  br label %13

13:                                               ; preds = %13, %8
  %14 = phi i32 [ 0, %8 ], [ %27, %13 ]
  %15 = phi i32 [ 0, %8 ], [ %24, %13 ]
  %16 = phi i32 [ 0, %8 ], [ %26, %13 ]
  %17 = zext i32 %15 to i64
  %18 = getelementptr inbounds i8, i8* %1, i64 %17
  %19 = zext i32 %16 to i64
  %20 = getelementptr inbounds i8, i8* %2, i64 %19
  %21 = load void (%struct._cmstransform_struct*, i8*, i8*, i32, i32)*, void (%struct._cmstransform_struct*, i8*, i8*, i32, i32)** %9, align 8
  %22 = load i32, i32* %10, align 4
  tail call void %21(%struct._cmstransform_struct* %0, i8* %18, i8* %20, i32 %3, i32 %22) #7
  %23 = load i32, i32* %11, align 4
  %24 = add i32 %23, %15
  %25 = load i32, i32* %12, align 4
  %26 = add i32 %25, %16
  %27 = add nuw i32 %14, 1
  %28 = icmp eq i32 %27, %4
  br i1 %28, label %29, label %13

29:                                               ; preds = %13, %6
  ret void
}

declare i32 @_cmsOptimizePipeline(%struct._cmsContext_struct*, %struct._cmsPipeline_struct**, i32, i32*, i32*, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @NullFloatXFORM(%struct._cmstransform_struct*, i8*, i8*, i32, i32, %struct.cmsStride*) #0 {
  %7 = alloca [16 x float], align 16
  %8 = bitcast [16 x float]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %8) #7
  tail call void @_cmsHandleExtraChannels(%struct._cmstransform_struct* %0, i8* %1, i8* %2, i32 %3, i32 %4, %struct.cmsStride* %5) #7
  %9 = getelementptr inbounds [16 x float], [16 x float]* %7, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 0, i64 64, i1 false)
  %10 = icmp eq i32 %4, 0
  br i1 %10, label %47, label %11

11:                                               ; preds = %6
  %12 = icmp eq i32 %3, 0
  %13 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %0, i64 0, i32 5
  %14 = getelementptr inbounds %struct.cmsStride, %struct.cmsStride* %5, i64 0, i32 2
  %15 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %0, i64 0, i32 6
  %16 = getelementptr inbounds %struct.cmsStride, %struct.cmsStride* %5, i64 0, i32 3
  %17 = getelementptr inbounds %struct.cmsStride, %struct.cmsStride* %5, i64 0, i32 0
  %18 = getelementptr inbounds %struct.cmsStride, %struct.cmsStride* %5, i64 0, i32 1
  br label %19

19:                                               ; preds = %40, %11
  %20 = phi i32 [ 0, %11 ], [ %44, %40 ]
  %21 = phi i32 [ 0, %11 ], [ %42, %40 ]
  %22 = phi i32 [ 0, %11 ], [ %45, %40 ]
  br i1 %12, label %40, label %23

23:                                               ; preds = %19
  %24 = zext i32 %20 to i64
  %25 = getelementptr inbounds i8, i8* %2, i64 %24
  %26 = zext i32 %21 to i64
  %27 = getelementptr inbounds i8, i8* %1, i64 %26
  br label %28

28:                                               ; preds = %28, %23
  %29 = phi i32 [ %38, %28 ], [ 0, %23 ]
  %30 = phi i8* [ %37, %28 ], [ %25, %23 ]
  %31 = phi i8* [ %34, %28 ], [ %27, %23 ]
  %32 = load i8* (%struct._cmstransform_struct*, float*, i8*, i32)*, i8* (%struct._cmstransform_struct*, float*, i8*, i32)** %13, align 8
  %33 = load i32, i32* %14, align 4
  %34 = call i8* %32(%struct._cmstransform_struct* %0, float* nonnull %9, i8* %31, i32 %33) #7
  %35 = load i8* (%struct._cmstransform_struct*, float*, i8*, i32)*, i8* (%struct._cmstransform_struct*, float*, i8*, i32)** %15, align 8
  %36 = load i32, i32* %16, align 4
  %37 = call i8* %35(%struct._cmstransform_struct* %0, float* nonnull %9, i8* %30, i32 %36) #7
  %38 = add nuw i32 %29, 1
  %39 = icmp eq i32 %38, %3
  br i1 %39, label %40, label %28

40:                                               ; preds = %28, %19
  %41 = load i32, i32* %17, align 4
  %42 = add i32 %41, %21
  %43 = load i32, i32* %18, align 4
  %44 = add i32 %43, %20
  %45 = add nuw i32 %22, 1
  %46 = icmp eq i32 %45, %4
  br i1 %46, label %47, label %19

47:                                               ; preds = %40, %6
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %8) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @FloatXFORM(%struct._cmstransform_struct*, i8*, i8*, i32, i32, %struct.cmsStride*) #0 {
  %7 = alloca [16 x float], align 16
  %8 = alloca [16 x float], align 16
  %9 = alloca float, align 4
  %10 = bitcast [16 x float]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %10) #7
  %11 = bitcast [16 x float]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %11) #7
  %12 = bitcast float* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #7
  store float 0xFFFFFFFFE0000000, float* %9, align 4
  tail call void @_cmsHandleExtraChannels(%struct._cmstransform_struct* %0, i8* %1, i8* %2, i32 %3, i32 %4, %struct.cmsStride* %5) #7
  %13 = getelementptr inbounds [16 x float], [16 x float]* %7, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 0, i64 64, i1 false)
  %14 = getelementptr inbounds [16 x float], [16 x float]* %8, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 0, i64 64, i1 false)
  %15 = icmp eq i32 %4, 0
  br i1 %15, label %72, label %16

16:                                               ; preds = %6
  %17 = icmp eq i32 %3, 0
  %18 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %0, i64 0, i32 5
  %19 = getelementptr inbounds %struct.cmsStride, %struct.cmsStride* %5, i64 0, i32 2
  %20 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %0, i64 0, i32 9
  %21 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %0, i64 0, i32 8
  %22 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %0, i64 0, i32 6
  %23 = getelementptr inbounds %struct.cmsStride, %struct.cmsStride* %5, i64 0, i32 3
  %24 = getelementptr inbounds %struct.cmsStride, %struct.cmsStride* %5, i64 0, i32 0
  %25 = getelementptr inbounds %struct.cmsStride, %struct.cmsStride* %5, i64 0, i32 1
  %26 = getelementptr inbounds [16 x float], [16 x float]* %8, i64 0, i64 4
  %27 = getelementptr inbounds [16 x float], [16 x float]* %8, i64 0, i64 8
  %28 = getelementptr inbounds [16 x float], [16 x float]* %8, i64 0, i64 12
  %29 = bitcast [16 x float]* %8 to <4 x float>*
  %30 = bitcast float* %26 to <4 x float>*
  %31 = bitcast float* %27 to <4 x float>*
  %32 = bitcast float* %28 to <4 x float>*
  br label %33

33:                                               ; preds = %65, %16
  %34 = phi i32 [ 0, %16 ], [ %69, %65 ]
  %35 = phi i32 [ 0, %16 ], [ %67, %65 ]
  %36 = phi i32 [ 0, %16 ], [ %70, %65 ]
  br i1 %17, label %65, label %37

37:                                               ; preds = %33
  %38 = zext i32 %34 to i64
  %39 = getelementptr inbounds i8, i8* %2, i64 %38
  %40 = zext i32 %35 to i64
  %41 = getelementptr inbounds i8, i8* %1, i64 %40
  br label %42

42:                                               ; preds = %59, %37
  %43 = phi i32 [ %63, %59 ], [ 0, %37 ]
  %44 = phi i8* [ %62, %59 ], [ %39, %37 ]
  %45 = phi i8* [ %48, %59 ], [ %41, %37 ]
  %46 = load i8* (%struct._cmstransform_struct*, float*, i8*, i32)*, i8* (%struct._cmstransform_struct*, float*, i8*, i32)** %18, align 8
  %47 = load i32, i32* %19, align 4
  %48 = call i8* %46(%struct._cmstransform_struct* %0, float* nonnull %13, i8* %45, i32 %47) #7
  %49 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %20, align 8
  %50 = icmp eq %struct._cmsPipeline_struct* %49, null
  br i1 %50, label %57, label %51

51:                                               ; preds = %42
  call void @cmsPipelineEvalFloat(float* nonnull %13, float* nonnull %9, %struct._cmsPipeline_struct* nonnull %49) #7
  %52 = load float, float* %9, align 4
  %53 = fcmp ogt float %52, 0.000000e+00
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %29, align 16
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %30, align 16
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %31, align 16
  store <4 x float> <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>, <4 x float>* %32, align 16
  br label %59

55:                                               ; preds = %51
  %56 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %21, align 8
  call void @cmsPipelineEvalFloat(float* nonnull %13, float* nonnull %14, %struct._cmsPipeline_struct* %56) #7
  br label %59

57:                                               ; preds = %42
  %58 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %21, align 8
  call void @cmsPipelineEvalFloat(float* nonnull %13, float* nonnull %14, %struct._cmsPipeline_struct* %58) #7
  br label %59

59:                                               ; preds = %54, %55, %57
  %60 = load i8* (%struct._cmstransform_struct*, float*, i8*, i32)*, i8* (%struct._cmstransform_struct*, float*, i8*, i32)** %22, align 8
  %61 = load i32, i32* %23, align 4
  %62 = call i8* %60(%struct._cmstransform_struct* %0, float* nonnull %14, i8* %44, i32 %61) #7
  %63 = add nuw i32 %43, 1
  %64 = icmp eq i32 %63, %3
  br i1 %64, label %65, label %42

65:                                               ; preds = %59, %33
  %66 = load i32, i32* %24, align 4
  %67 = add i32 %66, %35
  %68 = load i32, i32* %25, align 4
  %69 = add i32 %68, %34
  %70 = add nuw i32 %36, 1
  %71 = icmp eq i32 %70, %4
  br i1 %71, label %72, label %33

72:                                               ; preds = %65, %6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #7
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %11) #7
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %10) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @NullXFORM(%struct._cmstransform_struct*, i8*, i8*, i32, i32, %struct.cmsStride*) #0 {
  %7 = alloca [16 x i16], align 16
  %8 = bitcast [16 x i16]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #7
  %9 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 0
  tail call void @_cmsHandleExtraChannels(%struct._cmstransform_struct* %0, i8* %1, i8* %2, i32 %3, i32 %4, %struct.cmsStride* %5) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 0, i64 32, i1 false)
  %10 = icmp eq i32 %4, 0
  br i1 %10, label %47, label %11

11:                                               ; preds = %6
  %12 = icmp eq i32 %3, 0
  %13 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %0, i64 0, i32 3
  %14 = getelementptr inbounds %struct.cmsStride, %struct.cmsStride* %5, i64 0, i32 2
  %15 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %0, i64 0, i32 4
  %16 = getelementptr inbounds %struct.cmsStride, %struct.cmsStride* %5, i64 0, i32 3
  %17 = getelementptr inbounds %struct.cmsStride, %struct.cmsStride* %5, i64 0, i32 0
  %18 = getelementptr inbounds %struct.cmsStride, %struct.cmsStride* %5, i64 0, i32 1
  br label %19

19:                                               ; preds = %40, %11
  %20 = phi i32 [ 0, %11 ], [ %44, %40 ]
  %21 = phi i32 [ 0, %11 ], [ %42, %40 ]
  %22 = phi i32 [ 0, %11 ], [ %45, %40 ]
  br i1 %12, label %40, label %23

23:                                               ; preds = %19
  %24 = zext i32 %20 to i64
  %25 = getelementptr inbounds i8, i8* %2, i64 %24
  %26 = zext i32 %21 to i64
  %27 = getelementptr inbounds i8, i8* %1, i64 %26
  br label %28

28:                                               ; preds = %28, %23
  %29 = phi i32 [ %38, %28 ], [ 0, %23 ]
  %30 = phi i8* [ %37, %28 ], [ %25, %23 ]
  %31 = phi i8* [ %34, %28 ], [ %27, %23 ]
  %32 = load i8* (%struct._cmstransform_struct*, i16*, i8*, i32)*, i8* (%struct._cmstransform_struct*, i16*, i8*, i32)** %13, align 8
  %33 = load i32, i32* %14, align 4
  %34 = call i8* %32(%struct._cmstransform_struct* %0, i16* nonnull %9, i8* %31, i32 %33) #7
  %35 = load i8* (%struct._cmstransform_struct*, i16*, i8*, i32)*, i8* (%struct._cmstransform_struct*, i16*, i8*, i32)** %15, align 8
  %36 = load i32, i32* %16, align 4
  %37 = call i8* %35(%struct._cmstransform_struct* %0, i16* nonnull %9, i8* %30, i32 %36) #7
  %38 = add nuw i32 %29, 1
  %39 = icmp eq i32 %38, %3
  br i1 %39, label %40, label %28

40:                                               ; preds = %28, %19
  %41 = load i32, i32* %17, align 4
  %42 = add i32 %41, %21
  %43 = load i32, i32* %18, align 4
  %44 = add i32 %43, %20
  %45 = add nuw i32 %22, 1
  %46 = icmp eq i32 %45, %4
  br i1 %46, label %47, label %19

47:                                               ; preds = %40, %6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @PrecalculatedXFORMGamutCheck(%struct._cmstransform_struct*, i8*, i8*, i32, i32, %struct.cmsStride*) #0 {
  %7 = alloca i16, align 2
  %8 = alloca [16 x i16], align 16
  %9 = alloca [16 x i16], align 16
  %10 = bitcast [16 x i16]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #7
  %11 = getelementptr inbounds [16 x i16], [16 x i16]* %8, i64 0, i64 0
  %12 = bitcast [16 x i16]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #7
  %13 = getelementptr inbounds [16 x i16], [16 x i16]* %9, i64 0, i64 0
  tail call void @_cmsHandleExtraChannels(%struct._cmstransform_struct* %0, i8* %1, i8* %2, i32 %3, i32 %4, %struct.cmsStride* %5) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 0, i64 32, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 0, i64 32, i1 false)
  %14 = icmp eq i32 %4, 0
  br i1 %14, label %88, label %15

15:                                               ; preds = %6
  %16 = icmp eq i32 %3, 0
  %17 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %0, i64 0, i32 3
  %18 = getelementptr inbounds %struct.cmsStride, %struct.cmsStride* %5, i64 0, i32 2
  %19 = bitcast i16* %7 to i8*
  %20 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %0, i64 0, i32 9
  %21 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %0, i64 0, i32 20
  %22 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %0, i64 0, i32 8
  %23 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %0, i64 0, i32 4
  %24 = getelementptr inbounds %struct.cmsStride, %struct.cmsStride* %5, i64 0, i32 3
  %25 = getelementptr inbounds %struct.cmsStride, %struct.cmsStride* %5, i64 0, i32 0
  %26 = getelementptr inbounds %struct.cmsStride, %struct.cmsStride* %5, i64 0, i32 1
  br label %27

27:                                               ; preds = %81, %15
  %28 = phi i32 [ 0, %15 ], [ %85, %81 ]
  %29 = phi i32 [ 0, %15 ], [ %83, %81 ]
  %30 = phi i32 [ 0, %15 ], [ %86, %81 ]
  br i1 %16, label %81, label %31

31:                                               ; preds = %27
  %32 = zext i32 %28 to i64
  %33 = getelementptr inbounds i8, i8* %2, i64 %32
  %34 = zext i32 %29 to i64
  %35 = getelementptr inbounds i8, i8* %1, i64 %34
  br label %36

36:                                               ; preds = %75, %31
  %37 = phi i32 [ %79, %75 ], [ 0, %31 ]
  %38 = phi i8* [ %78, %75 ], [ %33, %31 ]
  %39 = phi i8* [ %42, %75 ], [ %35, %31 ]
  %40 = load i8* (%struct._cmstransform_struct*, i16*, i8*, i32)*, i8* (%struct._cmstransform_struct*, i16*, i8*, i32)** %17, align 8
  %41 = load i32, i32* %18, align 4
  %42 = call i8* %40(%struct._cmstransform_struct* %0, i16* nonnull %11, i8* %39, i32 %41) #7
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %19) #7
  store i16 -21846, i16* %7, align 2
  %43 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %20, align 8
  %44 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %43, i64 0, i32 4
  %45 = load void (i16*, i16*, i8*)*, void (i16*, i16*, i8*)** %44, align 8
  %46 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %43, i64 0, i32 3
  %47 = load i8*, i8** %46, align 8
  call void %45(i16* nonnull %11, i16* nonnull %7, i8* %47) #7
  %48 = load i16, i16* %7, align 2
  %49 = icmp eq i16 %48, 0
  br i1 %49, label %69, label %50

50:                                               ; preds = %36
  %51 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %21, align 8
  %52 = call i8* @_cmsContextGetClientChunk(%struct._cmsContext_struct* %51, i32 2) #7
  %53 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %22, align 8
  %54 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %53, i64 0, i32 2
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %75, label %57

57:                                               ; preds = %50
  %58 = bitcast i8* %52 to [16 x i16]*
  br label %59

59:                                               ; preds = %59, %57
  %60 = phi i16 [ 0, %57 ], [ %65, %59 ]
  %61 = zext i16 %60 to i64
  %62 = getelementptr inbounds [16 x i16], [16 x i16]* %58, i64 0, i64 %61
  %63 = load i16, i16* %62, align 2
  %64 = getelementptr inbounds [16 x i16], [16 x i16]* %9, i64 0, i64 %61
  store i16 %63, i16* %64, align 2
  %65 = add i16 %60, 1
  %66 = zext i16 %65 to i32
  %67 = load i32, i32* %54, align 4
  %68 = icmp ugt i32 %67, %66
  br i1 %68, label %59, label %75

69:                                               ; preds = %36
  %70 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %22, align 8
  %71 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %70, i64 0, i32 4
  %72 = load void (i16*, i16*, i8*)*, void (i16*, i16*, i8*)** %71, align 8
  %73 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %70, i64 0, i32 3
  %74 = load i8*, i8** %73, align 8
  call void %72(i16* nonnull %11, i16* nonnull %13, i8* %74) #7
  br label %75

75:                                               ; preds = %59, %50, %69
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %19) #7
  %76 = load i8* (%struct._cmstransform_struct*, i16*, i8*, i32)*, i8* (%struct._cmstransform_struct*, i16*, i8*, i32)** %23, align 8
  %77 = load i32, i32* %24, align 4
  %78 = call i8* %76(%struct._cmstransform_struct* %0, i16* nonnull %13, i8* %38, i32 %77) #7
  %79 = add nuw i32 %37, 1
  %80 = icmp eq i32 %79, %3
  br i1 %80, label %81, label %36

81:                                               ; preds = %75, %27
  %82 = load i32, i32* %25, align 4
  %83 = add i32 %82, %29
  %84 = load i32, i32* %26, align 4
  %85 = add i32 %84, %28
  %86 = add nuw i32 %30, 1
  %87 = icmp eq i32 %86, %4
  br i1 %87, label %88, label %27

88:                                               ; preds = %81, %6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @PrecalculatedXFORM(%struct._cmstransform_struct*, i8*, i8*, i32, i32, %struct.cmsStride*) #0 {
  %7 = alloca [16 x i16], align 16
  %8 = alloca [16 x i16], align 16
  %9 = bitcast [16 x i16]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #7
  %10 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 0
  %11 = bitcast [16 x i16]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #7
  %12 = getelementptr inbounds [16 x i16], [16 x i16]* %8, i64 0, i64 0
  tail call void @_cmsHandleExtraChannels(%struct._cmstransform_struct* %0, i8* %1, i8* %2, i32 %3, i32 %4, %struct.cmsStride* %5) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 0, i64 32, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 0, i64 32, i1 false)
  %13 = icmp eq i32 %4, 0
  br i1 %13, label %56, label %14

14:                                               ; preds = %6
  %15 = icmp eq i32 %3, 0
  %16 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %0, i64 0, i32 3
  %17 = getelementptr inbounds %struct.cmsStride, %struct.cmsStride* %5, i64 0, i32 2
  %18 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %0, i64 0, i32 8
  %19 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %0, i64 0, i32 4
  %20 = getelementptr inbounds %struct.cmsStride, %struct.cmsStride* %5, i64 0, i32 3
  %21 = getelementptr inbounds %struct.cmsStride, %struct.cmsStride* %5, i64 0, i32 0
  %22 = getelementptr inbounds %struct.cmsStride, %struct.cmsStride* %5, i64 0, i32 1
  br label %23

23:                                               ; preds = %49, %14
  %24 = phi i32 [ 0, %14 ], [ %53, %49 ]
  %25 = phi i32 [ 0, %14 ], [ %51, %49 ]
  %26 = phi i32 [ 0, %14 ], [ %54, %49 ]
  br i1 %15, label %49, label %27

27:                                               ; preds = %23
  %28 = zext i32 %24 to i64
  %29 = getelementptr inbounds i8, i8* %2, i64 %28
  %30 = zext i32 %25 to i64
  %31 = getelementptr inbounds i8, i8* %1, i64 %30
  br label %32

32:                                               ; preds = %32, %27
  %33 = phi i32 [ %47, %32 ], [ 0, %27 ]
  %34 = phi i8* [ %46, %32 ], [ %29, %27 ]
  %35 = phi i8* [ %38, %32 ], [ %31, %27 ]
  %36 = load i8* (%struct._cmstransform_struct*, i16*, i8*, i32)*, i8* (%struct._cmstransform_struct*, i16*, i8*, i32)** %16, align 8
  %37 = load i32, i32* %17, align 4
  %38 = call i8* %36(%struct._cmstransform_struct* %0, i16* nonnull %10, i8* %35, i32 %37) #7
  %39 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %18, align 8
  %40 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %39, i64 0, i32 4
  %41 = load void (i16*, i16*, i8*)*, void (i16*, i16*, i8*)** %40, align 8
  %42 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %39, i64 0, i32 3
  %43 = load i8*, i8** %42, align 8
  call void %41(i16* nonnull %10, i16* nonnull %12, i8* %43) #7
  %44 = load i8* (%struct._cmstransform_struct*, i16*, i8*, i32)*, i8* (%struct._cmstransform_struct*, i16*, i8*, i32)** %19, align 8
  %45 = load i32, i32* %20, align 4
  %46 = call i8* %44(%struct._cmstransform_struct* %0, i16* nonnull %12, i8* %34, i32 %45) #7
  %47 = add nuw i32 %33, 1
  %48 = icmp eq i32 %47, %3
  br i1 %48, label %49, label %32

49:                                               ; preds = %32, %23
  %50 = load i32, i32* %21, align 4
  %51 = add i32 %50, %25
  %52 = load i32, i32* %22, align 4
  %53 = add i32 %52, %24
  %54 = add nuw i32 %26, 1
  %55 = icmp eq i32 %54, %4
  br i1 %55, label %56, label %23

56:                                               ; preds = %49, %6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @CachedXFORMGamutCheck(%struct._cmstransform_struct*, i8*, i8*, i32, i32, %struct.cmsStride*) #0 {
  %7 = alloca i16, align 2
  %8 = alloca [16 x i16], align 16
  %9 = alloca [16 x i16], align 16
  %10 = alloca %struct._cmsCACHE, align 2
  %11 = bitcast [16 x i16]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #7
  %12 = getelementptr inbounds [16 x i16], [16 x i16]* %8, i64 0, i64 0
  %13 = bitcast [16 x i16]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #7
  %14 = getelementptr inbounds [16 x i16], [16 x i16]* %9, i64 0, i64 0
  %15 = bitcast %struct._cmsCACHE* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %15) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %15, i8 -86, i64 64, i1 false)
  tail call void @_cmsHandleExtraChannels(%struct._cmstransform_struct* %0, i8* %1, i8* %2, i32 %3, i32 %4, %struct.cmsStride* %5) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 0, i64 32, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 0, i64 32, i1 false)
  %16 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %0, i64 0, i32 7
  %17 = bitcast %struct._cmsCACHE* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %15, i8* align 8 %17, i64 64, i1 false)
  %18 = icmp eq i32 %4, 0
  br i1 %18, label %99, label %19

19:                                               ; preds = %6
  %20 = icmp eq i32 %3, 0
  %21 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %0, i64 0, i32 3
  %22 = getelementptr inbounds %struct.cmsStride, %struct.cmsStride* %5, i64 0, i32 2
  %23 = bitcast i16* %7 to i8*
  %24 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %0, i64 0, i32 9
  %25 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %0, i64 0, i32 20
  %26 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %0, i64 0, i32 8
  %27 = getelementptr inbounds %struct._cmsCACHE, %struct._cmsCACHE* %10, i64 0, i32 1, i64 0
  %28 = bitcast i16* %27 to i8*
  %29 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %0, i64 0, i32 4
  %30 = getelementptr inbounds %struct.cmsStride, %struct.cmsStride* %5, i64 0, i32 3
  %31 = getelementptr inbounds %struct.cmsStride, %struct.cmsStride* %5, i64 0, i32 0
  %32 = getelementptr inbounds %struct.cmsStride, %struct.cmsStride* %5, i64 0, i32 1
  br label %33

33:                                               ; preds = %92, %19
  %34 = phi i32 [ 0, %19 ], [ %96, %92 ]
  %35 = phi i32 [ 0, %19 ], [ %94, %92 ]
  %36 = phi i32 [ 0, %19 ], [ %97, %92 ]
  br i1 %20, label %92, label %37

37:                                               ; preds = %33
  %38 = zext i32 %34 to i64
  %39 = getelementptr inbounds i8, i8* %2, i64 %38
  %40 = zext i32 %35 to i64
  %41 = getelementptr inbounds i8, i8* %1, i64 %40
  br label %42

42:                                               ; preds = %86, %37
  %43 = phi i32 [ %90, %86 ], [ 0, %37 ]
  %44 = phi i8* [ %89, %86 ], [ %39, %37 ]
  %45 = phi i8* [ %48, %86 ], [ %41, %37 ]
  %46 = load i8* (%struct._cmstransform_struct*, i16*, i8*, i32)*, i8* (%struct._cmstransform_struct*, i16*, i8*, i32)** %21, align 8
  %47 = load i32, i32* %22, align 4
  %48 = call i8* %46(%struct._cmstransform_struct* %0, i16* nonnull %12, i8* %45, i32 %47) #7
  %49 = call i32 @bcmp(i8* nonnull %11, i8* nonnull %15, i64 32)
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %42
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %13, i8* align 2 %28, i64 32, i1 false)
  br label %86

52:                                               ; preds = %42
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %23) #7
  store i16 -21846, i16* %7, align 2
  %53 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %24, align 8
  %54 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %53, i64 0, i32 4
  %55 = load void (i16*, i16*, i8*)*, void (i16*, i16*, i8*)** %54, align 8
  %56 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %53, i64 0, i32 3
  %57 = load i8*, i8** %56, align 8
  call void %55(i16* nonnull %12, i16* nonnull %7, i8* %57) #7
  %58 = load i16, i16* %7, align 2
  %59 = icmp eq i16 %58, 0
  br i1 %59, label %79, label %60

60:                                               ; preds = %52
  %61 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %25, align 8
  %62 = call i8* @_cmsContextGetClientChunk(%struct._cmsContext_struct* %61, i32 2) #7
  %63 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %26, align 8
  %64 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %63, i64 0, i32 2
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %85, label %67

67:                                               ; preds = %60
  %68 = bitcast i8* %62 to [16 x i16]*
  br label %69

69:                                               ; preds = %69, %67
  %70 = phi i16 [ 0, %67 ], [ %75, %69 ]
  %71 = zext i16 %70 to i64
  %72 = getelementptr inbounds [16 x i16], [16 x i16]* %68, i64 0, i64 %71
  %73 = load i16, i16* %72, align 2
  %74 = getelementptr inbounds [16 x i16], [16 x i16]* %9, i64 0, i64 %71
  store i16 %73, i16* %74, align 2
  %75 = add i16 %70, 1
  %76 = zext i16 %75 to i32
  %77 = load i32, i32* %64, align 4
  %78 = icmp ugt i32 %77, %76
  br i1 %78, label %69, label %85

79:                                               ; preds = %52
  %80 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %26, align 8
  %81 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %80, i64 0, i32 4
  %82 = load void (i16*, i16*, i8*)*, void (i16*, i16*, i8*)** %81, align 8
  %83 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %80, i64 0, i32 3
  %84 = load i8*, i8** %83, align 8
  call void %82(i16* nonnull %12, i16* nonnull %14, i8* %84) #7
  br label %85

85:                                               ; preds = %69, %60, %79
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %23) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %15, i8* nonnull align 16 %11, i64 32, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %28, i8* nonnull align 16 %13, i64 32, i1 false)
  br label %86

86:                                               ; preds = %85, %51
  %87 = load i8* (%struct._cmstransform_struct*, i16*, i8*, i32)*, i8* (%struct._cmstransform_struct*, i16*, i8*, i32)** %29, align 8
  %88 = load i32, i32* %30, align 4
  %89 = call i8* %87(%struct._cmstransform_struct* %0, i16* nonnull %14, i8* %44, i32 %88) #7
  %90 = add nuw i32 %43, 1
  %91 = icmp eq i32 %90, %3
  br i1 %91, label %92, label %42

92:                                               ; preds = %86, %33
  %93 = load i32, i32* %31, align 4
  %94 = add i32 %93, %35
  %95 = load i32, i32* %32, align 4
  %96 = add i32 %95, %34
  %97 = add nuw i32 %36, 1
  %98 = icmp eq i32 %97, %4
  br i1 %98, label %99, label %33

99:                                               ; preds = %92, %6
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %15) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @CachedXFORM(%struct._cmstransform_struct*, i8*, i8*, i32, i32, %struct.cmsStride*) #0 {
  %7 = alloca [16 x i16], align 16
  %8 = alloca [16 x i16], align 16
  %9 = alloca %struct._cmsCACHE, align 2
  %10 = bitcast [16 x i16]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #7
  %11 = getelementptr inbounds [16 x i16], [16 x i16]* %7, i64 0, i64 0
  %12 = bitcast [16 x i16]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #7
  %13 = getelementptr inbounds [16 x i16], [16 x i16]* %8, i64 0, i64 0
  %14 = bitcast %struct._cmsCACHE* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %14) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %14, i8 -86, i64 64, i1 false)
  tail call void @_cmsHandleExtraChannels(%struct._cmstransform_struct* %0, i8* %1, i8* %2, i32 %3, i32 %4, %struct.cmsStride* %5) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 0, i64 32, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 0, i64 32, i1 false)
  %15 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %0, i64 0, i32 7
  %16 = bitcast %struct._cmsCACHE* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %14, i8* align 8 %16, i64 64, i1 false)
  %17 = icmp eq i32 %4, 0
  br i1 %17, label %67, label %18

18:                                               ; preds = %6
  %19 = icmp eq i32 %3, 0
  %20 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %0, i64 0, i32 3
  %21 = getelementptr inbounds %struct.cmsStride, %struct.cmsStride* %5, i64 0, i32 2
  %22 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %0, i64 0, i32 8
  %23 = getelementptr inbounds %struct._cmsCACHE, %struct._cmsCACHE* %9, i64 0, i32 1, i64 0
  %24 = bitcast i16* %23 to i8*
  %25 = getelementptr inbounds %struct._cmstransform_struct, %struct._cmstransform_struct* %0, i64 0, i32 4
  %26 = getelementptr inbounds %struct.cmsStride, %struct.cmsStride* %5, i64 0, i32 3
  %27 = getelementptr inbounds %struct.cmsStride, %struct.cmsStride* %5, i64 0, i32 0
  %28 = getelementptr inbounds %struct.cmsStride, %struct.cmsStride* %5, i64 0, i32 1
  br label %29

29:                                               ; preds = %60, %18
  %30 = phi i32 [ 0, %18 ], [ %64, %60 ]
  %31 = phi i32 [ 0, %18 ], [ %62, %60 ]
  %32 = phi i32 [ 0, %18 ], [ %65, %60 ]
  br i1 %19, label %60, label %33

33:                                               ; preds = %29
  %34 = zext i32 %30 to i64
  %35 = getelementptr inbounds i8, i8* %2, i64 %34
  %36 = zext i32 %31 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  br label %38

38:                                               ; preds = %54, %33
  %39 = phi i32 [ %58, %54 ], [ 0, %33 ]
  %40 = phi i8* [ %57, %54 ], [ %35, %33 ]
  %41 = phi i8* [ %44, %54 ], [ %37, %33 ]
  %42 = load i8* (%struct._cmstransform_struct*, i16*, i8*, i32)*, i8* (%struct._cmstransform_struct*, i16*, i8*, i32)** %20, align 8
  %43 = load i32, i32* %21, align 4
  %44 = call i8* %42(%struct._cmstransform_struct* %0, i16* nonnull %11, i8* %41, i32 %43) #7
  %45 = call i32 @bcmp(i8* nonnull %10, i8* nonnull %14, i64 32)
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %38
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %12, i8* align 2 %24, i64 32, i1 false)
  br label %54

48:                                               ; preds = %38
  %49 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %22, align 8
  %50 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %49, i64 0, i32 4
  %51 = load void (i16*, i16*, i8*)*, void (i16*, i16*, i8*)** %50, align 8
  %52 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %49, i64 0, i32 3
  %53 = load i8*, i8** %52, align 8
  call void %51(i16* nonnull %11, i16* nonnull %13, i8* %53) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %14, i8* nonnull align 16 %10, i64 32, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %24, i8* nonnull align 16 %12, i64 32, i1 false)
  br label %54

54:                                               ; preds = %48, %47
  %55 = load i8* (%struct._cmstransform_struct*, i16*, i8*, i32)*, i8* (%struct._cmstransform_struct*, i16*, i8*, i32)** %25, align 8
  %56 = load i32, i32* %26, align 4
  %57 = call i8* %55(%struct._cmstransform_struct* %0, i16* nonnull %13, i8* %40, i32 %56) #7
  %58 = add nuw i32 %39, 1
  %59 = icmp eq i32 %58, %3
  br i1 %59, label %60, label %38

60:                                               ; preds = %54, %29
  %61 = load i32, i32* %27, align 4
  %62 = add i32 %61, %31
  %63 = load i32, i32* %28, align 4
  %64 = add i32 %63, %30
  %65 = add nuw i32 %32, 1
  %66 = icmp eq i32 %65, %4
  br i1 %66, label %67, label %29

67:                                               ; preds = %60, %6
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %14) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #7
  ret void
}

declare void @_cmsHandleExtraChannels(%struct._cmstransform_struct*, i8*, i8*, i32, i32, %struct.cmsStride*) local_unnamed_addr #2

declare void @cmsPipelineEvalFloat(float*, float*, %struct._cmsPipeline_struct*) local_unnamed_addr #2

declare i32 @cmsGetColorSpace(i8*) local_unnamed_addr #2

declare i32 @cmsGetPCS(i8*) local_unnamed_addr #2

declare i32 @_cmsLCMScolorSpace(i32) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind readonly }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
