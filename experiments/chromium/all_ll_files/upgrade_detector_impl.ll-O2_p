; ModuleID = '../../chrome/browser/upgrade_detector/upgrade_detector_impl.cc'
source_filename = "../../chrome/browser/upgrade_detector/upgrade_detector_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::TimeDelta" = type { i64 }
%"struct.base::Feature" = type { i8*, i32 }
%class.BrowserProcess = type { i32 (...)** }
%"class.base::NoDestructor" = type { [808 x i8] }
%"struct.base::TaskTraitsExtensionStorage" = type { i8, %"struct.std::__1::array.421" }
%"struct.std::__1::array.421" = type { [8 x i8] }
%class.UpgradeDetectorImpl = type { %class.UpgradeDetector, %class.BuildStateObserver, %"class.variations::VariationsService::Observer", %"class.absl::optional", %"class.base::OneShotTimer", %"class.base::OneShotTimer", i8, i8, i8, %"struct.std::__1::array", %"class.base::Time", %"class.base::WeakPtrFactory.104" }
%class.UpgradeDetector = type { i32 (...)**, %"class.base::Clock"*, %"class.base::TickClock"*, %class.PrefChangeRegistrar, i32, %"class.base::Time", i8, i8, i8, %"class.base::RepeatingTimer", i32, i8, [3 x i8], %"class.base::ObserverList" }
%class.PrefChangeRegistrar = type { %class.PrefObserver, %"class.std::__1::map", %class.PrefService* }
%class.PrefObserver = type { i32 (...)** }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%class.PrefService = type { i32 (...)**, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.7", %class.scoped_refptr.30, %"class.base::RepeatingCallback.31", %class.scoped_refptr.32, %"class.std::__1::unordered_map" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %class.PrefNotifierImpl* }
%class.PrefNotifierImpl = type opaque
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %class.PrefValueStore* }
%class.PrefValueStore = type { i32 (...)**, [7 x %"class.PrefValueStore::PrefStoreKeeper"], %"class.base::RepeatingCallback", %class.PrefNotifier*, %"class.std::__1::map.12", i8, %"class.std::__1::unique_ptr.21" }
%"class.PrefValueStore::PrefStoreKeeper" = type <{ %"class.PrefStore::Observer", %class.PrefValueStore*, %class.scoped_refptr, i32, [4 x i8] }>
%"class.PrefStore::Observer" = type { i32 (...)** }
%class.scoped_refptr = type { %class.PrefStore* }
%class.PrefStore = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.10 }
%class.scoped_refptr.10 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.PrefNotifier = type opaque
%"class.std::__1::map.12" = type { %"class.std::__1::__tree.13" }
%"class.std::__1::__tree.13" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.PrefValueStore::Delegate"* }
%"class.PrefValueStore::Delegate" = type { i32 (...)** }
%class.scoped_refptr.30 = type { %class.PersistentPrefStore* }
%class.PersistentPrefStore = type { %class.WriteablePrefStore.base, [4 x i8] }
%class.WriteablePrefStore.base = type { %class.PrefStore.base }
%class.PrefStore.base = type <{ i32 (...)**, %"class.base::RefCounted" }>
%"class.base::RepeatingCallback.31" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.32 = type { %class.PrefRegistry* }
%class.PrefRegistry = type opaque
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.33", %"class.std::__1::__compressed_pair.41", %"class.std::__1::__compressed_pair.46", %"class.std::__1::__compressed_pair.48", [4 x i8] }>
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35", %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { float }
%"class.base::RepeatingTimer" = type { %"class.base::internal::TimerBase", %"class.base::RepeatingCallback.61" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.51, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.51 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.52" }>
%"class.base::RefCountedThreadSafe.52" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.53" }
%"class.base::time_internal::TimeBase.53" = type { i64 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.55", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.55" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.56" }
%"struct.std::__1::atomic.56" = type { %"struct.std::__1::__atomic_base.57" }
%"struct.std::__1::__atomic_base.57" = type { %"struct.std::__1::__atomic_base.58" }
%"struct.std::__1::__atomic_base.58" = type { %"struct.std::__1::__cxx_atomic_impl.59" }
%"struct.std::__1::__cxx_atomic_impl.59" = type { %"struct.std::__1::__cxx_atomic_base_impl.60" }
%"struct.std::__1::__cxx_atomic_base_impl.60" = type { i8 }
%"class.base::RepeatingCallback.61" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.62" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.BuildStateObserver = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory.67" }
%"class.base::WeakPtrFactory.67" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.variations::VariationsService::Observer" = type { i32 (...)** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %class.InstalledVersionPoller }
%class.InstalledVersionPoller = type { %class.BuildState*, %"class.base::RepeatingCallback.92", %"class.base::OneShotTimer", %"class.std::__1::unique_ptr.93", %"class.base::WeakPtrFactory.99" }
%class.BuildState = type { %"class.base::ObserverList.68", i32, %"class.absl::optional.80", %"class.absl::optional.80" }
%"class.base::ObserverList.68" = type <{ %"class.std::__1::vector.69", %"class.base::LinkedList.77", i64, i32, [4 x i8] }>
%"class.std::__1::vector.69" = type { %"class.std::__1::__vector_base.70" }
%"class.std::__1::__vector_base.70" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.72" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.71 }
%class.scoped_refptr.71 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList.77" = type { %"class.base::LinkNode.78" }
%"class.base::LinkNode.78" = type { %"class.base::internal::LinkNodeBase" }
%"class.absl::optional.80" = type { %"class.absl::optional_internal::optional_data.81" }
%"class.absl::optional_internal::optional_data.81" = type { %"class.absl::optional_internal::optional_data_base.82" }
%"class.absl::optional_internal::optional_data_base.82" = type { %"class.absl::optional_internal::optional_data_dtor_base.83" }
%"class.absl::optional_internal::optional_data_dtor_base.83" = type { i8, %union.anon.84 }
%union.anon.84 = type { %"class.base::Version" }
%"class.base::Version" = type { %"class.std::__1::vector.85" }
%"class.std::__1::vector.85" = type { %"class.std::__1::__vector_base.86" }
%"class.std::__1::__vector_base.86" = type { i32*, i32*, %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { i32* }
%"class.base::RepeatingCallback.92" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %class.InstalledVersionMonitor* }
%class.InstalledVersionMonitor = type opaque
%"class.base::WeakPtrFactory.99" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"struct.std::__1::array" = type { [4 x %"class.base::TimeDelta"] }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtrFactory.104" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::Clock" = type { i32 (...)** }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::CommandLine" = type { %"class.std::__1::vector.149", %"class.std::__1::map.156", i64 }
%"class.std::__1::vector.149" = type { %"class.std::__1::__vector_base.150" }
%"class.std::__1::__vector_base.150" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.107 }
%union.anon.107 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::map.156" = type { %"class.std::__1::__tree.157" }
%"class.std::__1::__tree.157" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.158", %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%struct.InstalledAndCriticalVersion = type { %"class.base::Version", %"class.absl::optional.80" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.network_time::NetworkTimeTracker" = type <{ %class.GURL, i64, %"class.base::TimeDelta", %"class.base::RepeatingTimer", %class.scoped_refptr.117, %"class.std::__1::unique_ptr.118", %"class.base::TimeTicks", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.130", %"class.std::__1::unique_ptr.136", %class.PrefService*, %"class.base::Time", %"class.base::Time", %"class.base::TimeTicks", %"class.base::TimeDelta", i8, [7 x i8], %"class.base::Time", %"class.std::__1::vector.142", %"class.base::ThreadChecker", [7 x i8] }>
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.111" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %class.GURL* }
%class.scoped_refptr.117 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type opaque
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.network::SimpleURLLoader"* }
%"class.network::SimpleURLLoader" = type opaque
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.client_update_protocol::Ecdsa"* }
%"class.client_update_protocol::Ecdsa" = type opaque
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.base::Clock"* }
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.base::TickClock"* }
%"class.std::__1::vector.142" = type { %"class.std::__1::__vector_base.143" }
%"class.std::__1::__vector_base.143" = type { %"class.base::OnceCallback"*, %"class.base::OnceCallback"*, %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.base::OnceCallback"* }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::DefaultClock" = type { %"class.base::Clock" }
%"class.base::DefaultTickClock" = type { %"class.base::TickClock" }
%"class.base::WeakPtr.422" = type { %"class.base::internal::WeakPtrBase" }
%"class.variations::VariationsService" = type { %"class.web_resource::ResourceRequestAllowedNotifier::Observer", %"class.std::__1::unique_ptr.166", %class.PrefService*, %"class.metrics::MetricsStateManager"*, %class.PrefService*, %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.118", %"class.std::__1::basic_string", %class.GURL, %class.GURL, i8, i8, %"class.std::__1::unique_ptr.178", %"class.base::TimeTicks", i32, [4 x i8], %"class.base::ObserverList.357", %"class.variations::SafeSeedManager", %"class.variations::VariationsFieldTrialCreator", i8, %"class.std::__1::basic_string", %"class.base::WeakPtrFactory.413" }
%"class.web_resource::ResourceRequestAllowedNotifier::Observer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.variations::VariationsServiceClient"* }
%"class.variations::VariationsServiceClient" = type { i32 (...)** }
%"class.metrics::MetricsStateManager" = type opaque
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.variations::VariationsRequestScheduler"* }
%"class.variations::VariationsRequestScheduler" = type { i32 (...)**, %"class.base::RepeatingCallback.61", %"class.base::RepeatingTimer", %"class.base::OneShotTimer" }
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.web_resource::ResourceRequestAllowedNotifier"* }
%"class.web_resource::ResourceRequestAllowedNotifier" = type { %"class.web_resource::EulaAcceptedNotifier::Observer", %"class.network::NetworkConnectionTracker::NetworkConnectionObserver", i8*, %class.PrefService*, i8, i8, %"class.std::__1::unique_ptr.181", %"class.web_resource::ResourceRequestAllowedNotifier::Observer"*, %"class.base::OnceCallback.187", %"class.network::NetworkConnectionTracker"*, i32, i8, %"class.base::WeakPtrFactory.353" }
%"class.web_resource::EulaAcceptedNotifier::Observer" = type { i32 (...)** }
%"class.network::NetworkConnectionTracker::NetworkConnectionObserver" = type { i32 (...)** }
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.web_resource::EulaAcceptedNotifier"* }
%"class.web_resource::EulaAcceptedNotifier" = type { i32 (...)**, %class.PrefService*, %class.PrefChangeRegistrar, %"class.web_resource::EulaAcceptedNotifier::Observer"* }
%"class.base::OnceCallback.187" = type { %"class.base::internal::CallbackBase" }
%"class.network::NetworkConnectionTracker" = type { %"class.network::mojom::NetworkChangeManagerClient", %"class.base::RepeatingCallback.188", %class.scoped_refptr.51, %"class.base::Lock", %"class.std::__1::list", i32, %class.scoped_refptr.193, %class.scoped_refptr.193, %"class.mojo::Receiver" }
%"class.network::mojom::NetworkChangeManagerClient" = type { i32 (...)** }
%"class.base::RepeatingCallback.188" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.189" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%class.scoped_refptr.193 = type { %"class.base::ObserverListThreadSafe"* }
%"class.base::ObserverListThreadSafe" = type opaque
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.network::mojom::NetworkChangeManagerClientStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.194, %"class.std::__1::unique_ptr.304", %"class.base::WeakPtrFactory.352" }
%class.scoped_refptr.194 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.51, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.271", %"class.absl::optional.276", %"class.absl::optional.229", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.295", i8, [7 x i8], %class.scoped_refptr.51, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.195" }>
%"class.base::RefCountedThreadSafe.195" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.196", %"class.std::__1::unique_ptr.202", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.208" }
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.202" = type { %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.208" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.51, %"class.std::__1::unique_ptr.209", %"class.absl::optional.219", %"struct.std::__1::atomic.225", i8, i8, i8, i8, i32, i32, %"class.absl::optional.229", %"class.std::__1::unique_ptr.234", i8, i64, %class.scoped_refptr.267, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.269", %"class.base::WeakPtrFactory.270" }
%"class.std::__1::unique_ptr.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.51, i8, %"class.mojo::ScopedHandleBase.212", %class.scoped_refptr.213, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.214", i8*, %"class.base::WeakPtrFactory.215" }
%"class.mojo::ScopedHandleBase.212" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.213 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.214" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.215" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.219" = type { %"class.absl::optional_internal::optional_data.220" }
%"class.absl::optional_internal::optional_data.220" = type { %"class.absl::optional_internal::optional_data_base.221" }
%"class.absl::optional_internal::optional_data_base.221" = type { %"class.absl::optional_internal::optional_data_dtor_base.222" }
%"class.absl::optional_internal::optional_data_dtor_base.222" = type { i8, %union.anon.223 }
%union.anon.223 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.224", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.224" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"struct.std::__1::atomic.225" = type { %"struct.std::__1::__atomic_base.226" }
%"struct.std::__1::__atomic_base.226" = type { %"struct.std::__1::__cxx_atomic_impl.227" }
%"struct.std::__1::__cxx_atomic_impl.227" = type { %"struct.std::__1::__cxx_atomic_base_impl.228" }
%"struct.std::__1::__cxx_atomic_base_impl.228" = type { i8 }
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.237", i8, i64, %class.scoped_refptr.238, %class.scoped_refptr.263 }
%"class.base::RepeatingCallback.237" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.238 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.239", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.241", %"class.std::__1::map.252", i8, [7 x i8] }>
%"class.base::RefCounted.239" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.240 }
%class.scoped_refptr.240 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.241" = type { %"class.std::__1::__tree.242" }
%"class.std::__1::__tree.242" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.243", %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.252" = type { %"class.std::__1::__tree.253" }
%"class.std::__1::__tree.253" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.254", %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%class.scoped_refptr.263 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.267 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.268 }
%class.scoped_refptr.268 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.414", [4 x i8], %"class.base::RepeatingCallback.61", %class.scoped_refptr.51, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.415", [4 x i8] }>
%"class.base::RefCountedThreadSafe.414" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.415" = type { %"struct.std::__1::__atomic_base.416" }
%"struct.std::__1::__atomic_base.416" = type { %"struct.std::__1::__atomic_base.417" }
%"struct.std::__1::__atomic_base.417" = type { %"struct.std::__1::__cxx_atomic_impl.418" }
%"struct.std::__1::__cxx_atomic_impl.418" = type { %"struct.std::__1::__cxx_atomic_base_impl.419" }
%"struct.std::__1::__cxx_atomic_base_impl.419" = type { i32 }
%"class.base::WeakPtr.269" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.270" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.absl::optional.271" = type { %"class.absl::optional_internal::optional_data.272" }
%"class.absl::optional_internal::optional_data.272" = type { %"class.absl::optional_internal::optional_data_base.273" }
%"class.absl::optional_internal::optional_data_base.273" = type { %"class.absl::optional_internal::optional_data_dtor_base.274" }
%"class.absl::optional_internal::optional_data_dtor_base.274" = type { i8, %union.anon.275 }
%union.anon.275 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.276" = type { %"class.absl::optional_internal::optional_data.277" }
%"class.absl::optional_internal::optional_data.277" = type { %"class.absl::optional_internal::optional_data_base.278" }
%"class.absl::optional_internal::optional_data_base.278" = type { %"class.absl::optional_internal::optional_data_dtor_base.279" }
%"class.absl::optional_internal::optional_data_dtor_base.279" = type { i8, [7 x i8], %union.anon.280 }
%union.anon.280 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.229" = type { %"class.absl::optional_internal::optional_data.230" }
%"class.absl::optional_internal::optional_data.230" = type { %"class.absl::optional_internal::optional_data_base.231" }
%"class.absl::optional_internal::optional_data_base.231" = type { %"class.absl::optional_internal::optional_data_dtor_base.232" }
%"class.absl::optional_internal::optional_data_dtor_base.232" = type { i8, %union.anon.233 }
%union.anon.233 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.281 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.281 = type { %"class.std::__1::map.283" }
%"class.std::__1::map.283" = type { %"class.std::__1::__tree.284" }
%"class.std::__1::__tree.284" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.285", %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.294"*, i64 }
%"class.std::__1::unique_ptr.294" = type opaque
%"class.std::__1::map.295" = type { %"class.std::__1::__tree.296" }
%"class.std::__1::__tree.296" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.297", %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.61", %"class.base::OnceCallback.307", %"class.absl::optional.308", %"class.absl::optional.313", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.319", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.327", %"class.std::__1::map.338", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.347", i8, %class.scoped_refptr.51, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.348" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.307" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.308" = type { %"class.absl::optional_internal::optional_data.309" }
%"class.absl::optional_internal::optional_data.309" = type { %"class.absl::optional_internal::optional_data_base.310" }
%"class.absl::optional_internal::optional_data_base.310" = type { %"class.absl::optional_internal::optional_data_dtor_base.311" }
%"class.absl::optional_internal::optional_data_dtor_base.311" = type { i8, %union.anon.312 }
%union.anon.312 = type { %"class.base::TimeDelta" }
%"class.absl::optional.313" = type { %"class.absl::optional_internal::optional_data.314" }
%"class.absl::optional_internal::optional_data.314" = type { %"class.absl::optional_internal::optional_data_base.315" }
%"class.absl::optional_internal::optional_data_base.315" = type { %"class.absl::optional_internal::optional_data_dtor_base.316" }
%"class.absl::optional_internal::optional_data_dtor_base.316" = type { i8, %union.anon.317 }
%union.anon.317 = type { %"class.base::OneShotTimer" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.318 }
%class.scoped_refptr.318 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.319" = type { %"class.std::__1::__compressed_pair.320" }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.322", %class.scoped_refptr.323 }
%"class.base::RepeatingCallback.322" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.323 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.195", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.327" = type { %"class.std::__1::__tree.328" }
%"class.std::__1::__tree.328" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.329", %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.329" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.338" = type { %"class.std::__1::__tree.339" }
%"class.std::__1::__tree.339" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.340", %"class.std::__1::__compressed_pair.344" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::OnceCallback.347" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.348" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtrFactory.352" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.network::mojom::NetworkChangeManagerClientStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.network::mojom::NetworkChangeManagerClient"* }
%"class.base::WeakPtrFactory.353" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::ObserverList.357" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.358", i64, i32, [4 x i8] }>
%"class.base::LinkedList.358" = type { %"class.base::LinkNode.359" }
%"class.base::LinkNode.359" = type { %"class.base::internal::LinkNodeBase" }
%"class.variations::SafeSeedManager" = type { i32 (...)**, %"class.std::__1::unique_ptr.361", i8, %class.PrefService* }
%"class.std::__1::unique_ptr.361" = type { %"class.std::__1::__compressed_pair.362" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"struct.variations::SafeSeedManager::ActiveSeedState"* }
%"struct.variations::SafeSeedManager::ActiveSeedState" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.364", %"class.base::Time" }
%"class.std::__1::unique_ptr.364" = type { %"class.std::__1::__compressed_pair.365" }
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.366" }
%"struct.std::__1::__compressed_pair_elem.366" = type { %"struct.variations::ClientFilterableState"* }
%"struct.variations::ClientFilterableState" = type <{ %"class.std::__1::basic_string", %"class.base::Time", %"class.base::Version", %"class.base::Version", i32, i32, i32, i32, %"class.std::__1::basic_string", i8, [7 x i8], %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8], %"class.base::OnceCallback.367", %"class.absl::optional.368", [6 x i8] }>
%"class.base::OnceCallback.367" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.368" = type { %"class.absl::optional_internal::optional_data.369" }
%"class.absl::optional_internal::optional_data.369" = type { %"class.absl::optional_internal::optional_data_base.370" }
%"class.absl::optional_internal::optional_data_base.370" = type { %"class.absl::optional_internal::optional_data_dtor_base.371" }
%"class.absl::optional_internal::optional_data_dtor_base.371" = type { i8, %union.anon.372 }
%union.anon.372 = type { i8 }
%"class.variations::VariationsFieldTrialCreator" = type { i32 (...)**, %"class.variations::VariationsServiceClient"*, %"class.variations::UIStringOverrider", %"class.std::__1::unique_ptr.379", i8, %"class.std::__1::basic_string", i8, i32, %"class.std::__1::unordered_map.385" }
%"class.variations::UIStringOverrider" = type { i32*, i32*, i64 }
%"class.std::__1::unique_ptr.379" = type { %"class.std::__1::__compressed_pair.380" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.381" }
%"struct.std::__1::__compressed_pair_elem.381" = type { %"class.variations::VariationsSeedStore"* }
%"class.variations::VariationsSeedStore" = type <{ i32 (...)**, %class.PrefService*, %"class.std::__1::basic_string", i8, i8, [6 x i8] }>
%"class.std::__1::unordered_map.385" = type { %"class.std::__1::__hash_table.386" }
%"class.std::__1::__hash_table.386" = type <{ %"class.std::__1::unique_ptr.387", %"class.std::__1::__compressed_pair.397", %"class.std::__1::__compressed_pair.402", %"class.std::__1::__compressed_pair.407", [4 x i8] }>
%"class.std::__1::unique_ptr.387" = type { %"class.std::__1::__compressed_pair.388" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389", %"struct.std::__1::__compressed_pair_elem.391" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %"struct.std::__1::__hash_node_base.390"** }
%"struct.std::__1::__hash_node_base.390" = type { %"struct.std::__1::__hash_node_base.390"* }
%"struct.std::__1::__compressed_pair_elem.391" = type { %"class.std::__1::__bucket_list_deallocator.392" }
%"class.std::__1::__bucket_list_deallocator.392" = type { %"class.std::__1::__compressed_pair.393" }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.397" = type { %"struct.std::__1::__compressed_pair_elem.398" }
%"struct.std::__1::__compressed_pair_elem.398" = type { %"struct.std::__1::__hash_node_base.390" }
%"class.std::__1::__compressed_pair.402" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.base::WeakPtrFactory.413" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.content::BrowserTaskTraits" = type { %"class.base::TaskTraits" }
%"class.base::TaskTraits" = type { %"struct.base::TaskTraitsExtensionStorage", i8, i8, i8, i8, i8, i8 }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.52", [4 x i8] }>

$_ZNK4base9TimeDeltamiES0_ = comdat any

$_ZN15UpgradeDetector29OverrideHighAnnoyanceDeadlineEN4base4TimeE = comdat any

$_ZN15UpgradeDetector23ResetOverriddenDeadlineEv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIM19UpgradeDetectorImplFvvEJNS0_17UnretainedWrapperIS3_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIM19UpgradeDetectorImplFvvEJNS0_17UnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIM19UpgradeDetectorImplFvvEJNS_7WeakPtrIS3_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIM19UpgradeDetectorImplFvvEJNS_7WeakPtrIS2_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIM19UpgradeDetectorImplFvvEJNS_7WeakPtrIS3_EEEEEEEbPKNS0_13BindStateBaseENS9_21CancellationQueryModeE = comdat any

@_ZTV19UpgradeDetectorImpl = hidden unnamed_addr constant { [14 x i8*], [5 x i8*], [5 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.UpgradeDetectorImpl*)* @_ZN19UpgradeDetectorImplD2Ev to i8*), i8* bitcast (void (%class.UpgradeDetectorImpl*)* @_ZN19UpgradeDetectorImplD0Ev to i8*), i8* bitcast (void (%class.UpgradeDetectorImpl*)* @_ZN19UpgradeDetectorImpl4InitEv to i8*), i8* bitcast (void (%class.UpgradeDetectorImpl*)* @_ZN19UpgradeDetectorImpl8ShutdownEv to i8*), i8* bitcast (i64 (%class.UpgradeDetectorImpl*)* @_ZN19UpgradeDetectorImpl26GetHighAnnoyanceLevelDeltaEv to i8*), i8* bitcast (i64 (%class.UpgradeDetectorImpl*)* @_ZN19UpgradeDetectorImpl24GetHighAnnoyanceDeadlineEv to i8*), i8* bitcast (void (%class.UpgradeDetector*, i64)* @_ZN15UpgradeDetector29OverrideHighAnnoyanceDeadlineEN4base4TimeE to i8*), i8* bitcast (void (%class.UpgradeDetector*)* @_ZN15UpgradeDetector23ResetOverriddenDeadlineEv to i8*), i8* bitcast (void (%class.UpgradeDetector*)* @_ZN15UpgradeDetector21TriggerCriticalUpdateEv to i8*), i8* bitcast (void (%class.UpgradeDetectorImpl*)* @_ZN19UpgradeDetectorImpl39OnRelaunchNotificationPeriodPrefChangedEv to i8*), i8* bitcast (void (%class.UpgradeDetectorImpl*, %class.BuildState*)* @_ZN19UpgradeDetectorImpl8OnUpdateEPK10BuildState to i8*), i8* bitcast (void (%class.UpgradeDetectorImpl*, i32)* @_ZN19UpgradeDetectorImpl27OnExperimentChangesDetectedEN10variations17VariationsService8Observer8SeverityE to i8*)], [5 x i8*] [i8* inttoptr (i64 -280 to i8*), i8* null, i8* bitcast (void (%class.UpgradeDetectorImpl*)* @_ZThn280_N19UpgradeDetectorImplD1Ev to i8*), i8* bitcast (void (%class.UpgradeDetectorImpl*)* @_ZThn280_N19UpgradeDetectorImplD0Ev to i8*), i8* bitcast (void (%class.UpgradeDetectorImpl*, %class.BuildState*)* @_ZThn280_N19UpgradeDetectorImpl8OnUpdateEPK10BuildState to i8*)], [5 x i8*] [i8* inttoptr (i64 -304 to i8*), i8* null, i8* bitcast (void (%class.UpgradeDetectorImpl*, i32)* @_ZThn304_N19UpgradeDetectorImpl27OnExperimentChangesDetectedEN10variations17VariationsService8Observer8SeverityE to i8*), i8* bitcast (void (%class.UpgradeDetectorImpl*)* @_ZThn304_N19UpgradeDetectorImplD1Ev to i8*), i8* bitcast (void (%class.UpgradeDetectorImpl*)* @_ZThn304_N19UpgradeDetectorImplD0Ev to i8*)] }, align 8
@_ZN12_GLOBAL__N_124kDefaultVeryLowThresholdE = internal unnamed_addr constant %"class.base::TimeDelta" { i64 3600000000 }, align 8
@_ZZN19UpgradeDetectorImpl26StartOutdatedBuildDetectorEvE22kOutdatedBuildDetector = internal constant %"struct.base::Feature" { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i32 0, i32 0), i32 1 }, align 8
@.str = private unnamed_addr constant [22 x i8] c"OutdatedBuildDetector\00", align 1
@g_browser_process = external local_unnamed_addr global %class.BrowserProcess*, align 8
@.str.1 = private unnamed_addr constant [22 x i8] c"DetectOutdatedInstall\00", align 1
@.str.2 = private unnamed_addr constant [63 x i8] c"../../chrome/browser/upgrade_detector/upgrade_detector_impl.cc\00", align 1
@.str.3 = private unnamed_addr constant [30 x i8] c"NotifyOnUpgradeWithTimePassed\00", align 1
@_ZN12_GLOBAL__N_126kNotifyCycleTimeForTestingE = internal unnamed_addr constant %"class.base::TimeDelta" { i64 500000 }, align 8
@_ZN12_GLOBAL__N_116kNotifyCycleTimeE = internal unnamed_addr constant %"class.base::TimeDelta" { i64 1200000000 }, align 8
@_ZZN19UpgradeDetectorImpl26StageIndexToAnnoyanceLevelEmE13kIndexToLevel = internal unnamed_addr constant [4 x i32] [i32 3, i32 2, i32 1, i32 6], align 16
@_ZZN19UpgradeDetectorImpl11GetInstanceEvE8instance = internal global %"class.base::NoDestructor" zeroinitializer, align 8
@_ZGVZN19UpgradeDetectorImpl11GetInstanceEvE8instance = internal global i64 0, align 8
@_ZN8switches28kDisableBackgroundNetworkingE = external constant [0 x i8], align 1
@_ZN8switches21kSimulateOutdatedNoAUE = external constant [0 x i8], align 1
@_ZN8switches17kSimulateOutdatedE = external constant [0 x i8], align 1
@.ref.tmp = private constant { %"struct.base::TaskTraitsExtensionStorage", i8, i8, i8, i8, i8, i8 } { %"struct.base::TaskTraitsExtensionStorage" zeroinitializer, i8 0, i8 -127, i8 0, i8 0, i8 0, i8 0 }, align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"Init\00", align 1
@_ZN8switches16kSimulateUpgradeE = external constant [0 x i8], align 1
@_ZN8switches26kCheckForUpdateIntervalSecE = external constant [0 x i8], align 1
@_ZN8switches23kSimulateCriticalUpdateE = external constant [0 x i8], align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"delta_ != other.delta_\00", align 1
@.str.6 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.7 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1
@.str.8 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.9 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1
@switch.table._ZN19UpgradeDetectorImpl20GetThresholdForLevelEN15UpgradeDetector33UpgradeNotificationAnnoyanceLevelE = private unnamed_addr constant [6 x i64] [i64 2, i64 1, i64 0, i64 0, i64 0, i64 3], align 8
@switch.table._ZN19UpgradeDetectorImpl27AnnoyanceLevelToStagesIndexEN15UpgradeDetector33UpgradeNotificationAnnoyanceLevelE = private unnamed_addr constant [6 x i32] [i32 2, i32 1, i32 0, i32 0, i32 0, i32 3], align 4

@_ZN19UpgradeDetectorImplC1EPKN4base5ClockEPKNS0_9TickClockE = hidden unnamed_addr alias void (%class.UpgradeDetectorImpl*, %"class.base::Clock"*, %"class.base::TickClock"*), void (%class.UpgradeDetectorImpl*, %"class.base::Clock"*, %"class.base::TickClock"*)* @_ZN19UpgradeDetectorImplC2EPKN4base5ClockEPKNS0_9TickClockE
@_ZN19UpgradeDetectorImplD1Ev = hidden unnamed_addr alias void (%class.UpgradeDetectorImpl*), void (%class.UpgradeDetectorImpl*)* @_ZN19UpgradeDetectorImplD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19UpgradeDetectorImplC2EPKN4base5ClockEPKNS0_9TickClockE(%class.UpgradeDetectorImpl*, %"class.base::Clock"*, %"class.base::TickClock"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0
  tail call void @_ZN15UpgradeDetectorC2EPKN4base5ClockEPKNS0_9TickClockE(%class.UpgradeDetector* %4, %"class.base::Clock"* %1, %"class.base::TickClock"* %2) #12
  %5 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 1
  %6 = getelementptr inbounds %class.BuildStateObserver, %class.BuildStateObserver* %5, i64 0, i32 0
  tail call void @_ZN4base15CheckedObserverC2Ev(%"class.base::CheckedObserver"* %6) #12
  %7 = getelementptr inbounds %class.BuildStateObserver, %class.BuildStateObserver* %5, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 2, i32 0
  %9 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [5 x i8*], [5 x i8*] }, { [14 x i8*], [5 x i8*], [5 x i8*] }* @_ZTV19UpgradeDetectorImpl, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [5 x i8*], [5 x i8*] }, { [14 x i8*], [5 x i8*], [5 x i8*] }* @_ZTV19UpgradeDetectorImpl, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [5 x i8*], [5 x i8*] }, { [14 x i8*], [5 x i8*], [5 x i8*] }* @_ZTV19UpgradeDetectorImpl, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %10 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast %union.anon* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 168, i1 false) #12
  %13 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 4
  %14 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 2
  %15 = load %"class.base::TickClock"*, %"class.base::TickClock"** %14, align 8
  tail call void @_ZN4base12OneShotTimerC1EPKNS_9TickClockE(%"class.base::OneShotTimer"* %13, %"class.base::TickClock"* %15) #12
  %16 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 5
  %17 = load %"class.base::TickClock"*, %"class.base::TickClock"** %14, align 8
  tail call void @_ZN4base12OneShotTimerC1EPKNS_9TickClockE(%"class.base::OneShotTimer"* %16, %"class.base::TickClock"* %17) #12
  %18 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 6
  store i8 1, i8* %18, align 8
  %19 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 7
  %20 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #12
  %21 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %20, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches17kSimulateOutdatedE, i64 0, i64 0)) #12
  br i1 %21, label %22, label %24

22:                                               ; preds = %3
  store i8 1, i8* %19, align 1
  %23 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 8
  br label %41

24:                                               ; preds = %3
  %25 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %20, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches21kSimulateOutdatedNoAUE, i64 0, i64 0)) #12
  %26 = zext i1 %25 to i8
  store i8 %26, i8* %19, align 1
  %27 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 8
  br i1 %25, label %41, label %28

28:                                               ; preds = %24
  %29 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #12
  %30 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %29, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches16kSimulateUpgradeE, i64 0, i64 0)) #12
  br i1 %30, label %41, label %31

31:                                               ; preds = %28
  %32 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %29, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches26kCheckForUpdateIntervalSecE, i64 0, i64 0)) #12
  br i1 %32, label %41, label %33

33:                                               ; preds = %31
  %34 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %29, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches23kSimulateCriticalUpdateE, i64 0, i64 0)) #12
  br i1 %34, label %41, label %35

35:                                               ; preds = %33
  %36 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #12
  %37 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %36, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches17kSimulateOutdatedE, i64 0, i64 0)) #12
  br i1 %37, label %41, label %38

38:                                               ; preds = %35
  %39 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %36, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches21kSimulateOutdatedNoAUE, i64 0, i64 0)) #12
  %40 = zext i1 %39 to i8
  br label %41

41:                                               ; preds = %38, %35, %33, %31, %28, %22, %24
  %42 = phi i8* [ %27, %24 ], [ %23, %22 ], [ %27, %28 ], [ %27, %31 ], [ %27, %33 ], [ %27, %35 ], [ %27, %38 ]
  %43 = phi i8 [ 1, %24 ], [ 1, %22 ], [ 1, %28 ], [ 1, %31 ], [ 1, %33 ], [ 1, %35 ], [ %40, %38 ]
  store i8 %43, i8* %42, align 2
  %44 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 9
  %45 = bitcast %"struct.std::__1::array"* %44 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 32, i1 false) #12
  %46 = tail call i64 @_ZN4base12GetBuildTimeEv() #12
  %47 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 10, i32 0, i32 0
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 11, i32 0
  %49 = ptrtoint %class.UpgradeDetectorImpl* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %48, i64 %49) #12
  ret void
}

declare void @_ZN15UpgradeDetectorC2EPKN4base5ClockEPKNS0_9TickClockE(%class.UpgradeDetector*, %"class.base::Clock"*, %"class.base::TickClock"*) unnamed_addr #1

declare void @_ZN4base12OneShotTimerC1EPKNS_9TickClockE(%"class.base::OneShotTimer"*, %"class.base::TickClock"*) unnamed_addr #1

declare i64 @_ZN4base12GetBuildTimeEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19UpgradeDetectorImplD2Ev(%class.UpgradeDetectorImpl*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [5 x i8*], [5 x i8*] }, { [14 x i8*], [5 x i8*], [5 x i8*] }* @_ZTV19UpgradeDetectorImpl, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.BuildStateObserver, %class.BuildStateObserver* %3, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [5 x i8*], [5 x i8*] }, { [14 x i8*], [5 x i8*], [5 x i8*] }* @_ZTV19UpgradeDetectorImpl, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 2, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [5 x i8*], [5 x i8*] }, { [14 x i8*], [5 x i8*], [5 x i8*] }* @_ZTV19UpgradeDetectorImpl, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 11, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %6) #12
  %7 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 5
  tail call void @_ZN4base12OneShotTimerD1Ev(%"class.base::OneShotTimer"* %7) #12
  %8 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 4
  tail call void @_ZN4base12OneShotTimerD1Ev(%"class.base::OneShotTimer"* %8) #12
  %9 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN22InstalledVersionPollerD1Ev(%class.InstalledVersionPoller* %13) #12
  store i8 0, i8* %9, align 8
  br label %14

14:                                               ; preds = %1, %12
  %15 = getelementptr inbounds %class.BuildStateObserver, %class.BuildStateObserver* %3, i64 0, i32 0
  tail call void @_ZN4base15CheckedObserverD2Ev(%"class.base::CheckedObserver"* %15) #12
  %16 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0
  tail call void @_ZN15UpgradeDetectorD2Ev(%class.UpgradeDetector* %16) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base12OneShotTimerD1Ev(%"class.base::OneShotTimer"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN15UpgradeDetectorD2Ev(%class.UpgradeDetector*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn280_N19UpgradeDetectorImplD1Ev(%class.UpgradeDetectorImpl*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 -1, i32 4, i32 0, i32 4, i32 1
  %3 = bitcast i8** %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [5 x i8*], [5 x i8*] }, { [14 x i8*], [5 x i8*], [5 x i8*] }* @_ZTV19UpgradeDetectorImpl, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i8*, i8** %2, i64 35
  %5 = bitcast i8** %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [5 x i8*], [5 x i8*] }, { [14 x i8*], [5 x i8*], [5 x i8*] }* @_ZTV19UpgradeDetectorImpl, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i8*, i8** %2, i64 38
  %7 = bitcast i8** %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [5 x i8*], [5 x i8*] }, { [14 x i8*], [5 x i8*], [5 x i8*] }* @_ZTV19UpgradeDetectorImpl, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i8*, i8** %2, i64 99
  %9 = bitcast i8** %8 to %"class.base::internal::WeakPtrFactoryBase"*
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %9) #12
  %10 = getelementptr inbounds i8*, i8** %2, i64 77
  %11 = bitcast i8** %10 to %"class.base::OneShotTimer"*
  tail call void @_ZN4base12OneShotTimerD1Ev(%"class.base::OneShotTimer"* %11) #12
  %12 = getelementptr inbounds i8*, i8** %2, i64 61
  %13 = bitcast i8** %12 to %"class.base::OneShotTimer"*
  tail call void @_ZN4base12OneShotTimerD1Ev(%"class.base::OneShotTimer"* %13) #12
  %14 = getelementptr inbounds i8*, i8** %2, i64 39
  %15 = bitcast i8** %14 to i8*
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %1
  %19 = getelementptr inbounds i8*, i8** %2, i64 40
  %20 = bitcast i8** %19 to %class.InstalledVersionPoller*
  tail call void @_ZN22InstalledVersionPollerD1Ev(%class.InstalledVersionPoller* %20) #12
  store i8 0, i8* %15, align 8
  br label %21

21:                                               ; preds = %1, %18
  %22 = bitcast i8** %4 to %"class.base::CheckedObserver"*
  tail call void @_ZN4base15CheckedObserverD2Ev(%"class.base::CheckedObserver"* %22) #12
  %23 = bitcast i8** %2 to %class.UpgradeDetector*
  tail call void @_ZN15UpgradeDetectorD2Ev(%class.UpgradeDetector* %23) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn304_N19UpgradeDetectorImplD1Ev(%class.UpgradeDetectorImpl*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 -1, i32 4, i32 0, i32 2, i32 0
  %3 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [5 x i8*], [5 x i8*] }, { [14 x i8*], [5 x i8*], [5 x i8*] }* @_ZTV19UpgradeDetectorImpl, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i8, i8* %2, i64 280
  %5 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [5 x i8*], [5 x i8*] }, { [14 x i8*], [5 x i8*], [5 x i8*] }* @_ZTV19UpgradeDetectorImpl, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 304
  %7 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [5 x i8*], [5 x i8*] }, { [14 x i8*], [5 x i8*], [5 x i8*] }* @_ZTV19UpgradeDetectorImpl, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 792
  %9 = bitcast i8* %8 to %"class.base::internal::WeakPtrFactoryBase"*
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %9) #12
  %10 = getelementptr inbounds i8, i8* %2, i64 616
  %11 = bitcast i8* %10 to %"class.base::OneShotTimer"*
  tail call void @_ZN4base12OneShotTimerD1Ev(%"class.base::OneShotTimer"* %11) #12
  %12 = getelementptr inbounds i8, i8* %2, i64 488
  %13 = bitcast i8* %12 to %"class.base::OneShotTimer"*
  tail call void @_ZN4base12OneShotTimerD1Ev(%"class.base::OneShotTimer"* %13) #12
  %14 = getelementptr inbounds i8, i8* %2, i64 312
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds i8, i8* %2, i64 320
  %19 = bitcast i8* %18 to %class.InstalledVersionPoller*
  tail call void @_ZN22InstalledVersionPollerD1Ev(%class.InstalledVersionPoller* %19) #12
  store i8 0, i8* %14, align 8
  br label %20

20:                                               ; preds = %1, %17
  %21 = bitcast i8* %4 to %"class.base::CheckedObserver"*
  tail call void @_ZN4base15CheckedObserverD2Ev(%"class.base::CheckedObserver"* %21) #12
  %22 = bitcast i8* %2 to %class.UpgradeDetector*
  tail call void @_ZN15UpgradeDetectorD2Ev(%class.UpgradeDetector* %22) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19UpgradeDetectorImplD0Ev(%class.UpgradeDetectorImpl*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [5 x i8*], [5 x i8*] }, { [14 x i8*], [5 x i8*], [5 x i8*] }* @_ZTV19UpgradeDetectorImpl, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.BuildStateObserver, %class.BuildStateObserver* %3, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [5 x i8*], [5 x i8*] }, { [14 x i8*], [5 x i8*], [5 x i8*] }* @_ZTV19UpgradeDetectorImpl, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 2, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [5 x i8*], [5 x i8*] }, { [14 x i8*], [5 x i8*], [5 x i8*] }* @_ZTV19UpgradeDetectorImpl, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 11, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %6) #12
  %7 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 5
  tail call void @_ZN4base12OneShotTimerD1Ev(%"class.base::OneShotTimer"* %7) #12
  %8 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 4
  tail call void @_ZN4base12OneShotTimerD1Ev(%"class.base::OneShotTimer"* %8) #12
  %9 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN22InstalledVersionPollerD1Ev(%class.InstalledVersionPoller* %13) #12
  store i8 0, i8* %9, align 8
  br label %14

14:                                               ; preds = %1, %12
  %15 = getelementptr inbounds %class.BuildStateObserver, %class.BuildStateObserver* %3, i64 0, i32 0
  tail call void @_ZN4base15CheckedObserverD2Ev(%"class.base::CheckedObserver"* %15) #12
  %16 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0
  tail call void @_ZN15UpgradeDetectorD2Ev(%class.UpgradeDetector* %16) #12
  %17 = bitcast %class.UpgradeDetectorImpl* %0 to i8*
  tail call void @_ZdlPv(i8* %17) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn280_N19UpgradeDetectorImplD0Ev(%class.UpgradeDetectorImpl*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 -1, i32 4, i32 0, i32 4, i32 1
  %3 = bitcast i8** %2 to %class.UpgradeDetectorImpl*
  tail call void @_ZN19UpgradeDetectorImplD0Ev(%class.UpgradeDetectorImpl* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn304_N19UpgradeDetectorImplD0Ev(%class.UpgradeDetectorImpl*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 -1, i32 4, i32 0, i32 2, i32 0
  %3 = bitcast i8* %2 to %class.UpgradeDetectorImpl*
  tail call void @_ZN19UpgradeDetectorImplD0Ev(%class.UpgradeDetectorImpl* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19UpgradeDetectorImpl28GetCurrentlyInstalledVersionEv(%"class.base::Version"* noalias sret) local_unnamed_addr #0 align 2 {
  %2 = alloca %struct.InstalledAndCriticalVersion, align 8
  %3 = bitcast %struct.InstalledAndCriticalVersion* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %3) #12
  call void @_Z19GetInstalledVersionv(%struct.InstalledAndCriticalVersion* nonnull sret %2) #12
  %4 = getelementptr inbounds %struct.InstalledAndCriticalVersion, %struct.InstalledAndCriticalVersion* %2, i64 0, i32 0
  call void @_ZN4base7VersionC1ERKS0_(%"class.base::Version"* %0, %"class.base::Version"* nonnull dereferenceable(24) %4) #12
  call void @_ZN27InstalledAndCriticalVersionD1Ev(%struct.InstalledAndCriticalVersion* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %3) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare void @_Z19GetInstalledVersionv(%struct.InstalledAndCriticalVersion* sret) local_unnamed_addr #1

declare void @_ZN4base7VersionC1ERKS0_(%"class.base::Version"*, %"class.base::Version"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN27InstalledAndCriticalVersionD1Ev(%struct.InstalledAndCriticalVersion*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19UpgradeDetectorImpl29StartUpgradeNotificationTimerEv(%class.UpgradeDetectorImpl*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 5, i32 0
  %3 = tail call zeroext i1 @_ZNK4base8internal9TimerBase9IsRunningEv(%"class.base::internal::TimerBase"* %2) #12
  br i1 %3, label %26, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 5, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %16

8:                                                ; preds = %4
  %9 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 1
  %10 = load %"class.base::Clock"*, %"class.base::Clock"** %9, align 8
  %11 = bitcast %"class.base::Clock"* %10 to i64 (%"class.base::Clock"*)***
  %12 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %11, align 8
  %13 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %12, i64 2
  %14 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %13, align 8
  %15 = tail call i64 %14(%"class.base::Clock"* %10) #12
  store i64 %15, i64* %5, align 8
  br label %16

16:                                               ; preds = %8, %4
  %17 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 1
  %18 = load %"class.base::Clock"*, %"class.base::Clock"** %17, align 8
  %19 = bitcast %"class.base::Clock"* %18 to i64 (%"class.base::Clock"*)***
  %20 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %19, align 8
  %21 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %20, i64 2
  %22 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %21, align 8
  %23 = tail call i64 %22(%"class.base::Clock"* %18) #12
  %24 = load i64, i64* %5, align 8
  %25 = sub nsw i64 %23, %24
  tail call void @_ZN19UpgradeDetectorImpl29NotifyOnUpgradeWithTimePassedEN4base9TimeDeltaE(%class.UpgradeDetectorImpl* %0, i64 %25) #12
  br label %26

26:                                               ; preds = %1, %16
  ret void
}

declare zeroext i1 @_ZNK4base8internal9TimerBase9IsRunningEv(%"class.base::internal::TimerBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19UpgradeDetectorImpl15NotifyOnUpgradeEv(%class.UpgradeDetectorImpl*) #0 align 2 {
  %2 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 1
  %3 = load %"class.base::Clock"*, %"class.base::Clock"** %2, align 8
  %4 = bitcast %"class.base::Clock"* %3 to i64 (%"class.base::Clock"*)***
  %5 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %4, align 8
  %6 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %5, i64 2
  %7 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %6, align 8
  %8 = tail call i64 %7(%"class.base::Clock"* %3) #12
  %9 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 5, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = sub nsw i64 %8, %10
  tail call void @_ZN19UpgradeDetectorImpl29NotifyOnUpgradeWithTimePassedEN4base9TimeDeltaE(%class.UpgradeDetectorImpl* %0, i64 %11)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19UpgradeDetectorImpl20InitializeThresholdsEv(%class.UpgradeDetectorImpl* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeDelta", align 8
  %3 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 9, i32 0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %6, label %34

6:                                                ; preds = %1
  %7 = bitcast %"class.base::TimeDelta"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 0, i32 0
  %9 = tail call i64 @_ZN15UpgradeDetector29GetRelaunchNotificationPeriodEv() #12
  store i64 %9, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %23, label %11

11:                                               ; preds = %6
  store i64 %9, i64* %3, align 8
  %12 = sdiv i64 %9, 3
  %13 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 9, i32 0, i64 2
  %14 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %13, i64 0, i32 0
  store i64 %12, i64* %14, align 8
  %15 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %2, i64 %12) #12
  %16 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 9, i32 0, i64 1, i32 0
  store i64 %15, i64* %16, align 8
  %17 = load i64, i64* %14, align 8
  %18 = icmp sgt i64 %17, 3600000000
  %19 = select i1 %18, %"class.base::TimeDelta"* @_ZN12_GLOBAL__N_124kDefaultVeryLowThresholdE, %"class.base::TimeDelta"* %13
  %20 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %19, i64 0, i32 0
  %21 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 9, i32 0, i64 3, i32 0
  %22 = load i64, i64* %20, align 8
  store i64 %22, i64* %21, align 8
  br label %33

23:                                               ; preds = %6
  %24 = bitcast i64* %3 to <2 x i64>*
  store <2 x i64> <i64 604800000000, i64 345600000000>, <2 x i64>* %24, align 8
  %25 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 9, i32 0, i64 2, i32 0
  %26 = bitcast i64* %25 to <2 x i64>*
  store <2 x i64> <i64 172800000000, i64 3600000000>, <2 x i64>* %26, align 8
  %27 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 8
  %28 = load i8, i8* %27, align 2, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %23
  %31 = bitcast i64* %3 to <2 x i64>*
  store <2 x i64> <i64 70000000, i64 40000000>, <2 x i64>* %31, align 8
  %32 = bitcast i64* %25 to <2 x i64>*
  store <2 x i64> <i64 20000000, i64 416666>, <2 x i64>* %32, align 8
  br label %33

33:                                               ; preds = %11, %23, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  br label %34

34:                                               ; preds = %1, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19UpgradeDetectorImpl22DoInitializeThresholdsEv(%class.UpgradeDetectorImpl*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeDelta", align 8
  %3 = bitcast %"class.base::TimeDelta"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #12
  %4 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 0, i32 0
  %5 = tail call i64 @_ZN15UpgradeDetector29GetRelaunchNotificationPeriodEv() #12
  store i64 %5, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  %7 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 9
  br i1 %6, label %21, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %7, i64 0, i32 0, i64 0, i32 0
  store i64 %5, i64* %9, align 8
  %10 = sdiv i64 %5, 3
  %11 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 9, i32 0, i64 2
  %12 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %11, i64 0, i32 0
  store i64 %10, i64* %12, align 8
  %13 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %2, i64 %10)
  %14 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 9, i32 0, i64 1, i32 0
  store i64 %13, i64* %14, align 8
  %15 = load i64, i64* %12, align 8
  %16 = icmp sgt i64 %15, 3600000000
  %17 = select i1 %16, %"class.base::TimeDelta"* @_ZN12_GLOBAL__N_124kDefaultVeryLowThresholdE, %"class.base::TimeDelta"* %11
  %18 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %17, i64 0, i32 0
  %19 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 9, i32 0, i64 3, i32 0
  %20 = load i64, i64* %18, align 8
  store i64 %20, i64* %19, align 8
  br label %32

21:                                               ; preds = %1
  %22 = bitcast %"struct.std::__1::array"* %7 to <2 x i64>*
  store <2 x i64> <i64 604800000000, i64 345600000000>, <2 x i64>* %22, align 8
  %23 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 9, i32 0, i64 2, i32 0
  %24 = bitcast i64* %23 to <2 x i64>*
  store <2 x i64> <i64 172800000000, i64 3600000000>, <2 x i64>* %24, align 8
  %25 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 8
  %26 = load i8, i8* %25, align 2, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %21
  %29 = bitcast %"struct.std::__1::array"* %7 to <2 x i64>*
  store <2 x i64> <i64 70000000, i64 40000000>, <2 x i64>* %29, align 8
  %30 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 9, i32 0, i64 2, i32 0
  %31 = bitcast i64* %30 to <2 x i64>*
  store <2 x i64> <i64 20000000, i64 416666>, <2 x i64>* %31, align 8
  br label %32

32:                                               ; preds = %28, %21, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #12
  ret void
}

declare i64 @_ZN15UpgradeDetector29GetRelaunchNotificationPeriodEv() local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = add i64 %1, -9223372036854775807
  %7 = icmp ult i64 %6, 2
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp sgt i64 %1, -1
  %12 = select i1 %11, i64 -9223372036854775808, i64 9223372036854775807
  %13 = tail call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %10, i64 %1) #12
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = select i1 %14, i64 %12, i64 %15, !prof !3
  ret i64 %16

17:                                               ; preds = %2
  %18 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp eq i64 %21, %1
  br i1 %23, label %25, label %24

24:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %19, align 8
  br label %34

25:                                               ; preds = %17
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #12
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* %26, i8* %27) #12
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %19, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i32 387, %"class.logging::CheckOpResult"* nonnull %4) #12
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #12
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  %35 = icmp slt i64 %1, 0
  %36 = select i1 %35, i64 9223372036854775807, i64 -9223372036854775808
  ret i64 %36
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19UpgradeDetectorImpl26StartOutdatedBuildDetectorEv(%class.UpgradeDetectorImpl*) #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZZN19UpgradeDetectorImpl26StartOutdatedBuildDetectorEvE22kOutdatedBuildDetector) #12
  br i1 %3, label %4, label %27

4:                                                ; preds = %1
  %5 = tail call zeroext i1 @_ZN14ObsoleteSystem19IsObsoleteNowOrSoonEv() #12
  br i1 %5, label %6, label %8

6:                                                ; preds = %4
  %7 = tail call zeroext i1 @_ZN14ObsoleteSystem14IsEndOfTheLineEv() #12
  br i1 %7, label %27, label %8

8:                                                ; preds = %6, %4
  %9 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 7
  %10 = load i8, i8* %9, align 1, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %26

12:                                               ; preds = %8
  %13 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #12
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 24, i1 false) #12
  %15 = call zeroext i1 @_ZN12google_brand8GetBrandEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull %2) #12
  br i1 %15, label %16, label %18

16:                                               ; preds = %12
  %17 = call zeroext i1 @_ZN12google_brand9IsOrganicERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #12
  br label %18

18:                                               ; preds = %16, %12
  %19 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %18
  %24 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %24) #13
  br label %25

25:                                               ; preds = %18, %23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #12
  br label %27

26:                                               ; preds = %8
  tail call void @_ZN19UpgradeDetectorImpl21DetectOutdatedInstallEv(%class.UpgradeDetectorImpl* %0)
  br label %27

27:                                               ; preds = %6, %1, %26, %25
  ret void
}

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #1

declare zeroext i1 @_ZN14ObsoleteSystem19IsObsoleteNowOrSoonEv() local_unnamed_addr #1

declare zeroext i1 @_ZN14ObsoleteSystem14IsEndOfTheLineEv() local_unnamed_addr #1

declare zeroext i1 @_ZN12google_brand8GetBrandEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"*) local_unnamed_addr #1

declare zeroext i1 @_ZN12google_brand9IsOrganicERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19UpgradeDetectorImpl21DetectOutdatedInstallEv(%class.UpgradeDetectorImpl*) #0 align 2 {
  %2 = alloca %"class.base::Time", align 8
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = alloca %"class.base::Location", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = bitcast %"class.base::Time"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %2, i64 0, i32 0, i32 0
  store i64 0, i64* %7, align 8
  %8 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  store i64 0, i64* %9, align 8
  %10 = load %class.BrowserProcess*, %class.BrowserProcess** @g_browser_process, align 8
  %11 = bitcast %class.BrowserProcess* %10 to %"class.network_time::NetworkTimeTracker"* (%class.BrowserProcess*)***
  %12 = load %"class.network_time::NetworkTimeTracker"* (%class.BrowserProcess*)**, %"class.network_time::NetworkTimeTracker"* (%class.BrowserProcess*)*** %11, align 8
  %13 = getelementptr inbounds %"class.network_time::NetworkTimeTracker"* (%class.BrowserProcess*)*, %"class.network_time::NetworkTimeTracker"* (%class.BrowserProcess*)** %12, i64 43
  %14 = load %"class.network_time::NetworkTimeTracker"* (%class.BrowserProcess*)*, %"class.network_time::NetworkTimeTracker"* (%class.BrowserProcess*)** %13, align 8
  %15 = tail call %"class.network_time::NetworkTimeTracker"* %14(%class.BrowserProcess* %10) #12
  %16 = call i32 @_ZNK12network_time18NetworkTimeTracker14GetNetworkTimeEPN4base4TimeEPNS1_9TimeDeltaE(%"class.network_time::NetworkTimeTracker"* %15, %"class.base::Time"* nonnull %2, %"class.base::TimeDelta"* nonnull %3) #12
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %1
  %19 = load i64, i64* %7, align 8
  br label %22

20:                                               ; preds = %1
  %21 = call i64 @_ZN4base4Time3NowEv() #12
  store i64 %21, i64* %7, align 8
  br label %22

22:                                               ; preds = %18, %20
  %23 = phi i64 [ %19, %18 ], [ %21, %20 ]
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %77, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 10, i32 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq i64 %27, 0
  %29 = icmp slt i64 %23, %27
  %30 = or i1 %28, %29
  br i1 %30, label %77, label %31

31:                                               ; preds = %25
  %32 = sub nsw i64 %23, %27
  %33 = icmp sgt i64 %32, 7257600000000
  br i1 %33, label %34, label %65

34:                                               ; preds = %31
  %35 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 6
  %36 = load i8, i8* %35, align 8, !range !2
  %37 = icmp eq i8 %36, 0
  %38 = select i1 %37, i32 4, i32 3
  %39 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 4
  store i32 %38, i32* %39, align 8
  %40 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 8
  store i8 0, i8* %40, align 2
  %41 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 5, i32 0
  %42 = call zeroext i1 @_ZNK4base8internal9TimerBase9IsRunningEv(%"class.base::internal::TimerBase"* %41) #12
  br i1 %42, label %77, label %43

43:                                               ; preds = %34
  %44 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 5, i32 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %55

47:                                               ; preds = %43
  %48 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 1
  %49 = load %"class.base::Clock"*, %"class.base::Clock"** %48, align 8
  %50 = bitcast %"class.base::Clock"* %49 to i64 (%"class.base::Clock"*)***
  %51 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %50, align 8
  %52 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %51, i64 2
  %53 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %52, align 8
  %54 = call i64 %53(%"class.base::Clock"* %49) #12
  store i64 %54, i64* %44, align 8
  br label %55

55:                                               ; preds = %47, %43
  %56 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 1
  %57 = load %"class.base::Clock"*, %"class.base::Clock"** %56, align 8
  %58 = bitcast %"class.base::Clock"* %57 to i64 (%"class.base::Clock"*)***
  %59 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %58, align 8
  %60 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %59, i64 2
  %61 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %60, align 8
  %62 = call i64 %61(%"class.base::Clock"* %57) #12
  %63 = load i64, i64* %44, align 8
  %64 = sub nsw i64 %62, %63
  call void @_ZN19UpgradeDetectorImpl29NotifyOnUpgradeWithTimePassedEN4base9TimeDeltaE(%class.UpgradeDetectorImpl* %0, i64 %64) #12
  br label %77

65:                                               ; preds = %31
  %66 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 4
  %67 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %67) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.2, i64 0, i64 0), i32 254) #12
  %68 = ptrtoint %class.UpgradeDetectorImpl* %0 to i64
  %69 = call i8* @_Znwm(i64 56) #13, !noalias !4
  %70 = bitcast i8* %69 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %70, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIM19UpgradeDetectorImplFvvEJNS0_17UnretainedWrapperIS3_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIM19UpgradeDetectorImplFvvEJNS0_17UnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !4
  %71 = getelementptr inbounds i8, i8* %69, i64 32
  %72 = bitcast i8* %71 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%class.UpgradeDetectorImpl*)* @_ZN19UpgradeDetectorImpl21DetectOutdatedInstallEv to i64), i64 0>, <2 x i64>* %72, align 8, !noalias !4
  %73 = getelementptr inbounds i8, i8* %69, i64 48
  %74 = bitcast i8* %73 to i64*
  store i64 %68, i64* %74, align 8, !noalias !4
  %75 = bitcast %"class.base::OnceCallback"* %5 to i8**
  store i8* %69, i8** %75, align 8, !alias.scope !4
  call void @_ZN4base12OneShotTimer5StartERKNS_8LocationENS_9TimeDeltaENS_12OnceCallbackIFvvEEE(%"class.base::OneShotTimer"* %66, %"class.base::Location"* nonnull dereferenceable(32) %4, i64 86400000000, %"class.base::OnceCallback"* nonnull %5) #12
  %76 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %76) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %67) #12
  br label %77

77:                                               ; preds = %55, %34, %65, %22, %25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  ret void
}

declare i32 @_ZNK12network_time18NetworkTimeTracker14GetNetworkTimeEPN4base4TimeEPNS1_9TimeDeltaE(%"class.network_time::NetworkTimeTracker"*, %"class.base::Time"*, %"class.base::TimeDelta"*) local_unnamed_addr #1

declare i64 @_ZN4base4Time3NowEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19UpgradeDetectorImpl15UpgradeDetectedEN15UpgradeDetector16UpgradeAvailableE(%class.UpgradeDetectorImpl*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 4
  store i32 %1, i32* %3, align 8
  %4 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 8
  store i8 0, i8* %4, align 2
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 7
  %8 = load i8, i8* %7, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %35, label %10

10:                                               ; preds = %6, %2
  %11 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 5, i32 0
  %12 = tail call zeroext i1 @_ZNK4base8internal9TimerBase9IsRunningEv(%"class.base::internal::TimerBase"* %11) #12
  br i1 %12, label %39, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 5, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %25

17:                                               ; preds = %13
  %18 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 1
  %19 = load %"class.base::Clock"*, %"class.base::Clock"** %18, align 8
  %20 = bitcast %"class.base::Clock"* %19 to i64 (%"class.base::Clock"*)***
  %21 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %20, align 8
  %22 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %21, i64 2
  %23 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %22, align 8
  %24 = tail call i64 %23(%"class.base::Clock"* %19) #12
  store i64 %24, i64* %14, align 8
  br label %25

25:                                               ; preds = %17, %13
  %26 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 1
  %27 = load %"class.base::Clock"*, %"class.base::Clock"** %26, align 8
  %28 = bitcast %"class.base::Clock"* %27 to i64 (%"class.base::Clock"*)***
  %29 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %28, align 8
  %30 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %29, i64 2
  %31 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %30, align 8
  %32 = tail call i64 %31(%"class.base::Clock"* %27) #12
  %33 = load i64, i64* %14, align 8
  %34 = sub nsw i64 %32, %33
  tail call void @_ZN19UpgradeDetectorImpl29NotifyOnUpgradeWithTimePassedEN4base9TimeDeltaE(%class.UpgradeDetectorImpl* %0, i64 %34) #12
  br label %39

35:                                               ; preds = %6
  %36 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 5, i32 0
  tail call void @_ZN4base8internal9TimerBase4StopEv(%"class.base::internal::TimerBase"* %36) #12
  %37 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 5, i32 0, i32 0
  store i64 0, i64* %37, align 8
  %38 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 10
  store i32 0, i32* %38, align 8
  br label %39

39:                                               ; preds = %25, %10, %35
  ret void
}

declare void @_ZN4base12OneShotTimer5StartERKNS_8LocationENS_9TimeDeltaENS_12OnceCallbackIFvvEEE(%"class.base::OneShotTimer"*, %"class.base::Location"* dereferenceable(32), i64, %"class.base::OnceCallback"*) unnamed_addr #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

declare void @_ZN4base8internal9TimerBase4StopEv(%"class.base::internal::TimerBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19UpgradeDetectorImpl27OnExperimentChangesDetectedEN10variations17VariationsService8Observer8SeverityE(%class.UpgradeDetectorImpl*, i32) unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 0
  %4 = zext i1 %3 to i8
  %5 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 6
  store i8 %4, i8* %5, align 8
  %6 = icmp eq i32 %1, 1
  %7 = zext i1 %6 to i8
  %8 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 7
  store i8 %7, i8* %8, align 1
  %9 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 5, i32 0
  %10 = tail call zeroext i1 @_ZNK4base8internal9TimerBase9IsRunningEv(%"class.base::internal::TimerBase"* %9) #12
  br i1 %10, label %33, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 5, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %15, label %23

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 1
  %17 = load %"class.base::Clock"*, %"class.base::Clock"** %16, align 8
  %18 = bitcast %"class.base::Clock"* %17 to i64 (%"class.base::Clock"*)***
  %19 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %18, align 8
  %20 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %19, i64 2
  %21 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %20, align 8
  %22 = tail call i64 %21(%"class.base::Clock"* %17) #12
  store i64 %22, i64* %12, align 8
  br label %23

23:                                               ; preds = %15, %11
  %24 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 1
  %25 = load %"class.base::Clock"*, %"class.base::Clock"** %24, align 8
  %26 = bitcast %"class.base::Clock"* %25 to i64 (%"class.base::Clock"*)***
  %27 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %26, align 8
  %28 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %27, i64 2
  %29 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %28, align 8
  %30 = tail call i64 %29(%"class.base::Clock"* %25) #12
  %31 = load i64, i64* %12, align 8
  %32 = sub nsw i64 %30, %31
  tail call void @_ZN19UpgradeDetectorImpl29NotifyOnUpgradeWithTimePassedEN4base9TimeDeltaE(%class.UpgradeDetectorImpl* %0, i64 %32) #12
  br label %33

33:                                               ; preds = %2, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn304_N19UpgradeDetectorImpl27OnExperimentChangesDetectedEN10variations17VariationsService8Observer8SeverityE(%class.UpgradeDetectorImpl*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 -1, i32 4, i32 0, i32 2, i32 0
  %4 = bitcast i8* %3 to %class.UpgradeDetectorImpl*
  %5 = icmp eq i32 %1, 0
  %6 = zext i1 %5 to i8
  %7 = getelementptr inbounds i8, i8* %3, i64 80
  store i8 %6, i8* %7, align 8
  %8 = icmp eq i32 %1, 1
  %9 = zext i1 %8 to i8
  %10 = getelementptr inbounds i8, i8* %3, i64 81
  store i8 %9, i8* %10, align 1
  %11 = getelementptr inbounds i8, i8* %3, i64 616
  %12 = bitcast i8* %11 to %"class.base::internal::TimerBase"*
  %13 = tail call zeroext i1 @_ZNK4base8internal9TimerBase9IsRunningEv(%"class.base::internal::TimerBase"* %12) #12
  br i1 %13, label %39, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds i8, i8* %3, i64 72
  %16 = bitcast i8* %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %19, label %28

19:                                               ; preds = %14
  %20 = getelementptr inbounds i8, i8* %3, i64 8
  %21 = bitcast i8* %20 to %"class.base::Clock"**
  %22 = load %"class.base::Clock"*, %"class.base::Clock"** %21, align 8
  %23 = bitcast %"class.base::Clock"* %22 to i64 (%"class.base::Clock"*)***
  %24 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %23, align 8
  %25 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %24, i64 2
  %26 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %25, align 8
  %27 = tail call i64 %26(%"class.base::Clock"* %22) #12
  store i64 %27, i64* %16, align 8
  br label %28

28:                                               ; preds = %14, %19
  %29 = getelementptr inbounds i8, i8* %3, i64 8
  %30 = bitcast i8* %29 to %"class.base::Clock"**
  %31 = load %"class.base::Clock"*, %"class.base::Clock"** %30, align 8
  %32 = bitcast %"class.base::Clock"* %31 to i64 (%"class.base::Clock"*)***
  %33 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %32, align 8
  %34 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %33, i64 2
  %35 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %34, align 8
  %36 = tail call i64 %35(%"class.base::Clock"* %31) #12
  %37 = load i64, i64* %16, align 8
  %38 = sub nsw i64 %36, %37
  tail call void @_ZN19UpgradeDetectorImpl29NotifyOnUpgradeWithTimePassedEN4base9TimeDeltaE(%class.UpgradeDetectorImpl* %4, i64 %38) #12
  br label %39

39:                                               ; preds = %2, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19UpgradeDetectorImpl29NotifyOnUpgradeWithTimePassedEN4base9TimeDeltaE(%class.UpgradeDetectorImpl*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0
  %7 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 10
  %8 = load i32, i32* %7, align 8
  %9 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  store i64 0, i64* %4, align 8
  %10 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 4
  %11 = load i32, i32* %10, align 8
  %12 = icmp sgt i32 %11, 1
  br i1 %12, label %64, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 7
  %15 = load i8, i8* %14, align 1, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %64

17:                                               ; preds = %13
  %18 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 9, i32 0, i64 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp sgt i64 %19, %1
  br i1 %20, label %21, label %64

21:                                               ; preds = %17
  %22 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 9, i32 0, i64 1, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp sgt i64 %23, %1
  br i1 %24, label %77, label %25

25:                                               ; preds = %21, %77, %81
  %26 = phi i64 [ 3, %81 ], [ 2, %77 ], [ 1, %21 ]
  %27 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZZN19UpgradeDetectorImpl26StageIndexToAnnoyanceLevelEmE13kIndexToLevel, i64 0, i64 %26
  %28 = load i32, i32* %27, align 4
  br label %29

29:                                               ; preds = %81, %25
  %30 = phi i32 [ %28, %25 ], [ 0, %81 ]
  %31 = phi i64 [ %26, %25 ], [ 4, %81 ]
  %32 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 9, i32 0, i64 %31
  %33 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %32, i64 -1
  %34 = tail call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* %33, i64 %1)
  store i64 %34, i64* %4, align 8
  store i32 %30, i32* %7, align 8
  %35 = icmp eq i64 %34, 0
  %36 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 5
  br i1 %35, label %66, label %37

37:                                               ; preds = %29
  %38 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %38) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.2, i64 0, i64 0), i32 317) #12
  %39 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 8
  %40 = load i8, i8* %39, align 2, !range !2
  %41 = icmp eq i8 %40, 0
  %42 = select i1 %41, %"class.base::TimeDelta"* @_ZN12_GLOBAL__N_116kNotifyCycleTimeE, %"class.base::TimeDelta"* @_ZN12_GLOBAL__N_126kNotifyCycleTimeForTestingE
  %43 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %42, i64 0, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = icmp slt i64 %44, %34
  %46 = bitcast i64* %4 to %"class.base::TimeDelta"*
  %47 = select i1 %45, %"class.base::TimeDelta"* %42, %"class.base::TimeDelta"* %46
  %48 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %47, i64 0, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50)
  %51 = ptrtoint %class.UpgradeDetectorImpl* %0 to i64
  %52 = call i8* @_Znwm(i64 56) #13, !noalias !9
  %53 = bitcast i8* %52 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %53, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIM19UpgradeDetectorImplFvvEJNS0_17UnretainedWrapperIS3_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIM19UpgradeDetectorImplFvvEJNS0_17UnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !9
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%class.UpgradeDetectorImpl*)* @_ZN19UpgradeDetectorImpl15NotifyOnUpgradeEv to i64), i64 0>, <2 x i64>* %55, align 8, !noalias !9
  %56 = getelementptr inbounds i8, i8* %52, i64 48
  %57 = bitcast i8* %56 to i64*
  store i64 %51, i64* %57, align 8, !noalias !9
  %58 = bitcast %"class.base::OnceCallback"* %3 to i8**
  store i8* %52, i8** %58, align 8, !alias.scope !9
  %59 = bitcast %"class.base::OneShotTimer"* %36 to void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)***
  %60 = load void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)**, void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)*, void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)** %60, i64 7
  %62 = load void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)*, void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)** %61, align 8
  call void %62(%"class.base::OneShotTimer"* %36, %"class.base::Location"* nonnull dereferenceable(32) %5, i64 %49, %"class.base::OnceCallback"* nonnull %3) #12
  %63 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %63) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %38) #12
  br label %71

64:                                               ; preds = %13, %17, %2
  %65 = phi i32 [ 5, %2 ], [ 5, %13 ], [ 3, %17 ]
  store i32 %65, i32* %7, align 8
  br label %66

66:                                               ; preds = %64, %29
  %67 = phi i32 [ %30, %29 ], [ %65, %64 ]
  %68 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 5, i32 0
  %69 = tail call zeroext i1 @_ZNK4base8internal9TimerBase9IsRunningEv(%"class.base::internal::TimerBase"* %68) #12
  br i1 %69, label %70, label %71

70:                                               ; preds = %66
  tail call void @_ZN4base8internal9TimerBase4StopEv(%"class.base::internal::TimerBase"* %68) #12
  br label %71

71:                                               ; preds = %66, %70, %37
  %72 = phi i32 [ %67, %66 ], [ %67, %70 ], [ %30, %37 ]
  %73 = or i32 %72, %8
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %76, label %75

75:                                               ; preds = %71
  call void @_ZN15UpgradeDetector13NotifyUpgradeEv(%class.UpgradeDetector* %6) #12
  br label %76

76:                                               ; preds = %71, %75
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  ret void

77:                                               ; preds = %21
  %78 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 9, i32 0, i64 2, i32 0
  %79 = load i64, i64* %78, align 8
  %80 = icmp sgt i64 %79, %1
  br i1 %80, label %81, label %25

81:                                               ; preds = %77
  %82 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 9, i32 0, i64 3, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = icmp sgt i64 %83, %1
  br i1 %84, label %29, label %25
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN19UpgradeDetectorImpl26StageIndexToAnnoyanceLevelEm(i64) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZZN19UpgradeDetectorImpl26StageIndexToAnnoyanceLevelEmE13kIndexToLevel, i64 0, i64 %0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

declare void @_ZN15UpgradeDetector13NotifyUpgradeEv(%class.UpgradeDetector*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN19UpgradeDetectorImpl20GetThresholdForLevelEN15UpgradeDetector33UpgradeNotificationAnnoyanceLevelE(%class.UpgradeDetectorImpl* nocapture readonly, i32) local_unnamed_addr #6 align 2 {
  %3 = add i32 %1, -1
  %4 = icmp ult i32 %3, 6
  br i1 %4, label %5, label %9

5:                                                ; preds = %2
  %6 = sext i32 %3 to i64
  %7 = getelementptr inbounds [6 x i64], [6 x i64]* @switch.table._ZN19UpgradeDetectorImpl20GetThresholdForLevelEN15UpgradeDetector33UpgradeNotificationAnnoyanceLevelE, i64 0, i64 %6
  %8 = load i64, i64* %7, align 8
  br label %9

9:                                                ; preds = %2, %5
  %10 = phi i64 [ %8, %5 ], [ 0, %2 ]
  %11 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 9, i32 0, i64 %10, i32 0
  %12 = load i64, i64* %11, align 8
  ret i64 %12
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN19UpgradeDetectorImpl27AnnoyanceLevelToStagesIndexEN15UpgradeDetector33UpgradeNotificationAnnoyanceLevelE(i32) local_unnamed_addr #5 align 2 {
  %2 = add i32 %0, -1
  %3 = icmp ult i32 %2, 6
  br i1 %3, label %4, label %8

4:                                                ; preds = %1
  %5 = sext i32 %2 to i64
  %6 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table._ZN19UpgradeDetectorImpl27AnnoyanceLevelToStagesIndexEN15UpgradeDetector33UpgradeNotificationAnnoyanceLevelE, i64 0, i64 %5
  %7 = load i32, i32* %6, align 4
  ret i32 %7

8:                                                ; preds = %1
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19UpgradeDetectorImpl39OnRelaunchNotificationPeriodPrefChangedEv(%class.UpgradeDetectorImpl*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeDelta", align 8
  %3 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 9, i32 0, i64 0, i32 0
  %4 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 9, i32 0, i64 2, i32 0
  %5 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 9, i32 0, i64 3, i32 0
  %6 = bitcast i64* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 32, i1 false)
  %7 = bitcast %"class.base::TimeDelta"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 0, i32 0
  %9 = tail call i64 @_ZN15UpgradeDetector29GetRelaunchNotificationPeriodEv() #12
  store i64 %9, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %22, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 9, i32 0, i64 1, i32 0
  store i64 %9, i64* %3, align 8
  %13 = sdiv i64 %9, 3
  %14 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 9, i32 0, i64 2
  %15 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %14, i64 0, i32 0
  store i64 %13, i64* %15, align 8
  %16 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %2, i64 %13) #12
  store i64 %16, i64* %12, align 8
  %17 = load i64, i64* %15, align 8
  %18 = icmp sgt i64 %17, 3600000000
  %19 = select i1 %18, %"class.base::TimeDelta"* @_ZN12_GLOBAL__N_124kDefaultVeryLowThresholdE, %"class.base::TimeDelta"* %14
  %20 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %19, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  br label %30

22:                                               ; preds = %1
  %23 = bitcast i64* %3 to <2 x i64>*
  store <2 x i64> <i64 604800000000, i64 345600000000>, <2 x i64>* %23, align 8
  %24 = bitcast i64* %4 to <2 x i64>*
  store <2 x i64> <i64 172800000000, i64 3600000000>, <2 x i64>* %24, align 8
  %25 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 8
  %26 = load i8, i8* %25, align 2, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %22
  %29 = bitcast i64* %3 to <2 x i64>*
  store <2 x i64> <i64 70000000, i64 40000000>, <2 x i64>* %29, align 8
  store i64 20000000, i64* %4, align 8
  br label %30

30:                                               ; preds = %28, %11
  %31 = phi i64 [ %21, %11 ], [ 416666, %28 ]
  store i64 %31, i64* %5, align 8
  br label %32

32:                                               ; preds = %30, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  %33 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 4
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %47, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 1
  %38 = load %"class.base::Clock"*, %"class.base::Clock"** %37, align 8
  %39 = bitcast %"class.base::Clock"* %38 to i64 (%"class.base::Clock"*)***
  %40 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %39, align 8
  %41 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %40, i64 2
  %42 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %41, align 8
  %43 = call i64 %42(%"class.base::Clock"* %38) #12
  %44 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 5, i32 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = sub nsw i64 %43, %45
  call void @_ZN19UpgradeDetectorImpl29NotifyOnUpgradeWithTimePassedEN4base9TimeDeltaE(%class.UpgradeDetectorImpl* %0, i64 %46) #12
  br label %47

47:                                               ; preds = %32, %36
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden %class.UpgradeDetectorImpl* @_ZN19UpgradeDetectorImpl11GetInstanceEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN19UpgradeDetectorImpl11GetInstanceEvE8instance to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %11, !prof !14

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN19UpgradeDetectorImpl11GetInstanceEvE8instance) #12
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %3
  %7 = tail call %"class.base::DefaultClock"* @_ZN4base12DefaultClock11GetInstanceEv() #12
  %8 = tail call %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() #12
  %9 = getelementptr inbounds %"class.base::DefaultClock", %"class.base::DefaultClock"* %7, i64 0, i32 0
  %10 = getelementptr inbounds %"class.base::DefaultTickClock", %"class.base::DefaultTickClock"* %8, i64 0, i32 0
  tail call void @_ZN19UpgradeDetectorImplC2EPKN4base5ClockEPKNS0_9TickClockE(%class.UpgradeDetectorImpl* bitcast (%"class.base::NoDestructor"* @_ZZN19UpgradeDetectorImpl11GetInstanceEvE8instance to %class.UpgradeDetectorImpl*), %"class.base::Clock"* %9, %"class.base::TickClock"* %10) #12
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN19UpgradeDetectorImpl11GetInstanceEvE8instance) #12
  br label %11

11:                                               ; preds = %3, %6, %0
  ret %class.UpgradeDetectorImpl* bitcast (%"class.base::NoDestructor"* @_ZZN19UpgradeDetectorImpl11GetInstanceEvE8instance to %class.UpgradeDetectorImpl*)
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #7

declare %"class.base::DefaultClock"* @_ZN4base12DefaultClock11GetInstanceEv() local_unnamed_addr #1

declare %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19UpgradeDetectorImpl4InitEv(%class.UpgradeDetectorImpl*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::internal::WeakReference", align 8
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.base::Time", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = alloca %"class.base::OnceCallback", align 8
  %9 = alloca %"class.base::WeakPtr.422", align 8
  %10 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0
  tail call void @_ZN15UpgradeDetector4InitEv(%class.UpgradeDetector* %10) #12
  %11 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 9, i32 0, i64 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %14, label %42

14:                                               ; preds = %1
  %15 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  %17 = tail call i64 @_ZN15UpgradeDetector29GetRelaunchNotificationPeriodEv() #12
  store i64 %17, i64* %16, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %31, label %19

19:                                               ; preds = %14
  store i64 %17, i64* %11, align 8
  %20 = sdiv i64 %17, 3
  %21 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 9, i32 0, i64 2
  %22 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %21, i64 0, i32 0
  store i64 %20, i64* %22, align 8
  %23 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %3, i64 %20) #12
  %24 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 9, i32 0, i64 1, i32 0
  store i64 %23, i64* %24, align 8
  %25 = load i64, i64* %22, align 8
  %26 = icmp sgt i64 %25, 3600000000
  %27 = select i1 %26, %"class.base::TimeDelta"* @_ZN12_GLOBAL__N_124kDefaultVeryLowThresholdE, %"class.base::TimeDelta"* %21
  %28 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %27, i64 0, i32 0
  %29 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 9, i32 0, i64 3, i32 0
  %30 = load i64, i64* %28, align 8
  store i64 %30, i64* %29, align 8
  br label %41

31:                                               ; preds = %14
  %32 = bitcast i64* %11 to <2 x i64>*
  store <2 x i64> <i64 604800000000, i64 345600000000>, <2 x i64>* %32, align 8
  %33 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 9, i32 0, i64 2, i32 0
  %34 = bitcast i64* %33 to <2 x i64>*
  store <2 x i64> <i64 172800000000, i64 3600000000>, <2 x i64>* %34, align 8
  %35 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 8
  %36 = load i8, i8* %35, align 2, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %31
  %39 = bitcast i64* %11 to <2 x i64>*
  store <2 x i64> <i64 70000000, i64 40000000>, <2 x i64>* %39, align 8
  %40 = bitcast i64* %33 to <2 x i64>*
  store <2 x i64> <i64 20000000, i64 416666>, <2 x i64>* %40, align 8
  br label %41

41:                                               ; preds = %38, %31, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #12
  br label %42

42:                                               ; preds = %1, %41
  %43 = call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #12
  %44 = call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %43, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches28kDisableBackgroundNetworkingE, i64 0, i64 0)) #12
  br i1 %44, label %228, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 7
  %47 = load i8, i8* %46, align 1, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %170, label %49

49:                                               ; preds = %45
  %50 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #12
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 0, i64 24, i1 false) #12
  %53 = call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %43, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches21kSimulateOutdatedNoAUE, i64 0, i64 0)) #12
  br i1 %53, label %54, label %73

54:                                               ; preds = %49
  %55 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 6
  store i8 0, i8* %55, align 8
  %56 = load i8, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches21kSimulateOutdatedNoAUE, i64 0, i64 0), align 1
  %57 = call i1 @llvm.is.constant.i8(i8 %56) #12
  br i1 %57, label %58, label %71

58:                                               ; preds = %54
  %59 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches21kSimulateOutdatedNoAUE, i64 0, i64 0)) #12
  %60 = icmp ult i64 %59, 23
  br i1 %60, label %61, label %69

61:                                               ; preds = %58
  %62 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = trunc i64 %59 to i8
  store i8 %64, i8* %63, align 1
  %65 = icmp eq i64 %59, 0
  br i1 %65, label %67, label %66

66:                                               ; preds = %61
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %50, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches21kSimulateOutdatedNoAUE, i64 0, i64 0), i64 %59, i1 false) #12
  br label %67

67:                                               ; preds = %66, %61
  %68 = getelementptr inbounds i8, i8* %50, i64 %59
  store i8 0, i8* %68, align 1
  br label %91

69:                                               ; preds = %58
  %70 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* nonnull %4, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches21kSimulateOutdatedNoAUE, i64 0, i64 0), i64 %59) #12
  br label %91

71:                                               ; preds = %54
  %72 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"* nonnull %4, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches21kSimulateOutdatedNoAUE, i64 0, i64 0)) #12
  br label %91

73:                                               ; preds = %49
  %74 = load i8, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches17kSimulateOutdatedE, i64 0, i64 0), align 1
  %75 = call i1 @llvm.is.constant.i8(i8 %74) #12
  br i1 %75, label %76, label %89

76:                                               ; preds = %73
  %77 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches17kSimulateOutdatedE, i64 0, i64 0)) #12
  %78 = icmp ult i64 %77, 23
  br i1 %78, label %79, label %87

79:                                               ; preds = %76
  %80 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = trunc i64 %77 to i8
  store i8 %82, i8* %81, align 1
  %83 = icmp eq i64 %77, 0
  br i1 %83, label %85, label %84

84:                                               ; preds = %79
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %50, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches17kSimulateOutdatedE, i64 0, i64 0), i64 %77, i1 false) #12
  br label %85

85:                                               ; preds = %84, %79
  %86 = getelementptr inbounds i8, i8* %50, i64 %77
  store i8 0, i8* %86, align 1
  br label %91

87:                                               ; preds = %76
  %88 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* nonnull %4, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches17kSimulateOutdatedE, i64 0, i64 0), i64 %77) #12
  br label %91

89:                                               ; preds = %73
  %90 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"* nonnull %4, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches17kSimulateOutdatedE, i64 0, i64 0)) #12
  br label %91

91:                                               ; preds = %89, %87, %85, %71, %69, %67
  %92 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %92) #12
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %95 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %94, i64 0, i32 1, i32 0
  %96 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %96, i8 -86, i64 24, i1 false)
  %97 = load i8, i8* %95, align 1
  %98 = icmp slt i8 %97, 0
  %99 = load i8*, i8** %51, align 8
  %100 = select i1 %98, i8* %99, i8* %50
  %101 = load i64, i64* %52, align 8
  %102 = zext i8 %97 to i64
  %103 = select i1 %98, i64 %101, i64 %102
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %5, %"class.base::CommandLine"* %43, i8* %100, i64 %103) #12
  %104 = bitcast %"class.base::Time"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #12
  %105 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %6, i64 0, i32 0, i32 0
  store i64 0, i64* %105, align 8
  %106 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  %110 = load i8*, i8** %93, align 8
  %111 = select i1 %109, i8* %110, i8* %92
  %112 = call zeroext i1 @_ZN4base4Time18FromStringInternalEPKcbPS0_(i8* %111, i1 zeroext true, %"class.base::Time"* nonnull %6) #12
  br i1 %112, label %113, label %128

113:                                              ; preds = %91
  %114 = load i64, i64* %105, align 8
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %128, label %116

116:                                              ; preds = %113
  %117 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 10, i32 0, i32 0
  store i64 %114, i64* %117, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #12
  %118 = load i8, i8* %107, align 1
  %119 = icmp slt i8 %118, 0
  br i1 %119, label %120, label %122

120:                                              ; preds = %116
  %121 = load i8*, i8** %93, align 8
  call void @_ZdlPv(i8* %121) #13
  br label %122

122:                                              ; preds = %116, %120
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %92) #12
  %123 = load i8, i8* %95, align 1
  %124 = icmp slt i8 %123, 0
  br i1 %124, label %125, label %127

125:                                              ; preds = %122
  %126 = load i8*, i8** %51, align 8
  call void @_ZdlPv(i8* %126) #13
  br label %127

127:                                              ; preds = %122, %125
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #12
  br label %170

128:                                              ; preds = %113, %91
  %129 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 6
  %130 = load i8, i8* %129, align 8, !range !2
  %131 = icmp eq i8 %130, 0
  %132 = select i1 %131, i32 4, i32 3
  %133 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 4
  store i32 %132, i32* %133, align 8
  %134 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 8
  store i8 0, i8* %134, align 2
  %135 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 5, i32 0
  %136 = call zeroext i1 @_ZNK4base8internal9TimerBase9IsRunningEv(%"class.base::internal::TimerBase"* %135) #12
  br i1 %136, label %159, label %137

137:                                              ; preds = %128
  %138 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 5, i32 0, i32 0
  %139 = load i64, i64* %138, align 8
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %141, label %149

141:                                              ; preds = %137
  %142 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 1
  %143 = load %"class.base::Clock"*, %"class.base::Clock"** %142, align 8
  %144 = bitcast %"class.base::Clock"* %143 to i64 (%"class.base::Clock"*)***
  %145 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %144, align 8
  %146 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %145, i64 2
  %147 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %146, align 8
  %148 = call i64 %147(%"class.base::Clock"* %143) #12
  store i64 %148, i64* %138, align 8
  br label %149

149:                                              ; preds = %141, %137
  %150 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 1
  %151 = load %"class.base::Clock"*, %"class.base::Clock"** %150, align 8
  %152 = bitcast %"class.base::Clock"* %151 to i64 (%"class.base::Clock"*)***
  %153 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %152, align 8
  %154 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %153, i64 2
  %155 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %154, align 8
  %156 = call i64 %155(%"class.base::Clock"* %151) #12
  %157 = load i64, i64* %138, align 8
  %158 = sub nsw i64 %156, %157
  call void @_ZN19UpgradeDetectorImpl29NotifyOnUpgradeWithTimePassedEN4base9TimeDeltaE(%class.UpgradeDetectorImpl* %0, i64 %158) #12
  br label %159

159:                                              ; preds = %128, %149
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #12
  %160 = load i8, i8* %107, align 1
  %161 = icmp slt i8 %160, 0
  br i1 %161, label %162, label %164

162:                                              ; preds = %159
  %163 = load i8*, i8** %93, align 8
  call void @_ZdlPv(i8* %163) #13
  br label %164

164:                                              ; preds = %159, %162
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %92) #12
  %165 = load i8, i8* %95, align 1
  %166 = icmp slt i8 %165, 0
  br i1 %166, label %167, label %169

167:                                              ; preds = %164
  %168 = load i8*, i8** %51, align 8
  call void @_ZdlPv(i8* %168) #13
  br label %169

169:                                              ; preds = %164, %167
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #12
  br label %228

170:                                              ; preds = %127, %45
  %171 = load %class.BrowserProcess*, %class.BrowserProcess** @g_browser_process, align 8
  %172 = bitcast %class.BrowserProcess* %171 to %"class.variations::VariationsService"* (%class.BrowserProcess*)***
  %173 = load %"class.variations::VariationsService"* (%class.BrowserProcess*)**, %"class.variations::VariationsService"* (%class.BrowserProcess*)*** %172, align 8
  %174 = getelementptr inbounds %"class.variations::VariationsService"* (%class.BrowserProcess*)*, %"class.variations::VariationsService"* (%class.BrowserProcess*)** %173, i64 9
  %175 = load %"class.variations::VariationsService"* (%class.BrowserProcess*)*, %"class.variations::VariationsService"* (%class.BrowserProcess*)** %174, align 8
  %176 = call %"class.variations::VariationsService"* %175(%class.BrowserProcess* %171) #12
  %177 = icmp eq %"class.variations::VariationsService"* %176, null
  br i1 %177, label %180, label %178

178:                                              ; preds = %170
  %179 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 2
  call void @_ZN10variations17VariationsService11AddObserverEPNS0_8ObserverE(%"class.variations::VariationsService"* nonnull %176, %"class.variations::VariationsService::Observer"* %179) #12
  br label %180

180:                                              ; preds = %170, %178
  %181 = call %"class.base::SingleThreadTaskRunner"* @_ZN7content21GetUIThreadTaskRunnerERKNS_17BrowserTaskTraitsE(%"class.content::BrowserTaskTraits"* dereferenceable(15) bitcast ({ %"struct.base::TaskTraitsExtensionStorage", i8, i8, i8, i8, i8, i8 }* @.ref.tmp to %"class.content::BrowserTaskTraits"*)) #12
  %182 = bitcast %"class.base::SingleThreadTaskRunner"* %181 to %"class.base::TaskRunner"*
  %183 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %183) #12
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.2, i64 0, i64 0), i32 476) #12
  %184 = bitcast %"class.base::WeakPtr.422"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %184) #12
  %185 = bitcast %"class.base::internal::WeakReference"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #12, !noalias !15
  %186 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 11, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %2, %"class.base::internal::WeakReferenceOwner"* %186) #12, !noalias !15
  %187 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 11, i32 0, i32 1
  %188 = load i64, i64* %187, align 8, !noalias !15
  %189 = getelementptr inbounds %"class.base::WeakPtr.422", %"class.base::WeakPtr.422"* %9, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %189, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %2, i64 %188) #12
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #12, !noalias !15
  %190 = call i8* @_Znwm(i64 64) #13, !noalias !18
  %191 = bitcast i8* %190 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %191, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIM19UpgradeDetectorImplFvvEJNS_7WeakPtrIS3_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIM19UpgradeDetectorImplFvvEJNS_7WeakPtrIS2_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIM19UpgradeDetectorImplFvvEJNS_7WeakPtrIS3_EEEEEEEbPKNS0_13BindStateBaseENS9_21CancellationQueryModeE) #12, !noalias !18
  %192 = getelementptr inbounds i8, i8* %190, i64 32
  %193 = bitcast i8* %192 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%class.UpgradeDetectorImpl*)* @_ZN19UpgradeDetectorImpl26StartOutdatedBuildDetectorEv to i64), i64 0>, <2 x i64>* %193, align 8, !noalias !18
  %194 = getelementptr inbounds i8, i8* %190, i64 48
  %195 = bitcast i8* %194 to %"class.base::internal::WeakReference"*
  %196 = getelementptr inbounds %"class.base::WeakPtr.422", %"class.base::WeakPtr.422"* %9, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %195, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %196) #12, !noalias !18
  %197 = getelementptr inbounds i8, i8* %190, i64 56
  %198 = bitcast i8* %197 to i64*
  %199 = getelementptr inbounds %"class.base::WeakPtr.422", %"class.base::WeakPtr.422"* %9, i64 0, i32 0, i32 1
  %200 = load i64, i64* %199, align 8, !noalias !18
  store i64 %200, i64* %198, align 8, !noalias !18
  %201 = bitcast %"class.base::OnceCallback"* %8 to i8**
  store i8* %190, i8** %201, align 8, !alias.scope !18
  %202 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %182, %"class.base::Location"* nonnull dereferenceable(32) %7, %"class.base::OnceCallback"* nonnull %8) #12
  %203 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %203) #12
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %189) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %184) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %183) #12
  %204 = icmp eq %"class.base::SingleThreadTaskRunner"* %181, null
  br i1 %204, label %213, label %205

205:                                              ; preds = %180
  %206 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %181, i64 0, i32 0, i32 0, i32 1
  %207 = getelementptr inbounds %"class.base::RefCountedThreadSafe.52", %"class.base::RefCountedThreadSafe.52"* %206, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = atomicrmw sub i32* %207, i32 1 acq_rel
  %209 = icmp eq i32 %208, 1
  br i1 %209, label %210, label %213

210:                                              ; preds = %205
  %211 = getelementptr inbounds %"class.base::RefCountedThreadSafe.52", %"class.base::RefCountedThreadSafe.52"* %206, i64 -2
  %212 = bitcast %"class.base::RefCountedThreadSafe.52"* %211 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %212) #12
  br label %213

213:                                              ; preds = %180, %205, %210
  %214 = load %class.BrowserProcess*, %class.BrowserProcess** @g_browser_process, align 8
  %215 = bitcast %class.BrowserProcess* %214 to %class.BuildState* (%class.BrowserProcess*)***
  %216 = load %class.BuildState* (%class.BrowserProcess*)**, %class.BuildState* (%class.BrowserProcess*)*** %215, align 8
  %217 = getelementptr inbounds %class.BuildState* (%class.BrowserProcess*)*, %class.BuildState* (%class.BrowserProcess*)** %216, i64 47
  %218 = load %class.BuildState* (%class.BrowserProcess*)*, %class.BuildState* (%class.BrowserProcess*)** %217, align 8
  %219 = call %class.BuildState* %218(%class.BrowserProcess* %214) #12
  %220 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 1
  call void @_ZN10BuildState11AddObserverEP18BuildStateObserver(%class.BuildState* %219, %class.BuildStateObserver* %220) #12
  %221 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %222 = load i8, i8* %221, align 8, !range !2
  %223 = icmp eq i8 %222, 0
  br i1 %223, label %226, label %224

224:                                              ; preds = %213
  %225 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN22InstalledVersionPollerD1Ev(%class.InstalledVersionPoller* %225) #12
  store i8 0, i8* %221, align 8
  br label %226

226:                                              ; preds = %213, %224
  %227 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN22InstalledVersionPollerC1EP10BuildState(%class.InstalledVersionPoller* %227, %class.BuildState* %219) #12
  store i8 1, i8* %221, align 8
  br label %228

228:                                              ; preds = %169, %42, %226
  ret void
}

declare void @_ZN15UpgradeDetector4InitEv(%class.UpgradeDetector*) unnamed_addr #1

declare %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() local_unnamed_addr #1

declare zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"*, i8*) local_unnamed_addr #1

declare void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, %"class.base::CommandLine"*, i8*, i64) local_unnamed_addr #1

declare void @_ZN10variations17VariationsService11AddObserverEPNS0_8ObserverE(%"class.variations::VariationsService"*, %"class.variations::VariationsService::Observer"*) local_unnamed_addr #1

declare %"class.base::SingleThreadTaskRunner"* @_ZN7content21GetUIThreadTaskRunnerERKNS_17BrowserTaskTraitsE(%"class.content::BrowserTaskTraits"* dereferenceable(15)) local_unnamed_addr #1

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #2

declare void @_ZN10BuildState11AddObserverEP18BuildStateObserver(%class.BuildState*, %class.BuildStateObserver*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19UpgradeDetectorImpl8ShutdownEv(%class.UpgradeDetectorImpl*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 11, i32 0, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %2) #12
  %3 = load %class.BrowserProcess*, %class.BrowserProcess** @g_browser_process, align 8
  %4 = bitcast %class.BrowserProcess* %3 to %"class.variations::VariationsService"* (%class.BrowserProcess*)***
  %5 = load %"class.variations::VariationsService"* (%class.BrowserProcess*)**, %"class.variations::VariationsService"* (%class.BrowserProcess*)*** %4, align 8
  %6 = getelementptr inbounds %"class.variations::VariationsService"* (%class.BrowserProcess*)*, %"class.variations::VariationsService"* (%class.BrowserProcess*)** %5, i64 9
  %7 = load %"class.variations::VariationsService"* (%class.BrowserProcess*)*, %"class.variations::VariationsService"* (%class.BrowserProcess*)** %6, align 8
  %8 = tail call %"class.variations::VariationsService"* %7(%class.BrowserProcess* %3) #12
  %9 = icmp eq %"class.variations::VariationsService"* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 2
  tail call void @_ZN10variations17VariationsService14RemoveObserverEPNS0_8ObserverE(%"class.variations::VariationsService"* nonnull %8, %"class.variations::VariationsService::Observer"* %11) #12
  br label %12

12:                                               ; preds = %1, %10
  %13 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN22InstalledVersionPollerD1Ev(%class.InstalledVersionPoller* %17) #12
  store i8 0, i8* %13, align 8
  br label %18

18:                                               ; preds = %12, %16
  %19 = load %class.BrowserProcess*, %class.BrowserProcess** @g_browser_process, align 8
  %20 = bitcast %class.BrowserProcess* %19 to %class.BuildState* (%class.BrowserProcess*)***
  %21 = load %class.BuildState* (%class.BrowserProcess*)**, %class.BuildState* (%class.BrowserProcess*)*** %20, align 8
  %22 = getelementptr inbounds %class.BuildState* (%class.BrowserProcess*)*, %class.BuildState* (%class.BrowserProcess*)** %21, i64 47
  %23 = load %class.BuildState* (%class.BrowserProcess*)*, %class.BuildState* (%class.BrowserProcess*)** %22, align 8
  %24 = tail call %class.BuildState* %23(%class.BrowserProcess* %19) #12
  %25 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 1
  tail call void @_ZN10BuildState14RemoveObserverEPK18BuildStateObserver(%class.BuildState* %24, %class.BuildStateObserver* %25) #12
  %26 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4base8internal9TimerBase4StopEv(%"class.base::internal::TimerBase"* %26) #12
  %27 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0
  tail call void @_ZN15UpgradeDetector8ShutdownEv(%class.UpgradeDetector* %27) #12
  ret void
}

declare void @_ZN10variations17VariationsService14RemoveObserverEPNS0_8ObserverE(%"class.variations::VariationsService"*, %"class.variations::VariationsService::Observer"*) local_unnamed_addr #1

declare void @_ZN10BuildState14RemoveObserverEPK18BuildStateObserver(%class.BuildState*, %class.BuildStateObserver*) local_unnamed_addr #1

declare void @_ZN15UpgradeDetector8ShutdownEv(%class.UpgradeDetector*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN19UpgradeDetectorImpl26GetHighAnnoyanceLevelDeltaEv(%class.UpgradeDetectorImpl*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 9, i32 0, i64 0
  %3 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 9, i32 0, i64 1, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = tail call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* %2, i64 %4)
  ret i64 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN19UpgradeDetectorImpl24GetHighAnnoyanceDeadlineEv(%class.UpgradeDetectorImpl* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 5, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %26, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 9, i32 0, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, -9223372036854775807
  %10 = icmp ult i64 %9, 2
  br i1 %10, label %18, label %11

11:                                               ; preds = %6
  %12 = icmp slt i64 %8, 0
  %13 = select i1 %12, i64 -9223372036854775808, i64 9223372036854775807
  %14 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %4, i64 %8) #12
  %15 = extractvalue { i64, i1 } %14, 1
  %16 = extractvalue { i64, i1 } %14, 0
  %17 = select i1 %15, i64 %13, i64 %16, !prof !3
  br label %26

18:                                               ; preds = %6
  %19 = add i64 %4, -9223372036854775807
  %20 = icmp ugt i64 %19, 1
  %21 = icmp eq i64 %4, %8
  %22 = or i1 %20, %21
  br i1 %22, label %26, label %23

23:                                               ; preds = %18
  %24 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i64 0, i64 0)) #12
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #12
  br label %26

26:                                               ; preds = %23, %18, %11, %1
  %27 = phi i64 [ 0, %1 ], [ %17, %11 ], [ %8, %18 ], [ %8, %23 ]
  ret i64 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19UpgradeDetectorImpl8OnUpdateEPK10BuildState(%class.UpgradeDetectorImpl*, %class.BuildState*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.BuildState, %class.BuildState* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %44

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 4
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = icmp ult i32 %9, 2
  br i1 %10, label %11, label %81

11:                                               ; preds = %6
  store i32 0, i32* %7, align 8
  %12 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 8
  store i8 0, i8* %12, align 2
  %13 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 7
  %14 = load i8, i8* %13, align 1, !range !2
  %15 = icmp eq i8 %14, 0
  %16 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 5, i32 0
  br i1 %15, label %41, label %17

17:                                               ; preds = %11
  %18 = tail call zeroext i1 @_ZNK4base8internal9TimerBase9IsRunningEv(%"class.base::internal::TimerBase"* %16) #12
  br i1 %18, label %81, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 5, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %23, label %31

23:                                               ; preds = %19
  %24 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 1
  %25 = load %"class.base::Clock"*, %"class.base::Clock"** %24, align 8
  %26 = bitcast %"class.base::Clock"* %25 to i64 (%"class.base::Clock"*)***
  %27 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %26, align 8
  %28 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %27, i64 2
  %29 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %28, align 8
  %30 = tail call i64 %29(%"class.base::Clock"* %25) #12
  store i64 %30, i64* %20, align 8
  br label %31

31:                                               ; preds = %23, %19
  %32 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 1
  %33 = load %"class.base::Clock"*, %"class.base::Clock"** %32, align 8
  %34 = bitcast %"class.base::Clock"* %33 to i64 (%"class.base::Clock"*)***
  %35 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %34, align 8
  %36 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %35, i64 2
  %37 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %36, align 8
  %38 = tail call i64 %37(%"class.base::Clock"* %33) #12
  %39 = load i64, i64* %20, align 8
  %40 = sub nsw i64 %38, %39
  tail call void @_ZN19UpgradeDetectorImpl29NotifyOnUpgradeWithTimePassedEN4base9TimeDeltaE(%class.UpgradeDetectorImpl* %0, i64 %40) #12
  br label %81

41:                                               ; preds = %11
  tail call void @_ZN4base8internal9TimerBase4StopEv(%"class.base::internal::TimerBase"* %16) #12
  %42 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 5, i32 0, i32 0
  store i64 0, i64* %42, align 8
  %43 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 10
  store i32 0, i32* %43, align 8
  br label %81

44:                                               ; preds = %2
  %45 = tail call dereferenceable(24) %"class.base::Version"* @_ZN12version_info10GetVersionEv() #12
  %46 = getelementptr inbounds %class.BuildState, %class.BuildState* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %47 = load i8, i8* %46, align 8, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %53, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %class.BuildState, %class.BuildState* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %51 = tail call zeroext i1 @_ZN4basegtERKNS_7VersionES2_(%"class.base::Version"* dereferenceable(24) %50, %"class.base::Version"* dereferenceable(24) %45) #12
  %52 = select i1 %51, i32 2, i32 1
  br label %53

53:                                               ; preds = %49, %44
  %54 = phi i32 [ 1, %44 ], [ %52, %49 ]
  %55 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 4
  store i32 %54, i32* %55, align 8
  %56 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 8
  store i8 0, i8* %56, align 2
  %57 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 5, i32 0
  %58 = tail call zeroext i1 @_ZNK4base8internal9TimerBase9IsRunningEv(%"class.base::internal::TimerBase"* %57) #12
  br i1 %58, label %81, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 5, i32 0, i32 0
  %61 = load i64, i64* %60, align 8
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %63, label %71

63:                                               ; preds = %59
  %64 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 1
  %65 = load %"class.base::Clock"*, %"class.base::Clock"** %64, align 8
  %66 = bitcast %"class.base::Clock"* %65 to i64 (%"class.base::Clock"*)***
  %67 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %66, align 8
  %68 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %67, i64 2
  %69 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %68, align 8
  %70 = tail call i64 %69(%"class.base::Clock"* %65) #12
  store i64 %70, i64* %60, align 8
  br label %71

71:                                               ; preds = %63, %59
  %72 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 0, i32 0, i32 1
  %73 = load %"class.base::Clock"*, %"class.base::Clock"** %72, align 8
  %74 = bitcast %"class.base::Clock"* %73 to i64 (%"class.base::Clock"*)***
  %75 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %74, align 8
  %76 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %75, i64 2
  %77 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %76, align 8
  %78 = tail call i64 %77(%"class.base::Clock"* %73) #12
  %79 = load i64, i64* %60, align 8
  %80 = sub nsw i64 %78, %79
  tail call void @_ZN19UpgradeDetectorImpl29NotifyOnUpgradeWithTimePassedEN4base9TimeDeltaE(%class.UpgradeDetectorImpl* %0, i64 %80) #12
  br label %81

81:                                               ; preds = %6, %71, %53, %41, %31, %17
  ret void
}

declare dereferenceable(24) %"class.base::Version"* @_ZN12version_info10GetVersionEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn280_N19UpgradeDetectorImpl8OnUpdateEPK10BuildState(%class.UpgradeDetectorImpl*, %class.BuildState*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.UpgradeDetectorImpl, %class.UpgradeDetectorImpl* %0, i64 -1, i32 4, i32 0, i32 4, i32 1
  %4 = bitcast i8** %3 to %class.UpgradeDetectorImpl*
  tail call void @_ZN19UpgradeDetectorImpl8OnUpdateEPK10BuildState(%class.UpgradeDetectorImpl* %4, %class.BuildState* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.UpgradeDetector* @_ZN15UpgradeDetector11GetInstanceEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN19UpgradeDetectorImpl11GetInstanceEvE8instance to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %11, !prof !14

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN19UpgradeDetectorImpl11GetInstanceEvE8instance) #12
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %3
  %7 = tail call %"class.base::DefaultClock"* @_ZN4base12DefaultClock11GetInstanceEv() #12
  %8 = tail call %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() #12
  %9 = getelementptr inbounds %"class.base::DefaultClock", %"class.base::DefaultClock"* %7, i64 0, i32 0
  %10 = getelementptr inbounds %"class.base::DefaultTickClock", %"class.base::DefaultTickClock"* %8, i64 0, i32 0
  tail call void @_ZN19UpgradeDetectorImplC2EPKN4base5ClockEPKNS0_9TickClockE(%class.UpgradeDetectorImpl* bitcast (%"class.base::NoDestructor"* @_ZZN19UpgradeDetectorImpl11GetInstanceEvE8instance to %class.UpgradeDetectorImpl*), %"class.base::Clock"* %9, %"class.base::TickClock"* %10) #12
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN19UpgradeDetectorImpl11GetInstanceEvE8instance) #12
  br label %11

11:                                               ; preds = %0, %3, %6
  ret %class.UpgradeDetector* bitcast (%"class.base::NoDestructor"* @_ZZN19UpgradeDetectorImpl11GetInstanceEvE8instance to %class.UpgradeDetector*)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN15UpgradeDetector32GetDefaultHighAnnoyanceThresholdEv() local_unnamed_addr #5 align 2 {
  ret i64 604800000000
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN15UpgradeDetector36GetDefaultElevatedAnnoyanceThresholdEv() local_unnamed_addr #5 align 2 {
  ret i64 345600000000
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i64, i64 } @_ZN15UpgradeDetector24GetDefaultRelaunchWindowEv() local_unnamed_addr #5 align 2 {
  ret { i64, i64 } { i64 0, i64 86400000000 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15UpgradeDetector29OverrideHighAnnoyanceDeadlineEN4base4TimeE(%class.UpgradeDetector*, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15UpgradeDetector23ResetOverriddenDeadlineEv(%class.UpgradeDetector*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN15UpgradeDetector21TriggerCriticalUpdateEv(%class.UpgradeDetector*) unnamed_addr #1

declare void @_ZN4base15CheckedObserverC2Ev(%"class.base::CheckedObserver"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base15CheckedObserverD2Ev(%"class.base::CheckedObserver"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN22InstalledVersionPollerD1Ev(%class.InstalledVersionPoller*) unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #8

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare zeroext i1 @_ZN4base4Time18FromStringInternalEPKcbPS0_(i8*, i1 zeroext, %"class.base::Time"*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #8

declare zeroext i1 @_ZN4basegtERKNS_7VersionES2_(%"class.base::Version"* dereferenceable(24), %"class.base::Version"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIM19UpgradeDetectorImplFvvEJNS0_17UnretainedWrapperIS3_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 %10
  %12 = bitcast i8* %11 to %class.UpgradeDetectorImpl*
  %13 = and i64 %7, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %7, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%class.UpgradeDetectorImpl*)**
  %21 = load void (%class.UpgradeDetectorImpl*)*, void (%class.UpgradeDetectorImpl*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %7 to void (%class.UpgradeDetectorImpl*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%class.UpgradeDetectorImpl*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%class.UpgradeDetectorImpl* %12) #12
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIM19UpgradeDetectorImplFvvEJNS0_17UnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i8(i8) #10

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #11

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #2

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIM19UpgradeDetectorImplFvvEJNS_7WeakPtrIS3_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #12
  br i1 %6, label %7, label %42

7:                                                ; preds = %1
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %class.UpgradeDetectorImpl**
  %10 = load %class.UpgradeDetectorImpl*, %class.UpgradeDetectorImpl** %9, align 8
  %11 = icmp eq %class.UpgradeDetectorImpl* %10, null
  br i1 %11, label %42, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %16 = bitcast void ()** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #12
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %19, %12
  %23 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #12
  %24 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = select i1 %23, i8* %25, i8* null
  %27 = getelementptr inbounds i8, i8* %26, i64 %17
  %28 = bitcast i8* %27 to %class.UpgradeDetectorImpl*
  %29 = and i64 %14, 1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %22
  %32 = bitcast i8* %27 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %14, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to void (%class.UpgradeDetectorImpl*)**
  %37 = load void (%class.UpgradeDetectorImpl*)*, void (%class.UpgradeDetectorImpl*)** %36, align 8
  br label %40

38:                                               ; preds = %22
  %39 = inttoptr i64 %14 to void (%class.UpgradeDetectorImpl*)*
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi void (%class.UpgradeDetectorImpl*)* [ %37, %31 ], [ %39, %38 ]
  call void %41(%class.UpgradeDetectorImpl* %28) #12
  br label %42

42:                                               ; preds = %1, %7, %40
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIM19UpgradeDetectorImplFvvEJNS_7WeakPtrIS2_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #12
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #13
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIM19UpgradeDetectorImplFvvEJNS_7WeakPtrIS3_EEEEEEEbPKNS0_13BindStateBaseENS9_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #12
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %class.UpgradeDetectorImpl**
  %9 = load %class.UpgradeDetectorImpl*, %class.UpgradeDetectorImpl** %8, align 8
  %10 = icmp ne %class.UpgradeDetectorImpl* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #12
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN22InstalledVersionPollerC1EP10BuildState(%class.InstalledVersionPoller*, %class.BuildState*) unnamed_addr #1

declare void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone }
attributes #11 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5, !7}
!5 = distinct !{!5, !6, !"_ZN4base8internal8BindImplINS_12OnceCallbackEM19UpgradeDetectorImplFvvEJNS0_17UnretainedWrapperIS3_EEEEEDcOT0_DpOT1_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8internal8BindImplINS_12OnceCallbackEM19UpgradeDetectorImplFvvEJNS0_17UnretainedWrapperIS3_EEEEEDcOT0_DpOT1_"}
!7 = distinct !{!7, !8, !"_ZN4base8BindOnceIM19UpgradeDetectorImplFvvEJNS_8internal17UnretainedWrapperIS1_EEEEENS_12OnceCallbackINS4_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_: argument 0"}
!8 = distinct !{!8, !"_ZN4base8BindOnceIM19UpgradeDetectorImplFvvEJNS_8internal17UnretainedWrapperIS1_EEEEENS_12OnceCallbackINS4_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_"}
!9 = !{!10, !12}
!10 = distinct !{!10, !11, !"_ZN4base8internal8BindImplINS_12OnceCallbackERM19UpgradeDetectorImplFvvEJNS0_17UnretainedWrapperIS3_EEEEEDcOT0_DpOT1_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8internal8BindImplINS_12OnceCallbackERM19UpgradeDetectorImplFvvEJNS0_17UnretainedWrapperIS3_EEEEEDcOT0_DpOT1_"}
!12 = distinct !{!12, !13, !"_ZN4base8BindOnceIRM19UpgradeDetectorImplFvvEJNS_8internal17UnretainedWrapperIS1_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!13 = distinct !{!13, !"_ZN4base8BindOnceIRM19UpgradeDetectorImplFvvEJNS_8internal17UnretainedWrapperIS1_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!14 = !{!"branch_weights", i32 1, i32 1048575}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK4base14WeakPtrFactoryI19UpgradeDetectorImplE10GetWeakPtrEv: argument 0"}
!17 = distinct !{!17, !"_ZNK4base14WeakPtrFactoryI19UpgradeDetectorImplE10GetWeakPtrEv"}
!18 = !{!19, !21}
!19 = distinct !{!19, !20, !"_ZN4base8internal8BindImplINS_12OnceCallbackEM19UpgradeDetectorImplFvvEJNS_7WeakPtrIS3_EEEEEDcOT0_DpOT1_: argument 0"}
!20 = distinct !{!20, !"_ZN4base8internal8BindImplINS_12OnceCallbackEM19UpgradeDetectorImplFvvEJNS_7WeakPtrIS3_EEEEEDcOT0_DpOT1_"}
!21 = distinct !{!21, !22, !"_ZN4base8BindOnceIM19UpgradeDetectorImplFvvEJNS_7WeakPtrIS1_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_: argument 0"}
!22 = distinct !{!22, !"_ZN4base8BindOnceIM19UpgradeDetectorImplFvvEJNS_7WeakPtrIS1_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_"}
