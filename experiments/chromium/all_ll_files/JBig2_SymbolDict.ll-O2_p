; ModuleID = '../../third_party/pdfium/core/fxcodec/jbig2/JBig2_SymbolDict.cpp'
source_filename = "../../third_party/pdfium/core/fxcodec/jbig2/JBig2_SymbolDict.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CJBig2_SymbolDict = type { %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector.1" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.JBig2ArithCtx*, %class.JBig2ArithCtx*, %"class.std::__1::__compressed_pair" }
%class.JBig2ArithCtx = type { i8, i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.JBig2ArithCtx* }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %class.CJBig2_Image* }
%class.CJBig2_Image = type <{ %"class.fxcrt::MaybeOwned", i32, i32, i32, [4 x i8] }>
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.5", %"class.fxcrt::UnownedPtr" }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i8* }
%"class.fxcrt::UnownedPtr" = type { i8* }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorINS_10unique_ptrI12CJBig2_ImageNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_ = comdat any

$_ZNSt3__16vectorI13JBig2ArithCtxNS_9allocatorIS1_EEE6assignIPS1_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_ = comdat any

@_ZN17CJBig2_SymbolDictC1Ev = hidden unnamed_addr alias void (%class.CJBig2_SymbolDict*), void (%class.CJBig2_SymbolDict*)* @_ZN17CJBig2_SymbolDictC2Ev
@_ZN17CJBig2_SymbolDictD1Ev = hidden unnamed_addr alias void (%class.CJBig2_SymbolDict*), void (%class.CJBig2_SymbolDict*)* @_ZN17CJBig2_SymbolDictD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17CJBig2_SymbolDictC2Ev(%class.CJBig2_SymbolDict* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %class.CJBig2_SymbolDict* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 72, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17CJBig2_SymbolDictD2Ev(%class.CJBig2_SymbolDict* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CJBig2_SymbolDict, %class.CJBig2_SymbolDict* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %5 = icmp eq %"class.std::__1::unique_ptr"* %4, null
  br i1 %5, label %26, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  %8 = getelementptr inbounds %class.CJBig2_SymbolDict, %class.CJBig2_SymbolDict* %0, i64 0, i32 2, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr"* %9, %4
  br i1 %10, label %24, label %11

11:                                               ; preds = %6, %19
  %12 = phi %"class.std::__1::unique_ptr"* [ %13, %19 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %12, i64 -1
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %class.CJBig2_Image*, %class.CJBig2_Image** %14, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %14, align 8
  %16 = icmp eq %class.CJBig2_Image* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %11
  tail call void @_ZN12CJBig2_ImageD1Ev(%class.CJBig2_Image* nonnull %15) #9
  %18 = bitcast %class.CJBig2_Image* %15 to i8*
  tail call void @_ZdlPv(i8* %18) #10
  br label %19

19:                                               ; preds = %17, %11
  %20 = icmp eq %"class.std::__1::unique_ptr"* %13, %4
  br i1 %20, label %21, label %11

21:                                               ; preds = %19
  %22 = bitcast %"class.std::__1::vector.1"* %2 to i8**
  %23 = load i8*, i8** %22, align 8
  br label %24

24:                                               ; preds = %21, %6
  %25 = phi i8* [ %23, %21 ], [ %7, %6 ]
  store %"class.std::__1::unique_ptr"* %4, %"class.std::__1::unique_ptr"** %8, align 8
  tail call void @_ZdlPv(i8* %25) #10
  br label %26

26:                                               ; preds = %1, %24
  %27 = getelementptr inbounds %class.CJBig2_SymbolDict, %class.CJBig2_SymbolDict* %0, i64 0, i32 1, i32 0, i32 0
  %28 = load %class.JBig2ArithCtx*, %class.JBig2ArithCtx** %27, align 8
  %29 = icmp eq %class.JBig2ArithCtx* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = ptrtoint %class.JBig2ArithCtx* %28 to i64
  %32 = getelementptr inbounds %class.CJBig2_SymbolDict, %class.CJBig2_SymbolDict* %0, i64 0, i32 1, i32 0, i32 1
  %33 = bitcast %class.JBig2ArithCtx** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %28, i64 0, i32 0
  tail call void @_ZdlPv(i8* %34) #10
  br label %35

35:                                               ; preds = %26, %30
  %36 = getelementptr inbounds %class.CJBig2_SymbolDict, %class.CJBig2_SymbolDict* %0, i64 0, i32 0, i32 0, i32 0
  %37 = load %class.JBig2ArithCtx*, %class.JBig2ArithCtx** %36, align 8
  %38 = icmp eq %class.JBig2ArithCtx* %37, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %35
  %40 = ptrtoint %class.JBig2ArithCtx* %37 to i64
  %41 = getelementptr inbounds %class.CJBig2_SymbolDict, %class.CJBig2_SymbolDict* %0, i64 0, i32 0, i32 0, i32 1
  %42 = bitcast %class.JBig2ArithCtx** %41 to i64*
  store i64 %40, i64* %42, align 8
  %43 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %37, i64 0, i32 0
  tail call void @_ZdlPv(i8* %43) #10
  br label %44

44:                                               ; preds = %35, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.CJBig2_SymbolDict* @_ZNK17CJBig2_SymbolDict8DeepCopyEv(%class.CJBig2_SymbolDict* readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::unique_ptr", align 8
  %3 = tail call i8* @_Znwm(i64 72) #10
  %4 = bitcast i8* %3 to %class.CJBig2_SymbolDict*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 72, i1 false) #9
  %5 = getelementptr inbounds %class.CJBig2_SymbolDict, %class.CJBig2_SymbolDict* %0, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %5, align 8
  %7 = getelementptr inbounds %class.CJBig2_SymbolDict, %class.CJBig2_SymbolDict* %0, i64 0, i32 2, i32 0, i32 1
  %8 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %7, align 8
  %9 = icmp eq %"class.std::__1::unique_ptr"* %6, %8
  br i1 %9, label %22, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds i8, i8* %3, i64 48
  %12 = bitcast i8* %11 to %"class.std::__1::vector.1"*
  %13 = bitcast %"class.std::__1::unique_ptr"* %2 to i8*
  %14 = bitcast %"class.std::__1::unique_ptr"* %2 to i8**
  %15 = bitcast %"class.std::__1::unique_ptr"* %2 to i64*
  %16 = getelementptr inbounds i8, i8* %3, i64 56
  %17 = bitcast i8* %16 to %"class.std::__1::unique_ptr"**
  %18 = getelementptr inbounds i8, i8* %3, i64 64
  %19 = bitcast i8* %18 to %"class.std::__1::unique_ptr"**
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast i8* %16 to i64*
  br label %42

22:                                               ; preds = %67, %1
  %23 = getelementptr inbounds %class.CJBig2_SymbolDict, %class.CJBig2_SymbolDict* %0, i64 0, i32 0
  %24 = bitcast i8* %3 to %"class.std::__1::vector"*
  %25 = icmp eq %"class.std::__1::vector"* %23, %24
  br i1 %25, label %31, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %class.CJBig2_SymbolDict, %class.CJBig2_SymbolDict* %0, i64 0, i32 0, i32 0, i32 0
  %28 = load %class.JBig2ArithCtx*, %class.JBig2ArithCtx** %27, align 8
  %29 = getelementptr inbounds %class.CJBig2_SymbolDict, %class.CJBig2_SymbolDict* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load %class.JBig2ArithCtx*, %class.JBig2ArithCtx** %29, align 8
  call void @_ZNSt3__16vectorI13JBig2ArithCtxNS_9allocatorIS1_EEE6assignIPS1_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector"* nonnull %24, %class.JBig2ArithCtx* %28, %class.JBig2ArithCtx* %30) #9
  br label %31

31:                                               ; preds = %22, %26
  %32 = getelementptr inbounds %class.CJBig2_SymbolDict, %class.CJBig2_SymbolDict* %0, i64 0, i32 1
  %33 = getelementptr inbounds i8, i8* %3, i64 24
  %34 = bitcast i8* %33 to %"class.std::__1::vector"*
  %35 = icmp eq %"class.std::__1::vector"* %32, %34
  br i1 %35, label %41, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %32, i64 0, i32 0, i32 0
  %38 = load %class.JBig2ArithCtx*, %class.JBig2ArithCtx** %37, align 8
  %39 = getelementptr inbounds %class.CJBig2_SymbolDict, %class.CJBig2_SymbolDict* %0, i64 0, i32 1, i32 0, i32 1
  %40 = load %class.JBig2ArithCtx*, %class.JBig2ArithCtx** %39, align 8
  call void @_ZNSt3__16vectorI13JBig2ArithCtxNS_9allocatorIS1_EEE6assignIPS1_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector"* %34, %class.JBig2ArithCtx* %38, %class.JBig2ArithCtx* %40) #9
  br label %41

41:                                               ; preds = %31, %36
  ret %class.CJBig2_SymbolDict* %4

42:                                               ; preds = %10, %67
  %43 = phi %"class.std::__1::unique_ptr"* [ %6, %10 ], [ %68, %67 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = load %class.CJBig2_Image*, %class.CJBig2_Image** %44, align 8
  %46 = icmp eq %class.CJBig2_Image* %45, null
  br i1 %46, label %51, label %47

47:                                               ; preds = %42
  %48 = call i8* @_Znwm(i64 32) #10
  %49 = bitcast i8* %48 to %class.CJBig2_Image*
  call void @_ZN12CJBig2_ImageC1ERKS_(%class.CJBig2_Image* nonnull %49, %class.CJBig2_Image* nonnull dereferenceable(32) %45) #9
  store i8* %48, i8** %14, align 8
  %50 = ptrtoint i8* %48 to i64
  br label %52

51:                                               ; preds = %42
  store i64 0, i64* %15, align 8
  br label %52

52:                                               ; preds = %51, %47
  %53 = phi i64 [ 0, %51 ], [ %50, %47 ]
  %54 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %17, align 8
  %55 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %19, align 8
  %56 = icmp ult %"class.std::__1::unique_ptr"* %54, %55
  br i1 %56, label %57, label %61

57:                                               ; preds = %52
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %20, align 8
  %58 = bitcast %"class.std::__1::unique_ptr"* %54 to i64*
  store i64 %53, i64* %58, align 8
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %54, i64 1
  %60 = ptrtoint %"class.std::__1::unique_ptr"* %59 to i64
  store i64 %60, i64* %21, align 8
  br label %62

61:                                               ; preds = %52
  call void @_ZNSt3__16vectorINS_10unique_ptrI12CJBig2_ImageNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector.1"* %12, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %2) #9
  br label %62

62:                                               ; preds = %57, %61
  %63 = load %class.CJBig2_Image*, %class.CJBig2_Image** %20, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %20, align 8
  %64 = icmp eq %class.CJBig2_Image* %63, null
  br i1 %64, label %67, label %65

65:                                               ; preds = %62
  call void @_ZN12CJBig2_ImageD1Ev(%class.CJBig2_Image* nonnull %63) #9
  %66 = bitcast %class.CJBig2_Image* %63 to i8*
  call void @_ZdlPv(i8* %66) #10
  br label %67

67:                                               ; preds = %62, %65
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  %68 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %43, i64 1
  %69 = icmp eq %"class.std::__1::unique_ptr"* %68, %8
  br i1 %69, label %22, label %42
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN12CJBig2_ImageD1Ev(%class.CJBig2_Image*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrI12CJBig2_ImageNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector.1"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.1"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.1"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #11
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #10
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %class.CJBig2_Image** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !2

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr"*
  %138 = icmp eq %"class.std::__1::unique_ptr"* %133, %137
  br i1 %138, label %149, label %139

139:                                              ; preds = %132, %147
  %140 = phi %"class.std::__1::unique_ptr"* [ %141, %147 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %class.CJBig2_Image*, %class.CJBig2_Image** %142, align 8
  store %class.CJBig2_Image* null, %class.CJBig2_Image** %142, align 8
  %144 = icmp eq %class.CJBig2_Image* %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %139
  tail call void @_ZN12CJBig2_ImageD1Ev(%class.CJBig2_Image* nonnull %143) #9
  %146 = bitcast %class.CJBig2_Image* %143 to i8*
  tail call void @_ZdlPv(i8* %146) #10
  br label %147

147:                                              ; preds = %145, %139
  %148 = icmp eq %"class.std::__1::unique_ptr"* %141, %137
  br i1 %148, label %149, label %139

149:                                              ; preds = %147, %132
  %150 = icmp eq i64 %135, 0
  br i1 %150, label %153, label %151

151:                                              ; preds = %149
  %152 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %152) #10
  br label %153

153:                                              ; preds = %149, %151
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN12CJBig2_ImageC1ERKS_(%class.CJBig2_Image*, %class.CJBig2_Image* dereferenceable(32)) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI13JBig2ArithCtxNS_9allocatorIS1_EEE6assignIPS1_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector"*, %class.JBig2ArithCtx*, %class.JBig2ArithCtx*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %class.JBig2ArithCtx* %2 to i64
  %5 = ptrtoint %class.JBig2ArithCtx* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %class.JBig2ArithCtx** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %class.JBig2ArithCtx*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %class.JBig2ArithCtx** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 3
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %1, i64 %22
  %25 = select i1 %23, %class.JBig2ArithCtx* %24, %class.JBig2ArithCtx* %2
  %26 = ptrtoint %class.JBig2ArithCtx* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 3
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %16, i64 0, i32 0
  %32 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %1, i64 0, i32 0
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #9
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 3
  %40 = inttoptr i64 %35 to i8*
  %41 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %25, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #9
  %42 = inttoptr i64 %35 to %class.JBig2ArithCtx*
  %43 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %42, i64 %39
  %44 = ptrtoint %class.JBig2ArithCtx* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %16, i64 %28
  store %class.JBig2ArithCtx* %48, %class.JBig2ArithCtx** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %53 = bitcast %class.JBig2ArithCtx** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %16, i64 0, i32 0
  tail call void @_ZdlPv(i8* %54) #10
  %55 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #9
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 2305843009213693951
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #11
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 3
  %63 = icmp ult i64 %62, 1152921504606846975
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 2
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 2305843009213693951
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #11
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 2305843009213693951, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 3
  %74 = tail call i8* @_Znwm(i64 %73) #10
  %75 = bitcast i8* %74 to %class.JBig2ArithCtx*
  %76 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %77 = bitcast %class.JBig2ArithCtx** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %75, i64 %72
  store %class.JBig2ArithCtx* %79, %class.JBig2ArithCtx** %8, align 8
  %80 = bitcast %class.JBig2ArithCtx** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 3
  %85 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %1, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #9
  %86 = getelementptr inbounds %class.JBig2ArithCtx, %class.JBig2ArithCtx* %75, i64 %84
  %87 = ptrtoint %class.JBig2ArithCtx* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
