; ModuleID = '../../third_party/icu/source/i18n/upluralrules.cpp'
source_filename = "../../third_party/icu/source/i18n/upluralrules.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.icu_69::IFixedDecimal" = type { i32 (...)** }
%"class.icu_69::MaybeStackArray" = type <{ i8*, i32, i8, [40 x i8], [3 x i8] }>
%struct.UPluralRules = type opaque
%"class.icu_69::Locale" = type <{ %"class.icu_69::UObject", [12 x i8], [6 x i8], [4 x i8], [2 x i8], i32, [4 x i8], i8*, [157 x i8], [3 x i8], i8*, i8, [7 x i8] }>
%"class.icu_69::UObject" = type { i32 (...)** }
%"class.icu_69::PluralRules" = type <{ %"class.icu_69::UObject", %"class.icu_69::RuleChain"*, %"class.icu_69::StandardPluralRanges"*, i32, [4 x i8] }>
%"class.icu_69::RuleChain" = type { i32 (...)**, %"class.icu_69::UnicodeString", %"class.icu_69::RuleChain"*, %"class.icu_69::OrConstraint"*, %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString", i8, i8, i32 }
%"class.icu_69::OrConstraint" = type <{ i32 (...)**, %"class.icu_69::AndConstraint"*, %"class.icu_69::OrConstraint"*, i32, [4 x i8] }>
%"class.icu_69::AndConstraint" = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %"class.icu_69::UVector32"*, i8, i8, [2 x i8], i32, %"class.icu_69::AndConstraint"*, i32, [4 x i8] }>
%"class.icu_69::UVector32" = type { %"class.icu_69::UObject", i32, i32, i32, i32* }
%"class.icu_69::UnicodeString" = type { %"class.icu_69::Replaceable", %"union.icu_69::UnicodeString::StackBufferOrFields" }
%"class.icu_69::Replaceable" = type { %"class.icu_69::UObject" }
%"union.icu_69::UnicodeString::StackBufferOrFields" = type { %struct.anon.0, [32 x i8] }
%struct.anon.0 = type { i16, i32, i32, i16* }
%"class.icu_69::StandardPluralRanges" = type { %"class.icu_69::MaybeStackArray.1", i32, [4 x i8] }
%"class.icu_69::MaybeStackArray.1" = type <{ %"struct.icu_69::StandardPluralRanges::StandardPluralRangeTriple"*, i32, i8, [3 x i8], [3 x %"struct.icu_69::StandardPluralRanges::StandardPluralRangeTriple"], [4 x i8] }>
%"struct.icu_69::StandardPluralRanges::StandardPluralRangeTriple" = type { i32, i32, i32 }
%"class.icu_69::Char16Ptr" = type { i16* }
%struct.UFormattedNumber = type opaque
%"class.icu_69::number::impl::DecimalQuantity" = type <{ %"class.icu_69::IFixedDecimal", i8, [3 x i8], i32, i32, i8, i8, [2 x i8], double, i32, i32, i32, i32, %union.anon, i8, i8, [6 x i8] }>
%union.anon = type { %struct.anon.3 }
%struct.anon.3 = type { i8*, i32 }
%struct.UFormattedNumberRange = type opaque
%"class.icu_69::number::impl::UFormattedNumberRangeData" = type { %"class.icu_69::FormattedValueStringBuilderImpl.base", [4 x i8], %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity", i32, [4 x i8] }
%"class.icu_69::FormattedValueStringBuilderImpl.base" = type <{ %"class.icu_69::FormattedValue", %"class.icu_69::FormattedStringBuilder", %"struct.icu_69::FormattedStringBuilder::Field", [7 x i8], %"class.icu_69::MaybeStackArray.7", i32 }>
%"class.icu_69::FormattedValue" = type { i32 (...)** }
%"class.icu_69::FormattedStringBuilder" = type { i8, %"union.icu_69::FormattedStringBuilder::ValueOrHeapArray", %"union.icu_69::FormattedStringBuilder::ValueOrHeapArray.5", i32, i32 }
%"union.icu_69::FormattedStringBuilder::ValueOrHeapArray" = type { %struct.anon.4, [64 x i8] }
%struct.anon.4 = type { i16*, i32 }
%"union.icu_69::FormattedStringBuilder::ValueOrHeapArray.5" = type { %struct.anon.6, [24 x i8] }
%struct.anon.6 = type { %"struct.icu_69::FormattedStringBuilder::Field"*, i32 }
%"struct.icu_69::FormattedStringBuilder::Field" = type { i8 }
%"class.icu_69::MaybeStackArray.7" = type { %"struct.icu_69::SpanInfo"*, i32, i8, [8 x %"struct.icu_69::SpanInfo"] }
%"struct.icu_69::SpanInfo" = type { i32, i32, i32, i32 }
%"class.icu_69::Formattable" = type { %"class.icu_69::UObject", %union.anon.8, %"class.icu_69::CharString"*, %"class.icu_69::number::impl::DecimalQuantity"*, i32, %"class.icu_69::UnicodeString" }
%union.anon.8 = type { %struct.anon.9 }
%struct.anon.9 = type { %"class.icu_69::Formattable"*, i32 }
%"class.icu_69::CharString" = type { %"class.icu_69::MaybeStackArray", i32, [4 x i8] }
%"class.icu_69::DecimalFormat" = type { %"class.icu_69::NumberFormat.base", %"struct.icu_69::number::impl::DecimalFormatFields"* }
%"class.icu_69::NumberFormat.base" = type { %"class.icu_69::Format.base", i8, i32, i32, i32, i32, i8, i8, [4 x i16], i32 }
%"class.icu_69::Format.base" = type <{ %"class.icu_69::UObject", [157 x i8], [157 x i8] }>
%"struct.icu_69::number::impl::DecimalFormatFields" = type opaque
%struct.UEnumeration = type opaque
%"class.icu_69::StringEnumeration" = type <{ %"class.icu_69::UObject", %"class.icu_69::UnicodeString", [32 x i8], i8*, i32, [4 x i8] }>

$_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ev = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ei10UErrorCode = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE6resizeEii = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EED5Ev = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE12releaseArrayEv = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEC5EOS1_ = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE17resetToStackArrayEv = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEaSEOS1_ = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EE11getCapacityEv = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EE8getAliasEv = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EE13getArrayLimitEv = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EEixEl = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEixEl = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE12aliasInsteadEPci = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE13orphanOrCloneEiRi = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE8copyFromERKS1_R10UErrorCode = comdat any

@_ZTIN6icu_6912NumberFormatE = external constant i8*
@_ZTIN6icu_6913DecimalFormatE = external constant i8*
@__const._ZN12_GLOBAL__N_16selectERKN6icu_6911PluralRulesERKNS0_11FormattableERKNS0_12NumberFormatER10UErrorCode.dq = private unnamed_addr constant <{ %"class.icu_69::IFixedDecimal", i8, [3 x i8], i32, i32, i8, i8, [2 x i8], double, i32, i32, i32, i32, { { i8*, i32, [4 x i8] } }, i8, i8, [6 x i8] }> <{ %"class.icu_69::IFixedDecimal" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", double 0xFFFFFFFFFFFFFFFF, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, { { i8*, i32, [4 x i8] } } { { i8*, i32, [4 x i8] } { i8* inttoptr (i64 -6148914691236517206 to i8*), i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" } }, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }>, align 8
@_ZTVN6icu_6913UnicodeStringE = external unnamed_addr constant { [13 x i8*] }, align 8

@_ZN6icu_6915MaybeStackArrayIcLi40EEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*), void (%"class.icu_69::MaybeStackArray"*)* @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ev
@_ZN6icu_6915MaybeStackArrayIcLi40EEC1Ei10UErrorCode = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*, i32, i32), void (%"class.icu_69::MaybeStackArray"*, i32, i32)* @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ei10UErrorCode
@_ZN6icu_6915MaybeStackArrayIcLi40EED1Ev = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*), void (%"class.icu_69::MaybeStackArray"*)* @_ZN6icu_6915MaybeStackArrayIcLi40EED2Ev
@_ZN6icu_6915MaybeStackArrayIcLi40EEC1EOS1_ = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"*), void (%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"*)* @_ZN6icu_6915MaybeStackArrayIcLi40EEC2EOS1_

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ev(%"class.icu_69::MaybeStackArray"*) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  store i8* %3, i8** %2, align 8
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  store i8 0, i8* %5, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ei10UErrorCode(%"class.icu_69::MaybeStackArray"*, i32, i32) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ei10UErrorCode) align 2 {
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  store i8* %5, i8** %4, align 8
  %6 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  store i8 0, i8* %7, align 4
  %8 = icmp slt i32 %2, 1
  %9 = icmp sgt i32 %1, 40
  %10 = and i1 %9, %8
  br i1 %10, label %11, label %21

11:                                               ; preds = %3
  %12 = sext i32 %1 to i64
  %13 = tail call noalias i8* @uprv_malloc_69(i64 %12) #7
  %14 = icmp eq i8* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %11
  %16 = load i8, i8* %7, align 4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %15
  %19 = load i8*, i8** %4, align 8
  tail call void @uprv_free_69(i8* %19) #8
  br label %20

20:                                               ; preds = %18, %15
  store i8* %13, i8** %4, align 8
  store i32 %1, i32* %6, align 8
  store i8 1, i8* %7, align 4
  br label %21

21:                                               ; preds = %3, %11, %20
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i8* @_ZN6icu_6915MaybeStackArrayIcLi40EE6resizeEii(%"class.icu_69::MaybeStackArray"*, i32, i32) local_unnamed_addr #1 comdat align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %31

5:                                                ; preds = %3
  %6 = sext i32 %1 to i64
  %7 = tail call noalias i8* @uprv_malloc_69(i64 %6) #7
  %8 = icmp eq i8* %7, null
  br i1 %8, label %31, label %9

9:                                                ; preds = %5
  %10 = icmp sgt i32 %2, 0
  br i1 %10, label %11, label %21

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp slt i32 %13, %2
  %15 = select i1 %14, i32 %13, i32 %2
  %16 = icmp sgt i32 %15, %1
  %17 = select i1 %16, i32 %1, i32 %15
  %18 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = sext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %7, i8* align 1 %19, i64 %20, i1 false)
  br label %21

21:                                               ; preds = %11, %9
  %22 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %23 = load i8, i8* %22, align 4
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @uprv_free_69(i8* %27) #8
  br label %28

28:                                               ; preds = %21, %25
  %29 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %7, i8** %29, align 8
  %30 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %1, i32* %30, align 8
  store i8 1, i8* %22, align 4
  br label %31

31:                                               ; preds = %3, %28, %5
  %32 = phi i8* [ null, %5 ], [ %7, %28 ], [ null, %3 ]
  ret i8* %32
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EED2Ev(%"class.icu_69::MaybeStackArray"*) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  tail call void @uprv_free_69(i8* %7) #8
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE12releaseArrayEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  tail call void @uprv_free_69(i8* %7) #8
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EEC2EOS1_(%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"* dereferenceable(56)) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EEC5EOS1_) align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 0
  %4 = bitcast %"class.icu_69::MaybeStackArray"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.icu_69::MaybeStackArray"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  store i32 %9, i32* %7, align 8
  %10 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 2
  %12 = load i8, i8* %11, align 4
  store i8 %12, i8* %10, align 4
  %13 = load i8*, i8** %3, align 8
  %14 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 3, i64 0
  %15 = icmp eq i8* %13, %14
  br i1 %15, label %16, label %21

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %18 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  store i8* %18, i8** %17, align 8
  %19 = load i32, i32* %8, align 8
  %20 = sext i32 %19 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %13, i64 %20, i1 false)
  br label %22

21:                                               ; preds = %2
  store i8* %14, i8** %3, align 8
  store i32 40, i32* %8, align 8
  store i8 0, i8* %11, align 4
  br label %22

22:                                               ; preds = %21, %16
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE17resetToStackArrayEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %2, i8** %3, align 8
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  store i8 0, i8* %5, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden dereferenceable(56) %"class.icu_69::MaybeStackArray"* @_ZN6icu_6915MaybeStackArrayIcLi40EEaSEOS1_(%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"* dereferenceable(56)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  tail call void @uprv_free_69(i8* %8) #8
  br label %9

9:                                                ; preds = %2, %6
  %10 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %11, i32* %12, align 8
  %13 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 2
  %14 = load i8, i8* %13, align 4
  store i8 %14, i8* %3, align 4
  %15 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 3, i64 0
  %18 = icmp eq i8* %16, %17
  br i1 %18, label %19, label %24

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  %21 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %20, i8** %21, align 8
  %22 = load i32, i32* %10, align 8
  %23 = sext i32 %22 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %16, i64 %23, i1 false)
  br label %26

24:                                               ; preds = %9
  %25 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %16, i8** %25, align 8
  store i8* %17, i8** %15, align 8
  store i32 40, i32* %10, align 8
  store i8 0, i8* %13, align 4
  br label %26

26:                                               ; preds = %24, %19
  ret %"class.icu_69::MaybeStackArray"* %0
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZNK6icu_6915MaybeStackArrayIcLi40EE11getCapacityEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i8* @_ZNK6icu_6915MaybeStackArrayIcLi40EE8getAliasEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i8* @_ZNK6icu_6915MaybeStackArrayIcLi40EE13getArrayLimitEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds i8, i8* %3, i64 %6
  ret i8* %7
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden dereferenceable(1) i8* @_ZNK6icu_6915MaybeStackArrayIcLi40EEixEl(%"class.icu_69::MaybeStackArray"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 %1
  ret i8* %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden dereferenceable(1) i8* @_ZN6icu_6915MaybeStackArrayIcLi40EEixEl(%"class.icu_69::MaybeStackArray"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 %1
  ret i8* %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE12aliasInsteadEPci(%"class.icu_69::MaybeStackArray"*, i8*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp ne i8* %1, null
  %5 = icmp sgt i32 %2, 0
  %6 = and i1 %4, %5
  br i1 %6, label %7, label %17

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %9 = load i8, i8* %8, align 4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  tail call void @uprv_free_69(i8* %13) #8
  br label %14

14:                                               ; preds = %7, %11
  %15 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %1, i8** %15, align 8
  %16 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %2, i32* %16, align 8
  store i8 0, i8* %8, align 4
  br label %17

17:                                               ; preds = %14, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: allocsize(0)
declare noalias i8* @uprv_malloc_69(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i8* @_ZN6icu_6915MaybeStackArrayIcLi40EE13orphanOrCloneEiRi(%"class.icu_69::MaybeStackArray"*, i32, i32* dereferenceable(4)) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  br label %23

10:                                               ; preds = %3
  %11 = icmp slt i32 %1, 1
  br i1 %11, label %29, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp slt i32 %14, %1
  %16 = select i1 %15, i32 %14, i32 %1
  %17 = sext i32 %16 to i64
  %18 = tail call noalias i8* @uprv_malloc_69(i64 %17) #7
  %19 = icmp eq i8* %18, null
  br i1 %19, label %29, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %18, i8* align 1 %22, i64 %17, i1 false)
  br label %23

23:                                               ; preds = %20, %7
  %24 = phi i32 [ %1, %7 ], [ %16, %20 ]
  %25 = phi i8* [ %9, %7 ], [ %18, %20 ]
  store i32 %24, i32* %2, align 4
  %26 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  %27 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %26, i8** %27, align 8
  %28 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %28, align 8
  store i8 0, i8* %4, align 4
  br label %29

29:                                               ; preds = %12, %10, %23
  %30 = phi i8* [ %25, %23 ], [ null, %10 ], [ null, %12 ]
  ret i8* %30
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE8copyFromERKS1_R10UErrorCode(%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"* dereferenceable(56), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %27

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %21

10:                                               ; preds = %6
  %11 = sext i32 %8 to i64
  %12 = tail call noalias i8* @uprv_malloc_69(i64 %11) #7
  %13 = icmp eq i8* %12, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %16 = load i8, i8* %15, align 4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @uprv_free_69(i8* %20) #8
  br label %22

21:                                               ; preds = %10, %6
  store i32 7, i32* %2, align 4
  br label %27

22:                                               ; preds = %18, %14
  %23 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %12, i8** %23, align 8
  %24 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %8, i32* %24, align 8
  store i8 1, i8* %15, align 4
  %25 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %12, i8* align 1 %26, i64 %11, i1 false)
  br label %27

27:                                               ; preds = %3, %21, %22
  ret void
}

declare void @uprv_free_69(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %struct.UPluralRules* @uplrules_open_69(i8*, i32*) local_unnamed_addr #0 {
  %3 = alloca %"class.icu_69::Locale", align 8
  %4 = bitcast %"class.icu_69::Locale"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 224, i8* nonnull %4) #8
  call void @_ZN6icu_696LocaleC1EPKcS2_S2_S2_(%"class.icu_69::Locale"* nonnull %3, i8* %0, i8* null, i8* null, i8* null) #8
  %5 = call %"class.icu_69::PluralRules"* @_ZN6icu_6911PluralRules9forLocaleERKNS_6LocaleE11UPluralTypeR10UErrorCode(%"class.icu_69::Locale"* nonnull dereferenceable(224) %3, i32 0, i32* dereferenceable(4) %1) #8
  %6 = bitcast %"class.icu_69::PluralRules"* %5 to %struct.UPluralRules*
  call void @_ZN6icu_696LocaleD1Ev(%"class.icu_69::Locale"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 224, i8* nonnull %4) #8
  ret %struct.UPluralRules* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.UPluralRules* @uplrules_openForType_69(i8*, i32, i32*) local_unnamed_addr #0 {
  %4 = alloca %"class.icu_69::Locale", align 8
  %5 = bitcast %"class.icu_69::Locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 224, i8* nonnull %5) #8
  call void @_ZN6icu_696LocaleC1EPKcS2_S2_S2_(%"class.icu_69::Locale"* nonnull %4, i8* %0, i8* null, i8* null, i8* null) #8
  %6 = call %"class.icu_69::PluralRules"* @_ZN6icu_6911PluralRules9forLocaleERKNS_6LocaleE11UPluralTypeR10UErrorCode(%"class.icu_69::Locale"* nonnull dereferenceable(224) %4, i32 %1, i32* dereferenceable(4) %2) #8
  %7 = bitcast %"class.icu_69::PluralRules"* %6 to %struct.UPluralRules*
  call void @_ZN6icu_696LocaleD1Ev(%"class.icu_69::Locale"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 224, i8* nonnull %5) #8
  ret %struct.UPluralRules* %7
}

declare %"class.icu_69::PluralRules"* @_ZN6icu_6911PluralRules9forLocaleERKNS_6LocaleE11UPluralTypeR10UErrorCode(%"class.icu_69::Locale"* dereferenceable(224), i32, i32* dereferenceable(4)) local_unnamed_addr #4

declare void @_ZN6icu_696LocaleC1EPKcS2_S2_S2_(%"class.icu_69::Locale"*, i8*, i8*, i8*, i8*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6icu_696LocaleD1Ev(%"class.icu_69::Locale"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @uplrules_close_69(%struct.UPluralRules*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.UPluralRules* %0, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %1
  %4 = bitcast %struct.UPluralRules* %0 to %"class.icu_69::PluralRules"*
  %5 = bitcast %struct.UPluralRules* %0 to void (%"class.icu_69::PluralRules"*)***
  %6 = load void (%"class.icu_69::PluralRules"*)**, void (%"class.icu_69::PluralRules"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.icu_69::PluralRules"*)*, void (%"class.icu_69::PluralRules"*)** %6, i64 1
  %8 = load void (%"class.icu_69::PluralRules"*)*, void (%"class.icu_69::PluralRules"*)** %7, align 8
  tail call void %8(%"class.icu_69::PluralRules"* nonnull %4) #8
  br label %9

9:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @uplrules_select_69(%struct.UPluralRules*, double, i16*, i32, i32*) local_unnamed_addr #0 {
  %6 = alloca %"class.icu_69::UnicodeString", align 8
  %7 = alloca %"class.icu_69::Char16Ptr", align 8
  %8 = load i32, i32* %4, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %10, label %23

10:                                               ; preds = %5
  %11 = icmp eq i16* %2, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %10
  %13 = icmp eq i32 %3, 0
  br i1 %13, label %17, label %16

14:                                               ; preds = %10
  %15 = icmp slt i32 %3, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %12, %14
  store i32 1, i32* %4, align 4
  br label %23

17:                                               ; preds = %12, %14
  %18 = bitcast %"class.icu_69::UnicodeString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %18) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 64, i1 false)
  %19 = bitcast %struct.UPluralRules* %0 to %"class.icu_69::PluralRules"*
  call void @_ZNK6icu_6911PluralRules6selectEd(%"class.icu_69::UnicodeString"* nonnull sret %6, %"class.icu_69::PluralRules"* %19, double %1) #8
  %20 = getelementptr inbounds %"class.icu_69::Char16Ptr", %"class.icu_69::Char16Ptr"* %7, i64 0, i32 0
  store i16* %2, i16** %20, align 8
  %21 = call i32 @_ZNK6icu_6913UnicodeString7extractENS_9Char16PtrEiR10UErrorCode(%"class.icu_69::UnicodeString"* nonnull %6, %"class.icu_69::Char16Ptr"* nonnull %7, i32 %3, i32* dereferenceable(4) %4) #8
  %22 = load i16*, i16** %20, align 8
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %22) #8, !srcloc !2
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %18) #8
  br label %23

23:                                               ; preds = %5, %17, %16
  %24 = phi i32 [ 0, %16 ], [ %21, %17 ], [ 0, %5 ]
  ret i32 %24
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZNK6icu_6911PluralRules6selectEd(%"class.icu_69::UnicodeString"* sret, %"class.icu_69::PluralRules"*, double) local_unnamed_addr #4

declare i32 @_ZNK6icu_6913UnicodeString7extractENS_9Char16PtrEiR10UErrorCode(%"class.icu_69::UnicodeString"*, %"class.icu_69::Char16Ptr"*, i32, i32* dereferenceable(4)) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @uplrules_selectFormatted_69(%struct.UPluralRules*, %struct.UFormattedNumber*, i16*, i32, i32*) local_unnamed_addr #0 {
  %6 = alloca %"class.icu_69::UnicodeString", align 8
  %7 = alloca %"class.icu_69::Char16Ptr", align 8
  %8 = load i32, i32* %4, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %10, label %28

10:                                               ; preds = %5
  %11 = icmp eq i16* %2, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %10
  %13 = icmp eq i32 %3, 0
  br i1 %13, label %17, label %16

14:                                               ; preds = %10
  %15 = icmp slt i32 %3, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %12, %14
  store i32 1, i32* %4, align 4
  br label %28

17:                                               ; preds = %12, %14
  %18 = tail call %"class.icu_69::number::impl::DecimalQuantity"* @_ZN6icu_696number4impl41validateUFormattedNumberToDecimalQuantityEPK16UFormattedNumberR10UErrorCode(%struct.UFormattedNumber* %1, i32* dereferenceable(4) %4) #8
  %19 = load i32, i32* %4, align 4
  %20 = icmp slt i32 %19, 1
  br i1 %20, label %21, label %28

21:                                               ; preds = %17
  %22 = bitcast %"class.icu_69::UnicodeString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %22) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 64, i1 false)
  %23 = bitcast %struct.UPluralRules* %0 to %"class.icu_69::PluralRules"*
  %24 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %18, i64 0, i32 0
  call void @_ZNK6icu_6911PluralRules6selectERKNS_13IFixedDecimalE(%"class.icu_69::UnicodeString"* nonnull sret %6, %"class.icu_69::PluralRules"* %23, %"class.icu_69::IFixedDecimal"* dereferenceable(8) %24) #8
  %25 = getelementptr inbounds %"class.icu_69::Char16Ptr", %"class.icu_69::Char16Ptr"* %7, i64 0, i32 0
  store i16* %2, i16** %25, align 8
  %26 = call i32 @_ZNK6icu_6913UnicodeString7extractENS_9Char16PtrEiR10UErrorCode(%"class.icu_69::UnicodeString"* nonnull %6, %"class.icu_69::Char16Ptr"* nonnull %7, i32 %3, i32* dereferenceable(4) %4) #8
  %27 = load i16*, i16** %25, align 8
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %27) #8, !srcloc !2
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %22) #8
  br label %28

28:                                               ; preds = %21, %17, %5, %16
  %29 = phi i32 [ 0, %16 ], [ 0, %5 ], [ %26, %21 ], [ 0, %17 ]
  ret i32 %29
}

declare %"class.icu_69::number::impl::DecimalQuantity"* @_ZN6icu_696number4impl41validateUFormattedNumberToDecimalQuantityEPK16UFormattedNumberR10UErrorCode(%struct.UFormattedNumber*, i32* dereferenceable(4)) local_unnamed_addr #4

declare void @_ZNK6icu_6911PluralRules6selectERKNS_13IFixedDecimalE(%"class.icu_69::UnicodeString"* sret, %"class.icu_69::PluralRules"*, %"class.icu_69::IFixedDecimal"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @uplrules_selectForRange_69(%struct.UPluralRules*, %struct.UFormattedNumberRange*, i16*, i32, i32*) local_unnamed_addr #0 {
  %6 = alloca %"class.icu_69::UnicodeString", align 8
  %7 = alloca %"class.icu_69::Char16Ptr", align 8
  %8 = load i32, i32* %4, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %10, label %24

10:                                               ; preds = %5
  %11 = icmp eq i16* %2, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %10
  %13 = icmp eq i32 %3, 0
  br i1 %13, label %17, label %16

14:                                               ; preds = %10
  %15 = icmp slt i32 %3, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %12, %14
  store i32 1, i32* %4, align 4
  br label %24

17:                                               ; preds = %12, %14
  %18 = tail call %"class.icu_69::number::impl::UFormattedNumberRangeData"* @_ZN6icu_696number4impl29validateUFormattedNumberRangeEPK21UFormattedNumberRangeR10UErrorCode(%struct.UFormattedNumberRange* %1, i32* dereferenceable(4) %4) #8
  %19 = bitcast %"class.icu_69::UnicodeString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %19) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 64, i1 false)
  %20 = bitcast %struct.UPluralRules* %0 to %"class.icu_69::PluralRules"*
  call void @_ZNK6icu_6911PluralRules6selectEPKNS_6number4impl25UFormattedNumberRangeDataER10UErrorCode(%"class.icu_69::UnicodeString"* nonnull sret %6, %"class.icu_69::PluralRules"* %20, %"class.icu_69::number::impl::UFormattedNumberRangeData"* %18, i32* dereferenceable(4) %4) #8
  %21 = getelementptr inbounds %"class.icu_69::Char16Ptr", %"class.icu_69::Char16Ptr"* %7, i64 0, i32 0
  store i16* %2, i16** %21, align 8
  %22 = call i32 @_ZNK6icu_6913UnicodeString7extractENS_9Char16PtrEiR10UErrorCode(%"class.icu_69::UnicodeString"* nonnull %6, %"class.icu_69::Char16Ptr"* nonnull %7, i32 %3, i32* dereferenceable(4) %4) #8
  %23 = load i16*, i16** %21, align 8
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %23) #8, !srcloc !2
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %19) #8
  br label %24

24:                                               ; preds = %5, %17, %16
  %25 = phi i32 [ 0, %16 ], [ %22, %17 ], [ 0, %5 ]
  ret i32 %25
}

declare %"class.icu_69::number::impl::UFormattedNumberRangeData"* @_ZN6icu_696number4impl29validateUFormattedNumberRangeEPK21UFormattedNumberRangeR10UErrorCode(%struct.UFormattedNumberRange*, i32* dereferenceable(4)) local_unnamed_addr #4

declare void @_ZNK6icu_6911PluralRules6selectEPKNS_6number4impl25UFormattedNumberRangeDataER10UErrorCode(%"class.icu_69::UnicodeString"* sret, %"class.icu_69::PluralRules"*, %"class.icu_69::number::impl::UFormattedNumberRangeData"*, i32* dereferenceable(4)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @uplrules_selectWithFormat_69(%struct.UPluralRules*, double, i8**, i16*, i32, i32*) local_unnamed_addr #0 {
  %7 = alloca %"class.icu_69::number::impl::DecimalQuantity", align 8
  %8 = alloca %"class.icu_69::Formattable", align 8
  %9 = alloca %"class.icu_69::UnicodeString", align 8
  %10 = alloca %"class.icu_69::Char16Ptr", align 8
  %11 = load i32, i32* %5, align 4
  %12 = icmp slt i32 %11, 1
  br i1 %12, label %13, label %54

13:                                               ; preds = %6
  %14 = bitcast %struct.UPluralRules* %0 to %"class.icu_69::PluralRules"*
  %15 = icmp eq %struct.UPluralRules* %0, null
  %16 = icmp eq i8** %2, null
  %17 = or i1 %15, %16
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = icmp eq i16* %3, null
  br i1 %19, label %20, label %22

20:                                               ; preds = %18
  %21 = icmp eq i32 %4, 0
  br i1 %21, label %25, label %24

22:                                               ; preds = %18
  %23 = icmp slt i32 %4, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %20, %22, %13
  store i32 1, i32* %5, align 4
  br label %54

25:                                               ; preds = %20, %22
  %26 = bitcast %"class.icu_69::Formattable"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %26) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 112, i1 false)
  call void @_ZN6icu_6911FormattableC1Ed(%"class.icu_69::Formattable"* nonnull %8, double %1) #8
  %27 = bitcast %"class.icu_69::UnicodeString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %27) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 64, i1 false)
  %28 = load i32, i32* %5, align 4, !noalias !3
  %29 = icmp sgt i32 %28, 0
  br i1 %29, label %47, label %30

30:                                               ; preds = %25
  %31 = bitcast i8** %2 to i8*
  %32 = call i8* @__dynamic_cast(i8* nonnull %31, i8* bitcast (i8** @_ZTIN6icu_6912NumberFormatE to i8*), i8* bitcast (i8** @_ZTIN6icu_6913DecimalFormatE to i8*), i64 0) #8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %42, label %34

34:                                               ; preds = %30
  %35 = bitcast i8* %32 to %"class.icu_69::DecimalFormat"*
  %36 = bitcast %"class.icu_69::number::impl::DecimalQuantity"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %36) #8, !noalias !3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %36, i8* align 8 bitcast (<{ %"class.icu_69::IFixedDecimal", i8, [3 x i8], i32, i32, i8, i8, [2 x i8], double, i32, i32, i32, i32, { { i8*, i32, [4 x i8] } }, i8, i8, [6 x i8] }>* @__const._ZN12_GLOBAL__N_16selectERKN6icu_6911PluralRulesERKNS0_11FormattableERKNS0_12NumberFormatER10UErrorCode.dq to i8*), i64 72, i1 false) #8
  call void @_ZN6icu_696number4impl15DecimalQuantityC1Ev(%"class.icu_69::number::impl::DecimalQuantity"* nonnull %7) #8
  call void @_ZNK6icu_6913DecimalFormat23formatToDecimalQuantityERKNS_11FormattableERNS_6number4impl15DecimalQuantityER10UErrorCode(%"class.icu_69::DecimalFormat"* nonnull %35, %"class.icu_69::Formattable"* nonnull dereferenceable(112) %8, %"class.icu_69::number::impl::DecimalQuantity"* nonnull dereferenceable(72) %7, i32* dereferenceable(4) %5) #8
  %37 = load i32, i32* %5, align 4, !noalias !3
  %38 = icmp sgt i32 %37, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.icu_69::number::impl::DecimalQuantity", %"class.icu_69::number::impl::DecimalQuantity"* %7, i64 0, i32 0
  call void @_ZNK6icu_6911PluralRules6selectERKNS_13IFixedDecimalE(%"class.icu_69::UnicodeString"* nonnull sret %9, %"class.icu_69::PluralRules"* %14, %"class.icu_69::IFixedDecimal"* nonnull dereferenceable(8) %40) #8
  call void @_ZN6icu_696number4impl15DecimalQuantityD1Ev(%"class.icu_69::number::impl::DecimalQuantity"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %36) #8, !noalias !3
  br label %50

41:                                               ; preds = %34
  call void @_ZN6icu_696number4impl15DecimalQuantityD1Ev(%"class.icu_69::number::impl::DecimalQuantity"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %36) #8, !noalias !3
  br label %47

42:                                               ; preds = %30
  %43 = call double @_ZNK6icu_6911Formattable9getDoubleER10UErrorCode(%"class.icu_69::Formattable"* nonnull %8, i32* dereferenceable(4) %5) #8
  %44 = load i32, i32* %5, align 4, !noalias !3
  %45 = icmp sgt i32 %44, 0
  br i1 %45, label %47, label %46

46:                                               ; preds = %42
  call void @_ZNK6icu_6911PluralRules6selectEd(%"class.icu_69::UnicodeString"* nonnull sret %9, %"class.icu_69::PluralRules"* %14, double %43) #8
  br label %50

47:                                               ; preds = %42, %41, %25
  %48 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %9, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %48, align 8, !alias.scope !3
  %49 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %9, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %49, align 8, !alias.scope !3
  br label %50

50:                                               ; preds = %39, %46, %47
  %51 = getelementptr inbounds %"class.icu_69::Char16Ptr", %"class.icu_69::Char16Ptr"* %10, i64 0, i32 0
  store i16* %3, i16** %51, align 8
  %52 = call i32 @_ZNK6icu_6913UnicodeString7extractENS_9Char16PtrEiR10UErrorCode(%"class.icu_69::UnicodeString"* nonnull %9, %"class.icu_69::Char16Ptr"* nonnull %10, i32 %4, i32* dereferenceable(4) %5) #8
  %53 = load i16*, i16** %51, align 8
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %53) #8, !srcloc !2
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %27) #8
  call void @_ZN6icu_6911FormattableD1Ev(%"class.icu_69::Formattable"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %26) #8
  br label %54

54:                                               ; preds = %24, %50, %6
  %55 = phi i32 [ 0, %6 ], [ 0, %24 ], [ %52, %50 ]
  ret i32 %55
}

declare void @_ZN6icu_6911FormattableC1Ed(%"class.icu_69::Formattable"*, double) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6icu_6911FormattableD1Ev(%"class.icu_69::Formattable"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %struct.UEnumeration* @uplrules_getKeywords_69(%struct.UPluralRules*, i32*) local_unnamed_addr #0 {
  %3 = load i32, i32* %1, align 4
  %4 = icmp slt i32 %3, 1
  br i1 %4, label %5, label %18

5:                                                ; preds = %2
  %6 = icmp eq %struct.UPluralRules* %0, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  store i32 1, i32* %1, align 4
  br label %18

8:                                                ; preds = %5
  %9 = bitcast %struct.UPluralRules* %0 to %"class.icu_69::PluralRules"*
  %10 = tail call %"class.icu_69::StringEnumeration"* @_ZNK6icu_6911PluralRules11getKeywordsER10UErrorCode(%"class.icu_69::PluralRules"* nonnull %9, i32* dereferenceable(4) %1) #8
  %11 = load i32, i32* %1, align 4
  %12 = icmp slt i32 %11, 1
  br i1 %12, label %13, label %18

13:                                               ; preds = %8
  %14 = icmp eq %"class.icu_69::StringEnumeration"* %10, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %13
  store i32 7, i32* %1, align 4
  br label %18

16:                                               ; preds = %13
  %17 = tail call %struct.UEnumeration* @uenum_openFromStringEnumeration_69(%"class.icu_69::StringEnumeration"* nonnull %10, i32* %1) #8
  br label %18

18:                                               ; preds = %7, %8, %16, %15, %2
  %19 = phi %struct.UEnumeration* [ null, %2 ], [ null, %7 ], [ null, %15 ], [ %17, %16 ], [ null, %8 ]
  ret %struct.UEnumeration* %19
}

declare %"class.icu_69::StringEnumeration"* @_ZNK6icu_6911PluralRules11getKeywordsER10UErrorCode(%"class.icu_69::PluralRules"*, i32* dereferenceable(4)) local_unnamed_addr #4

declare %struct.UEnumeration* @uenum_openFromStringEnumeration_69(%"class.icu_69::StringEnumeration"*, i32*) local_unnamed_addr #4

; Function Attrs: nounwind readonly
declare i8* @__dynamic_cast(i8*, i8*, i8*, i64) local_unnamed_addr #6

declare void @_ZN6icu_696number4impl15DecimalQuantityC1Ev(%"class.icu_69::number::impl::DecimalQuantity"*) unnamed_addr #4

declare void @_ZNK6icu_6913DecimalFormat23formatToDecimalQuantityERKNS_11FormattableERNS_6number4impl15DecimalQuantityER10UErrorCode(%"class.icu_69::DecimalFormat"*, %"class.icu_69::Formattable"* dereferenceable(112), %"class.icu_69::number::impl::DecimalQuantity"* dereferenceable(72), i32* dereferenceable(4)) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6icu_696number4impl15DecimalQuantityD1Ev(%"class.icu_69::number::impl::DecimalQuantity"*) unnamed_addr #5

declare double @_ZNK6icu_6911Formattable9getDoubleER10UErrorCode(%"class.icu_69::Formattable"*, i32* dereferenceable(4)) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly }
attributes #7 = { nounwind allocsize(0) }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 -2144970629}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN12_GLOBAL__N_16selectERKN6icu_6911PluralRulesERKNS0_11FormattableERKNS0_12NumberFormatER10UErrorCode: argument 0"}
!5 = distinct !{!5, !"_ZN12_GLOBAL__N_16selectERKN6icu_6911PluralRulesERKNS0_11FormattableERKNS0_12NumberFormatER10UErrorCode"}
