; ModuleID = '../../components/services/font/public/cpp/mapped_font_file.cc'
source_filename = "../../components/services/font/public/cpp/mapped_font_file.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.font_service::internal::MappedFontFile" = type { %"class.base::RefCountedThreadSafe", i32, %"class.base::MemoryMappedFile", %"class.font_service::internal::MappedFontFile::Observer"* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::MemoryMappedFile" = type { %"class.base::File", i8*, i64 }
%"class.base::File" = type <{ %"class.base::ScopedGeneric", %"class.base::FilePath", %"class.base::FileTracing::ScopedEnabler", [3 x i8], i32, i8, i8, [6 x i8] }>
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::FileTracing::ScopedEnabler" = type { i8 }
%"class.font_service::internal::MappedFontFile::Observer" = type { i32 (...)** }
%"class.base::ThreadRestrictions::ScopedAllowIO" = type { i8 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.SkMemoryStream = type { %class.SkStreamMemory, %class.sk_sp, i64 }
%class.SkStreamMemory = type { %class.SkStreamAsset }
%class.SkStreamAsset = type { %class.SkStreamSeekable }
%class.SkStreamSeekable = type { %class.SkStreamRewindable }
%class.SkStreamRewindable = type { %class.SkStream }
%class.SkStream = type { i32 (...)** }
%class.sk_sp = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }

@.str = private unnamed_addr constant [11 x i8] c"Initialize\00", align 1
@.str.1 = private unnamed_addr constant [62 x i8] c"../../components/services/font/public/cpp/mapped_font_file.cc\00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"ReleaseProc\00", align 1

@_ZN12font_service8internal14MappedFontFileC1Ej = hidden unnamed_addr alias void (%"class.font_service::internal::MappedFontFile"*, i32), void (%"class.font_service::internal::MappedFontFile"*, i32)* @_ZN12font_service8internal14MappedFontFileC2Ej
@_ZN12font_service8internal14MappedFontFileD1Ev = hidden unnamed_addr alias void (%"class.font_service::internal::MappedFontFile"*), void (%"class.font_service::internal::MappedFontFile"*)* @_ZN12font_service8internal14MappedFontFileD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12font_service8internal14MappedFontFileC2Ej(%"class.font_service::internal::MappedFontFile"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.font_service::internal::MappedFontFile", %"class.font_service::internal::MappedFontFile"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds %"class.font_service::internal::MappedFontFile", %"class.font_service::internal::MappedFontFile"* %0, i64 0, i32 1
  store i32 %1, i32* %4, align 4
  %5 = getelementptr inbounds %"class.font_service::internal::MappedFontFile", %"class.font_service::internal::MappedFontFile"* %0, i64 0, i32 2
  tail call void @_ZN4base16MemoryMappedFileC1Ev(%"class.base::MemoryMappedFile"* %5) #6
  %6 = getelementptr inbounds %"class.font_service::internal::MappedFontFile", %"class.font_service::internal::MappedFontFile"* %0, i64 0, i32 3
  store %"class.font_service::internal::MappedFontFile::Observer"* null, %"class.font_service::internal::MappedFontFile::Observer"** %6, align 8
  ret void
}

declare void @_ZN4base16MemoryMappedFileC1Ev(%"class.base::MemoryMappedFile"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12font_service8internal14MappedFontFile10InitializeEN4base4FileE(%"class.font_service::internal::MappedFontFile"*, %"class.base::File"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::File", align 8
  %4 = alloca %"class.base::ThreadRestrictions::ScopedAllowIO", align 1
  %5 = alloca %"class.base::Location", align 8
  %6 = alloca %"class.base::File", align 8
  %7 = getelementptr inbounds %"class.base::ThreadRestrictions::ScopedAllowIO", %"class.base::ThreadRestrictions::ScopedAllowIO"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #6
  store i8 -86, i8* %7, align 1
  %8 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #6
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1, i64 0, i64 0), i32 23) #6
  call void @_ZN4base18ThreadRestrictions13ScopedAllowIOC1ERKNS_8LocationE(%"class.base::ThreadRestrictions::ScopedAllowIO"* nonnull %4, %"class.base::Location"* nonnull dereferenceable(32) %5) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #6
  %9 = getelementptr inbounds %"class.font_service::internal::MappedFontFile", %"class.font_service::internal::MappedFontFile"* %0, i64 0, i32 2
  call void @_ZN4base4FileC1EOS0_(%"class.base::File"* nonnull %6, %"class.base::File"* dereferenceable(56) %1) #6
  %10 = bitcast %"class.base::File"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %10)
  call void @_ZN4base4FileC1EOS0_(%"class.base::File"* nonnull %3, %"class.base::File"* nonnull dereferenceable(56) %6) #6
  %11 = call zeroext i1 @_ZN4base16MemoryMappedFile10InitializeENS_4FileENS0_6AccessE(%"class.base::MemoryMappedFile"* %9, %"class.base::File"* nonnull %3, i32 0) #6
  call void @_ZN4base4FileD1Ev(%"class.base::File"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %10)
  call void @_ZN4base4FileD1Ev(%"class.base::File"* nonnull %6) #6
  call void @_ZN4base18ThreadRestrictions13ScopedAllowIOD1Ev(%"class.base::ThreadRestrictions::ScopedAllowIO"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #6
  ret i1 %11
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

declare void @_ZN4base18ThreadRestrictions13ScopedAllowIOC1ERKNS_8LocationE(%"class.base::ThreadRestrictions::ScopedAllowIO"*, %"class.base::Location"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN4base4FileC1EOS0_(%"class.base::File"*, %"class.base::File"* dereferenceable(56)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base4FileD1Ev(%"class.base::File"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base18ThreadRestrictions13ScopedAllowIOD1Ev(%"class.base::ThreadRestrictions::ScopedAllowIO"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkMemoryStream* @_ZN12font_service8internal14MappedFontFile18CreateMemoryStreamEv(%"class.font_service::internal::MappedFontFile"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.sk_sp, align 8
  %3 = alloca %class.sk_sp, align 8
  %4 = bitcast %class.sk_sp* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #6
  %5 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %2, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %5, align 8
  %6 = getelementptr inbounds %"class.font_service::internal::MappedFontFile", %"class.font_service::internal::MappedFontFile"* %0, i64 0, i32 2, i32 1
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %"class.font_service::internal::MappedFontFile", %"class.font_service::internal::MappedFontFile"* %0, i64 0, i32 2, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.font_service::internal::MappedFontFile"* %0 to i8*
  call void @_ZN6SkData12MakeWithProcEPKvmPFvS1_PvES2_(%class.sk_sp* nonnull sret %2, i8* %7, i64 %9, void (i8*, i8*)* nonnull @_ZN12font_service8internal14MappedFontFile11ReleaseProcEPKvPv, i8* %10) #6
  %11 = load %class.SkData*, %class.SkData** %5, align 8
  %12 = icmp eq %class.SkData* %11, null
  br i1 %12, label %38, label %13

13:                                               ; preds = %1
  %14 = ptrtoint %class.SkData* %11 to i64
  %15 = getelementptr inbounds %"class.font_service::internal::MappedFontFile", %"class.font_service::internal::MappedFontFile"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw add i32* %15, i32 1 monotonic
  %17 = call i8* @_Znwm(i64 24) #7
  %18 = bitcast i8* %17 to %class.SkMemoryStream*
  store %class.SkData* null, %class.SkData** %5, align 8
  %19 = bitcast %class.sk_sp* %3 to i64*
  store i64 %14, i64* %19, align 8
  call void @_ZN14SkMemoryStreamC1E5sk_spI6SkDataE(%class.SkMemoryStream* nonnull %18, %class.sk_sp* nonnull %3) #6
  %20 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  %21 = load %class.SkData*, %class.SkData** %20, align 8
  %22 = icmp eq %class.SkData* %21, null
  br i1 %22, label %29, label %23

23:                                               ; preds = %13
  %24 = getelementptr inbounds %class.SkData, %class.SkData* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 -1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %29

27:                                               ; preds = %23
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %21) #6
  %28 = bitcast %class.SkData* %21 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %28) #6
  br label %29

29:                                               ; preds = %27, %23, %13
  %30 = load %class.SkData*, %class.SkData** %5, align 8
  %31 = icmp eq %class.SkData* %30, null
  br i1 %31, label %38, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %class.SkData, %class.SkData* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %38

36:                                               ; preds = %32
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %30) #6
  %37 = bitcast %class.SkData* %30 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %37) #6
  br label %38

38:                                               ; preds = %1, %29, %32, %36
  %39 = phi %class.SkMemoryStream* [ %18, %29 ], [ %18, %32 ], [ %18, %36 ], [ null, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #6
  ret %class.SkMemoryStream* %39
}

declare void @_ZN6SkData12MakeWithProcEPKvmPFvS1_PvES2_(%class.sk_sp* sret, i8*, i64, void (i8*, i8*)*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12font_service8internal14MappedFontFile11ReleaseProcEPKvPv(i8* nocapture readnone, i8*) #0 align 2 {
  %3 = alloca %"class.base::ThreadRestrictions::ScopedAllowIO", align 1
  %4 = alloca %"class.base::Location", align 8
  %5 = getelementptr inbounds %"class.base::ThreadRestrictions::ScopedAllowIO", %"class.base::ThreadRestrictions::ScopedAllowIO"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #6
  store i8 -86, i8* %5, align 1
  %6 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #6
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1, i64 0, i64 0), i32 45) #6
  call void @_ZN4base18ThreadRestrictions13ScopedAllowIOC1ERKNS_8LocationE(%"class.base::ThreadRestrictions::ScopedAllowIO"* nonnull %3, %"class.base::Location"* nonnull dereferenceable(32) %4) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #6
  %7 = bitcast i8* %1 to i32*
  %8 = atomicrmw sub i32* %7, i32 1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %25

10:                                               ; preds = %2
  %11 = bitcast i8* %1 to %"class.font_service::internal::MappedFontFile"*
  %12 = icmp eq i8* %1, null
  br i1 %12, label %25, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds i8, i8* %1, i64 80
  %15 = bitcast i8* %14 to %"class.font_service::internal::MappedFontFile::Observer"**
  %16 = load %"class.font_service::internal::MappedFontFile::Observer"*, %"class.font_service::internal::MappedFontFile::Observer"** %15, align 8
  %17 = icmp eq %"class.font_service::internal::MappedFontFile::Observer"* %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.font_service::internal::MappedFontFile::Observer"* %16 to void (%"class.font_service::internal::MappedFontFile::Observer"*, %"class.font_service::internal::MappedFontFile"*)***
  %20 = load void (%"class.font_service::internal::MappedFontFile::Observer"*, %"class.font_service::internal::MappedFontFile"*)**, void (%"class.font_service::internal::MappedFontFile::Observer"*, %"class.font_service::internal::MappedFontFile"*)*** %19, align 8
  %21 = load void (%"class.font_service::internal::MappedFontFile::Observer"*, %"class.font_service::internal::MappedFontFile"*)*, void (%"class.font_service::internal::MappedFontFile::Observer"*, %"class.font_service::internal::MappedFontFile"*)** %20, align 8
  call void %21(%"class.font_service::internal::MappedFontFile::Observer"* nonnull %16, %"class.font_service::internal::MappedFontFile"* nonnull %11) #6
  br label %22

22:                                               ; preds = %18, %13
  %23 = getelementptr inbounds i8, i8* %1, i64 8
  %24 = bitcast i8* %23 to %"class.base::MemoryMappedFile"*
  call void @_ZN4base16MemoryMappedFileD1Ev(%"class.base::MemoryMappedFile"* %24) #6
  call void @_ZdlPv(i8* nonnull %1) #7
  br label %25

25:                                               ; preds = %2, %10, %22
  call void @_ZN4base18ThreadRestrictions13ScopedAllowIOD1Ev(%"class.base::ThreadRestrictions::ScopedAllowIO"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #6
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN14SkMemoryStreamC1E5sk_spI6SkDataE(%class.SkMemoryStream*, %class.sk_sp*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12font_service8internal14MappedFontFileD2Ev(%"class.font_service::internal::MappedFontFile"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.font_service::internal::MappedFontFile", %"class.font_service::internal::MappedFontFile"* %0, i64 0, i32 3
  %3 = load %"class.font_service::internal::MappedFontFile::Observer"*, %"class.font_service::internal::MappedFontFile::Observer"** %2, align 8
  %4 = icmp eq %"class.font_service::internal::MappedFontFile::Observer"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.font_service::internal::MappedFontFile::Observer"* %3 to void (%"class.font_service::internal::MappedFontFile::Observer"*, %"class.font_service::internal::MappedFontFile"*)***
  %7 = load void (%"class.font_service::internal::MappedFontFile::Observer"*, %"class.font_service::internal::MappedFontFile"*)**, void (%"class.font_service::internal::MappedFontFile::Observer"*, %"class.font_service::internal::MappedFontFile"*)*** %6, align 8
  %8 = load void (%"class.font_service::internal::MappedFontFile::Observer"*, %"class.font_service::internal::MappedFontFile"*)*, void (%"class.font_service::internal::MappedFontFile::Observer"*, %"class.font_service::internal::MappedFontFile"*)** %7, align 8
  tail call void %8(%"class.font_service::internal::MappedFontFile::Observer"* nonnull %3, %"class.font_service::internal::MappedFontFile"* %0) #6
  br label %9

9:                                                ; preds = %1, %5
  %10 = getelementptr inbounds %"class.font_service::internal::MappedFontFile", %"class.font_service::internal::MappedFontFile"* %0, i64 0, i32 2
  tail call void @_ZN4base16MemoryMappedFileD1Ev(%"class.base::MemoryMappedFile"* %10) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base16MemoryMappedFileD1Ev(%"class.base::MemoryMappedFile"*) unnamed_addr #3

declare zeroext i1 @_ZN4base16MemoryMappedFile10InitializeENS_4FileENS0_6AccessE(%"class.base::MemoryMappedFile"*, %"class.base::File"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
