; ModuleID = '../../v8/src/objects/string.cc'
source_filename = "../../v8/src/objects/string.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::SoleReadOnlyHeap" = type { %"class.v8::internal::ReadOnlyHeap", [587 x i64] }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.542" }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.140", i64, i64, i8, i64, i64 }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.20", i64 }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.20", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.20", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.20", i64, i64, %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.30", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.162", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.20", i64, i8, %"struct.std::__1::atomic.20", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.166", %"class.std::__1::vector.166", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.179", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.309", %"class.std::__1::unique_ptr.315", %"class.std::__1::unique_ptr.321", %"class.std::__1::unique_ptr.360", %"class.std::__1::unique_ptr.399", %"class.std::__1::unique_ptr.429", %"class.std::__1::unique_ptr.435", %"class.std::__1::unique_ptr.445", %"class.std::__1::unique_ptr.451", %"class.std::__1::unique_ptr.451", %"class.std::__1::unique_ptr.457", %"class.std::__1::unique_ptr.463", %"class.std::__1::unique_ptr.463", %"class.std::__1::unique_ptr.469", %"class.std::__1::unique_ptr.475", %"class.std::__1::shared_ptr.481", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.504", %"class.std::__1::unique_ptr.530", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.536", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.549", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.331", i8, [7 x i8], %"class.std::__1::unordered_map.555", %"class.std::__1::unordered_map.581", %"class.std::__1::unordered_map.555", %"class.std::__1::unordered_map.605", %"class.std::__1::vector.633", i8, %"class.std::__1::unique_ptr.640", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.3", %"class.std::__1::__compressed_pair.10", %"class.std::__1::__compressed_pair.15", %"class.std::__1::__compressed_pair.17", [4 x i8] }>
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5", %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { i64 }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.25", %"struct.std::__1::atomic.25", %"struct.std::__1::atomic.25" }
%"struct.std::__1::atomic.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__cxx_atomic_impl.28" }
%"struct.std::__1::__cxx_atomic_impl.28" = type { %"struct.std::__1::__cxx_atomic_base_impl.29" }
%"struct.std::__1::__cxx_atomic_base_impl.29" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.646", %"class.std::__1::unique_ptr.667", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.677", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.816", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.829", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.839", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.850", %"struct.std::__1::atomic.153", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.925", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.968"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.976", i32, i8, i8, i32, i32, %"class.std::__1::vector.982", %"class.std::__1::vector.982", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.989", i64, %"class.std::__1::unordered_map.990", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.542", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.161", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1046", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1084", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1118", %"class.std::__1::vector.1122", %"class.std::__1::vector.1122", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle.0", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle.0" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.646" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.140", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.647", %"class.std::__1::unique_ptr.661" }
%"class.std::__1::unique_ptr.647" = type { %"class.std::__1::__compressed_pair.648" }
%"class.std::__1::__compressed_pair.648" = type { %"struct.std::__1::__compressed_pair_elem.649" }
%"struct.std::__1::__compressed_pair_elem.649" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.650" }
%"class.std::__1::vector.650" = type { %"class.std::__1::__vector_base.651" }
%"class.std::__1::__vector_base.651" = type { %"class.std::__1::unique_ptr.652"*, %"class.std::__1::unique_ptr.652"*, %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::unique_ptr.652" = type { %"class.std::__1::__compressed_pair.1166" }
%"class.std::__1::__compressed_pair.1166" = type { %"struct.std::__1::__compressed_pair_elem.1167" }
%"struct.std::__1::__compressed_pair_elem.1167" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.std::__1::unique_ptr.652"* }
%"class.std::__1::unique_ptr.661" = type { %"class.std::__1::__compressed_pair.662" }
%"class.std::__1::__compressed_pair.662" = type { %"struct.std::__1::__compressed_pair_elem.663" }
%"struct.std::__1::__compressed_pair_elem.663" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.667" = type { %"class.std::__1::__compressed_pair.668" }
%"class.std::__1::__compressed_pair.668" = type { %"struct.std::__1::__compressed_pair_elem.669" }
%"struct.std::__1::__compressed_pair_elem.669" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.670", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.670" = type { %"struct.std::__1::__atomic_base.671" }
%"struct.std::__1::__atomic_base.671" = type { %"struct.std::__1::__cxx_atomic_impl.672" }
%"struct.std::__1::__cxx_atomic_impl.672" = type { %"struct.std::__1::__cxx_atomic_base_impl.673" }
%"struct.std::__1::__cxx_atomic_base_impl.673" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type { %"class.v8::internal::StringAllocator"*, i32, i32, i32, i8* }
%"class.v8::internal::StringAllocator" = type { i32 (...)** }
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.677" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.678", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.678" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.679", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.679" = type { %"class.std::__1::__vector_base.680" }
%"class.std::__1::__vector_base.680" = type { %"class.std::__1::unique_ptr.681"*, %"class.std::__1::unique_ptr.681"*, %"class.std::__1::__compressed_pair.682" }
%"class.std::__1::unique_ptr.681" = type opaque
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.683" }
%"struct.std::__1::__compressed_pair_elem.683" = type { %"class.std::__1::unique_ptr.681"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.687", %"class.std::__1::unique_ptr.693", %"struct.std::__1::atomic.153", %"class.std::__1::unique_ptr.699", %"class.std::__1::unique_ptr.705", %"class.std::__1::unique_ptr.711", %"class.std::__1::unique_ptr.717", %"class.std::__1::unique_ptr.723", %"class.std::__1::set.729", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.687" = type { %"class.std::__1::__compressed_pair.688" }
%"class.std::__1::__compressed_pair.688" = type { %"struct.std::__1::__compressed_pair_elem.689" }
%"struct.std::__1::__compressed_pair_elem.689" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.693" = type { %"class.std::__1::__compressed_pair.694" }
%"class.std::__1::__compressed_pair.694" = type { %"struct.std::__1::__compressed_pair_elem.695" }
%"struct.std::__1::__compressed_pair_elem.695" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.705" = type { %"class.std::__1::__compressed_pair.706" }
%"class.std::__1::__compressed_pair.706" = type { %"struct.std::__1::__compressed_pair_elem.707" }
%"struct.std::__1::__compressed_pair_elem.707" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.711" = type { %"class.std::__1::__compressed_pair.712" }
%"class.std::__1::__compressed_pair.712" = type { %"struct.std::__1::__compressed_pair_elem.713" }
%"struct.std::__1::__compressed_pair_elem.713" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.717" = type { %"class.std::__1::__compressed_pair.718" }
%"class.std::__1::__compressed_pair.718" = type { %"struct.std::__1::__compressed_pair_elem.719" }
%"struct.std::__1::__compressed_pair_elem.719" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.723" = type { %"class.std::__1::__compressed_pair.724" }
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.725" }
%"struct.std::__1::__compressed_pair_elem.725" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.729" = type { %"class.std::__1::__tree.730" }
%"class.std::__1::__tree.730" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.731", %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.731" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.738" }
%"class.v8::internal::TaggedImpl.738" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.737" }
%"class.v8::internal::TaggedImpl.737" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.745", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.745" = type { %"class.std::__1::__compressed_pair.746" }
%"class.std::__1::__compressed_pair.746" = type { %"struct.std::__1::__compressed_pair_elem.747" }
%"struct.std::__1::__compressed_pair_elem.747" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.751", %"class.v8::internal::DetachableVector.752", %"class.v8::internal::DetachableVector.751", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.752" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.751" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"class.std::__1::unique_ptr.739", %"class.std::__1::unique_ptr.482" }
%"class.std::__1::unique_ptr.739" = type { %"class.std::__1::__compressed_pair.740" }
%"class.std::__1::__compressed_pair.740" = type { %"struct.std::__1::__compressed_pair_elem.741" }
%"struct.std::__1::__compressed_pair_elem.741" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.482" = type { %"class.std::__1::__compressed_pair.483" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.484" }
%"struct.std::__1::__compressed_pair_elem.484" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.485", %"class.std::__1::set.493" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.485" = type { %"class.std::__1::__tree.486" }
%"class.std::__1::__tree.486" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.487", %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.487" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::set.493" = type { %"class.std::__1::__tree.494" }
%"class.std::__1::__tree.494" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.487", %"class.std::__1::__compressed_pair.495" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.753", %"class.std::__1::vector.759", %"class.std::__1::unique_ptr.766", %"class.std::__1::vector.773", %"class.std::__1::unique_ptr.780", i64, %"class.std::__1::vector.786", %"class.std::__1::vector.794", %"class.std::__1::vector.802", i8, i8, i32 }
%"class.std::__1::unique_ptr.753" = type { %"class.std::__1::__compressed_pair.754" }
%"class.std::__1::__compressed_pair.754" = type { %"struct.std::__1::__compressed_pair_elem.755" }
%"struct.std::__1::__compressed_pair_elem.755" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.759" = type { %"class.std::__1::__vector_base.760" }
%"class.std::__1::__vector_base.760" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.761" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.761" = type { %"struct.std::__1::__compressed_pair_elem.762" }
%"struct.std::__1::__compressed_pair_elem.762" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.766" = type { %"class.std::__1::__compressed_pair.767" }
%"class.std::__1::__compressed_pair.767" = type { %"struct.std::__1::__compressed_pair_elem.768" }
%"struct.std::__1::__compressed_pair_elem.768" = type { %"class.v8::internal::GlobalHandles::NodeSpace.769"* }
%"class.v8::internal::GlobalHandles::NodeSpace.769" = type opaque
%"class.std::__1::vector.773" = type { %"class.std::__1::__vector_base.774" }
%"class.std::__1::__vector_base.774" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.775" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.775" = type { %"struct.std::__1::__compressed_pair_elem.776" }
%"struct.std::__1::__compressed_pair_elem.776" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.780" = type { %"class.std::__1::__compressed_pair.781" }
%"class.std::__1::__compressed_pair.781" = type { %"struct.std::__1::__compressed_pair_elem.782" }
%"struct.std::__1::__compressed_pair_elem.782" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.786" = type { %"class.std::__1::__vector_base.787" }
%"class.std::__1::__vector_base.787" = type { %"struct.std::__1::pair.788"*, %"struct.std::__1::pair.788"*, %"class.std::__1::__compressed_pair.789" }
%"struct.std::__1::pair.788" = type opaque
%"class.std::__1::__compressed_pair.789" = type { %"struct.std::__1::__compressed_pair_elem.790" }
%"struct.std::__1::__compressed_pair_elem.790" = type { %"struct.std::__1::pair.788"* }
%"class.std::__1::vector.794" = type { %"class.std::__1::__vector_base.795" }
%"class.std::__1::__vector_base.795" = type { %"struct.std::__1::pair.796"*, %"struct.std::__1::pair.796"*, %"class.std::__1::__compressed_pair.797" }
%"struct.std::__1::pair.796" = type opaque
%"class.std::__1::__compressed_pair.797" = type { %"struct.std::__1::__compressed_pair_elem.798" }
%"struct.std::__1::__compressed_pair_elem.798" = type { %"struct.std::__1::pair.796"* }
%"class.std::__1::vector.802" = type { %"class.std::__1::__vector_base.803" }
%"class.std::__1::__vector_base.803" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.804" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.809", %"class.std::__1::vector.816" }
%"class.std::__1::vector.809" = type { %"class.std::__1::__vector_base.810" }
%"class.std::__1::__vector_base.810" = type { i64**, i64**, %"class.std::__1::__compressed_pair.811" }
%"class.std::__1::__compressed_pair.811" = type { %"struct.std::__1::__compressed_pair_elem.812" }
%"struct.std::__1::__compressed_pair_elem.812" = type { i64** }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.823" }
%"class.std::__1::unique_ptr.823" = type { %"class.std::__1::__compressed_pair.824" }
%"class.std::__1::__compressed_pair.824" = type { %"struct.std::__1::__compressed_pair_elem.825" }
%"struct.std::__1::__compressed_pair_elem.825" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.816" = type { %"class.std::__1::__vector_base.817" }
%"class.std::__1::__vector_base.817" = type { i32*, i32*, %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.819" }
%"struct.std::__1::__compressed_pair_elem.819" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"struct.std::__1::atomic.829" = type { %"struct.std::__1::__atomic_base.830" }
%"struct.std::__1::__atomic_base.830" = type { %"struct.std::__1::__cxx_atomic_impl.831" }
%"struct.std::__1::__cxx_atomic_impl.831" = type { %"struct.std::__1::__cxx_atomic_base_impl.832" }
%"struct.std::__1::__cxx_atomic_base_impl.832" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.839" = type { %"struct.std::__1::__atomic_base.840" }
%"struct.std::__1::__atomic_base.840" = type { %"struct.std::__1::__cxx_atomic_impl.841" }
%"struct.std::__1::__cxx_atomic_impl.841" = type { %"struct.std::__1::__cxx_atomic_base_impl.842" }
%"struct.std::__1::__cxx_atomic_base_impl.842" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.846 }
%union.anon.846 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.850" = type { %"class.std::__1::__hash_table.851" }
%"class.std::__1::__hash_table.851" = type <{ %"class.std::__1::unique_ptr.852", %"class.std::__1::__compressed_pair.862", %"class.std::__1::__compressed_pair.867", %"class.std::__1::__compressed_pair.870", [4 x i8] }>
%"class.std::__1::unique_ptr.852" = type { %"class.std::__1::__compressed_pair.853" }
%"class.std::__1::__compressed_pair.853" = type { %"struct.std::__1::__compressed_pair_elem.854", %"struct.std::__1::__compressed_pair_elem.856" }
%"struct.std::__1::__compressed_pair_elem.854" = type { %"struct.std::__1::__hash_node_base.855"** }
%"struct.std::__1::__hash_node_base.855" = type { %"struct.std::__1::__hash_node_base.855"* }
%"struct.std::__1::__compressed_pair_elem.856" = type { %"class.std::__1::__bucket_list_deallocator.857" }
%"class.std::__1::__bucket_list_deallocator.857" = type { %"class.std::__1::__compressed_pair.858" }
%"class.std::__1::__compressed_pair.858" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"struct.std::__1::__hash_node_base.855" }
%"class.std::__1::__compressed_pair.867" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.870" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::atomic.153" = type { %"struct.std::__1::__atomic_base.154" }
%"struct.std::__1::__atomic_base.154" = type { %"struct.std::__1::__cxx_atomic_impl.155" }
%"struct.std::__1::__cxx_atomic_impl.155" = type { %"struct.std::__1::__cxx_atomic_base_impl.156" }
%"struct.std::__1::__cxx_atomic_base_impl.156" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.876", %"class.v8::internal::Handle.882", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.883", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.876" = type { %"class.std::__1::__compressed_pair.877" }
%"class.std::__1::__compressed_pair.877" = type { %"struct.std::__1::__compressed_pair_elem.878" }
%"struct.std::__1::__compressed_pair_elem.878" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.882" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.883" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.884", %"class.std::__1::vector.890", %"class.std::__1::unique_ptr.898", %"class.std::__1::unique_ptr.904", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.910", %"class.std::__1::vector.916", %"struct.std::__1::pair.924" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::unique_ptr.884" = type { %"class.std::__1::__compressed_pair.885" }
%"class.std::__1::__compressed_pair.885" = type { %"struct.std::__1::__compressed_pair_elem.886" }
%"struct.std::__1::__compressed_pair_elem.886" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.890" = type { %"class.std::__1::__vector_base.891" }
%"class.std::__1::__vector_base.891" = type { %"class.std::__1::unique_ptr.892"*, %"class.std::__1::unique_ptr.892"*, %"class.std::__1::__compressed_pair.893" }
%"class.std::__1::unique_ptr.892" = type opaque
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.894" }
%"struct.std::__1::__compressed_pair_elem.894" = type { %"class.std::__1::unique_ptr.892"* }
%"class.std::__1::unique_ptr.898" = type { %"class.std::__1::__compressed_pair.899" }
%"class.std::__1::__compressed_pair.899" = type { %"struct.std::__1::__compressed_pair_elem.900" }
%"struct.std::__1::__compressed_pair_elem.900" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.904" = type { %"class.std::__1::__compressed_pair.905" }
%"class.std::__1::__compressed_pair.905" = type { %"struct.std::__1::__compressed_pair_elem.906" }
%"struct.std::__1::__compressed_pair_elem.906" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.910" = type { %"class.std::__1::__compressed_pair.911" }
%"class.std::__1::__compressed_pair.911" = type { %"struct.std::__1::__compressed_pair_elem.912" }
%"struct.std::__1::__compressed_pair_elem.912" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.916" = type { %"class.std::__1::__vector_base.917" }
%"class.std::__1::__vector_base.917" = type { %"struct.std::__1::pair.918"*, %"struct.std::__1::pair.918"*, %"class.std::__1::__compressed_pair.919" }
%"struct.std::__1::pair.918" = type opaque
%"class.std::__1::__compressed_pair.919" = type { %"struct.std::__1::__compressed_pair_elem.920" }
%"struct.std::__1::__compressed_pair_elem.920" = type { %"struct.std::__1::pair.918"* }
%"struct.std::__1::pair.924" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.1"*, i16, i8*)*, i8* }
%"class.v8::Local.1" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.928", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.928" = type { %"class.std::__1::__hash_table.929" }
%"class.std::__1::__hash_table.929" = type <{ %"class.std::__1::unique_ptr.930", %"class.std::__1::__compressed_pair.940", %"class.std::__1::__compressed_pair.945", %"class.std::__1::__compressed_pair.949", [4 x i8] }>
%"class.std::__1::unique_ptr.930" = type { %"class.std::__1::__compressed_pair.931" }
%"class.std::__1::__compressed_pair.931" = type { %"struct.std::__1::__compressed_pair_elem.932", %"struct.std::__1::__compressed_pair_elem.934" }
%"struct.std::__1::__compressed_pair_elem.932" = type { %"struct.std::__1::__hash_node_base.933"** }
%"struct.std::__1::__hash_node_base.933" = type { %"struct.std::__1::__hash_node_base.933"* }
%"struct.std::__1::__compressed_pair_elem.934" = type { %"class.std::__1::__bucket_list_deallocator.935" }
%"class.std::__1::__bucket_list_deallocator.935" = type { %"class.std::__1::__compressed_pair.936" }
%"class.std::__1::__compressed_pair.936" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.940" = type { %"struct.std::__1::__compressed_pair_elem.941" }
%"struct.std::__1::__compressed_pair_elem.941" = type { %"struct.std::__1::__hash_node_base.933" }
%"class.std::__1::__compressed_pair.945" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.949" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.963" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.957"**, %"struct.std::__1::pair.957"**, %"struct.std::__1::pair.957"**, %"class.std::__1::__compressed_pair.958" }
%"struct.std::__1::pair.957" = type opaque
%"class.std::__1::__compressed_pair.958" = type { %"struct.std::__1::__compressed_pair_elem.959" }
%"struct.std::__1::__compressed_pair_elem.959" = type { %"struct.std::__1::pair.957"** }
%"class.std::__1::__compressed_pair.963" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.968" = type { %"class.std::__1::__vector_base.969" }
%"class.std::__1::__vector_base.969" = type { %"class.v8::internal::Handle.970"*, %"class.v8::internal::Handle.970"*, %"class.std::__1::__compressed_pair.971" }
%"class.v8::internal::Handle.970" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.971" = type { %"struct.std::__1::__compressed_pair_elem.972" }
%"struct.std::__1::__compressed_pair_elem.972" = type { %"class.v8::internal::Handle.970"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.834", i32, %"class.v8::Local.1" }
%"class.v8::Local.834" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.976" = type { %"class.std::__1::__compressed_pair.977" }
%"class.std::__1::__compressed_pair.977" = type { %"struct.std::__1::__compressed_pair_elem.978" }
%"struct.std::__1::__compressed_pair_elem.978" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.809", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.982" = type { %"class.std::__1::__vector_base.983" }
%"class.std::__1::__vector_base.983" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.984" }
%"class.std::__1::__compressed_pair.984" = type { %"struct.std::__1::__compressed_pair_elem.985" }
%"struct.std::__1::__compressed_pair_elem.985" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.989" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.990" = type { %"class.std::__1::__hash_table.991" }
%"class.std::__1::__hash_table.991" = type <{ %"class.std::__1::unique_ptr.992", %"class.std::__1::__compressed_pair.1002", %"class.std::__1::__compressed_pair.1007", %"class.std::__1::__compressed_pair.1010", [4 x i8] }>
%"class.std::__1::unique_ptr.992" = type { %"class.std::__1::__compressed_pair.993" }
%"class.std::__1::__compressed_pair.993" = type { %"struct.std::__1::__compressed_pair_elem.994", %"struct.std::__1::__compressed_pair_elem.996" }
%"struct.std::__1::__compressed_pair_elem.994" = type { %"struct.std::__1::__hash_node_base.995"** }
%"struct.std::__1::__hash_node_base.995" = type { %"struct.std::__1::__hash_node_base.995"* }
%"struct.std::__1::__compressed_pair_elem.996" = type { %"class.std::__1::__bucket_list_deallocator.997" }
%"class.std::__1::__bucket_list_deallocator.997" = type { %"class.std::__1::__compressed_pair.998" }
%"class.std::__1::__compressed_pair.998" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1002" = type { %"struct.std::__1::__compressed_pair_elem.1003" }
%"struct.std::__1::__compressed_pair_elem.1003" = type { %"struct.std::__1::__hash_node_base.995" }
%"class.std::__1::__compressed_pair.1007" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1010" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.161" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1014", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1043", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1044", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1014" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1039, %union.anon.1041, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1039 = type { i64 }
%union.anon.1041 = type { i64 }
%"class.std::__1::weak_ptr.1043" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.20", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.161" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1044" = type { %"class.v8::PersistentBase.1045" }
%"class.v8::PersistentBase.1045" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1015", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1015" = type { %"class.std::__1::__hash_table.1016" }
%"class.std::__1::__hash_table.1016" = type <{ %"class.std::__1::unique_ptr.1017", %"class.std::__1::__compressed_pair.1027", %"class.std::__1::__compressed_pair.1032", %"class.std::__1::__compressed_pair.1035", [4 x i8] }>
%"class.std::__1::unique_ptr.1017" = type { %"class.std::__1::__compressed_pair.1018" }
%"class.std::__1::__compressed_pair.1018" = type { %"struct.std::__1::__compressed_pair_elem.1019", %"struct.std::__1::__compressed_pair_elem.1021" }
%"struct.std::__1::__compressed_pair_elem.1019" = type { %"struct.std::__1::__hash_node_base.1020"** }
%"struct.std::__1::__hash_node_base.1020" = type { %"struct.std::__1::__hash_node_base.1020"* }
%"struct.std::__1::__compressed_pair_elem.1021" = type { %"class.std::__1::__bucket_list_deallocator.1022" }
%"class.std::__1::__bucket_list_deallocator.1022" = type { %"class.std::__1::__compressed_pair.1023" }
%"class.std::__1::__compressed_pair.1023" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1027" = type { %"struct.std::__1::__compressed_pair_elem.1028" }
%"struct.std::__1::__compressed_pair_elem.1028" = type { %"struct.std::__1::__hash_node_base.1020" }
%"class.std::__1::__compressed_pair.1032" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1035" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1046" = type { %"class.std::__1::__compressed_pair.1047" }
%"class.std::__1::__compressed_pair.1047" = type { %"struct.std::__1::__compressed_pair_elem.1048" }
%"struct.std::__1::__compressed_pair_elem.1048" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1075", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1051", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1055", %"class.std::__1::unique_ptr.1061", %"class.std::__1::unique_ptr.475", %"class.std::__1::vector.1067", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1051" = type { %"struct.std::__1::__atomic_base.1052" }
%"struct.std::__1::__atomic_base.1052" = type { %"struct.std::__1::__cxx_atomic_impl.1053" }
%"struct.std::__1::__cxx_atomic_impl.1053" = type { %"struct.std::__1::__cxx_atomic_base_impl.1054" }
%"struct.std::__1::__cxx_atomic_base_impl.1054" = type { i32 }
%"class.std::__1::unique_ptr.1055" = type { %"class.std::__1::__compressed_pair.1056" }
%"class.std::__1::__compressed_pair.1056" = type { %"struct.std::__1::__compressed_pair_elem.1057" }
%"struct.std::__1::__compressed_pair_elem.1057" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.809" }
%"class.std::__1::unique_ptr.1061" = type { %"class.std::__1::__compressed_pair.1062" }
%"class.std::__1::__compressed_pair.1062" = type { %"struct.std::__1::__compressed_pair_elem.1063" }
%"struct.std::__1::__compressed_pair_elem.1063" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1067" = type { %"class.std::__1::__vector_base.1068" }
%"class.std::__1::__vector_base.1068" = type { %"struct.std::__1::pair.1069"*, %"struct.std::__1::pair.1069"*, %"class.std::__1::__compressed_pair.1070" }
%"struct.std::__1::pair.1069" = type opaque
%"class.std::__1::__compressed_pair.1070" = type { %"struct.std::__1::__compressed_pair_elem.1071" }
%"struct.std::__1::__compressed_pair_elem.1071" = type { %"struct.std::__1::pair.1069"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.20"*, %"class.std::__1::unique_ptr.98" }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.39", %"class.std::__1::vector.39", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.41" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.46" }
%"class.std::__1::__hash_table.46" = type <{ %"class.std::__1::unique_ptr.47", %"class.std::__1::__compressed_pair.57", %"class.std::__1::__compressed_pair.62", %"class.std::__1::__compressed_pair.64", [4 x i8] }>
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49", %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"struct.std::__1::__hash_node_base.50"** }
%"struct.std::__1::__hash_node_base.50" = type { %"struct.std::__1::__hash_node_base.50"* }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.std::__1::__bucket_list_deallocator.52" }
%"class.std::__1::__bucket_list_deallocator.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"struct.std::__1::__hash_node_base.50" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.25", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.87", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.20"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.25", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.25", %"struct.std::__1::atomic.69", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.69" = type { %"struct.std::__1::__atomic_base.70" }
%"struct.std::__1::__atomic_base.70" = type { %"struct.std::__1::__cxx_atomic_impl.71" }
%"struct.std::__1::__cxx_atomic_impl.71" = type { %"struct.std::__1::__cxx_atomic_base_impl.72" }
%"struct.std::__1::__cxx_atomic_base_impl.72" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.73" }
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.75" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.80", %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::atomic.87" = type { %"struct.std::__1::__atomic_base.88" }
%"struct.std::__1::__atomic_base.88" = type { %"struct.std::__1::__cxx_atomic_impl.89" }
%"struct.std::__1::__cxx_atomic_impl.89" = type { %"struct.std::__1::__cxx_atomic_base_impl.90" }
%"struct.std::__1::__cxx_atomic_base_impl.90" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.91", i8, [7 x i8] }>
%"class.std::__1::vector.91" = type { %"class.std::__1::__vector_base.92" }
%"class.std::__1::__vector_base.92" = type { i64*, i64*, %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.20", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1084" = type { %"class.std::__1::__compressed_pair.1085" }
%"class.std::__1::__compressed_pair.1085" = type { %"struct.std::__1::__compressed_pair_elem.1086" }
%"struct.std::__1::__compressed_pair_elem.1086" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.835", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.835" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1092" }
%"class.std::__1::unordered_map.1092" = type { %"class.std::__1::__hash_table.1093" }
%"class.std::__1::__hash_table.1093" = type <{ %"class.std::__1::unique_ptr.1094", %"class.std::__1::__compressed_pair.1104", %"class.std::__1::__compressed_pair.1109", %"class.std::__1::__compressed_pair.1112", [4 x i8] }>
%"class.std::__1::unique_ptr.1094" = type { %"class.std::__1::__compressed_pair.1095" }
%"class.std::__1::__compressed_pair.1095" = type { %"struct.std::__1::__compressed_pair_elem.1096", %"struct.std::__1::__compressed_pair_elem.1098" }
%"struct.std::__1::__compressed_pair_elem.1096" = type { %"struct.std::__1::__hash_node_base.1097"** }
%"struct.std::__1::__hash_node_base.1097" = type { %"struct.std::__1::__hash_node_base.1097"* }
%"struct.std::__1::__compressed_pair_elem.1098" = type { %"class.std::__1::__bucket_list_deallocator.1099" }
%"class.std::__1::__bucket_list_deallocator.1099" = type { %"class.std::__1::__compressed_pair.1100" }
%"class.std::__1::__compressed_pair.1100" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1104" = type { %"struct.std::__1::__compressed_pair_elem.1105" }
%"struct.std::__1::__compressed_pair_elem.1105" = type { %"struct.std::__1::__hash_node_base.1097" }
%"class.std::__1::__compressed_pair.1109" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.1112" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::atomic.1118" = type { %"struct.std::__1::__atomic_base.1119" }
%"struct.std::__1::__atomic_base.1119" = type { %"struct.std::__1::__cxx_atomic_impl.1120" }
%"struct.std::__1::__cxx_atomic_impl.1120" = type { %"struct.std::__1::__cxx_atomic_base_impl.1121" }
%"struct.std::__1::__cxx_atomic_base_impl.1121" = type { %"class.std::__1::vector.1122"* }
%"class.std::__1::vector.1122" = type { %"class.std::__1::__vector_base.1123" }
%"class.std::__1::__vector_base.1123" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1124" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1124" = type { %"struct.std::__1::__compressed_pair_elem.1125" }
%"struct.std::__1::__compressed_pair_elem.1125" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::atomic.30" = type { %"struct.std::__1::__atomic_base.31" }
%"struct.std::__1::__atomic_base.31" = type { %"struct.std::__1::__cxx_atomic_impl.32" }
%"struct.std::__1::__cxx_atomic_impl.32" = type { %"struct.std::__1::__cxx_atomic_base_impl.33" }
%"struct.std::__1::__cxx_atomic_base_impl.33" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.34" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.104" }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.104" = type { %"class.std::__1::__vector_base.105" }
%"class.std::__1::__vector_base.105" = type { %"struct.std::__1::pair.106"*, %"struct.std::__1::pair.106"*, %"class.std::__1::__compressed_pair.107" }
%"struct.std::__1::pair.106" = type { i32, i64 }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"struct.std::__1::pair.106"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.20", i32, %"struct.std::__1::atomic.20", %"class.v8::base::Mutex", %"struct.std::__1::atomic.20" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.112" }
%"class.std::__1::unordered_map.112" = type { %"class.std::__1::__hash_table.113" }
%"class.std::__1::__hash_table.113" = type <{ %"class.std::__1::unique_ptr.114", %"class.std::__1::__compressed_pair.124", %"class.std::__1::__compressed_pair.129", %"class.std::__1::__compressed_pair.134", [4 x i8] }>
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116", %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"struct.std::__1::__hash_node_base.117"** }
%"struct.std::__1::__hash_node_base.117" = type { %"struct.std::__1::__hash_node_base.117"* }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.std::__1::__bucket_list_deallocator.119" }
%"class.std::__1::__bucket_list_deallocator.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"struct.std::__1::__hash_node_base.117" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.153", %"struct.std::__1::atomic.157", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.20" }
%"struct.std::__1::atomic.157" = type { %"struct.std::__1::__atomic_base.158" }
%"struct.std::__1::__atomic_base.158" = type { %"struct.std::__1::__cxx_atomic_impl.159" }
%"struct.std::__1::__cxx_atomic_impl.159" = type { %"struct.std::__1::__cxx_atomic_base_impl.160" }
%"struct.std::__1::__cxx_atomic_base_impl.160" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.162" = type { %"struct.std::__1::__atomic_base.163" }
%"struct.std::__1::__atomic_base.163" = type { %"struct.std::__1::__cxx_atomic_impl.164" }
%"struct.std::__1::__cxx_atomic_impl.164" = type { %"struct.std::__1::__cxx_atomic_base_impl.165" }
%"struct.std::__1::__cxx_atomic_base_impl.165" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.166" = type { %"class.std::__1::__vector_base.167" }
%"class.std::__1::__vector_base.167" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.168" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.227", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.281", %"class.std::__1::vector.281", %"class.std::__1::vector.281", %"class.std::__1::vector.288", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.182", %"class.std::__1::vector.183", %"class.std::__1::vector.190", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.182" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.183" = type { %"class.std::__1::__vector_base.184" }
%"class.std::__1::__vector_base.184" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.185" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.190" = type { %"class.std::__1::__vector_base.191" }
%"class.std::__1::__vector_base.191" = type { %"class.std::__1::unique_ptr.192"*, %"class.std::__1::unique_ptr.192"*, %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::unique_ptr.192" = type opaque
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.std::__1::unique_ptr.192"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.198", %"class.v8::internal::Worklist.200", %"class.v8::internal::Worklist.200", %"class.v8::internal::Worklist.200", %"class.v8::internal::Worklist.202", %"class.v8::internal::Worklist.204", %"class.v8::internal::Worklist.206", %"class.v8::internal::Worklist.208", %"class.v8::internal::Worklist.210", %"class.v8::internal::Worklist.212" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.198" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.200" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.202" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.204" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.206" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.208" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.210" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"class.v8::internal::Worklist.212" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.20" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.214", i8, i64 }
%"class.std::__1::vector.214" = type { %"class.std::__1::__vector_base.215" }
%"class.std::__1::__vector_base.215" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.230" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.182"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.230" = type { %"class.std::__1::__hash_table.231" }
%"class.std::__1::__hash_table.231" = type <{ %"class.std::__1::unique_ptr.232", %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.247", %"class.std::__1::__compressed_pair.250", [4 x i8] }>
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234", %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"struct.std::__1::__hash_node_base.235"** }
%"struct.std::__1::__hash_node_base.235" = type { %"struct.std::__1::__hash_node_base.235"* }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.std::__1::__bucket_list_deallocator.237" }
%"class.std::__1::__bucket_list_deallocator.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"struct.std::__1::__hash_node_base.235" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.257" }
%"class.std::__1::unordered_map.257" = type { %"class.std::__1::__hash_table.258" }
%"class.std::__1::__hash_table.258" = type <{ %"class.std::__1::unique_ptr.259", %"class.std::__1::__compressed_pair.269", %"class.std::__1::__compressed_pair.274", %"class.std::__1::__compressed_pair.277", [4 x i8] }>
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261", %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"struct.std::__1::__hash_node_base.262"** }
%"struct.std::__1::__hash_node_base.262" = type { %"struct.std::__1::__hash_node_base.262"* }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.std::__1::__bucket_list_deallocator.264" }
%"class.std::__1::__bucket_list_deallocator.264" = type { %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"struct.std::__1::__hash_node_base.262" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::vector.281" = type { %"class.std::__1::__vector_base.282" }
%"class.std::__1::__vector_base.282" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.283" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.288" = type { %"class.std::__1::__vector_base.289" }
%"class.std::__1::__vector_base.289" = type { %"struct.std::__1::pair.290"*, %"struct.std::__1::pair.290"*, %"class.std::__1::__compressed_pair.291" }
%"struct.std::__1::pair.290" = type opaque
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"struct.std::__1::pair.290"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.296", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.281"], [3 x %"class.std::__1::vector.281"], i8, %"struct.std::__1::atomic.153", [6 x i8], %"class.std::__1::vector.281", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.296" = type { %"class.std::__1::__compressed_pair.297" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.306"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.281", %"class.std::__1::vector.281", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.306" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.315" = type { %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.321" = type { %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.331", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.324"], %"class.std::__1::unique_ptr.296" }
%"class.std::__1::vector.324" = type { %"class.std::__1::__vector_base.325" }
%"class.std::__1::__vector_base.325" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.360" = type { %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.363", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.367", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.372" }
%"struct.std::__1::atomic.363" = type { %"struct.std::__1::__atomic_base.364" }
%"struct.std::__1::__atomic_base.364" = type { %"struct.std::__1::__cxx_atomic_impl.365" }
%"struct.std::__1::__cxx_atomic_impl.365" = type { %"struct.std::__1::__cxx_atomic_base_impl.366" }
%"struct.std::__1::__cxx_atomic_base_impl.366" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.367" = type { %"struct.std::__1::__atomic_base.368" }
%"struct.std::__1::__atomic_base.368" = type { %"struct.std::__1::__cxx_atomic_impl.369" }
%"struct.std::__1::__cxx_atomic_impl.369" = type { %"struct.std::__1::__cxx_atomic_base_impl.370" }
%"struct.std::__1::__cxx_atomic_base_impl.370" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.372" = type { %"class.std::__1::__hash_table.373" }
%"class.std::__1::__hash_table.373" = type <{ %"class.std::__1::unique_ptr.374", %"class.std::__1::__compressed_pair.384", %"class.std::__1::__compressed_pair.389", %"class.std::__1::__compressed_pair.392", [4 x i8] }>
%"class.std::__1::unique_ptr.374" = type { %"class.std::__1::__compressed_pair.375" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.376", %"struct.std::__1::__compressed_pair_elem.378" }
%"struct.std::__1::__compressed_pair_elem.376" = type { %"struct.std::__1::__hash_node_base.377"** }
%"struct.std::__1::__hash_node_base.377" = type { %"struct.std::__1::__hash_node_base.377"* }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"class.std::__1::__bucket_list_deallocator.379" }
%"class.std::__1::__bucket_list_deallocator.379" = type { %"class.std::__1::__compressed_pair.380" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.385" }
%"struct.std::__1::__compressed_pair_elem.385" = type { %"struct.std::__1::__hash_node_base.377" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.296", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.153", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.402", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.402" = type { %"class.std::__1::__hash_table.403" }
%"class.std::__1::__hash_table.403" = type <{ %"class.std::__1::unique_ptr.404", %"class.std::__1::__compressed_pair.414", %"class.std::__1::__compressed_pair.419", %"class.std::__1::__compressed_pair.422", [4 x i8] }>
%"class.std::__1::unique_ptr.404" = type { %"class.std::__1::__compressed_pair.405" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.406", %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.406" = type { %"struct.std::__1::__hash_node_base.407"** }
%"struct.std::__1::__hash_node_base.407" = type { %"struct.std::__1::__hash_node_base.407"* }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"class.std::__1::__bucket_list_deallocator.409" }
%"class.std::__1::__bucket_list_deallocator.409" = type { %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.415" }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"struct.std::__1::__hash_node_base.407" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unique_ptr.429" = type { %"class.std::__1::__compressed_pair.430" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::__compressed_pair_elem.431" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.435" = type { %"class.std::__1::__compressed_pair.436" }
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem.437" }
%"struct.std::__1::__compressed_pair_elem.437" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.438" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::unique_ptr.445" = type { %"class.std::__1::__compressed_pair.446" }
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.447" }
%"struct.std::__1::__compressed_pair_elem.447" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.451" = type { %"class.std::__1::__compressed_pair.452" }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.453" }
%"struct.std::__1::__compressed_pair_elem.453" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.457" = type { %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.463" = type { %"class.std::__1::__compressed_pair.464" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.469" = type { %"class.std::__1::__compressed_pair.470" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.471" }
%"struct.std::__1::__compressed_pair_elem.471" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.475" = type { %"class.std::__1::__compressed_pair.476" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.477" }
%"struct.std::__1::__compressed_pair_elem.477" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.481" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.500", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.482", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.500" = type { %"struct.std::__1::__atomic_base.501" }
%"struct.std::__1::__atomic_base.501" = type { %"struct.std::__1::__cxx_atomic_impl.502" }
%"struct.std::__1::__cxx_atomic_impl.502" = type { %"struct.std::__1::__cxx_atomic_base_impl.503" }
%"struct.std::__1::__cxx_atomic_base_impl.503" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.504" = type { %"class.std::__1::__hash_table.505" }
%"class.std::__1::__hash_table.505" = type <{ %"class.std::__1::unique_ptr.506", %"class.std::__1::__compressed_pair.516", %"class.std::__1::__compressed_pair.521", %"class.std::__1::__compressed_pair.524", [4 x i8] }>
%"class.std::__1::unique_ptr.506" = type { %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508", %"struct.std::__1::__compressed_pair_elem.510" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"struct.std::__1::__hash_node_base.509"** }
%"struct.std::__1::__hash_node_base.509" = type { %"struct.std::__1::__hash_node_base.509"* }
%"struct.std::__1::__compressed_pair_elem.510" = type { %"class.std::__1::__bucket_list_deallocator.511" }
%"class.std::__1::__bucket_list_deallocator.511" = type { %"class.std::__1::__compressed_pair.512" }
%"class.std::__1::__compressed_pair.512" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.516" = type { %"struct.std::__1::__compressed_pair_elem.517" }
%"struct.std::__1::__compressed_pair_elem.517" = type { %"struct.std::__1::__hash_node_base.509" }
%"class.std::__1::__compressed_pair.521" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unique_ptr.530" = type { %"class.std::__1::__compressed_pair.531" }
%"class.std::__1::__compressed_pair.531" = type { %"struct.std::__1::__compressed_pair_elem.532" }
%"struct.std::__1::__compressed_pair_elem.532" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.536" = type { %"class.std::__1::__compressed_pair.537" }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.538" }
%"struct.std::__1::__compressed_pair_elem.538" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.542", %"class.std::__1::vector.542" }
%"class.std::__1::unique_ptr.549" = type { %"class.std::__1::__compressed_pair.550" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.551" }
%"struct.std::__1::__compressed_pair_elem.551" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set.331" = type { %"class.std::__1::__hash_table.332" }
%"class.std::__1::__hash_table.332" = type <{ %"class.std::__1::unique_ptr.333", %"class.std::__1::__compressed_pair.343", %"class.std::__1::__compressed_pair.348", %"class.std::__1::__compressed_pair.352", [4 x i8] }>
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335", %"struct.std::__1::__compressed_pair_elem.337" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"struct.std::__1::__hash_node_base.336"** }
%"struct.std::__1::__hash_node_base.336" = type { %"struct.std::__1::__hash_node_base.336"* }
%"struct.std::__1::__compressed_pair_elem.337" = type { %"class.std::__1::__bucket_list_deallocator.338" }
%"class.std::__1::__bucket_list_deallocator.338" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %"struct.std::__1::__hash_node_base.336" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unordered_map.581" = type { %"class.std::__1::__hash_table.582" }
%"class.std::__1::__hash_table.582" = type <{ %"class.std::__1::unique_ptr.583", %"class.std::__1::__compressed_pair.593", %"class.std::__1::__compressed_pair.598", %"class.std::__1::__compressed_pair.601", [4 x i8] }>
%"class.std::__1::unique_ptr.583" = type { %"class.std::__1::__compressed_pair.584" }
%"class.std::__1::__compressed_pair.584" = type { %"struct.std::__1::__compressed_pair_elem.585", %"struct.std::__1::__compressed_pair_elem.587" }
%"struct.std::__1::__compressed_pair_elem.585" = type { %"struct.std::__1::__hash_node_base.586"** }
%"struct.std::__1::__hash_node_base.586" = type { %"struct.std::__1::__hash_node_base.586"* }
%"struct.std::__1::__compressed_pair_elem.587" = type { %"class.std::__1::__bucket_list_deallocator.588" }
%"class.std::__1::__bucket_list_deallocator.588" = type { %"class.std::__1::__compressed_pair.589" }
%"class.std::__1::__compressed_pair.589" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.594" }
%"struct.std::__1::__compressed_pair_elem.594" = type { %"struct.std::__1::__hash_node_base.586" }
%"class.std::__1::__compressed_pair.598" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.601" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unordered_map.555" = type { %"class.std::__1::__hash_table.556" }
%"class.std::__1::__hash_table.556" = type <{ %"class.std::__1::unique_ptr.557", %"class.std::__1::__compressed_pair.567", %"class.std::__1::__compressed_pair.572", %"class.std::__1::__compressed_pair.575", [4 x i8] }>
%"class.std::__1::unique_ptr.557" = type { %"class.std::__1::__compressed_pair.558" }
%"class.std::__1::__compressed_pair.558" = type { %"struct.std::__1::__compressed_pair_elem.559", %"struct.std::__1::__compressed_pair_elem.561" }
%"struct.std::__1::__compressed_pair_elem.559" = type { %"struct.std::__1::__hash_node_base.560"** }
%"struct.std::__1::__hash_node_base.560" = type { %"struct.std::__1::__hash_node_base.560"* }
%"struct.std::__1::__compressed_pair_elem.561" = type { %"class.std::__1::__bucket_list_deallocator.562" }
%"class.std::__1::__bucket_list_deallocator.562" = type { %"class.std::__1::__compressed_pair.563" }
%"class.std::__1::__compressed_pair.563" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.567" = type { %"struct.std::__1::__compressed_pair_elem.568" }
%"struct.std::__1::__compressed_pair_elem.568" = type { %"struct.std::__1::__hash_node_base.560" }
%"class.std::__1::__compressed_pair.572" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.575" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::unordered_map.605" = type { %"class.std::__1::__hash_table.606" }
%"class.std::__1::__hash_table.606" = type <{ %"class.std::__1::unique_ptr.607", %"class.std::__1::__compressed_pair.617", %"class.std::__1::__compressed_pair.622", %"class.std::__1::__compressed_pair.627", [4 x i8] }>
%"class.std::__1::unique_ptr.607" = type { %"class.std::__1::__compressed_pair.608" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609", %"struct.std::__1::__compressed_pair_elem.611" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"struct.std::__1::__hash_node_base.610"** }
%"struct.std::__1::__hash_node_base.610" = type { %"struct.std::__1::__hash_node_base.610"* }
%"struct.std::__1::__compressed_pair_elem.611" = type { %"class.std::__1::__bucket_list_deallocator.612" }
%"class.std::__1::__bucket_list_deallocator.612" = type { %"class.std::__1::__compressed_pair.613" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.617" = type { %"struct.std::__1::__compressed_pair_elem.618" }
%"struct.std::__1::__compressed_pair_elem.618" = type { %"struct.std::__1::__hash_node_base.610" }
%"class.std::__1::__compressed_pair.622" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.627" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::vector.633" = type { %"class.std::__1::__vector_base.634" }
%"class.std::__1::__vector_base.634" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.635" }
%"class.std::__1::__compressed_pair.635" = type { %"struct.std::__1::__compressed_pair_elem.636" }
%"struct.std::__1::__compressed_pair_elem.636" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.640" = type { %"class.std::__1::__compressed_pair.641" }
%"class.std::__1::__compressed_pair.641" = type { %"struct.std::__1::__compressed_pair_elem.642" }
%"struct.std::__1::__compressed_pair_elem.642" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"struct.std::__1::atomic.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__cxx_atomic_impl.23" }
%"struct.std::__1::__cxx_atomic_impl.23" = type { %"struct.std::__1::__cxx_atomic_base_impl.24" }
%"struct.std::__1::__cxx_atomic_base_impl.24" = type { i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.20", i64, %"struct.std::__1::atomic.20" }
%"class.std::__1::vector.140" = type { %"class.std::__1::__vector_base.141" }
%"class.std::__1::__vector_base.141" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.142" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.std::__1::vector.542" = type { %"class.std::__1::__vector_base.543" }
%"class.std::__1::__vector_base.543" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.544" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.545" }
%"struct.std::__1::__compressed_pair_elem.545" = type { %"class.v8::internal::Object"* }
%"struct.std::nothrow_t" = type { i8 }
%"class.v8::internal::FlatStringReader" = type { %"class.v8::internal::Relocatable", %"class.v8::internal::Handle.1129", i8, i32, i8* }
%"class.v8::internal::Handle.1129" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::CombinationAssertScope" = type { i8 }
%"class.v8::internal::String::FlatContent" = type { %union.anon.1133, i32, i32, %"class.v8::internal::CombinationAssertScope"* }
%union.anon.1133 = type { i8* }
%"class.v8::internal::Handle<v8::internal::String>::ObjectRef" = type { %"class.v8::internal::String" }
%"class.v8::internal::String" = type { %"class.v8::internal::TorqueGeneratedString" }
%"class.v8::internal::TorqueGeneratedString" = type { %"class.v8::internal::Name" }
%"class.v8::internal::FactoryBase" = type { i8 }
%"class.v8::String::ExternalOneByteStringResource" = type { %"class.v8::String::ExternalStringResourceBase", i8* }
%"class.v8::String::ExternalStringResourceBase" = type { i32 (...)** }
%"class.v8::String::ExternalStringResource" = type { %"class.v8::String::ExternalStringResourceBase", i16* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::internal::FactoryBase.1049" = type { i8 }
%"class.v8::internal::SharedStringAccessGuardIfNeeded" = type { %"class.v8::base::Optional.1136" }
%"class.v8::base::Optional.1136" = type { %"class.v8::base::internal::OptionalBase.1137" }
%"class.v8::base::internal::OptionalBase.1137" = type { %"struct.v8::base::internal::OptionalStorage.1138" }
%"struct.v8::base::internal::OptionalStorage.1138" = type { %"struct.v8::base::internal::OptionalStorageBase.1139" }
%"struct.v8::base::internal::OptionalStorageBase.1139" = type { i8, %union.anon.1140 }
%union.anon.1140 = type { %"class.v8::base::SharedMutexGuard" }
%"class.v8::base::SharedMutexGuard" = type { %"class.v8::base::SharedMutex"* }
%"class.v8::internal::StringShape" = type { i32 }
%"class.v8::internal::StringStream::FmtElm" = type { %union.anon.1188 }
%union.anon.1188 = type { double }
%"class.v8::internal::StringCharacterStream" = type { %"class.v8::internal::ConsStringIterator", i8, %union.anon.1152, i8*, %"class.v8::internal::SharedStringAccessGuardIfNeeded" }
%"class.v8::internal::ConsStringIterator" = type <{ [32 x %"class.v8::internal::ConsString"], %"class.v8::internal::ConsString", i32, i32, i32, [4 x i8] }>
%"class.v8::internal::ConsString" = type { %"class.v8::internal::TorqueGeneratedConsString" }
%"class.v8::internal::TorqueGeneratedConsString" = type { %"class.v8::internal::String" }
%union.anon.1152 = type { i8* }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"struct.v8::internal::AsUC16" = type { i16 }
%"class.v8::Platform" = type { i32 (...)** }
%"class.v8::internal::StringComparator" = type { %"class.v8::internal::StringComparator::State", %"class.v8::internal::StringComparator::State" }
%"class.v8::internal::StringComparator::State" = type { %"class.v8::internal::ConsStringIterator", i8, i32, %union.anon.1162 }
%union.anon.1162 = type { i8* }
%"class.v8::internal::Vector.1134" = type { i8*, i64 }
%"class.v8::internal::Factory" = type { i8 }
%"class.v8::internal::MessageLocation" = type { %"class.v8::internal::Handle.1189", i32, i32, i32, %"class.v8::internal::Handle.1190" }
%"class.v8::internal::Handle.1189" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1190" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::StringSearch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::Vector.1134", i32 (%"class.v8::internal::StringSearch"*, i8*, i64, i32)*, i32, [4 x i8] }>
%"class.v8::internal::StringSearch.1200" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::Vector.1134", i32 (%"class.v8::internal::StringSearch.1200"*, i16*, i64, i32)*, i32, [4 x i8] }>
%"class.v8::internal::StringSearch.1202" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::Vector.1135", i32 (%"class.v8::internal::StringSearch.1202"*, i8*, i64, i32)*, i32, [4 x i8] }>
%"class.v8::internal::Vector.1135" = type { i16*, i64 }
%"class.v8::internal::StringSearch.1205" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::Vector.1135", i32 (%"class.v8::internal::StringSearch.1205"*, i16*, i64, i32)*, i32, [4 x i8] }>
%"class.v8::internal::String::Match" = type { i32 (...)** }
%"class.v8::internal::IncrementalStringBuilder" = type { %"class.v8::internal::Isolate"*, i32, i8, i32, i32, %"class.v8::internal::Handle.1129", %"class.v8::internal::Handle.1129" }
%"class.v8::internal::SeqOneByteString" = type { %"class.v8::internal::TorqueGeneratedSeqOneByteString" }
%"class.v8::internal::TorqueGeneratedSeqOneByteString" = type { %"class.v8::internal::SeqString" }
%"class.v8::internal::SeqString" = type { %"class.v8::internal::TorqueGeneratedSeqString" }
%"class.v8::internal::TorqueGeneratedSeqString" = type { %"class.v8::internal::String" }
%"class.v8::internal::SeqTwoByteString" = type { %"class.v8::internal::TorqueGeneratedSeqTwoByteString" }
%"class.v8::internal::TorqueGeneratedSeqTwoByteString" = type { %"class.v8::internal::SeqString" }
%"class.v8::internal::ThinString" = type { %"class.v8::internal::TorqueGeneratedThinString" }
%"class.v8::internal::TorqueGeneratedThinString" = type { %"class.v8::internal::String" }
%"class.v8::internal::SlicedString" = type { %"class.v8::internal::TorqueGeneratedSlicedString" }
%"class.v8::internal::TorqueGeneratedSlicedString" = type { %"class.v8::internal::String" }
%"class.v8::internal::ExternalString" = type { %"class.v8::internal::String" }
%"class.v8::internal::RootVisitor" = type { i32 (...)** }

$_ZN2v88internal6String17CalculateLineEndsINS0_7IsolateEEENS0_6HandleINS0_10FixedArrayEEEPT_NS4_IS1_EEb = comdat any

$_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE = comdat any

$_ZN2v88internal6String17CalculateLineEndsINS0_12LocalIsolateEEENS0_6HandleINS0_10FixedArrayEEEPT_NS4_IS1_EEb = comdat any

$_ZN2v88internal6String11WriteToFlatItEEvS1_PT_ii = comdat any

$_ZN2v88internal6String11WriteToFlatItEEvS1_PT_iiRKNS0_31SharedStringAccessGuardIfNeededE = comdat any

$_ZN2v88internal6String11WriteToFlatIhEEvS1_PT_ii = comdat any

$_ZN2v88internal6String11WriteToFlatIhEEvS1_PT_iiRKNS0_31SharedStringAccessGuardIfNeededE = comdat any

$_ZN2v88internal9CopyCharsIhtEEvPT0_PKT_m = comdat any

$_ZN2v88internal9CopyCharsIthEEvPT0_PKT_m = comdat any

$_ZN2v88internal21StringCharacterStreamC2ENS0_6StringEi = comdat any

$_ZN2v88internal13StringToIndexINS0_21StringCharacterStreamEjLNS0_11ToIndexModeE0EEEbPT_PT0_ = comdat any

$_ZN2v88internal13StringToIndexINS0_21StringCharacterStreamEmLNS0_11ToIndexModeE1EEEbPT_PT0_ = comdat any

$_ZN2v88internal11RelocatableD2Ev = comdat any

$_ZN2v88internal16FlatStringReaderD0Ev = comdat any

$_ZN2v88internal11Relocatable15IterateInstanceEPNS0_11RootVisitorE = comdat any

$_ZN2v88internal11StringShape33DispatchToSpecificTypeWithoutCastIZNS1_22DispatchToSpecificTypeIZNKS0_6String7GetImplEiE19StringGetDispatchertJRiEEET0_S4_DpOT1_E17CastingDispatchertJRS4_S6_EEES7_SA_ = comdat any

$_ZN2v88internal6String9VisitFlatINS0_21StringCharacterStreamEEENS0_10ConsStringEPT_S1_iRKNS0_31SharedStringAccessGuardIfNeededE = comdat any

$_ZN2v88internal11RelocatableD0Ev = comdat any

$_ZN2v88internal11Relocatable21PostGarbageCollectionEv = comdat any

$_ZN2v88internal12StringSearchIhhE16SingleCharSearchEPS2_NS0_6VectorIKhEEi = comdat any

$_ZN2v88internal12StringSearchIhhE12LinearSearchEPS2_NS0_6VectorIKhEEi = comdat any

$_ZN2v88internal12StringSearchIhhE13InitialSearchEPS2_NS0_6VectorIKhEEi = comdat any

$_ZN2v88internal12StringSearchIhhE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKhEEi = comdat any

$_ZN2v88internal12StringSearchIhhE23PopulateBoyerMooreTableEv = comdat any

$_ZN2v88internal12StringSearchIhhE16BoyerMooreSearchEPS2_NS0_6VectorIKhEEi = comdat any

$_ZN2v88internal12StringSearchIhtE16SingleCharSearchEPS2_NS0_6VectorIKtEEi = comdat any

$_ZN2v88internal12StringSearchIhtE12LinearSearchEPS2_NS0_6VectorIKtEEi = comdat any

$_ZN2v88internal12StringSearchIhtE13InitialSearchEPS2_NS0_6VectorIKtEEi = comdat any

$_ZN2v88internal12StringSearchIhtE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKtEEi = comdat any

$_ZN2v88internal12StringSearchIhtE23PopulateBoyerMooreTableEv = comdat any

$_ZN2v88internal12StringSearchIhtE16BoyerMooreSearchEPS2_NS0_6VectorIKtEEi = comdat any

$_ZN2v88internal12StringSearchIthE10FailSearchEPS2_NS0_6VectorIKhEEi = comdat any

$_ZN2v88internal12StringSearchIthE16SingleCharSearchEPS2_NS0_6VectorIKhEEi = comdat any

$_ZN2v88internal12StringSearchIthE12LinearSearchEPS2_NS0_6VectorIKhEEi = comdat any

$_ZN2v88internal12StringSearchIthE13InitialSearchEPS2_NS0_6VectorIKhEEi = comdat any

$_ZN2v88internal12StringSearchIthE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKhEEi = comdat any

$_ZN2v88internal12StringSearchIthE23PopulateBoyerMooreTableEv = comdat any

$_ZN2v88internal12StringSearchIthE16BoyerMooreSearchEPS2_NS0_6VectorIKhEEi = comdat any

$_ZN2v88internal12StringSearchIttE16SingleCharSearchEPS2_NS0_6VectorIKtEEi = comdat any

$_ZN2v88internal12StringSearchIttE12LinearSearchEPS2_NS0_6VectorIKtEEi = comdat any

$_ZN2v88internal12StringSearchIttE13InitialSearchEPS2_NS0_6VectorIKtEEi = comdat any

$_ZN2v88internal12StringSearchIttE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKtEEi = comdat any

$_ZN2v88internal12StringSearchIttE23PopulateBoyerMooreTableEv = comdat any

$_ZN2v88internal12StringSearchIttE16BoyerMooreSearchEPS2_NS0_6VectorIKtEEi = comdat any

$_ZN2v88internal6String23IsConsStringEqualToImplIcEEbNS0_10ConsStringEiNS0_6VectorIKT_EENS0_16PtrComprCageBaseERKNS0_31SharedStringAccessGuardIfNeededE = comdat any

$_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im = comdat any

$_ZN2v88internal12StringHasher20HashSequentialStringItEEjPKT_im = comdat any

$_ZTVN2v88internal11RelocatableE = comdat any

@.str = private unnamed_addr constant [3 x i8] c"u#\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"uc\22\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"u>\22\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"ue\22\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"u\22\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"#\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"c\22\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c">\22\00", align 1
@.str.8 = private unnamed_addr constant [3 x i8] c"e\22\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.10 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.11 = private unnamed_addr constant [17 x i8] c"<Invalid String>\00", align 1
@.str.12 = private unnamed_addr constant [14 x i8] c"<String[%u]: \00", align 1
@.str.13 = private unnamed_addr constant [16 x i8] c"...<truncated>>\00", align 1
@.str.14 = private unnamed_addr constant [3 x i8] c"\5Cn\00", align 1
@.str.15 = private unnamed_addr constant [3 x i8] c"\5Cr\00", align 1
@.str.16 = private unnamed_addr constant [3 x i8] c"\5C\5C\00", align 1
@.str.17 = private unnamed_addr constant [7 x i8] c"\5Cx%02x\00", align 1
@.str.18 = private unnamed_addr constant [25 x i8] c"String.prototype.indexOf\00", align 1
@.str.19 = private unnamed_addr constant [29 x i8] c"String.prototype.lastIndexOf\00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@_ZTVN2v88internal16FlatStringReaderE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::Relocatable"*)* @_ZN2v88internal11RelocatableD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::FlatStringReader"*)* @_ZN2v88internal16FlatStringReaderD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::Relocatable"*, %"class.v8::internal::RootVisitor"*)* @_ZN2v88internal11Relocatable15IterateInstanceEPNS0_11RootVisitorE to i8*), i8* bitcast (void (%"class.v8::internal::FlatStringReader"*)* @_ZN2v88internal16FlatStringReader21PostGarbageCollectionEv to i8*)] }, align 8
@.str.21 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.22 = private unnamed_addr constant [17 x i8] c"0 <= start_index\00", align 1
@.str.23 = private unnamed_addr constant [32 x i8] c"start_index <= subject.length()\00", align 1
@.str.24 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@.str.26 = private unnamed_addr constant [23 x i8] c"(location_) != nullptr\00", align 1
@_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E = external local_unnamed_addr global %"class.v8::internal::SoleReadOnlyHeap"*, align 8
@_ZTVN2v88internal11RelocatableE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::Relocatable"*)* @_ZN2v88internal11RelocatableD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::Relocatable"*)* @_ZN2v88internal11RelocatableD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::Relocatable"*, %"class.v8::internal::RootVisitor"*)* @_ZN2v88internal11Relocatable15IterateInstanceEPNS0_11RootVisitorE to i8*), i8* bitcast (void (%"class.v8::internal::Relocatable"*)* @_ZN2v88internal11Relocatable21PostGarbageCollectionEv to i8*)] }, comdat, align 8
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1
@.str.27 = private unnamed_addr constant [9 x i8] c"NewArray\00", align 1
@_ZN2v88internalL17kOneByteCharFlagsE = internal unnamed_addr constant [256 x i8] c"\00\00\00\00\00\00\00\00\00\0C\18\0C\0C\18\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0C\00\00\00\03\00\00\00\10\10\00\00\00\00\00\00\02\02\02\02\02\02\02\02\02\02\00\00\00\00\00\00\00\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\00\03\00\00\03\00\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0C\00\00\00\00\00\00\00\00\00\03\00\00\00\00\00\00\00\00\00\00\03\00\02\00\00\03\00\00\00\00\00\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\00\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\00\03\03\03\03\03\03\03\03", align 16

@_ZN2v88internal16FlatStringReaderC1EPNS0_7IsolateENS0_6HandleINS0_6StringEEE = hidden unnamed_addr alias void (%"class.v8::internal::FlatStringReader"*, %"class.v8::internal::Isolate"*, i64*), void (%"class.v8::internal::FlatStringReader"*, %"class.v8::internal::Isolate"*, i64*)* @_ZN2v88internal16FlatStringReaderC2EPNS0_7IsolateENS0_6HandleINS0_6StringEEE

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal6String17CalculateLineEndsINS0_7IsolateEEENS0_6HandleINS0_10FixedArrayEEEPT_NS4_IS1_EEb(%"class.v8::internal::Isolate"*, i64*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::vector.816", align 16
  %5 = alloca %"class.v8::internal::CombinationAssertScope", align 1
  %6 = alloca %"class.v8::internal::String::FlatContent", align 8
  %7 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %8 = tail call i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %0, i64* %1, i8 zeroext 0)
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, 7
  %11 = inttoptr i64 %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = ashr i32 %12, 4
  %14 = bitcast %"class.std::__1::vector.816"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 0, i64 24, i1 false) #7
  %15 = sext i32 %13 to i64
  %16 = getelementptr inbounds %"class.std::__1::vector.816", %"class.std::__1::vector.816"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast i32** %16 to i64*
  %18 = bitcast %"class.std::__1::vector.816"* %4 to i64*
  %19 = icmp eq i32 %13, 0
  br i1 %19, label %33, label %20

20:                                               ; preds = %3
  %21 = icmp slt i32 %12, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %20
  tail call void @abort() #18
  unreachable

23:                                               ; preds = %20
  %24 = shl nsw i64 %15, 2
  %25 = tail call i8* @_Znwm(i64 %24) #19
  %26 = bitcast i8* %25 to i32*
  %27 = getelementptr inbounds i32, i32* %26, i64 %15
  %28 = ptrtoint i32* %27 to i64
  %29 = insertelement <2 x i8*> undef, i8* %25, i32 0
  %30 = shufflevector <2 x i8*> %29, <2 x i8*> undef, <2 x i32> zeroinitializer
  %31 = ptrtoint <2 x i8*> %30 to <2 x i64>
  %32 = bitcast %"class.std::__1::vector.816"* %4 to <2 x i64>*
  store <2 x i64> %31, <2 x i64>* %32, align 16
  store i64 %28, i64* %17, align 16
  br label %33

33:                                               ; preds = %23, %3
  %34 = getelementptr inbounds %"class.v8::internal::CombinationAssertScope", %"class.v8::internal::CombinationAssertScope"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %34) #7
  %35 = bitcast %"class.v8::internal::String::FlatContent"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #7
  %36 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #7
  %37 = load i64, i64* %8, align 8
  %38 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %7, i64 0, i32 0
  call void @_ZN2v88internal6String14GetFlatContentERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENS3_ILS4_1ELb0EEEEEE(%"class.v8::internal::String::FlatContent"* nonnull sret %6, %"class.v8::internal::String"* nonnull %39, %"class.v8::internal::CombinationAssertScope"* nonnull dereferenceable(1) %5)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #7
  %40 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %6, i64 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %49

43:                                               ; preds = %33
  %44 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %6, i64 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %6, i64 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = sext i32 %47 to i64
  call fastcc void @_ZN2v88internalL21CalculateLineEndsImplIhEEvPNSt3__16vectorIiNS2_9allocatorIiEEEENS0_6VectorIKT_EEb(%"class.std::__1::vector.816"* nonnull %4, i8* %45, i64 %48, i1 zeroext %2)
  br label %55

49:                                               ; preds = %33
  %50 = bitcast %"class.v8::internal::String::FlatContent"* %6 to i16**
  %51 = load i16*, i16** %50, align 8
  %52 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %6, i64 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = sext i32 %53 to i64
  call fastcc void @_ZN2v88internalL21CalculateLineEndsImplItEEvPNSt3__16vectorIiNS2_9allocatorIiEEEENS0_6VectorIKT_EEb(%"class.std::__1::vector.816"* nonnull %4, i16* %51, i64 %54, i1 zeroext %2)
  br label %55

55:                                               ; preds = %49, %43
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #7
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %34) #7
  %56 = getelementptr inbounds %"class.std::__1::vector.816", %"class.std::__1::vector.816"* %4, i64 0, i32 0, i32 1
  %57 = bitcast i32** %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = load i64, i64* %18, align 16
  %60 = sub i64 %58, %59
  %61 = lshr exact i64 %60, 2
  %62 = trunc i64 %61 to i32
  %63 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %64 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %63, i32 %62, i8 zeroext 1) #7
  %65 = icmp sgt i32 %62, 0
  br i1 %65, label %66, label %88

66:                                               ; preds = %55
  %67 = getelementptr inbounds %"class.std::__1::vector.816", %"class.std::__1::vector.816"* %4, i64 0, i32 0, i32 0
  %68 = and i64 %61, 4294967295
  %69 = and i64 %61, 1
  %70 = icmp eq i64 %68, 1
  br i1 %70, label %73, label %71

71:                                               ; preds = %66
  %72 = sub nsw i64 %68, %69
  br label %96

73:                                               ; preds = %96, %66
  %74 = phi i64 [ 0, %66 ], [ %122, %96 ]
  %75 = icmp eq i64 %69, 0
  br i1 %75, label %88, label %76

76:                                               ; preds = %73
  %77 = load i64, i64* %64, align 8
  %78 = load i32*, i32** %67, align 16
  %79 = getelementptr inbounds i32, i32* %78, i64 %74
  %80 = load i32, i32* %79, align 4
  %81 = shl i32 %80, 1
  %82 = trunc i64 %74 to i32
  %83 = shl i32 %82, 2
  %84 = sext i32 %83 to i64
  %85 = add nsw i64 %84, 7
  %86 = add i64 %85, %77
  %87 = inttoptr i64 %86 to i32*
  store atomic volatile i32 %81, i32* %87 monotonic, align 4
  br label %88

88:                                               ; preds = %76, %73, %55
  %89 = getelementptr inbounds %"class.std::__1::vector.816", %"class.std::__1::vector.816"* %4, i64 0, i32 0, i32 0
  %90 = load i32*, i32** %89, align 16
  %91 = icmp eq i32* %90, null
  br i1 %91, label %95, label %92

92:                                               ; preds = %88
  %93 = ptrtoint i32* %90 to i64
  store i64 %93, i64* %57, align 8
  %94 = bitcast i32* %90 to i8*
  call void @_ZdlPv(i8* %94) #19
  br label %95

95:                                               ; preds = %88, %92
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #7
  ret i64* %64

96:                                               ; preds = %96, %71
  %97 = phi i64 [ 0, %71 ], [ %122, %96 ]
  %98 = phi i64 [ %72, %71 ], [ %123, %96 ]
  %99 = load i64, i64* %64, align 8
  %100 = load i32*, i32** %67, align 16
  %101 = getelementptr inbounds i32, i32* %100, i64 %97
  %102 = load i32, i32* %101, align 4
  %103 = shl i32 %102, 1
  %104 = trunc i64 %97 to i32
  %105 = shl i32 %104, 2
  %106 = or i32 %105, 7
  %107 = sext i32 %106 to i64
  %108 = add i64 %99, %107
  %109 = inttoptr i64 %108 to i32*
  store atomic volatile i32 %103, i32* %109 monotonic, align 4
  %110 = or i64 %97, 1
  %111 = load i64, i64* %64, align 8
  %112 = load i32*, i32** %67, align 16
  %113 = getelementptr inbounds i32, i32* %112, i64 %110
  %114 = load i32, i32* %113, align 4
  %115 = shl i32 %114, 1
  %116 = trunc i64 %110 to i32
  %117 = shl i32 %116, 2
  %118 = sext i32 %117 to i64
  %119 = add nsw i64 %118, 7
  %120 = add i64 %119, %111
  %121 = inttoptr i64 %120 to i32*
  store atomic volatile i32 %115, i32* %121 monotonic, align 4
  %122 = add nuw nsw i64 %97, 2
  %123 = add i64 %98, -2
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %73, label %96
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"*, i64*, i8 zeroext) local_unnamed_addr #2 comdat align 2 {
  %4 = load i64, i64* %1, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, 7
  %12 = inttoptr i64 %11 to i16*
  %13 = load atomic i16, i16* %12 monotonic, align 2
  %14 = icmp ult i16 %13, 64
  br i1 %14, label %15, label %72

15:                                               ; preds = %3
  %16 = load atomic i32, i32* %7 monotonic, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %5, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = and i16 %21, 7
  %23 = icmp eq i16 %22, 1
  br i1 %23, label %24, label %72

24:                                               ; preds = %15
  %25 = load atomic i32, i32* %7 acquire, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %5, %26
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = and i16 %30, 7
  %32 = icmp eq i16 %31, 1
  br i1 %32, label %33, label %43

33:                                               ; preds = %24
  %34 = add i64 %4, 15
  %35 = inttoptr i64 %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = or i64 %5, %37
  %39 = add i64 %38, 7
  %40 = inttoptr i64 %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %70

43:                                               ; preds = %24, %33
  %44 = load i64, i64* %1, align 8
  %45 = and i64 %44, -4294967296
  %46 = add i64 %44, 11
  %47 = inttoptr i64 %46 to i32*
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i64
  %50 = or i64 %45, %49
  %51 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %52 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %51, align 8
  %53 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %43
  %55 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %52, i64 %50) #7
  %56 = load i64, i64* %55, align 8
  br label %72

57:                                               ; preds = %43
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %59 = load i64*, i64** %58, align 8
  %60 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %61 = load i64*, i64** %60, align 8
  %62 = icmp eq i64* %59, %61
  br i1 %62, label %63, label %65

63:                                               ; preds = %57
  %64 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #7
  br label %65

65:                                               ; preds = %63, %57
  %66 = phi i64* [ %64, %63 ], [ %59, %57 ]
  %67 = ptrtoint i64* %66 to i64
  %68 = add i64 %67, 8
  %69 = inttoptr i64 %68 to i64*
  store i64* %69, i64** %58, align 8
  store i64 %50, i64* %66, align 8
  br label %72

70:                                               ; preds = %33
  %71 = tail call i64* @_ZN2v88internal6String11SlowFlattenEPNS0_7IsolateENS0_6HandleINS0_10ConsStringEEENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %0, i64* %1, i8 zeroext %2)
  br label %118

72:                                               ; preds = %65, %54, %3, %15
  %73 = phi i64 [ %4, %15 ], [ %4, %3 ], [ %50, %65 ], [ %56, %54 ]
  %74 = phi i64* [ %1, %15 ], [ %1, %3 ], [ %66, %65 ], [ %55, %54 ]
  %75 = and i64 %73, -4294967296
  %76 = add i64 %73, -1
  %77 = inttoptr i64 %76 to i32*
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = zext i32 %78 to i64
  %80 = or i64 %75, %79
  %81 = add i64 %80, 7
  %82 = inttoptr i64 %81 to i16*
  %83 = load atomic i16, i16* %82 monotonic, align 2
  %84 = icmp ult i16 %83, 64
  br i1 %84, label %85, label %118

85:                                               ; preds = %72
  %86 = load atomic i32, i32* %77 monotonic, align 4
  %87 = zext i32 %86 to i64
  %88 = or i64 %75, %87
  %89 = add i64 %88, 7
  %90 = inttoptr i64 %89 to i16*
  %91 = load atomic i16, i16* %90 monotonic, align 2
  %92 = and i16 %91, 7
  %93 = icmp eq i16 %92, 5
  br i1 %93, label %94, label %118

94:                                               ; preds = %85
  %95 = add i64 %73, 11
  %96 = inttoptr i64 %95 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = zext i32 %97 to i64
  %99 = or i64 %75, %98
  %100 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %101 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %100, align 8
  %102 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %101, null
  br i1 %102, label %105, label %103

103:                                              ; preds = %94
  %104 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %101, i64 %99) #7
  br label %118

105:                                              ; preds = %94
  %106 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %107 = load i64*, i64** %106, align 8
  %108 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %109 = load i64*, i64** %108, align 8
  %110 = icmp eq i64* %107, %109
  br i1 %110, label %111, label %113

111:                                              ; preds = %105
  %112 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #7
  br label %113

113:                                              ; preds = %111, %105
  %114 = phi i64* [ %112, %111 ], [ %107, %105 ]
  %115 = ptrtoint i64* %114 to i64
  %116 = add i64 %115, 8
  %117 = inttoptr i64 %116 to i64*
  store i64* %117, i64** %106, align 8
  store i64 %99, i64* %114, align 8
  br label %118

118:                                              ; preds = %72, %85, %103, %113, %70
  %119 = phi i64* [ %71, %70 ], [ %74, %85 ], [ %104, %103 ], [ %114, %113 ], [ %74, %72 ]
  ret i64* %119
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal6String14GetFlatContentERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENS3_ILS4_1ELb0EEEEEE(%"class.v8::internal::String::FlatContent"* noalias nocapture sret, %"class.v8::internal::String"* nocapture readonly, %"class.v8::internal::CombinationAssertScope"* dereferenceable(1)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 7
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = add i64 %5, -1
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 acquire, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %9, %13
  %15 = add i64 %14, 7
  %16 = inttoptr i64 %15 to i16*
  %17 = load atomic i16, i16* %16 monotonic, align 2
  %18 = zext i16 %17 to i32
  %19 = load i64, i64* %4, align 8
  %20 = and i32 %18, 7
  switch i32 %20, label %70 [
    i32 1, label %21
    i32 3, label %49
  ]

21:                                               ; preds = %3
  %22 = and i64 %19, -4294967296
  %23 = add i64 %19, 15
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %22, %26
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %47

32:                                               ; preds = %21
  %33 = add i64 %19, 11
  %34 = inttoptr i64 %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i64
  %37 = or i64 %22, %36
  %38 = add i64 %37, -1
  %39 = inttoptr i64 %38 to i32*
  %40 = load atomic i32, i32* %39 acquire, align 4
  %41 = zext i32 %40 to i64
  %42 = or i64 %22, %41
  %43 = add i64 %42, 7
  %44 = inttoptr i64 %43 to i16*
  %45 = load atomic i16, i16* %44 monotonic, align 2
  %46 = zext i16 %45 to i32
  br label %70

47:                                               ; preds = %21
  %48 = bitcast %"class.v8::internal::String::FlatContent"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 16, i1 false) #7
  br label %185

49:                                               ; preds = %3
  %50 = add i64 %19, 15
  %51 = inttoptr i64 %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = ashr i32 %52, 1
  %54 = and i64 %19, -4294967296
  %55 = add i64 %19, 11
  %56 = inttoptr i64 %55 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i64
  %59 = or i64 %54, %58
  %60 = add i64 %59, -1
  %61 = inttoptr i64 %60 to i32*
  %62 = load atomic i32, i32* %61 acquire, align 4
  %63 = zext i32 %62 to i64
  %64 = or i64 %54, %63
  %65 = add i64 %64, 7
  %66 = inttoptr i64 %65 to i16*
  %67 = load atomic i16, i16* %66 monotonic, align 2
  %68 = zext i16 %67 to i32
  %69 = sext i32 %53 to i64
  br label %70

70:                                               ; preds = %3, %32, %49
  %71 = phi i32 [ %68, %49 ], [ %46, %32 ], [ %18, %3 ]
  %72 = phi i64 [ %69, %49 ], [ 0, %32 ], [ 0, %3 ]
  %73 = phi i64 [ %59, %49 ], [ %37, %32 ], [ %19, %3 ]
  %74 = and i32 %71, 7
  %75 = icmp eq i32 %74, 5
  br i1 %75, label %76, label %92

76:                                               ; preds = %70
  %77 = and i64 %73, -4294967296
  %78 = add i64 %73, 11
  %79 = inttoptr i64 %78 to i32*
  %80 = load i32, i32* %79, align 4
  %81 = zext i32 %80 to i64
  %82 = or i64 %77, %81
  %83 = add i64 %82, -1
  %84 = inttoptr i64 %83 to i32*
  %85 = load atomic i32, i32* %84 acquire, align 4
  %86 = zext i32 %85 to i64
  %87 = or i64 %77, %86
  %88 = add i64 %87, 7
  %89 = inttoptr i64 %88 to i16*
  %90 = load atomic i16, i16* %89 monotonic, align 2
  %91 = zext i16 %90 to i32
  br label %92

92:                                               ; preds = %76, %70
  %93 = phi i32 [ %91, %76 ], [ %71, %70 ]
  %94 = phi i64 [ %82, %76 ], [ %73, %70 ]
  %95 = and i32 %93, 8
  %96 = icmp eq i32 %95, 0
  %97 = and i32 %93, 7
  %98 = icmp eq i32 %97, 0
  br i1 %96, label %142, label %99

99:                                               ; preds = %92
  br i1 %98, label %100, label %103

100:                                              ; preds = %99
  %101 = add i64 %94, 11
  %102 = inttoptr i64 %101 to i8*
  br label %136

103:                                              ; preds = %99
  %104 = and i64 %94, -4294967296
  %105 = add i64 %94, -1
  %106 = inttoptr i64 %105 to i32*
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = zext i32 %107 to i64
  %109 = or i64 %104, %108
  %110 = add i64 %109, 7
  %111 = inttoptr i64 %110 to i16*
  %112 = load atomic i16, i16* %111 monotonic, align 2
  %113 = and i16 %112, 16
  %114 = icmp eq i16 %113, 0
  %115 = add i64 %94, 11
  %116 = inttoptr i64 %115 to %"class.v8::String::ExternalOneByteStringResource"**
  br i1 %114, label %129, label %117

117:                                              ; preds = %103
  %118 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %116, align 1
  %119 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %118, i64 0, i32 0
  %120 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %118 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %121 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %120, align 8
  %122 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %121, i64 2
  %123 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %122, align 8
  %124 = tail call zeroext i1 %123(%"class.v8::String::ExternalStringResourceBase"* %119) #7
  br i1 %124, label %125, label %129

125:                                              ; preds = %117
  %126 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %116, align 1
  tail call void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"* %126) #7
  %127 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %126, i64 0, i32 1
  %128 = load i8*, i8** %127, align 8
  br label %136

129:                                              ; preds = %103, %117
  %130 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %116, align 1
  %131 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %130 to i8* (%"class.v8::String::ExternalOneByteStringResource"*)***
  %132 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)**, i8* (%"class.v8::String::ExternalOneByteStringResource"*)*** %131, align 8
  %133 = getelementptr inbounds i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %132, i64 6
  %134 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %133, align 8
  %135 = tail call i8* %134(%"class.v8::String::ExternalOneByteStringResource"* %130) #7
  br label %136

136:                                              ; preds = %129, %125, %100
  %137 = phi i8* [ %102, %100 ], [ %128, %125 ], [ %135, %129 ]
  %138 = getelementptr inbounds i8, i8* %137, i64 %72
  %139 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %0, i64 0, i32 0, i32 0
  store i8* %138, i8** %139, align 8
  %140 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %0, i64 0, i32 1
  store i32 %8, i32* %140, align 8
  %141 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %0, i64 0, i32 2
  store i32 1, i32* %141, align 4
  br label %185

142:                                              ; preds = %92
  br i1 %98, label %143, label %146

143:                                              ; preds = %142
  %144 = add i64 %94, 11
  %145 = inttoptr i64 %144 to i16*
  br label %179

146:                                              ; preds = %142
  %147 = and i64 %94, -4294967296
  %148 = add i64 %94, -1
  %149 = inttoptr i64 %148 to i32*
  %150 = load atomic i32, i32* %149 monotonic, align 4
  %151 = zext i32 %150 to i64
  %152 = or i64 %147, %151
  %153 = add i64 %152, 7
  %154 = inttoptr i64 %153 to i16*
  %155 = load atomic i16, i16* %154 monotonic, align 2
  %156 = and i16 %155, 16
  %157 = icmp eq i16 %156, 0
  %158 = add i64 %94, 11
  %159 = inttoptr i64 %158 to %"class.v8::String::ExternalStringResource"**
  br i1 %157, label %172, label %160

160:                                              ; preds = %146
  %161 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %159, align 1
  %162 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %161, i64 0, i32 0
  %163 = bitcast %"class.v8::String::ExternalStringResource"* %161 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %164 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %163, align 8
  %165 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %164, i64 2
  %166 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %165, align 8
  %167 = tail call zeroext i1 %166(%"class.v8::String::ExternalStringResourceBase"* %162) #7
  br i1 %167, label %168, label %172

168:                                              ; preds = %160
  %169 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %159, align 1
  tail call void @_ZNK2v86String22ExternalStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalStringResource"* %169) #7
  %170 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %169, i64 0, i32 1
  %171 = load i16*, i16** %170, align 8
  br label %179

172:                                              ; preds = %146, %160
  %173 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %159, align 1
  %174 = bitcast %"class.v8::String::ExternalStringResource"* %173 to i16* (%"class.v8::String::ExternalStringResource"*)***
  %175 = load i16* (%"class.v8::String::ExternalStringResource"*)**, i16* (%"class.v8::String::ExternalStringResource"*)*** %174, align 8
  %176 = getelementptr inbounds i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %175, i64 6
  %177 = load i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %176, align 8
  %178 = tail call i16* %177(%"class.v8::String::ExternalStringResource"* %173) #7
  br label %179

179:                                              ; preds = %172, %168, %143
  %180 = phi i16* [ %145, %143 ], [ %171, %168 ], [ %178, %172 ]
  %181 = getelementptr inbounds i16, i16* %180, i64 %72
  %182 = bitcast %"class.v8::internal::String::FlatContent"* %0 to i16**
  store i16* %181, i16** %182, align 8
  %183 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %0, i64 0, i32 1
  store i32 %8, i32* %183, align 8
  %184 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %0, i64 0, i32 2
  store i32 2, i32* %184, align 4
  br label %185

185:                                              ; preds = %47, %179, %136
  %186 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %0, i64 0, i32 3
  store %"class.v8::internal::CombinationAssertScope"* %2, %"class.v8::internal::CombinationAssertScope"** %186, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2v88internalL21CalculateLineEndsImplIhEEvPNSt3__16vectorIiNS2_9allocatorIiEEEENS0_6VectorIKT_EEb(%"class.std::__1::vector.816"*, i8*, i64, i1 zeroext) unnamed_addr #0 {
  %5 = trunc i64 %2 to i32
  %6 = add i32 %5, -1
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %16

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.std::__1::vector.816", %"class.std::__1::vector.816"* %0, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::vector.816", %"class.std::__1::vector.816"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = bitcast i32** %9 to i64*
  %12 = bitcast %"class.std::__1::vector.816"* %0 to i64*
  %13 = bitcast i32** %10 to i64*
  %14 = getelementptr inbounds %"class.std::__1::vector.816", %"class.std::__1::vector.816"* %0, i64 0, i32 0, i32 0
  %15 = zext i32 %6 to i64
  br label %18

16:                                               ; preds = %95, %4
  %17 = icmp sgt i32 %5, 0
  br i1 %17, label %97, label %174

18:                                               ; preds = %95, %8
  %19 = phi i64 [ 0, %8 ], [ %22, %95 ]
  %20 = getelementptr inbounds i8, i8* %1, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = add nuw nsw i64 %19, 1
  %23 = getelementptr inbounds i8, i8* %1, i64 %22
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %21 to i64
  %26 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internalL17kOneByteCharFlagsE, i64 0, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = and i8 %27, 16
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %95, label %30

30:                                               ; preds = %18
  switch i8 %21, label %95 [
    i8 10, label %33
    i8 13, label %31
  ]

31:                                               ; preds = %30
  %32 = icmp eq i8 %24, 10
  br i1 %32, label %95, label %33

33:                                               ; preds = %31, %30
  %34 = load i32*, i32** %9, align 8
  %35 = load i32*, i32** %10, align 8
  %36 = icmp eq i32* %34, %35
  %37 = ptrtoint i32* %35 to i64
  br i1 %36, label %42, label %38

38:                                               ; preds = %33
  %39 = trunc i64 %19 to i32
  store i32 %39, i32* %34, align 4
  %40 = getelementptr inbounds i32, i32* %34, i64 1
  %41 = ptrtoint i32* %40 to i64
  store i64 %41, i64* %11, align 8
  br label %95

42:                                               ; preds = %33
  %43 = ptrtoint i32* %34 to i64
  %44 = load i64, i64* %12, align 8
  %45 = sub i64 %43, %44
  %46 = ashr exact i64 %45, 2
  %47 = add nsw i64 %46, 1
  %48 = icmp ugt i64 %47, 4611686018427387903
  br i1 %48, label %49, label %51

49:                                               ; preds = %42
  %50 = bitcast %"class.std::__1::vector.816"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %50) #18
  unreachable

51:                                               ; preds = %42
  %52 = sub i64 %37, %44
  %53 = ashr exact i64 %52, 2
  %54 = icmp ult i64 %53, 2305843009213693951
  br i1 %54, label %55, label %63

55:                                               ; preds = %51
  %56 = ashr exact i64 %52, 1
  %57 = icmp ult i64 %56, %47
  %58 = select i1 %57, i64 %47, i64 %56
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %68, label %60

60:                                               ; preds = %55
  %61 = icmp ugt i64 %58, 4611686018427387903
  br i1 %61, label %62, label %63

62:                                               ; preds = %60
  tail call void @abort() #18
  unreachable

63:                                               ; preds = %60, %51
  %64 = phi i64 [ %58, %60 ], [ 4611686018427387903, %51 ]
  %65 = shl i64 %64, 2
  %66 = tail call i8* @_Znwm(i64 %65) #19
  %67 = bitcast i8* %66 to i32*
  br label %68

68:                                               ; preds = %63, %55
  %69 = phi i64 [ %64, %63 ], [ 0, %55 ]
  %70 = phi i32* [ %67, %63 ], [ null, %55 ]
  %71 = getelementptr inbounds i32, i32* %70, i64 %46
  %72 = getelementptr inbounds i32, i32* %70, i64 %69
  %73 = ptrtoint i32* %72 to i64
  %74 = trunc i64 %19 to i32
  store i32 %74, i32* %71, align 4
  %75 = getelementptr inbounds i32, i32* %71, i64 1
  %76 = ptrtoint i32* %75 to i64
  %77 = load i32*, i32** %14, align 8
  %78 = load i64, i64* %11, align 8
  %79 = ptrtoint i32* %77 to i64
  %80 = sub i64 %78, %79
  %81 = ashr exact i64 %80, 2
  %82 = sub nsw i64 0, %81
  %83 = getelementptr inbounds i32, i32* %71, i64 %82
  %84 = ptrtoint i32* %83 to i64
  %85 = icmp sgt i64 %80, 0
  br i1 %85, label %86, label %90

86:                                               ; preds = %68
  %87 = bitcast i32* %83 to i8*
  %88 = bitcast i32* %77 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %87, i8* align 4 %88, i64 %80, i1 false) #7
  %89 = load i32*, i32** %14, align 8
  br label %90

90:                                               ; preds = %86, %68
  %91 = phi i32* [ %77, %68 ], [ %89, %86 ]
  store i64 %84, i64* %12, align 8
  store i64 %76, i64* %11, align 8
  store i64 %73, i64* %13, align 8
  %92 = icmp eq i32* %91, null
  br i1 %92, label %95, label %93

93:                                               ; preds = %90
  %94 = bitcast i32* %91 to i8*
  tail call void @_ZdlPv(i8* %94) #19
  br label %95

95:                                               ; preds = %31, %30, %18, %93, %90, %38
  %96 = icmp eq i64 %22, %15
  br i1 %96, label %16, label %18

97:                                               ; preds = %16
  %98 = sext i32 %6 to i64
  %99 = getelementptr inbounds i8, i8* %1, i64 %98
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i64
  %102 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internalL17kOneByteCharFlagsE, i64 0, i64 %101
  %103 = load i8, i8* %102, align 1
  %104 = and i8 %103, 16
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %174, label %106

106:                                              ; preds = %97
  switch i8 %100, label %174 [
    i8 10, label %107
    i8 13, label %107
  ]

107:                                              ; preds = %106, %106
  %108 = getelementptr inbounds %"class.std::__1::vector.816", %"class.std::__1::vector.816"* %0, i64 0, i32 0, i32 1
  %109 = load i32*, i32** %108, align 8
  %110 = getelementptr inbounds %"class.std::__1::vector.816", %"class.std::__1::vector.816"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %111 = load i32*, i32** %110, align 8
  %112 = icmp ult i32* %109, %111
  %113 = ptrtoint i32* %111 to i64
  br i1 %112, label %114, label %118

114:                                              ; preds = %107
  store i32 %6, i32* %109, align 4
  %115 = getelementptr inbounds i32, i32* %109, i64 1
  %116 = ptrtoint i32* %115 to i64
  %117 = bitcast i32** %108 to i64*
  store i64 %116, i64* %117, align 8
  br label %174

118:                                              ; preds = %107
  %119 = ptrtoint i32* %109 to i64
  %120 = bitcast i32** %108 to i64*
  %121 = bitcast %"class.std::__1::vector.816"* %0 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = sub i64 %119, %122
  %124 = ashr exact i64 %123, 2
  %125 = add nsw i64 %124, 1
  %126 = icmp ugt i64 %125, 4611686018427387903
  br i1 %126, label %127, label %129

127:                                              ; preds = %118
  %128 = bitcast %"class.std::__1::vector.816"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %128) #18
  unreachable

129:                                              ; preds = %118
  %130 = bitcast i32** %110 to i64*
  %131 = sub i64 %113, %122
  %132 = ashr exact i64 %131, 2
  %133 = icmp ult i64 %132, 2305843009213693951
  br i1 %133, label %134, label %142

134:                                              ; preds = %129
  %135 = ashr exact i64 %131, 1
  %136 = icmp ult i64 %135, %125
  %137 = select i1 %136, i64 %125, i64 %135
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %147, label %139

139:                                              ; preds = %134
  %140 = icmp ugt i64 %137, 4611686018427387903
  br i1 %140, label %141, label %142

141:                                              ; preds = %139
  tail call void @abort() #18
  unreachable

142:                                              ; preds = %139, %129
  %143 = phi i64 [ %137, %139 ], [ 4611686018427387903, %129 ]
  %144 = shl i64 %143, 2
  %145 = tail call i8* @_Znwm(i64 %144) #19
  %146 = bitcast i8* %145 to i32*
  br label %147

147:                                              ; preds = %142, %134
  %148 = phi i64 [ %143, %142 ], [ 0, %134 ]
  %149 = phi i32* [ %146, %142 ], [ null, %134 ]
  %150 = getelementptr inbounds i32, i32* %149, i64 %124
  %151 = getelementptr inbounds i32, i32* %149, i64 %148
  %152 = ptrtoint i32* %151 to i64
  store i32 %6, i32* %150, align 4
  %153 = getelementptr inbounds i32, i32* %150, i64 1
  %154 = ptrtoint i32* %153 to i64
  %155 = getelementptr inbounds %"class.std::__1::vector.816", %"class.std::__1::vector.816"* %0, i64 0, i32 0, i32 0
  %156 = load i32*, i32** %155, align 8
  %157 = load i64, i64* %120, align 8
  %158 = ptrtoint i32* %156 to i64
  %159 = sub i64 %157, %158
  %160 = ashr exact i64 %159, 2
  %161 = sub nsw i64 0, %160
  %162 = getelementptr inbounds i32, i32* %150, i64 %161
  %163 = ptrtoint i32* %162 to i64
  %164 = icmp sgt i64 %159, 0
  br i1 %164, label %165, label %169

165:                                              ; preds = %147
  %166 = bitcast i32* %162 to i8*
  %167 = bitcast i32* %156 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %166, i8* align 4 %167, i64 %159, i1 false) #7
  %168 = load i32*, i32** %155, align 8
  br label %169

169:                                              ; preds = %165, %147
  %170 = phi i32* [ %156, %147 ], [ %168, %165 ]
  store i64 %163, i64* %121, align 8
  store i64 %154, i64* %120, align 8
  store i64 %152, i64* %130, align 8
  %171 = icmp eq i32* %170, null
  br i1 %171, label %174, label %172

172:                                              ; preds = %169
  %173 = bitcast i32* %170 to i8*
  tail call void @_ZdlPv(i8* %173) #19
  br label %174

174:                                              ; preds = %106, %97, %172, %169, %114, %16
  br i1 %3, label %175, label %242

175:                                              ; preds = %174
  %176 = getelementptr inbounds %"class.std::__1::vector.816", %"class.std::__1::vector.816"* %0, i64 0, i32 0, i32 1
  %177 = load i32*, i32** %176, align 8
  %178 = getelementptr inbounds %"class.std::__1::vector.816", %"class.std::__1::vector.816"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %179 = load i32*, i32** %178, align 8
  %180 = icmp eq i32* %177, %179
  %181 = ptrtoint i32* %179 to i64
  br i1 %180, label %186, label %182

182:                                              ; preds = %175
  store i32 %5, i32* %177, align 4
  %183 = getelementptr inbounds i32, i32* %177, i64 1
  %184 = ptrtoint i32* %183 to i64
  %185 = bitcast i32** %176 to i64*
  store i64 %184, i64* %185, align 8
  br label %242

186:                                              ; preds = %175
  %187 = ptrtoint i32* %177 to i64
  %188 = bitcast i32** %176 to i64*
  %189 = bitcast %"class.std::__1::vector.816"* %0 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = sub i64 %187, %190
  %192 = ashr exact i64 %191, 2
  %193 = add nsw i64 %192, 1
  %194 = icmp ugt i64 %193, 4611686018427387903
  br i1 %194, label %195, label %197

195:                                              ; preds = %186
  %196 = bitcast %"class.std::__1::vector.816"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %196) #18
  unreachable

197:                                              ; preds = %186
  %198 = bitcast i32** %178 to i64*
  %199 = sub i64 %181, %190
  %200 = ashr exact i64 %199, 2
  %201 = icmp ult i64 %200, 2305843009213693951
  br i1 %201, label %202, label %210

202:                                              ; preds = %197
  %203 = ashr exact i64 %199, 1
  %204 = icmp ult i64 %203, %193
  %205 = select i1 %204, i64 %193, i64 %203
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %215, label %207

207:                                              ; preds = %202
  %208 = icmp ugt i64 %205, 4611686018427387903
  br i1 %208, label %209, label %210

209:                                              ; preds = %207
  tail call void @abort() #18
  unreachable

210:                                              ; preds = %207, %197
  %211 = phi i64 [ %205, %207 ], [ 4611686018427387903, %197 ]
  %212 = shl i64 %211, 2
  %213 = tail call i8* @_Znwm(i64 %212) #19
  %214 = bitcast i8* %213 to i32*
  br label %215

215:                                              ; preds = %210, %202
  %216 = phi i64 [ %211, %210 ], [ 0, %202 ]
  %217 = phi i32* [ %214, %210 ], [ null, %202 ]
  %218 = getelementptr inbounds i32, i32* %217, i64 %192
  %219 = getelementptr inbounds i32, i32* %217, i64 %216
  %220 = ptrtoint i32* %219 to i64
  store i32 %5, i32* %218, align 4
  %221 = getelementptr inbounds i32, i32* %218, i64 1
  %222 = ptrtoint i32* %221 to i64
  %223 = getelementptr inbounds %"class.std::__1::vector.816", %"class.std::__1::vector.816"* %0, i64 0, i32 0, i32 0
  %224 = load i32*, i32** %223, align 8
  %225 = load i64, i64* %188, align 8
  %226 = ptrtoint i32* %224 to i64
  %227 = sub i64 %225, %226
  %228 = ashr exact i64 %227, 2
  %229 = sub nsw i64 0, %228
  %230 = getelementptr inbounds i32, i32* %218, i64 %229
  %231 = ptrtoint i32* %230 to i64
  %232 = icmp sgt i64 %227, 0
  br i1 %232, label %233, label %237

233:                                              ; preds = %215
  %234 = bitcast i32* %230 to i8*
  %235 = bitcast i32* %224 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %234, i8* align 4 %235, i64 %227, i1 false) #7
  %236 = load i32*, i32** %223, align 8
  br label %237

237:                                              ; preds = %233, %215
  %238 = phi i32* [ %224, %215 ], [ %236, %233 ]
  store i64 %231, i64* %189, align 8
  store i64 %222, i64* %188, align 8
  store i64 %220, i64* %198, align 8
  %239 = icmp eq i32* %238, null
  br i1 %239, label %242, label %240

240:                                              ; preds = %237
  %241 = bitcast i32* %238 to i8*
  tail call void @_ZdlPv(i8* %241) #19
  br label %242

242:                                              ; preds = %240, %237, %182, %174
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2v88internalL21CalculateLineEndsImplItEEvPNSt3__16vectorIiNS2_9allocatorIiEEEENS0_6VectorIKT_EEb(%"class.std::__1::vector.816"*, i16*, i64, i1 zeroext) unnamed_addr #0 {
  %5 = trunc i64 %2 to i32
  %6 = add i32 %5, -1
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %16

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.std::__1::vector.816", %"class.std::__1::vector.816"* %0, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::vector.816", %"class.std::__1::vector.816"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = bitcast i32** %9 to i64*
  %12 = bitcast %"class.std::__1::vector.816"* %0 to i64*
  %13 = bitcast i32** %10 to i64*
  %14 = getelementptr inbounds %"class.std::__1::vector.816", %"class.std::__1::vector.816"* %0, i64 0, i32 0, i32 0
  %15 = zext i32 %6 to i64
  br label %18

16:                                               ; preds = %100, %4
  %17 = icmp sgt i32 %5, 0
  br i1 %17, label %102, label %184

18:                                               ; preds = %100, %8
  %19 = phi i64 [ 0, %8 ], [ %22, %100 ]
  %20 = getelementptr inbounds i16, i16* %1, i64 %19
  %21 = load i16, i16* %20, align 2
  %22 = add nuw nsw i64 %19, 1
  %23 = getelementptr inbounds i16, i16* %1, i64 %22
  %24 = load i16, i16* %23, align 2
  %25 = zext i16 %21 to i32
  %26 = and i32 %25, 255
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internalL17kOneByteCharFlagsE, i64 0, i64 %27
  %29 = load i8, i8* %28, align 1
  %30 = and i8 %29, 16
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %100, label %32

32:                                               ; preds = %18
  switch i16 %21, label %35 [
    i16 10, label %38
    i16 13, label %33
  ]

33:                                               ; preds = %32
  %34 = icmp eq i16 %24, 10
  br i1 %34, label %100, label %38

35:                                               ; preds = %32
  %36 = and i32 %25, 65534
  %37 = icmp eq i32 %36, 8232
  br i1 %37, label %38, label %100

38:                                               ; preds = %33, %32, %35
  %39 = load i32*, i32** %9, align 8
  %40 = load i32*, i32** %10, align 8
  %41 = icmp eq i32* %39, %40
  %42 = ptrtoint i32* %40 to i64
  br i1 %41, label %47, label %43

43:                                               ; preds = %38
  %44 = trunc i64 %19 to i32
  store i32 %44, i32* %39, align 4
  %45 = getelementptr inbounds i32, i32* %39, i64 1
  %46 = ptrtoint i32* %45 to i64
  store i64 %46, i64* %11, align 8
  br label %100

47:                                               ; preds = %38
  %48 = ptrtoint i32* %39 to i64
  %49 = load i64, i64* %12, align 8
  %50 = sub i64 %48, %49
  %51 = ashr exact i64 %50, 2
  %52 = add nsw i64 %51, 1
  %53 = icmp ugt i64 %52, 4611686018427387903
  br i1 %53, label %54, label %56

54:                                               ; preds = %47
  %55 = bitcast %"class.std::__1::vector.816"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %55) #18
  unreachable

56:                                               ; preds = %47
  %57 = sub i64 %42, %49
  %58 = ashr exact i64 %57, 2
  %59 = icmp ult i64 %58, 2305843009213693951
  br i1 %59, label %60, label %68

60:                                               ; preds = %56
  %61 = ashr exact i64 %57, 1
  %62 = icmp ult i64 %61, %52
  %63 = select i1 %62, i64 %52, i64 %61
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %73, label %65

65:                                               ; preds = %60
  %66 = icmp ugt i64 %63, 4611686018427387903
  br i1 %66, label %67, label %68

67:                                               ; preds = %65
  tail call void @abort() #18
  unreachable

68:                                               ; preds = %65, %56
  %69 = phi i64 [ %63, %65 ], [ 4611686018427387903, %56 ]
  %70 = shl i64 %69, 2
  %71 = tail call i8* @_Znwm(i64 %70) #19
  %72 = bitcast i8* %71 to i32*
  br label %73

73:                                               ; preds = %68, %60
  %74 = phi i64 [ %69, %68 ], [ 0, %60 ]
  %75 = phi i32* [ %72, %68 ], [ null, %60 ]
  %76 = getelementptr inbounds i32, i32* %75, i64 %51
  %77 = getelementptr inbounds i32, i32* %75, i64 %74
  %78 = ptrtoint i32* %77 to i64
  %79 = trunc i64 %19 to i32
  store i32 %79, i32* %76, align 4
  %80 = getelementptr inbounds i32, i32* %76, i64 1
  %81 = ptrtoint i32* %80 to i64
  %82 = load i32*, i32** %14, align 8
  %83 = load i64, i64* %11, align 8
  %84 = ptrtoint i32* %82 to i64
  %85 = sub i64 %83, %84
  %86 = ashr exact i64 %85, 2
  %87 = sub nsw i64 0, %86
  %88 = getelementptr inbounds i32, i32* %76, i64 %87
  %89 = ptrtoint i32* %88 to i64
  %90 = icmp sgt i64 %85, 0
  br i1 %90, label %91, label %95

91:                                               ; preds = %73
  %92 = bitcast i32* %88 to i8*
  %93 = bitcast i32* %82 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %92, i8* align 4 %93, i64 %85, i1 false) #7
  %94 = load i32*, i32** %14, align 8
  br label %95

95:                                               ; preds = %91, %73
  %96 = phi i32* [ %82, %73 ], [ %94, %91 ]
  store i64 %89, i64* %12, align 8
  store i64 %81, i64* %11, align 8
  store i64 %78, i64* %13, align 8
  %97 = icmp eq i32* %96, null
  br i1 %97, label %100, label %98

98:                                               ; preds = %95
  %99 = bitcast i32* %96 to i8*
  tail call void @_ZdlPv(i8* %99) #19
  br label %100

100:                                              ; preds = %33, %18, %98, %95, %43, %35
  %101 = icmp eq i64 %22, %15
  br i1 %101, label %16, label %18

102:                                              ; preds = %16
  %103 = sext i32 %6 to i64
  %104 = getelementptr inbounds i16, i16* %1, i64 %103
  %105 = load i16, i16* %104, align 2
  %106 = zext i16 %105 to i32
  %107 = and i32 %106, 255
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internalL17kOneByteCharFlagsE, i64 0, i64 %108
  %110 = load i8, i8* %109, align 1
  %111 = and i8 %110, 16
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %184, label %113

113:                                              ; preds = %102
  switch i16 %105, label %114 [
    i16 10, label %117
    i16 13, label %117
  ]

114:                                              ; preds = %113
  %115 = and i32 %106, 65534
  %116 = icmp eq i32 %115, 8232
  br i1 %116, label %117, label %184

117:                                              ; preds = %113, %113, %114
  %118 = getelementptr inbounds %"class.std::__1::vector.816", %"class.std::__1::vector.816"* %0, i64 0, i32 0, i32 1
  %119 = load i32*, i32** %118, align 8
  %120 = getelementptr inbounds %"class.std::__1::vector.816", %"class.std::__1::vector.816"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %121 = load i32*, i32** %120, align 8
  %122 = icmp ult i32* %119, %121
  %123 = ptrtoint i32* %121 to i64
  br i1 %122, label %124, label %128

124:                                              ; preds = %117
  store i32 %6, i32* %119, align 4
  %125 = getelementptr inbounds i32, i32* %119, i64 1
  %126 = ptrtoint i32* %125 to i64
  %127 = bitcast i32** %118 to i64*
  store i64 %126, i64* %127, align 8
  br label %184

128:                                              ; preds = %117
  %129 = ptrtoint i32* %119 to i64
  %130 = bitcast i32** %118 to i64*
  %131 = bitcast %"class.std::__1::vector.816"* %0 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = sub i64 %129, %132
  %134 = ashr exact i64 %133, 2
  %135 = add nsw i64 %134, 1
  %136 = icmp ugt i64 %135, 4611686018427387903
  br i1 %136, label %137, label %139

137:                                              ; preds = %128
  %138 = bitcast %"class.std::__1::vector.816"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %138) #18
  unreachable

139:                                              ; preds = %128
  %140 = bitcast i32** %120 to i64*
  %141 = sub i64 %123, %132
  %142 = ashr exact i64 %141, 2
  %143 = icmp ult i64 %142, 2305843009213693951
  br i1 %143, label %144, label %152

144:                                              ; preds = %139
  %145 = ashr exact i64 %141, 1
  %146 = icmp ult i64 %145, %135
  %147 = select i1 %146, i64 %135, i64 %145
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %157, label %149

149:                                              ; preds = %144
  %150 = icmp ugt i64 %147, 4611686018427387903
  br i1 %150, label %151, label %152

151:                                              ; preds = %149
  tail call void @abort() #18
  unreachable

152:                                              ; preds = %149, %139
  %153 = phi i64 [ %147, %149 ], [ 4611686018427387903, %139 ]
  %154 = shl i64 %153, 2
  %155 = tail call i8* @_Znwm(i64 %154) #19
  %156 = bitcast i8* %155 to i32*
  br label %157

157:                                              ; preds = %152, %144
  %158 = phi i64 [ %153, %152 ], [ 0, %144 ]
  %159 = phi i32* [ %156, %152 ], [ null, %144 ]
  %160 = getelementptr inbounds i32, i32* %159, i64 %134
  %161 = getelementptr inbounds i32, i32* %159, i64 %158
  %162 = ptrtoint i32* %161 to i64
  store i32 %6, i32* %160, align 4
  %163 = getelementptr inbounds i32, i32* %160, i64 1
  %164 = ptrtoint i32* %163 to i64
  %165 = getelementptr inbounds %"class.std::__1::vector.816", %"class.std::__1::vector.816"* %0, i64 0, i32 0, i32 0
  %166 = load i32*, i32** %165, align 8
  %167 = load i64, i64* %130, align 8
  %168 = ptrtoint i32* %166 to i64
  %169 = sub i64 %167, %168
  %170 = ashr exact i64 %169, 2
  %171 = sub nsw i64 0, %170
  %172 = getelementptr inbounds i32, i32* %160, i64 %171
  %173 = ptrtoint i32* %172 to i64
  %174 = icmp sgt i64 %169, 0
  br i1 %174, label %175, label %179

175:                                              ; preds = %157
  %176 = bitcast i32* %172 to i8*
  %177 = bitcast i32* %166 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %176, i8* align 4 %177, i64 %169, i1 false) #7
  %178 = load i32*, i32** %165, align 8
  br label %179

179:                                              ; preds = %175, %157
  %180 = phi i32* [ %166, %157 ], [ %178, %175 ]
  store i64 %173, i64* %131, align 8
  store i64 %164, i64* %130, align 8
  store i64 %162, i64* %140, align 8
  %181 = icmp eq i32* %180, null
  br i1 %181, label %184, label %182

182:                                              ; preds = %179
  %183 = bitcast i32* %180 to i8*
  tail call void @_ZdlPv(i8* %183) #19
  br label %184

184:                                              ; preds = %102, %182, %179, %124, %114, %16
  br i1 %3, label %185, label %252

185:                                              ; preds = %184
  %186 = getelementptr inbounds %"class.std::__1::vector.816", %"class.std::__1::vector.816"* %0, i64 0, i32 0, i32 1
  %187 = load i32*, i32** %186, align 8
  %188 = getelementptr inbounds %"class.std::__1::vector.816", %"class.std::__1::vector.816"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %189 = load i32*, i32** %188, align 8
  %190 = icmp eq i32* %187, %189
  %191 = ptrtoint i32* %189 to i64
  br i1 %190, label %196, label %192

192:                                              ; preds = %185
  store i32 %5, i32* %187, align 4
  %193 = getelementptr inbounds i32, i32* %187, i64 1
  %194 = ptrtoint i32* %193 to i64
  %195 = bitcast i32** %186 to i64*
  store i64 %194, i64* %195, align 8
  br label %252

196:                                              ; preds = %185
  %197 = ptrtoint i32* %187 to i64
  %198 = bitcast i32** %186 to i64*
  %199 = bitcast %"class.std::__1::vector.816"* %0 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = sub i64 %197, %200
  %202 = ashr exact i64 %201, 2
  %203 = add nsw i64 %202, 1
  %204 = icmp ugt i64 %203, 4611686018427387903
  br i1 %204, label %205, label %207

205:                                              ; preds = %196
  %206 = bitcast %"class.std::__1::vector.816"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %206) #18
  unreachable

207:                                              ; preds = %196
  %208 = bitcast i32** %188 to i64*
  %209 = sub i64 %191, %200
  %210 = ashr exact i64 %209, 2
  %211 = icmp ult i64 %210, 2305843009213693951
  br i1 %211, label %212, label %220

212:                                              ; preds = %207
  %213 = ashr exact i64 %209, 1
  %214 = icmp ult i64 %213, %203
  %215 = select i1 %214, i64 %203, i64 %213
  %216 = icmp eq i64 %215, 0
  br i1 %216, label %225, label %217

217:                                              ; preds = %212
  %218 = icmp ugt i64 %215, 4611686018427387903
  br i1 %218, label %219, label %220

219:                                              ; preds = %217
  tail call void @abort() #18
  unreachable

220:                                              ; preds = %217, %207
  %221 = phi i64 [ %215, %217 ], [ 4611686018427387903, %207 ]
  %222 = shl i64 %221, 2
  %223 = tail call i8* @_Znwm(i64 %222) #19
  %224 = bitcast i8* %223 to i32*
  br label %225

225:                                              ; preds = %220, %212
  %226 = phi i64 [ %221, %220 ], [ 0, %212 ]
  %227 = phi i32* [ %224, %220 ], [ null, %212 ]
  %228 = getelementptr inbounds i32, i32* %227, i64 %202
  %229 = getelementptr inbounds i32, i32* %227, i64 %226
  %230 = ptrtoint i32* %229 to i64
  store i32 %5, i32* %228, align 4
  %231 = getelementptr inbounds i32, i32* %228, i64 1
  %232 = ptrtoint i32* %231 to i64
  %233 = getelementptr inbounds %"class.std::__1::vector.816", %"class.std::__1::vector.816"* %0, i64 0, i32 0, i32 0
  %234 = load i32*, i32** %233, align 8
  %235 = load i64, i64* %198, align 8
  %236 = ptrtoint i32* %234 to i64
  %237 = sub i64 %235, %236
  %238 = ashr exact i64 %237, 2
  %239 = sub nsw i64 0, %238
  %240 = getelementptr inbounds i32, i32* %228, i64 %239
  %241 = ptrtoint i32* %240 to i64
  %242 = icmp sgt i64 %237, 0
  br i1 %242, label %243, label %247

243:                                              ; preds = %225
  %244 = bitcast i32* %240 to i8*
  %245 = bitcast i32* %234 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %244, i8* align 4 %245, i64 %237, i1 false) #7
  %246 = load i32*, i32** %233, align 8
  br label %247

247:                                              ; preds = %243, %225
  %248 = phi i32* [ %234, %225 ], [ %246, %243 ]
  store i64 %241, i64* %199, align 8
  store i64 %232, i64* %198, align 8
  store i64 %230, i64* %208, align 8
  %249 = icmp eq i32* %248, null
  br i1 %249, label %252, label %250

250:                                              ; preds = %247
  %251 = bitcast i32* %248 to i8*
  tail call void @_ZdlPv(i8* %251) #19
  br label %252

252:                                              ; preds = %250, %247, %192, %184
  ret void
}

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal6String17CalculateLineEndsINS0_12LocalIsolateEEENS0_6HandleINS0_10FixedArrayEEEPT_NS4_IS1_EEb(%"class.v8::internal::LocalIsolate"*, i64*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::vector.816", align 16
  %5 = alloca %"class.v8::internal::CombinationAssertScope", align 1
  %6 = alloca %"class.v8::internal::String::FlatContent", align 8
  %7 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %8 = load i64, i64* %1, align 8
  %9 = add i64 %8, 7
  %10 = inttoptr i64 %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = ashr i32 %11, 4
  %13 = bitcast %"class.std::__1::vector.816"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 0, i64 24, i1 false) #7
  %14 = sext i32 %12 to i64
  %15 = getelementptr inbounds %"class.std::__1::vector.816", %"class.std::__1::vector.816"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast i32** %15 to i64*
  %17 = bitcast %"class.std::__1::vector.816"* %4 to i64*
  %18 = icmp eq i32 %12, 0
  br i1 %18, label %32, label %19

19:                                               ; preds = %3
  %20 = icmp slt i32 %11, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %19
  tail call void @abort() #18
  unreachable

22:                                               ; preds = %19
  %23 = shl nsw i64 %14, 2
  %24 = tail call i8* @_Znwm(i64 %23) #19
  %25 = bitcast i8* %24 to i32*
  %26 = getelementptr inbounds i32, i32* %25, i64 %14
  %27 = ptrtoint i32* %26 to i64
  %28 = insertelement <2 x i8*> undef, i8* %24, i32 0
  %29 = shufflevector <2 x i8*> %28, <2 x i8*> undef, <2 x i32> zeroinitializer
  %30 = ptrtoint <2 x i8*> %29 to <2 x i64>
  %31 = bitcast %"class.std::__1::vector.816"* %4 to <2 x i64>*
  store <2 x i64> %30, <2 x i64>* %31, align 16
  store i64 %27, i64* %16, align 16
  br label %32

32:                                               ; preds = %22, %3
  %33 = getelementptr inbounds %"class.v8::internal::CombinationAssertScope", %"class.v8::internal::CombinationAssertScope"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %33) #7
  %34 = bitcast %"class.v8::internal::String::FlatContent"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #7
  %35 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #7
  %36 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %8, i64* %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %7, i64 0, i32 0
  call void @_ZN2v88internal6String14GetFlatContentERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENS3_ILS4_1ELb0EEEEEE(%"class.v8::internal::String::FlatContent"* nonnull sret %6, %"class.v8::internal::String"* nonnull %37, %"class.v8::internal::CombinationAssertScope"* nonnull dereferenceable(1) %5)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  %38 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %6, i64 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %47

41:                                               ; preds = %32
  %42 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %6, i64 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %6, i64 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = sext i32 %45 to i64
  call fastcc void @_ZN2v88internalL21CalculateLineEndsImplIhEEvPNSt3__16vectorIiNS2_9allocatorIiEEEENS0_6VectorIKT_EEb(%"class.std::__1::vector.816"* nonnull %4, i8* %43, i64 %46, i1 zeroext %2)
  br label %53

47:                                               ; preds = %32
  %48 = bitcast %"class.v8::internal::String::FlatContent"* %6 to i16**
  %49 = load i16*, i16** %48, align 8
  %50 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %6, i64 0, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = sext i32 %51 to i64
  call fastcc void @_ZN2v88internalL21CalculateLineEndsImplItEEvPNSt3__16vectorIiNS2_9allocatorIiEEEENS0_6VectorIKT_EEb(%"class.std::__1::vector.816"* nonnull %4, i16* %49, i64 %52, i1 zeroext %2)
  br label %53

53:                                               ; preds = %47, %41
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #7
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %33) #7
  %54 = getelementptr inbounds %"class.std::__1::vector.816", %"class.std::__1::vector.816"* %4, i64 0, i32 0, i32 1
  %55 = bitcast i32** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = load i64, i64* %17, align 16
  %58 = sub i64 %56, %57
  %59 = lshr exact i64 %58, 2
  %60 = trunc i64 %59 to i32
  %61 = bitcast %"class.v8::internal::LocalIsolate"* %0 to %"class.v8::internal::FactoryBase.1049"*
  %62 = call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1049"* %61, i32 %60, i8 zeroext 1) #7
  %63 = icmp sgt i32 %60, 0
  br i1 %63, label %64, label %86

64:                                               ; preds = %53
  %65 = getelementptr inbounds %"class.std::__1::vector.816", %"class.std::__1::vector.816"* %4, i64 0, i32 0, i32 0
  %66 = and i64 %59, 4294967295
  %67 = and i64 %59, 1
  %68 = icmp eq i64 %66, 1
  br i1 %68, label %71, label %69

69:                                               ; preds = %64
  %70 = sub nsw i64 %66, %67
  br label %94

71:                                               ; preds = %94, %64
  %72 = phi i64 [ 0, %64 ], [ %120, %94 ]
  %73 = icmp eq i64 %67, 0
  br i1 %73, label %86, label %74

74:                                               ; preds = %71
  %75 = load i64, i64* %62, align 8
  %76 = load i32*, i32** %65, align 16
  %77 = getelementptr inbounds i32, i32* %76, i64 %72
  %78 = load i32, i32* %77, align 4
  %79 = shl i32 %78, 1
  %80 = trunc i64 %72 to i32
  %81 = shl i32 %80, 2
  %82 = sext i32 %81 to i64
  %83 = add nsw i64 %82, 7
  %84 = add i64 %83, %75
  %85 = inttoptr i64 %84 to i32*
  store atomic volatile i32 %79, i32* %85 monotonic, align 4
  br label %86

86:                                               ; preds = %74, %71, %53
  %87 = getelementptr inbounds %"class.std::__1::vector.816", %"class.std::__1::vector.816"* %4, i64 0, i32 0, i32 0
  %88 = load i32*, i32** %87, align 16
  %89 = icmp eq i32* %88, null
  br i1 %89, label %93, label %90

90:                                               ; preds = %86
  %91 = ptrtoint i32* %88 to i64
  store i64 %91, i64* %55, align 8
  %92 = bitcast i32* %88 to i8*
  call void @_ZdlPv(i8* %92) #19
  br label %93

93:                                               ; preds = %86, %90
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #7
  ret i64* %62

94:                                               ; preds = %94, %69
  %95 = phi i64 [ 0, %69 ], [ %120, %94 ]
  %96 = phi i64 [ %70, %69 ], [ %121, %94 ]
  %97 = load i64, i64* %62, align 8
  %98 = load i32*, i32** %65, align 16
  %99 = getelementptr inbounds i32, i32* %98, i64 %95
  %100 = load i32, i32* %99, align 4
  %101 = shl i32 %100, 1
  %102 = trunc i64 %95 to i32
  %103 = shl i32 %102, 2
  %104 = or i32 %103, 7
  %105 = sext i32 %104 to i64
  %106 = add i64 %97, %105
  %107 = inttoptr i64 %106 to i32*
  store atomic volatile i32 %101, i32* %107 monotonic, align 4
  %108 = or i64 %95, 1
  %109 = load i64, i64* %62, align 8
  %110 = load i32*, i32** %65, align 16
  %111 = getelementptr inbounds i32, i32* %110, i64 %108
  %112 = load i32, i32* %111, align 4
  %113 = shl i32 %112, 1
  %114 = trunc i64 %108 to i32
  %115 = shl i32 %114, 2
  %116 = sext i32 %115 to i64
  %117 = add nsw i64 %116, 7
  %118 = add i64 %117, %109
  %119 = inttoptr i64 %118 to i32*
  store atomic volatile i32 %113, i32* %119 monotonic, align 4
  %120 = add nuw nsw i64 %95, 2
  %121 = add i64 %96, -2
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %71, label %94
}

declare i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1049"*, i32, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal6String11WriteToFlatItEEvS1_PT_ii(i64, i16*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::SharedStringAccessGuardIfNeeded", align 8
  %6 = getelementptr inbounds %"class.v8::internal::SharedStringAccessGuardIfNeeded", %"class.v8::internal::SharedStringAccessGuardIfNeeded"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 16, i1 false) #7, !alias.scope !2
  call void @_ZN2v88internal6String11WriteToFlatItEEvS1_PT_iiRKNS0_31SharedStringAccessGuardIfNeededE(i64 %0, i16* %1, i32 %2, i32 %3, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* nonnull dereferenceable(16) %5)
  %7 = load i8, i8* %6, align 8, !range !5
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.v8::internal::SharedStringAccessGuardIfNeeded", %"class.v8::internal::SharedStringAccessGuardIfNeeded"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %11 = load %"class.v8::base::SharedMutex"*, %"class.v8::base::SharedMutex"** %10, align 8
  call void @_ZN2v84base11SharedMutex12UnlockSharedEv(%"class.v8::base::SharedMutex"* %11) #7
  br label %12

12:                                               ; preds = %4, %9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal6String11WriteToFlatItEEvS1_PT_iiRKNS0_31SharedStringAccessGuardIfNeededE(i64, i16*, i32, i32, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.v8::internal::String", align 8
  %7 = alloca i32, align 4
  %8 = alloca %"class.v8::internal::StringShape", align 4
  %9 = icmp sgt i32 %3, %2
  br i1 %9, label %10, label %405

10:                                               ; preds = %5
  %11 = bitcast i32* %7 to i8*
  %12 = bitcast %"class.v8::internal::StringShape"* %8 to i8*
  %13 = getelementptr inbounds %"class.v8::internal::StringShape", %"class.v8::internal::StringShape"* %8, i64 0, i32 0
  %14 = bitcast %"class.v8::internal::String"* %6 to i8*
  %15 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %16

16:                                               ; preds = %10, %399
  %17 = phi i64 [ %0, %10 ], [ %403, %399 ]
  %18 = phi i16* [ %1, %10 ], [ %402, %399 ]
  %19 = phi i32 [ %2, %10 ], [ %401, %399 ]
  %20 = phi i32 [ %3, %10 ], [ %400, %399 ]
  %21 = and i64 %17, -4294967296
  %22 = add i64 %17, -1
  %23 = inttoptr i64 %22 to i32*
  %24 = load atomic i32, i32* %23 acquire, align 4
  %25 = zext i32 %24 to i64
  %26 = or i64 %21, %25
  %27 = add i64 %26, 7
  %28 = inttoptr i64 %27 to i16*
  %29 = load atomic i16, i16* %28 monotonic, align 2
  %30 = and i16 %29, 15
  %31 = zext i16 %30 to i32
  switch i32 %31, label %399 [
    i32 10, label %32
    i32 2, label %69
    i32 8, label %159
    i32 0, label %166
    i32 9, label %226
    i32 1, label %226
    i32 11, label %381
    i32 3, label %381
    i32 13, label %393
    i32 5, label %393
  ]

32:                                               ; preds = %16
  %33 = inttoptr i64 %22 to i32*
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = zext i32 %34 to i64
  %36 = or i64 %21, %35
  %37 = add i64 %36, 7
  %38 = inttoptr i64 %37 to i16*
  %39 = load atomic i16, i16* %38 monotonic, align 2
  %40 = and i16 %39, 16
  %41 = icmp eq i16 %40, 0
  %42 = add i64 %17, 11
  %43 = inttoptr i64 %42 to %"class.v8::String::ExternalOneByteStringResource"**
  br i1 %41, label %56, label %44

44:                                               ; preds = %32
  %45 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %43, align 1
  %46 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %45, i64 0, i32 0
  %47 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %45 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %48 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %47, align 8
  %49 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %48, i64 2
  %50 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %49, align 8
  %51 = call zeroext i1 %50(%"class.v8::String::ExternalStringResourceBase"* %46) #7
  br i1 %51, label %52, label %56

52:                                               ; preds = %44
  %53 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %43, align 1
  call void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"* %53) #7
  %54 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %53, i64 0, i32 1
  %55 = load i8*, i8** %54, align 8
  br label %63

56:                                               ; preds = %32, %44
  %57 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %43, align 1
  %58 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %57 to i8* (%"class.v8::String::ExternalOneByteStringResource"*)***
  %59 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)**, i8* (%"class.v8::String::ExternalOneByteStringResource"*)*** %58, align 8
  %60 = getelementptr inbounds i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %59, i64 6
  %61 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %60, align 8
  %62 = call i8* %61(%"class.v8::String::ExternalOneByteStringResource"* %57) #7
  br label %63

63:                                               ; preds = %52, %56
  %64 = phi i8* [ %55, %52 ], [ %62, %56 ]
  %65 = sext i32 %19 to i64
  %66 = getelementptr inbounds i8, i8* %64, i64 %65
  %67 = sub nsw i32 %20, %19
  %68 = sext i32 %67 to i64
  call void @_ZN2v88internal9CopyCharsIhtEEvPT0_PKT_m(i16* %18, i8* %66, i64 %68)
  br label %405

69:                                               ; preds = %16
  %70 = inttoptr i64 %22 to i32*
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = zext i32 %71 to i64
  %73 = or i64 %21, %72
  %74 = add i64 %73, 7
  %75 = inttoptr i64 %74 to i16*
  %76 = load atomic i16, i16* %75 monotonic, align 2
  %77 = and i16 %76, 16
  %78 = icmp eq i16 %77, 0
  %79 = add i64 %17, 11
  %80 = inttoptr i64 %79 to %"class.v8::String::ExternalStringResource"**
  br i1 %78, label %93, label %81

81:                                               ; preds = %69
  %82 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %80, align 1
  %83 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %82, i64 0, i32 0
  %84 = bitcast %"class.v8::String::ExternalStringResource"* %82 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %85 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %84, align 8
  %86 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %85, i64 2
  %87 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %86, align 8
  %88 = call zeroext i1 %87(%"class.v8::String::ExternalStringResourceBase"* %83) #7
  br i1 %88, label %89, label %93

89:                                               ; preds = %81
  %90 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %80, align 1
  call void @_ZNK2v86String22ExternalStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalStringResource"* %90) #7
  %91 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %90, i64 0, i32 1
  %92 = load i16*, i16** %91, align 8
  br label %100

93:                                               ; preds = %69, %81
  %94 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %80, align 1
  %95 = bitcast %"class.v8::String::ExternalStringResource"* %94 to i16* (%"class.v8::String::ExternalStringResource"*)***
  %96 = load i16* (%"class.v8::String::ExternalStringResource"*)**, i16* (%"class.v8::String::ExternalStringResource"*)*** %95, align 8
  %97 = getelementptr inbounds i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %96, i64 6
  %98 = load i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %97, align 8
  %99 = call i16* %98(%"class.v8::String::ExternalStringResource"* %94) #7
  br label %100

100:                                              ; preds = %89, %93
  %101 = phi i16* [ %92, %89 ], [ %99, %93 ]
  %102 = sext i32 %19 to i64
  %103 = getelementptr inbounds i16, i16* %101, i64 %102
  %104 = sub nsw i32 %20, %19
  %105 = sext i32 %104 to i64
  switch i64 %105, label %155 [
    i64 1, label %106
    i64 2, label %108
    i64 3, label %112
    i64 4, label %115
    i64 5, label %119
    i64 6, label %122
    i64 7, label %125
    i64 8, label %128
    i64 9, label %131
    i64 10, label %134
    i64 11, label %137
    i64 12, label %140
    i64 13, label %143
    i64 14, label %146
    i64 15, label %149
    i64 16, label %152
    i64 0, label %405
  ]

106:                                              ; preds = %100
  %107 = load i16, i16* %103, align 2
  store i16 %107, i16* %18, align 2
  br label %405

108:                                              ; preds = %100
  %109 = bitcast i16* %103 to i32*
  %110 = bitcast i16* %18 to i32*
  %111 = load i32, i32* %109, align 2
  store i32 %111, i32* %110, align 2
  br label %405

112:                                              ; preds = %100
  %113 = bitcast i16* %18 to i8*
  %114 = bitcast i16* %103 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %113, i8* align 2 %114, i64 6, i1 false) #7
  br label %405

115:                                              ; preds = %100
  %116 = bitcast i16* %103 to i64*
  %117 = bitcast i16* %18 to i64*
  %118 = load i64, i64* %116, align 2
  store i64 %118, i64* %117, align 2
  br label %405

119:                                              ; preds = %100
  %120 = bitcast i16* %18 to i8*
  %121 = bitcast i16* %103 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %120, i8* align 2 %121, i64 10, i1 false) #7
  br label %405

122:                                              ; preds = %100
  %123 = bitcast i16* %18 to i8*
  %124 = bitcast i16* %103 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %123, i8* align 2 %124, i64 12, i1 false) #7
  br label %405

125:                                              ; preds = %100
  %126 = bitcast i16* %18 to i8*
  %127 = bitcast i16* %103 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %126, i8* align 2 %127, i64 14, i1 false) #7
  br label %405

128:                                              ; preds = %100
  %129 = bitcast i16* %18 to i8*
  %130 = bitcast i16* %103 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %129, i8* align 2 %130, i64 16, i1 false) #7
  br label %405

131:                                              ; preds = %100
  %132 = bitcast i16* %18 to i8*
  %133 = bitcast i16* %103 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %132, i8* align 2 %133, i64 18, i1 false) #7
  br label %405

134:                                              ; preds = %100
  %135 = bitcast i16* %18 to i8*
  %136 = bitcast i16* %103 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %135, i8* align 2 %136, i64 20, i1 false) #7
  br label %405

137:                                              ; preds = %100
  %138 = bitcast i16* %18 to i8*
  %139 = bitcast i16* %103 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %138, i8* align 2 %139, i64 22, i1 false) #7
  br label %405

140:                                              ; preds = %100
  %141 = bitcast i16* %18 to i8*
  %142 = bitcast i16* %103 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %141, i8* align 2 %142, i64 24, i1 false) #7
  br label %405

143:                                              ; preds = %100
  %144 = bitcast i16* %18 to i8*
  %145 = bitcast i16* %103 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %144, i8* align 2 %145, i64 26, i1 false) #7
  br label %405

146:                                              ; preds = %100
  %147 = bitcast i16* %18 to i8*
  %148 = bitcast i16* %103 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %147, i8* align 2 %148, i64 28, i1 false) #7
  br label %405

149:                                              ; preds = %100
  %150 = bitcast i16* %18 to i8*
  %151 = bitcast i16* %103 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %150, i8* align 2 %151, i64 30, i1 false) #7
  br label %405

152:                                              ; preds = %100
  %153 = bitcast i16* %18 to i8*
  %154 = bitcast i16* %103 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %153, i8* align 2 %154, i64 32, i1 false) #7
  br label %405

155:                                              ; preds = %100
  %156 = shl nuw nsw i64 %105, 1
  %157 = bitcast i16* %18 to i8*
  %158 = bitcast i16* %103 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %157, i8* align 2 %158, i64 %156, i1 false) #7
  br label %405

159:                                              ; preds = %16
  %160 = add i64 %17, 11
  %161 = inttoptr i64 %160 to i8*
  %162 = sext i32 %19 to i64
  %163 = getelementptr inbounds i8, i8* %161, i64 %162
  %164 = sub nsw i32 %20, %19
  %165 = sext i32 %164 to i64
  call void @_ZN2v88internal9CopyCharsIhtEEvPT0_PKT_m(i16* %18, i8* %163, i64 %165)
  br label %405

166:                                              ; preds = %16
  %167 = add i64 %17, 11
  %168 = inttoptr i64 %167 to i16*
  %169 = sext i32 %19 to i64
  %170 = getelementptr inbounds i16, i16* %168, i64 %169
  %171 = sub nsw i32 %20, %19
  %172 = sext i32 %171 to i64
  switch i64 %172, label %222 [
    i64 1, label %173
    i64 2, label %175
    i64 3, label %179
    i64 4, label %182
    i64 5, label %186
    i64 6, label %189
    i64 7, label %192
    i64 8, label %195
    i64 9, label %198
    i64 10, label %201
    i64 11, label %204
    i64 12, label %207
    i64 13, label %210
    i64 14, label %213
    i64 15, label %216
    i64 16, label %219
    i64 0, label %405
  ]

173:                                              ; preds = %166
  %174 = load i16, i16* %170, align 2
  store i16 %174, i16* %18, align 2
  br label %405

175:                                              ; preds = %166
  %176 = bitcast i16* %170 to i32*
  %177 = bitcast i16* %18 to i32*
  %178 = load i32, i32* %176, align 2
  store i32 %178, i32* %177, align 2
  br label %405

179:                                              ; preds = %166
  %180 = bitcast i16* %18 to i8*
  %181 = bitcast i16* %170 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %180, i8* align 2 %181, i64 6, i1 false) #7
  br label %405

182:                                              ; preds = %166
  %183 = bitcast i16* %170 to i64*
  %184 = bitcast i16* %18 to i64*
  %185 = load i64, i64* %183, align 2
  store i64 %185, i64* %184, align 2
  br label %405

186:                                              ; preds = %166
  %187 = bitcast i16* %18 to i8*
  %188 = bitcast i16* %170 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %187, i8* align 2 %188, i64 10, i1 false) #7
  br label %405

189:                                              ; preds = %166
  %190 = bitcast i16* %18 to i8*
  %191 = bitcast i16* %170 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %190, i8* align 2 %191, i64 12, i1 false) #7
  br label %405

192:                                              ; preds = %166
  %193 = bitcast i16* %18 to i8*
  %194 = bitcast i16* %170 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %193, i8* align 2 %194, i64 14, i1 false) #7
  br label %405

195:                                              ; preds = %166
  %196 = bitcast i16* %18 to i8*
  %197 = bitcast i16* %170 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %196, i8* align 2 %197, i64 16, i1 false) #7
  br label %405

198:                                              ; preds = %166
  %199 = bitcast i16* %18 to i8*
  %200 = bitcast i16* %170 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %199, i8* align 2 %200, i64 18, i1 false) #7
  br label %405

201:                                              ; preds = %166
  %202 = bitcast i16* %18 to i8*
  %203 = bitcast i16* %170 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %202, i8* align 2 %203, i64 20, i1 false) #7
  br label %405

204:                                              ; preds = %166
  %205 = bitcast i16* %18 to i8*
  %206 = bitcast i16* %170 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %205, i8* align 2 %206, i64 22, i1 false) #7
  br label %405

207:                                              ; preds = %166
  %208 = bitcast i16* %18 to i8*
  %209 = bitcast i16* %170 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %208, i8* align 2 %209, i64 24, i1 false) #7
  br label %405

210:                                              ; preds = %166
  %211 = bitcast i16* %18 to i8*
  %212 = bitcast i16* %170 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %211, i8* align 2 %212, i64 26, i1 false) #7
  br label %405

213:                                              ; preds = %166
  %214 = bitcast i16* %18 to i8*
  %215 = bitcast i16* %170 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %214, i8* align 2 %215, i64 28, i1 false) #7
  br label %405

216:                                              ; preds = %166
  %217 = bitcast i16* %18 to i8*
  %218 = bitcast i16* %170 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %217, i8* align 2 %218, i64 30, i1 false) #7
  br label %405

219:                                              ; preds = %166
  %220 = bitcast i16* %18 to i8*
  %221 = bitcast i16* %170 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %220, i8* align 2 %221, i64 32, i1 false) #7
  br label %405

222:                                              ; preds = %166
  %223 = shl nuw nsw i64 %172, 1
  %224 = bitcast i16* %18 to i8*
  %225 = bitcast i16* %170 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %224, i8* align 2 %225, i64 %223, i1 false) #7
  br label %405

226:                                              ; preds = %16, %16
  %227 = add i64 %17, 11
  %228 = inttoptr i64 %227 to i32*
  %229 = load i32, i32* %228, align 4
  %230 = zext i32 %229 to i64
  %231 = or i64 %21, %230
  %232 = add i64 %231, 7
  %233 = inttoptr i64 %232 to i32*
  %234 = load i32, i32* %233, align 4
  %235 = sub nsw i32 %20, %234
  %236 = sub nsw i32 %234, %19
  %237 = icmp slt i32 %235, %236
  br i1 %237, label %316, label %238

238:                                              ; preds = %226
  %239 = icmp slt i32 %19, %234
  br i1 %239, label %240, label %306

240:                                              ; preds = %238
  call void @_ZN2v88internal6String11WriteToFlatItEEvS1_PT_iiRKNS0_31SharedStringAccessGuardIfNeededE(i64 %231, i16* %18, i32 %19, i32 %234, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16) %4)
  %241 = icmp eq i32 %19, 0
  br i1 %241, label %242, label %303

242:                                              ; preds = %240
  %243 = add i64 %17, 15
  %244 = inttoptr i64 %243 to i32*
  %245 = load i32, i32* %244, align 4
  %246 = icmp eq i32 %245, %229
  br i1 %246, label %247, label %303

247:                                              ; preds = %242
  %248 = sext i32 %234 to i64
  %249 = getelementptr inbounds i16, i16* %18, i64 %248
  switch i64 %248, label %299 [
    i64 1, label %250
    i64 2, label %252
    i64 3, label %256
    i64 4, label %259
    i64 5, label %263
    i64 6, label %266
    i64 7, label %269
    i64 8, label %272
    i64 9, label %275
    i64 10, label %278
    i64 11, label %281
    i64 12, label %284
    i64 13, label %287
    i64 14, label %290
    i64 15, label %293
    i64 16, label %296
    i64 0, label %405
  ]

250:                                              ; preds = %247
  %251 = load i16, i16* %18, align 2
  store i16 %251, i16* %249, align 2
  br label %405

252:                                              ; preds = %247
  %253 = bitcast i16* %18 to i32*
  %254 = bitcast i16* %249 to i32*
  %255 = load i32, i32* %253, align 2
  store i32 %255, i32* %254, align 2
  br label %405

256:                                              ; preds = %247
  %257 = bitcast i16* %249 to i8*
  %258 = bitcast i16* %18 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %257, i8* align 2 %258, i64 6, i1 false) #7
  br label %405

259:                                              ; preds = %247
  %260 = bitcast i16* %18 to i64*
  %261 = bitcast i16* %249 to i64*
  %262 = load i64, i64* %260, align 2
  store i64 %262, i64* %261, align 2
  br label %405

263:                                              ; preds = %247
  %264 = bitcast i16* %249 to i8*
  %265 = bitcast i16* %18 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %264, i8* align 2 %265, i64 10, i1 false) #7
  br label %405

266:                                              ; preds = %247
  %267 = bitcast i16* %249 to i8*
  %268 = bitcast i16* %18 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %267, i8* align 2 %268, i64 12, i1 false) #7
  br label %405

269:                                              ; preds = %247
  %270 = bitcast i16* %249 to i8*
  %271 = bitcast i16* %18 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %270, i8* align 2 %271, i64 14, i1 false) #7
  br label %405

272:                                              ; preds = %247
  %273 = bitcast i16* %249 to i8*
  %274 = bitcast i16* %18 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %273, i8* align 2 %274, i64 16, i1 false) #7
  br label %405

275:                                              ; preds = %247
  %276 = bitcast i16* %249 to i8*
  %277 = bitcast i16* %18 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %276, i8* align 2 %277, i64 18, i1 false) #7
  br label %405

278:                                              ; preds = %247
  %279 = bitcast i16* %249 to i8*
  %280 = bitcast i16* %18 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %279, i8* align 2 %280, i64 20, i1 false) #7
  br label %405

281:                                              ; preds = %247
  %282 = bitcast i16* %249 to i8*
  %283 = bitcast i16* %18 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %282, i8* align 2 %283, i64 22, i1 false) #7
  br label %405

284:                                              ; preds = %247
  %285 = bitcast i16* %249 to i8*
  %286 = bitcast i16* %18 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %285, i8* align 2 %286, i64 24, i1 false) #7
  br label %405

287:                                              ; preds = %247
  %288 = bitcast i16* %249 to i8*
  %289 = bitcast i16* %18 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %288, i8* align 2 %289, i64 26, i1 false) #7
  br label %405

290:                                              ; preds = %247
  %291 = bitcast i16* %249 to i8*
  %292 = bitcast i16* %18 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %291, i8* align 2 %292, i64 28, i1 false) #7
  br label %405

293:                                              ; preds = %247
  %294 = bitcast i16* %249 to i8*
  %295 = bitcast i16* %18 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %294, i8* align 2 %295, i64 30, i1 false) #7
  br label %405

296:                                              ; preds = %247
  %297 = bitcast i16* %249 to i8*
  %298 = bitcast i16* %18 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %297, i8* align 2 %298, i64 32, i1 false) #7
  br label %405

299:                                              ; preds = %247
  %300 = shl nuw nsw i64 %248, 1
  %301 = bitcast i16* %249 to i8*
  %302 = bitcast i16* %18 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %301, i8* align 2 %302, i64 %300, i1 false) #7
  br label %405

303:                                              ; preds = %240, %242
  %304 = sext i32 %236 to i64
  %305 = getelementptr inbounds i16, i16* %18, i64 %304
  br label %308

306:                                              ; preds = %238
  %307 = sub nsw i32 %19, %234
  br label %308

308:                                              ; preds = %306, %303
  %309 = phi i32 [ 0, %303 ], [ %307, %306 ]
  %310 = phi i16* [ %305, %303 ], [ %18, %306 ]
  %311 = add i64 %17, 15
  %312 = inttoptr i64 %311 to i32*
  %313 = load i32, i32* %312, align 4
  %314 = zext i32 %313 to i64
  %315 = or i64 %21, %314
  br label %399

316:                                              ; preds = %226
  %317 = icmp sgt i32 %20, %234
  br i1 %317, label %318, label %399

318:                                              ; preds = %316
  %319 = add i64 %17, 15
  %320 = inttoptr i64 %319 to i32*
  %321 = load i32, i32* %320, align 4
  %322 = zext i32 %321 to i64
  %323 = or i64 %21, %322
  %324 = icmp eq i32 %235, 1
  br i1 %324, label %325, label %338

325:                                              ; preds = %318
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #7
  store i32 0, i32* %7, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #7
  %326 = add i64 %323, -1
  %327 = inttoptr i64 %326 to i32*
  %328 = load atomic i32, i32* %327 acquire, align 4
  %329 = zext i32 %328 to i64
  %330 = or i64 %21, %329
  %331 = add i64 %330, 7
  %332 = inttoptr i64 %331 to i16*
  %333 = load atomic i16, i16* %332 monotonic, align 2
  %334 = zext i16 %333 to i32
  store i32 %334, i32* %13, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #7
  store i64 %323, i64* %15, align 8
  %335 = call zeroext i16 @_ZN2v88internal11StringShape33DispatchToSpecificTypeWithoutCastIZNS1_22DispatchToSpecificTypeIZNKS0_6String7GetImplEiE19StringGetDispatchertJRiEEET0_S4_DpOT1_E17CastingDispatchertJRS4_S6_EEES7_SA_(%"class.v8::internal::StringShape"* nonnull %8, %"class.v8::internal::String"* nonnull dereferenceable(8) %6, i32* nonnull dereferenceable(4) %7) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #7
  %336 = sext i32 %236 to i64
  %337 = getelementptr inbounds i16, i16* %18, i64 %336
  store i16 %335, i16* %337, align 2
  br label %399

338:                                              ; preds = %318
  %339 = add i64 %323, -1
  %340 = inttoptr i64 %339 to i32*
  %341 = load atomic i32, i32* %340 monotonic, align 4
  %342 = zext i32 %341 to i64
  %343 = or i64 %21, %342
  %344 = add i64 %343, 7
  %345 = inttoptr i64 %344 to i16*
  %346 = load atomic i16, i16* %345 monotonic, align 2
  %347 = icmp ult i16 %346, 64
  br i1 %347, label %348, label %375

348:                                              ; preds = %338
  %349 = load atomic i32, i32* %340 monotonic, align 4
  %350 = zext i32 %349 to i64
  %351 = or i64 %21, %350
  %352 = add i64 %351, 7
  %353 = inttoptr i64 %352 to i16*
  %354 = load atomic i16, i16* %353 monotonic, align 2
  %355 = and i16 %354, 7
  %356 = icmp eq i16 %355, 0
  br i1 %356, label %357, label %375

357:                                              ; preds = %348
  %358 = load atomic i32, i32* %340 monotonic, align 4
  %359 = zext i32 %358 to i64
  %360 = or i64 %21, %359
  %361 = add i64 %360, 7
  %362 = inttoptr i64 %361 to i16*
  %363 = load atomic i16, i16* %362 monotonic, align 2
  %364 = and i16 %363, 8
  %365 = icmp eq i16 %364, 0
  br i1 %365, label %375, label %366

366:                                              ; preds = %357
  %367 = sext i32 %234 to i64
  %368 = getelementptr inbounds i16, i16* %18, i64 %367
  %369 = sext i32 %19 to i64
  %370 = sub nsw i64 0, %369
  %371 = getelementptr inbounds i16, i16* %368, i64 %370
  %372 = add i64 %323, 11
  %373 = inttoptr i64 %372 to i8*
  %374 = sext i32 %235 to i64
  call void @_ZN2v88internal9CopyCharsIhtEEvPT0_PKT_m(i16* %371, i8* %373, i64 %374)
  br label %399

375:                                              ; preds = %357, %348, %338
  %376 = sext i32 %234 to i64
  %377 = getelementptr inbounds i16, i16* %18, i64 %376
  %378 = sext i32 %19 to i64
  %379 = sub nsw i64 0, %378
  %380 = getelementptr inbounds i16, i16* %377, i64 %379
  call void @_ZN2v88internal6String11WriteToFlatItEEvS1_PT_iiRKNS0_31SharedStringAccessGuardIfNeededE(i64 %323, i16* %380, i32 0, i32 %235, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16) %4)
  br label %399

381:                                              ; preds = %16, %16
  %382 = add i64 %17, 15
  %383 = inttoptr i64 %382 to i32*
  %384 = load i32, i32* %383, align 4
  %385 = ashr i32 %384, 1
  %386 = add i64 %17, 11
  %387 = inttoptr i64 %386 to i32*
  %388 = load i32, i32* %387, align 4
  %389 = zext i32 %388 to i64
  %390 = or i64 %21, %389
  %391 = add i32 %385, %19
  %392 = add i32 %385, %20
  call void @_ZN2v88internal6String11WriteToFlatItEEvS1_PT_iiRKNS0_31SharedStringAccessGuardIfNeededE(i64 %390, i16* %18, i32 %391, i32 %392, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16) %4)
  br label %405

393:                                              ; preds = %16, %16
  %394 = add i64 %17, 11
  %395 = inttoptr i64 %394 to i32*
  %396 = load i32, i32* %395, align 4
  %397 = zext i32 %396 to i64
  %398 = or i64 %21, %397
  br label %399

399:                                              ; preds = %308, %325, %375, %366, %316, %16, %393
  %400 = phi i32 [ %20, %16 ], [ %20, %393 ], [ %235, %308 ], [ %20, %316 ], [ %234, %366 ], [ %234, %375 ], [ %234, %325 ]
  %401 = phi i32 [ %19, %16 ], [ %19, %393 ], [ %309, %308 ], [ %19, %316 ], [ %19, %366 ], [ %19, %375 ], [ %19, %325 ]
  %402 = phi i16* [ %18, %16 ], [ %18, %393 ], [ %310, %308 ], [ %18, %316 ], [ %18, %366 ], [ %18, %375 ], [ %18, %325 ]
  %403 = phi i64 [ %17, %16 ], [ %398, %393 ], [ %315, %308 ], [ %231, %316 ], [ %231, %366 ], [ %231, %375 ], [ %231, %325 ]
  %404 = icmp sgt i32 %400, %401
  br i1 %404, label %16, label %405

405:                                              ; preds = %399, %5, %299, %296, %293, %290, %287, %284, %281, %278, %275, %272, %269, %266, %263, %259, %256, %252, %250, %247, %222, %219, %216, %213, %210, %207, %204, %201, %198, %195, %192, %189, %186, %182, %179, %175, %173, %166, %155, %152, %149, %146, %143, %140, %137, %134, %131, %128, %125, %122, %119, %115, %112, %108, %106, %100, %381, %159, %63
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal6String11WriteToFlatIhEEvS1_PT_ii(i64, i8*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::SharedStringAccessGuardIfNeeded", align 8
  %6 = getelementptr inbounds %"class.v8::internal::SharedStringAccessGuardIfNeeded", %"class.v8::internal::SharedStringAccessGuardIfNeeded"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 16, i1 false) #7, !alias.scope !6
  call void @_ZN2v88internal6String11WriteToFlatIhEEvS1_PT_iiRKNS0_31SharedStringAccessGuardIfNeededE(i64 %0, i8* %1, i32 %2, i32 %3, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* nonnull dereferenceable(16) %5)
  %7 = load i8, i8* %6, align 8, !range !5
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.v8::internal::SharedStringAccessGuardIfNeeded", %"class.v8::internal::SharedStringAccessGuardIfNeeded"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %11 = load %"class.v8::base::SharedMutex"*, %"class.v8::base::SharedMutex"** %10, align 8
  call void @_ZN2v84base11SharedMutex12UnlockSharedEv(%"class.v8::base::SharedMutex"* %11) #7
  br label %12

12:                                               ; preds = %4, %9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal6String11WriteToFlatIhEEvS1_PT_iiRKNS0_31SharedStringAccessGuardIfNeededE(i64, i8*, i32, i32, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.v8::internal::String", align 8
  %7 = alloca i32, align 4
  %8 = alloca %"class.v8::internal::StringShape", align 4
  %9 = icmp sgt i32 %3, %2
  br i1 %9, label %10, label %355

10:                                               ; preds = %5
  %11 = bitcast i32* %7 to i8*
  %12 = bitcast %"class.v8::internal::StringShape"* %8 to i8*
  %13 = getelementptr inbounds %"class.v8::internal::StringShape", %"class.v8::internal::StringShape"* %8, i64 0, i32 0
  %14 = bitcast %"class.v8::internal::String"* %6 to i8*
  %15 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %16

16:                                               ; preds = %10, %349
  %17 = phi i64 [ %0, %10 ], [ %353, %349 ]
  %18 = phi i8* [ %1, %10 ], [ %352, %349 ]
  %19 = phi i32 [ %2, %10 ], [ %351, %349 ]
  %20 = phi i32 [ %3, %10 ], [ %350, %349 ]
  %21 = and i64 %17, -4294967296
  %22 = add i64 %17, -1
  %23 = inttoptr i64 %22 to i32*
  %24 = load atomic i32, i32* %23 acquire, align 4
  %25 = zext i32 %24 to i64
  %26 = or i64 %21, %25
  %27 = add i64 %26, 7
  %28 = inttoptr i64 %27 to i16*
  %29 = load atomic i16, i16* %28 monotonic, align 2
  %30 = and i16 %29, 15
  %31 = zext i16 %30 to i32
  switch i32 %31, label %349 [
    i32 10, label %32
    i32 2, label %96
    i32 8, label %133
    i32 0, label %167
    i32 9, label %174
    i32 1, label %174
    i32 11, label %331
    i32 3, label %331
    i32 13, label %343
    i32 5, label %343
  ]

32:                                               ; preds = %16
  %33 = inttoptr i64 %22 to i32*
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = zext i32 %34 to i64
  %36 = or i64 %21, %35
  %37 = add i64 %36, 7
  %38 = inttoptr i64 %37 to i16*
  %39 = load atomic i16, i16* %38 monotonic, align 2
  %40 = and i16 %39, 16
  %41 = icmp eq i16 %40, 0
  %42 = add i64 %17, 11
  %43 = inttoptr i64 %42 to %"class.v8::String::ExternalOneByteStringResource"**
  br i1 %41, label %56, label %44

44:                                               ; preds = %32
  %45 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %43, align 1
  %46 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %45, i64 0, i32 0
  %47 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %45 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %48 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %47, align 8
  %49 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %48, i64 2
  %50 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %49, align 8
  %51 = call zeroext i1 %50(%"class.v8::String::ExternalStringResourceBase"* %46) #7
  br i1 %51, label %52, label %56

52:                                               ; preds = %44
  %53 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %43, align 1
  call void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"* %53) #7
  %54 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %53, i64 0, i32 1
  %55 = load i8*, i8** %54, align 8
  br label %63

56:                                               ; preds = %32, %44
  %57 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %43, align 1
  %58 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %57 to i8* (%"class.v8::String::ExternalOneByteStringResource"*)***
  %59 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)**, i8* (%"class.v8::String::ExternalOneByteStringResource"*)*** %58, align 8
  %60 = getelementptr inbounds i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %59, i64 6
  %61 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %60, align 8
  %62 = call i8* %61(%"class.v8::String::ExternalOneByteStringResource"* %57) #7
  br label %63

63:                                               ; preds = %52, %56
  %64 = phi i8* [ %55, %52 ], [ %62, %56 ]
  %65 = sext i32 %19 to i64
  %66 = getelementptr inbounds i8, i8* %64, i64 %65
  %67 = sub nsw i32 %20, %19
  %68 = sext i32 %67 to i64
  switch i64 %68, label %95 [
    i64 1, label %69
    i64 2, label %71
    i64 3, label %75
    i64 4, label %76
    i64 5, label %80
    i64 6, label %81
    i64 7, label %82
    i64 8, label %83
    i64 9, label %87
    i64 10, label %88
    i64 11, label %89
    i64 12, label %90
    i64 13, label %91
    i64 14, label %92
    i64 15, label %93
    i64 16, label %94
    i64 0, label %355
  ]

69:                                               ; preds = %63
  %70 = load i8, i8* %66, align 1
  store i8 %70, i8* %18, align 1
  br label %355

71:                                               ; preds = %63
  %72 = bitcast i8* %66 to i16*
  %73 = bitcast i8* %18 to i16*
  %74 = load i16, i16* %72, align 1
  store i16 %74, i16* %73, align 1
  br label %355

75:                                               ; preds = %63
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %66, i64 3, i1 false) #7
  br label %355

76:                                               ; preds = %63
  %77 = bitcast i8* %66 to i32*
  %78 = bitcast i8* %18 to i32*
  %79 = load i32, i32* %77, align 1
  store i32 %79, i32* %78, align 1
  br label %355

80:                                               ; preds = %63
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %66, i64 5, i1 false) #7
  br label %355

81:                                               ; preds = %63
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %66, i64 6, i1 false) #7
  br label %355

82:                                               ; preds = %63
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %66, i64 7, i1 false) #7
  br label %355

83:                                               ; preds = %63
  %84 = bitcast i8* %66 to i64*
  %85 = bitcast i8* %18 to i64*
  %86 = load i64, i64* %84, align 1
  store i64 %86, i64* %85, align 1
  br label %355

87:                                               ; preds = %63
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %66, i64 9, i1 false) #7
  br label %355

88:                                               ; preds = %63
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %66, i64 10, i1 false) #7
  br label %355

89:                                               ; preds = %63
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %66, i64 11, i1 false) #7
  br label %355

90:                                               ; preds = %63
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %66, i64 12, i1 false) #7
  br label %355

91:                                               ; preds = %63
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %66, i64 13, i1 false) #7
  br label %355

92:                                               ; preds = %63
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %66, i64 14, i1 false) #7
  br label %355

93:                                               ; preds = %63
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %66, i64 15, i1 false) #7
  br label %355

94:                                               ; preds = %63
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %66, i64 16, i1 false) #7
  br label %355

95:                                               ; preds = %63
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %66, i64 %68, i1 false) #7
  br label %355

96:                                               ; preds = %16
  %97 = inttoptr i64 %22 to i32*
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = zext i32 %98 to i64
  %100 = or i64 %21, %99
  %101 = add i64 %100, 7
  %102 = inttoptr i64 %101 to i16*
  %103 = load atomic i16, i16* %102 monotonic, align 2
  %104 = and i16 %103, 16
  %105 = icmp eq i16 %104, 0
  %106 = add i64 %17, 11
  %107 = inttoptr i64 %106 to %"class.v8::String::ExternalStringResource"**
  br i1 %105, label %120, label %108

108:                                              ; preds = %96
  %109 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %107, align 1
  %110 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %109, i64 0, i32 0
  %111 = bitcast %"class.v8::String::ExternalStringResource"* %109 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %112 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %111, align 8
  %113 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %112, i64 2
  %114 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %113, align 8
  %115 = call zeroext i1 %114(%"class.v8::String::ExternalStringResourceBase"* %110) #7
  br i1 %115, label %116, label %120

116:                                              ; preds = %108
  %117 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %107, align 1
  call void @_ZNK2v86String22ExternalStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalStringResource"* %117) #7
  %118 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %117, i64 0, i32 1
  %119 = load i16*, i16** %118, align 8
  br label %127

120:                                              ; preds = %96, %108
  %121 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %107, align 1
  %122 = bitcast %"class.v8::String::ExternalStringResource"* %121 to i16* (%"class.v8::String::ExternalStringResource"*)***
  %123 = load i16* (%"class.v8::String::ExternalStringResource"*)**, i16* (%"class.v8::String::ExternalStringResource"*)*** %122, align 8
  %124 = getelementptr inbounds i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %123, i64 6
  %125 = load i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %124, align 8
  %126 = call i16* %125(%"class.v8::String::ExternalStringResource"* %121) #7
  br label %127

127:                                              ; preds = %116, %120
  %128 = phi i16* [ %119, %116 ], [ %126, %120 ]
  %129 = sext i32 %19 to i64
  %130 = getelementptr inbounds i16, i16* %128, i64 %129
  %131 = sub nsw i32 %20, %19
  %132 = sext i32 %131 to i64
  call void @_ZN2v88internal9CopyCharsIthEEvPT0_PKT_m(i8* %18, i16* %130, i64 %132)
  br label %355

133:                                              ; preds = %16
  %134 = add i64 %17, 11
  %135 = inttoptr i64 %134 to i8*
  %136 = sext i32 %19 to i64
  %137 = getelementptr inbounds i8, i8* %135, i64 %136
  %138 = sub nsw i32 %20, %19
  %139 = sext i32 %138 to i64
  switch i64 %139, label %166 [
    i64 1, label %140
    i64 2, label %142
    i64 3, label %146
    i64 4, label %147
    i64 5, label %151
    i64 6, label %152
    i64 7, label %153
    i64 8, label %154
    i64 9, label %158
    i64 10, label %159
    i64 11, label %160
    i64 12, label %161
    i64 13, label %162
    i64 14, label %163
    i64 15, label %164
    i64 16, label %165
    i64 0, label %355
  ]

140:                                              ; preds = %133
  %141 = load i8, i8* %137, align 1
  store i8 %141, i8* %18, align 1
  br label %355

142:                                              ; preds = %133
  %143 = bitcast i8* %137 to i16*
  %144 = bitcast i8* %18 to i16*
  %145 = load i16, i16* %143, align 1
  store i16 %145, i16* %144, align 1
  br label %355

146:                                              ; preds = %133
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %137, i64 3, i1 false) #7
  br label %355

147:                                              ; preds = %133
  %148 = bitcast i8* %137 to i32*
  %149 = bitcast i8* %18 to i32*
  %150 = load i32, i32* %148, align 1
  store i32 %150, i32* %149, align 1
  br label %355

151:                                              ; preds = %133
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %137, i64 5, i1 false) #7
  br label %355

152:                                              ; preds = %133
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %137, i64 6, i1 false) #7
  br label %355

153:                                              ; preds = %133
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %137, i64 7, i1 false) #7
  br label %355

154:                                              ; preds = %133
  %155 = bitcast i8* %137 to i64*
  %156 = bitcast i8* %18 to i64*
  %157 = load i64, i64* %155, align 1
  store i64 %157, i64* %156, align 1
  br label %355

158:                                              ; preds = %133
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %137, i64 9, i1 false) #7
  br label %355

159:                                              ; preds = %133
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %137, i64 10, i1 false) #7
  br label %355

160:                                              ; preds = %133
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %137, i64 11, i1 false) #7
  br label %355

161:                                              ; preds = %133
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %137, i64 12, i1 false) #7
  br label %355

162:                                              ; preds = %133
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %137, i64 13, i1 false) #7
  br label %355

163:                                              ; preds = %133
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %137, i64 14, i1 false) #7
  br label %355

164:                                              ; preds = %133
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %137, i64 15, i1 false) #7
  br label %355

165:                                              ; preds = %133
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %137, i64 16, i1 false) #7
  br label %355

166:                                              ; preds = %133
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %137, i64 %139, i1 false) #7
  br label %355

167:                                              ; preds = %16
  %168 = add i64 %17, 11
  %169 = inttoptr i64 %168 to i16*
  %170 = sext i32 %19 to i64
  %171 = getelementptr inbounds i16, i16* %169, i64 %170
  %172 = sub nsw i32 %20, %19
  %173 = sext i32 %172 to i64
  call void @_ZN2v88internal9CopyCharsIthEEvPT0_PKT_m(i8* %18, i16* %171, i64 %173)
  br label %355

174:                                              ; preds = %16, %16
  %175 = add i64 %17, 11
  %176 = inttoptr i64 %175 to i32*
  %177 = load i32, i32* %176, align 4
  %178 = zext i32 %177 to i64
  %179 = or i64 %21, %178
  %180 = add i64 %179, 7
  %181 = inttoptr i64 %180 to i32*
  %182 = load i32, i32* %181, align 4
  %183 = sub nsw i32 %20, %182
  %184 = sub nsw i32 %182, %19
  %185 = icmp slt i32 %183, %184
  br i1 %185, label %238, label %186

186:                                              ; preds = %174
  %187 = icmp slt i32 %19, %182
  br i1 %187, label %188, label %228

188:                                              ; preds = %186
  call void @_ZN2v88internal6String11WriteToFlatIhEEvS1_PT_iiRKNS0_31SharedStringAccessGuardIfNeededE(i64 %179, i8* %18, i32 %19, i32 %182, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16) %4)
  %189 = icmp eq i32 %19, 0
  br i1 %189, label %190, label %225

190:                                              ; preds = %188
  %191 = add i64 %17, 15
  %192 = inttoptr i64 %191 to i32*
  %193 = load i32, i32* %192, align 4
  %194 = icmp eq i32 %193, %177
  br i1 %194, label %195, label %225

195:                                              ; preds = %190
  %196 = sext i32 %182 to i64
  %197 = getelementptr inbounds i8, i8* %18, i64 %196
  switch i64 %196, label %224 [
    i64 1, label %198
    i64 2, label %200
    i64 3, label %204
    i64 4, label %205
    i64 5, label %209
    i64 6, label %210
    i64 7, label %211
    i64 8, label %212
    i64 9, label %216
    i64 10, label %217
    i64 11, label %218
    i64 12, label %219
    i64 13, label %220
    i64 14, label %221
    i64 15, label %222
    i64 16, label %223
    i64 0, label %355
  ]

198:                                              ; preds = %195
  %199 = load i8, i8* %18, align 1
  store i8 %199, i8* %197, align 1
  br label %355

200:                                              ; preds = %195
  %201 = bitcast i8* %18 to i16*
  %202 = bitcast i8* %197 to i16*
  %203 = load i16, i16* %201, align 1
  store i16 %203, i16* %202, align 1
  br label %355

204:                                              ; preds = %195
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %197, i8* align 1 %18, i64 3, i1 false) #7
  br label %355

205:                                              ; preds = %195
  %206 = bitcast i8* %18 to i32*
  %207 = bitcast i8* %197 to i32*
  %208 = load i32, i32* %206, align 1
  store i32 %208, i32* %207, align 1
  br label %355

209:                                              ; preds = %195
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %197, i8* align 1 %18, i64 5, i1 false) #7
  br label %355

210:                                              ; preds = %195
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %197, i8* align 1 %18, i64 6, i1 false) #7
  br label %355

211:                                              ; preds = %195
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %197, i8* align 1 %18, i64 7, i1 false) #7
  br label %355

212:                                              ; preds = %195
  %213 = bitcast i8* %18 to i64*
  %214 = bitcast i8* %197 to i64*
  %215 = load i64, i64* %213, align 1
  store i64 %215, i64* %214, align 1
  br label %355

216:                                              ; preds = %195
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %197, i8* align 1 %18, i64 9, i1 false) #7
  br label %355

217:                                              ; preds = %195
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %197, i8* align 1 %18, i64 10, i1 false) #7
  br label %355

218:                                              ; preds = %195
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %197, i8* align 1 %18, i64 11, i1 false) #7
  br label %355

219:                                              ; preds = %195
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %197, i8* align 1 %18, i64 12, i1 false) #7
  br label %355

220:                                              ; preds = %195
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %197, i8* align 1 %18, i64 13, i1 false) #7
  br label %355

221:                                              ; preds = %195
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %197, i8* align 1 %18, i64 14, i1 false) #7
  br label %355

222:                                              ; preds = %195
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %197, i8* align 1 %18, i64 15, i1 false) #7
  br label %355

223:                                              ; preds = %195
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %197, i8* align 1 %18, i64 16, i1 false) #7
  br label %355

224:                                              ; preds = %195
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %197, i8* align 1 %18, i64 %196, i1 false) #7
  br label %355

225:                                              ; preds = %188, %190
  %226 = sext i32 %184 to i64
  %227 = getelementptr inbounds i8, i8* %18, i64 %226
  br label %230

228:                                              ; preds = %186
  %229 = sub nsw i32 %19, %182
  br label %230

230:                                              ; preds = %228, %225
  %231 = phi i32 [ 0, %225 ], [ %229, %228 ]
  %232 = phi i8* [ %227, %225 ], [ %18, %228 ]
  %233 = add i64 %17, 15
  %234 = inttoptr i64 %233 to i32*
  %235 = load i32, i32* %234, align 4
  %236 = zext i32 %235 to i64
  %237 = or i64 %21, %236
  br label %349

238:                                              ; preds = %174
  %239 = icmp sgt i32 %20, %182
  br i1 %239, label %240, label %349

240:                                              ; preds = %238
  %241 = add i64 %17, 15
  %242 = inttoptr i64 %241 to i32*
  %243 = load i32, i32* %242, align 4
  %244 = zext i32 %243 to i64
  %245 = or i64 %21, %244
  %246 = icmp eq i32 %183, 1
  br i1 %246, label %247, label %261

247:                                              ; preds = %240
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #7
  store i32 0, i32* %7, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #7
  %248 = add i64 %245, -1
  %249 = inttoptr i64 %248 to i32*
  %250 = load atomic i32, i32* %249 acquire, align 4
  %251 = zext i32 %250 to i64
  %252 = or i64 %21, %251
  %253 = add i64 %252, 7
  %254 = inttoptr i64 %253 to i16*
  %255 = load atomic i16, i16* %254 monotonic, align 2
  %256 = zext i16 %255 to i32
  store i32 %256, i32* %13, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #7
  store i64 %245, i64* %15, align 8
  %257 = call zeroext i16 @_ZN2v88internal11StringShape33DispatchToSpecificTypeWithoutCastIZNS1_22DispatchToSpecificTypeIZNKS0_6String7GetImplEiE19StringGetDispatchertJRiEEET0_S4_DpOT1_E17CastingDispatchertJRS4_S6_EEES7_SA_(%"class.v8::internal::StringShape"* nonnull %8, %"class.v8::internal::String"* nonnull dereferenceable(8) %6, i32* nonnull dereferenceable(4) %7) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #7
  %258 = trunc i16 %257 to i8
  %259 = sext i32 %184 to i64
  %260 = getelementptr inbounds i8, i8* %18, i64 %259
  store i8 %258, i8* %260, align 1
  br label %349

261:                                              ; preds = %240
  %262 = add i64 %245, -1
  %263 = inttoptr i64 %262 to i32*
  %264 = load atomic i32, i32* %263 monotonic, align 4
  %265 = zext i32 %264 to i64
  %266 = or i64 %21, %265
  %267 = add i64 %266, 7
  %268 = inttoptr i64 %267 to i16*
  %269 = load atomic i16, i16* %268 monotonic, align 2
  %270 = icmp ult i16 %269, 64
  br i1 %270, label %271, label %325

271:                                              ; preds = %261
  %272 = load atomic i32, i32* %263 monotonic, align 4
  %273 = zext i32 %272 to i64
  %274 = or i64 %21, %273
  %275 = add i64 %274, 7
  %276 = inttoptr i64 %275 to i16*
  %277 = load atomic i16, i16* %276 monotonic, align 2
  %278 = and i16 %277, 7
  %279 = icmp eq i16 %278, 0
  br i1 %279, label %280, label %325

280:                                              ; preds = %271
  %281 = load atomic i32, i32* %263 monotonic, align 4
  %282 = zext i32 %281 to i64
  %283 = or i64 %21, %282
  %284 = add i64 %283, 7
  %285 = inttoptr i64 %284 to i16*
  %286 = load atomic i16, i16* %285 monotonic, align 2
  %287 = and i16 %286, 8
  %288 = icmp eq i16 %287, 0
  br i1 %288, label %325, label %289

289:                                              ; preds = %280
  %290 = sext i32 %182 to i64
  %291 = getelementptr inbounds i8, i8* %18, i64 %290
  %292 = sext i32 %19 to i64
  %293 = sub nsw i64 0, %292
  %294 = getelementptr inbounds i8, i8* %291, i64 %293
  %295 = add i64 %245, 11
  %296 = inttoptr i64 %295 to i8*
  %297 = sext i32 %183 to i64
  switch i64 %297, label %324 [
    i64 1, label %298
    i64 2, label %300
    i64 3, label %304
    i64 4, label %305
    i64 5, label %309
    i64 6, label %310
    i64 7, label %311
    i64 8, label %312
    i64 9, label %316
    i64 10, label %317
    i64 11, label %318
    i64 12, label %319
    i64 13, label %320
    i64 14, label %321
    i64 15, label %322
    i64 16, label %323
    i64 0, label %349
  ]

298:                                              ; preds = %289
  %299 = load i8, i8* %296, align 1
  store i8 %299, i8* %294, align 1
  br label %349

300:                                              ; preds = %289
  %301 = inttoptr i64 %295 to i16*
  %302 = bitcast i8* %294 to i16*
  %303 = load i16, i16* %301, align 1
  store i16 %303, i16* %302, align 1
  br label %349

304:                                              ; preds = %289
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %294, i8* align 1 %296, i64 3, i1 false) #7
  br label %349

305:                                              ; preds = %289
  %306 = inttoptr i64 %295 to i32*
  %307 = bitcast i8* %294 to i32*
  %308 = load i32, i32* %306, align 1
  store i32 %308, i32* %307, align 1
  br label %349

309:                                              ; preds = %289
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %294, i8* align 1 %296, i64 5, i1 false) #7
  br label %349

310:                                              ; preds = %289
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %294, i8* align 1 %296, i64 6, i1 false) #7
  br label %349

311:                                              ; preds = %289
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %294, i8* align 1 %296, i64 7, i1 false) #7
  br label %349

312:                                              ; preds = %289
  %313 = inttoptr i64 %295 to i64*
  %314 = bitcast i8* %294 to i64*
  %315 = load i64, i64* %313, align 1
  store i64 %315, i64* %314, align 1
  br label %349

316:                                              ; preds = %289
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %294, i8* align 1 %296, i64 9, i1 false) #7
  br label %349

317:                                              ; preds = %289
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %294, i8* align 1 %296, i64 10, i1 false) #7
  br label %349

318:                                              ; preds = %289
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %294, i8* align 1 %296, i64 11, i1 false) #7
  br label %349

319:                                              ; preds = %289
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %294, i8* align 1 %296, i64 12, i1 false) #7
  br label %349

320:                                              ; preds = %289
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %294, i8* align 1 %296, i64 13, i1 false) #7
  br label %349

321:                                              ; preds = %289
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %294, i8* align 1 %296, i64 14, i1 false) #7
  br label %349

322:                                              ; preds = %289
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %294, i8* align 1 %296, i64 15, i1 false) #7
  br label %349

323:                                              ; preds = %289
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %294, i8* align 1 %296, i64 16, i1 false) #7
  br label %349

324:                                              ; preds = %289
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %294, i8* align 1 %296, i64 %297, i1 false) #7
  br label %349

325:                                              ; preds = %280, %271, %261
  %326 = sext i32 %182 to i64
  %327 = getelementptr inbounds i8, i8* %18, i64 %326
  %328 = sext i32 %19 to i64
  %329 = sub nsw i64 0, %328
  %330 = getelementptr inbounds i8, i8* %327, i64 %329
  call void @_ZN2v88internal6String11WriteToFlatIhEEvS1_PT_iiRKNS0_31SharedStringAccessGuardIfNeededE(i64 %245, i8* %330, i32 0, i32 %183, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16) %4)
  br label %349

331:                                              ; preds = %16, %16
  %332 = add i64 %17, 15
  %333 = inttoptr i64 %332 to i32*
  %334 = load i32, i32* %333, align 4
  %335 = ashr i32 %334, 1
  %336 = add i64 %17, 11
  %337 = inttoptr i64 %336 to i32*
  %338 = load i32, i32* %337, align 4
  %339 = zext i32 %338 to i64
  %340 = or i64 %21, %339
  %341 = add i32 %335, %19
  %342 = add i32 %335, %20
  call void @_ZN2v88internal6String11WriteToFlatIhEEvS1_PT_iiRKNS0_31SharedStringAccessGuardIfNeededE(i64 %340, i8* %18, i32 %341, i32 %342, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16) %4)
  br label %355

343:                                              ; preds = %16, %16
  %344 = add i64 %17, 11
  %345 = inttoptr i64 %344 to i32*
  %346 = load i32, i32* %345, align 4
  %347 = zext i32 %346 to i64
  %348 = or i64 %21, %347
  br label %349

349:                                              ; preds = %238, %324, %323, %322, %321, %320, %319, %318, %317, %316, %312, %311, %310, %309, %305, %304, %300, %298, %289, %325, %247, %230, %16, %343
  %350 = phi i32 [ %20, %16 ], [ %20, %343 ], [ %182, %247 ], [ %182, %325 ], [ %182, %289 ], [ %182, %298 ], [ %182, %300 ], [ %182, %304 ], [ %182, %305 ], [ %182, %309 ], [ %182, %310 ], [ %182, %311 ], [ %182, %312 ], [ %182, %316 ], [ %182, %317 ], [ %182, %318 ], [ %182, %319 ], [ %182, %320 ], [ %182, %321 ], [ %182, %322 ], [ %182, %323 ], [ %182, %324 ], [ %20, %238 ], [ %183, %230 ]
  %351 = phi i32 [ %19, %16 ], [ %19, %343 ], [ %19, %247 ], [ %19, %325 ], [ %19, %289 ], [ %19, %298 ], [ %19, %300 ], [ %19, %304 ], [ %19, %305 ], [ %19, %309 ], [ %19, %310 ], [ %19, %311 ], [ %19, %312 ], [ %19, %316 ], [ %19, %317 ], [ %19, %318 ], [ %19, %319 ], [ %19, %320 ], [ %19, %321 ], [ %19, %322 ], [ %19, %323 ], [ %19, %324 ], [ %19, %238 ], [ %231, %230 ]
  %352 = phi i8* [ %18, %16 ], [ %18, %343 ], [ %18, %247 ], [ %18, %325 ], [ %18, %289 ], [ %18, %298 ], [ %18, %300 ], [ %18, %304 ], [ %18, %305 ], [ %18, %309 ], [ %18, %310 ], [ %18, %311 ], [ %18, %312 ], [ %18, %316 ], [ %18, %317 ], [ %18, %318 ], [ %18, %319 ], [ %18, %320 ], [ %18, %321 ], [ %18, %322 ], [ %18, %323 ], [ %18, %324 ], [ %18, %238 ], [ %232, %230 ]
  %353 = phi i64 [ %17, %16 ], [ %348, %343 ], [ %179, %247 ], [ %179, %325 ], [ %179, %289 ], [ %179, %298 ], [ %179, %300 ], [ %179, %304 ], [ %179, %305 ], [ %179, %309 ], [ %179, %310 ], [ %179, %311 ], [ %179, %312 ], [ %179, %316 ], [ %179, %317 ], [ %179, %318 ], [ %179, %319 ], [ %179, %320 ], [ %179, %321 ], [ %179, %322 ], [ %179, %323 ], [ %179, %324 ], [ %179, %238 ], [ %237, %230 ]
  %354 = icmp sgt i32 %350, %351
  br i1 %354, label %16, label %355

355:                                              ; preds = %349, %5, %195, %198, %200, %204, %205, %209, %210, %211, %212, %216, %217, %218, %219, %220, %221, %222, %223, %224, %166, %165, %164, %163, %162, %161, %160, %159, %158, %154, %153, %152, %151, %147, %146, %142, %140, %133, %95, %94, %93, %92, %91, %90, %89, %88, %87, %83, %82, %81, %80, %76, %75, %71, %69, %63, %331, %167, %127
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal9CopyCharsIhtEEvPT0_PKT_m(i16*, i8*, i64) local_unnamed_addr #0 comdat {
  %4 = bitcast i16* %0 to i8*
  switch i64 %2, label %533 [
    i64 1, label %530
    i64 2, label %523
    i64 3, label %512
    i64 4, label %497
    i64 5, label %478
    i64 6, label %455
    i64 7, label %428
    i64 8, label %397
    i64 9, label %362
    i64 10, label %323
    i64 11, label %280
    i64 12, label %233
    i64 13, label %182
    i64 14, label %127
    i64 15, label %68
    i64 16, label %5
  ]

5:                                                ; preds = %3
  %6 = load i8, i8* %1, align 1
  %7 = zext i8 %6 to i16
  store i16 %7, i16* %0, align 2
  %8 = getelementptr inbounds i16, i16* %0, i64 1
  %9 = getelementptr inbounds i8, i8* %1, i64 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i16
  store i16 %11, i16* %8, align 2
  %12 = getelementptr inbounds i16, i16* %0, i64 2
  %13 = getelementptr inbounds i8, i8* %1, i64 2
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i16
  store i16 %15, i16* %12, align 2
  %16 = getelementptr inbounds i16, i16* %0, i64 3
  %17 = getelementptr inbounds i8, i8* %1, i64 3
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i16
  store i16 %19, i16* %16, align 2
  %20 = getelementptr inbounds i16, i16* %0, i64 4
  %21 = getelementptr inbounds i8, i8* %1, i64 4
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i16
  store i16 %23, i16* %20, align 2
  %24 = getelementptr inbounds i16, i16* %0, i64 5
  %25 = getelementptr inbounds i8, i8* %1, i64 5
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i16
  store i16 %27, i16* %24, align 2
  %28 = getelementptr inbounds i16, i16* %0, i64 6
  %29 = getelementptr inbounds i8, i8* %1, i64 6
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i16
  store i16 %31, i16* %28, align 2
  %32 = getelementptr inbounds i16, i16* %0, i64 7
  %33 = getelementptr inbounds i8, i8* %1, i64 7
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i16
  store i16 %35, i16* %32, align 2
  %36 = getelementptr inbounds i16, i16* %0, i64 8
  %37 = getelementptr inbounds i8, i8* %1, i64 8
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i16
  store i16 %39, i16* %36, align 2
  %40 = getelementptr inbounds i16, i16* %0, i64 9
  %41 = getelementptr inbounds i8, i8* %1, i64 9
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i16
  store i16 %43, i16* %40, align 2
  %44 = getelementptr inbounds i16, i16* %0, i64 10
  %45 = getelementptr inbounds i8, i8* %1, i64 10
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i16
  store i16 %47, i16* %44, align 2
  %48 = getelementptr inbounds i16, i16* %0, i64 11
  %49 = getelementptr inbounds i8, i8* %1, i64 11
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i16
  store i16 %51, i16* %48, align 2
  %52 = getelementptr inbounds i16, i16* %0, i64 12
  %53 = getelementptr inbounds i8, i8* %1, i64 12
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i16
  store i16 %55, i16* %52, align 2
  %56 = getelementptr inbounds i16, i16* %0, i64 13
  %57 = getelementptr inbounds i8, i8* %1, i64 13
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i16
  store i16 %59, i16* %56, align 2
  %60 = getelementptr inbounds i16, i16* %0, i64 14
  %61 = getelementptr inbounds i8, i8* %1, i64 14
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i16
  store i16 %63, i16* %60, align 2
  %64 = getelementptr inbounds i16, i16* %0, i64 15
  %65 = getelementptr inbounds i8, i8* %1, i64 15
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i16
  store i16 %67, i16* %64, align 2
  br label %615

68:                                               ; preds = %3
  %69 = load i8, i8* %1, align 1
  %70 = zext i8 %69 to i16
  store i16 %70, i16* %0, align 2
  %71 = getelementptr inbounds i16, i16* %0, i64 1
  %72 = getelementptr inbounds i8, i8* %1, i64 1
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i16
  store i16 %74, i16* %71, align 2
  %75 = getelementptr inbounds i16, i16* %0, i64 2
  %76 = getelementptr inbounds i8, i8* %1, i64 2
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i16
  store i16 %78, i16* %75, align 2
  %79 = getelementptr inbounds i16, i16* %0, i64 3
  %80 = getelementptr inbounds i8, i8* %1, i64 3
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i16
  store i16 %82, i16* %79, align 2
  %83 = getelementptr inbounds i16, i16* %0, i64 4
  %84 = getelementptr inbounds i8, i8* %1, i64 4
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i16
  store i16 %86, i16* %83, align 2
  %87 = getelementptr inbounds i16, i16* %0, i64 5
  %88 = getelementptr inbounds i8, i8* %1, i64 5
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i16
  store i16 %90, i16* %87, align 2
  %91 = getelementptr inbounds i16, i16* %0, i64 6
  %92 = getelementptr inbounds i8, i8* %1, i64 6
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i16
  store i16 %94, i16* %91, align 2
  %95 = getelementptr inbounds i16, i16* %0, i64 7
  %96 = getelementptr inbounds i8, i8* %1, i64 7
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i16
  store i16 %98, i16* %95, align 2
  %99 = getelementptr inbounds i16, i16* %0, i64 8
  %100 = getelementptr inbounds i8, i8* %1, i64 8
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i16
  store i16 %102, i16* %99, align 2
  %103 = getelementptr inbounds i16, i16* %0, i64 9
  %104 = getelementptr inbounds i8, i8* %1, i64 9
  %105 = load i8, i8* %104, align 1
  %106 = zext i8 %105 to i16
  store i16 %106, i16* %103, align 2
  %107 = getelementptr inbounds i16, i16* %0, i64 10
  %108 = getelementptr inbounds i8, i8* %1, i64 10
  %109 = load i8, i8* %108, align 1
  %110 = zext i8 %109 to i16
  store i16 %110, i16* %107, align 2
  %111 = getelementptr inbounds i16, i16* %0, i64 11
  %112 = getelementptr inbounds i8, i8* %1, i64 11
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i16
  store i16 %114, i16* %111, align 2
  %115 = getelementptr inbounds i16, i16* %0, i64 12
  %116 = getelementptr inbounds i8, i8* %1, i64 12
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i16
  store i16 %118, i16* %115, align 2
  %119 = getelementptr inbounds i16, i16* %0, i64 13
  %120 = getelementptr inbounds i8, i8* %1, i64 13
  %121 = load i8, i8* %120, align 1
  %122 = zext i8 %121 to i16
  store i16 %122, i16* %119, align 2
  %123 = getelementptr inbounds i16, i16* %0, i64 14
  %124 = getelementptr inbounds i8, i8* %1, i64 14
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i16
  store i16 %126, i16* %123, align 2
  br label %615

127:                                              ; preds = %3
  %128 = load i8, i8* %1, align 1
  %129 = zext i8 %128 to i16
  store i16 %129, i16* %0, align 2
  %130 = getelementptr inbounds i16, i16* %0, i64 1
  %131 = getelementptr inbounds i8, i8* %1, i64 1
  %132 = load i8, i8* %131, align 1
  %133 = zext i8 %132 to i16
  store i16 %133, i16* %130, align 2
  %134 = getelementptr inbounds i16, i16* %0, i64 2
  %135 = getelementptr inbounds i8, i8* %1, i64 2
  %136 = load i8, i8* %135, align 1
  %137 = zext i8 %136 to i16
  store i16 %137, i16* %134, align 2
  %138 = getelementptr inbounds i16, i16* %0, i64 3
  %139 = getelementptr inbounds i8, i8* %1, i64 3
  %140 = load i8, i8* %139, align 1
  %141 = zext i8 %140 to i16
  store i16 %141, i16* %138, align 2
  %142 = getelementptr inbounds i16, i16* %0, i64 4
  %143 = getelementptr inbounds i8, i8* %1, i64 4
  %144 = load i8, i8* %143, align 1
  %145 = zext i8 %144 to i16
  store i16 %145, i16* %142, align 2
  %146 = getelementptr inbounds i16, i16* %0, i64 5
  %147 = getelementptr inbounds i8, i8* %1, i64 5
  %148 = load i8, i8* %147, align 1
  %149 = zext i8 %148 to i16
  store i16 %149, i16* %146, align 2
  %150 = getelementptr inbounds i16, i16* %0, i64 6
  %151 = getelementptr inbounds i8, i8* %1, i64 6
  %152 = load i8, i8* %151, align 1
  %153 = zext i8 %152 to i16
  store i16 %153, i16* %150, align 2
  %154 = getelementptr inbounds i16, i16* %0, i64 7
  %155 = getelementptr inbounds i8, i8* %1, i64 7
  %156 = load i8, i8* %155, align 1
  %157 = zext i8 %156 to i16
  store i16 %157, i16* %154, align 2
  %158 = getelementptr inbounds i16, i16* %0, i64 8
  %159 = getelementptr inbounds i8, i8* %1, i64 8
  %160 = load i8, i8* %159, align 1
  %161 = zext i8 %160 to i16
  store i16 %161, i16* %158, align 2
  %162 = getelementptr inbounds i16, i16* %0, i64 9
  %163 = getelementptr inbounds i8, i8* %1, i64 9
  %164 = load i8, i8* %163, align 1
  %165 = zext i8 %164 to i16
  store i16 %165, i16* %162, align 2
  %166 = getelementptr inbounds i16, i16* %0, i64 10
  %167 = getelementptr inbounds i8, i8* %1, i64 10
  %168 = load i8, i8* %167, align 1
  %169 = zext i8 %168 to i16
  store i16 %169, i16* %166, align 2
  %170 = getelementptr inbounds i16, i16* %0, i64 11
  %171 = getelementptr inbounds i8, i8* %1, i64 11
  %172 = load i8, i8* %171, align 1
  %173 = zext i8 %172 to i16
  store i16 %173, i16* %170, align 2
  %174 = getelementptr inbounds i16, i16* %0, i64 12
  %175 = getelementptr inbounds i8, i8* %1, i64 12
  %176 = load i8, i8* %175, align 1
  %177 = zext i8 %176 to i16
  store i16 %177, i16* %174, align 2
  %178 = getelementptr inbounds i16, i16* %0, i64 13
  %179 = getelementptr inbounds i8, i8* %1, i64 13
  %180 = load i8, i8* %179, align 1
  %181 = zext i8 %180 to i16
  store i16 %181, i16* %178, align 2
  br label %615

182:                                              ; preds = %3
  %183 = load i8, i8* %1, align 1
  %184 = zext i8 %183 to i16
  store i16 %184, i16* %0, align 2
  %185 = getelementptr inbounds i16, i16* %0, i64 1
  %186 = getelementptr inbounds i8, i8* %1, i64 1
  %187 = load i8, i8* %186, align 1
  %188 = zext i8 %187 to i16
  store i16 %188, i16* %185, align 2
  %189 = getelementptr inbounds i16, i16* %0, i64 2
  %190 = getelementptr inbounds i8, i8* %1, i64 2
  %191 = load i8, i8* %190, align 1
  %192 = zext i8 %191 to i16
  store i16 %192, i16* %189, align 2
  %193 = getelementptr inbounds i16, i16* %0, i64 3
  %194 = getelementptr inbounds i8, i8* %1, i64 3
  %195 = load i8, i8* %194, align 1
  %196 = zext i8 %195 to i16
  store i16 %196, i16* %193, align 2
  %197 = getelementptr inbounds i16, i16* %0, i64 4
  %198 = getelementptr inbounds i8, i8* %1, i64 4
  %199 = load i8, i8* %198, align 1
  %200 = zext i8 %199 to i16
  store i16 %200, i16* %197, align 2
  %201 = getelementptr inbounds i16, i16* %0, i64 5
  %202 = getelementptr inbounds i8, i8* %1, i64 5
  %203 = load i8, i8* %202, align 1
  %204 = zext i8 %203 to i16
  store i16 %204, i16* %201, align 2
  %205 = getelementptr inbounds i16, i16* %0, i64 6
  %206 = getelementptr inbounds i8, i8* %1, i64 6
  %207 = load i8, i8* %206, align 1
  %208 = zext i8 %207 to i16
  store i16 %208, i16* %205, align 2
  %209 = getelementptr inbounds i16, i16* %0, i64 7
  %210 = getelementptr inbounds i8, i8* %1, i64 7
  %211 = load i8, i8* %210, align 1
  %212 = zext i8 %211 to i16
  store i16 %212, i16* %209, align 2
  %213 = getelementptr inbounds i16, i16* %0, i64 8
  %214 = getelementptr inbounds i8, i8* %1, i64 8
  %215 = load i8, i8* %214, align 1
  %216 = zext i8 %215 to i16
  store i16 %216, i16* %213, align 2
  %217 = getelementptr inbounds i16, i16* %0, i64 9
  %218 = getelementptr inbounds i8, i8* %1, i64 9
  %219 = load i8, i8* %218, align 1
  %220 = zext i8 %219 to i16
  store i16 %220, i16* %217, align 2
  %221 = getelementptr inbounds i16, i16* %0, i64 10
  %222 = getelementptr inbounds i8, i8* %1, i64 10
  %223 = load i8, i8* %222, align 1
  %224 = zext i8 %223 to i16
  store i16 %224, i16* %221, align 2
  %225 = getelementptr inbounds i16, i16* %0, i64 11
  %226 = getelementptr inbounds i8, i8* %1, i64 11
  %227 = load i8, i8* %226, align 1
  %228 = zext i8 %227 to i16
  store i16 %228, i16* %225, align 2
  %229 = getelementptr inbounds i16, i16* %0, i64 12
  %230 = getelementptr inbounds i8, i8* %1, i64 12
  %231 = load i8, i8* %230, align 1
  %232 = zext i8 %231 to i16
  store i16 %232, i16* %229, align 2
  br label %615

233:                                              ; preds = %3
  %234 = load i8, i8* %1, align 1
  %235 = zext i8 %234 to i16
  store i16 %235, i16* %0, align 2
  %236 = getelementptr inbounds i16, i16* %0, i64 1
  %237 = getelementptr inbounds i8, i8* %1, i64 1
  %238 = load i8, i8* %237, align 1
  %239 = zext i8 %238 to i16
  store i16 %239, i16* %236, align 2
  %240 = getelementptr inbounds i16, i16* %0, i64 2
  %241 = getelementptr inbounds i8, i8* %1, i64 2
  %242 = load i8, i8* %241, align 1
  %243 = zext i8 %242 to i16
  store i16 %243, i16* %240, align 2
  %244 = getelementptr inbounds i16, i16* %0, i64 3
  %245 = getelementptr inbounds i8, i8* %1, i64 3
  %246 = load i8, i8* %245, align 1
  %247 = zext i8 %246 to i16
  store i16 %247, i16* %244, align 2
  %248 = getelementptr inbounds i16, i16* %0, i64 4
  %249 = getelementptr inbounds i8, i8* %1, i64 4
  %250 = load i8, i8* %249, align 1
  %251 = zext i8 %250 to i16
  store i16 %251, i16* %248, align 2
  %252 = getelementptr inbounds i16, i16* %0, i64 5
  %253 = getelementptr inbounds i8, i8* %1, i64 5
  %254 = load i8, i8* %253, align 1
  %255 = zext i8 %254 to i16
  store i16 %255, i16* %252, align 2
  %256 = getelementptr inbounds i16, i16* %0, i64 6
  %257 = getelementptr inbounds i8, i8* %1, i64 6
  %258 = load i8, i8* %257, align 1
  %259 = zext i8 %258 to i16
  store i16 %259, i16* %256, align 2
  %260 = getelementptr inbounds i16, i16* %0, i64 7
  %261 = getelementptr inbounds i8, i8* %1, i64 7
  %262 = load i8, i8* %261, align 1
  %263 = zext i8 %262 to i16
  store i16 %263, i16* %260, align 2
  %264 = getelementptr inbounds i16, i16* %0, i64 8
  %265 = getelementptr inbounds i8, i8* %1, i64 8
  %266 = load i8, i8* %265, align 1
  %267 = zext i8 %266 to i16
  store i16 %267, i16* %264, align 2
  %268 = getelementptr inbounds i16, i16* %0, i64 9
  %269 = getelementptr inbounds i8, i8* %1, i64 9
  %270 = load i8, i8* %269, align 1
  %271 = zext i8 %270 to i16
  store i16 %271, i16* %268, align 2
  %272 = getelementptr inbounds i16, i16* %0, i64 10
  %273 = getelementptr inbounds i8, i8* %1, i64 10
  %274 = load i8, i8* %273, align 1
  %275 = zext i8 %274 to i16
  store i16 %275, i16* %272, align 2
  %276 = getelementptr inbounds i16, i16* %0, i64 11
  %277 = getelementptr inbounds i8, i8* %1, i64 11
  %278 = load i8, i8* %277, align 1
  %279 = zext i8 %278 to i16
  store i16 %279, i16* %276, align 2
  br label %615

280:                                              ; preds = %3
  %281 = load i8, i8* %1, align 1
  %282 = zext i8 %281 to i16
  store i16 %282, i16* %0, align 2
  %283 = getelementptr inbounds i16, i16* %0, i64 1
  %284 = getelementptr inbounds i8, i8* %1, i64 1
  %285 = load i8, i8* %284, align 1
  %286 = zext i8 %285 to i16
  store i16 %286, i16* %283, align 2
  %287 = getelementptr inbounds i16, i16* %0, i64 2
  %288 = getelementptr inbounds i8, i8* %1, i64 2
  %289 = load i8, i8* %288, align 1
  %290 = zext i8 %289 to i16
  store i16 %290, i16* %287, align 2
  %291 = getelementptr inbounds i16, i16* %0, i64 3
  %292 = getelementptr inbounds i8, i8* %1, i64 3
  %293 = load i8, i8* %292, align 1
  %294 = zext i8 %293 to i16
  store i16 %294, i16* %291, align 2
  %295 = getelementptr inbounds i16, i16* %0, i64 4
  %296 = getelementptr inbounds i8, i8* %1, i64 4
  %297 = load i8, i8* %296, align 1
  %298 = zext i8 %297 to i16
  store i16 %298, i16* %295, align 2
  %299 = getelementptr inbounds i16, i16* %0, i64 5
  %300 = getelementptr inbounds i8, i8* %1, i64 5
  %301 = load i8, i8* %300, align 1
  %302 = zext i8 %301 to i16
  store i16 %302, i16* %299, align 2
  %303 = getelementptr inbounds i16, i16* %0, i64 6
  %304 = getelementptr inbounds i8, i8* %1, i64 6
  %305 = load i8, i8* %304, align 1
  %306 = zext i8 %305 to i16
  store i16 %306, i16* %303, align 2
  %307 = getelementptr inbounds i16, i16* %0, i64 7
  %308 = getelementptr inbounds i8, i8* %1, i64 7
  %309 = load i8, i8* %308, align 1
  %310 = zext i8 %309 to i16
  store i16 %310, i16* %307, align 2
  %311 = getelementptr inbounds i16, i16* %0, i64 8
  %312 = getelementptr inbounds i8, i8* %1, i64 8
  %313 = load i8, i8* %312, align 1
  %314 = zext i8 %313 to i16
  store i16 %314, i16* %311, align 2
  %315 = getelementptr inbounds i16, i16* %0, i64 9
  %316 = getelementptr inbounds i8, i8* %1, i64 9
  %317 = load i8, i8* %316, align 1
  %318 = zext i8 %317 to i16
  store i16 %318, i16* %315, align 2
  %319 = getelementptr inbounds i16, i16* %0, i64 10
  %320 = getelementptr inbounds i8, i8* %1, i64 10
  %321 = load i8, i8* %320, align 1
  %322 = zext i8 %321 to i16
  store i16 %322, i16* %319, align 2
  br label %615

323:                                              ; preds = %3
  %324 = load i8, i8* %1, align 1
  %325 = zext i8 %324 to i16
  store i16 %325, i16* %0, align 2
  %326 = getelementptr inbounds i16, i16* %0, i64 1
  %327 = getelementptr inbounds i8, i8* %1, i64 1
  %328 = load i8, i8* %327, align 1
  %329 = zext i8 %328 to i16
  store i16 %329, i16* %326, align 2
  %330 = getelementptr inbounds i16, i16* %0, i64 2
  %331 = getelementptr inbounds i8, i8* %1, i64 2
  %332 = load i8, i8* %331, align 1
  %333 = zext i8 %332 to i16
  store i16 %333, i16* %330, align 2
  %334 = getelementptr inbounds i16, i16* %0, i64 3
  %335 = getelementptr inbounds i8, i8* %1, i64 3
  %336 = load i8, i8* %335, align 1
  %337 = zext i8 %336 to i16
  store i16 %337, i16* %334, align 2
  %338 = getelementptr inbounds i16, i16* %0, i64 4
  %339 = getelementptr inbounds i8, i8* %1, i64 4
  %340 = load i8, i8* %339, align 1
  %341 = zext i8 %340 to i16
  store i16 %341, i16* %338, align 2
  %342 = getelementptr inbounds i16, i16* %0, i64 5
  %343 = getelementptr inbounds i8, i8* %1, i64 5
  %344 = load i8, i8* %343, align 1
  %345 = zext i8 %344 to i16
  store i16 %345, i16* %342, align 2
  %346 = getelementptr inbounds i16, i16* %0, i64 6
  %347 = getelementptr inbounds i8, i8* %1, i64 6
  %348 = load i8, i8* %347, align 1
  %349 = zext i8 %348 to i16
  store i16 %349, i16* %346, align 2
  %350 = getelementptr inbounds i16, i16* %0, i64 7
  %351 = getelementptr inbounds i8, i8* %1, i64 7
  %352 = load i8, i8* %351, align 1
  %353 = zext i8 %352 to i16
  store i16 %353, i16* %350, align 2
  %354 = getelementptr inbounds i16, i16* %0, i64 8
  %355 = getelementptr inbounds i8, i8* %1, i64 8
  %356 = load i8, i8* %355, align 1
  %357 = zext i8 %356 to i16
  store i16 %357, i16* %354, align 2
  %358 = getelementptr inbounds i16, i16* %0, i64 9
  %359 = getelementptr inbounds i8, i8* %1, i64 9
  %360 = load i8, i8* %359, align 1
  %361 = zext i8 %360 to i16
  store i16 %361, i16* %358, align 2
  br label %615

362:                                              ; preds = %3
  %363 = load i8, i8* %1, align 1
  %364 = zext i8 %363 to i16
  store i16 %364, i16* %0, align 2
  %365 = getelementptr inbounds i16, i16* %0, i64 1
  %366 = getelementptr inbounds i8, i8* %1, i64 1
  %367 = load i8, i8* %366, align 1
  %368 = zext i8 %367 to i16
  store i16 %368, i16* %365, align 2
  %369 = getelementptr inbounds i16, i16* %0, i64 2
  %370 = getelementptr inbounds i8, i8* %1, i64 2
  %371 = load i8, i8* %370, align 1
  %372 = zext i8 %371 to i16
  store i16 %372, i16* %369, align 2
  %373 = getelementptr inbounds i16, i16* %0, i64 3
  %374 = getelementptr inbounds i8, i8* %1, i64 3
  %375 = load i8, i8* %374, align 1
  %376 = zext i8 %375 to i16
  store i16 %376, i16* %373, align 2
  %377 = getelementptr inbounds i16, i16* %0, i64 4
  %378 = getelementptr inbounds i8, i8* %1, i64 4
  %379 = load i8, i8* %378, align 1
  %380 = zext i8 %379 to i16
  store i16 %380, i16* %377, align 2
  %381 = getelementptr inbounds i16, i16* %0, i64 5
  %382 = getelementptr inbounds i8, i8* %1, i64 5
  %383 = load i8, i8* %382, align 1
  %384 = zext i8 %383 to i16
  store i16 %384, i16* %381, align 2
  %385 = getelementptr inbounds i16, i16* %0, i64 6
  %386 = getelementptr inbounds i8, i8* %1, i64 6
  %387 = load i8, i8* %386, align 1
  %388 = zext i8 %387 to i16
  store i16 %388, i16* %385, align 2
  %389 = getelementptr inbounds i16, i16* %0, i64 7
  %390 = getelementptr inbounds i8, i8* %1, i64 7
  %391 = load i8, i8* %390, align 1
  %392 = zext i8 %391 to i16
  store i16 %392, i16* %389, align 2
  %393 = getelementptr inbounds i16, i16* %0, i64 8
  %394 = getelementptr inbounds i8, i8* %1, i64 8
  %395 = load i8, i8* %394, align 1
  %396 = zext i8 %395 to i16
  store i16 %396, i16* %393, align 2
  br label %615

397:                                              ; preds = %3
  %398 = load i8, i8* %1, align 1
  %399 = zext i8 %398 to i16
  store i16 %399, i16* %0, align 2
  %400 = getelementptr inbounds i16, i16* %0, i64 1
  %401 = getelementptr inbounds i8, i8* %1, i64 1
  %402 = load i8, i8* %401, align 1
  %403 = zext i8 %402 to i16
  store i16 %403, i16* %400, align 2
  %404 = getelementptr inbounds i16, i16* %0, i64 2
  %405 = getelementptr inbounds i8, i8* %1, i64 2
  %406 = load i8, i8* %405, align 1
  %407 = zext i8 %406 to i16
  store i16 %407, i16* %404, align 2
  %408 = getelementptr inbounds i16, i16* %0, i64 3
  %409 = getelementptr inbounds i8, i8* %1, i64 3
  %410 = load i8, i8* %409, align 1
  %411 = zext i8 %410 to i16
  store i16 %411, i16* %408, align 2
  %412 = getelementptr inbounds i16, i16* %0, i64 4
  %413 = getelementptr inbounds i8, i8* %1, i64 4
  %414 = load i8, i8* %413, align 1
  %415 = zext i8 %414 to i16
  store i16 %415, i16* %412, align 2
  %416 = getelementptr inbounds i16, i16* %0, i64 5
  %417 = getelementptr inbounds i8, i8* %1, i64 5
  %418 = load i8, i8* %417, align 1
  %419 = zext i8 %418 to i16
  store i16 %419, i16* %416, align 2
  %420 = getelementptr inbounds i16, i16* %0, i64 6
  %421 = getelementptr inbounds i8, i8* %1, i64 6
  %422 = load i8, i8* %421, align 1
  %423 = zext i8 %422 to i16
  store i16 %423, i16* %420, align 2
  %424 = getelementptr inbounds i16, i16* %0, i64 7
  %425 = getelementptr inbounds i8, i8* %1, i64 7
  %426 = load i8, i8* %425, align 1
  %427 = zext i8 %426 to i16
  store i16 %427, i16* %424, align 2
  br label %615

428:                                              ; preds = %3
  %429 = load i8, i8* %1, align 1
  %430 = zext i8 %429 to i16
  store i16 %430, i16* %0, align 2
  %431 = getelementptr inbounds i16, i16* %0, i64 1
  %432 = getelementptr inbounds i8, i8* %1, i64 1
  %433 = load i8, i8* %432, align 1
  %434 = zext i8 %433 to i16
  store i16 %434, i16* %431, align 2
  %435 = getelementptr inbounds i16, i16* %0, i64 2
  %436 = getelementptr inbounds i8, i8* %1, i64 2
  %437 = load i8, i8* %436, align 1
  %438 = zext i8 %437 to i16
  store i16 %438, i16* %435, align 2
  %439 = getelementptr inbounds i16, i16* %0, i64 3
  %440 = getelementptr inbounds i8, i8* %1, i64 3
  %441 = load i8, i8* %440, align 1
  %442 = zext i8 %441 to i16
  store i16 %442, i16* %439, align 2
  %443 = getelementptr inbounds i16, i16* %0, i64 4
  %444 = getelementptr inbounds i8, i8* %1, i64 4
  %445 = load i8, i8* %444, align 1
  %446 = zext i8 %445 to i16
  store i16 %446, i16* %443, align 2
  %447 = getelementptr inbounds i16, i16* %0, i64 5
  %448 = getelementptr inbounds i8, i8* %1, i64 5
  %449 = load i8, i8* %448, align 1
  %450 = zext i8 %449 to i16
  store i16 %450, i16* %447, align 2
  %451 = getelementptr inbounds i16, i16* %0, i64 6
  %452 = getelementptr inbounds i8, i8* %1, i64 6
  %453 = load i8, i8* %452, align 1
  %454 = zext i8 %453 to i16
  store i16 %454, i16* %451, align 2
  br label %615

455:                                              ; preds = %3
  %456 = load i8, i8* %1, align 1
  %457 = zext i8 %456 to i16
  store i16 %457, i16* %0, align 2
  %458 = getelementptr inbounds i16, i16* %0, i64 1
  %459 = getelementptr inbounds i8, i8* %1, i64 1
  %460 = load i8, i8* %459, align 1
  %461 = zext i8 %460 to i16
  store i16 %461, i16* %458, align 2
  %462 = getelementptr inbounds i16, i16* %0, i64 2
  %463 = getelementptr inbounds i8, i8* %1, i64 2
  %464 = load i8, i8* %463, align 1
  %465 = zext i8 %464 to i16
  store i16 %465, i16* %462, align 2
  %466 = getelementptr inbounds i16, i16* %0, i64 3
  %467 = getelementptr inbounds i8, i8* %1, i64 3
  %468 = load i8, i8* %467, align 1
  %469 = zext i8 %468 to i16
  store i16 %469, i16* %466, align 2
  %470 = getelementptr inbounds i16, i16* %0, i64 4
  %471 = getelementptr inbounds i8, i8* %1, i64 4
  %472 = load i8, i8* %471, align 1
  %473 = zext i8 %472 to i16
  store i16 %473, i16* %470, align 2
  %474 = getelementptr inbounds i16, i16* %0, i64 5
  %475 = getelementptr inbounds i8, i8* %1, i64 5
  %476 = load i8, i8* %475, align 1
  %477 = zext i8 %476 to i16
  store i16 %477, i16* %474, align 2
  br label %615

478:                                              ; preds = %3
  %479 = load i8, i8* %1, align 1
  %480 = zext i8 %479 to i16
  store i16 %480, i16* %0, align 2
  %481 = getelementptr inbounds i16, i16* %0, i64 1
  %482 = getelementptr inbounds i8, i8* %1, i64 1
  %483 = load i8, i8* %482, align 1
  %484 = zext i8 %483 to i16
  store i16 %484, i16* %481, align 2
  %485 = getelementptr inbounds i16, i16* %0, i64 2
  %486 = getelementptr inbounds i8, i8* %1, i64 2
  %487 = load i8, i8* %486, align 1
  %488 = zext i8 %487 to i16
  store i16 %488, i16* %485, align 2
  %489 = getelementptr inbounds i16, i16* %0, i64 3
  %490 = getelementptr inbounds i8, i8* %1, i64 3
  %491 = load i8, i8* %490, align 1
  %492 = zext i8 %491 to i16
  store i16 %492, i16* %489, align 2
  %493 = getelementptr inbounds i16, i16* %0, i64 4
  %494 = getelementptr inbounds i8, i8* %1, i64 4
  %495 = load i8, i8* %494, align 1
  %496 = zext i8 %495 to i16
  store i16 %496, i16* %493, align 2
  br label %615

497:                                              ; preds = %3
  %498 = load i8, i8* %1, align 1
  %499 = zext i8 %498 to i16
  store i16 %499, i16* %0, align 2
  %500 = getelementptr inbounds i16, i16* %0, i64 1
  %501 = getelementptr inbounds i8, i8* %1, i64 1
  %502 = load i8, i8* %501, align 1
  %503 = zext i8 %502 to i16
  store i16 %503, i16* %500, align 2
  %504 = getelementptr inbounds i16, i16* %0, i64 2
  %505 = getelementptr inbounds i8, i8* %1, i64 2
  %506 = load i8, i8* %505, align 1
  %507 = zext i8 %506 to i16
  store i16 %507, i16* %504, align 2
  %508 = getelementptr inbounds i16, i16* %0, i64 3
  %509 = getelementptr inbounds i8, i8* %1, i64 3
  %510 = load i8, i8* %509, align 1
  %511 = zext i8 %510 to i16
  store i16 %511, i16* %508, align 2
  br label %615

512:                                              ; preds = %3
  %513 = load i8, i8* %1, align 1
  %514 = zext i8 %513 to i16
  store i16 %514, i16* %0, align 2
  %515 = getelementptr inbounds i16, i16* %0, i64 1
  %516 = getelementptr inbounds i8, i8* %1, i64 1
  %517 = load i8, i8* %516, align 1
  %518 = zext i8 %517 to i16
  store i16 %518, i16* %515, align 2
  %519 = getelementptr inbounds i16, i16* %0, i64 2
  %520 = getelementptr inbounds i8, i8* %1, i64 2
  %521 = load i8, i8* %520, align 1
  %522 = zext i8 %521 to i16
  store i16 %522, i16* %519, align 2
  br label %615

523:                                              ; preds = %3
  %524 = load i8, i8* %1, align 1
  %525 = zext i8 %524 to i16
  store i16 %525, i16* %0, align 2
  %526 = getelementptr inbounds i16, i16* %0, i64 1
  %527 = getelementptr inbounds i8, i8* %1, i64 1
  %528 = load i8, i8* %527, align 1
  %529 = zext i8 %528 to i16
  store i16 %529, i16* %526, align 2
  br label %615

530:                                              ; preds = %3
  %531 = load i8, i8* %1, align 1
  %532 = zext i8 %531 to i16
  store i16 %532, i16* %0, align 2
  br label %615

533:                                              ; preds = %3
  %534 = getelementptr inbounds i8, i8* %1, i64 %2
  %535 = icmp eq i64 %2, 0
  br i1 %535, label %615, label %536

536:                                              ; preds = %533
  %537 = icmp ult i64 %2, 16
  br i1 %537, label %604, label %538

538:                                              ; preds = %536
  %539 = getelementptr i16, i16* %0, i64 %2
  %540 = bitcast i16* %539 to i8*
  %541 = icmp ugt i8* %534, %4
  %542 = icmp ugt i8* %540, %1
  %543 = and i1 %541, %542
  br i1 %543, label %604, label %544

544:                                              ; preds = %538
  %545 = and i64 %2, -16
  %546 = getelementptr i16, i16* %0, i64 %545
  %547 = getelementptr i8, i8* %1, i64 %545
  %548 = add i64 %545, -16
  %549 = lshr exact i64 %548, 4
  %550 = add nuw nsw i64 %549, 1
  %551 = and i64 %550, 1
  %552 = icmp eq i64 %548, 0
  br i1 %552, label %586, label %553

553:                                              ; preds = %544
  %554 = sub nuw nsw i64 %550, %551
  br label %555

555:                                              ; preds = %555, %553
  %556 = phi i64 [ 0, %553 ], [ %583, %555 ]
  %557 = phi i64 [ %554, %553 ], [ %584, %555 ]
  %558 = getelementptr i16, i16* %0, i64 %556
  %559 = getelementptr i8, i8* %1, i64 %556
  %560 = bitcast i8* %559 to <8 x i8>*
  %561 = load <8 x i8>, <8 x i8>* %560, align 1, !alias.scope !9
  %562 = getelementptr i8, i8* %559, i64 8
  %563 = bitcast i8* %562 to <8 x i8>*
  %564 = load <8 x i8>, <8 x i8>* %563, align 1, !alias.scope !9
  %565 = zext <8 x i8> %561 to <8 x i16>
  %566 = zext <8 x i8> %564 to <8 x i16>
  %567 = bitcast i16* %558 to <8 x i16>*
  store <8 x i16> %565, <8 x i16>* %567, align 2, !alias.scope !12, !noalias !9
  %568 = getelementptr i16, i16* %558, i64 8
  %569 = bitcast i16* %568 to <8 x i16>*
  store <8 x i16> %566, <8 x i16>* %569, align 2, !alias.scope !12, !noalias !9
  %570 = or i64 %556, 16
  %571 = getelementptr i16, i16* %0, i64 %570
  %572 = getelementptr i8, i8* %1, i64 %570
  %573 = bitcast i8* %572 to <8 x i8>*
  %574 = load <8 x i8>, <8 x i8>* %573, align 1, !alias.scope !9
  %575 = getelementptr i8, i8* %572, i64 8
  %576 = bitcast i8* %575 to <8 x i8>*
  %577 = load <8 x i8>, <8 x i8>* %576, align 1, !alias.scope !9
  %578 = zext <8 x i8> %574 to <8 x i16>
  %579 = zext <8 x i8> %577 to <8 x i16>
  %580 = bitcast i16* %571 to <8 x i16>*
  store <8 x i16> %578, <8 x i16>* %580, align 2, !alias.scope !12, !noalias !9
  %581 = getelementptr i16, i16* %571, i64 8
  %582 = bitcast i16* %581 to <8 x i16>*
  store <8 x i16> %579, <8 x i16>* %582, align 2, !alias.scope !12, !noalias !9
  %583 = add i64 %556, 32
  %584 = add i64 %557, -2
  %585 = icmp eq i64 %584, 0
  br i1 %585, label %586, label %555, !llvm.loop !14

586:                                              ; preds = %555, %544
  %587 = phi i64 [ 0, %544 ], [ %583, %555 ]
  %588 = icmp eq i64 %551, 0
  br i1 %588, label %602, label %589

589:                                              ; preds = %586
  %590 = getelementptr i16, i16* %0, i64 %587
  %591 = getelementptr i8, i8* %1, i64 %587
  %592 = bitcast i8* %591 to <8 x i8>*
  %593 = load <8 x i8>, <8 x i8>* %592, align 1, !alias.scope !9
  %594 = getelementptr i8, i8* %591, i64 8
  %595 = bitcast i8* %594 to <8 x i8>*
  %596 = load <8 x i8>, <8 x i8>* %595, align 1, !alias.scope !9
  %597 = zext <8 x i8> %593 to <8 x i16>
  %598 = zext <8 x i8> %596 to <8 x i16>
  %599 = bitcast i16* %590 to <8 x i16>*
  store <8 x i16> %597, <8 x i16>* %599, align 2, !alias.scope !12, !noalias !9
  %600 = getelementptr i16, i16* %590, i64 8
  %601 = bitcast i16* %600 to <8 x i16>*
  store <8 x i16> %598, <8 x i16>* %601, align 2, !alias.scope !12, !noalias !9
  br label %602

602:                                              ; preds = %586, %589
  %603 = icmp eq i64 %545, %2
  br i1 %603, label %615, label %604

604:                                              ; preds = %602, %538, %536
  %605 = phi i16* [ %0, %538 ], [ %0, %536 ], [ %546, %602 ]
  %606 = phi i8* [ %1, %538 ], [ %1, %536 ], [ %547, %602 ]
  br label %607

607:                                              ; preds = %604, %607
  %608 = phi i16* [ %613, %607 ], [ %605, %604 ]
  %609 = phi i8* [ %612, %607 ], [ %606, %604 ]
  %610 = load i8, i8* %609, align 1
  %611 = zext i8 %610 to i16
  store i16 %611, i16* %608, align 2
  %612 = getelementptr inbounds i8, i8* %609, i64 1
  %613 = getelementptr inbounds i16, i16* %608, i64 1
  %614 = icmp eq i8* %612, %534
  br i1 %614, label %615, label %607, !llvm.loop !16

615:                                              ; preds = %607, %602, %5, %68, %127, %182, %233, %280, %323, %362, %397, %428, %455, %478, %497, %512, %523, %530, %533
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal9CopyCharsIthEEvPT0_PKT_m(i8*, i16*, i64) local_unnamed_addr #0 comdat {
  %4 = bitcast i16* %1 to i8*
  switch i64 %2, label %533 [
    i64 1, label %530
    i64 2, label %523
    i64 3, label %512
    i64 4, label %497
    i64 5, label %478
    i64 6, label %455
    i64 7, label %428
    i64 8, label %397
    i64 9, label %362
    i64 10, label %323
    i64 11, label %280
    i64 12, label %233
    i64 13, label %182
    i64 14, label %127
    i64 15, label %68
    i64 16, label %5
  ]

5:                                                ; preds = %3
  %6 = load i16, i16* %1, align 2
  %7 = trunc i16 %6 to i8
  store i8 %7, i8* %0, align 1
  %8 = getelementptr inbounds i8, i8* %0, i64 1
  %9 = getelementptr inbounds i16, i16* %1, i64 1
  %10 = load i16, i16* %9, align 2
  %11 = trunc i16 %10 to i8
  store i8 %11, i8* %8, align 1
  %12 = getelementptr inbounds i8, i8* %0, i64 2
  %13 = getelementptr inbounds i16, i16* %1, i64 2
  %14 = load i16, i16* %13, align 2
  %15 = trunc i16 %14 to i8
  store i8 %15, i8* %12, align 1
  %16 = getelementptr inbounds i8, i8* %0, i64 3
  %17 = getelementptr inbounds i16, i16* %1, i64 3
  %18 = load i16, i16* %17, align 2
  %19 = trunc i16 %18 to i8
  store i8 %19, i8* %16, align 1
  %20 = getelementptr inbounds i8, i8* %0, i64 4
  %21 = getelementptr inbounds i16, i16* %1, i64 4
  %22 = load i16, i16* %21, align 2
  %23 = trunc i16 %22 to i8
  store i8 %23, i8* %20, align 1
  %24 = getelementptr inbounds i8, i8* %0, i64 5
  %25 = getelementptr inbounds i16, i16* %1, i64 5
  %26 = load i16, i16* %25, align 2
  %27 = trunc i16 %26 to i8
  store i8 %27, i8* %24, align 1
  %28 = getelementptr inbounds i8, i8* %0, i64 6
  %29 = getelementptr inbounds i16, i16* %1, i64 6
  %30 = load i16, i16* %29, align 2
  %31 = trunc i16 %30 to i8
  store i8 %31, i8* %28, align 1
  %32 = getelementptr inbounds i8, i8* %0, i64 7
  %33 = getelementptr inbounds i16, i16* %1, i64 7
  %34 = load i16, i16* %33, align 2
  %35 = trunc i16 %34 to i8
  store i8 %35, i8* %32, align 1
  %36 = getelementptr inbounds i8, i8* %0, i64 8
  %37 = getelementptr inbounds i16, i16* %1, i64 8
  %38 = load i16, i16* %37, align 2
  %39 = trunc i16 %38 to i8
  store i8 %39, i8* %36, align 1
  %40 = getelementptr inbounds i8, i8* %0, i64 9
  %41 = getelementptr inbounds i16, i16* %1, i64 9
  %42 = load i16, i16* %41, align 2
  %43 = trunc i16 %42 to i8
  store i8 %43, i8* %40, align 1
  %44 = getelementptr inbounds i8, i8* %0, i64 10
  %45 = getelementptr inbounds i16, i16* %1, i64 10
  %46 = load i16, i16* %45, align 2
  %47 = trunc i16 %46 to i8
  store i8 %47, i8* %44, align 1
  %48 = getelementptr inbounds i8, i8* %0, i64 11
  %49 = getelementptr inbounds i16, i16* %1, i64 11
  %50 = load i16, i16* %49, align 2
  %51 = trunc i16 %50 to i8
  store i8 %51, i8* %48, align 1
  %52 = getelementptr inbounds i8, i8* %0, i64 12
  %53 = getelementptr inbounds i16, i16* %1, i64 12
  %54 = load i16, i16* %53, align 2
  %55 = trunc i16 %54 to i8
  store i8 %55, i8* %52, align 1
  %56 = getelementptr inbounds i8, i8* %0, i64 13
  %57 = getelementptr inbounds i16, i16* %1, i64 13
  %58 = load i16, i16* %57, align 2
  %59 = trunc i16 %58 to i8
  store i8 %59, i8* %56, align 1
  %60 = getelementptr inbounds i8, i8* %0, i64 14
  %61 = getelementptr inbounds i16, i16* %1, i64 14
  %62 = load i16, i16* %61, align 2
  %63 = trunc i16 %62 to i8
  store i8 %63, i8* %60, align 1
  %64 = getelementptr inbounds i8, i8* %0, i64 15
  %65 = getelementptr inbounds i16, i16* %1, i64 15
  %66 = load i16, i16* %65, align 2
  %67 = trunc i16 %66 to i8
  store i8 %67, i8* %64, align 1
  br label %675

68:                                               ; preds = %3
  %69 = load i16, i16* %1, align 2
  %70 = trunc i16 %69 to i8
  store i8 %70, i8* %0, align 1
  %71 = getelementptr inbounds i8, i8* %0, i64 1
  %72 = getelementptr inbounds i16, i16* %1, i64 1
  %73 = load i16, i16* %72, align 2
  %74 = trunc i16 %73 to i8
  store i8 %74, i8* %71, align 1
  %75 = getelementptr inbounds i8, i8* %0, i64 2
  %76 = getelementptr inbounds i16, i16* %1, i64 2
  %77 = load i16, i16* %76, align 2
  %78 = trunc i16 %77 to i8
  store i8 %78, i8* %75, align 1
  %79 = getelementptr inbounds i8, i8* %0, i64 3
  %80 = getelementptr inbounds i16, i16* %1, i64 3
  %81 = load i16, i16* %80, align 2
  %82 = trunc i16 %81 to i8
  store i8 %82, i8* %79, align 1
  %83 = getelementptr inbounds i8, i8* %0, i64 4
  %84 = getelementptr inbounds i16, i16* %1, i64 4
  %85 = load i16, i16* %84, align 2
  %86 = trunc i16 %85 to i8
  store i8 %86, i8* %83, align 1
  %87 = getelementptr inbounds i8, i8* %0, i64 5
  %88 = getelementptr inbounds i16, i16* %1, i64 5
  %89 = load i16, i16* %88, align 2
  %90 = trunc i16 %89 to i8
  store i8 %90, i8* %87, align 1
  %91 = getelementptr inbounds i8, i8* %0, i64 6
  %92 = getelementptr inbounds i16, i16* %1, i64 6
  %93 = load i16, i16* %92, align 2
  %94 = trunc i16 %93 to i8
  store i8 %94, i8* %91, align 1
  %95 = getelementptr inbounds i8, i8* %0, i64 7
  %96 = getelementptr inbounds i16, i16* %1, i64 7
  %97 = load i16, i16* %96, align 2
  %98 = trunc i16 %97 to i8
  store i8 %98, i8* %95, align 1
  %99 = getelementptr inbounds i8, i8* %0, i64 8
  %100 = getelementptr inbounds i16, i16* %1, i64 8
  %101 = load i16, i16* %100, align 2
  %102 = trunc i16 %101 to i8
  store i8 %102, i8* %99, align 1
  %103 = getelementptr inbounds i8, i8* %0, i64 9
  %104 = getelementptr inbounds i16, i16* %1, i64 9
  %105 = load i16, i16* %104, align 2
  %106 = trunc i16 %105 to i8
  store i8 %106, i8* %103, align 1
  %107 = getelementptr inbounds i8, i8* %0, i64 10
  %108 = getelementptr inbounds i16, i16* %1, i64 10
  %109 = load i16, i16* %108, align 2
  %110 = trunc i16 %109 to i8
  store i8 %110, i8* %107, align 1
  %111 = getelementptr inbounds i8, i8* %0, i64 11
  %112 = getelementptr inbounds i16, i16* %1, i64 11
  %113 = load i16, i16* %112, align 2
  %114 = trunc i16 %113 to i8
  store i8 %114, i8* %111, align 1
  %115 = getelementptr inbounds i8, i8* %0, i64 12
  %116 = getelementptr inbounds i16, i16* %1, i64 12
  %117 = load i16, i16* %116, align 2
  %118 = trunc i16 %117 to i8
  store i8 %118, i8* %115, align 1
  %119 = getelementptr inbounds i8, i8* %0, i64 13
  %120 = getelementptr inbounds i16, i16* %1, i64 13
  %121 = load i16, i16* %120, align 2
  %122 = trunc i16 %121 to i8
  store i8 %122, i8* %119, align 1
  %123 = getelementptr inbounds i8, i8* %0, i64 14
  %124 = getelementptr inbounds i16, i16* %1, i64 14
  %125 = load i16, i16* %124, align 2
  %126 = trunc i16 %125 to i8
  store i8 %126, i8* %123, align 1
  br label %675

127:                                              ; preds = %3
  %128 = load i16, i16* %1, align 2
  %129 = trunc i16 %128 to i8
  store i8 %129, i8* %0, align 1
  %130 = getelementptr inbounds i8, i8* %0, i64 1
  %131 = getelementptr inbounds i16, i16* %1, i64 1
  %132 = load i16, i16* %131, align 2
  %133 = trunc i16 %132 to i8
  store i8 %133, i8* %130, align 1
  %134 = getelementptr inbounds i8, i8* %0, i64 2
  %135 = getelementptr inbounds i16, i16* %1, i64 2
  %136 = load i16, i16* %135, align 2
  %137 = trunc i16 %136 to i8
  store i8 %137, i8* %134, align 1
  %138 = getelementptr inbounds i8, i8* %0, i64 3
  %139 = getelementptr inbounds i16, i16* %1, i64 3
  %140 = load i16, i16* %139, align 2
  %141 = trunc i16 %140 to i8
  store i8 %141, i8* %138, align 1
  %142 = getelementptr inbounds i8, i8* %0, i64 4
  %143 = getelementptr inbounds i16, i16* %1, i64 4
  %144 = load i16, i16* %143, align 2
  %145 = trunc i16 %144 to i8
  store i8 %145, i8* %142, align 1
  %146 = getelementptr inbounds i8, i8* %0, i64 5
  %147 = getelementptr inbounds i16, i16* %1, i64 5
  %148 = load i16, i16* %147, align 2
  %149 = trunc i16 %148 to i8
  store i8 %149, i8* %146, align 1
  %150 = getelementptr inbounds i8, i8* %0, i64 6
  %151 = getelementptr inbounds i16, i16* %1, i64 6
  %152 = load i16, i16* %151, align 2
  %153 = trunc i16 %152 to i8
  store i8 %153, i8* %150, align 1
  %154 = getelementptr inbounds i8, i8* %0, i64 7
  %155 = getelementptr inbounds i16, i16* %1, i64 7
  %156 = load i16, i16* %155, align 2
  %157 = trunc i16 %156 to i8
  store i8 %157, i8* %154, align 1
  %158 = getelementptr inbounds i8, i8* %0, i64 8
  %159 = getelementptr inbounds i16, i16* %1, i64 8
  %160 = load i16, i16* %159, align 2
  %161 = trunc i16 %160 to i8
  store i8 %161, i8* %158, align 1
  %162 = getelementptr inbounds i8, i8* %0, i64 9
  %163 = getelementptr inbounds i16, i16* %1, i64 9
  %164 = load i16, i16* %163, align 2
  %165 = trunc i16 %164 to i8
  store i8 %165, i8* %162, align 1
  %166 = getelementptr inbounds i8, i8* %0, i64 10
  %167 = getelementptr inbounds i16, i16* %1, i64 10
  %168 = load i16, i16* %167, align 2
  %169 = trunc i16 %168 to i8
  store i8 %169, i8* %166, align 1
  %170 = getelementptr inbounds i8, i8* %0, i64 11
  %171 = getelementptr inbounds i16, i16* %1, i64 11
  %172 = load i16, i16* %171, align 2
  %173 = trunc i16 %172 to i8
  store i8 %173, i8* %170, align 1
  %174 = getelementptr inbounds i8, i8* %0, i64 12
  %175 = getelementptr inbounds i16, i16* %1, i64 12
  %176 = load i16, i16* %175, align 2
  %177 = trunc i16 %176 to i8
  store i8 %177, i8* %174, align 1
  %178 = getelementptr inbounds i8, i8* %0, i64 13
  %179 = getelementptr inbounds i16, i16* %1, i64 13
  %180 = load i16, i16* %179, align 2
  %181 = trunc i16 %180 to i8
  store i8 %181, i8* %178, align 1
  br label %675

182:                                              ; preds = %3
  %183 = load i16, i16* %1, align 2
  %184 = trunc i16 %183 to i8
  store i8 %184, i8* %0, align 1
  %185 = getelementptr inbounds i8, i8* %0, i64 1
  %186 = getelementptr inbounds i16, i16* %1, i64 1
  %187 = load i16, i16* %186, align 2
  %188 = trunc i16 %187 to i8
  store i8 %188, i8* %185, align 1
  %189 = getelementptr inbounds i8, i8* %0, i64 2
  %190 = getelementptr inbounds i16, i16* %1, i64 2
  %191 = load i16, i16* %190, align 2
  %192 = trunc i16 %191 to i8
  store i8 %192, i8* %189, align 1
  %193 = getelementptr inbounds i8, i8* %0, i64 3
  %194 = getelementptr inbounds i16, i16* %1, i64 3
  %195 = load i16, i16* %194, align 2
  %196 = trunc i16 %195 to i8
  store i8 %196, i8* %193, align 1
  %197 = getelementptr inbounds i8, i8* %0, i64 4
  %198 = getelementptr inbounds i16, i16* %1, i64 4
  %199 = load i16, i16* %198, align 2
  %200 = trunc i16 %199 to i8
  store i8 %200, i8* %197, align 1
  %201 = getelementptr inbounds i8, i8* %0, i64 5
  %202 = getelementptr inbounds i16, i16* %1, i64 5
  %203 = load i16, i16* %202, align 2
  %204 = trunc i16 %203 to i8
  store i8 %204, i8* %201, align 1
  %205 = getelementptr inbounds i8, i8* %0, i64 6
  %206 = getelementptr inbounds i16, i16* %1, i64 6
  %207 = load i16, i16* %206, align 2
  %208 = trunc i16 %207 to i8
  store i8 %208, i8* %205, align 1
  %209 = getelementptr inbounds i8, i8* %0, i64 7
  %210 = getelementptr inbounds i16, i16* %1, i64 7
  %211 = load i16, i16* %210, align 2
  %212 = trunc i16 %211 to i8
  store i8 %212, i8* %209, align 1
  %213 = getelementptr inbounds i8, i8* %0, i64 8
  %214 = getelementptr inbounds i16, i16* %1, i64 8
  %215 = load i16, i16* %214, align 2
  %216 = trunc i16 %215 to i8
  store i8 %216, i8* %213, align 1
  %217 = getelementptr inbounds i8, i8* %0, i64 9
  %218 = getelementptr inbounds i16, i16* %1, i64 9
  %219 = load i16, i16* %218, align 2
  %220 = trunc i16 %219 to i8
  store i8 %220, i8* %217, align 1
  %221 = getelementptr inbounds i8, i8* %0, i64 10
  %222 = getelementptr inbounds i16, i16* %1, i64 10
  %223 = load i16, i16* %222, align 2
  %224 = trunc i16 %223 to i8
  store i8 %224, i8* %221, align 1
  %225 = getelementptr inbounds i8, i8* %0, i64 11
  %226 = getelementptr inbounds i16, i16* %1, i64 11
  %227 = load i16, i16* %226, align 2
  %228 = trunc i16 %227 to i8
  store i8 %228, i8* %225, align 1
  %229 = getelementptr inbounds i8, i8* %0, i64 12
  %230 = getelementptr inbounds i16, i16* %1, i64 12
  %231 = load i16, i16* %230, align 2
  %232 = trunc i16 %231 to i8
  store i8 %232, i8* %229, align 1
  br label %675

233:                                              ; preds = %3
  %234 = load i16, i16* %1, align 2
  %235 = trunc i16 %234 to i8
  store i8 %235, i8* %0, align 1
  %236 = getelementptr inbounds i8, i8* %0, i64 1
  %237 = getelementptr inbounds i16, i16* %1, i64 1
  %238 = load i16, i16* %237, align 2
  %239 = trunc i16 %238 to i8
  store i8 %239, i8* %236, align 1
  %240 = getelementptr inbounds i8, i8* %0, i64 2
  %241 = getelementptr inbounds i16, i16* %1, i64 2
  %242 = load i16, i16* %241, align 2
  %243 = trunc i16 %242 to i8
  store i8 %243, i8* %240, align 1
  %244 = getelementptr inbounds i8, i8* %0, i64 3
  %245 = getelementptr inbounds i16, i16* %1, i64 3
  %246 = load i16, i16* %245, align 2
  %247 = trunc i16 %246 to i8
  store i8 %247, i8* %244, align 1
  %248 = getelementptr inbounds i8, i8* %0, i64 4
  %249 = getelementptr inbounds i16, i16* %1, i64 4
  %250 = load i16, i16* %249, align 2
  %251 = trunc i16 %250 to i8
  store i8 %251, i8* %248, align 1
  %252 = getelementptr inbounds i8, i8* %0, i64 5
  %253 = getelementptr inbounds i16, i16* %1, i64 5
  %254 = load i16, i16* %253, align 2
  %255 = trunc i16 %254 to i8
  store i8 %255, i8* %252, align 1
  %256 = getelementptr inbounds i8, i8* %0, i64 6
  %257 = getelementptr inbounds i16, i16* %1, i64 6
  %258 = load i16, i16* %257, align 2
  %259 = trunc i16 %258 to i8
  store i8 %259, i8* %256, align 1
  %260 = getelementptr inbounds i8, i8* %0, i64 7
  %261 = getelementptr inbounds i16, i16* %1, i64 7
  %262 = load i16, i16* %261, align 2
  %263 = trunc i16 %262 to i8
  store i8 %263, i8* %260, align 1
  %264 = getelementptr inbounds i8, i8* %0, i64 8
  %265 = getelementptr inbounds i16, i16* %1, i64 8
  %266 = load i16, i16* %265, align 2
  %267 = trunc i16 %266 to i8
  store i8 %267, i8* %264, align 1
  %268 = getelementptr inbounds i8, i8* %0, i64 9
  %269 = getelementptr inbounds i16, i16* %1, i64 9
  %270 = load i16, i16* %269, align 2
  %271 = trunc i16 %270 to i8
  store i8 %271, i8* %268, align 1
  %272 = getelementptr inbounds i8, i8* %0, i64 10
  %273 = getelementptr inbounds i16, i16* %1, i64 10
  %274 = load i16, i16* %273, align 2
  %275 = trunc i16 %274 to i8
  store i8 %275, i8* %272, align 1
  %276 = getelementptr inbounds i8, i8* %0, i64 11
  %277 = getelementptr inbounds i16, i16* %1, i64 11
  %278 = load i16, i16* %277, align 2
  %279 = trunc i16 %278 to i8
  store i8 %279, i8* %276, align 1
  br label %675

280:                                              ; preds = %3
  %281 = load i16, i16* %1, align 2
  %282 = trunc i16 %281 to i8
  store i8 %282, i8* %0, align 1
  %283 = getelementptr inbounds i8, i8* %0, i64 1
  %284 = getelementptr inbounds i16, i16* %1, i64 1
  %285 = load i16, i16* %284, align 2
  %286 = trunc i16 %285 to i8
  store i8 %286, i8* %283, align 1
  %287 = getelementptr inbounds i8, i8* %0, i64 2
  %288 = getelementptr inbounds i16, i16* %1, i64 2
  %289 = load i16, i16* %288, align 2
  %290 = trunc i16 %289 to i8
  store i8 %290, i8* %287, align 1
  %291 = getelementptr inbounds i8, i8* %0, i64 3
  %292 = getelementptr inbounds i16, i16* %1, i64 3
  %293 = load i16, i16* %292, align 2
  %294 = trunc i16 %293 to i8
  store i8 %294, i8* %291, align 1
  %295 = getelementptr inbounds i8, i8* %0, i64 4
  %296 = getelementptr inbounds i16, i16* %1, i64 4
  %297 = load i16, i16* %296, align 2
  %298 = trunc i16 %297 to i8
  store i8 %298, i8* %295, align 1
  %299 = getelementptr inbounds i8, i8* %0, i64 5
  %300 = getelementptr inbounds i16, i16* %1, i64 5
  %301 = load i16, i16* %300, align 2
  %302 = trunc i16 %301 to i8
  store i8 %302, i8* %299, align 1
  %303 = getelementptr inbounds i8, i8* %0, i64 6
  %304 = getelementptr inbounds i16, i16* %1, i64 6
  %305 = load i16, i16* %304, align 2
  %306 = trunc i16 %305 to i8
  store i8 %306, i8* %303, align 1
  %307 = getelementptr inbounds i8, i8* %0, i64 7
  %308 = getelementptr inbounds i16, i16* %1, i64 7
  %309 = load i16, i16* %308, align 2
  %310 = trunc i16 %309 to i8
  store i8 %310, i8* %307, align 1
  %311 = getelementptr inbounds i8, i8* %0, i64 8
  %312 = getelementptr inbounds i16, i16* %1, i64 8
  %313 = load i16, i16* %312, align 2
  %314 = trunc i16 %313 to i8
  store i8 %314, i8* %311, align 1
  %315 = getelementptr inbounds i8, i8* %0, i64 9
  %316 = getelementptr inbounds i16, i16* %1, i64 9
  %317 = load i16, i16* %316, align 2
  %318 = trunc i16 %317 to i8
  store i8 %318, i8* %315, align 1
  %319 = getelementptr inbounds i8, i8* %0, i64 10
  %320 = getelementptr inbounds i16, i16* %1, i64 10
  %321 = load i16, i16* %320, align 2
  %322 = trunc i16 %321 to i8
  store i8 %322, i8* %319, align 1
  br label %675

323:                                              ; preds = %3
  %324 = load i16, i16* %1, align 2
  %325 = trunc i16 %324 to i8
  store i8 %325, i8* %0, align 1
  %326 = getelementptr inbounds i8, i8* %0, i64 1
  %327 = getelementptr inbounds i16, i16* %1, i64 1
  %328 = load i16, i16* %327, align 2
  %329 = trunc i16 %328 to i8
  store i8 %329, i8* %326, align 1
  %330 = getelementptr inbounds i8, i8* %0, i64 2
  %331 = getelementptr inbounds i16, i16* %1, i64 2
  %332 = load i16, i16* %331, align 2
  %333 = trunc i16 %332 to i8
  store i8 %333, i8* %330, align 1
  %334 = getelementptr inbounds i8, i8* %0, i64 3
  %335 = getelementptr inbounds i16, i16* %1, i64 3
  %336 = load i16, i16* %335, align 2
  %337 = trunc i16 %336 to i8
  store i8 %337, i8* %334, align 1
  %338 = getelementptr inbounds i8, i8* %0, i64 4
  %339 = getelementptr inbounds i16, i16* %1, i64 4
  %340 = load i16, i16* %339, align 2
  %341 = trunc i16 %340 to i8
  store i8 %341, i8* %338, align 1
  %342 = getelementptr inbounds i8, i8* %0, i64 5
  %343 = getelementptr inbounds i16, i16* %1, i64 5
  %344 = load i16, i16* %343, align 2
  %345 = trunc i16 %344 to i8
  store i8 %345, i8* %342, align 1
  %346 = getelementptr inbounds i8, i8* %0, i64 6
  %347 = getelementptr inbounds i16, i16* %1, i64 6
  %348 = load i16, i16* %347, align 2
  %349 = trunc i16 %348 to i8
  store i8 %349, i8* %346, align 1
  %350 = getelementptr inbounds i8, i8* %0, i64 7
  %351 = getelementptr inbounds i16, i16* %1, i64 7
  %352 = load i16, i16* %351, align 2
  %353 = trunc i16 %352 to i8
  store i8 %353, i8* %350, align 1
  %354 = getelementptr inbounds i8, i8* %0, i64 8
  %355 = getelementptr inbounds i16, i16* %1, i64 8
  %356 = load i16, i16* %355, align 2
  %357 = trunc i16 %356 to i8
  store i8 %357, i8* %354, align 1
  %358 = getelementptr inbounds i8, i8* %0, i64 9
  %359 = getelementptr inbounds i16, i16* %1, i64 9
  %360 = load i16, i16* %359, align 2
  %361 = trunc i16 %360 to i8
  store i8 %361, i8* %358, align 1
  br label %675

362:                                              ; preds = %3
  %363 = load i16, i16* %1, align 2
  %364 = trunc i16 %363 to i8
  store i8 %364, i8* %0, align 1
  %365 = getelementptr inbounds i8, i8* %0, i64 1
  %366 = getelementptr inbounds i16, i16* %1, i64 1
  %367 = load i16, i16* %366, align 2
  %368 = trunc i16 %367 to i8
  store i8 %368, i8* %365, align 1
  %369 = getelementptr inbounds i8, i8* %0, i64 2
  %370 = getelementptr inbounds i16, i16* %1, i64 2
  %371 = load i16, i16* %370, align 2
  %372 = trunc i16 %371 to i8
  store i8 %372, i8* %369, align 1
  %373 = getelementptr inbounds i8, i8* %0, i64 3
  %374 = getelementptr inbounds i16, i16* %1, i64 3
  %375 = load i16, i16* %374, align 2
  %376 = trunc i16 %375 to i8
  store i8 %376, i8* %373, align 1
  %377 = getelementptr inbounds i8, i8* %0, i64 4
  %378 = getelementptr inbounds i16, i16* %1, i64 4
  %379 = load i16, i16* %378, align 2
  %380 = trunc i16 %379 to i8
  store i8 %380, i8* %377, align 1
  %381 = getelementptr inbounds i8, i8* %0, i64 5
  %382 = getelementptr inbounds i16, i16* %1, i64 5
  %383 = load i16, i16* %382, align 2
  %384 = trunc i16 %383 to i8
  store i8 %384, i8* %381, align 1
  %385 = getelementptr inbounds i8, i8* %0, i64 6
  %386 = getelementptr inbounds i16, i16* %1, i64 6
  %387 = load i16, i16* %386, align 2
  %388 = trunc i16 %387 to i8
  store i8 %388, i8* %385, align 1
  %389 = getelementptr inbounds i8, i8* %0, i64 7
  %390 = getelementptr inbounds i16, i16* %1, i64 7
  %391 = load i16, i16* %390, align 2
  %392 = trunc i16 %391 to i8
  store i8 %392, i8* %389, align 1
  %393 = getelementptr inbounds i8, i8* %0, i64 8
  %394 = getelementptr inbounds i16, i16* %1, i64 8
  %395 = load i16, i16* %394, align 2
  %396 = trunc i16 %395 to i8
  store i8 %396, i8* %393, align 1
  br label %675

397:                                              ; preds = %3
  %398 = load i16, i16* %1, align 2
  %399 = trunc i16 %398 to i8
  store i8 %399, i8* %0, align 1
  %400 = getelementptr inbounds i8, i8* %0, i64 1
  %401 = getelementptr inbounds i16, i16* %1, i64 1
  %402 = load i16, i16* %401, align 2
  %403 = trunc i16 %402 to i8
  store i8 %403, i8* %400, align 1
  %404 = getelementptr inbounds i8, i8* %0, i64 2
  %405 = getelementptr inbounds i16, i16* %1, i64 2
  %406 = load i16, i16* %405, align 2
  %407 = trunc i16 %406 to i8
  store i8 %407, i8* %404, align 1
  %408 = getelementptr inbounds i8, i8* %0, i64 3
  %409 = getelementptr inbounds i16, i16* %1, i64 3
  %410 = load i16, i16* %409, align 2
  %411 = trunc i16 %410 to i8
  store i8 %411, i8* %408, align 1
  %412 = getelementptr inbounds i8, i8* %0, i64 4
  %413 = getelementptr inbounds i16, i16* %1, i64 4
  %414 = load i16, i16* %413, align 2
  %415 = trunc i16 %414 to i8
  store i8 %415, i8* %412, align 1
  %416 = getelementptr inbounds i8, i8* %0, i64 5
  %417 = getelementptr inbounds i16, i16* %1, i64 5
  %418 = load i16, i16* %417, align 2
  %419 = trunc i16 %418 to i8
  store i8 %419, i8* %416, align 1
  %420 = getelementptr inbounds i8, i8* %0, i64 6
  %421 = getelementptr inbounds i16, i16* %1, i64 6
  %422 = load i16, i16* %421, align 2
  %423 = trunc i16 %422 to i8
  store i8 %423, i8* %420, align 1
  %424 = getelementptr inbounds i8, i8* %0, i64 7
  %425 = getelementptr inbounds i16, i16* %1, i64 7
  %426 = load i16, i16* %425, align 2
  %427 = trunc i16 %426 to i8
  store i8 %427, i8* %424, align 1
  br label %675

428:                                              ; preds = %3
  %429 = load i16, i16* %1, align 2
  %430 = trunc i16 %429 to i8
  store i8 %430, i8* %0, align 1
  %431 = getelementptr inbounds i8, i8* %0, i64 1
  %432 = getelementptr inbounds i16, i16* %1, i64 1
  %433 = load i16, i16* %432, align 2
  %434 = trunc i16 %433 to i8
  store i8 %434, i8* %431, align 1
  %435 = getelementptr inbounds i8, i8* %0, i64 2
  %436 = getelementptr inbounds i16, i16* %1, i64 2
  %437 = load i16, i16* %436, align 2
  %438 = trunc i16 %437 to i8
  store i8 %438, i8* %435, align 1
  %439 = getelementptr inbounds i8, i8* %0, i64 3
  %440 = getelementptr inbounds i16, i16* %1, i64 3
  %441 = load i16, i16* %440, align 2
  %442 = trunc i16 %441 to i8
  store i8 %442, i8* %439, align 1
  %443 = getelementptr inbounds i8, i8* %0, i64 4
  %444 = getelementptr inbounds i16, i16* %1, i64 4
  %445 = load i16, i16* %444, align 2
  %446 = trunc i16 %445 to i8
  store i8 %446, i8* %443, align 1
  %447 = getelementptr inbounds i8, i8* %0, i64 5
  %448 = getelementptr inbounds i16, i16* %1, i64 5
  %449 = load i16, i16* %448, align 2
  %450 = trunc i16 %449 to i8
  store i8 %450, i8* %447, align 1
  %451 = getelementptr inbounds i8, i8* %0, i64 6
  %452 = getelementptr inbounds i16, i16* %1, i64 6
  %453 = load i16, i16* %452, align 2
  %454 = trunc i16 %453 to i8
  store i8 %454, i8* %451, align 1
  br label %675

455:                                              ; preds = %3
  %456 = load i16, i16* %1, align 2
  %457 = trunc i16 %456 to i8
  store i8 %457, i8* %0, align 1
  %458 = getelementptr inbounds i8, i8* %0, i64 1
  %459 = getelementptr inbounds i16, i16* %1, i64 1
  %460 = load i16, i16* %459, align 2
  %461 = trunc i16 %460 to i8
  store i8 %461, i8* %458, align 1
  %462 = getelementptr inbounds i8, i8* %0, i64 2
  %463 = getelementptr inbounds i16, i16* %1, i64 2
  %464 = load i16, i16* %463, align 2
  %465 = trunc i16 %464 to i8
  store i8 %465, i8* %462, align 1
  %466 = getelementptr inbounds i8, i8* %0, i64 3
  %467 = getelementptr inbounds i16, i16* %1, i64 3
  %468 = load i16, i16* %467, align 2
  %469 = trunc i16 %468 to i8
  store i8 %469, i8* %466, align 1
  %470 = getelementptr inbounds i8, i8* %0, i64 4
  %471 = getelementptr inbounds i16, i16* %1, i64 4
  %472 = load i16, i16* %471, align 2
  %473 = trunc i16 %472 to i8
  store i8 %473, i8* %470, align 1
  %474 = getelementptr inbounds i8, i8* %0, i64 5
  %475 = getelementptr inbounds i16, i16* %1, i64 5
  %476 = load i16, i16* %475, align 2
  %477 = trunc i16 %476 to i8
  store i8 %477, i8* %474, align 1
  br label %675

478:                                              ; preds = %3
  %479 = load i16, i16* %1, align 2
  %480 = trunc i16 %479 to i8
  store i8 %480, i8* %0, align 1
  %481 = getelementptr inbounds i8, i8* %0, i64 1
  %482 = getelementptr inbounds i16, i16* %1, i64 1
  %483 = load i16, i16* %482, align 2
  %484 = trunc i16 %483 to i8
  store i8 %484, i8* %481, align 1
  %485 = getelementptr inbounds i8, i8* %0, i64 2
  %486 = getelementptr inbounds i16, i16* %1, i64 2
  %487 = load i16, i16* %486, align 2
  %488 = trunc i16 %487 to i8
  store i8 %488, i8* %485, align 1
  %489 = getelementptr inbounds i8, i8* %0, i64 3
  %490 = getelementptr inbounds i16, i16* %1, i64 3
  %491 = load i16, i16* %490, align 2
  %492 = trunc i16 %491 to i8
  store i8 %492, i8* %489, align 1
  %493 = getelementptr inbounds i8, i8* %0, i64 4
  %494 = getelementptr inbounds i16, i16* %1, i64 4
  %495 = load i16, i16* %494, align 2
  %496 = trunc i16 %495 to i8
  store i8 %496, i8* %493, align 1
  br label %675

497:                                              ; preds = %3
  %498 = load i16, i16* %1, align 2
  %499 = trunc i16 %498 to i8
  store i8 %499, i8* %0, align 1
  %500 = getelementptr inbounds i8, i8* %0, i64 1
  %501 = getelementptr inbounds i16, i16* %1, i64 1
  %502 = load i16, i16* %501, align 2
  %503 = trunc i16 %502 to i8
  store i8 %503, i8* %500, align 1
  %504 = getelementptr inbounds i8, i8* %0, i64 2
  %505 = getelementptr inbounds i16, i16* %1, i64 2
  %506 = load i16, i16* %505, align 2
  %507 = trunc i16 %506 to i8
  store i8 %507, i8* %504, align 1
  %508 = getelementptr inbounds i8, i8* %0, i64 3
  %509 = getelementptr inbounds i16, i16* %1, i64 3
  %510 = load i16, i16* %509, align 2
  %511 = trunc i16 %510 to i8
  store i8 %511, i8* %508, align 1
  br label %675

512:                                              ; preds = %3
  %513 = load i16, i16* %1, align 2
  %514 = trunc i16 %513 to i8
  store i8 %514, i8* %0, align 1
  %515 = getelementptr inbounds i8, i8* %0, i64 1
  %516 = getelementptr inbounds i16, i16* %1, i64 1
  %517 = load i16, i16* %516, align 2
  %518 = trunc i16 %517 to i8
  store i8 %518, i8* %515, align 1
  %519 = getelementptr inbounds i8, i8* %0, i64 2
  %520 = getelementptr inbounds i16, i16* %1, i64 2
  %521 = load i16, i16* %520, align 2
  %522 = trunc i16 %521 to i8
  store i8 %522, i8* %519, align 1
  br label %675

523:                                              ; preds = %3
  %524 = load i16, i16* %1, align 2
  %525 = trunc i16 %524 to i8
  store i8 %525, i8* %0, align 1
  %526 = getelementptr inbounds i8, i8* %0, i64 1
  %527 = getelementptr inbounds i16, i16* %1, i64 1
  %528 = load i16, i16* %527, align 2
  %529 = trunc i16 %528 to i8
  store i8 %529, i8* %526, align 1
  br label %675

530:                                              ; preds = %3
  %531 = load i16, i16* %1, align 2
  %532 = trunc i16 %531 to i8
  store i8 %532, i8* %0, align 1
  br label %675

533:                                              ; preds = %3
  %534 = getelementptr inbounds i16, i16* %1, i64 %2
  %535 = icmp eq i64 %2, 0
  br i1 %535, label %675, label %536

536:                                              ; preds = %533
  %537 = shl nsw i64 %2, 1
  %538 = add i64 %537, -2
  %539 = lshr exact i64 %538, 1
  %540 = add nuw i64 %539, 1
  %541 = icmp ult i64 %540, 16
  br i1 %541, label %613, label %542

542:                                              ; preds = %536
  %543 = shl nsw i64 %2, 1
  %544 = add i64 %543, -2
  %545 = lshr exact i64 %544, 1
  %546 = add nuw i64 %545, 1
  %547 = getelementptr i8, i8* %0, i64 %546
  %548 = getelementptr i16, i16* %1, i64 %546
  %549 = bitcast i16* %548 to i8*
  %550 = icmp ugt i8* %549, %0
  %551 = icmp ugt i8* %547, %4
  %552 = and i1 %550, %551
  br i1 %552, label %613, label %553

553:                                              ; preds = %542
  %554 = and i64 %540, -16
  %555 = getelementptr i8, i8* %0, i64 %554
  %556 = getelementptr i16, i16* %1, i64 %554
  %557 = add i64 %554, -16
  %558 = lshr exact i64 %557, 4
  %559 = add nuw nsw i64 %558, 1
  %560 = and i64 %559, 1
  %561 = icmp eq i64 %557, 0
  br i1 %561, label %595, label %562

562:                                              ; preds = %553
  %563 = sub nuw nsw i64 %559, %560
  br label %564

564:                                              ; preds = %564, %562
  %565 = phi i64 [ 0, %562 ], [ %592, %564 ]
  %566 = phi i64 [ %563, %562 ], [ %593, %564 ]
  %567 = getelementptr i8, i8* %0, i64 %565
  %568 = getelementptr i16, i16* %1, i64 %565
  %569 = bitcast i16* %568 to <8 x i16>*
  %570 = load <8 x i16>, <8 x i16>* %569, align 2, !alias.scope !17
  %571 = getelementptr i16, i16* %568, i64 8
  %572 = bitcast i16* %571 to <8 x i16>*
  %573 = load <8 x i16>, <8 x i16>* %572, align 2, !alias.scope !17
  %574 = trunc <8 x i16> %570 to <8 x i8>
  %575 = trunc <8 x i16> %573 to <8 x i8>
  %576 = bitcast i8* %567 to <8 x i8>*
  store <8 x i8> %574, <8 x i8>* %576, align 1, !alias.scope !20, !noalias !17
  %577 = getelementptr i8, i8* %567, i64 8
  %578 = bitcast i8* %577 to <8 x i8>*
  store <8 x i8> %575, <8 x i8>* %578, align 1, !alias.scope !20, !noalias !17
  %579 = or i64 %565, 16
  %580 = getelementptr i8, i8* %0, i64 %579
  %581 = getelementptr i16, i16* %1, i64 %579
  %582 = bitcast i16* %581 to <8 x i16>*
  %583 = load <8 x i16>, <8 x i16>* %582, align 2, !alias.scope !17
  %584 = getelementptr i16, i16* %581, i64 8
  %585 = bitcast i16* %584 to <8 x i16>*
  %586 = load <8 x i16>, <8 x i16>* %585, align 2, !alias.scope !17
  %587 = trunc <8 x i16> %583 to <8 x i8>
  %588 = trunc <8 x i16> %586 to <8 x i8>
  %589 = bitcast i8* %580 to <8 x i8>*
  store <8 x i8> %587, <8 x i8>* %589, align 1, !alias.scope !20, !noalias !17
  %590 = getelementptr i8, i8* %580, i64 8
  %591 = bitcast i8* %590 to <8 x i8>*
  store <8 x i8> %588, <8 x i8>* %591, align 1, !alias.scope !20, !noalias !17
  %592 = add i64 %565, 32
  %593 = add i64 %566, -2
  %594 = icmp eq i64 %593, 0
  br i1 %594, label %595, label %564, !llvm.loop !22

595:                                              ; preds = %564, %553
  %596 = phi i64 [ 0, %553 ], [ %592, %564 ]
  %597 = icmp eq i64 %560, 0
  br i1 %597, label %611, label %598

598:                                              ; preds = %595
  %599 = getelementptr i8, i8* %0, i64 %596
  %600 = getelementptr i16, i16* %1, i64 %596
  %601 = bitcast i16* %600 to <8 x i16>*
  %602 = load <8 x i16>, <8 x i16>* %601, align 2, !alias.scope !17
  %603 = getelementptr i16, i16* %600, i64 8
  %604 = bitcast i16* %603 to <8 x i16>*
  %605 = load <8 x i16>, <8 x i16>* %604, align 2, !alias.scope !17
  %606 = trunc <8 x i16> %602 to <8 x i8>
  %607 = trunc <8 x i16> %605 to <8 x i8>
  %608 = bitcast i8* %599 to <8 x i8>*
  store <8 x i8> %606, <8 x i8>* %608, align 1, !alias.scope !20, !noalias !17
  %609 = getelementptr i8, i8* %599, i64 8
  %610 = bitcast i8* %609 to <8 x i8>*
  store <8 x i8> %607, <8 x i8>* %610, align 1, !alias.scope !20, !noalias !17
  br label %611

611:                                              ; preds = %595, %598
  %612 = icmp eq i64 %540, %554
  br i1 %612, label %675, label %613

613:                                              ; preds = %611, %542, %536
  %614 = phi i8* [ %0, %542 ], [ %0, %536 ], [ %555, %611 ]
  %615 = phi i16* [ %1, %542 ], [ %1, %536 ], [ %556, %611 ]
  %616 = ptrtoint i16* %615 to i64
  %617 = add i64 %2, -1
  %618 = getelementptr i16, i16* %1, i64 %617
  %619 = ptrtoint i16* %618 to i64
  %620 = sub i64 %619, %616
  %621 = lshr i64 %620, 1
  %622 = add nuw i64 %621, 1
  %623 = and i64 %622, 7
  %624 = icmp eq i64 %623, 0
  br i1 %624, label %635, label %625

625:                                              ; preds = %613, %625
  %626 = phi i8* [ %632, %625 ], [ %614, %613 ]
  %627 = phi i16* [ %631, %625 ], [ %615, %613 ]
  %628 = phi i64 [ %633, %625 ], [ %623, %613 ]
  %629 = load i16, i16* %627, align 2
  %630 = trunc i16 %629 to i8
  store i8 %630, i8* %626, align 1
  %631 = getelementptr inbounds i16, i16* %627, i64 1
  %632 = getelementptr inbounds i8, i8* %626, i64 1
  %633 = add i64 %628, -1
  %634 = icmp eq i64 %633, 0
  br i1 %634, label %635, label %625, !llvm.loop !23

635:                                              ; preds = %625, %613
  %636 = phi i8* [ %614, %613 ], [ %632, %625 ]
  %637 = phi i16* [ %615, %613 ], [ %631, %625 ]
  %638 = icmp ult i64 %620, 14
  br i1 %638, label %675, label %639

639:                                              ; preds = %635, %639
  %640 = phi i8* [ %673, %639 ], [ %636, %635 ]
  %641 = phi i16* [ %672, %639 ], [ %637, %635 ]
  %642 = load i16, i16* %641, align 2
  %643 = trunc i16 %642 to i8
  store i8 %643, i8* %640, align 1
  %644 = getelementptr inbounds i16, i16* %641, i64 1
  %645 = getelementptr inbounds i8, i8* %640, i64 1
  %646 = load i16, i16* %644, align 2
  %647 = trunc i16 %646 to i8
  store i8 %647, i8* %645, align 1
  %648 = getelementptr inbounds i16, i16* %641, i64 2
  %649 = getelementptr inbounds i8, i8* %640, i64 2
  %650 = load i16, i16* %648, align 2
  %651 = trunc i16 %650 to i8
  store i8 %651, i8* %649, align 1
  %652 = getelementptr inbounds i16, i16* %641, i64 3
  %653 = getelementptr inbounds i8, i8* %640, i64 3
  %654 = load i16, i16* %652, align 2
  %655 = trunc i16 %654 to i8
  store i8 %655, i8* %653, align 1
  %656 = getelementptr inbounds i16, i16* %641, i64 4
  %657 = getelementptr inbounds i8, i8* %640, i64 4
  %658 = load i16, i16* %656, align 2
  %659 = trunc i16 %658 to i8
  store i8 %659, i8* %657, align 1
  %660 = getelementptr inbounds i16, i16* %641, i64 5
  %661 = getelementptr inbounds i8, i8* %640, i64 5
  %662 = load i16, i16* %660, align 2
  %663 = trunc i16 %662 to i8
  store i8 %663, i8* %661, align 1
  %664 = getelementptr inbounds i16, i16* %641, i64 6
  %665 = getelementptr inbounds i8, i8* %640, i64 6
  %666 = load i16, i16* %664, align 2
  %667 = trunc i16 %666 to i8
  store i8 %667, i8* %665, align 1
  %668 = getelementptr inbounds i16, i16* %641, i64 7
  %669 = getelementptr inbounds i8, i8* %640, i64 7
  %670 = load i16, i16* %668, align 2
  %671 = trunc i16 %670 to i8
  store i8 %671, i8* %669, align 1
  %672 = getelementptr inbounds i16, i16* %641, i64 8
  %673 = getelementptr inbounds i8, i8* %640, i64 8
  %674 = icmp eq i16* %672, %534
  br i1 %674, label %675, label %639, !llvm.loop !25

675:                                              ; preds = %635, %639, %611, %5, %68, %127, %182, %233, %280, %323, %362, %397, %428, %455, %478, %497, %512, %523, %530, %533
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal6String11SlowFlattenEPNS0_7IsolateENS0_6HandleINS0_10ConsStringEEENS0_14AllocationTypeE(%"class.v8::internal::Isolate"*, i64*, i8 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::SharedStringAccessGuardIfNeeded", align 8
  %5 = alloca %"class.v8::internal::SharedStringAccessGuardIfNeeded", align 8
  %6 = load i64, i64* %1, align 8
  %7 = and i64 %6, -4294967296
  %8 = add i64 %6, 11
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %7, %11
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %130

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  br label %21

21:                                               ; preds = %17, %91
  %22 = phi i64 [ %7, %17 ], [ %94, %91 ]
  %23 = phi i64 [ %6, %17 ], [ %92, %91 ]
  %24 = phi i64* [ %1, %17 ], [ %93, %91 ]
  %25 = add i64 %23, 15
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = or i64 %22, %28
  %30 = add i64 %29, -1
  %31 = inttoptr i64 %30 to i32*
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = zext i32 %32 to i64
  %34 = or i64 %22, %33
  %35 = add i64 %34, 7
  %36 = inttoptr i64 %35 to i16*
  %37 = load atomic i16, i16* %36 monotonic, align 2
  %38 = icmp ult i16 %37, 64
  br i1 %38, label %39, label %104

39:                                               ; preds = %21
  %40 = load atomic i32, i32* %31 monotonic, align 4
  %41 = zext i32 %40 to i64
  %42 = or i64 %22, %41
  %43 = add i64 %42, 7
  %44 = inttoptr i64 %43 to i16*
  %45 = load atomic i16, i16* %44 monotonic, align 2
  %46 = and i16 %45, 7
  %47 = icmp eq i16 %46, 1
  br i1 %47, label %48, label %104

48:                                               ; preds = %39
  %49 = load atomic i32, i32* %31 acquire, align 4
  %50 = zext i32 %49 to i64
  %51 = or i64 %22, %50
  %52 = add i64 %51, 7
  %53 = inttoptr i64 %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  %55 = and i16 %54, 7
  %56 = icmp eq i16 %55, 1
  br i1 %56, label %57, label %104

57:                                               ; preds = %48
  %58 = add i64 %29, 15
  %59 = inttoptr i64 %58 to i32*
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i64
  %62 = or i64 %22, %61
  %63 = add i64 %62, 7
  %64 = inttoptr i64 %63 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %104, label %67

67:                                               ; preds = %57
  %68 = load i64, i64* %24, align 8
  %69 = and i64 %68, -4294967296
  %70 = add i64 %68, 15
  %71 = inttoptr i64 %70 to i32*
  %72 = load i32, i32* %71, align 4
  %73 = zext i32 %72 to i64
  %74 = or i64 %69, %73
  %75 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %18, align 8
  %76 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %75, null
  br i1 %76, label %80, label %77

77:                                               ; preds = %67
  %78 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %75, i64 %74) #7
  %79 = load i64, i64* %78, align 8
  br label %91

80:                                               ; preds = %67
  %81 = load i64*, i64** %19, align 8
  %82 = load i64*, i64** %20, align 8
  %83 = icmp eq i64* %81, %82
  br i1 %83, label %84, label %86

84:                                               ; preds = %80
  %85 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #7
  br label %86

86:                                               ; preds = %84, %80
  %87 = phi i64* [ %85, %84 ], [ %81, %80 ]
  %88 = ptrtoint i64* %87 to i64
  %89 = add i64 %88, 8
  %90 = inttoptr i64 %89 to i64*
  store i64* %90, i64** %19, align 8
  store i64 %74, i64* %87, align 8
  br label %91

91:                                               ; preds = %77, %86
  %92 = phi i64 [ %79, %77 ], [ %74, %86 ]
  %93 = phi i64* [ %78, %77 ], [ %87, %86 ]
  %94 = and i64 %92, -4294967296
  %95 = add i64 %92, 11
  %96 = inttoptr i64 %95 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = zext i32 %97 to i64
  %99 = or i64 %94, %98
  %100 = add i64 %99, 7
  %101 = inttoptr i64 %100 to i32*
  %102 = load i32, i32* %101, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %21, label %130

104:                                              ; preds = %48, %21, %39, %57
  %105 = load i64, i64* %24, align 8
  %106 = and i64 %105, -4294967296
  %107 = add i64 %105, 15
  %108 = inttoptr i64 %107 to i32*
  %109 = load i32, i32* %108, align 4
  %110 = zext i32 %109 to i64
  %111 = or i64 %106, %110
  %112 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %18, align 8
  %113 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %112, null
  br i1 %113, label %116, label %114

114:                                              ; preds = %104
  %115 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %112, i64 %111) #7
  br label %127

116:                                              ; preds = %104
  %117 = load i64*, i64** %19, align 8
  %118 = load i64*, i64** %20, align 8
  %119 = icmp eq i64* %117, %118
  br i1 %119, label %120, label %122

120:                                              ; preds = %116
  %121 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #7
  br label %122

122:                                              ; preds = %120, %116
  %123 = phi i64* [ %121, %120 ], [ %117, %116 ]
  %124 = ptrtoint i64* %123 to i64
  %125 = add i64 %124, 8
  %126 = inttoptr i64 %125 to i64*
  store i64* %126, i64** %19, align 8
  store i64 %111, i64* %123, align 8
  br label %127

127:                                              ; preds = %114, %122
  %128 = phi i64* [ %115, %114 ], [ %123, %122 ]
  %129 = tail call i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %0, i64* %128, i8 zeroext 0)
  br label %261

130:                                              ; preds = %91, %3
  %131 = phi i64* [ %1, %3 ], [ %93, %91 ]
  %132 = phi i64 [ %6, %3 ], [ %92, %91 ]
  %133 = phi i64 [ %7, %3 ], [ %94, %91 ]
  %134 = add i64 %132, 7
  %135 = inttoptr i64 %134 to i32*
  %136 = load i32, i32* %135, align 4
  %137 = and i64 %132, 1
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %147, label %139

139:                                              ; preds = %130
  %140 = and i64 %132, -262144
  %141 = or i64 %140, 8
  %142 = inttoptr i64 %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = and i64 %143, 24
  %145 = icmp eq i64 %144, 0
  %146 = select i1 %145, i8 1, i8 %2
  br label %147

147:                                              ; preds = %139, %130
  %148 = phi i8 [ 1, %130 ], [ %146, %139 ]
  %149 = add i64 %132, -1
  %150 = inttoptr i64 %149 to i32*
  %151 = load atomic i32, i32* %150 monotonic, align 4
  %152 = zext i32 %151 to i64
  %153 = or i64 %133, %152
  %154 = add i64 %153, 7
  %155 = inttoptr i64 %154 to i16*
  %156 = load atomic i16, i16* %155 monotonic, align 2
  %157 = and i16 %156, 8
  %158 = icmp eq i16 %157, 0
  %159 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  br i1 %158, label %175, label %160

160:                                              ; preds = %147
  %161 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE19NewRawOneByteStringEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %159, i32 %136, i8 zeroext %148) #7
  %162 = icmp eq i64* %161, null
  br i1 %162, label %163, label %164, !prof !26

163:                                              ; preds = %160
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.26, i64 0, i64 0)) #18
  unreachable

164:                                              ; preds = %160
  %165 = load i64, i64* %131, align 8
  %166 = load i64, i64* %161, align 8
  %167 = add i64 %166, 11
  %168 = inttoptr i64 %167 to i8*
  %169 = getelementptr inbounds %"class.v8::internal::SharedStringAccessGuardIfNeeded", %"class.v8::internal::SharedStringAccessGuardIfNeeded"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %169) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %169, i8 0, i64 16, i1 false) #7, !alias.scope !27
  call void @_ZN2v88internal6String11WriteToFlatIhEEvS1_PT_iiRKNS0_31SharedStringAccessGuardIfNeededE(i64 %165, i8* %168, i32 0, i32 %136, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* nonnull dereferenceable(16) %5) #7
  %170 = load i8, i8* %169, align 8, !range !5
  %171 = icmp eq i8 %170, 0
  br i1 %171, label %190, label %172

172:                                              ; preds = %164
  %173 = getelementptr inbounds %"class.v8::internal::SharedStringAccessGuardIfNeeded", %"class.v8::internal::SharedStringAccessGuardIfNeeded"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %174 = load %"class.v8::base::SharedMutex"*, %"class.v8::base::SharedMutex"** %173, align 8
  call void @_ZN2v84base11SharedMutex12UnlockSharedEv(%"class.v8::base::SharedMutex"* %174) #7
  br label %190

175:                                              ; preds = %147
  %176 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE19NewRawTwoByteStringEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %159, i32 %136, i8 zeroext %148) #7
  %177 = icmp eq i64* %176, null
  br i1 %177, label %178, label %179, !prof !26

178:                                              ; preds = %175
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.26, i64 0, i64 0)) #18
  unreachable

179:                                              ; preds = %175
  %180 = load i64, i64* %131, align 8
  %181 = load i64, i64* %176, align 8
  %182 = add i64 %181, 11
  %183 = inttoptr i64 %182 to i16*
  %184 = getelementptr inbounds %"class.v8::internal::SharedStringAccessGuardIfNeeded", %"class.v8::internal::SharedStringAccessGuardIfNeeded"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %184) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %184, i8 0, i64 16, i1 false) #7, !alias.scope !30
  call void @_ZN2v88internal6String11WriteToFlatItEEvS1_PT_iiRKNS0_31SharedStringAccessGuardIfNeededE(i64 %180, i16* %183, i32 0, i32 %136, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* nonnull dereferenceable(16) %4) #7
  %185 = load i8, i8* %184, align 8, !range !5
  %186 = icmp eq i8 %185, 0
  br i1 %186, label %190, label %187

187:                                              ; preds = %179
  %188 = getelementptr inbounds %"class.v8::internal::SharedStringAccessGuardIfNeeded", %"class.v8::internal::SharedStringAccessGuardIfNeeded"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %189 = load %"class.v8::base::SharedMutex"*, %"class.v8::base::SharedMutex"** %188, align 8
  call void @_ZN2v84base11SharedMutex12UnlockSharedEv(%"class.v8::base::SharedMutex"* %189) #7
  br label %190

190:                                              ; preds = %187, %179, %172, %164
  %191 = phi i8* [ %169, %164 ], [ %169, %172 ], [ %184, %179 ], [ %184, %187 ]
  %192 = phi i64* [ %161, %164 ], [ %161, %172 ], [ %176, %179 ], [ %176, %187 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %191) #7
  %193 = load i64, i64* %131, align 8
  %194 = load i64, i64* %192, align 8
  %195 = add i64 %193, 11
  %196 = inttoptr i64 %195 to i32*
  %197 = trunc i64 %194 to i32
  store atomic volatile i32 %197, i32* %196 monotonic, align 4
  %198 = and i64 %194, 1
  %199 = icmp eq i64 %198, 0
  br i1 %199, label %211, label %200

200:                                              ; preds = %190
  %201 = and i64 %193, -262144
  %202 = or i64 %201, 8
  %203 = inttoptr i64 %202 to i64*
  %204 = load i64, i64* %203, align 8
  %205 = and i64 %204, 262144
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %211, label %207

207:                                              ; preds = %200
  %208 = or i64 %201, 16
  %209 = inttoptr i64 %208 to %"class.v8::internal::Heap"**
  %210 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %209, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %210, i64 %193, i64 %195, i64 %194) #7
  br label %211

211:                                              ; preds = %207, %200, %190
  %212 = and i64 %194, -262144
  %213 = or i64 %212, 8
  %214 = inttoptr i64 %213 to i64*
  %215 = load i64, i64* %214, align 8
  %216 = and i64 %215, 24
  %217 = icmp eq i64 %216, 0
  br i1 %217, label %226, label %218

218:                                              ; preds = %211
  %219 = and i64 %193, -262144
  %220 = or i64 %219, 8
  %221 = inttoptr i64 %220 to i64*
  %222 = load i64, i64* %221, align 8
  %223 = and i64 %222, 24
  %224 = icmp eq i64 %223, 0
  br i1 %224, label %225, label %226

225:                                              ; preds = %218
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %193, i64 %195, i64 %194) #7
  br label %226

226:                                              ; preds = %211, %218, %225
  %227 = load i64, i64* %131, align 8
  %228 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 9
  %229 = load i64, i64* %228, align 8
  %230 = add i64 %227, 15
  %231 = inttoptr i64 %230 to i32*
  %232 = trunc i64 %229 to i32
  store atomic volatile i32 %232, i32* %231 monotonic, align 4
  %233 = and i64 %229, 1
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %246, label %235

235:                                              ; preds = %226
  %236 = and i64 %227, -262144
  %237 = or i64 %236, 8
  %238 = inttoptr i64 %237 to i64*
  %239 = load i64, i64* %238, align 8
  %240 = and i64 %239, 262144
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %246, label %242

242:                                              ; preds = %235
  %243 = or i64 %236, 16
  %244 = inttoptr i64 %243 to %"class.v8::internal::Heap"**
  %245 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %244, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %245, i64 %227, i64 %230, i64 %229) #7
  br label %246

246:                                              ; preds = %242, %235, %226
  %247 = and i64 %229, -262144
  %248 = or i64 %247, 8
  %249 = inttoptr i64 %248 to i64*
  %250 = load i64, i64* %249, align 8
  %251 = and i64 %250, 24
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %261, label %253

253:                                              ; preds = %246
  %254 = and i64 %227, -262144
  %255 = or i64 %254, 8
  %256 = inttoptr i64 %255 to i64*
  %257 = load i64, i64* %256, align 8
  %258 = and i64 %257, 24
  %259 = icmp eq i64 %258, 0
  br i1 %259, label %260, label %261

260:                                              ; preds = %253
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %227, i64 %230, i64 %229) #7
  br label %261

261:                                              ; preds = %260, %253, %246, %127
  %262 = phi i64* [ %129, %127 ], [ %192, %246 ], [ %192, %253 ], [ %192, %260 ]
  ret i64* %262
}

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE19NewRawOneByteStringEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #3

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE19NewRawTwoByteStringEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal6String8MakeThinEPNS0_7IsolateES1_(%"class.v8::internal::String"*, %"class.v8::internal::Isolate"*, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, -4294967296
  %8 = add i64 %6, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %7, %11
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = and i16 %15, -57
  %17 = icmp eq i16 %16, 2
  %18 = and i64 %2, -4294967296
  %19 = add i64 %2, -1
  %20 = inttoptr i64 %19 to i32*
  br i1 %17, label %21, label %333

21:                                               ; preds = %3
  %22 = load atomic i32, i32* %20 monotonic, align 4
  %23 = zext i32 %22 to i64
  %24 = or i64 %18, %23
  %25 = add i64 %24, 7
  %26 = inttoptr i64 %25 to i16*
  %27 = load atomic i16, i16* %26 monotonic, align 2
  %28 = icmp ult i16 %27, 64
  br i1 %28, label %29, label %156

29:                                               ; preds = %21
  %30 = load atomic i32, i32* %20 monotonic, align 4
  %31 = zext i32 %30 to i64
  %32 = or i64 %18, %31
  %33 = add i64 %32, 7
  %34 = inttoptr i64 %33 to i16*
  %35 = load atomic i16, i16* %34 monotonic, align 2
  %36 = and i16 %35, 7
  %37 = icmp eq i16 %36, 2
  br i1 %37, label %38, label %156

38:                                               ; preds = %29
  %39 = load atomic i32, i32* %20 monotonic, align 4
  %40 = zext i32 %39 to i64
  %41 = or i64 %18, %40
  %42 = add i64 %41, 7
  %43 = inttoptr i64 %42 to i16*
  %44 = load atomic i16, i16* %43 monotonic, align 2
  %45 = and i16 %44, 8
  %46 = icmp eq i16 %45, 0
  br i1 %46, label %156, label %47

47:                                               ; preds = %38
  %48 = add i64 %2, 11
  %49 = inttoptr i64 %48 to i64*
  %50 = load i64, i64* %49, align 1
  %51 = icmp eq i64 %50, 0
  %52 = add i64 %6, 11
  br i1 %51, label %53, label %113

53:                                               ; preds = %47
  %54 = inttoptr i64 %52 to %"class.v8::String::ExternalOneByteStringResource"**
  %55 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %54, align 1
  %56 = ptrtoint %"class.v8::String::ExternalOneByteStringResource"* %55 to i64
  store i64 %56, i64* %49, align 1
  %57 = icmp eq %"class.v8::String::ExternalOneByteStringResource"* %55, null
  br i1 %57, label %96, label %58

58:                                               ; preds = %53
  %59 = load atomic i32, i32* %20 monotonic, align 4
  %60 = zext i32 %59 to i64
  %61 = or i64 %18, %60
  %62 = add i64 %61, 7
  %63 = inttoptr i64 %62 to i16*
  %64 = load atomic i16, i16* %63 monotonic, align 2
  %65 = and i16 %64, 16
  %66 = icmp eq i16 %65, 0
  %67 = inttoptr i64 %48 to %"class.v8::String::ExternalOneByteStringResource"**
  %68 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %67, align 1
  br i1 %66, label %78, label %69

69:                                               ; preds = %58
  %70 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %68, i64 0, i32 0
  %71 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %68 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %72 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %71, align 8
  %73 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %72, i64 2
  %74 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %73, align 8
  %75 = tail call zeroext i1 %74(%"class.v8::String::ExternalStringResourceBase"* %70) #7
  br i1 %75, label %76, label %87

76:                                               ; preds = %69
  %77 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %67, align 1
  tail call void @_ZN2v86String29ExternalOneByteStringResource15UpdateDataCacheEv(%"class.v8::String::ExternalOneByteStringResource"* %77) #7
  br label %87

78:                                               ; preds = %58
  %79 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %68 to i8* (%"class.v8::String::ExternalOneByteStringResource"*)***
  %80 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)**, i8* (%"class.v8::String::ExternalOneByteStringResource"*)*** %79, align 8
  %81 = getelementptr inbounds i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %80, i64 6
  %82 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %81, align 8
  %83 = tail call i8* %82(%"class.v8::String::ExternalOneByteStringResource"* %68) #7
  %84 = ptrtoint i8* %83 to i64
  %85 = add i64 %2, 19
  %86 = inttoptr i64 %85 to i64*
  store i64 %84, i64* %86, align 1
  br label %87

87:                                               ; preds = %78, %76, %69
  %88 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %55 to i64 (%"class.v8::String::ExternalOneByteStringResource"*)***
  %89 = load i64 (%"class.v8::String::ExternalOneByteStringResource"*)**, i64 (%"class.v8::String::ExternalOneByteStringResource"*)*** %88, align 8
  %90 = getelementptr inbounds i64 (%"class.v8::String::ExternalOneByteStringResource"*)*, i64 (%"class.v8::String::ExternalOneByteStringResource"*)** %89, i64 7
  %91 = load i64 (%"class.v8::String::ExternalOneByteStringResource"*)*, i64 (%"class.v8::String::ExternalOneByteStringResource"*)** %90, align 8
  %92 = tail call i64 %91(%"class.v8::String::ExternalOneByteStringResource"* nonnull %55) #7
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %96, label %94

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 2
  tail call void @_ZN2v88internal4Heap20UpdateExternalStringENS0_6StringEmm(%"class.v8::internal::Heap"* %95, i64 %2, i64 0, i64 %92) #7
  br label %96

96:                                               ; preds = %94, %87, %53
  %97 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 2
  %98 = load atomic i32, i32* %9 monotonic, align 4
  %99 = zext i32 %98 to i64
  %100 = or i64 %7, %99
  %101 = add i64 %100, 7
  %102 = inttoptr i64 %101 to i16*
  %103 = load atomic i16, i16* %102 monotonic, align 2
  %104 = and i16 %103, 8
  %105 = icmp eq i16 %104, 0
  %106 = select i1 %105, i32 2, i32 1
  %107 = add i64 %6, 7
  %108 = inttoptr i64 %107 to i32*
  %109 = load i32, i32* %108, align 4
  %110 = mul nsw i32 %106, %109
  %111 = sext i32 %110 to i64
  tail call void @_ZN2v88internal4Heap20UpdateExternalStringENS0_6StringEmm(%"class.v8::internal::Heap"* %97, i64 %6, i64 %111, i64 0) #7
  %112 = inttoptr i64 %52 to i64*
  store i64 0, i64* %112, align 1
  br label %333

113:                                              ; preds = %47
  %114 = inttoptr i64 %52 to i64*
  %115 = load i64, i64* %114, align 1
  %116 = icmp eq i64 %50, %115
  br i1 %116, label %333, label %117

117:                                              ; preds = %113
  %118 = and i64 %6, -262144
  %119 = inttoptr i64 %118 to %"class.v8::internal::Page"*
  %120 = load atomic i32, i32* %9 monotonic, align 4
  %121 = zext i32 %120 to i64
  %122 = or i64 %7, %121
  %123 = add i64 %122, 7
  %124 = inttoptr i64 %123 to i16*
  %125 = load atomic i16, i16* %124 monotonic, align 2
  %126 = and i16 %125, 8
  %127 = icmp eq i16 %126, 0
  %128 = select i1 %127, i32 2, i32 1
  %129 = add i64 %6, 7
  %130 = inttoptr i64 %129 to i32*
  %131 = load i32, i32* %130, align 4
  %132 = mul nsw i32 %128, %131
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %119, i64 0, i32 0, i32 11, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = atomicrmw sub i64* %134, i64 %133 seq_cst
  %136 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %119, i64 0, i32 0, i32 0, i32 8, i32 0
  %137 = bitcast %"struct.std::__1::__atomic_base.70"* %136 to i64*
  %138 = load atomic i64, i64* %137 seq_cst, align 64
  %139 = inttoptr i64 %138 to %"class.v8::internal::Space"*
  %140 = getelementptr inbounds %"class.v8::internal::Space", %"class.v8::internal::Space"* %139, i64 0, i32 3
  %141 = load %"struct.std::__1::atomic.20"*, %"struct.std::__1::atomic.20"** %140, align 8
  %142 = getelementptr inbounds %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20"* %141, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = atomicrmw sub i64* %142, i64 %133 seq_cst
  %144 = getelementptr inbounds %"class.v8::internal::Space", %"class.v8::internal::Space"* %139, i64 0, i32 0, i32 1
  %145 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %144, align 8
  %146 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %145, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = atomicrmw sub i64* %146, i64 %133 seq_cst
  %148 = load i64, i64* %114, align 1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %333, label %150

150:                                              ; preds = %117
  %151 = inttoptr i64 %148 to %"class.v8::String::ExternalStringResourceBase"*
  %152 = inttoptr i64 %148 to void (%"class.v8::String::ExternalStringResourceBase"*)***
  %153 = load void (%"class.v8::String::ExternalStringResourceBase"*)**, void (%"class.v8::String::ExternalStringResourceBase"*)*** %152, align 8
  %154 = getelementptr inbounds void (%"class.v8::String::ExternalStringResourceBase"*)*, void (%"class.v8::String::ExternalStringResourceBase"*)** %153, i64 3
  %155 = load void (%"class.v8::String::ExternalStringResourceBase"*)*, void (%"class.v8::String::ExternalStringResourceBase"*)** %154, align 8
  tail call void %155(%"class.v8::String::ExternalStringResourceBase"* %151) #7
  store i64 0, i64* %114, align 1
  br label %333

156:                                              ; preds = %38, %29, %21
  %157 = load atomic i32, i32* %20 monotonic, align 4
  %158 = zext i32 %157 to i64
  %159 = or i64 %18, %158
  %160 = add i64 %159, 7
  %161 = inttoptr i64 %160 to i16*
  %162 = load atomic i16, i16* %161 monotonic, align 2
  %163 = icmp ult i16 %162, 64
  br i1 %163, label %164, label %292

164:                                              ; preds = %156
  %165 = load atomic i32, i32* %20 monotonic, align 4
  %166 = zext i32 %165 to i64
  %167 = or i64 %18, %166
  %168 = add i64 %167, 7
  %169 = inttoptr i64 %168 to i16*
  %170 = load atomic i16, i16* %169 monotonic, align 2
  %171 = and i16 %170, 7
  %172 = icmp eq i16 %171, 2
  br i1 %172, label %173, label %292

173:                                              ; preds = %164
  %174 = load atomic i32, i32* %20 monotonic, align 4
  %175 = zext i32 %174 to i64
  %176 = or i64 %18, %175
  %177 = add i64 %176, 7
  %178 = inttoptr i64 %177 to i16*
  %179 = load atomic i16, i16* %178 monotonic, align 2
  %180 = and i16 %179, 8
  %181 = icmp eq i16 %180, 0
  br i1 %181, label %182, label %292

182:                                              ; preds = %173
  %183 = add i64 %2, 11
  %184 = inttoptr i64 %183 to i64*
  %185 = load i64, i64* %184, align 1
  %186 = icmp eq i64 %185, 0
  %187 = add i64 %6, 11
  br i1 %186, label %188, label %249

188:                                              ; preds = %182
  %189 = inttoptr i64 %187 to %"class.v8::String::ExternalStringResource"**
  %190 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %189, align 1
  %191 = ptrtoint %"class.v8::String::ExternalStringResource"* %190 to i64
  store i64 %191, i64* %184, align 1
  %192 = icmp eq %"class.v8::String::ExternalStringResource"* %190, null
  br i1 %192, label %232, label %193

193:                                              ; preds = %188
  %194 = load atomic i32, i32* %20 monotonic, align 4
  %195 = zext i32 %194 to i64
  %196 = or i64 %18, %195
  %197 = add i64 %196, 7
  %198 = inttoptr i64 %197 to i16*
  %199 = load atomic i16, i16* %198 monotonic, align 2
  %200 = and i16 %199, 16
  %201 = icmp eq i16 %200, 0
  %202 = inttoptr i64 %183 to %"class.v8::String::ExternalStringResource"**
  %203 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %202, align 1
  br i1 %201, label %213, label %204

204:                                              ; preds = %193
  %205 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %203, i64 0, i32 0
  %206 = bitcast %"class.v8::String::ExternalStringResource"* %203 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %207 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %206, align 8
  %208 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %207, i64 2
  %209 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %208, align 8
  %210 = tail call zeroext i1 %209(%"class.v8::String::ExternalStringResourceBase"* %205) #7
  br i1 %210, label %211, label %222

211:                                              ; preds = %204
  %212 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %202, align 1
  tail call void @_ZN2v86String22ExternalStringResource15UpdateDataCacheEv(%"class.v8::String::ExternalStringResource"* %212) #7
  br label %222

213:                                              ; preds = %193
  %214 = bitcast %"class.v8::String::ExternalStringResource"* %203 to i16* (%"class.v8::String::ExternalStringResource"*)***
  %215 = load i16* (%"class.v8::String::ExternalStringResource"*)**, i16* (%"class.v8::String::ExternalStringResource"*)*** %214, align 8
  %216 = getelementptr inbounds i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %215, i64 6
  %217 = load i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %216, align 8
  %218 = tail call i16* %217(%"class.v8::String::ExternalStringResource"* %203) #7
  %219 = ptrtoint i16* %218 to i64
  %220 = add i64 %2, 19
  %221 = inttoptr i64 %220 to i64*
  store i64 %219, i64* %221, align 1
  br label %222

222:                                              ; preds = %213, %211, %204
  %223 = bitcast %"class.v8::String::ExternalStringResource"* %190 to i64 (%"class.v8::String::ExternalStringResource"*)***
  %224 = load i64 (%"class.v8::String::ExternalStringResource"*)**, i64 (%"class.v8::String::ExternalStringResource"*)*** %223, align 8
  %225 = getelementptr inbounds i64 (%"class.v8::String::ExternalStringResource"*)*, i64 (%"class.v8::String::ExternalStringResource"*)** %224, i64 7
  %226 = load i64 (%"class.v8::String::ExternalStringResource"*)*, i64 (%"class.v8::String::ExternalStringResource"*)** %225, align 8
  %227 = tail call i64 %226(%"class.v8::String::ExternalStringResource"* nonnull %190) #7
  %228 = shl i64 %227, 1
  %229 = icmp eq i64 %228, 0
  br i1 %229, label %232, label %230

230:                                              ; preds = %222
  %231 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 2
  tail call void @_ZN2v88internal4Heap20UpdateExternalStringENS0_6StringEmm(%"class.v8::internal::Heap"* %231, i64 %2, i64 0, i64 %228) #7
  br label %232

232:                                              ; preds = %230, %222, %188
  %233 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 2
  %234 = load atomic i32, i32* %9 monotonic, align 4
  %235 = zext i32 %234 to i64
  %236 = or i64 %7, %235
  %237 = add i64 %236, 7
  %238 = inttoptr i64 %237 to i16*
  %239 = load atomic i16, i16* %238 monotonic, align 2
  %240 = and i16 %239, 8
  %241 = icmp eq i16 %240, 0
  %242 = select i1 %241, i32 2, i32 1
  %243 = add i64 %6, 7
  %244 = inttoptr i64 %243 to i32*
  %245 = load i32, i32* %244, align 4
  %246 = mul nsw i32 %242, %245
  %247 = sext i32 %246 to i64
  tail call void @_ZN2v88internal4Heap20UpdateExternalStringENS0_6StringEmm(%"class.v8::internal::Heap"* %233, i64 %6, i64 %247, i64 0) #7
  %248 = inttoptr i64 %187 to i64*
  store i64 0, i64* %248, align 1
  br label %333

249:                                              ; preds = %182
  %250 = inttoptr i64 %187 to i64*
  %251 = load i64, i64* %250, align 1
  %252 = icmp eq i64 %185, %251
  br i1 %252, label %333, label %253

253:                                              ; preds = %249
  %254 = and i64 %6, -262144
  %255 = inttoptr i64 %254 to %"class.v8::internal::Page"*
  %256 = load atomic i32, i32* %9 monotonic, align 4
  %257 = zext i32 %256 to i64
  %258 = or i64 %7, %257
  %259 = add i64 %258, 7
  %260 = inttoptr i64 %259 to i16*
  %261 = load atomic i16, i16* %260 monotonic, align 2
  %262 = and i16 %261, 8
  %263 = icmp eq i16 %262, 0
  %264 = select i1 %263, i32 2, i32 1
  %265 = add i64 %6, 7
  %266 = inttoptr i64 %265 to i32*
  %267 = load i32, i32* %266, align 4
  %268 = mul nsw i32 %264, %267
  %269 = sext i32 %268 to i64
  %270 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %255, i64 0, i32 0, i32 11, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %271 = atomicrmw sub i64* %270, i64 %269 seq_cst
  %272 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %255, i64 0, i32 0, i32 0, i32 8, i32 0
  %273 = bitcast %"struct.std::__1::__atomic_base.70"* %272 to i64*
  %274 = load atomic i64, i64* %273 seq_cst, align 64
  %275 = inttoptr i64 %274 to %"class.v8::internal::Space"*
  %276 = getelementptr inbounds %"class.v8::internal::Space", %"class.v8::internal::Space"* %275, i64 0, i32 3
  %277 = load %"struct.std::__1::atomic.20"*, %"struct.std::__1::atomic.20"** %276, align 8
  %278 = getelementptr inbounds %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20"* %277, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %279 = atomicrmw sub i64* %278, i64 %269 seq_cst
  %280 = getelementptr inbounds %"class.v8::internal::Space", %"class.v8::internal::Space"* %275, i64 0, i32 0, i32 1
  %281 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %280, align 8
  %282 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %281, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0, i32 0
  %283 = atomicrmw sub i64* %282, i64 %269 seq_cst
  %284 = load i64, i64* %250, align 1
  %285 = icmp eq i64 %284, 0
  br i1 %285, label %333, label %286

286:                                              ; preds = %253
  %287 = inttoptr i64 %284 to %"class.v8::String::ExternalStringResourceBase"*
  %288 = inttoptr i64 %284 to void (%"class.v8::String::ExternalStringResourceBase"*)***
  %289 = load void (%"class.v8::String::ExternalStringResourceBase"*)**, void (%"class.v8::String::ExternalStringResourceBase"*)*** %288, align 8
  %290 = getelementptr inbounds void (%"class.v8::String::ExternalStringResourceBase"*)*, void (%"class.v8::String::ExternalStringResourceBase"*)** %289, i64 3
  %291 = load void (%"class.v8::String::ExternalStringResourceBase"*)*, void (%"class.v8::String::ExternalStringResourceBase"*)** %290, align 8
  tail call void %291(%"class.v8::String::ExternalStringResourceBase"* %287) #7
  store i64 0, i64* %250, align 1
  br label %333

292:                                              ; preds = %164, %156, %173
  %293 = and i64 %6, -262144
  %294 = inttoptr i64 %293 to %"class.v8::internal::Page"*
  %295 = load atomic i32, i32* %9 monotonic, align 4
  %296 = zext i32 %295 to i64
  %297 = or i64 %7, %296
  %298 = add i64 %297, 7
  %299 = inttoptr i64 %298 to i16*
  %300 = load atomic i16, i16* %299 monotonic, align 2
  %301 = and i16 %300, 8
  %302 = icmp eq i16 %301, 0
  %303 = select i1 %302, i32 2, i32 1
  %304 = add i64 %6, 7
  %305 = inttoptr i64 %304 to i32*
  %306 = load i32, i32* %305, align 4
  %307 = mul nsw i32 %303, %306
  %308 = sext i32 %307 to i64
  %309 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %294, i64 0, i32 0, i32 11, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %310 = atomicrmw sub i64* %309, i64 %308 seq_cst
  %311 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %294, i64 0, i32 0, i32 0, i32 8, i32 0
  %312 = bitcast %"struct.std::__1::__atomic_base.70"* %311 to i64*
  %313 = load atomic i64, i64* %312 seq_cst, align 64
  %314 = inttoptr i64 %313 to %"class.v8::internal::Space"*
  %315 = getelementptr inbounds %"class.v8::internal::Space", %"class.v8::internal::Space"* %314, i64 0, i32 3
  %316 = load %"struct.std::__1::atomic.20"*, %"struct.std::__1::atomic.20"** %315, align 8
  %317 = getelementptr inbounds %"struct.std::__1::atomic.20", %"struct.std::__1::atomic.20"* %316, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %318 = atomicrmw sub i64* %317, i64 %308 seq_cst
  %319 = getelementptr inbounds %"class.v8::internal::Space", %"class.v8::internal::Space"* %314, i64 0, i32 0, i32 1
  %320 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %319, align 8
  %321 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %320, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0, i32 0
  %322 = atomicrmw sub i64* %321, i64 %308 seq_cst
  %323 = add i64 %6, 11
  %324 = inttoptr i64 %323 to i64*
  %325 = load i64, i64* %324, align 1
  %326 = icmp eq i64 %325, 0
  br i1 %326, label %333, label %327

327:                                              ; preds = %292
  %328 = inttoptr i64 %325 to %"class.v8::String::ExternalStringResourceBase"*
  %329 = inttoptr i64 %325 to void (%"class.v8::String::ExternalStringResourceBase"*)***
  %330 = load void (%"class.v8::String::ExternalStringResourceBase"*)**, void (%"class.v8::String::ExternalStringResourceBase"*)*** %329, align 8
  %331 = getelementptr inbounds void (%"class.v8::String::ExternalStringResourceBase"*)*, void (%"class.v8::String::ExternalStringResourceBase"*)** %330, i64 3
  %332 = load void (%"class.v8::String::ExternalStringResourceBase"*)*, void (%"class.v8::String::ExternalStringResourceBase"*)** %331, align 8
  tail call void %332(%"class.v8::String::ExternalStringResourceBase"* %328) #7
  store i64 0, i64* %324, align 1
  br label %333

333:                                              ; preds = %3, %327, %292, %286, %253, %249, %232, %150, %117, %113, %96
  %334 = load i64, i64* %5, align 8
  %335 = and i64 %334, -4294967296
  %336 = add i64 %334, -1
  %337 = inttoptr i64 %336 to i32*
  %338 = load atomic i32, i32* %337 acquire, align 4
  %339 = zext i32 %338 to i64
  %340 = or i64 %335, %339
  %341 = add i64 %340, 7
  %342 = inttoptr i64 %341 to i16*
  %343 = load atomic i16, i16* %342 monotonic, align 2
  %344 = and i16 %343, 1
  %345 = load i64, i64* %5, align 8
  %346 = and i64 %345, -4294967296
  %347 = add i64 %345, -1
  %348 = inttoptr i64 %347 to i32*
  %349 = load atomic i32, i32* %348 monotonic, align 4
  %350 = zext i32 %349 to i64
  %351 = or i64 %346, %350
  %352 = tail call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* %4, i64 %351) #7
  %353 = load atomic i32, i32* %20 monotonic, align 4
  %354 = zext i32 %353 to i64
  %355 = or i64 %18, %354
  %356 = add i64 %355, 7
  %357 = inttoptr i64 %356 to i16*
  %358 = load atomic i16, i16* %357 monotonic, align 2
  %359 = and i16 %358, 8
  %360 = icmp eq i16 %359, 0
  %361 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 26
  %362 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 81
  %363 = select i1 %360, i64* %362, i64* %361
  %364 = load i64, i64* %5, align 8
  %365 = add i64 %364, 11
  %366 = inttoptr i64 %365 to i32*
  %367 = trunc i64 %2 to i32
  store atomic volatile i32 %367, i32* %366 monotonic, align 4
  %368 = and i64 %2, 1
  %369 = icmp eq i64 %368, 0
  br i1 %369, label %381, label %370

370:                                              ; preds = %333
  %371 = and i64 %364, -262144
  %372 = or i64 %371, 8
  %373 = inttoptr i64 %372 to i64*
  %374 = load i64, i64* %373, align 8
  %375 = and i64 %374, 262144
  %376 = icmp eq i64 %375, 0
  br i1 %376, label %381, label %377

377:                                              ; preds = %370
  %378 = or i64 %371, 16
  %379 = inttoptr i64 %378 to %"class.v8::internal::Heap"**
  %380 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %379, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %380, i64 %364, i64 %365, i64 %2) #7
  br label %381

381:                                              ; preds = %377, %370, %333
  %382 = and i64 %2, -262144
  %383 = or i64 %382, 8
  %384 = inttoptr i64 %383 to i64*
  %385 = load i64, i64* %384, align 8
  %386 = and i64 %385, 24
  %387 = icmp eq i64 %386, 0
  br i1 %387, label %396, label %388

388:                                              ; preds = %381
  %389 = and i64 %364, -262144
  %390 = or i64 %389, 8
  %391 = inttoptr i64 %390 to i64*
  %392 = load i64, i64* %391, align 8
  %393 = and i64 %392, 24
  %394 = icmp eq i64 %393, 0
  br i1 %394, label %395, label %396

395:                                              ; preds = %388
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %364, i64 %365, i64 %2) #7
  br label %396

396:                                              ; preds = %381, %388, %395
  %397 = load i64, i64* %363, align 8
  %398 = load i64, i64* %5, align 8
  %399 = add i64 %398, -1
  %400 = inttoptr i64 %399 to i32*
  %401 = trunc i64 %397 to i32
  store atomic volatile i32 %401, i32* %400 release, align 4
  %402 = icmp eq i32 %401, 0
  br i1 %402, label %418, label %403

403:                                              ; preds = %396
  %404 = load i64, i64* %5, align 8
  %405 = and i64 %397, 1
  %406 = icmp eq i64 %405, 0
  br i1 %406, label %418, label %407

407:                                              ; preds = %403
  %408 = and i64 %404, -262144
  %409 = or i64 %408, 8
  %410 = inttoptr i64 %409 to i64*
  %411 = load i64, i64* %410, align 8
  %412 = and i64 %411, 262144
  %413 = icmp eq i64 %412, 0
  br i1 %413, label %418, label %414

414:                                              ; preds = %407
  %415 = or i64 %408, 16
  %416 = inttoptr i64 %415 to %"class.v8::internal::Heap"**
  %417 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %416, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %417, i64 %404, i64 0, i64 %397) #7
  br label %418

418:                                              ; preds = %396, %403, %407, %414
  %419 = add nsw i32 %352, -16
  %420 = icmp eq i32 %419, 0
  br i1 %420, label %427, label %421

421:                                              ; preds = %418
  %422 = add i64 %364, 15
  %423 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 2
  %424 = xor i16 %344, 1
  %425 = zext i16 %424 to i32
  %426 = tail call i64 @_ZN2v88internal4Heap20CreateFillerObjectAtEmiNS0_18ClearRecordedSlotsE(%"class.v8::internal::Heap"* %423, i64 %422, i32 %419, i32 %425) #7
  br label %427

427:                                              ; preds = %418, %421
  ret void
}

declare i64 @_ZN2v88internal4Heap20CreateFillerObjectAtEmiNS0_18ClearRecordedSlotsE(%"class.v8::internal::Heap"*, i64, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal6String12MakeExternalEPNS_6String22ExternalStringResourceE(%"class.v8::internal::String"*, %"class.v8::String::ExternalStringResource"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::String", align 8
  %4 = alloca %"class.v8::internal::CombinationAssertScope", align 1
  %5 = getelementptr inbounds %"class.v8::internal::CombinationAssertScope", %"class.v8::internal::CombinationAssertScope"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, -4294967296
  %10 = add i64 %8, -1
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %9, %13
  %15 = tail call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* %6, i64 %14) #7
  %16 = icmp slt i32 %15, 20
  br i1 %16, label %311, label %17

17:                                               ; preds = %2
  %18 = load i64, i64* %7, align 8
  %19 = and i64 %18, -262144
  %20 = or i64 %19, 8
  %21 = inttoptr i64 %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = and i64 %22, 2097152
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %311

25:                                               ; preds = %17
  %26 = or i64 %19, 16
  %27 = inttoptr i64 %26 to i64*
  %28 = load i64, i64* %27, align 16
  %29 = add i64 %28, -41416
  %30 = inttoptr i64 %29 to %"class.v8::internal::Isolate"*
  %31 = and i64 %18, -4294967296
  %32 = add i64 %18, -1
  %33 = inttoptr i64 %32 to i32*
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = zext i32 %34 to i64
  %36 = or i64 %31, %35
  %37 = add i64 %36, 7
  %38 = inttoptr i64 %37 to i16*
  %39 = load atomic i16, i16* %38 monotonic, align 2
  %40 = icmp ult i16 %39, 32
  %41 = load atomic i32, i32* %33 acquire, align 4
  %42 = zext i32 %41 to i64
  %43 = or i64 %31, %42
  %44 = add i64 %43, 7
  %45 = inttoptr i64 %44 to i16*
  %46 = load atomic i16, i16* %45 monotonic, align 2
  %47 = and i16 %46, 1
  %48 = icmp ne i16 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %25
  %50 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %30, i64 0, i32 2
  %51 = load i64, i64* %7, align 8
  call void @_ZN2v88internal4Heap24NotifyObjectLayoutChangeENS0_10HeapObjectERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENS4_ILS5_1ELb0EEEEEENS0_23InvalidateRecordedSlotsE(%"class.v8::internal::Heap"* %50, i64 %51, %"class.v8::internal::CombinationAssertScope"* nonnull dereferenceable(1) %4, i32 0) #7
  br label %52

52:                                               ; preds = %49, %25
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %30, i64 0, i32 17
  call void @_ZN2v84base11SharedMutex13LockExclusiveEv(%"class.v8::base::SharedMutex"* %53) #7
  %54 = icmp slt i32 %15, 28
  br i1 %54, label %55, label %60

55:                                               ; preds = %52
  br i1 %40, label %56, label %58

56:                                               ; preds = %55
  %57 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %30, i64 0, i32 0, i32 7, i32 0, i64 90
  br label %65

58:                                               ; preds = %55
  %59 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %30, i64 0, i32 0, i32 7, i32 0, i64 86
  br label %65

60:                                               ; preds = %52
  br i1 %40, label %61, label %63

61:                                               ; preds = %60
  %62 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %30, i64 0, i32 0, i32 7, i32 0, i64 88
  br label %65

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %30, i64 0, i32 0, i32 7, i32 0, i64 84
  br label %65

65:                                               ; preds = %61, %63, %56, %58
  %66 = phi i64* [ %57, %56 ], [ %59, %58 ], [ %62, %61 ], [ %64, %63 ]
  %67 = load i64, i64* %66, align 8
  %68 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* %6, i64 %67) #7
  %69 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %30, i64 0, i32 2
  %70 = load i64, i64* %7, align 8
  %71 = add i64 %70, -1
  %72 = sext i32 %68 to i64
  %73 = add i64 %71, %72
  %74 = sub nsw i32 %15, %68
  %75 = xor i1 %48, true
  %76 = zext i1 %75 to i32
  %77 = call i64 @_ZN2v88internal4Heap20CreateFillerObjectAtEmiNS0_18ClearRecordedSlotsE(%"class.v8::internal::Heap"* %69, i64 %73, i32 %74, i32 %76) #7
  %78 = load i64, i64* %7, align 8
  %79 = add i64 %78, -1
  %80 = inttoptr i64 %79 to i32*
  %81 = trunc i64 %67 to i32
  store atomic volatile i32 %81, i32* %80 release, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %98, label %83

83:                                               ; preds = %65
  %84 = load i64, i64* %7, align 8
  %85 = and i64 %67, 1
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %98, label %87

87:                                               ; preds = %83
  %88 = and i64 %84, -262144
  %89 = or i64 %88, 8
  %90 = inttoptr i64 %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = and i64 %91, 262144
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %98, label %94

94:                                               ; preds = %87
  %95 = or i64 %88, 16
  %96 = inttoptr i64 %95 to %"class.v8::internal::Heap"**
  %97 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %96, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %97, i64 %84, i64 0, i64 %67) #7
  br label %98

98:                                               ; preds = %65, %83, %87, %94
  %99 = load i64, i64* %7, align 8
  %100 = and i64 %99, -4294967296
  %101 = add i64 %99, -1
  %102 = inttoptr i64 %101 to i32*
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = zext i32 %103 to i64
  %105 = or i64 %100, %104
  %106 = add i64 %105, 7
  %107 = inttoptr i64 %106 to i16*
  %108 = load atomic i16, i16* %107 monotonic, align 2
  %109 = ptrtoint %"class.v8::String::ExternalStringResource"* %1 to i64
  %110 = add i64 %99, 11
  %111 = inttoptr i64 %110 to i64*
  store i64 %109, i64* %111, align 1
  %112 = icmp eq %"class.v8::String::ExternalStringResource"* %1, null
  br i1 %112, label %151, label %113

113:                                              ; preds = %98
  %114 = load atomic i32, i32* %102 monotonic, align 4
  %115 = zext i32 %114 to i64
  %116 = or i64 %100, %115
  %117 = add i64 %116, 7
  %118 = inttoptr i64 %117 to i16*
  %119 = load atomic i16, i16* %118 monotonic, align 2
  %120 = and i16 %119, 16
  %121 = icmp eq i16 %120, 0
  %122 = inttoptr i64 %110 to %"class.v8::String::ExternalStringResource"**
  %123 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %122, align 1
  br i1 %121, label %133, label %124

124:                                              ; preds = %113
  %125 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %123, i64 0, i32 0
  %126 = bitcast %"class.v8::String::ExternalStringResource"* %123 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %127 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %126, align 8
  %128 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %127, i64 2
  %129 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %128, align 8
  %130 = call zeroext i1 %129(%"class.v8::String::ExternalStringResourceBase"* %125) #7
  br i1 %130, label %131, label %142

131:                                              ; preds = %124
  %132 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %122, align 1
  call void @_ZN2v86String22ExternalStringResource15UpdateDataCacheEv(%"class.v8::String::ExternalStringResource"* %132) #7
  br label %142

133:                                              ; preds = %113
  %134 = bitcast %"class.v8::String::ExternalStringResource"* %123 to i16* (%"class.v8::String::ExternalStringResource"*)***
  %135 = load i16* (%"class.v8::String::ExternalStringResource"*)**, i16* (%"class.v8::String::ExternalStringResource"*)*** %134, align 8
  %136 = getelementptr inbounds i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %135, i64 6
  %137 = load i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %136, align 8
  %138 = call i16* %137(%"class.v8::String::ExternalStringResource"* %123) #7
  %139 = ptrtoint i16* %138 to i64
  %140 = add i64 %99, 19
  %141 = inttoptr i64 %140 to i64*
  store i64 %139, i64* %141, align 1
  br label %142

142:                                              ; preds = %133, %131, %124
  %143 = bitcast %"class.v8::String::ExternalStringResource"* %1 to i64 (%"class.v8::String::ExternalStringResource"*)***
  %144 = load i64 (%"class.v8::String::ExternalStringResource"*)**, i64 (%"class.v8::String::ExternalStringResource"*)*** %143, align 8
  %145 = getelementptr inbounds i64 (%"class.v8::String::ExternalStringResource"*)*, i64 (%"class.v8::String::ExternalStringResource"*)** %144, i64 7
  %146 = load i64 (%"class.v8::String::ExternalStringResource"*)*, i64 (%"class.v8::String::ExternalStringResource"*)** %145, align 8
  %147 = call i64 %146(%"class.v8::String::ExternalStringResource"* nonnull %1) #7
  %148 = shl i64 %147, 1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %151, label %150

150:                                              ; preds = %142
  call void @_ZN2v88internal4Heap20UpdateExternalStringENS0_6StringEmm(%"class.v8::internal::Heap"* %69, i64 %99, i64 0, i64 %148) #7
  br label %151

151:                                              ; preds = %98, %142, %150
  %152 = load i64, i64* %7, align 8
  %153 = and i64 %152, -262144
  %154 = inttoptr i64 %153 to %"class.v8::internal::BasicMemoryChunk"*
  %155 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %154, i64 0, i32 1
  %156 = load i64, i64* %155, align 8
  %157 = and i64 %156, 24
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %229, label %159

159:                                              ; preds = %151
  %160 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %30, i64 0, i32 2, i32 119, i32 1
  %161 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %30, i64 0, i32 2, i32 119, i32 1, i32 0, i32 1
  %162 = load %"class.v8::internal::Object"*, %"class.v8::internal::Object"** %161, align 8
  %163 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %30, i64 0, i32 2, i32 119, i32 1, i32 0, i32 2, i32 0, i32 0
  %164 = load %"class.v8::internal::Object"*, %"class.v8::internal::Object"** %163, align 8
  %165 = icmp eq %"class.v8::internal::Object"* %162, %164
  %166 = ptrtoint %"class.v8::internal::Object"* %164 to i64
  br i1 %165, label %172, label %167

167:                                              ; preds = %159
  %168 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %162, i64 0, i32 0, i32 0
  store i64 %152, i64* %168, align 8
  %169 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %162, i64 1
  %170 = ptrtoint %"class.v8::internal::Object"* %169 to i64
  %171 = bitcast %"class.v8::internal::Object"** %161 to i64*
  store i64 %170, i64* %171, align 8
  br label %299

172:                                              ; preds = %159
  %173 = ptrtoint %"class.v8::internal::Object"* %162 to i64
  %174 = bitcast %"class.v8::internal::Object"** %161 to i64*
  %175 = bitcast %"class.std::__1::vector.542"* %160 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %173, %176
  %178 = ashr exact i64 %177, 3
  %179 = add nsw i64 %178, 1
  %180 = icmp ugt i64 %179, 2305843009213693951
  br i1 %180, label %181, label %183

181:                                              ; preds = %172
  %182 = bitcast %"class.std::__1::vector.542"* %160 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %182) #18
  unreachable

183:                                              ; preds = %172
  %184 = bitcast %"class.v8::internal::Object"** %163 to i64*
  %185 = sub i64 %166, %176
  %186 = ashr exact i64 %185, 3
  %187 = icmp ult i64 %186, 1152921504606846975
  br i1 %187, label %188, label %196

188:                                              ; preds = %183
  %189 = ashr exact i64 %185, 2
  %190 = icmp ult i64 %189, %179
  %191 = select i1 %190, i64 %179, i64 %189
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %201, label %193

193:                                              ; preds = %188
  %194 = icmp ugt i64 %191, 2305843009213693951
  br i1 %194, label %195, label %196

195:                                              ; preds = %193
  call void @abort() #18
  unreachable

196:                                              ; preds = %193, %183
  %197 = phi i64 [ %191, %193 ], [ 2305843009213693951, %183 ]
  %198 = shl i64 %197, 3
  %199 = call i8* @_Znwm(i64 %198) #19
  %200 = bitcast i8* %199 to %"class.v8::internal::Object"*
  br label %201

201:                                              ; preds = %196, %188
  %202 = phi i64 [ %197, %196 ], [ 0, %188 ]
  %203 = phi %"class.v8::internal::Object"* [ %200, %196 ], [ null, %188 ]
  %204 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %203, i64 %178
  %205 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %203, i64 %202
  %206 = ptrtoint %"class.v8::internal::Object"* %205 to i64
  %207 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %204, i64 0, i32 0, i32 0
  store i64 %152, i64* %207, align 8
  %208 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %204, i64 1
  %209 = ptrtoint %"class.v8::internal::Object"* %208 to i64
  %210 = getelementptr inbounds %"class.std::__1::vector.542", %"class.std::__1::vector.542"* %160, i64 0, i32 0, i32 0
  %211 = load %"class.v8::internal::Object"*, %"class.v8::internal::Object"** %210, align 8
  %212 = load i64, i64* %174, align 8
  %213 = ptrtoint %"class.v8::internal::Object"* %211 to i64
  %214 = sub i64 %212, %213
  %215 = ashr exact i64 %214, 3
  %216 = sub nsw i64 0, %215
  %217 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %204, i64 %216
  %218 = ptrtoint %"class.v8::internal::Object"* %217 to i64
  %219 = icmp sgt i64 %214, 0
  br i1 %219, label %220, label %224

220:                                              ; preds = %201
  %221 = bitcast %"class.v8::internal::Object"* %217 to i8*
  %222 = bitcast %"class.v8::internal::Object"* %211 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %221, i8* align 8 %222, i64 %214, i1 false) #7
  %223 = load %"class.v8::internal::Object"*, %"class.v8::internal::Object"** %210, align 8
  br label %224

224:                                              ; preds = %220, %201
  %225 = phi %"class.v8::internal::Object"* [ %211, %201 ], [ %223, %220 ]
  store i64 %218, i64* %175, align 8
  store i64 %209, i64* %174, align 8
  store i64 %206, i64* %184, align 8
  %226 = icmp eq %"class.v8::internal::Object"* %225, null
  br i1 %226, label %299, label %227

227:                                              ; preds = %224
  %228 = bitcast %"class.v8::internal::Object"* %225 to i8*
  call void @_ZdlPv(i8* %228) #19
  br label %299

229:                                              ; preds = %151
  %230 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %30, i64 0, i32 2, i32 119, i32 2
  %231 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %30, i64 0, i32 2, i32 119, i32 2, i32 0, i32 1
  %232 = load %"class.v8::internal::Object"*, %"class.v8::internal::Object"** %231, align 8
  %233 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %30, i64 0, i32 2, i32 119, i32 2, i32 0, i32 2, i32 0, i32 0
  %234 = load %"class.v8::internal::Object"*, %"class.v8::internal::Object"** %233, align 8
  %235 = icmp eq %"class.v8::internal::Object"* %232, %234
  %236 = ptrtoint %"class.v8::internal::Object"* %234 to i64
  br i1 %235, label %242, label %237

237:                                              ; preds = %229
  %238 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %232, i64 0, i32 0, i32 0
  store i64 %152, i64* %238, align 8
  %239 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %232, i64 1
  %240 = ptrtoint %"class.v8::internal::Object"* %239 to i64
  %241 = bitcast %"class.v8::internal::Object"** %231 to i64*
  store i64 %240, i64* %241, align 8
  br label %299

242:                                              ; preds = %229
  %243 = ptrtoint %"class.v8::internal::Object"* %232 to i64
  %244 = bitcast %"class.v8::internal::Object"** %231 to i64*
  %245 = bitcast %"class.std::__1::vector.542"* %230 to i64*
  %246 = load i64, i64* %245, align 8
  %247 = sub i64 %243, %246
  %248 = ashr exact i64 %247, 3
  %249 = add nsw i64 %248, 1
  %250 = icmp ugt i64 %249, 2305843009213693951
  br i1 %250, label %251, label %253

251:                                              ; preds = %242
  %252 = bitcast %"class.std::__1::vector.542"* %230 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %252) #18
  unreachable

253:                                              ; preds = %242
  %254 = bitcast %"class.v8::internal::Object"** %233 to i64*
  %255 = sub i64 %236, %246
  %256 = ashr exact i64 %255, 3
  %257 = icmp ult i64 %256, 1152921504606846975
  br i1 %257, label %258, label %266

258:                                              ; preds = %253
  %259 = ashr exact i64 %255, 2
  %260 = icmp ult i64 %259, %249
  %261 = select i1 %260, i64 %249, i64 %259
  %262 = icmp eq i64 %261, 0
  br i1 %262, label %271, label %263

263:                                              ; preds = %258
  %264 = icmp ugt i64 %261, 2305843009213693951
  br i1 %264, label %265, label %266

265:                                              ; preds = %263
  call void @abort() #18
  unreachable

266:                                              ; preds = %263, %253
  %267 = phi i64 [ %261, %263 ], [ 2305843009213693951, %253 ]
  %268 = shl i64 %267, 3
  %269 = call i8* @_Znwm(i64 %268) #19
  %270 = bitcast i8* %269 to %"class.v8::internal::Object"*
  br label %271

271:                                              ; preds = %266, %258
  %272 = phi i64 [ %267, %266 ], [ 0, %258 ]
  %273 = phi %"class.v8::internal::Object"* [ %270, %266 ], [ null, %258 ]
  %274 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %273, i64 %248
  %275 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %273, i64 %272
  %276 = ptrtoint %"class.v8::internal::Object"* %275 to i64
  %277 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %274, i64 0, i32 0, i32 0
  store i64 %152, i64* %277, align 8
  %278 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %274, i64 1
  %279 = ptrtoint %"class.v8::internal::Object"* %278 to i64
  %280 = getelementptr inbounds %"class.std::__1::vector.542", %"class.std::__1::vector.542"* %230, i64 0, i32 0, i32 0
  %281 = load %"class.v8::internal::Object"*, %"class.v8::internal::Object"** %280, align 8
  %282 = load i64, i64* %244, align 8
  %283 = ptrtoint %"class.v8::internal::Object"* %281 to i64
  %284 = sub i64 %282, %283
  %285 = ashr exact i64 %284, 3
  %286 = sub nsw i64 0, %285
  %287 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %274, i64 %286
  %288 = ptrtoint %"class.v8::internal::Object"* %287 to i64
  %289 = icmp sgt i64 %284, 0
  br i1 %289, label %290, label %294

290:                                              ; preds = %271
  %291 = bitcast %"class.v8::internal::Object"* %287 to i8*
  %292 = bitcast %"class.v8::internal::Object"* %281 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %291, i8* align 8 %292, i64 %284, i1 false) #7
  %293 = load %"class.v8::internal::Object"*, %"class.v8::internal::Object"** %280, align 8
  br label %294

294:                                              ; preds = %290, %271
  %295 = phi %"class.v8::internal::Object"* [ %281, %271 ], [ %293, %290 ]
  store i64 %288, i64* %245, align 8
  store i64 %279, i64* %244, align 8
  store i64 %276, i64* %254, align 8
  %296 = icmp eq %"class.v8::internal::Object"* %295, null
  br i1 %296, label %299, label %297

297:                                              ; preds = %294
  %298 = bitcast %"class.v8::internal::Object"* %295 to i8*
  call void @_ZdlPv(i8* %298) #19
  br label %299

299:                                              ; preds = %297, %294, %237, %227, %224, %167
  br i1 %40, label %300, label %310

300:                                              ; preds = %299
  %301 = add i64 %99, 3
  %302 = inttoptr i64 %301 to i32*
  %303 = load i32, i32* %302, align 4
  %304 = and i32 %303, 1
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %310, label %306

306:                                              ; preds = %300
  %307 = bitcast %"class.v8::internal::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %307) #7
  %308 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %99, i64* %308, align 8
  %309 = call i32 @_ZN2v88internal6String17ComputeAndSetHashEv(%"class.v8::internal::String"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %307) #7
  br label %310

310:                                              ; preds = %300, %306, %299
  call void @_ZN2v84base11SharedMutex15UnlockExclusiveEv(%"class.v8::base::SharedMutex"* %53) #7
  br label %311

311:                                              ; preds = %17, %2, %310
  %312 = phi i1 [ true, %310 ], [ false, %2 ], [ false, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #7
  ret i1 %312
}

declare void @_ZN2v88internal4Heap24NotifyObjectLayoutChangeENS0_10HeapObjectERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENS4_ILS5_1ELb0EEEEEENS0_23InvalidateRecordedSlotsE(%"class.v8::internal::Heap"*, i64, %"class.v8::internal::CombinationAssertScope"* dereferenceable(1), i32) local_unnamed_addr #3

declare i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal6String12MakeExternalEPNS_6String29ExternalOneByteStringResourceE(%"class.v8::internal::String"*, %"class.v8::String::ExternalOneByteStringResource"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::String", align 8
  %4 = alloca %"class.v8::internal::CombinationAssertScope", align 1
  %5 = getelementptr inbounds %"class.v8::internal::CombinationAssertScope", %"class.v8::internal::CombinationAssertScope"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, -4294967296
  %10 = add i64 %8, -1
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %9, %13
  %15 = tail call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* %6, i64 %14) #7
  %16 = icmp slt i32 %15, 20
  br i1 %16, label %310, label %17

17:                                               ; preds = %2
  %18 = load i64, i64* %7, align 8
  %19 = and i64 %18, -262144
  %20 = or i64 %19, 8
  %21 = inttoptr i64 %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = and i64 %22, 2097152
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %310

25:                                               ; preds = %17
  %26 = or i64 %19, 16
  %27 = inttoptr i64 %26 to i64*
  %28 = load i64, i64* %27, align 16
  %29 = add i64 %28, -41416
  %30 = inttoptr i64 %29 to %"class.v8::internal::Isolate"*
  %31 = and i64 %18, -4294967296
  %32 = add i64 %18, -1
  %33 = inttoptr i64 %32 to i32*
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = zext i32 %34 to i64
  %36 = or i64 %31, %35
  %37 = add i64 %36, 7
  %38 = inttoptr i64 %37 to i16*
  %39 = load atomic i16, i16* %38 monotonic, align 2
  %40 = icmp ult i16 %39, 32
  %41 = load atomic i32, i32* %33 acquire, align 4
  %42 = zext i32 %41 to i64
  %43 = or i64 %31, %42
  %44 = add i64 %43, 7
  %45 = inttoptr i64 %44 to i16*
  %46 = load atomic i16, i16* %45 monotonic, align 2
  %47 = and i16 %46, 1
  %48 = icmp ne i16 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %25
  %50 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %30, i64 0, i32 2
  %51 = load i64, i64* %7, align 8
  call void @_ZN2v88internal4Heap24NotifyObjectLayoutChangeENS0_10HeapObjectERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENS4_ILS5_1ELb0EEEEEENS0_23InvalidateRecordedSlotsE(%"class.v8::internal::Heap"* %50, i64 %51, %"class.v8::internal::CombinationAssertScope"* nonnull dereferenceable(1) %4, i32 0) #7
  br label %52

52:                                               ; preds = %49, %25
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %30, i64 0, i32 17
  call void @_ZN2v84base11SharedMutex13LockExclusiveEv(%"class.v8::base::SharedMutex"* %53) #7
  %54 = icmp slt i32 %15, 28
  br i1 %54, label %55, label %60

55:                                               ; preds = %52
  br i1 %40, label %56, label %58

56:                                               ; preds = %55
  %57 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %30, i64 0, i32 0, i32 7, i32 0, i64 91
  br label %65

58:                                               ; preds = %55
  %59 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %30, i64 0, i32 0, i32 7, i32 0, i64 92
  br label %65

60:                                               ; preds = %52
  br i1 %40, label %61, label %63

61:                                               ; preds = %60
  %62 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %30, i64 0, i32 0, i32 7, i32 0, i64 89
  br label %65

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %30, i64 0, i32 0, i32 7, i32 0, i64 85
  br label %65

65:                                               ; preds = %61, %63, %56, %58
  %66 = phi i64* [ %57, %56 ], [ %59, %58 ], [ %62, %61 ], [ %64, %63 ]
  %67 = load i64, i64* %66, align 8
  %68 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* %6, i64 %67) #7
  %69 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %30, i64 0, i32 2
  %70 = load i64, i64* %7, align 8
  %71 = add i64 %70, -1
  %72 = sext i32 %68 to i64
  %73 = add i64 %71, %72
  %74 = sub nsw i32 %15, %68
  %75 = xor i1 %48, true
  %76 = zext i1 %75 to i32
  %77 = call i64 @_ZN2v88internal4Heap20CreateFillerObjectAtEmiNS0_18ClearRecordedSlotsE(%"class.v8::internal::Heap"* %69, i64 %73, i32 %74, i32 %76) #7
  %78 = load i64, i64* %7, align 8
  %79 = add i64 %78, -1
  %80 = inttoptr i64 %79 to i32*
  %81 = trunc i64 %67 to i32
  store atomic volatile i32 %81, i32* %80 release, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %98, label %83

83:                                               ; preds = %65
  %84 = load i64, i64* %7, align 8
  %85 = and i64 %67, 1
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %98, label %87

87:                                               ; preds = %83
  %88 = and i64 %84, -262144
  %89 = or i64 %88, 8
  %90 = inttoptr i64 %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = and i64 %91, 262144
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %98, label %94

94:                                               ; preds = %87
  %95 = or i64 %88, 16
  %96 = inttoptr i64 %95 to %"class.v8::internal::Heap"**
  %97 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %96, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %97, i64 %84, i64 0, i64 %67) #7
  br label %98

98:                                               ; preds = %65, %83, %87, %94
  %99 = load i64, i64* %7, align 8
  %100 = and i64 %99, -4294967296
  %101 = add i64 %99, -1
  %102 = inttoptr i64 %101 to i32*
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = zext i32 %103 to i64
  %105 = or i64 %100, %104
  %106 = add i64 %105, 7
  %107 = inttoptr i64 %106 to i16*
  %108 = load atomic i16, i16* %107 monotonic, align 2
  %109 = ptrtoint %"class.v8::String::ExternalOneByteStringResource"* %1 to i64
  %110 = add i64 %99, 11
  %111 = inttoptr i64 %110 to i64*
  store i64 %109, i64* %111, align 1
  %112 = icmp eq %"class.v8::String::ExternalOneByteStringResource"* %1, null
  br i1 %112, label %150, label %113

113:                                              ; preds = %98
  %114 = load atomic i32, i32* %102 monotonic, align 4
  %115 = zext i32 %114 to i64
  %116 = or i64 %100, %115
  %117 = add i64 %116, 7
  %118 = inttoptr i64 %117 to i16*
  %119 = load atomic i16, i16* %118 monotonic, align 2
  %120 = and i16 %119, 16
  %121 = icmp eq i16 %120, 0
  %122 = inttoptr i64 %110 to %"class.v8::String::ExternalOneByteStringResource"**
  %123 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %122, align 1
  br i1 %121, label %133, label %124

124:                                              ; preds = %113
  %125 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %123, i64 0, i32 0
  %126 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %123 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %127 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %126, align 8
  %128 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %127, i64 2
  %129 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %128, align 8
  %130 = call zeroext i1 %129(%"class.v8::String::ExternalStringResourceBase"* %125) #7
  br i1 %130, label %131, label %142

131:                                              ; preds = %124
  %132 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %122, align 1
  call void @_ZN2v86String29ExternalOneByteStringResource15UpdateDataCacheEv(%"class.v8::String::ExternalOneByteStringResource"* %132) #7
  br label %142

133:                                              ; preds = %113
  %134 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %123 to i8* (%"class.v8::String::ExternalOneByteStringResource"*)***
  %135 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)**, i8* (%"class.v8::String::ExternalOneByteStringResource"*)*** %134, align 8
  %136 = getelementptr inbounds i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %135, i64 6
  %137 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %136, align 8
  %138 = call i8* %137(%"class.v8::String::ExternalOneByteStringResource"* %123) #7
  %139 = ptrtoint i8* %138 to i64
  %140 = add i64 %99, 19
  %141 = inttoptr i64 %140 to i64*
  store i64 %139, i64* %141, align 1
  br label %142

142:                                              ; preds = %133, %131, %124
  %143 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %1 to i64 (%"class.v8::String::ExternalOneByteStringResource"*)***
  %144 = load i64 (%"class.v8::String::ExternalOneByteStringResource"*)**, i64 (%"class.v8::String::ExternalOneByteStringResource"*)*** %143, align 8
  %145 = getelementptr inbounds i64 (%"class.v8::String::ExternalOneByteStringResource"*)*, i64 (%"class.v8::String::ExternalOneByteStringResource"*)** %144, i64 7
  %146 = load i64 (%"class.v8::String::ExternalOneByteStringResource"*)*, i64 (%"class.v8::String::ExternalOneByteStringResource"*)** %145, align 8
  %147 = call i64 %146(%"class.v8::String::ExternalOneByteStringResource"* nonnull %1) #7
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %150, label %149

149:                                              ; preds = %142
  call void @_ZN2v88internal4Heap20UpdateExternalStringENS0_6StringEmm(%"class.v8::internal::Heap"* %69, i64 %99, i64 0, i64 %147) #7
  br label %150

150:                                              ; preds = %98, %142, %149
  %151 = load i64, i64* %7, align 8
  %152 = and i64 %151, -262144
  %153 = inttoptr i64 %152 to %"class.v8::internal::BasicMemoryChunk"*
  %154 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %153, i64 0, i32 1
  %155 = load i64, i64* %154, align 8
  %156 = and i64 %155, 24
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %228, label %158

158:                                              ; preds = %150
  %159 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %30, i64 0, i32 2, i32 119, i32 1
  %160 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %30, i64 0, i32 2, i32 119, i32 1, i32 0, i32 1
  %161 = load %"class.v8::internal::Object"*, %"class.v8::internal::Object"** %160, align 8
  %162 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %30, i64 0, i32 2, i32 119, i32 1, i32 0, i32 2, i32 0, i32 0
  %163 = load %"class.v8::internal::Object"*, %"class.v8::internal::Object"** %162, align 8
  %164 = icmp eq %"class.v8::internal::Object"* %161, %163
  %165 = ptrtoint %"class.v8::internal::Object"* %163 to i64
  br i1 %164, label %171, label %166

166:                                              ; preds = %158
  %167 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %161, i64 0, i32 0, i32 0
  store i64 %151, i64* %167, align 8
  %168 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %161, i64 1
  %169 = ptrtoint %"class.v8::internal::Object"* %168 to i64
  %170 = bitcast %"class.v8::internal::Object"** %160 to i64*
  store i64 %169, i64* %170, align 8
  br label %298

171:                                              ; preds = %158
  %172 = ptrtoint %"class.v8::internal::Object"* %161 to i64
  %173 = bitcast %"class.v8::internal::Object"** %160 to i64*
  %174 = bitcast %"class.std::__1::vector.542"* %159 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = sub i64 %172, %175
  %177 = ashr exact i64 %176, 3
  %178 = add nsw i64 %177, 1
  %179 = icmp ugt i64 %178, 2305843009213693951
  br i1 %179, label %180, label %182

180:                                              ; preds = %171
  %181 = bitcast %"class.std::__1::vector.542"* %159 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %181) #18
  unreachable

182:                                              ; preds = %171
  %183 = bitcast %"class.v8::internal::Object"** %162 to i64*
  %184 = sub i64 %165, %175
  %185 = ashr exact i64 %184, 3
  %186 = icmp ult i64 %185, 1152921504606846975
  br i1 %186, label %187, label %195

187:                                              ; preds = %182
  %188 = ashr exact i64 %184, 2
  %189 = icmp ult i64 %188, %178
  %190 = select i1 %189, i64 %178, i64 %188
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %200, label %192

192:                                              ; preds = %187
  %193 = icmp ugt i64 %190, 2305843009213693951
  br i1 %193, label %194, label %195

194:                                              ; preds = %192
  call void @abort() #18
  unreachable

195:                                              ; preds = %192, %182
  %196 = phi i64 [ %190, %192 ], [ 2305843009213693951, %182 ]
  %197 = shl i64 %196, 3
  %198 = call i8* @_Znwm(i64 %197) #19
  %199 = bitcast i8* %198 to %"class.v8::internal::Object"*
  br label %200

200:                                              ; preds = %195, %187
  %201 = phi i64 [ %196, %195 ], [ 0, %187 ]
  %202 = phi %"class.v8::internal::Object"* [ %199, %195 ], [ null, %187 ]
  %203 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %202, i64 %177
  %204 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %202, i64 %201
  %205 = ptrtoint %"class.v8::internal::Object"* %204 to i64
  %206 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %203, i64 0, i32 0, i32 0
  store i64 %151, i64* %206, align 8
  %207 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %203, i64 1
  %208 = ptrtoint %"class.v8::internal::Object"* %207 to i64
  %209 = getelementptr inbounds %"class.std::__1::vector.542", %"class.std::__1::vector.542"* %159, i64 0, i32 0, i32 0
  %210 = load %"class.v8::internal::Object"*, %"class.v8::internal::Object"** %209, align 8
  %211 = load i64, i64* %173, align 8
  %212 = ptrtoint %"class.v8::internal::Object"* %210 to i64
  %213 = sub i64 %211, %212
  %214 = ashr exact i64 %213, 3
  %215 = sub nsw i64 0, %214
  %216 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %203, i64 %215
  %217 = ptrtoint %"class.v8::internal::Object"* %216 to i64
  %218 = icmp sgt i64 %213, 0
  br i1 %218, label %219, label %223

219:                                              ; preds = %200
  %220 = bitcast %"class.v8::internal::Object"* %216 to i8*
  %221 = bitcast %"class.v8::internal::Object"* %210 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %220, i8* align 8 %221, i64 %213, i1 false) #7
  %222 = load %"class.v8::internal::Object"*, %"class.v8::internal::Object"** %209, align 8
  br label %223

223:                                              ; preds = %219, %200
  %224 = phi %"class.v8::internal::Object"* [ %210, %200 ], [ %222, %219 ]
  store i64 %217, i64* %174, align 8
  store i64 %208, i64* %173, align 8
  store i64 %205, i64* %183, align 8
  %225 = icmp eq %"class.v8::internal::Object"* %224, null
  br i1 %225, label %298, label %226

226:                                              ; preds = %223
  %227 = bitcast %"class.v8::internal::Object"* %224 to i8*
  call void @_ZdlPv(i8* %227) #19
  br label %298

228:                                              ; preds = %150
  %229 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %30, i64 0, i32 2, i32 119, i32 2
  %230 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %30, i64 0, i32 2, i32 119, i32 2, i32 0, i32 1
  %231 = load %"class.v8::internal::Object"*, %"class.v8::internal::Object"** %230, align 8
  %232 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %30, i64 0, i32 2, i32 119, i32 2, i32 0, i32 2, i32 0, i32 0
  %233 = load %"class.v8::internal::Object"*, %"class.v8::internal::Object"** %232, align 8
  %234 = icmp eq %"class.v8::internal::Object"* %231, %233
  %235 = ptrtoint %"class.v8::internal::Object"* %233 to i64
  br i1 %234, label %241, label %236

236:                                              ; preds = %228
  %237 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %231, i64 0, i32 0, i32 0
  store i64 %151, i64* %237, align 8
  %238 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %231, i64 1
  %239 = ptrtoint %"class.v8::internal::Object"* %238 to i64
  %240 = bitcast %"class.v8::internal::Object"** %230 to i64*
  store i64 %239, i64* %240, align 8
  br label %298

241:                                              ; preds = %228
  %242 = ptrtoint %"class.v8::internal::Object"* %231 to i64
  %243 = bitcast %"class.v8::internal::Object"** %230 to i64*
  %244 = bitcast %"class.std::__1::vector.542"* %229 to i64*
  %245 = load i64, i64* %244, align 8
  %246 = sub i64 %242, %245
  %247 = ashr exact i64 %246, 3
  %248 = add nsw i64 %247, 1
  %249 = icmp ugt i64 %248, 2305843009213693951
  br i1 %249, label %250, label %252

250:                                              ; preds = %241
  %251 = bitcast %"class.std::__1::vector.542"* %229 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %251) #18
  unreachable

252:                                              ; preds = %241
  %253 = bitcast %"class.v8::internal::Object"** %232 to i64*
  %254 = sub i64 %235, %245
  %255 = ashr exact i64 %254, 3
  %256 = icmp ult i64 %255, 1152921504606846975
  br i1 %256, label %257, label %265

257:                                              ; preds = %252
  %258 = ashr exact i64 %254, 2
  %259 = icmp ult i64 %258, %248
  %260 = select i1 %259, i64 %248, i64 %258
  %261 = icmp eq i64 %260, 0
  br i1 %261, label %270, label %262

262:                                              ; preds = %257
  %263 = icmp ugt i64 %260, 2305843009213693951
  br i1 %263, label %264, label %265

264:                                              ; preds = %262
  call void @abort() #18
  unreachable

265:                                              ; preds = %262, %252
  %266 = phi i64 [ %260, %262 ], [ 2305843009213693951, %252 ]
  %267 = shl i64 %266, 3
  %268 = call i8* @_Znwm(i64 %267) #19
  %269 = bitcast i8* %268 to %"class.v8::internal::Object"*
  br label %270

270:                                              ; preds = %265, %257
  %271 = phi i64 [ %266, %265 ], [ 0, %257 ]
  %272 = phi %"class.v8::internal::Object"* [ %269, %265 ], [ null, %257 ]
  %273 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %272, i64 %247
  %274 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %272, i64 %271
  %275 = ptrtoint %"class.v8::internal::Object"* %274 to i64
  %276 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %273, i64 0, i32 0, i32 0
  store i64 %151, i64* %276, align 8
  %277 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %273, i64 1
  %278 = ptrtoint %"class.v8::internal::Object"* %277 to i64
  %279 = getelementptr inbounds %"class.std::__1::vector.542", %"class.std::__1::vector.542"* %229, i64 0, i32 0, i32 0
  %280 = load %"class.v8::internal::Object"*, %"class.v8::internal::Object"** %279, align 8
  %281 = load i64, i64* %243, align 8
  %282 = ptrtoint %"class.v8::internal::Object"* %280 to i64
  %283 = sub i64 %281, %282
  %284 = ashr exact i64 %283, 3
  %285 = sub nsw i64 0, %284
  %286 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %273, i64 %285
  %287 = ptrtoint %"class.v8::internal::Object"* %286 to i64
  %288 = icmp sgt i64 %283, 0
  br i1 %288, label %289, label %293

289:                                              ; preds = %270
  %290 = bitcast %"class.v8::internal::Object"* %286 to i8*
  %291 = bitcast %"class.v8::internal::Object"* %280 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %290, i8* align 8 %291, i64 %283, i1 false) #7
  %292 = load %"class.v8::internal::Object"*, %"class.v8::internal::Object"** %279, align 8
  br label %293

293:                                              ; preds = %289, %270
  %294 = phi %"class.v8::internal::Object"* [ %280, %270 ], [ %292, %289 ]
  store i64 %287, i64* %244, align 8
  store i64 %278, i64* %243, align 8
  store i64 %275, i64* %253, align 8
  %295 = icmp eq %"class.v8::internal::Object"* %294, null
  br i1 %295, label %298, label %296

296:                                              ; preds = %293
  %297 = bitcast %"class.v8::internal::Object"* %294 to i8*
  call void @_ZdlPv(i8* %297) #19
  br label %298

298:                                              ; preds = %296, %293, %236, %226, %223, %166
  br i1 %40, label %299, label %309

299:                                              ; preds = %298
  %300 = add i64 %99, 3
  %301 = inttoptr i64 %300 to i32*
  %302 = load i32, i32* %301, align 4
  %303 = and i32 %302, 1
  %304 = icmp eq i32 %303, 0
  br i1 %304, label %309, label %305

305:                                              ; preds = %299
  %306 = bitcast %"class.v8::internal::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %306) #7
  %307 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %99, i64* %307, align 8
  %308 = call i32 @_ZN2v88internal6String17ComputeAndSetHashEv(%"class.v8::internal::String"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %306) #7
  br label %309

309:                                              ; preds = %299, %305, %298
  call void @_ZN2v84base11SharedMutex15UnlockExclusiveEv(%"class.v8::base::SharedMutex"* %53) #7
  br label %310

310:                                              ; preds = %17, %2, %309
  %311 = phi i1 [ true, %309 ], [ false, %2 ], [ false, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #7
  ret i1 %311
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal6String23SupportsExternalizationEv(%"class.v8::internal::String"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::String", align 8
  %3 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, -4294967296
  %7 = add i64 %5, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %6, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load atomic i16, i16* %13 monotonic, align 2
  %15 = icmp ult i16 %14, 64
  br i1 %15, label %16, label %34

16:                                               ; preds = %1
  %17 = load atomic i32, i32* %8 monotonic, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %6, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load atomic i16, i16* %21 monotonic, align 2
  %23 = and i16 %22, 7
  %24 = icmp eq i16 %23, 5
  br i1 %24, label %25, label %34

25:                                               ; preds = %16
  %26 = bitcast %"class.v8::internal::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #7
  %27 = add i64 %5, 11
  %28 = inttoptr i64 %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = zext i32 %29 to i64
  %31 = or i64 %6, %30
  %32 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %31, i64* %32, align 8
  %33 = call zeroext i1 @_ZN2v88internal6String23SupportsExternalizationEv(%"class.v8::internal::String"* nonnull %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #7
  br label %71

34:                                               ; preds = %1, %16
  %35 = and i64 %5, -262144
  %36 = or i64 %35, 8
  %37 = inttoptr i64 %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = and i64 %38, 2097152
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %71

41:                                               ; preds = %34
  %42 = load atomic i32, i32* %8 acquire, align 4
  %43 = zext i32 %42 to i64
  %44 = or i64 %6, %43
  %45 = add i64 %44, 7
  %46 = inttoptr i64 %45 to i16*
  %47 = load atomic i16, i16* %46 monotonic, align 2
  %48 = and i16 %47, 7
  %49 = icmp eq i16 %48, 2
  br i1 %49, label %71, label %50

50:                                               ; preds = %41
  %51 = load i64, i64* %4, align 8
  %52 = and i64 %51, -4294967296
  %53 = add i64 %51, -1
  %54 = inttoptr i64 %53 to i32*
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = zext i32 %55 to i64
  %57 = or i64 %52, %56
  %58 = tail call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* %3, i64 %57) #7
  %59 = icmp slt i32 %58, 20
  br i1 %59, label %71, label %60

60:                                               ; preds = %50
  %61 = load i64, i64* %4, align 8
  %62 = and i64 %61, -262144
  %63 = or i64 %62, 16
  %64 = inttoptr i64 %63 to i64*
  %65 = load i64, i64* %64, align 16
  %66 = add i64 %65, -41416
  %67 = inttoptr i64 %66 to %"class.v8::internal::Isolate"*
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %67, i64 0, i32 2, i32 43
  %69 = load i32, i32* %68, align 4
  %70 = icmp slt i32 %69, 1
  br label %71

71:                                               ; preds = %34, %50, %41, %60, %25
  %72 = phi i1 [ %33, %25 ], [ %70, %60 ], [ false, %34 ], [ false, %41 ], [ false, %50 ]
  ret i1 %72
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZNK2v88internal6String19PrefixForDebugPrintEv(%"class.v8::internal::String"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, -1
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 acquire, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = add i64 %9, 7
  %11 = inttoptr i64 %10 to i16*
  %12 = load atomic i16, i16* %11 monotonic, align 2
  %13 = load i64, i64* %2, align 8
  %14 = and i64 %13, -4294967296
  %15 = add i64 %13, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %14, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load atomic i16, i16* %21 monotonic, align 2
  %23 = and i16 %22, 8
  %24 = icmp eq i16 %23, 0
  %25 = load atomic i32, i32* %16 acquire, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %14, %26
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = zext i16 %30 to i32
  %32 = icmp ult i16 %30, 32
  br i1 %24, label %33, label %39

33:                                               ; preds = %1
  br i1 %32, label %47, label %34

34:                                               ; preds = %33
  %35 = and i32 %31, 7
  switch i32 %35, label %36 [
    i32 1, label %47
    i32 5, label %45
  ]

36:                                               ; preds = %34
  %37 = icmp eq i32 %35, 2
  %38 = select i1 %37, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0)
  br label %47

39:                                               ; preds = %1
  br i1 %32, label %47, label %40

40:                                               ; preds = %39
  %41 = and i32 %31, 7
  switch i32 %41, label %42 [
    i32 1, label %47
    i32 5, label %46
  ]

42:                                               ; preds = %40
  %43 = icmp eq i32 %41, 2
  %44 = select i1 %43, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)
  br label %47

45:                                               ; preds = %34
  br label %47

46:                                               ; preds = %40
  br label %47

47:                                               ; preds = %40, %46, %34, %45, %39, %42, %33, %36
  %48 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), %33 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), %34 ], [ %38, %36 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), %39 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), %40 ], [ %44, %42 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), %45 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), %46 ]
  ret i8* %48
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZNK2v88internal6String19SuffixForDebugPrintEv(%"class.v8::internal::String"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, -1
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 acquire, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = add i64 %9, 7
  %11 = inttoptr i64 %10 to i16*
  %12 = load atomic i16, i16* %11 monotonic, align 2
  %13 = icmp ult i16 %12, 32
  %14 = select i1 %13, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)
  ret i8* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal6String16StringShortPrintEPNS0_12StringStreamE(%"class.v8::internal::String"* nocapture readonly, %"class.v8::internal::StringStream"*) local_unnamed_addr #0 align 2 {
  %3 = alloca [1 x %"class.v8::internal::StringStream::FmtElm"], align 8
  %4 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = tail call zeroext i1 @_ZN2v88internal12ReadOnlyHeap8ContainsENS0_10HeapObjectE(i64 %5) #7
  br i1 %6, label %17, label %7

7:                                                ; preds = %2
  %8 = load i64, i64* %4, align 8
  %9 = and i64 %8, -262144
  %10 = inttoptr i64 %9 to %"class.v8::internal::BasicMemoryChunk"*
  %11 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %10, i64 0, i32 2
  %12 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %11, align 16
  %13 = icmp eq %"class.v8::internal::Heap"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %7
  %15 = tail call zeroext i1 @_ZNK2v88internal4Heap8ContainsENS0_10HeapObjectE(%"class.v8::internal::Heap"* nonnull %12, i64 %8) #7
  br i1 %15, label %17, label %16

16:                                               ; preds = %7, %14
  tail call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i64 16, %"class.v8::internal::StringStream::FmtElm"* null, i64 0) #7
  br label %105

17:                                               ; preds = %2, %14
  %18 = load i64, i64* %4, align 8
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = bitcast [1 x %"class.v8::internal::StringStream::FmtElm"]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #7
  %23 = getelementptr inbounds [1 x %"class.v8::internal::StringStream::FmtElm"], [1 x %"class.v8::internal::StringStream::FmtElm"]* %3, i64 0, i64 0
  %24 = bitcast [1 x %"class.v8::internal::StringStream::FmtElm"]* %3 to i32*
  store i32 %21, i32* %24, align 8
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12, i64 0, i64 0), i64 13, %"class.v8::internal::StringStream::FmtElm"* nonnull %23, i64 1) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #7
  %25 = load i64, i64* %4, align 8
  %26 = and i64 %25, -4294967296
  %27 = add i64 %25, -1
  %28 = inttoptr i64 %27 to i32*
  %29 = load atomic i32, i32* %28 acquire, align 4
  %30 = zext i32 %29 to i64
  %31 = or i64 %26, %30
  %32 = add i64 %31, 7
  %33 = inttoptr i64 %32 to i16*
  %34 = load atomic i16, i16* %33 monotonic, align 2
  %35 = load i64, i64* %4, align 8
  %36 = and i64 %35, -4294967296
  %37 = add i64 %35, -1
  %38 = inttoptr i64 %37 to i32*
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = zext i32 %39 to i64
  %41 = or i64 %36, %40
  %42 = add i64 %41, 7
  %43 = inttoptr i64 %42 to i16*
  %44 = load atomic i16, i16* %43 monotonic, align 2
  %45 = and i16 %44, 8
  %46 = icmp eq i16 %45, 0
  %47 = load atomic i32, i32* %38 acquire, align 4
  %48 = zext i32 %47 to i64
  %49 = or i64 %36, %48
  %50 = add i64 %49, 7
  %51 = inttoptr i64 %50 to i16*
  %52 = load atomic i16, i16* %51 monotonic, align 2
  %53 = zext i16 %52 to i32
  %54 = icmp ult i16 %52, 32
  br i1 %46, label %55, label %61

55:                                               ; preds = %17
  br i1 %54, label %69, label %56

56:                                               ; preds = %55
  %57 = and i32 %53, 7
  switch i32 %57, label %58 [
    i32 1, label %69
    i32 5, label %67
  ]

58:                                               ; preds = %56
  %59 = icmp eq i32 %57, 2
  %60 = select i1 %59, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0)
  br label %69

61:                                               ; preds = %17
  br i1 %54, label %69, label %62

62:                                               ; preds = %61
  %63 = and i32 %53, 7
  switch i32 %63, label %64 [
    i32 1, label %69
    i32 5, label %68
  ]

64:                                               ; preds = %62
  %65 = icmp eq i32 %63, 2
  %66 = select i1 %65, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)
  br label %69

67:                                               ; preds = %56
  br label %69

68:                                               ; preds = %62
  br label %69

69:                                               ; preds = %55, %56, %58, %61, %62, %64, %67, %68
  %70 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), %55 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), %56 ], [ %60, %58 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), %61 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), %62 ], [ %66, %64 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), %67 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), %68 ]
  %71 = call i64 @strlen(i8* %70) #20
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %1, i8* %70, i64 %71, %"class.v8::internal::StringStream::FmtElm"* null, i64 0) #7
  %72 = icmp sgt i32 %21, 1024
  br i1 %72, label %73, label %89

73:                                               ; preds = %69
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.13, i64 0, i64 0), i64 15, %"class.v8::internal::StringStream::FmtElm"* null, i64 0) #7
  %74 = load i64, i64* %4, align 8
  %75 = and i64 %74, -4294967296
  %76 = add i64 %74, -1
  %77 = inttoptr i64 %76 to i32*
  %78 = load atomic i32, i32* %77 acquire, align 4
  %79 = zext i32 %78 to i64
  %80 = or i64 %75, %79
  %81 = add i64 %80, 7
  %82 = inttoptr i64 %81 to i16*
  %83 = load atomic i16, i16* %82 monotonic, align 2
  %84 = icmp ult i16 %83, 32
  %85 = select i1 %84, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)
  %86 = xor i1 %84, true
  %87 = zext i1 %86 to i64
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %1, i8* %85, i64 %87, %"class.v8::internal::StringStream::FmtElm"* null, i64 0) #7
  %88 = call zeroext i1 @_ZN2v88internal12StringStream3PutEc(%"class.v8::internal::StringStream"* %1, i8 signext 62) #7
  br label %105

89:                                               ; preds = %69
  call void @_ZN2v88internal6String9PrintUC16EPNS0_12StringStreamEii(%"class.v8::internal::String"* %0, %"class.v8::internal::StringStream"* %1, i32 0, i32 %21)
  %90 = load i64, i64* %4, align 8
  %91 = and i64 %90, -4294967296
  %92 = add i64 %90, -1
  %93 = inttoptr i64 %92 to i32*
  %94 = load atomic i32, i32* %93 acquire, align 4
  %95 = zext i32 %94 to i64
  %96 = or i64 %91, %95
  %97 = add i64 %96, 7
  %98 = inttoptr i64 %97 to i16*
  %99 = load atomic i16, i16* %98 monotonic, align 2
  %100 = icmp ult i16 %99, 32
  %101 = select i1 %100, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)
  %102 = xor i1 %100, true
  %103 = zext i1 %102 to i64
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %1, i8* %101, i64 %103, %"class.v8::internal::StringStream::FmtElm"* null, i64 0) #7
  %104 = call zeroext i1 @_ZN2v88internal12StringStream3PutEc(%"class.v8::internal::StringStream"* %1, i8 signext 62) #7
  br label %105

105:                                              ; preds = %73, %89, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal6String10LooksValidEv(%"class.v8::internal::String"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = tail call zeroext i1 @_ZN2v88internal12ReadOnlyHeap8ContainsENS0_10HeapObjectE(i64 %3) #7
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = load i64, i64* %2, align 8
  %7 = and i64 %6, -262144
  %8 = inttoptr i64 %7 to %"class.v8::internal::BasicMemoryChunk"*
  %9 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %8, i64 0, i32 2
  %10 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %9, align 16
  %11 = icmp eq %"class.v8::internal::Heap"* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %5
  %13 = tail call zeroext i1 @_ZNK2v88internal4Heap8ContainsENS0_10HeapObjectE(%"class.v8::internal::Heap"* nonnull %10, i64 %6) #7
  br label %14

14:                                               ; preds = %12, %5, %1
  %15 = phi i1 [ true, %1 ], [ %13, %12 ], [ false, %5 ]
  ret i1 %15
}

declare zeroext i1 @_ZN2v88internal12StringStream3PutEc(%"class.v8::internal::StringStream"*, i8 signext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal6String9PrintUC16EPNS0_12StringStreamEii(%"class.v8::internal::String"* nocapture readonly, %"class.v8::internal::StringStream"*, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  %8 = alloca i32, align 4
  %9 = alloca [1 x %"class.v8::internal::StringStream::FmtElm"], align 8
  %10 = alloca %"class.v8::internal::StringCharacterStream", align 8
  %11 = icmp slt i32 %3, 0
  %12 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  br i1 %11, label %14, label %18

14:                                               ; preds = %4
  %15 = add i64 %13, 7
  %16 = inttoptr i64 %15 to i32*
  %17 = load i32, i32* %16, align 4
  br label %18

18:                                               ; preds = %4, %14
  %19 = phi i32 [ %17, %14 ], [ %3, %4 ]
  %20 = bitcast %"class.v8::internal::StringCharacterStream"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 320, i8* nonnull %20) #7
  call void @_ZN2v88internal21StringCharacterStreamC2ENS0_6StringEi(%"class.v8::internal::StringCharacterStream"* nonnull %10, i64 %13, i32 %2)
  %21 = icmp sgt i32 %19, %2
  br i1 %21, label %22, label %67

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %10, i64 0, i32 2, i32 0
  %24 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %10, i64 0, i32 3
  %25 = bitcast i32* %8 to i8*
  %26 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %10, i64 0, i32 0
  %27 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %10, i64 0, i32 0, i32 2
  %28 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %10, i64 0, i32 0, i32 3
  %29 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %10, i64 0, i32 4
  %30 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %10, i64 0, i32 2
  %31 = getelementptr inbounds %union.anon.1152, %union.anon.1152* %30, i64 0, i32 0
  %32 = bitcast i32* %6 to i8*
  %33 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %10, i64 0, i32 1
  %34 = bitcast %union.anon.1152* %30 to i16**
  %35 = bitcast [1 x %"class.v8::internal::StringStream::FmtElm"]* %9 to i8*
  %36 = getelementptr inbounds [1 x %"class.v8::internal::StringStream::FmtElm"], [1 x %"class.v8::internal::StringStream::FmtElm"]* %9, i64 0, i64 0
  %37 = bitcast [1 x %"class.v8::internal::StringStream::FmtElm"]* %9 to i32*
  br label %38

38:                                               ; preds = %131, %22
  %39 = phi i32 [ %2, %22 ], [ %132, %131 ]
  %40 = load i8*, i8** %23, align 8
  %41 = load i8*, i8** %24, align 8
  %42 = icmp eq i8* %40, %41
  br i1 %42, label %43, label %75

43:                                               ; preds = %38
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #7
  store i32 0, i32* %8, align 4
  %44 = load i32, i32* %27, align 8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %62, label %46

46:                                               ; preds = %43
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #7
  %47 = load i32, i32* %28, align 4
  %48 = sub nsw i32 %47, %44
  %49 = icmp eq i32 %48, 32
  %50 = zext i1 %49 to i8
  store i8 %50, i8* %7, align 1
  br i1 %49, label %55, label %51

51:                                               ; preds = %46
  %52 = call i64 @_ZN2v88internal18ConsStringIterator8NextLeafEPb(%"class.v8::internal::ConsStringIterator"* nonnull %26, i8* nonnull %7) #7
  %53 = load i8, i8* %7, align 1
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %57, label %55

55:                                               ; preds = %51, %46
  %56 = call i64 @_ZN2v88internal18ConsStringIterator6SearchEPi(%"class.v8::internal::ConsStringIterator"* nonnull %26, i32* nonnull %8) #7
  br label %57

57:                                               ; preds = %55, %51
  %58 = phi i64 [ %52, %51 ], [ %56, %55 ]
  %59 = trunc i64 %58 to i32
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %57
  store i32 0, i32* %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #7
  br label %62

62:                                               ; preds = %43, %61
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #7
  br label %67

63:                                               ; preds = %57
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #7
  %64 = call i64 @_ZN2v88internal6String9VisitFlatINS0_21StringCharacterStreamEEENS0_10ConsStringEPT_S1_iRKNS0_31SharedStringAccessGuardIfNeededE(%"class.v8::internal::StringCharacterStream"* nonnull %10, i64 %58, i32 0, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16) %29) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #7
  %65 = load i8*, i8** %31, align 8
  %66 = load i8*, i8** %24, align 8
  br label %75

67:                                               ; preds = %131, %18, %62
  %68 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %10, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8, i8* %68, align 8, !range !5
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %10, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %73 = load %"class.v8::base::SharedMutex"*, %"class.v8::base::SharedMutex"** %72, align 8
  call void @_ZN2v84base11SharedMutex12UnlockSharedEv(%"class.v8::base::SharedMutex"* %73) #7
  br label %74

74:                                               ; preds = %67, %71
  call void @llvm.lifetime.end.p0i8(i64 320, i8* nonnull %20) #7
  ret void

75:                                               ; preds = %38, %63
  %76 = phi i8* [ %41, %38 ], [ %66, %63 ]
  %77 = phi i8* [ %40, %38 ], [ %65, %63 ]
  %78 = icmp eq i8* %77, %76
  br i1 %78, label %79, label %101

79:                                               ; preds = %75
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32) #7
  store i32 0, i32* %6, align 4
  %80 = load i32, i32* %27, align 8
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %100, label %82

82:                                               ; preds = %79
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #7
  %83 = load i32, i32* %28, align 4
  %84 = sub nsw i32 %83, %80
  %85 = icmp eq i32 %84, 32
  %86 = zext i1 %85 to i8
  store i8 %86, i8* %5, align 1
  br i1 %85, label %91, label %87

87:                                               ; preds = %82
  %88 = call i64 @_ZN2v88internal18ConsStringIterator8NextLeafEPb(%"class.v8::internal::ConsStringIterator"* nonnull %26, i8* nonnull %5) #7
  %89 = load i8, i8* %5, align 1
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %93, label %91

91:                                               ; preds = %87, %82
  %92 = call i64 @_ZN2v88internal18ConsStringIterator6SearchEPi(%"class.v8::internal::ConsStringIterator"* nonnull %26, i32* nonnull %6) #7
  br label %93

93:                                               ; preds = %91, %87
  %94 = phi i64 [ %88, %87 ], [ %92, %91 ]
  %95 = trunc i64 %94 to i32
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %93
  store i32 0, i32* %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #7
  br label %100

98:                                               ; preds = %93
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #7
  %99 = call i64 @_ZN2v88internal6String9VisitFlatINS0_21StringCharacterStreamEEENS0_10ConsStringEPT_S1_iRKNS0_31SharedStringAccessGuardIfNeededE(%"class.v8::internal::StringCharacterStream"* nonnull %10, i64 %94, i32 0, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16) %29) #7
  br label %100

100:                                              ; preds = %98, %97, %79
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #7
  br label %101

101:                                              ; preds = %100, %75
  %102 = load i8, i8* %33, align 8, !range !5
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %109, label %104

104:                                              ; preds = %101
  %105 = load i8*, i8** %31, align 8
  %106 = getelementptr inbounds i8, i8* %105, i64 1
  store i8* %106, i8** %31, align 8
  %107 = load i8, i8* %105, align 1
  %108 = zext i8 %107 to i16
  br label %113

109:                                              ; preds = %101
  %110 = load i16*, i16** %34, align 8
  %111 = getelementptr inbounds i16, i16* %110, i64 1
  store i16* %111, i16** %34, align 8
  %112 = load i16, i16* %110, align 2
  br label %113

113:                                              ; preds = %104, %109
  %114 = phi i16 [ %108, %104 ], [ %112, %109 ]
  %115 = zext i16 %114 to i32
  switch i16 %114, label %119 [
    i16 10, label %116
    i16 13, label %117
    i16 92, label %118
  ]

116:                                              ; preds = %113
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14, i64 0, i64 0), i64 2, %"class.v8::internal::StringStream::FmtElm"* null, i64 0) #7
  br label %131

117:                                              ; preds = %113
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15, i64 0, i64 0), i64 2, %"class.v8::internal::StringStream::FmtElm"* null, i64 0) #7
  br label %131

118:                                              ; preds = %113
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16, i64 0, i64 0), i64 2, %"class.v8::internal::StringStream::FmtElm"* null, i64 0) #7
  br label %131

119:                                              ; preds = %113
  %120 = tail call i16** @__ctype_b_loc() #21
  %121 = load i16*, i16** %120, align 8
  %122 = zext i16 %114 to i64
  %123 = getelementptr inbounds i16, i16* %121, i64 %122
  %124 = load i16, i16* %123, align 2
  %125 = and i16 %124, 16384
  %126 = icmp eq i16 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %119
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #7
  store i32 %115, i32* %37, align 8
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i64 0, i64 0), i64 6, %"class.v8::internal::StringStream::FmtElm"* nonnull %36, i64 1) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  br label %131

128:                                              ; preds = %119
  %129 = trunc i16 %114 to i8
  %130 = call zeroext i1 @_ZN2v88internal12StringStream3PutEc(%"class.v8::internal::StringStream"* %1, i8 signext %129) #7
  br label %131

131:                                              ; preds = %117, %127, %128, %118, %116
  %132 = add i32 %39, 1
  %133 = icmp eq i32 %132, %19
  br i1 %133, label %67, label %38
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal6String9PrintUC16ERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEEii(%"class.v8::internal::String"* nocapture readonly, %"class.std::__1::basic_ostream"* dereferenceable(160), i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  %8 = alloca i32, align 4
  %9 = alloca %"class.v8::internal::StringCharacterStream", align 8
  %10 = alloca %"struct.v8::internal::AsUC16", align 2
  %11 = icmp slt i32 %3, 0
  %12 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  br i1 %11, label %14, label %18

14:                                               ; preds = %4
  %15 = add i64 %13, 7
  %16 = inttoptr i64 %15 to i32*
  %17 = load i32, i32* %16, align 4
  br label %18

18:                                               ; preds = %4, %14
  %19 = phi i32 [ %17, %14 ], [ %3, %4 ]
  %20 = bitcast %"class.v8::internal::StringCharacterStream"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 320, i8* nonnull %20) #7
  call void @_ZN2v88internal21StringCharacterStreamC2ENS0_6StringEi(%"class.v8::internal::StringCharacterStream"* nonnull %9, i64 %13, i32 %2)
  %21 = icmp sgt i32 %19, %2
  br i1 %21, label %22, label %66

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %9, i64 0, i32 2, i32 0
  %24 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %9, i64 0, i32 3
  %25 = bitcast i32* %6 to i8*
  %26 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %9, i64 0, i32 0
  %27 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %9, i64 0, i32 0, i32 2
  %28 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %9, i64 0, i32 0, i32 3
  %29 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %9, i64 0, i32 4
  %30 = bitcast %"struct.v8::internal::AsUC16"* %10 to i8*
  %31 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %9, i64 0, i32 2
  %32 = getelementptr inbounds %union.anon.1152, %union.anon.1152* %31, i64 0, i32 0
  %33 = bitcast i32* %8 to i8*
  %34 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %9, i64 0, i32 1
  %35 = bitcast %union.anon.1152* %31 to i16**
  %36 = getelementptr inbounds %"struct.v8::internal::AsUC16", %"struct.v8::internal::AsUC16"* %10, i64 0, i32 0
  br label %37

37:                                               ; preds = %112, %22
  %38 = phi i32 [ %2, %22 ], [ %115, %112 ]
  %39 = load i8*, i8** %23, align 8
  %40 = load i8*, i8** %24, align 8
  %41 = icmp eq i8* %39, %40
  br i1 %41, label %42, label %74

42:                                               ; preds = %37
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #7
  store i32 0, i32* %6, align 4
  %43 = load i32, i32* %27, align 8
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %61, label %45

45:                                               ; preds = %42
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #7
  %46 = load i32, i32* %28, align 4
  %47 = sub nsw i32 %46, %43
  %48 = icmp eq i32 %47, 32
  %49 = zext i1 %48 to i8
  store i8 %49, i8* %5, align 1
  br i1 %48, label %54, label %50

50:                                               ; preds = %45
  %51 = call i64 @_ZN2v88internal18ConsStringIterator8NextLeafEPb(%"class.v8::internal::ConsStringIterator"* nonnull %26, i8* nonnull %5) #7
  %52 = load i8, i8* %5, align 1
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %50, %45
  %55 = call i64 @_ZN2v88internal18ConsStringIterator6SearchEPi(%"class.v8::internal::ConsStringIterator"* nonnull %26, i32* nonnull %6) #7
  br label %56

56:                                               ; preds = %54, %50
  %57 = phi i64 [ %51, %50 ], [ %55, %54 ]
  %58 = trunc i64 %57 to i32
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %56
  store i32 0, i32* %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #7
  br label %61

61:                                               ; preds = %42, %60
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #7
  br label %66

62:                                               ; preds = %56
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #7
  %63 = call i64 @_ZN2v88internal6String9VisitFlatINS0_21StringCharacterStreamEEENS0_10ConsStringEPT_S1_iRKNS0_31SharedStringAccessGuardIfNeededE(%"class.v8::internal::StringCharacterStream"* nonnull %9, i64 %57, i32 0, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16) %29) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #7
  %64 = load i8*, i8** %32, align 8
  %65 = load i8*, i8** %24, align 8
  br label %74

66:                                               ; preds = %112, %18, %61
  %67 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %9, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i8, i8* %67, align 8, !range !5
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %73, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %9, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %72 = load %"class.v8::base::SharedMutex"*, %"class.v8::base::SharedMutex"** %71, align 8
  call void @_ZN2v84base11SharedMutex12UnlockSharedEv(%"class.v8::base::SharedMutex"* %72) #7
  br label %73

73:                                               ; preds = %66, %70
  call void @llvm.lifetime.end.p0i8(i64 320, i8* nonnull %20) #7
  ret void

74:                                               ; preds = %37, %62
  %75 = phi i8* [ %40, %37 ], [ %65, %62 ]
  %76 = phi i8* [ %39, %37 ], [ %64, %62 ]
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %30) #7
  %77 = icmp eq i8* %76, %75
  br i1 %77, label %78, label %100

78:                                               ; preds = %74
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #7
  store i32 0, i32* %8, align 4
  %79 = load i32, i32* %27, align 8
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %99, label %81

81:                                               ; preds = %78
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #7
  %82 = load i32, i32* %28, align 4
  %83 = sub nsw i32 %82, %79
  %84 = icmp eq i32 %83, 32
  %85 = zext i1 %84 to i8
  store i8 %85, i8* %7, align 1
  br i1 %84, label %90, label %86

86:                                               ; preds = %81
  %87 = call i64 @_ZN2v88internal18ConsStringIterator8NextLeafEPb(%"class.v8::internal::ConsStringIterator"* nonnull %26, i8* nonnull %7) #7
  %88 = load i8, i8* %7, align 1
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %92, label %90

90:                                               ; preds = %86, %81
  %91 = call i64 @_ZN2v88internal18ConsStringIterator6SearchEPi(%"class.v8::internal::ConsStringIterator"* nonnull %26, i32* nonnull %8) #7
  br label %92

92:                                               ; preds = %90, %86
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ]
  %94 = trunc i64 %93 to i32
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %92
  store i32 0, i32* %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #7
  br label %99

97:                                               ; preds = %92
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #7
  %98 = call i64 @_ZN2v88internal6String9VisitFlatINS0_21StringCharacterStreamEEENS0_10ConsStringEPT_S1_iRKNS0_31SharedStringAccessGuardIfNeededE(%"class.v8::internal::StringCharacterStream"* nonnull %9, i64 %93, i32 0, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16) %29) #7
  br label %99

99:                                               ; preds = %97, %96, %78
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #7
  br label %100

100:                                              ; preds = %99, %74
  %101 = load i8, i8* %34, align 8, !range !5
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %108, label %103

103:                                              ; preds = %100
  %104 = load i8*, i8** %32, align 8
  %105 = getelementptr inbounds i8, i8* %104, i64 1
  store i8* %105, i8** %32, align 8
  %106 = load i8, i8* %104, align 1
  %107 = zext i8 %106 to i16
  br label %112

108:                                              ; preds = %100
  %109 = load i16*, i16** %35, align 8
  %110 = getelementptr inbounds i16, i16* %109, i64 1
  store i16* %110, i16** %35, align 8
  %111 = load i16, i16* %109, align 2
  br label %112

112:                                              ; preds = %103, %108
  %113 = phi i16 [ %107, %103 ], [ %111, %108 ]
  store i16 %113, i16* %36, align 2
  %114 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_6AsUC16E(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, %"struct.v8::internal::AsUC16"* nonnull dereferenceable(2) %10) #7
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %30) #7
  %115 = add i32 %38, 1
  %116 = icmp eq i32 %115, %19
  br i1 %116, label %66, label %37
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal21StringCharacterStreamC2ENS0_6StringEi(%"class.v8::internal::StringCharacterStream"*, i64, i32) unnamed_addr #2 comdat align 2 {
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 0
  %6 = bitcast %"class.v8::internal::StringCharacterStream"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 264, i1 false) #7
  %7 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 1
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 4
  %9 = getelementptr inbounds %"class.v8::internal::SharedStringAccessGuardIfNeeded", %"class.v8::internal::SharedStringAccessGuardIfNeeded"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast %union.anon.1140* %10 to i8*
  store i8 0, i8* %11, align 8
  %12 = tail call %"class.v8::internal::LocalHeap"* @_ZN2v88internal9LocalHeap7CurrentEv() #7
  %13 = icmp eq %"class.v8::internal::LocalHeap"* %12, null
  br i1 %13, label %41, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %12, i64 0, i32 1
  %16 = load i8, i8* %15, align 8, !range !5
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %41

18:                                               ; preds = %14
  %19 = and i64 %1, -262144
  %20 = or i64 %19, 8
  %21 = inttoptr i64 %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = and i64 %22, 2097152
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %41

25:                                               ; preds = %18
  %26 = or i64 %19, 16
  %27 = inttoptr i64 %26 to i64*
  %28 = load i64, i64* %27, align 16
  %29 = add i64 %28, -41416
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %41, label %31

31:                                               ; preds = %25
  %32 = inttoptr i64 %29 to %"class.v8::internal::Isolate"*
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %32, i64 0, i32 17
  %34 = load i8, i8* %9, align 8, !range !5
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %38 = load %"class.v8::base::SharedMutex"*, %"class.v8::base::SharedMutex"** %37, align 8
  tail call void @_ZN2v84base11SharedMutex12UnlockSharedEv(%"class.v8::base::SharedMutex"* %38) #7
  store i8 0, i8* %9, align 8
  br label %39

39:                                               ; preds = %36, %31
  %40 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.v8::base::SharedMutex"* %33, %"class.v8::base::SharedMutex"** %40, align 8
  tail call void @_ZN2v84base11SharedMutex10LockSharedEv(%"class.v8::base::SharedMutex"* %33) #7
  store i8 1, i8* %9, align 8
  br label %41

41:                                               ; preds = %3, %14, %18, %25, %39
  %42 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %42)
  store i32 %2, i32* %4, align 4
  %43 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 2, i32 0
  %44 = bitcast i8** %43 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 16, i1 false) #7
  %45 = tail call i64 @_ZN2v88internal6String9VisitFlatINS0_21StringCharacterStreamEEENS0_10ConsStringEPT_S1_iRKNS0_31SharedStringAccessGuardIfNeededE(%"class.v8::internal::StringCharacterStream"* %0, i64 %1, i32 %2, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16) %8) #7
  %46 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 0, i32 2
  store i32 0, i32* %46, align 8
  %47 = trunc i64 %45 to i32
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %60, label %49

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %45, i64* %50, align 8
  %51 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 0, i32 4
  store i32 %2, i32* %51, align 8
  store i32 1, i32* %46, align 8
  %52 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 0, i32 3
  store i32 33, i32* %52, align 4
  store i32 0, i32* %4, align 4
  %53 = call i64 @_ZN2v88internal18ConsStringIterator6SearchEPi(%"class.v8::internal::ConsStringIterator"* %5, i32* nonnull %4) #7
  %54 = trunc i64 %53 to i32
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %49
  store i32 0, i32* %46, align 8
  br label %60

57:                                               ; preds = %49
  %58 = load i32, i32* %4, align 4
  %59 = tail call i64 @_ZN2v88internal6String9VisitFlatINS0_21StringCharacterStreamEEENS0_10ConsStringEPT_S1_iRKNS0_31SharedStringAccessGuardIfNeededE(%"class.v8::internal::StringCharacterStream"* %0, i64 %53, i32 %58, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16) %8) #7
  br label %60

60:                                               ; preds = %41, %56, %57
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %42)
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_6AsUC16E(%"class.std::__1::basic_ostream"* dereferenceable(160), %"struct.v8::internal::AsUC16"* dereferenceable(2)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal6String12ToArrayIndexEm(i64) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::String", align 8
  %3 = alloca %"class.v8::internal::StringCharacterStream", align 8
  %4 = alloca i32, align 4
  %5 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #7
  %6 = add i64 %0, 3
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, -536870910
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %1
  %12 = lshr i32 %8, 2
  %13 = and i32 %12, 16777215
  store i32 %13, i32* %4, align 4
  br label %51

14:                                               ; preds = %1
  %15 = and i32 %8, 3
  %16 = icmp eq i32 %15, 2
  br i1 %16, label %55, label %17

17:                                               ; preds = %14
  %18 = add i64 %0, 7
  %19 = inttoptr i64 %18 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = icmp slt i32 %20, 8
  br i1 %21, label %22, label %37

22:                                               ; preds = %17
  %23 = and i32 %8, 1
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %30, label %25

25:                                               ; preds = %22
  %26 = bitcast %"class.v8::internal::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #7
  %27 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %0, i64* %27, align 8
  %28 = call i32 @_ZN2v88internal6String17ComputeAndSetHashEv(%"class.v8::internal::String"* nonnull %2) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #7
  %29 = load i32, i32* %7, align 4
  br label %30

30:                                               ; preds = %25, %22
  %31 = phi i32 [ %29, %25 ], [ %8, %22 ]
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %55

34:                                               ; preds = %30
  %35 = lshr i32 %31, 2
  %36 = and i32 %35, 16777215
  store i32 %36, i32* %4, align 4
  br label %51

37:                                               ; preds = %17
  %38 = icmp sgt i32 %20, 10
  br i1 %38, label %55, label %39

39:                                               ; preds = %37
  %40 = bitcast %"class.v8::internal::StringCharacterStream"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 320, i8* nonnull %40) #7
  call void @_ZN2v88internal21StringCharacterStreamC2ENS0_6StringEi(%"class.v8::internal::StringCharacterStream"* nonnull %3, i64 %0, i32 0) #7
  %41 = call zeroext i1 @_ZN2v88internal13StringToIndexINS0_21StringCharacterStreamEjLNS0_11ToIndexModeE0EEEbPT_PT0_(%"class.v8::internal::StringCharacterStream"* nonnull %3, i32* nonnull %4) #7
  %42 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %3, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8, i8* %42, align 8, !range !5
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %48, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %3, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %47 = load %"class.v8::base::SharedMutex"*, %"class.v8::base::SharedMutex"** %46, align 8
  call void @_ZN2v84base11SharedMutex12UnlockSharedEv(%"class.v8::base::SharedMutex"* %47) #7
  br label %48

48:                                               ; preds = %39, %45
  call void @llvm.lifetime.end.p0i8(i64 320, i8* nonnull %40) #7
  br i1 %41, label %49, label %55

49:                                               ; preds = %48
  %50 = load i32, i32* %4, align 4
  br label %51

51:                                               ; preds = %49, %34, %11
  %52 = phi i32 [ %50, %49 ], [ %36, %34 ], [ %13, %11 ]
  %53 = icmp sgt i32 %52, -1
  %54 = select i1 %53, i32 %52, i32 -1
  br label %55

55:                                               ; preds = %37, %30, %14, %51, %48
  %56 = phi i32 [ -1, %48 ], [ %54, %51 ], [ -1, %14 ], [ -1, %30 ], [ -1, %37 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #7
  ret i32 %56
}

declare zeroext i1 @_ZN2v88internal12ReadOnlyHeap8ContainsENS0_10HeapObjectE(i64) local_unnamed_addr #3

declare zeroext i1 @_ZNK2v88internal4Heap8ContainsENS0_10HeapObjectE(%"class.v8::internal::Heap"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal6String8ToNumberEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::String", align 8
  %4 = alloca %"class.v8::internal::StringCharacterStream", align 8
  %5 = alloca i32, align 4
  %6 = tail call i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %0, i64* %1, i8 zeroext 0)
  %7 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #7
  %8 = load i64, i64* %6, align 8
  %9 = add i64 %8, 3
  %10 = inttoptr i64 %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, -536870910
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %46, label %14

14:                                               ; preds = %2
  %15 = and i32 %11, 3
  %16 = icmp eq i32 %15, 2
  br i1 %16, label %87, label %17

17:                                               ; preds = %14
  %18 = add i64 %8, 7
  %19 = inttoptr i64 %18 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = icmp slt i32 %20, 8
  br i1 %21, label %22, label %34

22:                                               ; preds = %17
  %23 = and i32 %11, 1
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %30, label %25

25:                                               ; preds = %22
  %26 = bitcast %"class.v8::internal::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #7
  %27 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %8, i64* %27, align 8
  %28 = call i32 @_ZN2v88internal6String17ComputeAndSetHashEv(%"class.v8::internal::String"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #7
  %29 = load i32, i32* %10, align 4
  br label %30

30:                                               ; preds = %25, %22
  %31 = phi i32 [ %29, %25 ], [ %11, %22 ]
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %46, label %87

34:                                               ; preds = %17
  %35 = icmp sgt i32 %20, 10
  br i1 %35, label %87, label %36

36:                                               ; preds = %34
  %37 = bitcast %"class.v8::internal::StringCharacterStream"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 320, i8* nonnull %37) #7
  call void @_ZN2v88internal21StringCharacterStreamC2ENS0_6StringEi(%"class.v8::internal::StringCharacterStream"* nonnull %4, i64 %8, i32 0) #7
  %38 = call zeroext i1 @_ZN2v88internal13StringToIndexINS0_21StringCharacterStreamEjLNS0_11ToIndexModeE0EEEbPT_PT0_(%"class.v8::internal::StringCharacterStream"* nonnull %4, i32* nonnull %5) #7
  %39 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %4, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8, i8* %39, align 8, !range !5
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %4, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %44 = load %"class.v8::base::SharedMutex"*, %"class.v8::base::SharedMutex"** %43, align 8
  call void @_ZN2v84base11SharedMutex12UnlockSharedEv(%"class.v8::base::SharedMutex"* %44) #7
  br label %45

45:                                               ; preds = %36, %42
  call void @llvm.lifetime.end.p0i8(i64 320, i8* nonnull %37) #7
  br i1 %38, label %51, label %87

46:                                               ; preds = %30, %2
  %47 = phi i32 [ %11, %2 ], [ %31, %30 ]
  %48 = lshr i32 %47, 2
  %49 = and i32 %48, 16777215
  store i32 %49, i32* %5, align 4
  %50 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  br label %55

51:                                               ; preds = %45
  %52 = load i32, i32* %5, align 4
  %53 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %54 = icmp ult i32 %52, 1073741824
  br i1 %54, label %55, label %81

55:                                               ; preds = %46, %51
  %56 = phi %"class.v8::internal::FactoryBase"* [ %50, %46 ], [ %53, %51 ]
  %57 = phi i32 [ %49, %46 ], [ %52, %51 ]
  %58 = sext i32 %57 to i64
  %59 = shl nsw i64 %58, 1
  %60 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %56, i64 45608
  %61 = bitcast %"class.v8::internal::FactoryBase"* %60 to %"class.v8::internal::CanonicalHandleScope"**
  %62 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %61, align 8
  %63 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %62, null
  br i1 %63, label %66, label %64

64:                                               ; preds = %55
  %65 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %62, i64 %59) #7
  br label %327

66:                                               ; preds = %55
  %67 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %56, i64 45584
  %68 = bitcast %"class.v8::internal::FactoryBase"* %67 to i64**
  %69 = load i64*, i64** %68, align 8
  %70 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %56, i64 45592
  %71 = bitcast %"class.v8::internal::FactoryBase"* %70 to i64**
  %72 = load i64*, i64** %71, align 8
  %73 = icmp eq i64* %69, %72
  br i1 %73, label %74, label %76

74:                                               ; preds = %66
  %75 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #7
  br label %76

76:                                               ; preds = %74, %66
  %77 = phi i64* [ %75, %74 ], [ %69, %66 ]
  %78 = ptrtoint i64* %77 to i64
  %79 = add i64 %78, 8
  %80 = inttoptr i64 %79 to i64*
  store i64* %80, i64** %68, align 8
  store i64 %59, i64* %77, align 8
  br label %327

81:                                               ; preds = %51
  %82 = uitofp i32 %52 to double
  %83 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %53) #7
  %84 = load i64, i64* %83, align 8
  %85 = add i64 %84, 3
  %86 = inttoptr i64 %85 to double*
  store double %82, double* %86, align 1
  br label %327

87:                                               ; preds = %34, %30, %14, %45
  %88 = load i64, i64* %6, align 8
  %89 = and i64 %88, -4294967296
  %90 = add i64 %88, -1
  %91 = inttoptr i64 %90 to i32*
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = zext i32 %92 to i64
  %94 = or i64 %89, %93
  %95 = add i64 %94, 7
  %96 = inttoptr i64 %95 to i16*
  %97 = load atomic i16, i16* %96 monotonic, align 2
  %98 = icmp ult i16 %97, 64
  br i1 %98, label %99, label %288

99:                                               ; preds = %87
  %100 = load atomic i32, i32* %91 monotonic, align 4
  %101 = zext i32 %100 to i64
  %102 = or i64 %89, %101
  %103 = add i64 %102, 7
  %104 = inttoptr i64 %103 to i16*
  %105 = load atomic i16, i16* %104 monotonic, align 2
  %106 = and i16 %105, 7
  %107 = icmp eq i16 %106, 0
  br i1 %107, label %108, label %288

108:                                              ; preds = %99
  %109 = load atomic i32, i32* %91 monotonic, align 4
  %110 = zext i32 %109 to i64
  %111 = or i64 %89, %110
  %112 = add i64 %111, 7
  %113 = inttoptr i64 %112 to i16*
  %114 = load atomic i16, i16* %113 monotonic, align 2
  %115 = and i16 %114, 8
  %116 = icmp eq i16 %115, 0
  br i1 %116, label %288, label %117

117:                                              ; preds = %108
  %118 = add i64 %88, 7
  %119 = inttoptr i64 %118 to i32*
  %120 = load i32, i32* %119, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %141

122:                                              ; preds = %117
  %123 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %124 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %123, align 8
  %125 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %124, null
  br i1 %125, label %128, label %126

126:                                              ; preds = %122
  %127 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %124, i64 0) #7
  br label %327

128:                                              ; preds = %122
  %129 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %130 = load i64*, i64** %129, align 8
  %131 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %132 = load i64*, i64** %131, align 8
  %133 = icmp eq i64* %130, %132
  br i1 %133, label %134, label %136

134:                                              ; preds = %128
  %135 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #7
  br label %136

136:                                              ; preds = %134, %128
  %137 = phi i64* [ %135, %134 ], [ %130, %128 ]
  %138 = ptrtoint i64* %137 to i64
  %139 = add i64 %138, 8
  %140 = inttoptr i64 %139 to i64*
  store i64* %140, i64** %129, align 8
  store i64 0, i64* %137, align 8
  br label %327

141:                                              ; preds = %117
  %142 = add i64 %88, 11
  %143 = inttoptr i64 %142 to i8*
  %144 = load i8, i8* %143, align 1
  %145 = icmp eq i8 %144, 45
  %146 = zext i1 %145 to i32
  %147 = icmp eq i32 %120, %146
  br i1 %147, label %148, label %150

148:                                              ; preds = %141
  %149 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 121
  br label %327

150:                                              ; preds = %141
  %151 = zext i1 %145 to i64
  %152 = getelementptr inbounds i8, i8* %143, i64 %151
  %153 = load i8, i8* %152, align 1
  %154 = icmp ugt i8 %153, 57
  br i1 %154, label %155, label %158

155:                                              ; preds = %150
  switch i8 %153, label %156 [
    i8 73, label %288
    i8 -96, label %288
  ]

156:                                              ; preds = %155
  %157 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 121
  br label %327

158:                                              ; preds = %150
  %159 = sub nuw nsw i32 %120, %146
  %160 = icmp slt i32 %159, 10
  br i1 %160, label %161, label %288

161:                                              ; preds = %158
  %162 = icmp sgt i32 %120, %146
  br i1 %162, label %163, label %178

163:                                              ; preds = %161
  %164 = add i8 %153, -48
  %165 = icmp ugt i8 %164, 9
  br i1 %165, label %288, label %166

166:                                              ; preds = %163
  %167 = select i1 %145, i64 2, i64 1
  br label %168

168:                                              ; preds = %166, %172
  %169 = phi i64 [ %167, %166 ], [ %177, %172 ]
  %170 = trunc i64 %169 to i32
  %171 = icmp eq i32 %120, %170
  br i1 %171, label %178, label %172

172:                                              ; preds = %168
  %173 = getelementptr inbounds i8, i8* %143, i64 %169
  %174 = load i8, i8* %173, align 1
  %175 = add i8 %174, -48
  %176 = icmp ugt i8 %175, 9
  %177 = add nuw nsw i64 %169, 1
  br i1 %176, label %288, label %168

178:                                              ; preds = %168, %161
  %179 = zext i8 %153 to i32
  %180 = add nsw i32 %179, -48
  %181 = select i1 %145, i32 2, i32 1
  %182 = icmp sgt i32 %120, %181
  br i1 %182, label %183, label %241

183:                                              ; preds = %178
  %184 = zext i32 %181 to i64
  %185 = sub i32 %120, %181
  %186 = xor i32 %181, -1
  %187 = add i32 %120, %186
  %188 = and i32 %185, 3
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %203, label %190

190:                                              ; preds = %183, %190
  %191 = phi i64 [ %200, %190 ], [ %184, %183 ]
  %192 = phi i32 [ %199, %190 ], [ %180, %183 ]
  %193 = phi i32 [ %201, %190 ], [ %188, %183 ]
  %194 = mul nsw i32 %192, 10
  %195 = getelementptr inbounds i8, i8* %143, i64 %191
  %196 = load i8, i8* %195, align 1
  %197 = zext i8 %196 to i32
  %198 = add i32 %194, -48
  %199 = add i32 %198, %197
  %200 = add nuw nsw i64 %191, 1
  %201 = add i32 %193, -1
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %190, !llvm.loop !33

203:                                              ; preds = %190, %183
  %204 = phi i32 [ undef, %183 ], [ %199, %190 ]
  %205 = phi i64 [ %184, %183 ], [ %200, %190 ]
  %206 = phi i32 [ %180, %183 ], [ %199, %190 ]
  %207 = icmp ult i32 %187, 3
  br i1 %207, label %241, label %208

208:                                              ; preds = %203, %208
  %209 = phi i64 [ %238, %208 ], [ %205, %203 ]
  %210 = phi i32 [ %237, %208 ], [ %206, %203 ]
  %211 = mul nsw i32 %210, 10
  %212 = getelementptr inbounds i8, i8* %143, i64 %209
  %213 = load i8, i8* %212, align 1
  %214 = zext i8 %213 to i32
  %215 = add i32 %211, -48
  %216 = add i32 %215, %214
  %217 = add nuw nsw i64 %209, 1
  %218 = mul nsw i32 %216, 10
  %219 = getelementptr inbounds i8, i8* %143, i64 %217
  %220 = load i8, i8* %219, align 1
  %221 = zext i8 %220 to i32
  %222 = add i32 %218, -48
  %223 = add i32 %222, %221
  %224 = add nuw nsw i64 %209, 2
  %225 = mul nsw i32 %223, 10
  %226 = getelementptr inbounds i8, i8* %143, i64 %224
  %227 = load i8, i8* %226, align 1
  %228 = zext i8 %227 to i32
  %229 = add i32 %225, -48
  %230 = add i32 %229, %228
  %231 = add nuw nsw i64 %209, 3
  %232 = mul nsw i32 %230, 10
  %233 = getelementptr inbounds i8, i8* %143, i64 %231
  %234 = load i8, i8* %233, align 1
  %235 = zext i8 %234 to i32
  %236 = add i32 %232, -48
  %237 = add i32 %236, %235
  %238 = add nuw nsw i64 %209, 4
  %239 = trunc i64 %238 to i32
  %240 = icmp eq i32 %120, %239
  br i1 %240, label %241, label %208

241:                                              ; preds = %203, %208, %178
  %242 = phi i32 [ %180, %178 ], [ %204, %203 ], [ %237, %208 ]
  br i1 %145, label %243, label %249

243:                                              ; preds = %241
  %244 = icmp eq i32 %242, 0
  br i1 %244, label %245, label %247

245:                                              ; preds = %243
  %246 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 124
  br label %327

247:                                              ; preds = %243
  %248 = sub nsw i32 0, %242
  br label %266

249:                                              ; preds = %241
  %250 = add i64 %88, 3
  %251 = inttoptr i64 %250 to i32*
  %252 = load i32, i32* %251, align 4
  %253 = and i32 %252, 1
  %254 = icmp ne i32 %253, 0
  %255 = icmp slt i32 %120, 11
  %256 = and i1 %255, %254
  br i1 %256, label %257, label %266

257:                                              ; preds = %249
  %258 = icmp ne i32 %120, 1
  %259 = icmp eq i8 %144, 48
  %260 = and i1 %258, %259
  br i1 %260, label %266, label %261

261:                                              ; preds = %257
  %262 = call i32 @_ZN2v88internal12StringHasher18MakeArrayIndexHashEji(i32 %242, i32 %120) #7
  %263 = load i64, i64* %6, align 8
  %264 = add i64 %263, 3
  %265 = inttoptr i64 %264 to i32*
  store i32 %262, i32* %265, align 4
  br label %266

266:                                              ; preds = %257, %249, %261, %247
  %267 = phi i32 [ %248, %247 ], [ %242, %261 ], [ %242, %249 ], [ %242, %257 ]
  %268 = sext i32 %267 to i64
  %269 = shl nsw i64 %268, 1
  %270 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %271 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %270, align 8
  %272 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %271, null
  br i1 %272, label %275, label %273

273:                                              ; preds = %266
  %274 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %271, i64 %269) #7
  br label %327

275:                                              ; preds = %266
  %276 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %277 = load i64*, i64** %276, align 8
  %278 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %279 = load i64*, i64** %278, align 8
  %280 = icmp eq i64* %277, %279
  br i1 %280, label %281, label %283

281:                                              ; preds = %275
  %282 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #7
  br label %283

283:                                              ; preds = %281, %275
  %284 = phi i64* [ %282, %281 ], [ %277, %275 ]
  %285 = ptrtoint i64* %284 to i64
  %286 = add i64 %285, 8
  %287 = inttoptr i64 %286 to i64*
  store i64* %287, i64** %276, align 8
  store i64 %269, i64* %284, align 8
  br label %327

288:                                              ; preds = %172, %163, %108, %99, %87, %158, %155, %155
  %289 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %290 = call double @_ZN2v88internal14StringToDoubleEPNS0_7IsolateENS0_6HandleINS0_6StringEEEid(%"class.v8::internal::Isolate"* %0, i64* %6, i32 11, double 0.000000e+00) #7
  %291 = fcmp ult double %290, 0xC1D0000000000000
  %292 = fcmp ugt double %290, 0x41CFFFFFFF800000
  %293 = or i1 %292, %291
  %294 = bitcast double %290 to i64
  %295 = icmp eq i64 %294, -9223372036854775808
  %296 = or i1 %293, %295
  br i1 %296, label %322, label %297

297:                                              ; preds = %288
  %298 = fptosi double %290 to i32
  %299 = sitofp i32 %298 to double
  %300 = fcmp oeq double %290, %299
  br i1 %300, label %301, label %322

301:                                              ; preds = %297
  %302 = sext i32 %298 to i64
  %303 = shl nsw i64 %302, 1
  %304 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %305 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %304, align 8
  %306 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %305, null
  br i1 %306, label %309, label %307

307:                                              ; preds = %301
  %308 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %305, i64 %303) #7
  br label %327

309:                                              ; preds = %301
  %310 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %311 = load i64*, i64** %310, align 8
  %312 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %313 = load i64*, i64** %312, align 8
  %314 = icmp eq i64* %311, %313
  br i1 %314, label %315, label %317

315:                                              ; preds = %309
  %316 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #7
  br label %317

317:                                              ; preds = %315, %309
  %318 = phi i64* [ %316, %315 ], [ %311, %309 ]
  %319 = ptrtoint i64* %318 to i64
  %320 = add i64 %319, 8
  %321 = inttoptr i64 %320 to i64*
  store i64* %321, i64** %310, align 8
  store i64 %303, i64* %318, align 8
  br label %327

322:                                              ; preds = %297, %288
  %323 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %289) #7
  %324 = load i64, i64* %323, align 8
  %325 = add i64 %324, 3
  %326 = inttoptr i64 %325 to double*
  store double %290, double* %326, align 1
  br label %327

327:                                              ; preds = %283, %273, %245, %156, %148, %136, %126, %322, %317, %307, %81, %76, %64
  %328 = phi i64* [ %83, %81 ], [ %65, %64 ], [ %77, %76 ], [ %323, %322 ], [ %308, %307 ], [ %318, %317 ], [ %284, %283 ], [ %274, %273 ], [ %246, %245 ], [ %157, %156 ], [ %149, %148 ], [ %137, %136 ], [ %127, %126 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #7
  ret i64* %328
}

declare i32 @_ZN2v88internal12StringHasher18MakeArrayIndexHashEji(i32, i32) local_unnamed_addr #3

declare double @_ZN2v88internal14StringToDoubleEPNS0_7IsolateENS0_6HandleINS0_6StringEEEid(%"class.v8::internal::Isolate"*, i64*, i32, double) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2v88internal6String9ToCStringENS0_14AllowNullsFlagENS0_14RobustnessFlagEiiPi(%"class.v8::internal::String"* nocapture readonly, i32, i32, i32, i32, i32*) local_unnamed_addr #0 align 2 {
  %7 = alloca i8, align 1
  %8 = alloca i32, align 4
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8, align 1
  %13 = alloca i32, align 4
  %14 = alloca i8, align 1
  %15 = alloca i32, align 4
  %16 = alloca %"class.v8::internal::StringCharacterStream", align 8
  %17 = icmp eq i32 %2, 0
  br i1 %17, label %18, label %31

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = tail call zeroext i1 @_ZN2v88internal12ReadOnlyHeap8ContainsENS0_10HeapObjectE(i64 %20) #7
  br i1 %21, label %31, label %22

22:                                               ; preds = %18
  %23 = load i64, i64* %19, align 8
  %24 = and i64 %23, -262144
  %25 = inttoptr i64 %24 to %"class.v8::internal::BasicMemoryChunk"*
  %26 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %25, i64 0, i32 2
  %27 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %26, align 16
  %28 = icmp eq %"class.v8::internal::Heap"* %27, null
  br i1 %28, label %335, label %29

29:                                               ; preds = %22
  %30 = tail call zeroext i1 @_ZNK2v88internal4Heap8ContainsENS0_10HeapObjectE(%"class.v8::internal::Heap"* nonnull %27, i64 %23) #7
  br i1 %30, label %31, label %335

31:                                               ; preds = %18, %29, %6
  %32 = icmp slt i32 %4, 0
  %33 = sub nsw i32 2147483647, %3
  %34 = select i1 %32, i32 %33, i32 %4
  %35 = bitcast %"class.v8::internal::StringCharacterStream"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 320, i8* nonnull %35) #7
  %36 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i64, i64* %36, align 8
  call void @_ZN2v88internal21StringCharacterStreamC2ENS0_6StringEi(%"class.v8::internal::StringCharacterStream"* nonnull %16, i64 %37, i32 %3)
  %38 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %16, i64 0, i32 2, i32 0
  %39 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %16, i64 0, i32 3
  %40 = bitcast i32* %15 to i8*
  %41 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %16, i64 0, i32 0
  %42 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %16, i64 0, i32 0, i32 2
  %43 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %16, i64 0, i32 0, i32 3
  %44 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %16, i64 0, i32 4
  %45 = add nsw i32 %34, %3
  %46 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %16, i64 0, i32 2
  %47 = getelementptr inbounds %union.anon.1152, %union.anon.1152* %46, i64 0, i32 0
  %48 = bitcast i32* %13 to i8*
  %49 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %16, i64 0, i32 1
  %50 = bitcast %union.anon.1152* %46 to i16**
  %51 = load i8*, i8** %38, align 8
  br label %52

52:                                               ; preds = %140, %31
  %53 = phi i8* [ %51, %31 ], [ %127, %140 ]
  %54 = phi i32 [ -1, %31 ], [ %129, %140 ]
  %55 = phi i32 [ 0, %31 ], [ %142, %140 ]
  %56 = phi i32 [ %3, %31 ], [ %87, %140 ]
  %57 = load i8*, i8** %39, align 8
  %58 = icmp eq i8* %53, %57
  br i1 %58, label %59, label %82

59:                                               ; preds = %52
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %40) #7
  store i32 0, i32* %15, align 4
  %60 = load i32, i32* %42, align 8
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %80, label %62

62:                                               ; preds = %59
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #7
  %63 = load i32, i32* %43, align 4
  %64 = sub nsw i32 %63, %60
  %65 = icmp eq i32 %64, 32
  %66 = zext i1 %65 to i8
  store i8 %66, i8* %14, align 1
  br i1 %65, label %71, label %67

67:                                               ; preds = %62
  %68 = call i64 @_ZN2v88internal18ConsStringIterator8NextLeafEPb(%"class.v8::internal::ConsStringIterator"* nonnull %41, i8* nonnull %14) #7
  %69 = load i8, i8* %14, align 1
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %73, label %71

71:                                               ; preds = %67, %62
  %72 = call i64 @_ZN2v88internal18ConsStringIterator6SearchEPi(%"class.v8::internal::ConsStringIterator"* nonnull %41, i32* nonnull %15) #7
  br label %73

73:                                               ; preds = %71, %67
  %74 = phi i64 [ %68, %67 ], [ %72, %71 ]
  %75 = trunc i64 %74 to i32
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %73
  store i32 0, i32* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #7
  br label %80

78:                                               ; preds = %73
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #7
  %79 = call i64 @_ZN2v88internal6String9VisitFlatINS0_21StringCharacterStreamEEENS0_10ConsStringEPT_S1_iRKNS0_31SharedStringAccessGuardIfNeededE(%"class.v8::internal::StringCharacterStream"* nonnull %16, i64 %74, i32 0, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16) %44) #7
  br label %80

80:                                               ; preds = %78, %77, %59
  %81 = phi i1 [ true, %78 ], [ false, %59 ], [ false, %77 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40) #7
  br label %82

82:                                               ; preds = %52, %80
  %83 = phi i1 [ %81, %80 ], [ true, %52 ]
  %84 = icmp slt i32 %56, %45
  %85 = and i1 %84, %83
  br i1 %85, label %86, label %143

86:                                               ; preds = %82
  %87 = add nsw i32 %56, 1
  %88 = load i8*, i8** %47, align 8
  %89 = load i8*, i8** %39, align 8
  %90 = icmp eq i8* %88, %89
  br i1 %90, label %91, label %113

91:                                               ; preds = %86
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %48) #7
  store i32 0, i32* %13, align 4
  %92 = load i32, i32* %42, align 8
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %112, label %94

94:                                               ; preds = %91
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #7
  %95 = load i32, i32* %43, align 4
  %96 = sub nsw i32 %95, %92
  %97 = icmp eq i32 %96, 32
  %98 = zext i1 %97 to i8
  store i8 %98, i8* %12, align 1
  br i1 %97, label %103, label %99

99:                                               ; preds = %94
  %100 = call i64 @_ZN2v88internal18ConsStringIterator8NextLeafEPb(%"class.v8::internal::ConsStringIterator"* nonnull %41, i8* nonnull %12) #7
  %101 = load i8, i8* %12, align 1
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %105, label %103

103:                                              ; preds = %99, %94
  %104 = call i64 @_ZN2v88internal18ConsStringIterator6SearchEPi(%"class.v8::internal::ConsStringIterator"* nonnull %41, i32* nonnull %13) #7
  br label %105

105:                                              ; preds = %103, %99
  %106 = phi i64 [ %100, %99 ], [ %104, %103 ]
  %107 = trunc i64 %106 to i32
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %105
  store i32 0, i32* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #7
  br label %112

110:                                              ; preds = %105
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #7
  %111 = call i64 @_ZN2v88internal6String9VisitFlatINS0_21StringCharacterStreamEEENS0_10ConsStringEPT_S1_iRKNS0_31SharedStringAccessGuardIfNeededE(%"class.v8::internal::StringCharacterStream"* nonnull %16, i64 %106, i32 0, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16) %44) #7
  br label %112

112:                                              ; preds = %110, %109, %91
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %48) #7
  br label %113

113:                                              ; preds = %112, %86
  %114 = load i8, i8* %49, align 8, !range !5
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %121, label %116

116:                                              ; preds = %113
  %117 = load i8*, i8** %47, align 8
  %118 = getelementptr inbounds i8, i8* %117, i64 1
  store i8* %118, i8** %47, align 8
  %119 = load i8, i8* %117, align 1
  %120 = zext i8 %119 to i16
  br label %126

121:                                              ; preds = %113
  %122 = load i16*, i16** %50, align 8
  %123 = getelementptr inbounds i16, i16* %122, i64 1
  store i16* %123, i16** %50, align 8
  %124 = load i16, i16* %122, align 2
  %125 = bitcast i16* %123 to i8*
  br label %126

126:                                              ; preds = %116, %121
  %127 = phi i8* [ %118, %116 ], [ %125, %121 ]
  %128 = phi i16 [ %120, %116 ], [ %124, %121 ]
  %129 = zext i16 %128 to i32
  %130 = icmp ult i16 %128, 128
  br i1 %130, label %140, label %131

131:                                              ; preds = %126
  %132 = icmp ult i16 %128, 2048
  br i1 %132, label %140, label %133

133:                                              ; preds = %131
  %134 = and i32 %54, 64512
  %135 = icmp eq i32 %134, 55296
  %136 = and i32 %129, 64512
  %137 = icmp eq i32 %136, 56320
  %138 = and i1 %135, %137
  %139 = select i1 %138, i32 1, i32 3
  br label %140

140:                                              ; preds = %126, %131, %133
  %141 = phi i32 [ 1, %126 ], [ 2, %131 ], [ %139, %133 ]
  %142 = add i32 %141, %55
  br label %52

143:                                              ; preds = %82
  %144 = icmp eq i32* %5, null
  br i1 %144, label %146, label %145

145:                                              ; preds = %143
  store i32 %55, i32* %5, align 4
  br label %146

146:                                              ; preds = %143, %145
  %147 = add nsw i32 %55, 1
  %148 = sext i32 %147 to i64
  %149 = call noalias i8* @_ZnamRKSt9nothrow_t(i64 %148, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #19
  %150 = icmp eq i8* %149, null
  br i1 %150, label %151, label %160

151:                                              ; preds = %146
  %152 = call %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() #7
  %153 = bitcast %"class.v8::Platform"* %152 to void (%"class.v8::Platform"*)***
  %154 = load void (%"class.v8::Platform"*)**, void (%"class.v8::Platform"*)*** %153, align 8
  %155 = getelementptr inbounds void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %154, i64 3
  %156 = load void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %155, align 8
  call void %156(%"class.v8::Platform"* %152) #7
  %157 = call noalias i8* @_ZnamRKSt9nothrow_t(i64 %148, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #19
  %158 = icmp eq i8* %157, null
  br i1 %158, label %159, label %160

159:                                              ; preds = %151
  call void @_ZN2v88internal23FatalProcessOutOfMemoryEPNS0_7IsolateEPKc(%"class.v8::internal::Isolate"* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.27, i64 0, i64 0)) #18
  unreachable

160:                                              ; preds = %146, %151
  %161 = phi i8* [ %157, %151 ], [ %149, %146 ]
  %162 = load i64, i64* %36, align 8
  %163 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %163)
  store i32 %3, i32* %11, align 4
  %164 = bitcast i8** %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %164, i8 0, i64 16, i1 false) #7
  %165 = call i64 @_ZN2v88internal6String9VisitFlatINS0_21StringCharacterStreamEEENS0_10ConsStringEPT_S1_iRKNS0_31SharedStringAccessGuardIfNeededE(%"class.v8::internal::StringCharacterStream"* nonnull %16, i64 %162, i32 %3, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16) %44) #7
  store i32 0, i32* %42, align 8
  %166 = trunc i64 %165 to i32
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %178, label %168

168:                                              ; preds = %160
  %169 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %16, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %165, i64* %169, align 8
  %170 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %16, i64 0, i32 0, i32 4
  store i32 %3, i32* %170, align 8
  store i32 1, i32* %42, align 8
  store i32 33, i32* %43, align 4
  store i32 0, i32* %11, align 4
  %171 = call i64 @_ZN2v88internal18ConsStringIterator6SearchEPi(%"class.v8::internal::ConsStringIterator"* nonnull %41, i32* nonnull %11) #7
  %172 = trunc i64 %171 to i32
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %175

174:                                              ; preds = %168
  store i32 0, i32* %42, align 8
  br label %178

175:                                              ; preds = %168
  %176 = load i32, i32* %11, align 4
  %177 = call i64 @_ZN2v88internal6String9VisitFlatINS0_21StringCharacterStreamEEENS0_10ConsStringEPT_S1_iRKNS0_31SharedStringAccessGuardIfNeededE(%"class.v8::internal::StringCharacterStream"* nonnull %16, i64 %171, i32 %176, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16) %44) #7
  br label %178

178:                                              ; preds = %160, %174, %175
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %163)
  %179 = bitcast i32* %10 to i8*
  %180 = bitcast i32* %8 to i8*
  %181 = icmp eq i32 %1, 1
  %182 = load i8*, i8** %38, align 8
  br label %183

183:                                              ; preds = %322, %178
  %184 = phi i8* [ %182, %178 ], [ %255, %322 ]
  %185 = phi i32 [ -1, %178 ], [ %262, %322 ]
  %186 = phi i32 [ %3, %178 ], [ %213, %322 ]
  %187 = phi i32 [ 0, %178 ], [ %324, %322 ]
  %188 = load i8*, i8** %39, align 8
  %189 = icmp eq i8* %184, %188
  br i1 %189, label %190, label %212

190:                                              ; preds = %183
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %179) #7
  store i32 0, i32* %10, align 4
  %191 = load i32, i32* %42, align 8
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %209, label %193

193:                                              ; preds = %190
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #7
  %194 = load i32, i32* %43, align 4
  %195 = sub nsw i32 %194, %191
  %196 = icmp eq i32 %195, 32
  %197 = zext i1 %196 to i8
  store i8 %197, i8* %9, align 1
  br i1 %196, label %202, label %198

198:                                              ; preds = %193
  %199 = call i64 @_ZN2v88internal18ConsStringIterator8NextLeafEPb(%"class.v8::internal::ConsStringIterator"* nonnull %41, i8* nonnull %9) #7
  %200 = load i8, i8* %9, align 1
  %201 = icmp eq i8 %200, 0
  br i1 %201, label %204, label %202

202:                                              ; preds = %198, %193
  %203 = call i64 @_ZN2v88internal18ConsStringIterator6SearchEPi(%"class.v8::internal::ConsStringIterator"* nonnull %41, i32* nonnull %10) #7
  br label %204

204:                                              ; preds = %202, %198
  %205 = phi i64 [ %199, %198 ], [ %203, %202 ]
  %206 = trunc i64 %205 to i32
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %210

208:                                              ; preds = %204
  store i32 0, i32* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #7
  br label %209

209:                                              ; preds = %190, %208
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %179) #7
  br label %325

210:                                              ; preds = %204
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #7
  %211 = call i64 @_ZN2v88internal6String9VisitFlatINS0_21StringCharacterStreamEEENS0_10ConsStringEPT_S1_iRKNS0_31SharedStringAccessGuardIfNeededE(%"class.v8::internal::StringCharacterStream"* nonnull %16, i64 %205, i32 0, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16) %44) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %179) #7
  br label %212

212:                                              ; preds = %183, %210
  %213 = add nsw i32 %186, 1
  %214 = icmp slt i32 %186, %45
  br i1 %214, label %215, label %325

215:                                              ; preds = %212
  %216 = load i8*, i8** %47, align 8
  %217 = load i8*, i8** %39, align 8
  %218 = icmp eq i8* %216, %217
  br i1 %218, label %219, label %241

219:                                              ; preds = %215
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %180) #7
  store i32 0, i32* %8, align 4
  %220 = load i32, i32* %42, align 8
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %240, label %222

222:                                              ; preds = %219
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #7
  %223 = load i32, i32* %43, align 4
  %224 = sub nsw i32 %223, %220
  %225 = icmp eq i32 %224, 32
  %226 = zext i1 %225 to i8
  store i8 %226, i8* %7, align 1
  br i1 %225, label %231, label %227

227:                                              ; preds = %222
  %228 = call i64 @_ZN2v88internal18ConsStringIterator8NextLeafEPb(%"class.v8::internal::ConsStringIterator"* nonnull %41, i8* nonnull %7) #7
  %229 = load i8, i8* %7, align 1
  %230 = icmp eq i8 %229, 0
  br i1 %230, label %233, label %231

231:                                              ; preds = %227, %222
  %232 = call i64 @_ZN2v88internal18ConsStringIterator6SearchEPi(%"class.v8::internal::ConsStringIterator"* nonnull %41, i32* nonnull %8) #7
  br label %233

233:                                              ; preds = %231, %227
  %234 = phi i64 [ %228, %227 ], [ %232, %231 ]
  %235 = trunc i64 %234 to i32
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %237, label %238

237:                                              ; preds = %233
  store i32 0, i32* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #7
  br label %240

238:                                              ; preds = %233
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #7
  %239 = call i64 @_ZN2v88internal6String9VisitFlatINS0_21StringCharacterStreamEEENS0_10ConsStringEPT_S1_iRKNS0_31SharedStringAccessGuardIfNeededE(%"class.v8::internal::StringCharacterStream"* nonnull %16, i64 %234, i32 0, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16) %44) #7
  br label %240

240:                                              ; preds = %238, %237, %219
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %180) #7
  br label %241

241:                                              ; preds = %240, %215
  %242 = load i8, i8* %49, align 8, !range !5
  %243 = icmp eq i8 %242, 0
  br i1 %243, label %249, label %244

244:                                              ; preds = %241
  %245 = load i8*, i8** %47, align 8
  %246 = getelementptr inbounds i8, i8* %245, i64 1
  store i8* %246, i8** %47, align 8
  %247 = load i8, i8* %245, align 1
  %248 = zext i8 %247 to i16
  br label %254

249:                                              ; preds = %241
  %250 = load i16*, i16** %50, align 8
  %251 = getelementptr inbounds i16, i16* %250, i64 1
  store i16* %251, i16** %50, align 8
  %252 = load i16, i16* %250, align 2
  %253 = bitcast i16* %251 to i8*
  br label %254

254:                                              ; preds = %244, %249
  %255 = phi i8* [ %246, %244 ], [ %253, %249 ]
  %256 = phi i16 [ %248, %244 ], [ %252, %249 ]
  %257 = icmp eq i16 %256, 0
  %258 = and i1 %181, %257
  %259 = sext i32 %187 to i64
  %260 = getelementptr inbounds i8, i8* %161, i64 %259
  %261 = zext i16 %256 to i32
  %262 = select i1 %258, i32 32, i32 %261
  %263 = icmp ult i32 %262, 128
  br i1 %263, label %264, label %266

264:                                              ; preds = %254
  %265 = trunc i32 %262 to i8
  store i8 %265, i8* %260, align 1
  br label %322

266:                                              ; preds = %254
  %267 = icmp ult i32 %262, 2048
  br i1 %267, label %268, label %276

268:                                              ; preds = %266
  %269 = lshr i32 %262, 6
  %270 = trunc i32 %269 to i8
  %271 = or i8 %270, -64
  store i8 %271, i8* %260, align 1
  %272 = trunc i32 %262 to i8
  %273 = and i8 %272, 63
  %274 = or i8 %273, -128
  %275 = getelementptr inbounds i8, i8* %260, i64 1
  store i8 %274, i8* %275, align 1
  br label %322

276:                                              ; preds = %266
  %277 = and i32 %185, 64512
  %278 = icmp eq i32 %277, 55296
  %279 = and i32 %262, 64512
  %280 = icmp eq i32 %279, 56320
  %281 = and i1 %278, %280
  br i1 %281, label %282, label %309

282:                                              ; preds = %276
  %283 = getelementptr inbounds i8, i8* %260, i64 -3
  %284 = shl nsw i32 %185, 10
  %285 = and i32 %284, 1047552
  %286 = add nuw nsw i32 %285, 65536
  %287 = and i32 %262, 1023
  %288 = or i32 %287, %286
  %289 = icmp ult i32 %288, 128
  br i1 %289, label %290, label %292

290:                                              ; preds = %282
  %291 = trunc i32 %262 to i8
  store i8 %291, i8* %283, align 1
  br label %322

292:                                              ; preds = %282
  %293 = lshr i32 %286, 18
  %294 = trunc i32 %293 to i8
  %295 = or i8 %294, -16
  store i8 %295, i8* %283, align 1
  %296 = lshr i32 %286, 12
  %297 = trunc i32 %296 to i8
  %298 = and i8 %297, 63
  %299 = or i8 %298, -128
  %300 = getelementptr inbounds i8, i8* %260, i64 -2
  store i8 %299, i8* %300, align 1
  %301 = lshr i32 %288, 6
  %302 = trunc i32 %301 to i8
  %303 = and i8 %302, 63
  %304 = or i8 %303, -128
  %305 = getelementptr inbounds i8, i8* %260, i64 -1
  store i8 %304, i8* %305, align 1
  %306 = trunc i32 %262 to i8
  %307 = and i8 %306, 63
  %308 = or i8 %307, -128
  store i8 %308, i8* %260, align 1
  br label %322

309:                                              ; preds = %276
  %310 = lshr i32 %262, 12
  %311 = trunc i32 %310 to i8
  %312 = or i8 %311, -32
  store i8 %312, i8* %260, align 1
  %313 = lshr i32 %262, 6
  %314 = trunc i32 %313 to i8
  %315 = and i8 %314, 63
  %316 = or i8 %315, -128
  %317 = getelementptr inbounds i8, i8* %260, i64 1
  store i8 %316, i8* %317, align 1
  %318 = trunc i32 %262 to i8
  %319 = and i8 %318, 63
  %320 = or i8 %319, -128
  %321 = getelementptr inbounds i8, i8* %260, i64 2
  store i8 %320, i8* %321, align 1
  br label %322

322:                                              ; preds = %264, %268, %290, %292, %309
  %323 = phi i32 [ 1, %264 ], [ 2, %268 ], [ 3, %309 ], [ -2, %290 ], [ 1, %292 ]
  %324 = add i32 %323, %187
  br label %183

325:                                              ; preds = %212, %209
  %326 = sext i32 %187 to i64
  %327 = getelementptr inbounds i8, i8* %161, i64 %326
  store i8 0, i8* %327, align 1
  %328 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %16, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %329 = load i8, i8* %328, align 8, !range !5
  %330 = icmp eq i8 %329, 0
  br i1 %330, label %334, label %331

331:                                              ; preds = %325
  %332 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %16, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %333 = load %"class.v8::base::SharedMutex"*, %"class.v8::base::SharedMutex"** %332, align 8
  call void @_ZN2v84base11SharedMutex12UnlockSharedEv(%"class.v8::base::SharedMutex"* %333) #7
  br label %334

334:                                              ; preds = %325, %331
  call void @llvm.lifetime.end.p0i8(i64 320, i8* nonnull %35) #7
  br label %335

335:                                              ; preds = %22, %29, %334
  %336 = phi i8* [ %161, %334 ], [ null, %29 ], [ null, %22 ]
  ret i8* %336
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2v88internal6String9ToCStringENS0_14AllowNullsFlagENS0_14RobustnessFlagEPi(%"class.v8::internal::String"* nocapture readonly, i32, i32, i32*) local_unnamed_addr #0 align 2 {
  %5 = tail call i8* @_ZN2v88internal6String9ToCStringENS0_14AllowNullsFlagENS0_14RobustnessFlagEiiPi(%"class.v8::internal::String"* %0, i32 %1, i32 %2, i32 0, i32 -1, i32* %3)
  ret i8* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal6String10SlowEqualsES1_(%"class.v8::internal::String"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::String", align 8
  %4 = alloca i32, align 4
  %5 = alloca %"class.v8::internal::StringShape", align 4
  %6 = alloca %"class.v8::internal::String", align 8
  %7 = alloca i32, align 4
  %8 = alloca %"class.v8::internal::StringShape", align 4
  %9 = alloca %"class.v8::internal::String", align 8
  %10 = alloca %"class.v8::internal::StringComparator", align 8
  %11 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = add i64 %1, 7
  %17 = inttoptr i64 %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %15, %18
  br i1 %19, label %20, label %286

20:                                               ; preds = %2
  %21 = icmp eq i32 %15, 0
  br i1 %21, label %286, label %22

22:                                               ; preds = %20
  %23 = and i64 %12, -4294967296
  %24 = add i64 %12, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = zext i32 %26 to i64
  %28 = or i64 %23, %27
  %29 = add i64 %28, 7
  %30 = inttoptr i64 %29 to i16*
  %31 = load atomic i16, i16* %30 monotonic, align 2
  %32 = icmp ult i16 %31, 64
  br i1 %32, label %33, label %46

33:                                               ; preds = %22
  %34 = load atomic i32, i32* %25 monotonic, align 4
  %35 = zext i32 %34 to i64
  %36 = or i64 %23, %35
  %37 = add i64 %36, 7
  %38 = inttoptr i64 %37 to i16*
  %39 = load atomic i16, i16* %38 monotonic, align 2
  %40 = and i16 %39, 7
  %41 = icmp eq i16 %40, 5
  br i1 %41, label %42, label %46

42:                                               ; preds = %33
  %43 = and i64 %1, -4294967296
  %44 = add i64 %1, -1
  %45 = inttoptr i64 %44 to i32*
  br label %66

46:                                               ; preds = %22, %33
  %47 = and i64 %1, -4294967296
  %48 = add i64 %1, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = zext i32 %50 to i64
  %52 = or i64 %47, %51
  %53 = add i64 %52, 7
  %54 = inttoptr i64 %53 to i16*
  %55 = load atomic i16, i16* %54 monotonic, align 2
  %56 = icmp ult i16 %55, 64
  br i1 %56, label %57, label %169

57:                                               ; preds = %46
  %58 = load atomic i32, i32* %49 monotonic, align 4
  %59 = zext i32 %58 to i64
  %60 = or i64 %47, %59
  %61 = add i64 %60, 7
  %62 = inttoptr i64 %61 to i16*
  %63 = load atomic i16, i16* %62 monotonic, align 2
  %64 = and i16 %63, 7
  %65 = icmp eq i16 %64, 5
  br i1 %65, label %66, label %169

66:                                               ; preds = %42, %57
  %67 = phi i32* [ %45, %42 ], [ %49, %57 ]
  %68 = phi i64 [ %43, %42 ], [ %47, %57 ]
  %69 = load atomic i32, i32* %67 monotonic, align 4
  %70 = zext i32 %69 to i64
  %71 = or i64 %68, %70
  %72 = add i64 %71, 7
  %73 = inttoptr i64 %72 to i16*
  %74 = load atomic i16, i16* %73 monotonic, align 2
  %75 = icmp ult i16 %74, 64
  br i1 %75, label %76, label %91

76:                                               ; preds = %66
  %77 = load atomic i32, i32* %67 monotonic, align 4
  %78 = zext i32 %77 to i64
  %79 = or i64 %68, %78
  %80 = add i64 %79, 7
  %81 = inttoptr i64 %80 to i16*
  %82 = load atomic i16, i16* %81 monotonic, align 2
  %83 = and i16 %82, 7
  %84 = icmp eq i16 %83, 5
  br i1 %84, label %85, label %91

85:                                               ; preds = %76
  %86 = add i64 %1, 11
  %87 = inttoptr i64 %86 to i32*
  %88 = load i32, i32* %87, align 4
  %89 = zext i32 %88 to i64
  %90 = or i64 %68, %89
  br label %91

91:                                               ; preds = %66, %85, %76
  %92 = phi i64 [ %90, %85 ], [ %1, %76 ], [ %1, %66 ]
  %93 = load atomic i32, i32* %25 monotonic, align 4
  %94 = zext i32 %93 to i64
  %95 = or i64 %23, %94
  %96 = add i64 %95, 7
  %97 = inttoptr i64 %96 to i16*
  %98 = load atomic i16, i16* %97 monotonic, align 2
  %99 = icmp ult i16 %98, 64
  br i1 %99, label %100, label %144

100:                                              ; preds = %91
  %101 = load atomic i32, i32* %25 monotonic, align 4
  %102 = zext i32 %101 to i64
  %103 = or i64 %23, %102
  %104 = add i64 %103, 7
  %105 = inttoptr i64 %104 to i16*
  %106 = load atomic i16, i16* %105 monotonic, align 2
  %107 = and i16 %106, 7
  %108 = icmp eq i16 %107, 5
  br i1 %108, label %109, label %144

109:                                              ; preds = %100
  %110 = bitcast %"class.v8::internal::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #7
  %111 = add i64 %12, 11
  %112 = inttoptr i64 %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = zext i32 %113 to i64
  %115 = or i64 %23, %114
  %116 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %115, i64* %116, align 8
  %117 = trunc i64 %92 to i32
  %118 = icmp eq i32 %113, %117
  br i1 %118, label %142, label %119

119:                                              ; preds = %109
  %120 = add i64 %115, -1
  %121 = inttoptr i64 %120 to i32*
  %122 = load atomic i32, i32* %121 monotonic, align 4
  %123 = zext i32 %122 to i64
  %124 = or i64 %23, %123
  %125 = add i64 %124, 7
  %126 = inttoptr i64 %125 to i16*
  %127 = load atomic i16, i16* %126 monotonic, align 2
  %128 = icmp ult i16 %127, 32
  br i1 %128, label %129, label %140

129:                                              ; preds = %119
  %130 = and i64 %92, -4294967296
  %131 = add i64 %92, -1
  %132 = inttoptr i64 %131 to i32*
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = zext i32 %133 to i64
  %135 = or i64 %130, %134
  %136 = add i64 %135, 7
  %137 = inttoptr i64 %136 to i16*
  %138 = load atomic i16, i16* %137 monotonic, align 2
  %139 = icmp ult i16 %138, 32
  br i1 %139, label %142, label %140

140:                                              ; preds = %129, %119
  %141 = call zeroext i1 @_ZNK2v88internal6String10SlowEqualsES1_(%"class.v8::internal::String"* nonnull %9, i64 %92) #7
  br label %142

142:                                              ; preds = %109, %129, %140
  %143 = phi i1 [ %141, %140 ], [ true, %109 ], [ false, %129 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #7
  br label %286

144:                                              ; preds = %91, %100
  %145 = trunc i64 %92 to i32
  %146 = trunc i64 %12 to i32
  %147 = icmp eq i32 %145, %146
  br i1 %147, label %286, label %148

148:                                              ; preds = %144
  %149 = load atomic i32, i32* %25 monotonic, align 4
  %150 = zext i32 %149 to i64
  %151 = or i64 %23, %150
  %152 = add i64 %151, 7
  %153 = inttoptr i64 %152 to i16*
  %154 = load atomic i16, i16* %153 monotonic, align 2
  %155 = icmp ult i16 %154, 32
  br i1 %155, label %156, label %167

156:                                              ; preds = %148
  %157 = and i64 %92, -4294967296
  %158 = add i64 %92, -1
  %159 = inttoptr i64 %158 to i32*
  %160 = load atomic i32, i32* %159 monotonic, align 4
  %161 = zext i32 %160 to i64
  %162 = or i64 %157, %161
  %163 = add i64 %162, 7
  %164 = inttoptr i64 %163 to i16*
  %165 = load atomic i16, i16* %164 monotonic, align 2
  %166 = icmp ult i16 %165, 32
  br i1 %166, label %286, label %167

167:                                              ; preds = %156, %148
  %168 = tail call zeroext i1 @_ZNK2v88internal6String10SlowEqualsES1_(%"class.v8::internal::String"* %0, i64 %92) #7
  br label %286

169:                                              ; preds = %46, %57
  %170 = add i64 %12, 3
  %171 = inttoptr i64 %170 to i32*
  %172 = load i32, i32* %171, align 4
  %173 = and i32 %172, 1
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %184

175:                                              ; preds = %169
  %176 = add i64 %1, 3
  %177 = inttoptr i64 %176 to i32*
  %178 = load i32, i32* %177, align 4
  %179 = and i32 %178, 1
  %180 = icmp ne i32 %179, 0
  %181 = xor i32 %178, %172
  %182 = icmp ult i32 %181, 4
  %183 = or i1 %180, %182
  br i1 %183, label %184, label %286

184:                                              ; preds = %175, %169
  %185 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %185) #7
  store i32 0, i32* %7, align 4
  %186 = bitcast %"class.v8::internal::StringShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %186) #7
  %187 = getelementptr inbounds %"class.v8::internal::StringShape", %"class.v8::internal::StringShape"* %8, i64 0, i32 0
  %188 = load atomic i32, i32* %25 acquire, align 4
  %189 = zext i32 %188 to i64
  %190 = or i64 %23, %189
  %191 = add i64 %190, 7
  %192 = inttoptr i64 %191 to i16*
  %193 = load atomic i16, i16* %192 monotonic, align 2
  %194 = zext i16 %193 to i32
  store i32 %194, i32* %187, align 4
  %195 = load i64, i64* %11, align 8
  %196 = bitcast %"class.v8::internal::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %196) #7
  %197 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %195, i64* %197, align 8
  %198 = call zeroext i16 @_ZN2v88internal11StringShape33DispatchToSpecificTypeWithoutCastIZNS1_22DispatchToSpecificTypeIZNKS0_6String7GetImplEiE19StringGetDispatchertJRiEEET0_S4_DpOT1_E17CastingDispatchertJRS4_S6_EEES7_SA_(%"class.v8::internal::StringShape"* nonnull %8, %"class.v8::internal::String"* nonnull dereferenceable(8) %6, i32* nonnull dereferenceable(4) %7) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %196) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %186) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %185) #7
  %199 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %199) #7
  store i32 0, i32* %4, align 4
  %200 = bitcast %"class.v8::internal::StringShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %200) #7
  %201 = getelementptr inbounds %"class.v8::internal::StringShape", %"class.v8::internal::StringShape"* %5, i64 0, i32 0
  %202 = load atomic i32, i32* %49 acquire, align 4
  %203 = zext i32 %202 to i64
  %204 = or i64 %47, %203
  %205 = add i64 %204, 7
  %206 = inttoptr i64 %205 to i16*
  %207 = load atomic i16, i16* %206 monotonic, align 2
  %208 = zext i16 %207 to i32
  store i32 %208, i32* %201, align 4
  %209 = bitcast %"class.v8::internal::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %209) #7
  %210 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %210, align 8
  %211 = call zeroext i16 @_ZN2v88internal11StringShape33DispatchToSpecificTypeWithoutCastIZNS1_22DispatchToSpecificTypeIZNKS0_6String7GetImplEiE19StringGetDispatchertJRiEEET0_S4_DpOT1_E17CastingDispatchertJRS4_S6_EEES7_SA_(%"class.v8::internal::StringShape"* nonnull %5, %"class.v8::internal::String"* nonnull dereferenceable(8) %3, i32* nonnull dereferenceable(4) %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %209) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %200) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %199) #7
  %212 = icmp eq i16 %198, %211
  br i1 %212, label %213, label %286

213:                                              ; preds = %184
  %214 = load i64, i64* %11, align 8
  %215 = and i64 %214, -4294967296
  %216 = add i64 %214, -1
  %217 = inttoptr i64 %216 to i32*
  %218 = load atomic i32, i32* %217 monotonic, align 4
  %219 = zext i32 %218 to i64
  %220 = or i64 %215, %219
  %221 = add i64 %220, 7
  %222 = inttoptr i64 %221 to i16*
  %223 = load atomic i16, i16* %222 monotonic, align 2
  %224 = icmp ult i16 %223, 64
  br i1 %224, label %225, label %277

225:                                              ; preds = %213
  %226 = load atomic i32, i32* %217 monotonic, align 4
  %227 = zext i32 %226 to i64
  %228 = or i64 %215, %227
  %229 = add i64 %228, 7
  %230 = inttoptr i64 %229 to i16*
  %231 = load atomic i16, i16* %230 monotonic, align 2
  %232 = and i16 %231, 7
  %233 = icmp eq i16 %232, 0
  br i1 %233, label %234, label %277

234:                                              ; preds = %225
  %235 = load atomic i32, i32* %217 monotonic, align 4
  %236 = zext i32 %235 to i64
  %237 = or i64 %215, %236
  %238 = add i64 %237, 7
  %239 = inttoptr i64 %238 to i16*
  %240 = load atomic i16, i16* %239 monotonic, align 2
  %241 = and i16 %240, 8
  %242 = icmp eq i16 %241, 0
  br i1 %242, label %277, label %243

243:                                              ; preds = %234
  %244 = load atomic i32, i32* %49 monotonic, align 4
  %245 = zext i32 %244 to i64
  %246 = or i64 %47, %245
  %247 = add i64 %246, 7
  %248 = inttoptr i64 %247 to i16*
  %249 = load atomic i16, i16* %248 monotonic, align 2
  %250 = icmp ult i16 %249, 64
  br i1 %250, label %251, label %277

251:                                              ; preds = %243
  %252 = load atomic i32, i32* %49 monotonic, align 4
  %253 = zext i32 %252 to i64
  %254 = or i64 %47, %253
  %255 = add i64 %254, 7
  %256 = inttoptr i64 %255 to i16*
  %257 = load atomic i16, i16* %256 monotonic, align 2
  %258 = and i16 %257, 7
  %259 = icmp eq i16 %258, 0
  br i1 %259, label %260, label %277

260:                                              ; preds = %251
  %261 = load atomic i32, i32* %49 monotonic, align 4
  %262 = zext i32 %261 to i64
  %263 = or i64 %47, %262
  %264 = add i64 %263, 7
  %265 = inttoptr i64 %264 to i16*
  %266 = load atomic i16, i16* %265 monotonic, align 2
  %267 = and i16 %266, 8
  %268 = icmp eq i16 %267, 0
  br i1 %268, label %277, label %269

269:                                              ; preds = %260
  %270 = add i64 %214, 11
  %271 = inttoptr i64 %270 to i8*
  %272 = add i64 %1, 11
  %273 = inttoptr i64 %272 to i8*
  %274 = sext i32 %15 to i64
  %275 = call i32 @bcmp(i8* %271, i8* %273, i64 %274) #7
  %276 = icmp eq i32 %275, 0
  br label %286

277:                                              ; preds = %260, %234, %251, %243, %225, %213
  %278 = bitcast %"class.v8::internal::StringComparator"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 592, i8* nonnull %278) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %278, i8 0, i64 264, i1 false) #7
  %279 = getelementptr inbounds %"class.v8::internal::StringComparator", %"class.v8::internal::StringComparator"* %10, i64 0, i32 0, i32 1
  store i8 1, i8* %279, align 8
  %280 = getelementptr inbounds %"class.v8::internal::StringComparator", %"class.v8::internal::StringComparator"* %10, i64 0, i32 0, i32 2
  %281 = getelementptr inbounds %"class.v8::internal::StringComparator", %"class.v8::internal::StringComparator"* %10, i64 0, i32 1, i32 1
  %282 = bitcast i32* %280 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %282, i8 0, i64 276, i1 false) #7
  store i8 1, i8* %281, align 8
  %283 = getelementptr inbounds %"class.v8::internal::StringComparator", %"class.v8::internal::StringComparator"* %10, i64 0, i32 1, i32 2
  store i32 0, i32* %283, align 4
  %284 = getelementptr inbounds %"class.v8::internal::StringComparator", %"class.v8::internal::StringComparator"* %10, i64 0, i32 1, i32 3, i32 0
  store i8* null, i8** %284, align 8
  %285 = call zeroext i1 @_ZN2v88internal16StringComparator6EqualsENS0_6StringES2_(%"class.v8::internal::StringComparator"* nonnull %10, i64 %214, i64 %1) #7
  call void @llvm.lifetime.end.p0i8(i64 592, i8* nonnull %278) #7
  br label %286

286:                                              ; preds = %175, %167, %156, %144, %184, %20, %2, %277, %269, %142
  %287 = phi i1 [ %143, %142 ], [ %276, %269 ], [ %285, %277 ], [ false, %2 ], [ true, %20 ], [ false, %184 ], [ %168, %167 ], [ true, %144 ], [ false, %156 ], [ false, %175 ]
  ret i1 %287
}

declare zeroext i1 @_ZN2v88internal16StringComparator6EqualsENS0_6StringES2_(%"class.v8::internal::StringComparator"*, i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal6String10SlowEqualsEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::String", align 8
  %5 = alloca i32, align 4
  %6 = alloca %"class.v8::internal::StringShape", align 4
  %7 = alloca %"class.v8::internal::String", align 8
  %8 = alloca i32, align 4
  %9 = alloca %"class.v8::internal::StringShape", align 4
  %10 = alloca %"class.v8::internal::CombinationAssertScope", align 1
  %11 = alloca %"class.v8::internal::String::FlatContent", align 8
  %12 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %13 = alloca %"class.v8::internal::String::FlatContent", align 8
  %14 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %15 = load i64, i64* %1, align 8
  %16 = add i64 %15, 7
  %17 = inttoptr i64 %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = load i64, i64* %2, align 8
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %18, %22
  br i1 %23, label %24, label %326

24:                                               ; preds = %3
  %25 = icmp eq i32 %18, 0
  br i1 %25, label %326, label %26

26:                                               ; preds = %24
  %27 = and i64 %15, -4294967296
  %28 = add i64 %15, -1
  %29 = inttoptr i64 %28 to i32*
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = zext i32 %30 to i64
  %32 = or i64 %27, %31
  %33 = add i64 %32, 7
  %34 = inttoptr i64 %33 to i16*
  %35 = load atomic i16, i16* %34 monotonic, align 2
  %36 = icmp ult i16 %35, 64
  br i1 %36, label %37, label %46

37:                                               ; preds = %26
  %38 = load atomic i32, i32* %29 monotonic, align 4
  %39 = zext i32 %38 to i64
  %40 = or i64 %27, %39
  %41 = add i64 %40, 7
  %42 = inttoptr i64 %41 to i16*
  %43 = load atomic i16, i16* %42 monotonic, align 2
  %44 = and i16 %43, 7
  %45 = icmp eq i16 %44, 5
  br i1 %45, label %66, label %46

46:                                               ; preds = %26, %37
  %47 = and i64 %19, -4294967296
  %48 = add i64 %19, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = zext i32 %50 to i64
  %52 = or i64 %47, %51
  %53 = add i64 %52, 7
  %54 = inttoptr i64 %53 to i16*
  %55 = load atomic i16, i16* %54 monotonic, align 2
  %56 = icmp ult i16 %55, 64
  br i1 %56, label %57, label %191

57:                                               ; preds = %46
  %58 = load atomic i32, i32* %49 monotonic, align 4
  %59 = zext i32 %58 to i64
  %60 = or i64 %47, %59
  %61 = add i64 %60, 7
  %62 = inttoptr i64 %61 to i16*
  %63 = load atomic i16, i16* %62 monotonic, align 2
  %64 = and i16 %63, 7
  %65 = icmp eq i16 %64, 5
  br i1 %65, label %66, label %191

66:                                               ; preds = %37, %57
  %67 = load atomic i32, i32* %29 monotonic, align 4
  %68 = zext i32 %67 to i64
  %69 = or i64 %27, %68
  %70 = add i64 %69, 7
  %71 = inttoptr i64 %70 to i16*
  %72 = load atomic i16, i16* %71 monotonic, align 2
  %73 = icmp ult i16 %72, 64
  br i1 %73, label %74, label %107

74:                                               ; preds = %66
  %75 = load atomic i32, i32* %29 monotonic, align 4
  %76 = zext i32 %75 to i64
  %77 = or i64 %27, %76
  %78 = add i64 %77, 7
  %79 = inttoptr i64 %78 to i16*
  %80 = load atomic i16, i16* %79 monotonic, align 2
  %81 = and i16 %80, 7
  %82 = icmp eq i16 %81, 5
  br i1 %82, label %83, label %107

83:                                               ; preds = %74
  %84 = add i64 %15, 11
  %85 = inttoptr i64 %84 to i32*
  %86 = load i32, i32* %85, align 4
  %87 = zext i32 %86 to i64
  %88 = or i64 %27, %87
  %89 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %90 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %89, align 8
  %91 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %90, null
  br i1 %91, label %94, label %92

92:                                               ; preds = %83
  %93 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %90, i64 %88) #7
  br label %107

94:                                               ; preds = %83
  %95 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %96 = load i64*, i64** %95, align 8
  %97 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %98 = load i64*, i64** %97, align 8
  %99 = icmp eq i64* %96, %98
  br i1 %99, label %100, label %102

100:                                              ; preds = %94
  %101 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #7
  br label %102

102:                                              ; preds = %100, %94
  %103 = phi i64* [ %101, %100 ], [ %96, %94 ]
  %104 = ptrtoint i64* %103 to i64
  %105 = add i64 %104, 8
  %106 = inttoptr i64 %105 to i64*
  store i64* %106, i64** %95, align 8
  store i64 %88, i64* %103, align 8
  br label %107

107:                                              ; preds = %66, %102, %92, %74
  %108 = phi i64* [ %1, %74 ], [ %93, %92 ], [ %103, %102 ], [ %1, %66 ]
  %109 = load i64, i64* %2, align 8
  %110 = and i64 %109, -4294967296
  %111 = add i64 %109, -1
  %112 = inttoptr i64 %111 to i32*
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = zext i32 %113 to i64
  %115 = or i64 %110, %114
  %116 = add i64 %115, 7
  %117 = inttoptr i64 %116 to i16*
  %118 = load atomic i16, i16* %117 monotonic, align 2
  %119 = icmp ult i16 %118, 64
  br i1 %119, label %120, label %153

120:                                              ; preds = %107
  %121 = load atomic i32, i32* %112 monotonic, align 4
  %122 = zext i32 %121 to i64
  %123 = or i64 %110, %122
  %124 = add i64 %123, 7
  %125 = inttoptr i64 %124 to i16*
  %126 = load atomic i16, i16* %125 monotonic, align 2
  %127 = and i16 %126, 7
  %128 = icmp eq i16 %127, 5
  br i1 %128, label %129, label %153

129:                                              ; preds = %120
  %130 = add i64 %109, 11
  %131 = inttoptr i64 %130 to i32*
  %132 = load i32, i32* %131, align 4
  %133 = zext i32 %132 to i64
  %134 = or i64 %110, %133
  %135 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %136 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %135, align 8
  %137 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %129
  %139 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %136, i64 %134) #7
  br label %153

140:                                              ; preds = %129
  %141 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %142 = load i64*, i64** %141, align 8
  %143 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %144 = load i64*, i64** %143, align 8
  %145 = icmp eq i64* %142, %144
  br i1 %145, label %146, label %148

146:                                              ; preds = %140
  %147 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #7
  br label %148

148:                                              ; preds = %146, %140
  %149 = phi i64* [ %147, %146 ], [ %142, %140 ]
  %150 = ptrtoint i64* %149 to i64
  %151 = add i64 %150, 8
  %152 = inttoptr i64 %151 to i64*
  store i64* %152, i64** %141, align 8
  store i64 %134, i64* %149, align 8
  br label %153

153:                                              ; preds = %107, %148, %138, %120
  %154 = phi i64* [ %2, %120 ], [ %139, %138 ], [ %149, %148 ], [ %2, %107 ]
  %155 = icmp eq i64* %108, %154
  br i1 %155, label %326, label %156

156:                                              ; preds = %153
  %157 = icmp eq i64* %108, null
  %158 = icmp eq i64* %154, null
  %159 = or i1 %157, %158
  %160 = load i64, i64* %108, align 8
  br i1 %159, label %166, label %161

161:                                              ; preds = %156
  %162 = load i64, i64* %154, align 8
  %163 = trunc i64 %160 to i32
  %164 = trunc i64 %162 to i32
  %165 = icmp eq i32 %163, %164
  br i1 %165, label %326, label %166

166:                                              ; preds = %156, %161
  %167 = and i64 %160, -4294967296
  %168 = add i64 %160, -1
  %169 = inttoptr i64 %168 to i32*
  %170 = load atomic i32, i32* %169 monotonic, align 4
  %171 = zext i32 %170 to i64
  %172 = or i64 %167, %171
  %173 = add i64 %172, 7
  %174 = inttoptr i64 %173 to i16*
  %175 = load atomic i16, i16* %174 monotonic, align 2
  %176 = icmp ult i16 %175, 32
  br i1 %176, label %177, label %189

177:                                              ; preds = %166
  %178 = load i64, i64* %154, align 8
  %179 = and i64 %178, -4294967296
  %180 = add i64 %178, -1
  %181 = inttoptr i64 %180 to i32*
  %182 = load atomic i32, i32* %181 monotonic, align 4
  %183 = zext i32 %182 to i64
  %184 = or i64 %179, %183
  %185 = add i64 %184, 7
  %186 = inttoptr i64 %185 to i16*
  %187 = load atomic i16, i16* %186 monotonic, align 2
  %188 = icmp ult i16 %187, 32
  br i1 %188, label %326, label %189

189:                                              ; preds = %166, %177
  %190 = tail call zeroext i1 @_ZN2v88internal6String10SlowEqualsEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"* %0, i64* %108, i64* %154) #7
  br label %326

191:                                              ; preds = %46, %57
  %192 = add i64 %15, 3
  %193 = inttoptr i64 %192 to i32*
  %194 = load i32, i32* %193, align 4
  %195 = and i32 %194, 1
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %206

197:                                              ; preds = %191
  %198 = add i64 %19, 3
  %199 = inttoptr i64 %198 to i32*
  %200 = load i32, i32* %199, align 4
  %201 = and i32 %200, 1
  %202 = icmp ne i32 %201, 0
  %203 = xor i32 %200, %194
  %204 = icmp ult i32 %203, 4
  %205 = or i1 %202, %204
  br i1 %205, label %206, label %326

206:                                              ; preds = %197, %191
  %207 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %207) #7
  store i32 0, i32* %8, align 4
  %208 = bitcast %"class.v8::internal::StringShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %208) #7
  %209 = getelementptr inbounds %"class.v8::internal::StringShape", %"class.v8::internal::StringShape"* %9, i64 0, i32 0
  %210 = load atomic i32, i32* %29 acquire, align 4
  %211 = zext i32 %210 to i64
  %212 = or i64 %27, %211
  %213 = add i64 %212, 7
  %214 = inttoptr i64 %213 to i16*
  %215 = load atomic i16, i16* %214 monotonic, align 2
  %216 = zext i16 %215 to i32
  store i32 %216, i32* %209, align 4
  %217 = bitcast %"class.v8::internal::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %217) #7
  %218 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %15, i64* %218, align 8
  %219 = call zeroext i16 @_ZN2v88internal11StringShape33DispatchToSpecificTypeWithoutCastIZNS1_22DispatchToSpecificTypeIZNKS0_6String7GetImplEiE19StringGetDispatchertJRiEEET0_S4_DpOT1_E17CastingDispatchertJRS4_S6_EEES7_SA_(%"class.v8::internal::StringShape"* nonnull %9, %"class.v8::internal::String"* nonnull dereferenceable(8) %7, i32* nonnull dereferenceable(4) %8) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %217) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %208) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %207) #7
  %220 = load i64, i64* %2, align 8
  %221 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %221) #7
  store i32 0, i32* %5, align 4
  %222 = bitcast %"class.v8::internal::StringShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %222) #7
  %223 = getelementptr inbounds %"class.v8::internal::StringShape", %"class.v8::internal::StringShape"* %6, i64 0, i32 0
  %224 = and i64 %220, -4294967296
  %225 = add i64 %220, -1
  %226 = inttoptr i64 %225 to i32*
  %227 = load atomic i32, i32* %226 acquire, align 4
  %228 = zext i32 %227 to i64
  %229 = or i64 %224, %228
  %230 = add i64 %229, 7
  %231 = inttoptr i64 %230 to i16*
  %232 = load atomic i16, i16* %231 monotonic, align 2
  %233 = zext i16 %232 to i32
  store i32 %233, i32* %223, align 4
  %234 = bitcast %"class.v8::internal::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %234) #7
  %235 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %220, i64* %235, align 8
  %236 = call zeroext i16 @_ZN2v88internal11StringShape33DispatchToSpecificTypeWithoutCastIZNS1_22DispatchToSpecificTypeIZNKS0_6String7GetImplEiE19StringGetDispatchertJRiEEET0_S4_DpOT1_E17CastingDispatchertJRS4_S6_EEES7_SA_(%"class.v8::internal::StringShape"* nonnull %6, %"class.v8::internal::String"* nonnull dereferenceable(8) %4, i32* nonnull dereferenceable(4) %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %234) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %222) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %221) #7
  %237 = icmp eq i16 %219, %236
  br i1 %237, label %238, label %326

238:                                              ; preds = %206
  %239 = call i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %0, i64* %1, i8 zeroext 0)
  %240 = call i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %0, i64* %2, i8 zeroext 0)
  %241 = getelementptr inbounds %"class.v8::internal::CombinationAssertScope", %"class.v8::internal::CombinationAssertScope"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %241) #7
  %242 = bitcast %"class.v8::internal::String::FlatContent"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %242) #7
  %243 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %243) #7
  %244 = load i64, i64* %239, align 8
  %245 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %244, i64* %245, align 8
  %246 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %12, i64 0, i32 0
  call void @_ZN2v88internal6String14GetFlatContentERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENS3_ILS4_1ELb0EEEEEE(%"class.v8::internal::String::FlatContent"* nonnull sret %11, %"class.v8::internal::String"* nonnull %246, %"class.v8::internal::CombinationAssertScope"* nonnull dereferenceable(1) %10)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %243) #7
  %247 = bitcast %"class.v8::internal::String::FlatContent"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %247) #7
  %248 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %248) #7
  %249 = load i64, i64* %240, align 8
  %250 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %249, i64* %250, align 8
  %251 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %14, i64 0, i32 0
  call void @_ZN2v88internal6String14GetFlatContentERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENS3_ILS4_1ELb0EEEEEE(%"class.v8::internal::String::FlatContent"* nonnull sret %13, %"class.v8::internal::String"* nonnull %251, %"class.v8::internal::CombinationAssertScope"* nonnull dereferenceable(1) %10)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %248) #7
  %252 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %11, i64 0, i32 2
  %253 = load i32, i32* %252, align 4
  %254 = icmp eq i32 %253, 1
  br i1 %254, label %255, label %267

255:                                              ; preds = %238
  %256 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %13, i64 0, i32 2
  %257 = load i32, i32* %256, align 4
  %258 = icmp eq i32 %257, 1
  br i1 %258, label %259, label %267

259:                                              ; preds = %255
  %260 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %11, i64 0, i32 0, i32 0
  %261 = load i8*, i8** %260, align 8
  %262 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %13, i64 0, i32 0, i32 0
  %263 = load i8*, i8** %262, align 8
  %264 = sext i32 %18 to i64
  %265 = call i32 @bcmp(i8* %261, i8* %263, i64 %264) #7
  %266 = icmp eq i32 %265, 0
  br label %324

267:                                              ; preds = %255, %238
  %268 = icmp sgt i32 %18, 0
  br i1 %268, label %269, label %324

269:                                              ; preds = %267
  %270 = bitcast %"class.v8::internal::String::FlatContent"* %11 to i16**
  %271 = load i16*, i16** %270, align 8
  %272 = bitcast i16* %271 to i8*
  %273 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %13, i64 0, i32 2
  %274 = load i32, i32* %273, align 4
  %275 = icmp eq i32 %274, 1
  %276 = bitcast %"class.v8::internal::String::FlatContent"* %13 to i16**
  %277 = load i16*, i16** %276, align 8
  %278 = bitcast i16* %277 to i8*
  %279 = zext i32 %18 to i64
  br i1 %254, label %280, label %302

280:                                              ; preds = %269
  br i1 %275, label %281, label %291

281:                                              ; preds = %280, %289
  %282 = phi i64 [ %288, %289 ], [ 0, %280 ]
  %283 = getelementptr inbounds i8, i8* %272, i64 %282
  %284 = load i8, i8* %283, align 1
  %285 = getelementptr inbounds i8, i8* %278, i64 %282
  %286 = load i8, i8* %285, align 1
  %287 = icmp eq i8 %284, %286
  %288 = add nuw nsw i64 %282, 1
  br i1 %287, label %289, label %324

289:                                              ; preds = %281
  %290 = icmp eq i64 %288, %279
  br i1 %290, label %324, label %281

291:                                              ; preds = %280, %300
  %292 = phi i64 [ %299, %300 ], [ 0, %280 ]
  %293 = getelementptr inbounds i8, i8* %272, i64 %292
  %294 = load i8, i8* %293, align 1
  %295 = zext i8 %294 to i16
  %296 = getelementptr inbounds i16, i16* %277, i64 %292
  %297 = load i16, i16* %296, align 2
  %298 = icmp eq i16 %297, %295
  %299 = add nuw nsw i64 %292, 1
  br i1 %298, label %300, label %324

300:                                              ; preds = %291
  %301 = icmp eq i64 %299, %279
  br i1 %301, label %324, label %291

302:                                              ; preds = %269
  br i1 %275, label %303, label %316

303:                                              ; preds = %302, %312
  %304 = phi i64 [ %311, %312 ], [ 0, %302 ]
  %305 = getelementptr inbounds i16, i16* %271, i64 %304
  %306 = load i16, i16* %305, align 2
  %307 = getelementptr inbounds i8, i8* %278, i64 %304
  %308 = load i8, i8* %307, align 1
  %309 = zext i8 %308 to i16
  %310 = icmp eq i16 %306, %309
  %311 = add nuw nsw i64 %304, 1
  br i1 %310, label %312, label %324

312:                                              ; preds = %303
  %313 = icmp eq i64 %311, %279
  br i1 %313, label %324, label %303

314:                                              ; preds = %316
  %315 = icmp eq i64 %323, %279
  br i1 %315, label %324, label %316

316:                                              ; preds = %302, %314
  %317 = phi i64 [ %323, %314 ], [ 0, %302 ]
  %318 = getelementptr inbounds i16, i16* %271, i64 %317
  %319 = load i16, i16* %318, align 2
  %320 = getelementptr inbounds i16, i16* %277, i64 %317
  %321 = load i16, i16* %320, align 2
  %322 = icmp eq i16 %319, %321
  %323 = add nuw nsw i64 %317, 1
  br i1 %322, label %314, label %324

324:                                              ; preds = %316, %314, %303, %312, %291, %300, %281, %289, %267, %259
  %325 = phi i1 [ %266, %259 ], [ true, %267 ], [ true, %289 ], [ false, %281 ], [ true, %300 ], [ false, %291 ], [ true, %312 ], [ false, %303 ], [ true, %314 ], [ false, %316 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %247) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %242) #7
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %241) #7
  br label %326

326:                                              ; preds = %197, %153, %189, %177, %161, %206, %24, %3, %324
  %327 = phi i1 [ %325, %324 ], [ false, %3 ], [ true, %24 ], [ false, %206 ], [ %190, %189 ], [ true, %161 ], [ false, %177 ], [ true, %153 ], [ false, %197 ]
  ret i1 %327
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal6String7CompareEPNS0_7IsolateENS0_6HandleIS1_EES5_(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::String", align 8
  %5 = alloca i32, align 4
  %6 = alloca %"class.v8::internal::StringShape", align 4
  %7 = alloca %"class.v8::internal::String", align 8
  %8 = alloca i32, align 4
  %9 = alloca %"class.v8::internal::StringShape", align 4
  %10 = alloca %"class.v8::internal::CombinationAssertScope", align 1
  %11 = alloca %"class.v8::internal::String::FlatContent", align 8
  %12 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %13 = alloca %"class.v8::internal::String::FlatContent", align 8
  %14 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %15 = icmp eq i64* %1, %2
  br i1 %15, label %196, label %16

16:                                               ; preds = %3
  %17 = icmp eq i64* %1, null
  %18 = icmp eq i64* %2, null
  %19 = or i1 %17, %18
  br i1 %19, label %20, label %23

20:                                               ; preds = %16
  %21 = load i64, i64* %2, align 8
  %22 = load i64, i64* %1, align 8
  br label %29

23:                                               ; preds = %16
  %24 = load i64, i64* %1, align 8
  %25 = load i64, i64* %2, align 8
  %26 = trunc i64 %24 to i32
  %27 = trunc i64 %25 to i32
  %28 = icmp eq i32 %26, %27
  br i1 %28, label %196, label %29

29:                                               ; preds = %20, %23
  %30 = phi i64 [ %22, %20 ], [ %24, %23 ]
  %31 = phi i64 [ %21, %20 ], [ %25, %23 ]
  %32 = add i64 %31, 7
  %33 = inttoptr i64 %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  %36 = add i64 %30, 7
  %37 = inttoptr i64 %36 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %35, label %40, label %42

40:                                               ; preds = %29
  %41 = select i1 %39, i32 1, i32 2
  br label %196

42:                                               ; preds = %29
  br i1 %39, label %196, label %43

43:                                               ; preds = %42
  %44 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %44) #7
  store i32 0, i32* %5, align 4
  %45 = bitcast %"class.v8::internal::StringShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %45) #7
  %46 = getelementptr inbounds %"class.v8::internal::StringShape", %"class.v8::internal::StringShape"* %6, i64 0, i32 0
  %47 = and i64 %30, -4294967296
  %48 = add i64 %30, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load atomic i32, i32* %49 acquire, align 4
  %51 = zext i32 %50 to i64
  %52 = or i64 %47, %51
  %53 = add i64 %52, 7
  %54 = inttoptr i64 %53 to i16*
  %55 = load atomic i16, i16* %54 monotonic, align 2
  %56 = zext i16 %55 to i32
  store i32 %56, i32* %46, align 4
  %57 = bitcast %"class.v8::internal::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #7
  %58 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %30, i64* %58, align 8
  %59 = call zeroext i16 @_ZN2v88internal11StringShape33DispatchToSpecificTypeWithoutCastIZNS1_22DispatchToSpecificTypeIZNKS0_6String7GetImplEiE19StringGetDispatchertJRiEEET0_S4_DpOT1_E17CastingDispatchertJRS4_S6_EEES7_SA_(%"class.v8::internal::StringShape"* nonnull %6, %"class.v8::internal::String"* nonnull dereferenceable(8) %4, i32* nonnull dereferenceable(4) %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %45) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %44) #7
  %60 = zext i16 %59 to i32
  %61 = load i64, i64* %2, align 8
  %62 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %62) #7
  store i32 0, i32* %8, align 4
  %63 = bitcast %"class.v8::internal::StringShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %63) #7
  %64 = getelementptr inbounds %"class.v8::internal::StringShape", %"class.v8::internal::StringShape"* %9, i64 0, i32 0
  %65 = and i64 %61, -4294967296
  %66 = add i64 %61, -1
  %67 = inttoptr i64 %66 to i32*
  %68 = load atomic i32, i32* %67 acquire, align 4
  %69 = zext i32 %68 to i64
  %70 = or i64 %65, %69
  %71 = add i64 %70, 7
  %72 = inttoptr i64 %71 to i16*
  %73 = load atomic i16, i16* %72 monotonic, align 2
  %74 = zext i16 %73 to i32
  store i32 %74, i32* %64, align 4
  %75 = bitcast %"class.v8::internal::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #7
  %76 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %61, i64* %76, align 8
  %77 = call zeroext i16 @_ZN2v88internal11StringShape33DispatchToSpecificTypeWithoutCastIZNS1_22DispatchToSpecificTypeIZNKS0_6String7GetImplEiE19StringGetDispatchertJRiEEET0_S4_DpOT1_E17CastingDispatchertJRS4_S6_EEES7_SA_(%"class.v8::internal::StringShape"* nonnull %9, %"class.v8::internal::String"* nonnull dereferenceable(8) %7, i32* nonnull dereferenceable(4) %8) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %63) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %62) #7
  %78 = zext i16 %77 to i32
  %79 = sub nsw i32 %60, %78
  %80 = icmp slt i32 %79, 0
  br i1 %80, label %196, label %81

81:                                               ; preds = %43
  %82 = icmp eq i32 %79, 0
  br i1 %82, label %83, label %196

83:                                               ; preds = %81
  %84 = call i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %0, i64* %1, i8 zeroext 0)
  %85 = call i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %0, i64* %2, i8 zeroext 0)
  %86 = getelementptr inbounds %"class.v8::internal::CombinationAssertScope", %"class.v8::internal::CombinationAssertScope"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %86) #7
  %87 = load i64, i64* %84, align 8
  %88 = add i64 %87, 7
  %89 = inttoptr i64 %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = load i64, i64* %85, align 8
  %92 = add i64 %91, 7
  %93 = inttoptr i64 %92 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = icmp slt i32 %94, %90
  %96 = icmp sle i32 %94, %90
  %97 = zext i1 %96 to i32
  %98 = select i1 %95, i32 2, i32 %97
  %99 = select i1 %95, i32 %94, i32 %90
  %100 = bitcast %"class.v8::internal::String::FlatContent"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %100) #7
  %101 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101) #7
  %102 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %87, i64* %102, align 8
  %103 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %12, i64 0, i32 0
  call void @_ZN2v88internal6String14GetFlatContentERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENS3_ILS4_1ELb0EEEEEE(%"class.v8::internal::String::FlatContent"* nonnull sret %11, %"class.v8::internal::String"* nonnull %103, %"class.v8::internal::CombinationAssertScope"* nonnull dereferenceable(1) %10)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101) #7
  %104 = bitcast %"class.v8::internal::String::FlatContent"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %104) #7
  %105 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #7
  %106 = load i64, i64* %85, align 8
  %107 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %106, i64* %107, align 8
  %108 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %14, i64 0, i32 0
  call void @_ZN2v88internal6String14GetFlatContentERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENS3_ILS4_1ELb0EEEEEE(%"class.v8::internal::String::FlatContent"* nonnull sret %13, %"class.v8::internal::String"* nonnull %108, %"class.v8::internal::CombinationAssertScope"* nonnull dereferenceable(1) %10)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #7
  %109 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %11, i64 0, i32 2
  %110 = load i32, i32* %109, align 4
  %111 = icmp eq i32 %110, 1
  br i1 %111, label %112, label %143

112:                                              ; preds = %83
  %113 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %11, i64 0, i32 0, i32 0
  %114 = load i8*, i8** %113, align 8
  %115 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %13, i64 0, i32 2
  %116 = load i32, i32* %115, align 4
  %117 = icmp eq i32 %116, 1
  br i1 %117, label %118, label %123

118:                                              ; preds = %112
  %119 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %13, i64 0, i32 0, i32 0
  %120 = load i8*, i8** %119, align 8
  %121 = sext i32 %99 to i64
  %122 = call i32 @memcmp(i8* %114, i8* %120, i64 %121) #20
  br label %186

123:                                              ; preds = %112
  %124 = sext i32 %99 to i64
  %125 = getelementptr inbounds i8, i8* %114, i64 %124
  %126 = icmp sgt i32 %99, 0
  br i1 %126, label %127, label %190

127:                                              ; preds = %123
  %128 = bitcast %"class.v8::internal::String::FlatContent"* %13 to i16**
  %129 = load i16*, i16** %128, align 8
  br label %130

130:                                              ; preds = %127, %139
  %131 = phi i8* [ %140, %139 ], [ %114, %127 ]
  %132 = phi i16* [ %141, %139 ], [ %129, %127 ]
  %133 = load i8, i8* %131, align 1
  %134 = zext i8 %133 to i32
  %135 = load i16, i16* %132, align 2
  %136 = zext i16 %135 to i32
  %137 = sub nsw i32 %134, %136
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %186

139:                                              ; preds = %130
  %140 = getelementptr inbounds i8, i8* %131, i64 1
  %141 = getelementptr inbounds i16, i16* %132, i64 1
  %142 = icmp ult i8* %140, %125
  br i1 %142, label %130, label %190

143:                                              ; preds = %83
  %144 = bitcast %"class.v8::internal::String::FlatContent"* %11 to i16**
  %145 = load i16*, i16** %144, align 8
  %146 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %13, i64 0, i32 2
  %147 = load i32, i32* %146, align 4
  %148 = icmp eq i32 %147, 1
  %149 = sext i32 %99 to i64
  %150 = getelementptr inbounds i16, i16* %145, i64 %149
  %151 = icmp sgt i32 %99, 0
  br i1 %148, label %152, label %169

152:                                              ; preds = %143
  br i1 %151, label %153, label %190

153:                                              ; preds = %152
  %154 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %13, i64 0, i32 0, i32 0
  %155 = load i8*, i8** %154, align 8
  br label %156

156:                                              ; preds = %153, %165
  %157 = phi i16* [ %166, %165 ], [ %145, %153 ]
  %158 = phi i8* [ %167, %165 ], [ %155, %153 ]
  %159 = load i16, i16* %157, align 2
  %160 = zext i16 %159 to i32
  %161 = load i8, i8* %158, align 1
  %162 = zext i8 %161 to i32
  %163 = sub nsw i32 %160, %162
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %186

165:                                              ; preds = %156
  %166 = getelementptr inbounds i16, i16* %157, i64 1
  %167 = getelementptr inbounds i8, i8* %158, i64 1
  %168 = icmp ult i16* %166, %150
  br i1 %168, label %156, label %190

169:                                              ; preds = %143
  br i1 %151, label %170, label %190

170:                                              ; preds = %169
  %171 = bitcast %"class.v8::internal::String::FlatContent"* %13 to i16**
  %172 = load i16*, i16** %171, align 8
  br label %173

173:                                              ; preds = %170, %182
  %174 = phi i16* [ %183, %182 ], [ %145, %170 ]
  %175 = phi i16* [ %184, %182 ], [ %172, %170 ]
  %176 = load i16, i16* %174, align 2
  %177 = zext i16 %176 to i32
  %178 = load i16, i16* %175, align 2
  %179 = zext i16 %178 to i32
  %180 = sub nsw i32 %177, %179
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %186

182:                                              ; preds = %173
  %183 = getelementptr inbounds i16, i16* %174, i64 1
  %184 = getelementptr inbounds i16, i16* %175, i64 1
  %185 = icmp ult i16* %183, %150
  br i1 %185, label %173, label %190

186:                                              ; preds = %173, %156, %130, %118
  %187 = phi i32 [ %122, %118 ], [ %137, %130 ], [ %163, %156 ], [ %180, %173 ]
  %188 = icmp slt i32 %187, 0
  %189 = icmp eq i32 %187, 0
  br i1 %189, label %190, label %192

190:                                              ; preds = %182, %165, %139, %169, %152, %123, %186
  %191 = phi i1 [ %188, %186 ], [ false, %123 ], [ false, %152 ], [ false, %169 ], [ false, %139 ], [ false, %165 ], [ false, %182 ]
  br label %192

192:                                              ; preds = %186, %190
  %193 = phi i1 [ %191, %190 ], [ %188, %186 ]
  %194 = phi i32 [ %98, %190 ], [ 2, %186 ]
  %195 = select i1 %193, i32 0, i32 %194
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %104) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %100) #7
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %86) #7
  br label %196

196:                                              ; preds = %3, %192, %43, %81, %42, %23, %40
  %197 = phi i32 [ %41, %40 ], [ 1, %23 ], [ 0, %42 ], [ %195, %192 ], [ 0, %43 ], [ 2, %81 ], [ 1, %3 ]
  ret i32 %197
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal6String7IndexOfEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_S6_(%"class.v8::internal::Isolate"*, i64*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::Vector.1134", align 8
  %6 = load i64, i64* %1, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 6
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %6 to i32
  %10 = trunc i64 %8 to i32
  %11 = icmp eq i32 %9, %10
  br i1 %11, label %17, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %14 = load i64, i64* %13, align 8
  %15 = trunc i64 %14 to i32
  %16 = icmp eq i32 %9, %15
  br i1 %16, label %17, label %29

17:                                               ; preds = %4, %12
  %18 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %19 = bitcast %"class.v8::internal::Vector.1134"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #7
  %20 = getelementptr inbounds %"class.v8::internal::Vector.1134", %"class.v8::internal::Vector.1134"* %5, i64 0, i32 0
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.18, i64 0, i64 0), i8** %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Vector.1134", %"class.v8::internal::Vector.1134"* %5, i64 0, i32 1
  store i64 24, i64* %21, align 8
  %22 = call i64* @_ZN2v88internal7Factory20NewStringFromOneByteERKNS0_6VectorIKhEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %18, %"class.v8::internal::Vector.1134"* nonnull dereferenceable(16) %5, i8 zeroext 0) #7
  %23 = icmp eq i64* %22, null
  br i1 %23, label %24, label %25, !prof !26

24:                                               ; preds = %17
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.26, i64 0, i64 0)) #18
  unreachable

25:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #7
  %26 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %18, i32 27, i64* nonnull %22, i64* null, i64* null) #7
  %27 = load i64, i64* %26, align 8
  %28 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %27, %"class.v8::internal::MessageLocation"* null) #7
  br label %115

29:                                               ; preds = %12
  %30 = and i64 %6, 1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %43, label %32

32:                                               ; preds = %29
  %33 = and i64 %6, -4294967296
  %34 = add i64 %6, -1
  %35 = inttoptr i64 %34 to i32*
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = zext i32 %36 to i64
  %38 = or i64 %33, %37
  %39 = add i64 %38, 7
  %40 = inttoptr i64 %39 to i16*
  %41 = load atomic i16, i16* %40 monotonic, align 2
  %42 = icmp ult i16 %41, 64
  br i1 %42, label %45, label %43

43:                                               ; preds = %32, %29
  %44 = tail call i64* @_ZN2v88internal6Object15ConvertToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %1) #7
  br label %45

45:                                               ; preds = %32, %43
  %46 = phi i64* [ %44, %43 ], [ %1, %32 ]
  %47 = icmp eq i64* %46, null
  br i1 %47, label %48, label %51

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 32
  %50 = load i64, i64* %49, align 8
  br label %115

51:                                               ; preds = %45
  %52 = load i64, i64* %2, align 8
  %53 = and i64 %52, 1
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %66, label %55

55:                                               ; preds = %51
  %56 = and i64 %52, -4294967296
  %57 = add i64 %52, -1
  %58 = inttoptr i64 %57 to i32*
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = zext i32 %59 to i64
  %61 = or i64 %56, %60
  %62 = add i64 %61, 7
  %63 = inttoptr i64 %62 to i16*
  %64 = load atomic i16, i16* %63 monotonic, align 2
  %65 = icmp ult i16 %64, 64
  br i1 %65, label %68, label %66

66:                                               ; preds = %55, %51
  %67 = tail call i64* @_ZN2v88internal6Object15ConvertToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %2) #7
  br label %68

68:                                               ; preds = %55, %66
  %69 = phi i64* [ %67, %66 ], [ %2, %55 ]
  %70 = icmp eq i64* %69, null
  br i1 %70, label %71, label %74

71:                                               ; preds = %68
  %72 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 32
  %73 = load i64, i64* %72, align 8
  br label %115

74:                                               ; preds = %68
  %75 = load i64, i64* %3, align 8
  %76 = and i64 %75, 1
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %80, label %78

78:                                               ; preds = %74
  %79 = tail call i64* @_ZN2v88internal6Object16ConvertToIntegerEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %3) #7
  br label %80

80:                                               ; preds = %74, %78
  %81 = phi i64* [ %79, %78 ], [ %3, %74 ]
  %82 = icmp eq i64* %81, null
  br i1 %82, label %83, label %86

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 32
  %85 = load i64, i64* %84, align 8
  br label %115

86:                                               ; preds = %80
  %87 = load i64, i64* %46, align 8
  %88 = load i64, i64* %81, align 8
  %89 = and i64 %88, 1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %96

91:                                               ; preds = %86
  %92 = trunc i64 %88 to i32
  %93 = ashr i32 %92, 1
  %94 = icmp slt i32 %92, 2
  %95 = select i1 %94, i32 0, i32 %93
  br label %105

96:                                               ; preds = %86
  %97 = add i64 %88, 3
  %98 = inttoptr i64 %97 to double*
  %99 = load double, double* %98, align 1
  %100 = fcmp ult double %99, 1.000000e+00
  br i1 %100, label %105, label %101

101:                                              ; preds = %96
  %102 = fcmp olt double %99, 0x41EFFFFFFFE00000
  %103 = select i1 %102, double %99, double 0x41EFFFFFFFE00000
  %104 = fptoui double %103 to i32
  br label %105

105:                                              ; preds = %91, %96, %101
  %106 = phi i32 [ %95, %91 ], [ 0, %96 ], [ %104, %101 ]
  %107 = add i64 %87, 7
  %108 = inttoptr i64 %107 to i32*
  %109 = load i32, i32* %108, align 4
  %110 = icmp ugt i32 %106, %109
  %111 = select i1 %110, i32 %109, i32 %106
  %112 = tail call i32 @_ZN2v88internal6String7IndexOfEPNS0_7IsolateENS0_6HandleIS1_EES5_i(%"class.v8::internal::Isolate"* %0, i64* nonnull %46, i64* nonnull %69, i32 %111)
  %113 = sext i32 %112 to i64
  %114 = shl nsw i64 %113, 1
  br label %115

115:                                              ; preds = %48, %83, %71, %105, %25
  %116 = phi i64 [ %28, %25 ], [ %50, %48 ], [ %114, %105 ], [ %85, %83 ], [ %73, %71 ]
  ret i64 %116
}

declare i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"*, i32, i64*, i64*, i64*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal6String7IndexOfEPNS0_7IsolateENS0_6HandleIS1_EES5_i(%"class.v8::internal::Isolate"*, i64*, i64*, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::StringSearch", align 8
  %6 = alloca %"class.v8::internal::StringSearch.1200", align 8
  %7 = alloca %"class.v8::internal::StringSearch.1202", align 8
  %8 = alloca %"class.v8::internal::StringSearch.1205", align 8
  %9 = alloca %"class.v8::internal::CombinationAssertScope", align 1
  %10 = alloca %"class.v8::internal::String::FlatContent", align 8
  %11 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %12 = alloca %"class.v8::internal::String::FlatContent", align 8
  %13 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %14 = load i64, i64* %2, align 8
  %15 = add i64 %14, 7
  %16 = inttoptr i64 %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %226, label %19

19:                                               ; preds = %4
  %20 = load i64, i64* %1, align 8
  %21 = add i64 %20, 7
  %22 = inttoptr i64 %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = add i32 %17, %3
  %25 = icmp ugt i32 %24, %23
  br i1 %25, label %226, label %26

26:                                               ; preds = %19
  %27 = tail call i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %0, i64* %1, i8 zeroext 0)
  %28 = tail call i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %0, i64* %2, i8 zeroext 0)
  %29 = getelementptr inbounds %"class.v8::internal::CombinationAssertScope", %"class.v8::internal::CombinationAssertScope"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %29) #7
  %30 = bitcast %"class.v8::internal::String::FlatContent"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #7
  %31 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #7
  %32 = load i64, i64* %27, align 8
  %33 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %11, i64 0, i32 0
  call void @_ZN2v88internal6String14GetFlatContentERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENS3_ILS4_1ELb0EEEEEE(%"class.v8::internal::String::FlatContent"* nonnull sret %10, %"class.v8::internal::String"* nonnull %34, %"class.v8::internal::CombinationAssertScope"* nonnull dereferenceable(1) %9)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #7
  %35 = bitcast %"class.v8::internal::String::FlatContent"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #7
  %36 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #7
  %37 = load i64, i64* %28, align 8
  %38 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %13, i64 0, i32 0
  call void @_ZN2v88internal6String14GetFlatContentERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENS3_ILS4_1ELb0EEEEEE(%"class.v8::internal::String::FlatContent"* nonnull sret %12, %"class.v8::internal::String"* nonnull %39, %"class.v8::internal::CombinationAssertScope"* nonnull dereferenceable(1) %9)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #7
  %40 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %12, i64 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %101

43:                                               ; preds = %26
  %44 = bitcast %"class.v8::internal::String::FlatContent"* %12 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %12, i64 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %10, i64 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %10, i64 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %10, i64 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %56, label %78

56:                                               ; preds = %43
  %57 = sext i32 %52 to i64
  %58 = bitcast %"class.v8::internal::StringSearch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %58) #7
  %59 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %5, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %59, align 8
  %60 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %5, i64 0, i32 1, i32 0
  %61 = bitcast i8** %60 to i64*
  store i64 %45, i64* %61, align 8
  %62 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %5, i64 0, i32 1, i32 1
  store i64 %48, i64* %62, align 8
  %63 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %5, i64 0, i32 3
  %64 = icmp sgt i32 %47, 250
  %65 = select i1 %64, i32 %47, i32 250
  %66 = add nsw i32 %65, -250
  store i32 %66, i32* %63, align 8
  %67 = icmp slt i32 %47, 7
  br i1 %67, label %68, label %73

68:                                               ; preds = %56
  %69 = icmp eq i32 %47, 1
  %70 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %5, i64 0, i32 2
  br i1 %69, label %71, label %72

71:                                               ; preds = %68
  store i32 (%"class.v8::internal::StringSearch"*, i8*, i64, i32)* @_ZN2v88internal12StringSearchIhhE16SingleCharSearchEPS2_NS0_6VectorIKhEEi, i32 (%"class.v8::internal::StringSearch"*, i8*, i64, i32)** %70, align 8
  br label %75

72:                                               ; preds = %68
  store i32 (%"class.v8::internal::StringSearch"*, i8*, i64, i32)* @_ZN2v88internal12StringSearchIhhE12LinearSearchEPS2_NS0_6VectorIKhEEi, i32 (%"class.v8::internal::StringSearch"*, i8*, i64, i32)** %70, align 8
  br label %75

73:                                               ; preds = %56
  %74 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %5, i64 0, i32 2
  store i32 (%"class.v8::internal::StringSearch"*, i8*, i64, i32)* @_ZN2v88internal12StringSearchIhhE13InitialSearchEPS2_NS0_6VectorIKhEEi, i32 (%"class.v8::internal::StringSearch"*, i8*, i64, i32)** %74, align 8
  br label %75

75:                                               ; preds = %73, %72, %71
  %76 = phi i32 (%"class.v8::internal::StringSearch"*, i8*, i64, i32)* [ @_ZN2v88internal12StringSearchIhhE16SingleCharSearchEPS2_NS0_6VectorIKhEEi, %71 ], [ @_ZN2v88internal12StringSearchIhhE12LinearSearchEPS2_NS0_6VectorIKhEEi, %72 ], [ @_ZN2v88internal12StringSearchIhhE13InitialSearchEPS2_NS0_6VectorIKhEEi, %73 ]
  %77 = call i32 %76(%"class.v8::internal::StringSearch"* nonnull %5, i8* %50, i64 %57, i32 %3) #7
  br label %223

78:                                               ; preds = %43
  %79 = bitcast i8* %50 to i16*
  %80 = sext i32 %52 to i64
  %81 = bitcast %"class.v8::internal::StringSearch.1200"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %81) #7
  %82 = getelementptr inbounds %"class.v8::internal::StringSearch.1200", %"class.v8::internal::StringSearch.1200"* %6, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %82, align 8
  %83 = getelementptr inbounds %"class.v8::internal::StringSearch.1200", %"class.v8::internal::StringSearch.1200"* %6, i64 0, i32 1, i32 0
  %84 = bitcast i8** %83 to i64*
  store i64 %45, i64* %84, align 8
  %85 = getelementptr inbounds %"class.v8::internal::StringSearch.1200", %"class.v8::internal::StringSearch.1200"* %6, i64 0, i32 1, i32 1
  store i64 %48, i64* %85, align 8
  %86 = getelementptr inbounds %"class.v8::internal::StringSearch.1200", %"class.v8::internal::StringSearch.1200"* %6, i64 0, i32 3
  %87 = icmp sgt i32 %47, 250
  %88 = select i1 %87, i32 %47, i32 250
  %89 = add nsw i32 %88, -250
  store i32 %89, i32* %86, align 8
  %90 = icmp slt i32 %47, 7
  br i1 %90, label %91, label %96

91:                                               ; preds = %78
  %92 = icmp eq i32 %47, 1
  %93 = getelementptr inbounds %"class.v8::internal::StringSearch.1200", %"class.v8::internal::StringSearch.1200"* %6, i64 0, i32 2
  br i1 %92, label %94, label %95

94:                                               ; preds = %91
  store i32 (%"class.v8::internal::StringSearch.1200"*, i16*, i64, i32)* @_ZN2v88internal12StringSearchIhtE16SingleCharSearchEPS2_NS0_6VectorIKtEEi, i32 (%"class.v8::internal::StringSearch.1200"*, i16*, i64, i32)** %93, align 8
  br label %98

95:                                               ; preds = %91
  store i32 (%"class.v8::internal::StringSearch.1200"*, i16*, i64, i32)* @_ZN2v88internal12StringSearchIhtE12LinearSearchEPS2_NS0_6VectorIKtEEi, i32 (%"class.v8::internal::StringSearch.1200"*, i16*, i64, i32)** %93, align 8
  br label %98

96:                                               ; preds = %78
  %97 = getelementptr inbounds %"class.v8::internal::StringSearch.1200", %"class.v8::internal::StringSearch.1200"* %6, i64 0, i32 2
  store i32 (%"class.v8::internal::StringSearch.1200"*, i16*, i64, i32)* @_ZN2v88internal12StringSearchIhtE13InitialSearchEPS2_NS0_6VectorIKtEEi, i32 (%"class.v8::internal::StringSearch.1200"*, i16*, i64, i32)** %97, align 8
  br label %98

98:                                               ; preds = %96, %95, %94
  %99 = phi i32 (%"class.v8::internal::StringSearch.1200"*, i16*, i64, i32)* [ @_ZN2v88internal12StringSearchIhtE16SingleCharSearchEPS2_NS0_6VectorIKtEEi, %94 ], [ @_ZN2v88internal12StringSearchIhtE12LinearSearchEPS2_NS0_6VectorIKtEEi, %95 ], [ @_ZN2v88internal12StringSearchIhtE13InitialSearchEPS2_NS0_6VectorIKtEEi, %96 ]
  %100 = call i32 %99(%"class.v8::internal::StringSearch.1200"* nonnull %6, i16* %79, i64 %80, i32 %3) #7
  br label %223

101:                                              ; preds = %26
  %102 = bitcast %"class.v8::internal::String::FlatContent"* %12 to i16**
  %103 = load i16*, i16** %102, align 8
  %104 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %12, i64 0, i32 1
  %105 = load i32, i32* %104, align 8
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %10, i64 0, i32 0, i32 0
  %108 = load i8*, i8** %107, align 8
  %109 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %10, i64 0, i32 1
  %110 = load i32, i32* %109, align 8
  %111 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %10, i64 0, i32 2
  %112 = load i32, i32* %111, align 4
  %113 = icmp eq i32 %112, 1
  br i1 %113, label %114, label %201

114:                                              ; preds = %101
  %115 = sext i32 %110 to i64
  %116 = bitcast %"class.v8::internal::StringSearch.1202"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %116) #7
  %117 = getelementptr inbounds %"class.v8::internal::StringSearch.1202", %"class.v8::internal::StringSearch.1202"* %7, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %117, align 8
  %118 = getelementptr inbounds %"class.v8::internal::StringSearch.1202", %"class.v8::internal::StringSearch.1202"* %7, i64 0, i32 1, i32 0
  store i16* %103, i16** %118, align 8
  %119 = getelementptr inbounds %"class.v8::internal::StringSearch.1202", %"class.v8::internal::StringSearch.1202"* %7, i64 0, i32 1, i32 1
  store i64 %106, i64* %119, align 8
  %120 = getelementptr inbounds %"class.v8::internal::StringSearch.1202", %"class.v8::internal::StringSearch.1202"* %7, i64 0, i32 3
  %121 = icmp sgt i32 %105, 250
  %122 = select i1 %121, i32 %105, i32 250
  %123 = add nsw i32 %122, -250
  store i32 %123, i32* %120, align 8
  %124 = getelementptr inbounds i16, i16* %103, i64 %106
  %125 = icmp ugt i32 %105, 7
  br i1 %125, label %126, label %162

126:                                              ; preds = %114
  %127 = ptrtoint i16* %103 to i64
  %128 = and i64 %127, 7
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %133, label %130

130:                                              ; preds = %126
  %131 = load i16, i16* %103, align 2
  %132 = icmp ugt i16 %131, 255
  br i1 %132, label %142, label %146

133:                                              ; preds = %146, %126
  %134 = phi i16* [ %103, %126 ], [ %148, %146 ]
  %135 = getelementptr inbounds i16, i16* %134, i64 8
  %136 = icmp ugt i16* %135, %124
  br i1 %136, label %162, label %152

137:                                              ; preds = %146
  %138 = load i16, i16* %148, align 2
  %139 = icmp ugt i16 %138, 255
  br i1 %139, label %140, label %146

140:                                              ; preds = %137
  %141 = ptrtoint i16* %148 to i64
  br label %142

142:                                              ; preds = %140, %130
  %143 = phi i64 [ %127, %130 ], [ %141, %140 ]
  %144 = sub i64 %143, %127
  %145 = ashr exact i64 %144, 1
  br label %183

146:                                              ; preds = %130, %137
  %147 = phi i16* [ %148, %137 ], [ %103, %130 ]
  %148 = getelementptr inbounds i16, i16* %147, i64 1
  %149 = ptrtoint i16* %148 to i64
  %150 = and i64 %149, 7
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %133, label %137

152:                                              ; preds = %133, %158
  %153 = phi i16* [ %159, %158 ], [ %134, %133 ]
  %154 = bitcast i16* %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = and i64 %155, -71777214294589696
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %158, label %162

158:                                              ; preds = %152
  %159 = getelementptr inbounds i16, i16* %153, i64 4
  %160 = getelementptr inbounds i16, i16* %153, i64 12
  %161 = icmp ugt i16* %160, %124
  br i1 %161, label %162, label %152

162:                                              ; preds = %158, %152, %133, %114
  %163 = phi i16* [ %103, %114 ], [ %134, %133 ], [ %153, %152 ], [ %159, %158 ]
  %164 = icmp ult i16* %163, %124
  br i1 %164, label %165, label %177

165:                                              ; preds = %162, %174
  %166 = phi i16* [ %175, %174 ], [ %163, %162 ]
  %167 = load i16, i16* %166, align 2
  %168 = icmp ugt i16 %167, 255
  br i1 %168, label %169, label %174

169:                                              ; preds = %165
  %170 = ptrtoint i16* %166 to i64
  %171 = ptrtoint i16* %103 to i64
  %172 = sub i64 %170, %171
  %173 = ashr exact i64 %172, 1
  br label %183

174:                                              ; preds = %165
  %175 = getelementptr inbounds i16, i16* %166, i64 1
  %176 = icmp ult i16* %175, %124
  br i1 %176, label %165, label %177

177:                                              ; preds = %174, %162
  %178 = phi i16* [ %163, %162 ], [ %175, %174 ]
  %179 = ptrtoint i16* %178 to i64
  %180 = ptrtoint i16* %103 to i64
  %181 = sub i64 %179, %180
  %182 = lshr exact i64 %181, 1
  br label %183

183:                                              ; preds = %177, %169, %142
  %184 = phi i64 [ %145, %142 ], [ %173, %169 ], [ %182, %177 ]
  %185 = trunc i64 %184 to i32
  %186 = icmp sgt i32 %105, %185
  br i1 %186, label %187, label %189

187:                                              ; preds = %183
  %188 = getelementptr inbounds %"class.v8::internal::StringSearch.1202", %"class.v8::internal::StringSearch.1202"* %7, i64 0, i32 2
  store i32 (%"class.v8::internal::StringSearch.1202"*, i8*, i64, i32)* @_ZN2v88internal12StringSearchIthE10FailSearchEPS2_NS0_6VectorIKhEEi, i32 (%"class.v8::internal::StringSearch.1202"*, i8*, i64, i32)** %188, align 8
  br label %198

189:                                              ; preds = %183
  %190 = icmp slt i32 %105, 7
  br i1 %190, label %191, label %196

191:                                              ; preds = %189
  %192 = icmp eq i32 %105, 1
  %193 = getelementptr inbounds %"class.v8::internal::StringSearch.1202", %"class.v8::internal::StringSearch.1202"* %7, i64 0, i32 2
  br i1 %192, label %194, label %195

194:                                              ; preds = %191
  store i32 (%"class.v8::internal::StringSearch.1202"*, i8*, i64, i32)* @_ZN2v88internal12StringSearchIthE16SingleCharSearchEPS2_NS0_6VectorIKhEEi, i32 (%"class.v8::internal::StringSearch.1202"*, i8*, i64, i32)** %193, align 8
  br label %198

195:                                              ; preds = %191
  store i32 (%"class.v8::internal::StringSearch.1202"*, i8*, i64, i32)* @_ZN2v88internal12StringSearchIthE12LinearSearchEPS2_NS0_6VectorIKhEEi, i32 (%"class.v8::internal::StringSearch.1202"*, i8*, i64, i32)** %193, align 8
  br label %198

196:                                              ; preds = %189
  %197 = getelementptr inbounds %"class.v8::internal::StringSearch.1202", %"class.v8::internal::StringSearch.1202"* %7, i64 0, i32 2
  store i32 (%"class.v8::internal::StringSearch.1202"*, i8*, i64, i32)* @_ZN2v88internal12StringSearchIthE13InitialSearchEPS2_NS0_6VectorIKhEEi, i32 (%"class.v8::internal::StringSearch.1202"*, i8*, i64, i32)** %197, align 8
  br label %198

198:                                              ; preds = %196, %195, %194, %187
  %199 = phi i32 (%"class.v8::internal::StringSearch.1202"*, i8*, i64, i32)* [ @_ZN2v88internal12StringSearchIthE10FailSearchEPS2_NS0_6VectorIKhEEi, %187 ], [ @_ZN2v88internal12StringSearchIthE16SingleCharSearchEPS2_NS0_6VectorIKhEEi, %194 ], [ @_ZN2v88internal12StringSearchIthE12LinearSearchEPS2_NS0_6VectorIKhEEi, %195 ], [ @_ZN2v88internal12StringSearchIthE13InitialSearchEPS2_NS0_6VectorIKhEEi, %196 ]
  %200 = call i32 %199(%"class.v8::internal::StringSearch.1202"* nonnull %7, i8* %108, i64 %115, i32 %3) #7
  br label %223

201:                                              ; preds = %101
  %202 = bitcast i8* %108 to i16*
  %203 = sext i32 %110 to i64
  %204 = bitcast %"class.v8::internal::StringSearch.1205"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %204) #7
  %205 = getelementptr inbounds %"class.v8::internal::StringSearch.1205", %"class.v8::internal::StringSearch.1205"* %8, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %205, align 8
  %206 = getelementptr inbounds %"class.v8::internal::StringSearch.1205", %"class.v8::internal::StringSearch.1205"* %8, i64 0, i32 1, i32 0
  store i16* %103, i16** %206, align 8
  %207 = getelementptr inbounds %"class.v8::internal::StringSearch.1205", %"class.v8::internal::StringSearch.1205"* %8, i64 0, i32 1, i32 1
  store i64 %106, i64* %207, align 8
  %208 = getelementptr inbounds %"class.v8::internal::StringSearch.1205", %"class.v8::internal::StringSearch.1205"* %8, i64 0, i32 3
  %209 = icmp sgt i32 %105, 250
  %210 = select i1 %209, i32 %105, i32 250
  %211 = add nsw i32 %210, -250
  store i32 %211, i32* %208, align 8
  %212 = icmp slt i32 %105, 7
  br i1 %212, label %213, label %218

213:                                              ; preds = %201
  %214 = icmp eq i32 %105, 1
  %215 = getelementptr inbounds %"class.v8::internal::StringSearch.1205", %"class.v8::internal::StringSearch.1205"* %8, i64 0, i32 2
  br i1 %214, label %216, label %217

216:                                              ; preds = %213
  store i32 (%"class.v8::internal::StringSearch.1205"*, i16*, i64, i32)* @_ZN2v88internal12StringSearchIttE16SingleCharSearchEPS2_NS0_6VectorIKtEEi, i32 (%"class.v8::internal::StringSearch.1205"*, i16*, i64, i32)** %215, align 8
  br label %220

217:                                              ; preds = %213
  store i32 (%"class.v8::internal::StringSearch.1205"*, i16*, i64, i32)* @_ZN2v88internal12StringSearchIttE12LinearSearchEPS2_NS0_6VectorIKtEEi, i32 (%"class.v8::internal::StringSearch.1205"*, i16*, i64, i32)** %215, align 8
  br label %220

218:                                              ; preds = %201
  %219 = getelementptr inbounds %"class.v8::internal::StringSearch.1205", %"class.v8::internal::StringSearch.1205"* %8, i64 0, i32 2
  store i32 (%"class.v8::internal::StringSearch.1205"*, i16*, i64, i32)* @_ZN2v88internal12StringSearchIttE13InitialSearchEPS2_NS0_6VectorIKtEEi, i32 (%"class.v8::internal::StringSearch.1205"*, i16*, i64, i32)** %219, align 8
  br label %220

220:                                              ; preds = %218, %217, %216
  %221 = phi i32 (%"class.v8::internal::StringSearch.1205"*, i16*, i64, i32)* [ @_ZN2v88internal12StringSearchIttE16SingleCharSearchEPS2_NS0_6VectorIKtEEi, %216 ], [ @_ZN2v88internal12StringSearchIttE12LinearSearchEPS2_NS0_6VectorIKtEEi, %217 ], [ @_ZN2v88internal12StringSearchIttE13InitialSearchEPS2_NS0_6VectorIKtEEi, %218 ]
  %222 = call i32 %221(%"class.v8::internal::StringSearch.1205"* nonnull %8, i16* %202, i64 %203, i32 %3) #7
  br label %223

223:                                              ; preds = %220, %198, %98, %75
  %224 = phi i8* [ %204, %220 ], [ %116, %198 ], [ %81, %98 ], [ %58, %75 ]
  %225 = phi i32 [ %222, %220 ], [ %200, %198 ], [ %100, %98 ], [ %77, %75 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %224) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #7
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %29) #7
  br label %226

226:                                              ; preds = %223, %19, %4
  %227 = phi i32 [ %3, %4 ], [ %225, %223 ], [ -1, %19 ]
  ret i32 %227
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal6String15GetSubstitutionEPNS0_7IsolateEPNS1_5MatchENS0_6HandleIS1_EEi(%"class.v8::internal::Isolate"*, %"class.v8::internal::String::Match"*, i64*, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::String", align 8
  %6 = alloca i32, align 4
  %7 = alloca %"class.v8::internal::StringShape", align 4
  %8 = alloca %"class.v8::internal::String", align 8
  %9 = alloca i32, align 4
  %10 = alloca %"class.v8::internal::StringShape", align 4
  %11 = alloca %"class.v8::internal::IncrementalStringBuilder", align 8
  %12 = alloca i8, align 1
  %13 = alloca i32, align 4
  %14 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %15 = load i64, i64* %2, align 8
  %16 = add i64 %15, 7
  %17 = inttoptr i64 %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = bitcast %"class.v8::internal::String::Match"* %1 to i32 (%"class.v8::internal::String::Match"*)***
  %20 = load i32 (%"class.v8::internal::String::Match"*)**, i32 (%"class.v8::internal::String::Match"*)*** %19, align 8
  %21 = getelementptr inbounds i32 (%"class.v8::internal::String::Match"*)*, i32 (%"class.v8::internal::String::Match"*)** %20, i64 3
  %22 = load i32 (%"class.v8::internal::String::Match"*)*, i32 (%"class.v8::internal::String::Match"*)** %21, align 8
  %23 = tail call i32 %22(%"class.v8::internal::String::Match"* %1) #7
  %24 = tail call i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %0, i64* %2, i8 zeroext 0)
  %25 = tail call i64* @_ZN2v88internal7Factory35LookupSingleCharacterStringFromCodeEt(%"class.v8::internal::Factory"* %14, i16 zeroext 36) #7
  %26 = tail call i32 @_ZN2v88internal6String7IndexOfEPNS0_7IsolateENS0_6HandleIS1_EES5_i(%"class.v8::internal::Isolate"* %0, i64* %24, i64* %25, i32 %3)
  %27 = icmp slt i32 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %4
  %29 = ptrtoint i64* %24 to i64
  br label %355

30:                                               ; preds = %4
  %31 = bitcast %"class.v8::internal::IncrementalStringBuilder"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %31) #7
  call void @_ZN2v88internal24IncrementalStringBuilderC1EPNS0_7IsolateE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %11, %"class.v8::internal::Isolate"* %0) #7
  %32 = icmp eq i32 %26, 0
  br i1 %32, label %43, label %33

33:                                               ; preds = %30
  %34 = load i64, i64* %24, align 8
  %35 = add i64 %34, 7
  %36 = inttoptr i64 %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, %26
  br i1 %38, label %41, label %39

39:                                               ; preds = %33
  %40 = call i64* @_ZN2v88internal7Factory18NewProperSubStringENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::Factory"* %14, i64* %24, i32 0, i32 %26) #7
  br label %41

41:                                               ; preds = %33, %39
  %42 = phi i64* [ %40, %39 ], [ %24, %33 ]
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %11, i64* %42) #7
  br label %43

43:                                               ; preds = %30, %41
  %44 = add nuw nsw i32 %26, 1
  %45 = icmp slt i32 %44, %18
  br i1 %45, label %46, label %66

46:                                               ; preds = %43
  %47 = bitcast i32* %9 to i8*
  %48 = bitcast %"class.v8::internal::StringShape"* %10 to i8*
  %49 = getelementptr inbounds %"class.v8::internal::StringShape", %"class.v8::internal::StringShape"* %10, i64 0, i32 0
  %50 = bitcast %"class.v8::internal::String"* %8 to i8*
  %51 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = bitcast %"class.v8::internal::String::Match"* %1 to i1 (%"class.v8::internal::String::Match"*)***
  %53 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %11, i64 0, i32 1
  %54 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %11, i64 0, i32 6, i32 0, i32 0
  %55 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %11, i64 0, i32 4
  %56 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %11, i64 0, i32 3
  %57 = bitcast i32* %13 to i8*
  %58 = bitcast %"class.v8::internal::String::Match"* %1 to i64* (%"class.v8::internal::String::Match"*, i64*, i32*)***
  %59 = bitcast i32* %6 to i8*
  %60 = bitcast %"class.v8::internal::StringShape"* %7 to i8*
  %61 = getelementptr inbounds %"class.v8::internal::StringShape", %"class.v8::internal::StringShape"* %7, i64 0, i32 0
  %62 = bitcast %"class.v8::internal::String"* %5 to i8*
  %63 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = bitcast %"class.v8::internal::String::Match"* %1 to i64* (%"class.v8::internal::String::Match"*, i32, i8*)***
  %65 = bitcast %"class.v8::internal::String::Match"* %1 to i64* (%"class.v8::internal::String::Match"*)***
  br label %100

66:                                               ; preds = %350, %43
  %67 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %11, i64 0, i32 1
  %68 = load i32, i32* %67, align 8
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %11, i64 0, i32 6, i32 0, i32 0
  %71 = load i64*, i64** %70, align 8
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %11, i64 0, i32 4
  %74 = load i32, i32* %73, align 4
  %75 = add nsw i32 %74, 1
  store i32 %75, i32* %73, align 4
  br i1 %69, label %76, label %86

76:                                               ; preds = %66
  %77 = sext i32 %74 to i64
  %78 = add i64 %72, 11
  %79 = add i64 %78, %77
  %80 = inttoptr i64 %79 to i8*
  store i8 36, i8* %80, align 1
  %81 = load i32, i32* %73, align 4
  %82 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %11, i64 0, i32 3
  %83 = load i32, i32* %82, align 8
  %84 = icmp eq i32 %81, %83
  br i1 %84, label %85, label %97

85:                                               ; preds = %76
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %11) #7
  br label %97

86:                                               ; preds = %66
  %87 = shl nsw i32 %74, 1
  %88 = sext i32 %87 to i64
  %89 = add i64 %72, 11
  %90 = add i64 %89, %88
  %91 = inttoptr i64 %90 to i16*
  store i16 36, i16* %91, align 2
  %92 = load i32, i32* %73, align 4
  %93 = getelementptr inbounds %"class.v8::internal::IncrementalStringBuilder", %"class.v8::internal::IncrementalStringBuilder"* %11, i64 0, i32 3
  %94 = load i32, i32* %93, align 8
  %95 = icmp eq i32 %92, %94
  br i1 %95, label %96, label %97

96:                                               ; preds = %86
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %11) #7
  br label %97

97:                                               ; preds = %76, %85, %86, %96
  %98 = call i64* @_ZN2v88internal24IncrementalStringBuilder6FinishEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %11) #7
  %99 = ptrtoint i64* %98 to i64
  br label %353

100:                                              ; preds = %46, %350
  %101 = phi i32 [ %44, %46 ], [ %351, %350 ]
  %102 = phi i32 [ %26, %46 ], [ %337, %350 ]
  %103 = load i64, i64* %24, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %47) #7
  store i32 %101, i32* %9, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %48) #7
  %104 = and i64 %103, -4294967296
  %105 = add i64 %103, -1
  %106 = inttoptr i64 %105 to i32*
  %107 = load atomic i32, i32* %106 acquire, align 4
  %108 = zext i32 %107 to i64
  %109 = or i64 %104, %108
  %110 = add i64 %109, 7
  %111 = inttoptr i64 %110 to i16*
  %112 = load atomic i16, i16* %111 monotonic, align 2
  %113 = zext i16 %112 to i32
  store i32 %113, i32* %49, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #7
  store i64 %103, i64* %51, align 8
  %114 = call zeroext i16 @_ZN2v88internal11StringShape33DispatchToSpecificTypeWithoutCastIZNS1_22DispatchToSpecificTypeIZNKS0_6String7GetImplEiE19StringGetDispatchertJRiEEET0_S4_DpOT1_E17CastingDispatchertJRS4_S6_EEES7_SA_(%"class.v8::internal::StringShape"* nonnull %10, %"class.v8::internal::String"* nonnull dereferenceable(8) %8, i32* nonnull dereferenceable(4) %9) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %48) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %47) #7
  switch i16 %114, label %309 [
    i16 36, label %115
    i16 38, label %143
    i16 96, label %148
    i16 39, label %154
    i16 48, label %160
    i16 49, label %160
    i16 50, label %160
    i16 51, label %160
    i16 52, label %160
    i16 53, label %160
    i16 54, label %160
    i16 55, label %160
    i16 56, label %160
    i16 57, label %160
    i16 60, label %233
  ]

115:                                              ; preds = %100
  %116 = load i32, i32* %53, align 8
  %117 = icmp eq i32 %116, 0
  %118 = load i64*, i64** %54, align 8
  %119 = load i64, i64* %118, align 8
  %120 = load i32, i32* %55, align 4
  %121 = add nsw i32 %120, 1
  store i32 %121, i32* %55, align 4
  br i1 %117, label %122, label %131

122:                                              ; preds = %115
  %123 = sext i32 %120 to i64
  %124 = add i64 %119, 11
  %125 = add i64 %124, %123
  %126 = inttoptr i64 %125 to i8*
  store i8 36, i8* %126, align 1
  %127 = load i32, i32* %55, align 4
  %128 = load i32, i32* %56, align 8
  %129 = icmp eq i32 %127, %128
  br i1 %129, label %130, label %141

130:                                              ; preds = %122
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %11) #7
  br label %141

131:                                              ; preds = %115
  %132 = shl nsw i32 %120, 1
  %133 = sext i32 %132 to i64
  %134 = add i64 %119, 11
  %135 = add i64 %134, %133
  %136 = inttoptr i64 %135 to i16*
  store i16 36, i16* %136, align 2
  %137 = load i32, i32* %55, align 4
  %138 = load i32, i32* %56, align 8
  %139 = icmp eq i32 %137, %138
  br i1 %139, label %140, label %141

140:                                              ; preds = %131
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %11) #7
  br label %141

141:                                              ; preds = %122, %130, %131, %140
  %142 = add nuw nsw i32 %102, 2
  br label %335

143:                                              ; preds = %100
  %144 = load i64* (%"class.v8::internal::String::Match"*)**, i64* (%"class.v8::internal::String::Match"*)*** %65, align 8
  %145 = load i64* (%"class.v8::internal::String::Match"*)*, i64* (%"class.v8::internal::String::Match"*)** %144, align 8
  %146 = call i64* %145(%"class.v8::internal::String::Match"* %1) #7
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %11, i64* %146) #7
  %147 = add nuw nsw i32 %102, 2
  br label %335

148:                                              ; preds = %100
  %149 = load i64* (%"class.v8::internal::String::Match"*)**, i64* (%"class.v8::internal::String::Match"*)*** %65, align 8
  %150 = getelementptr inbounds i64* (%"class.v8::internal::String::Match"*)*, i64* (%"class.v8::internal::String::Match"*)** %149, i64 1
  %151 = load i64* (%"class.v8::internal::String::Match"*)*, i64* (%"class.v8::internal::String::Match"*)** %150, align 8
  %152 = call i64* %151(%"class.v8::internal::String::Match"* %1) #7
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %11, i64* %152) #7
  %153 = add nuw nsw i32 %102, 2
  br label %335

154:                                              ; preds = %100
  %155 = load i64* (%"class.v8::internal::String::Match"*)**, i64* (%"class.v8::internal::String::Match"*)*** %65, align 8
  %156 = getelementptr inbounds i64* (%"class.v8::internal::String::Match"*)*, i64* (%"class.v8::internal::String::Match"*)** %155, i64 2
  %157 = load i64* (%"class.v8::internal::String::Match"*)*, i64* (%"class.v8::internal::String::Match"*)** %156, align 8
  %158 = call i64* %157(%"class.v8::internal::String::Match"* %1) #7
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %11, i64* %158) #7
  %159 = add nuw nsw i32 %102, 2
  br label %335

160:                                              ; preds = %100, %100, %100, %100, %100, %100, %100, %100, %100, %100
  %161 = zext i16 %114 to i32
  %162 = add nsw i32 %161, -48
  %163 = add nuw nsw i32 %102, 2
  %164 = icmp slt i32 %163, %18
  br i1 %164, label %165, label %188

165:                                              ; preds = %160
  %166 = load i64, i64* %24, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %59) #7
  store i32 %163, i32* %6, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %60) #7
  %167 = and i64 %166, -4294967296
  %168 = add i64 %166, -1
  %169 = inttoptr i64 %168 to i32*
  %170 = load atomic i32, i32* %169 acquire, align 4
  %171 = zext i32 %170 to i64
  %172 = or i64 %167, %171
  %173 = add i64 %172, 7
  %174 = inttoptr i64 %173 to i16*
  %175 = load atomic i16, i16* %174 monotonic, align 2
  %176 = zext i16 %175 to i32
  store i32 %176, i32* %61, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #7
  store i64 %166, i64* %63, align 8
  %177 = call zeroext i16 @_ZN2v88internal11StringShape33DispatchToSpecificTypeWithoutCastIZNS1_22DispatchToSpecificTypeIZNKS0_6String7GetImplEiE19StringGetDispatchertJRiEEET0_S4_DpOT1_E17CastingDispatchertJRS4_S6_EEES7_SA_(%"class.v8::internal::StringShape"* nonnull %7, %"class.v8::internal::String"* nonnull dereferenceable(8) %5, i32* nonnull dereferenceable(4) %6) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %60) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %59) #7
  %178 = add i16 %177, -48
  %179 = icmp ult i16 %178, 10
  br i1 %179, label %180, label %188

180:                                              ; preds = %165
  %181 = zext i16 %177 to i32
  %182 = mul nsw i32 %162, 10
  %183 = add nsw i32 %182, -48
  %184 = add nsw i32 %183, %181
  %185 = icmp slt i32 %184, %23
  %186 = select i1 %185, i32 2, i32 1
  %187 = select i1 %185, i32 %184, i32 %162
  br label %188

188:                                              ; preds = %165, %180, %160
  %189 = phi i32 [ 1, %160 ], [ %186, %180 ], [ 1, %165 ]
  %190 = phi i32 [ %162, %160 ], [ %187, %180 ], [ %162, %165 ]
  %191 = icmp ne i32 %190, 0
  %192 = icmp slt i32 %190, %23
  %193 = and i1 %191, %192
  br i1 %193, label %220, label %194

194:                                              ; preds = %188
  %195 = load i32, i32* %53, align 8
  %196 = icmp eq i32 %195, 0
  %197 = load i64*, i64** %54, align 8
  %198 = load i64, i64* %197, align 8
  %199 = load i32, i32* %55, align 4
  %200 = add nsw i32 %199, 1
  store i32 %200, i32* %55, align 4
  br i1 %196, label %201, label %210

201:                                              ; preds = %194
  %202 = sext i32 %199 to i64
  %203 = add i64 %198, 11
  %204 = add i64 %203, %202
  %205 = inttoptr i64 %204 to i8*
  store i8 36, i8* %205, align 1
  %206 = load i32, i32* %55, align 4
  %207 = load i32, i32* %56, align 8
  %208 = icmp eq i32 %206, %207
  br i1 %208, label %209, label %335

209:                                              ; preds = %201
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %11) #7
  br label %335

210:                                              ; preds = %194
  %211 = shl nsw i32 %199, 1
  %212 = sext i32 %211 to i64
  %213 = add i64 %198, 11
  %214 = add i64 %213, %212
  %215 = inttoptr i64 %214 to i16*
  store i16 36, i16* %215, align 2
  %216 = load i32, i32* %55, align 4
  %217 = load i32, i32* %56, align 8
  %218 = icmp eq i32 %216, %217
  br i1 %218, label %219, label %335

219:                                              ; preds = %210
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %11) #7
  br label %335

220:                                              ; preds = %188
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #7
  %221 = load i64* (%"class.v8::internal::String::Match"*, i32, i8*)**, i64* (%"class.v8::internal::String::Match"*, i32, i8*)*** %64, align 8
  %222 = getelementptr inbounds i64* (%"class.v8::internal::String::Match"*, i32, i8*)*, i64* (%"class.v8::internal::String::Match"*, i32, i8*)** %221, i64 5
  %223 = load i64* (%"class.v8::internal::String::Match"*, i32, i8*)*, i64* (%"class.v8::internal::String::Match"*, i32, i8*)** %222, align 8
  %224 = call i64* %223(%"class.v8::internal::String::Match"* %1, i32 %190, i8* nonnull %12) #7
  %225 = icmp eq i64* %224, null
  br i1 %225, label %232, label %226

226:                                              ; preds = %220
  %227 = load i8, i8* %12, align 1, !range !5
  %228 = icmp eq i8 %227, 0
  br i1 %228, label %230, label %229

229:                                              ; preds = %226
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %11, i64* nonnull %224) #7
  br label %230

230:                                              ; preds = %229, %226
  %231 = add nuw nsw i32 %189, %101
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #7
  br label %335

232:                                              ; preds = %220
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #7
  br label %353

233:                                              ; preds = %100
  %234 = load i1 (%"class.v8::internal::String::Match"*)**, i1 (%"class.v8::internal::String::Match"*)*** %52, align 8
  %235 = getelementptr inbounds i1 (%"class.v8::internal::String::Match"*)*, i1 (%"class.v8::internal::String::Match"*)** %234, i64 4
  %236 = load i1 (%"class.v8::internal::String::Match"*)*, i1 (%"class.v8::internal::String::Match"*)** %235, align 8
  %237 = call zeroext i1 %236(%"class.v8::internal::String::Match"* %1) #7
  br i1 %237, label %264, label %238

238:                                              ; preds = %233
  %239 = load i32, i32* %53, align 8
  %240 = icmp eq i32 %239, 0
  %241 = load i64*, i64** %54, align 8
  %242 = load i64, i64* %241, align 8
  %243 = load i32, i32* %55, align 4
  %244 = add nsw i32 %243, 1
  store i32 %244, i32* %55, align 4
  br i1 %240, label %245, label %254

245:                                              ; preds = %238
  %246 = sext i32 %243 to i64
  %247 = add i64 %242, 11
  %248 = add i64 %247, %246
  %249 = inttoptr i64 %248 to i8*
  store i8 36, i8* %249, align 1
  %250 = load i32, i32* %55, align 4
  %251 = load i32, i32* %56, align 8
  %252 = icmp eq i32 %250, %251
  br i1 %252, label %253, label %335

253:                                              ; preds = %245
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %11) #7
  br label %335

254:                                              ; preds = %238
  %255 = shl nsw i32 %243, 1
  %256 = sext i32 %255 to i64
  %257 = add i64 %242, 11
  %258 = add i64 %257, %256
  %259 = inttoptr i64 %258 to i16*
  store i16 36, i16* %259, align 2
  %260 = load i32, i32* %55, align 4
  %261 = load i32, i32* %56, align 8
  %262 = icmp eq i32 %260, %261
  br i1 %262, label %263, label %335

263:                                              ; preds = %254
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %11) #7
  br label %335

264:                                              ; preds = %233
  %265 = call i64* @_ZN2v88internal7Factory35LookupSingleCharacterStringFromCodeEt(%"class.v8::internal::Factory"* %14, i16 zeroext 62) #7
  %266 = add nuw nsw i32 %102, 2
  %267 = call i32 @_ZN2v88internal6String7IndexOfEPNS0_7IsolateENS0_6HandleIS1_EES5_i(%"class.v8::internal::Isolate"* %0, i64* %24, i64* %265, i32 %266)
  %268 = icmp eq i32 %267, -1
  br i1 %268, label %269, label %295

269:                                              ; preds = %264
  %270 = load i32, i32* %53, align 8
  %271 = icmp eq i32 %270, 0
  %272 = load i64*, i64** %54, align 8
  %273 = load i64, i64* %272, align 8
  %274 = load i32, i32* %55, align 4
  %275 = add nsw i32 %274, 1
  store i32 %275, i32* %55, align 4
  br i1 %271, label %276, label %285

276:                                              ; preds = %269
  %277 = sext i32 %274 to i64
  %278 = add i64 %273, 11
  %279 = add i64 %278, %277
  %280 = inttoptr i64 %279 to i8*
  store i8 36, i8* %280, align 1
  %281 = load i32, i32* %55, align 4
  %282 = load i32, i32* %56, align 8
  %283 = icmp eq i32 %281, %282
  br i1 %283, label %284, label %335

284:                                              ; preds = %276
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %11) #7
  br label %335

285:                                              ; preds = %269
  %286 = shl nsw i32 %274, 1
  %287 = sext i32 %286 to i64
  %288 = add i64 %273, 11
  %289 = add i64 %288, %287
  %290 = inttoptr i64 %289 to i16*
  store i16 36, i16* %290, align 2
  %291 = load i32, i32* %55, align 4
  %292 = load i32, i32* %56, align 8
  %293 = icmp eq i32 %291, %292
  br i1 %293, label %294, label %335

294:                                              ; preds = %285
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %11) #7
  br label %335

295:                                              ; preds = %264
  %296 = call i64* @_ZN2v88internal7Factory18NewProperSubStringENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::Factory"* %14, i64* %24, i32 %266, i32 %267) #7
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %57) #7
  %297 = load i64* (%"class.v8::internal::String::Match"*, i64*, i32*)**, i64* (%"class.v8::internal::String::Match"*, i64*, i32*)*** %58, align 8
  %298 = getelementptr inbounds i64* (%"class.v8::internal::String::Match"*, i64*, i32*)*, i64* (%"class.v8::internal::String::Match"*, i64*, i32*)** %297, i64 6
  %299 = load i64* (%"class.v8::internal::String::Match"*, i64*, i32*)*, i64* (%"class.v8::internal::String::Match"*, i64*, i32*)** %298, align 8
  %300 = call i64* %299(%"class.v8::internal::String::Match"* %1, i64* %296, i32* nonnull %13) #7
  %301 = icmp eq i64* %300, null
  br i1 %301, label %308, label %302

302:                                              ; preds = %295
  %303 = load i32, i32* %13, align 4
  %304 = icmp eq i32 %303, 1
  br i1 %304, label %305, label %306

305:                                              ; preds = %302
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %11, i64* nonnull %300) #7
  br label %306

306:                                              ; preds = %302, %305
  %307 = add nuw nsw i32 %267, 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %57) #7
  br label %335

308:                                              ; preds = %295
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %57) #7
  br label %353

309:                                              ; preds = %100
  %310 = load i32, i32* %53, align 8
  %311 = icmp eq i32 %310, 0
  %312 = load i64*, i64** %54, align 8
  %313 = load i64, i64* %312, align 8
  %314 = load i32, i32* %55, align 4
  %315 = add nsw i32 %314, 1
  store i32 %315, i32* %55, align 4
  br i1 %311, label %316, label %325

316:                                              ; preds = %309
  %317 = sext i32 %314 to i64
  %318 = add i64 %313, 11
  %319 = add i64 %318, %317
  %320 = inttoptr i64 %319 to i8*
  store i8 36, i8* %320, align 1
  %321 = load i32, i32* %55, align 4
  %322 = load i32, i32* %56, align 8
  %323 = icmp eq i32 %321, %322
  br i1 %323, label %324, label %335

324:                                              ; preds = %316
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %11) #7
  br label %335

325:                                              ; preds = %309
  %326 = shl nsw i32 %314, 1
  %327 = sext i32 %326 to i64
  %328 = add i64 %313, 11
  %329 = add i64 %328, %327
  %330 = inttoptr i64 %329 to i16*
  store i16 36, i16* %330, align 2
  %331 = load i32, i32* %55, align 4
  %332 = load i32, i32* %56, align 8
  %333 = icmp eq i32 %331, %332
  br i1 %333, label %334, label %335

334:                                              ; preds = %325
  call void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %11) #7
  br label %335

335:                                              ; preds = %294, %285, %284, %276, %219, %210, %209, %201, %334, %325, %324, %316, %306, %263, %254, %253, %245, %230, %154, %148, %143, %141
  %336 = phi i32 [ %159, %154 ], [ %153, %148 ], [ %147, %143 ], [ %142, %141 ], [ %231, %230 ], [ %101, %245 ], [ %101, %253 ], [ %101, %254 ], [ %101, %263 ], [ %307, %306 ], [ %101, %316 ], [ %101, %324 ], [ %101, %325 ], [ %101, %334 ], [ %101, %201 ], [ %101, %209 ], [ %101, %210 ], [ %101, %219 ], [ %101, %276 ], [ %101, %284 ], [ %101, %285 ], [ %101, %294 ]
  %337 = call i32 @_ZN2v88internal6String7IndexOfEPNS0_7IsolateENS0_6HandleIS1_EES5_i(%"class.v8::internal::Isolate"* %0, i64* %24, i64* %25, i32 %336)
  %338 = icmp slt i32 %337, 0
  br i1 %338, label %339, label %346

339:                                              ; preds = %335
  %340 = icmp slt i32 %336, %18
  br i1 %340, label %341, label %343

341:                                              ; preds = %339
  %342 = call i64* @_ZN2v88internal7Factory18NewProperSubStringENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::Factory"* %14, i64* %24, i32 %336, i32 %18) #7
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %11, i64* %342) #7
  br label %343

343:                                              ; preds = %341, %339
  %344 = call i64* @_ZN2v88internal24IncrementalStringBuilder6FinishEv(%"class.v8::internal::IncrementalStringBuilder"* nonnull %11) #7
  %345 = ptrtoint i64* %344 to i64
  br label %353

346:                                              ; preds = %335
  %347 = icmp sgt i32 %337, %336
  br i1 %347, label %348, label %350

348:                                              ; preds = %346
  %349 = call i64* @_ZN2v88internal7Factory18NewProperSubStringENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::Factory"* %14, i64* %24, i32 %336, i32 %337) #7
  call void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"* nonnull %11, i64* %349) #7
  br label %350

350:                                              ; preds = %348, %346
  %351 = add nuw nsw i32 %337, 1
  %352 = icmp slt i32 %351, %18
  br i1 %352, label %100, label %66

353:                                              ; preds = %97, %343, %308, %232
  %354 = phi i64 [ %99, %97 ], [ 0, %232 ], [ 0, %308 ], [ %345, %343 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %31) #7
  br label %355

355:                                              ; preds = %353, %28
  %356 = phi i64 [ %29, %28 ], [ %354, %353 ]
  %357 = inttoptr i64 %356 to i64*
  ret i64* %357
}

declare i64* @_ZN2v88internal7Factory35LookupSingleCharacterStringFromCodeEt(%"class.v8::internal::Factory"*, i16 zeroext) local_unnamed_addr #3

declare void @_ZN2v88internal24IncrementalStringBuilderC1EPNS0_7IsolateE(%"class.v8::internal::IncrementalStringBuilder"*, %"class.v8::internal::Isolate"*) unnamed_addr #3

declare void @_ZN2v88internal24IncrementalStringBuilder12AppendStringENS0_6HandleINS0_6StringEEE(%"class.v8::internal::IncrementalStringBuilder"*, i64*) local_unnamed_addr #3

declare i64* @_ZN2v88internal24IncrementalStringBuilder6FinishEv(%"class.v8::internal::IncrementalStringBuilder"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal6String11LastIndexOfEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_S6_(%"class.v8::internal::Isolate"*, i64*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::Vector.1134", align 8
  %6 = alloca %"class.v8::internal::CombinationAssertScope", align 1
  %7 = alloca %"class.v8::internal::String::FlatContent", align 8
  %8 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %9 = alloca %"class.v8::internal::String::FlatContent", align 8
  %10 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %11 = load i64, i64* %1, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 6
  %13 = load i64, i64* %12, align 8
  %14 = trunc i64 %11 to i32
  %15 = trunc i64 %13 to i32
  %16 = icmp eq i32 %14, %15
  br i1 %16, label %22, label %17

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 4
  %19 = load i64, i64* %18, align 8
  %20 = trunc i64 %19 to i32
  %21 = icmp eq i32 %14, %20
  br i1 %21, label %22, label %34

22:                                               ; preds = %4, %17
  %23 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %24 = bitcast %"class.v8::internal::Vector.1134"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #7
  %25 = getelementptr inbounds %"class.v8::internal::Vector.1134", %"class.v8::internal::Vector.1134"* %5, i64 0, i32 0
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.19, i64 0, i64 0), i8** %25, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Vector.1134", %"class.v8::internal::Vector.1134"* %5, i64 0, i32 1
  store i64 28, i64* %26, align 8
  %27 = call i64* @_ZN2v88internal7Factory20NewStringFromOneByteERKNS0_6VectorIKhEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %23, %"class.v8::internal::Vector.1134"* nonnull dereferenceable(16) %5, i8 zeroext 0) #7
  %28 = icmp eq i64* %27, null
  br i1 %28, label %29, label %30, !prof !26

29:                                               ; preds = %22
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.26, i64 0, i64 0)) #18
  unreachable

30:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #7
  %31 = call i64* @_ZN2v88internal7Factory12NewTypeErrorENS0_15MessageTemplateENS0_6HandleINS0_6ObjectEEES5_S5_(%"class.v8::internal::Factory"* %23, i32 27, i64* nonnull %27, i64* null, i64* null) #7
  %32 = load i64, i64* %31, align 8
  %33 = call i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %0, i64 %32, %"class.v8::internal::MessageLocation"* null) #7
  br label %428

34:                                               ; preds = %17
  %35 = and i64 %11, 1
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %48, label %37

37:                                               ; preds = %34
  %38 = and i64 %11, -4294967296
  %39 = add i64 %11, -1
  %40 = inttoptr i64 %39 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = zext i32 %41 to i64
  %43 = or i64 %38, %42
  %44 = add i64 %43, 7
  %45 = inttoptr i64 %44 to i16*
  %46 = load atomic i16, i16* %45 monotonic, align 2
  %47 = icmp ult i16 %46, 64
  br i1 %47, label %50, label %48

48:                                               ; preds = %37, %34
  %49 = tail call i64* @_ZN2v88internal6Object15ConvertToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %1) #7
  br label %50

50:                                               ; preds = %37, %48
  %51 = phi i64* [ %49, %48 ], [ %1, %37 ]
  %52 = icmp eq i64* %51, null
  br i1 %52, label %53, label %56

53:                                               ; preds = %50
  %54 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 32
  %55 = load i64, i64* %54, align 8
  br label %428

56:                                               ; preds = %50
  %57 = load i64, i64* %2, align 8
  %58 = and i64 %57, 1
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %71, label %60

60:                                               ; preds = %56
  %61 = and i64 %57, -4294967296
  %62 = add i64 %57, -1
  %63 = inttoptr i64 %62 to i32*
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = zext i32 %64 to i64
  %66 = or i64 %61, %65
  %67 = add i64 %66, 7
  %68 = inttoptr i64 %67 to i16*
  %69 = load atomic i16, i16* %68 monotonic, align 2
  %70 = icmp ult i16 %69, 64
  br i1 %70, label %73, label %71

71:                                               ; preds = %60, %56
  %72 = tail call i64* @_ZN2v88internal6Object15ConvertToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* %2) #7
  br label %73

73:                                               ; preds = %60, %71
  %74 = phi i64* [ %72, %71 ], [ %2, %60 ]
  %75 = icmp eq i64* %74, null
  br i1 %75, label %76, label %79

76:                                               ; preds = %73
  %77 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 32
  %78 = load i64, i64* %77, align 8
  br label %428

79:                                               ; preds = %73
  %80 = load i64, i64* %3, align 8
  %81 = and i64 %80, 1
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %96, label %83

83:                                               ; preds = %79
  %84 = and i64 %80, -4294967296
  %85 = add i64 %80, -1
  %86 = inttoptr i64 %85 to i32*
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = zext i32 %87 to i64
  %89 = or i64 %84, %88
  %90 = add i64 %89, 7
  %91 = inttoptr i64 %90 to i16*
  %92 = load atomic i16, i16* %91 monotonic, align 2
  %93 = icmp eq i16 %92, 66
  br i1 %93, label %96, label %94

94:                                               ; preds = %83
  %95 = tail call i64* @_ZN2v88internal6Object24ConvertToNumberOrNumericEPNS0_7IsolateENS0_6HandleIS1_EENS1_10ConversionE(%"class.v8::internal::Isolate"* %0, i64* %3, i32 0) #7
  br label %96

96:                                               ; preds = %79, %83, %94
  %97 = phi i64* [ %95, %94 ], [ %3, %83 ], [ %3, %79 ]
  %98 = icmp eq i64* %97, null
  br i1 %98, label %99, label %102

99:                                               ; preds = %96
  %100 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 32
  %101 = load i64, i64* %100, align 8
  br label %428

102:                                              ; preds = %96
  %103 = load i64, i64* %97, align 8
  %104 = and i64 %103, 1
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %133, label %106

106:                                              ; preds = %102
  %107 = and i64 %103, -4294967296
  %108 = add i64 %103, -1
  %109 = inttoptr i64 %108 to i32*
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = zext i32 %110 to i64
  %112 = or i64 %107, %111
  %113 = add i64 %112, 7
  %114 = inttoptr i64 %113 to i16*
  %115 = load atomic i16, i16* %114 monotonic, align 2
  %116 = icmp eq i16 %115, 66
  br i1 %116, label %117, label %127

117:                                              ; preds = %106
  %118 = add i64 %103, 3
  %119 = inttoptr i64 %118 to double*
  %120 = load double, double* %119, align 1
  %121 = fcmp uno double %120, 0.000000e+00
  br i1 %121, label %122, label %127

122:                                              ; preds = %117
  %123 = load i64, i64* %51, align 8
  %124 = add i64 %123, 7
  %125 = inttoptr i64 %124 to i32*
  %126 = load i32, i32* %125, align 4
  br label %160

127:                                              ; preds = %106, %117
  %128 = tail call i64* @_ZN2v88internal6Object16ConvertToIntegerEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* nonnull %97) #7
  %129 = icmp eq i64* %128, null
  br i1 %129, label %130, label %133

130:                                              ; preds = %127
  %131 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 32
  %132 = load i64, i64* %131, align 8
  br label %428

133:                                              ; preds = %102, %127
  %134 = phi i64* [ %128, %127 ], [ %97, %102 ]
  %135 = load i64, i64* %51, align 8
  %136 = load i64, i64* %134, align 8
  %137 = and i64 %136, 1
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %144

139:                                              ; preds = %133
  %140 = trunc i64 %136 to i32
  %141 = ashr i32 %140, 1
  %142 = icmp slt i32 %140, 2
  %143 = select i1 %142, i32 0, i32 %141
  br label %153

144:                                              ; preds = %133
  %145 = add i64 %136, 3
  %146 = inttoptr i64 %145 to double*
  %147 = load double, double* %146, align 1
  %148 = fcmp ult double %147, 1.000000e+00
  br i1 %148, label %153, label %149

149:                                              ; preds = %144
  %150 = fcmp olt double %147, 0x41EFFFFFFFE00000
  %151 = select i1 %150, double %147, double 0x41EFFFFFFFE00000
  %152 = fptoui double %151 to i32
  br label %153

153:                                              ; preds = %139, %144, %149
  %154 = phi i32 [ %143, %139 ], [ 0, %144 ], [ %152, %149 ]
  %155 = add i64 %135, 7
  %156 = inttoptr i64 %155 to i32*
  %157 = load i32, i32* %156, align 4
  %158 = icmp ugt i32 %154, %157
  %159 = select i1 %158, i32 %157, i32 %154
  br label %160

160:                                              ; preds = %153, %122
  %161 = phi i32 [ %126, %122 ], [ %157, %153 ]
  %162 = phi i32 [ %126, %122 ], [ %159, %153 ]
  %163 = load i64, i64* %74, align 8
  %164 = add i64 %163, 7
  %165 = inttoptr i64 %164 to i32*
  %166 = load i32, i32* %165, align 4
  %167 = add i32 %166, %162
  %168 = icmp ugt i32 %167, %161
  %169 = sub i32 %161, %166
  %170 = select i1 %168, i32 %169, i32 %162
  %171 = icmp eq i32 %166, 0
  br i1 %171, label %172, label %175

172:                                              ; preds = %160
  %173 = sext i32 %170 to i64
  %174 = shl nsw i64 %173, 1
  br label %428

175:                                              ; preds = %160
  %176 = tail call i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %0, i64* nonnull %51, i8 zeroext 0)
  %177 = tail call i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %0, i64* nonnull %74, i8 zeroext 0)
  %178 = getelementptr inbounds %"class.v8::internal::CombinationAssertScope", %"class.v8::internal::CombinationAssertScope"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %178) #7
  %179 = bitcast %"class.v8::internal::String::FlatContent"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %179) #7
  %180 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %180) #7
  %181 = load i64, i64* %176, align 8
  %182 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %181, i64* %182, align 8
  %183 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %8, i64 0, i32 0
  call void @_ZN2v88internal6String14GetFlatContentERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENS3_ILS4_1ELb0EEEEEE(%"class.v8::internal::String::FlatContent"* nonnull sret %7, %"class.v8::internal::String"* nonnull %183, %"class.v8::internal::CombinationAssertScope"* nonnull dereferenceable(1) %6)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %180) #7
  %184 = bitcast %"class.v8::internal::String::FlatContent"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %184) #7
  %185 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #7
  %186 = load i64, i64* %177, align 8
  %187 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %186, i64* %187, align 8
  %188 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %10, i64 0, i32 0
  call void @_ZN2v88internal6String14GetFlatContentERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENS3_ILS4_1ELb0EEEEEE(%"class.v8::internal::String::FlatContent"* nonnull sret %9, %"class.v8::internal::String"* nonnull %188, %"class.v8::internal::CombinationAssertScope"* nonnull dereferenceable(1) %6)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #7
  %189 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %9, i64 0, i32 2
  %190 = load i32, i32* %189, align 4
  %191 = icmp eq i32 %190, 1
  br i1 %191, label %192, label %302

192:                                              ; preds = %175
  %193 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %9, i64 0, i32 0, i32 0
  %194 = load i8*, i8** %193, align 8
  %195 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %9, i64 0, i32 1
  %196 = load i32, i32* %195, align 8
  %197 = sext i32 %196 to i64
  %198 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %7, i64 0, i32 2
  %199 = load i32, i32* %198, align 4
  %200 = icmp eq i32 %199, 1
  br i1 %200, label %201, label %249

201:                                              ; preds = %192
  %202 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %7, i64 0, i32 0, i32 0
  %203 = load i8*, i8** %202, align 8
  %204 = load i8, i8* %194, align 1
  %205 = icmp sgt i32 %170, -1
  br i1 %205, label %206, label %424

206:                                              ; preds = %201
  %207 = icmp sgt i32 %196, 1
  br i1 %207, label %212, label %208

208:                                              ; preds = %206
  %209 = icmp eq i32 %196, 1
  br i1 %209, label %210, label %424

210:                                              ; preds = %208
  %211 = sext i32 %170 to i64
  br label %241

212:                                              ; preds = %206
  %213 = sext i32 %170 to i64
  %214 = and i64 %197, 4294967295
  br label %215

215:                                              ; preds = %234, %212
  %216 = phi i64 [ %213, %212 ], [ %235, %234 ]
  %217 = getelementptr inbounds i8, i8* %203, i64 %216
  %218 = load i8, i8* %217, align 1
  %219 = icmp eq i8 %218, %204
  br i1 %219, label %220, label %234

220:                                              ; preds = %215, %237
  %221 = phi i64 [ %238, %237 ], [ 1, %215 ]
  %222 = phi i32 [ %239, %237 ], [ 1, %215 ]
  %223 = getelementptr inbounds i8, i8* %194, i64 %221
  %224 = load i8, i8* %223, align 1
  %225 = add nsw i64 %221, %216
  %226 = getelementptr inbounds i8, i8* %203, i64 %225
  %227 = load i8, i8* %226, align 1
  %228 = icmp eq i8 %224, %227
  br i1 %228, label %237, label %229

229:                                              ; preds = %220
  %230 = trunc i64 %221 to i32
  br label %231

231:                                              ; preds = %237, %229
  %232 = phi i32 [ %230, %229 ], [ %239, %237 ]
  %233 = icmp eq i32 %232, %196
  br i1 %233, label %424, label %234

234:                                              ; preds = %231, %215
  %235 = add nsw i64 %216, -1
  %236 = icmp sgt i64 %216, 0
  br i1 %236, label %215, label %424

237:                                              ; preds = %220
  %238 = add nuw nsw i64 %221, 1
  %239 = add nuw nsw i32 %222, 1
  %240 = icmp eq i64 %238, %214
  br i1 %240, label %231, label %220

241:                                              ; preds = %210, %246
  %242 = phi i64 [ %247, %246 ], [ %211, %210 ]
  %243 = getelementptr inbounds i8, i8* %203, i64 %242
  %244 = load i8, i8* %243, align 1
  %245 = icmp eq i8 %244, %204
  br i1 %245, label %424, label %246

246:                                              ; preds = %241
  %247 = add nsw i64 %242, -1
  %248 = icmp sgt i64 %242, 0
  br i1 %248, label %241, label %424

249:                                              ; preds = %192
  %250 = bitcast %"class.v8::internal::String::FlatContent"* %7 to i16**
  %251 = load i16*, i16** %250, align 8
  %252 = icmp sgt i32 %170, -1
  br i1 %252, label %253, label %424

253:                                              ; preds = %249
  %254 = load i8, i8* %194, align 1
  %255 = zext i8 %254 to i32
  %256 = icmp sgt i32 %196, 1
  br i1 %256, label %261, label %257

257:                                              ; preds = %253
  %258 = icmp eq i32 %196, 1
  br i1 %258, label %259, label %424

259:                                              ; preds = %257
  %260 = sext i32 %170 to i64
  br label %293

261:                                              ; preds = %253
  %262 = sext i32 %170 to i64
  %263 = and i64 %197, 4294967295
  br label %264

264:                                              ; preds = %286, %261
  %265 = phi i64 [ %262, %261 ], [ %287, %286 ]
  %266 = getelementptr inbounds i16, i16* %251, i64 %265
  %267 = load i16, i16* %266, align 2
  %268 = zext i16 %267 to i32
  %269 = icmp eq i32 %268, %255
  br i1 %269, label %270, label %286

270:                                              ; preds = %264, %289
  %271 = phi i64 [ %290, %289 ], [ 1, %264 ]
  %272 = phi i32 [ %291, %289 ], [ 1, %264 ]
  %273 = getelementptr inbounds i8, i8* %194, i64 %271
  %274 = load i8, i8* %273, align 1
  %275 = zext i8 %274 to i32
  %276 = add nsw i64 %271, %265
  %277 = getelementptr inbounds i16, i16* %251, i64 %276
  %278 = load i16, i16* %277, align 2
  %279 = zext i16 %278 to i32
  %280 = icmp eq i32 %275, %279
  br i1 %280, label %289, label %281

281:                                              ; preds = %270
  %282 = trunc i64 %271 to i32
  br label %283

283:                                              ; preds = %289, %281
  %284 = phi i32 [ %282, %281 ], [ %291, %289 ]
  %285 = icmp eq i32 %284, %196
  br i1 %285, label %424, label %286

286:                                              ; preds = %283, %264
  %287 = add nsw i64 %265, -1
  %288 = icmp sgt i64 %265, 0
  br i1 %288, label %264, label %424

289:                                              ; preds = %270
  %290 = add nuw nsw i64 %271, 1
  %291 = add nuw nsw i32 %272, 1
  %292 = icmp eq i64 %290, %263
  br i1 %292, label %283, label %270

293:                                              ; preds = %259, %299
  %294 = phi i64 [ %300, %299 ], [ %260, %259 ]
  %295 = getelementptr inbounds i16, i16* %251, i64 %294
  %296 = load i16, i16* %295, align 2
  %297 = zext i16 %296 to i32
  %298 = icmp eq i32 %297, %255
  br i1 %298, label %424, label %299

299:                                              ; preds = %293
  %300 = add nsw i64 %294, -1
  %301 = icmp sgt i64 %294, 0
  br i1 %301, label %293, label %424

302:                                              ; preds = %175
  %303 = bitcast %"class.v8::internal::String::FlatContent"* %9 to i16**
  %304 = load i16*, i16** %303, align 8
  %305 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %9, i64 0, i32 1
  %306 = load i32, i32* %305, align 8
  %307 = sext i32 %306 to i64
  %308 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %7, i64 0, i32 2
  %309 = load i32, i32* %308, align 4
  %310 = icmp eq i32 %309, 1
  br i1 %310, label %311, label %376

311:                                              ; preds = %302
  %312 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %7, i64 0, i32 0, i32 0
  %313 = load i8*, i8** %312, align 8
  %314 = icmp sgt i32 %306, 0
  br i1 %314, label %315, label %325

315:                                              ; preds = %311
  %316 = and i64 %307, 4294967295
  br label %319

317:                                              ; preds = %319
  %318 = icmp eq i64 %324, %316
  br i1 %318, label %325, label %319

319:                                              ; preds = %317, %315
  %320 = phi i64 [ 0, %315 ], [ %324, %317 ]
  %321 = getelementptr inbounds i16, i16* %304, i64 %320
  %322 = load i16, i16* %321, align 2
  %323 = icmp ult i16 %322, 256
  %324 = add nuw nsw i64 %320, 1
  br i1 %323, label %317, label %424

325:                                              ; preds = %317, %311
  %326 = icmp sgt i32 %170, -1
  br i1 %326, label %327, label %424

327:                                              ; preds = %325
  %328 = load i16, i16* %304, align 2
  %329 = zext i16 %328 to i32
  %330 = icmp sgt i32 %306, 1
  br i1 %330, label %335, label %331

331:                                              ; preds = %327
  %332 = icmp eq i32 %306, 1
  br i1 %332, label %333, label %424

333:                                              ; preds = %331
  %334 = sext i32 %170 to i64
  br label %367

335:                                              ; preds = %327
  %336 = sext i32 %170 to i64
  %337 = and i64 %307, 4294967295
  br label %338

338:                                              ; preds = %360, %335
  %339 = phi i64 [ %336, %335 ], [ %361, %360 ]
  %340 = getelementptr inbounds i8, i8* %313, i64 %339
  %341 = load i8, i8* %340, align 1
  %342 = zext i8 %341 to i32
  %343 = icmp eq i32 %342, %329
  br i1 %343, label %344, label %360

344:                                              ; preds = %338, %363
  %345 = phi i64 [ %364, %363 ], [ 1, %338 ]
  %346 = phi i32 [ %365, %363 ], [ 1, %338 ]
  %347 = getelementptr inbounds i16, i16* %304, i64 %345
  %348 = load i16, i16* %347, align 2
  %349 = zext i16 %348 to i32
  %350 = add nsw i64 %345, %339
  %351 = getelementptr inbounds i8, i8* %313, i64 %350
  %352 = load i8, i8* %351, align 1
  %353 = zext i8 %352 to i32
  %354 = icmp eq i32 %349, %353
  br i1 %354, label %363, label %355

355:                                              ; preds = %344
  %356 = trunc i64 %345 to i32
  br label %357

357:                                              ; preds = %363, %355
  %358 = phi i32 [ %356, %355 ], [ %365, %363 ]
  %359 = icmp eq i32 %358, %306
  br i1 %359, label %424, label %360

360:                                              ; preds = %357, %338
  %361 = add nsw i64 %339, -1
  %362 = icmp sgt i64 %339, 0
  br i1 %362, label %338, label %424

363:                                              ; preds = %344
  %364 = add nuw nsw i64 %345, 1
  %365 = add nuw nsw i32 %346, 1
  %366 = icmp eq i64 %364, %337
  br i1 %366, label %357, label %344

367:                                              ; preds = %333, %373
  %368 = phi i64 [ %374, %373 ], [ %334, %333 ]
  %369 = getelementptr inbounds i8, i8* %313, i64 %368
  %370 = load i8, i8* %369, align 1
  %371 = zext i8 %370 to i32
  %372 = icmp eq i32 %371, %329
  br i1 %372, label %424, label %373

373:                                              ; preds = %367
  %374 = add nsw i64 %368, -1
  %375 = icmp sgt i64 %368, 0
  br i1 %375, label %367, label %424

376:                                              ; preds = %302
  %377 = bitcast %"class.v8::internal::String::FlatContent"* %7 to i16**
  %378 = load i16*, i16** %377, align 8
  %379 = load i16, i16* %304, align 2
  %380 = icmp sgt i32 %170, -1
  br i1 %380, label %381, label %424

381:                                              ; preds = %376
  %382 = icmp sgt i32 %306, 1
  br i1 %382, label %387, label %383

383:                                              ; preds = %381
  %384 = icmp eq i32 %306, 1
  br i1 %384, label %385, label %424

385:                                              ; preds = %383
  %386 = sext i32 %170 to i64
  br label %416

387:                                              ; preds = %381
  %388 = sext i32 %170 to i64
  %389 = and i64 %307, 4294967295
  br label %390

390:                                              ; preds = %409, %387
  %391 = phi i64 [ %388, %387 ], [ %410, %409 ]
  %392 = getelementptr inbounds i16, i16* %378, i64 %391
  %393 = load i16, i16* %392, align 2
  %394 = icmp eq i16 %393, %379
  br i1 %394, label %395, label %409

395:                                              ; preds = %390, %412
  %396 = phi i64 [ %413, %412 ], [ 1, %390 ]
  %397 = phi i32 [ %414, %412 ], [ 1, %390 ]
  %398 = getelementptr inbounds i16, i16* %304, i64 %396
  %399 = load i16, i16* %398, align 2
  %400 = add nsw i64 %396, %391
  %401 = getelementptr inbounds i16, i16* %378, i64 %400
  %402 = load i16, i16* %401, align 2
  %403 = icmp eq i16 %399, %402
  br i1 %403, label %412, label %404

404:                                              ; preds = %395
  %405 = trunc i64 %396 to i32
  br label %406

406:                                              ; preds = %412, %404
  %407 = phi i32 [ %405, %404 ], [ %414, %412 ]
  %408 = icmp eq i32 %407, %306
  br i1 %408, label %424, label %409

409:                                              ; preds = %406, %390
  %410 = add nsw i64 %391, -1
  %411 = icmp sgt i64 %391, 0
  br i1 %411, label %390, label %424

412:                                              ; preds = %395
  %413 = add nuw nsw i64 %396, 1
  %414 = add nuw nsw i32 %397, 1
  %415 = icmp eq i64 %413, %389
  br i1 %415, label %406, label %395

416:                                              ; preds = %385, %421
  %417 = phi i64 [ %422, %421 ], [ %386, %385 ]
  %418 = getelementptr inbounds i16, i16* %378, i64 %417
  %419 = load i16, i16* %418, align 2
  %420 = icmp eq i16 %419, %379
  br i1 %420, label %424, label %421

421:                                              ; preds = %416
  %422 = add nsw i64 %417, -1
  %423 = icmp sgt i64 %417, 0
  br i1 %423, label %416, label %424

424:                                              ; preds = %416, %421, %406, %409, %319, %367, %373, %357, %360, %293, %299, %283, %286, %241, %246, %231, %234, %383, %331, %257, %208, %376, %325, %249, %201
  %425 = phi i64 [ -1, %201 ], [ -1, %249 ], [ -1, %325 ], [ -1, %376 ], [ -1, %208 ], [ -1, %257 ], [ -1, %331 ], [ -1, %383 ], [ %216, %231 ], [ -1, %234 ], [ -1, %246 ], [ %242, %241 ], [ %265, %283 ], [ -1, %286 ], [ -1, %299 ], [ %294, %293 ], [ %339, %357 ], [ -1, %360 ], [ -1, %373 ], [ %368, %367 ], [ -1, %319 ], [ %391, %406 ], [ -1, %409 ], [ -1, %421 ], [ %417, %416 ]
  %426 = shl i64 %425, 32
  %427 = ashr exact i64 %426, 31
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %184) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %179) #7
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %178) #7
  br label %428

428:                                              ; preds = %53, %130, %99, %76, %424, %172, %30
  %429 = phi i64 [ %33, %30 ], [ %55, %53 ], [ %101, %99 ], [ %78, %76 ], [ %132, %130 ], [ %174, %172 ], [ %427, %424 ]
  ret i64 %429
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal6String16HasOneBytePrefixENS0_6VectorIKcEE(%"class.v8::internal::String"* nocapture readonly, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::SharedStringAccessGuardIfNeeded", align 8
  %5 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, -4294967296
  %8 = getelementptr inbounds %"class.v8::internal::SharedStringAccessGuardIfNeeded", %"class.v8::internal::SharedStringAccessGuardIfNeeded"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false) #7, !alias.scope !34
  %9 = add i64 %6, 7
  %10 = inttoptr i64 %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = sext i32 %11 to i64
  %13 = icmp ult i64 %12, %2
  br i1 %13, label %162, label %14

14:                                               ; preds = %3, %148
  %15 = phi i64 [ %154, %148 ], [ %6, %3 ]
  %16 = phi i32 [ %149, %148 ], [ 0, %3 ]
  %17 = add i64 %15, -1
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = zext i32 %19 to i64
  %21 = or i64 %7, %20
  %22 = add i64 %21, 7
  %23 = inttoptr i64 %22 to i16*
  %24 = load atomic i16, i16* %23 monotonic, align 2
  %25 = and i16 %24, 15
  %26 = zext i16 %25 to i32
  switch i32 %26, label %147 [
    i32 8, label %27
    i32 0, label %34
    i32 10, label %53
    i32 2, label %91
    i32 11, label %141
    i32 3, label %141
    i32 9, label %155
    i32 1, label %155
    i32 13, label %148
    i32 5, label %148
  ]

27:                                               ; preds = %14
  %28 = add i64 %15, 11
  %29 = inttoptr i64 %28 to i8*
  %30 = sext i32 %16 to i64
  %31 = getelementptr inbounds i8, i8* %29, i64 %30
  %32 = tail call i32 @bcmp(i8* %31, i8* %1, i64 %2) #7
  %33 = icmp eq i32 %32, 0
  br label %162

34:                                               ; preds = %14
  %35 = add i64 %15, 11
  %36 = inttoptr i64 %35 to i16*
  %37 = sext i32 %16 to i64
  %38 = getelementptr inbounds i16, i16* %36, i64 %37
  %39 = getelementptr inbounds i16, i16* %38, i64 %2
  %40 = icmp sgt i64 %2, 0
  br i1 %40, label %41, label %162

41:                                               ; preds = %34, %49
  %42 = phi i16* [ %50, %49 ], [ %38, %34 ]
  %43 = phi i8* [ %51, %49 ], [ %1, %34 ]
  %44 = load i16, i16* %42, align 2
  %45 = zext i16 %44 to i32
  %46 = load i8, i8* %43, align 1
  %47 = zext i8 %46 to i32
  %48 = icmp eq i32 %45, %47
  br i1 %48, label %49, label %162

49:                                               ; preds = %41
  %50 = getelementptr inbounds i16, i16* %42, i64 1
  %51 = getelementptr inbounds i8, i8* %43, i64 1
  %52 = icmp ult i16* %50, %39
  br i1 %52, label %41, label %162

53:                                               ; preds = %14
  %54 = inttoptr i64 %17 to i32*
  %55 = and i64 %15, -4294967296
  %56 = load atomic i32, i32* %54 monotonic, align 4
  %57 = zext i32 %56 to i64
  %58 = or i64 %55, %57
  %59 = add i64 %58, 7
  %60 = inttoptr i64 %59 to i16*
  %61 = load atomic i16, i16* %60 monotonic, align 2
  %62 = and i16 %61, 16
  %63 = icmp eq i16 %62, 0
  %64 = add i64 %15, 11
  %65 = inttoptr i64 %64 to %"class.v8::String::ExternalOneByteStringResource"**
  br i1 %63, label %78, label %66

66:                                               ; preds = %53
  %67 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %65, align 1
  %68 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %67, i64 0, i32 0
  %69 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %67 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %70 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %69, align 8
  %71 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %70, i64 2
  %72 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %71, align 8
  %73 = tail call zeroext i1 %72(%"class.v8::String::ExternalStringResourceBase"* %68) #7
  br i1 %73, label %74, label %78

74:                                               ; preds = %66
  %75 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %65, align 1
  tail call void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"* %75) #7
  %76 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %75, i64 0, i32 1
  %77 = load i8*, i8** %76, align 8
  br label %85

78:                                               ; preds = %66, %53
  %79 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %65, align 1
  %80 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %79 to i8* (%"class.v8::String::ExternalOneByteStringResource"*)***
  %81 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)**, i8* (%"class.v8::String::ExternalOneByteStringResource"*)*** %80, align 8
  %82 = getelementptr inbounds i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %81, i64 6
  %83 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %82, align 8
  %84 = tail call i8* %83(%"class.v8::String::ExternalOneByteStringResource"* %79) #7
  br label %85

85:                                               ; preds = %78, %74
  %86 = phi i8* [ %77, %74 ], [ %84, %78 ]
  %87 = sext i32 %16 to i64
  %88 = getelementptr inbounds i8, i8* %86, i64 %87
  %89 = tail call i32 @bcmp(i8* %88, i8* %1, i64 %2) #7
  %90 = icmp eq i32 %89, 0
  br label %162

91:                                               ; preds = %14
  %92 = inttoptr i64 %17 to i32*
  %93 = and i64 %15, -4294967296
  %94 = load atomic i32, i32* %92 monotonic, align 4
  %95 = zext i32 %94 to i64
  %96 = or i64 %93, %95
  %97 = add i64 %96, 7
  %98 = inttoptr i64 %97 to i16*
  %99 = load atomic i16, i16* %98 monotonic, align 2
  %100 = and i16 %99, 16
  %101 = icmp eq i16 %100, 0
  %102 = add i64 %15, 11
  %103 = inttoptr i64 %102 to %"class.v8::String::ExternalStringResource"**
  br i1 %101, label %116, label %104

104:                                              ; preds = %91
  %105 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %103, align 1
  %106 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %105, i64 0, i32 0
  %107 = bitcast %"class.v8::String::ExternalStringResource"* %105 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %108 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %107, align 8
  %109 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %108, i64 2
  %110 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %109, align 8
  %111 = tail call zeroext i1 %110(%"class.v8::String::ExternalStringResourceBase"* %106) #7
  br i1 %111, label %112, label %116

112:                                              ; preds = %104
  %113 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %103, align 1
  tail call void @_ZNK2v86String22ExternalStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalStringResource"* %113) #7
  %114 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %113, i64 0, i32 1
  %115 = load i16*, i16** %114, align 8
  br label %123

116:                                              ; preds = %104, %91
  %117 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %103, align 1
  %118 = bitcast %"class.v8::String::ExternalStringResource"* %117 to i16* (%"class.v8::String::ExternalStringResource"*)***
  %119 = load i16* (%"class.v8::String::ExternalStringResource"*)**, i16* (%"class.v8::String::ExternalStringResource"*)*** %118, align 8
  %120 = getelementptr inbounds i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %119, i64 6
  %121 = load i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %120, align 8
  %122 = tail call i16* %121(%"class.v8::String::ExternalStringResource"* %117) #7
  br label %123

123:                                              ; preds = %116, %112
  %124 = phi i16* [ %115, %112 ], [ %122, %116 ]
  %125 = sext i32 %16 to i64
  %126 = getelementptr inbounds i16, i16* %124, i64 %125
  %127 = getelementptr inbounds i16, i16* %126, i64 %2
  %128 = icmp sgt i64 %2, 0
  br i1 %128, label %129, label %162

129:                                              ; preds = %123, %137
  %130 = phi i16* [ %138, %137 ], [ %126, %123 ]
  %131 = phi i8* [ %139, %137 ], [ %1, %123 ]
  %132 = load i16, i16* %130, align 2
  %133 = zext i16 %132 to i32
  %134 = load i8, i8* %131, align 1
  %135 = zext i8 %134 to i32
  %136 = icmp eq i32 %133, %135
  br i1 %136, label %137, label %162

137:                                              ; preds = %129
  %138 = getelementptr inbounds i16, i16* %130, i64 1
  %139 = getelementptr inbounds i8, i8* %131, i64 1
  %140 = icmp ult i16* %138, %127
  br i1 %140, label %129, label %162

141:                                              ; preds = %14, %14
  %142 = add i64 %15, 15
  %143 = inttoptr i64 %142 to i32*
  %144 = load i32, i32* %143, align 4
  %145 = ashr i32 %144, 1
  %146 = add nsw i32 %145, %16
  br label %148

147:                                              ; preds = %14
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24, i64 0, i64 0)) #18
  unreachable

148:                                              ; preds = %141, %14, %14
  %149 = phi i32 [ %146, %141 ], [ %16, %14 ], [ %16, %14 ]
  %150 = add i64 %15, 11
  %151 = inttoptr i64 %150 to i32*
  %152 = load i32, i32* %151, align 4
  %153 = zext i32 %152 to i64
  %154 = or i64 %7, %153
  br label %14

155:                                              ; preds = %14, %14
  %156 = call zeroext i1 @_ZN2v88internal6String23IsConsStringEqualToImplIcEEbNS0_10ConsStringEiNS0_6VectorIKT_EENS0_16PtrComprCageBaseERKNS0_31SharedStringAccessGuardIfNeededE(i64 %15, i32 %16, i8* %1, i64 %2, i64 %7, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* nonnull dereferenceable(16) %4) #7
  %157 = load i8, i8* %8, align 8, !range !5
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %162, label %159

159:                                              ; preds = %155
  %160 = getelementptr inbounds %"class.v8::internal::SharedStringAccessGuardIfNeeded", %"class.v8::internal::SharedStringAccessGuardIfNeeded"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %161 = load %"class.v8::base::SharedMutex"*, %"class.v8::base::SharedMutex"** %160, align 8
  call void @_ZN2v84base11SharedMutex12UnlockSharedEv(%"class.v8::base::SharedMutex"* %161) #7
  br label %162

162:                                              ; preds = %129, %137, %41, %49, %85, %27, %34, %123, %3, %155, %159
  %163 = phi i1 [ %156, %155 ], [ %156, %159 ], [ %90, %85 ], [ %33, %27 ], [ true, %34 ], [ true, %123 ], [ false, %3 ], [ false, %41 ], [ true, %49 ], [ false, %129 ], [ true, %137 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #7
  ret i1 %163
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal6String17ComputeAndSetHashEv(%"class.v8::internal::String"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::SharedStringAccessGuardIfNeeded", align 8
  %3 = alloca %"class.v8::internal::SharedStringAccessGuardIfNeeded", align 8
  %4 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %7 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %6, i64 0, i32 0, i32 1
  %10 = load i8, i8* %9, align 8, !range !5
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %6, i64 0, i32 1, i64 0
  br label %22

14:                                               ; preds = %8, %1
  %15 = and i64 %5, -262144
  %16 = or i64 %15, 16
  %17 = inttoptr i64 %16 to i64*
  %18 = load i64, i64* %17, align 16
  %19 = add i64 %18, -41416
  %20 = inttoptr i64 %19 to %"class.v8::internal::Isolate"*
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %20, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %22

22:                                               ; preds = %12, %14
  %23 = phi i64* [ %21, %14 ], [ %13, %12 ]
  %24 = getelementptr inbounds i64, i64* %23, i64 134
  %25 = load i64, i64* %24, align 8
  %26 = add i64 %25, 7
  %27 = inttoptr i64 %26 to i64*
  %28 = load i64, i64* %27, align 1
  %29 = and i64 %5, -4294967296
  %30 = add i64 %5, -1
  %31 = inttoptr i64 %30 to i32*
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = zext i32 %32 to i64
  %34 = or i64 %29, %33
  %35 = add i64 %34, 7
  %36 = inttoptr i64 %35 to i16*
  %37 = load atomic i16, i16* %36 monotonic, align 2
  %38 = icmp ult i16 %37, 64
  br i1 %38, label %39, label %61

39:                                               ; preds = %22
  %40 = load atomic i32, i32* %31 monotonic, align 4
  %41 = zext i32 %40 to i64
  %42 = or i64 %29, %41
  %43 = add i64 %42, 7
  %44 = inttoptr i64 %43 to i16*
  %45 = load atomic i16, i16* %44 monotonic, align 2
  %46 = and i16 %45, 7
  %47 = icmp eq i16 %46, 3
  br i1 %47, label %48, label %61

48:                                               ; preds = %39
  %49 = add i64 %5, 15
  %50 = inttoptr i64 %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = ashr i32 %51, 1
  %53 = sext i32 %52 to i64
  %54 = add i64 %5, 11
  %55 = inttoptr i64 %54 to i32*
  %56 = load i32, i32* %55, align 4
  %57 = zext i32 %56 to i64
  %58 = or i64 %29, %57
  %59 = add i64 %58, -1
  %60 = inttoptr i64 %59 to i32*
  br label %61

61:                                               ; preds = %22, %48, %39
  %62 = phi i32* [ %31, %22 ], [ %60, %48 ], [ %31, %39 ]
  %63 = phi i64 [ %5, %22 ], [ %58, %48 ], [ %5, %39 ]
  %64 = phi i64 [ 0, %22 ], [ %53, %48 ], [ 0, %39 ]
  %65 = load atomic i32, i32* %62 monotonic, align 4
  %66 = zext i32 %65 to i64
  %67 = or i64 %29, %66
  %68 = add i64 %67, 7
  %69 = inttoptr i64 %68 to i16*
  %70 = load atomic i16, i16* %69 monotonic, align 2
  %71 = icmp ult i16 %70, 64
  br i1 %71, label %72, label %108

72:                                               ; preds = %61
  %73 = load atomic i32, i32* %62 monotonic, align 4
  %74 = zext i32 %73 to i64
  %75 = or i64 %29, %74
  %76 = add i64 %75, 7
  %77 = inttoptr i64 %76 to i16*
  %78 = load atomic i16, i16* %77 monotonic, align 2
  %79 = and i16 %78, 7
  %80 = icmp eq i16 %79, 1
  br i1 %80, label %81, label %108

81:                                               ; preds = %72
  %82 = load atomic i32, i32* %62 acquire, align 4
  %83 = zext i32 %82 to i64
  %84 = or i64 %29, %83
  %85 = add i64 %84, 7
  %86 = inttoptr i64 %85 to i16*
  %87 = load atomic i16, i16* %86 monotonic, align 2
  %88 = and i16 %87, 7
  %89 = icmp eq i16 %88, 1
  br i1 %89, label %90, label %100

90:                                               ; preds = %81
  %91 = add i64 %63, 15
  %92 = inttoptr i64 %91 to i32*
  %93 = load i32, i32* %92, align 4
  %94 = zext i32 %93 to i64
  %95 = or i64 %29, %94
  %96 = add i64 %95, 7
  %97 = inttoptr i64 %96 to i32*
  %98 = load i32, i32* %97, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %108

100:                                              ; preds = %81, %90
  %101 = add i64 %63, 11
  %102 = inttoptr i64 %101 to i32*
  %103 = load i32, i32* %102, align 4
  %104 = zext i32 %103 to i64
  %105 = or i64 %29, %104
  %106 = add i64 %105, -1
  %107 = inttoptr i64 %106 to i32*
  br label %108

108:                                              ; preds = %61, %100, %90, %72
  %109 = phi i32* [ %62, %61 ], [ %107, %100 ], [ %62, %90 ], [ %62, %72 ]
  %110 = phi i64 [ %63, %61 ], [ %105, %100 ], [ %63, %90 ], [ %63, %72 ]
  %111 = load atomic i32, i32* %109 monotonic, align 4
  %112 = zext i32 %111 to i64
  %113 = or i64 %29, %112
  %114 = add i64 %113, 7
  %115 = inttoptr i64 %114 to i16*
  %116 = load atomic i16, i16* %115 monotonic, align 2
  %117 = icmp ult i16 %116, 64
  br i1 %117, label %118, label %154

118:                                              ; preds = %108
  %119 = load atomic i32, i32* %109 monotonic, align 4
  %120 = zext i32 %119 to i64
  %121 = or i64 %29, %120
  %122 = add i64 %121, 7
  %123 = inttoptr i64 %122 to i16*
  %124 = load atomic i16, i16* %123 monotonic, align 2
  %125 = and i16 %124, 7
  %126 = icmp eq i16 %125, 5
  br i1 %126, label %127, label %154

127:                                              ; preds = %118
  %128 = add i64 %110, 11
  %129 = inttoptr i64 %128 to i32*
  %130 = load i32, i32* %129, align 4
  %131 = zext i32 %130 to i64
  %132 = or i64 %29, %131
  %133 = load i64, i64* %4, align 8
  %134 = add i64 %133, 7
  %135 = inttoptr i64 %134 to i32*
  %136 = load i32, i32* %135, align 4
  %137 = add i64 %132, 7
  %138 = inttoptr i64 %137 to i32*
  %139 = load i32, i32* %138, align 4
  %140 = icmp eq i32 %136, %139
  br i1 %140, label %144, label %141

141:                                              ; preds = %127
  %142 = add i64 %132, -1
  %143 = inttoptr i64 %142 to i32*
  br label %154

144:                                              ; preds = %127
  %145 = add i64 %132, 3
  %146 = inttoptr i64 %145 to i32*
  %147 = load i32, i32* %146, align 4
  %148 = add i64 %133, 3
  %149 = inttoptr i64 %148 to i32*
  store i32 %147, i32* %149, align 4
  %150 = load i64, i64* %4, align 8
  %151 = add i64 %150, 3
  %152 = inttoptr i64 %151 to i32*
  %153 = load i32, i32* %152, align 4
  br label %336

154:                                              ; preds = %141, %108, %118
  %155 = phi i32* [ %143, %141 ], [ %109, %108 ], [ %109, %118 ]
  %156 = phi i64 [ %132, %141 ], [ %110, %108 ], [ %110, %118 ]
  %157 = load atomic i32, i32* %155 monotonic, align 4
  %158 = zext i32 %157 to i64
  %159 = or i64 %29, %158
  %160 = add i64 %159, 7
  %161 = inttoptr i64 %160 to i16*
  %162 = load atomic i16, i16* %161 monotonic, align 2
  %163 = and i16 %162, 8
  %164 = icmp eq i16 %163, 0
  %165 = load i64, i64* %4, align 8
  %166 = add i64 %165, 7
  %167 = inttoptr i64 %166 to i32*
  %168 = load i32, i32* %167, align 4
  %169 = icmp sgt i32 %168, 16383
  br i1 %164, label %248, label %170

170:                                              ; preds = %154
  br i1 %169, label %171, label %174

171:                                              ; preds = %170
  %172 = shl i32 %168, 2
  %173 = or i32 %172, 2
  br label %331

174:                                              ; preds = %170
  %175 = load atomic i32, i32* %155 monotonic, align 4
  %176 = zext i32 %175 to i64
  %177 = or i64 %29, %176
  %178 = add i64 %177, 7
  %179 = inttoptr i64 %178 to i16*
  %180 = load atomic i16, i16* %179 monotonic, align 2
  %181 = icmp ult i16 %180, 64
  br i1 %181, label %182, label %200

182:                                              ; preds = %174
  %183 = load atomic i32, i32* %155 monotonic, align 4
  %184 = zext i32 %183 to i64
  %185 = or i64 %29, %184
  %186 = add i64 %185, 7
  %187 = inttoptr i64 %186 to i16*
  %188 = load atomic i16, i16* %187 monotonic, align 2
  %189 = and i16 %188, 7
  %190 = icmp eq i16 %189, 1
  br i1 %190, label %191, label %200

191:                                              ; preds = %182
  %192 = sext i32 %168 to i64
  %193 = tail call i8* @_Znam(i64 %192) #19
  %194 = getelementptr inbounds %"class.v8::internal::SharedStringAccessGuardIfNeeded", %"class.v8::internal::SharedStringAccessGuardIfNeeded"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %194) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %194, i8 0, i64 16, i1 false) #7, !alias.scope !37
  call void @_ZN2v88internal6String11WriteToFlatIhEEvS1_PT_iiRKNS0_31SharedStringAccessGuardIfNeededE(i64 %156, i8* nonnull %193, i32 0, i32 %168, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* nonnull dereferenceable(16) %2) #7
  %195 = load i8, i8* %194, align 8, !range !5
  %196 = icmp eq i8 %195, 0
  br i1 %196, label %246, label %197

197:                                              ; preds = %191
  %198 = getelementptr inbounds %"class.v8::internal::SharedStringAccessGuardIfNeeded", %"class.v8::internal::SharedStringAccessGuardIfNeeded"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %199 = load %"class.v8::base::SharedMutex"*, %"class.v8::base::SharedMutex"** %198, align 8
  call void @_ZN2v84base11SharedMutex12UnlockSharedEv(%"class.v8::base::SharedMutex"* %199) #7
  br label %246

200:                                              ; preds = %182, %174
  %201 = load atomic i32, i32* %155 acquire, align 4
  %202 = zext i32 %201 to i64
  %203 = or i64 %29, %202
  %204 = add i64 %203, 7
  %205 = inttoptr i64 %204 to i16*
  %206 = load atomic i16, i16* %205 monotonic, align 2
  %207 = and i16 %206, 7
  %208 = icmp eq i16 %207, 2
  br i1 %208, label %209, label %239

209:                                              ; preds = %200
  %210 = load atomic i32, i32* %155 monotonic, align 4
  %211 = zext i32 %210 to i64
  %212 = or i64 %29, %211
  %213 = add i64 %212, 7
  %214 = inttoptr i64 %213 to i16*
  %215 = load atomic i16, i16* %214 monotonic, align 2
  %216 = and i16 %215, 16
  %217 = icmp eq i16 %216, 0
  %218 = add i64 %156, 11
  %219 = inttoptr i64 %218 to %"class.v8::String::ExternalOneByteStringResource"**
  br i1 %217, label %232, label %220

220:                                              ; preds = %209
  %221 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %219, align 1
  %222 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %221, i64 0, i32 0
  %223 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %221 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %224 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %223, align 8
  %225 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %224, i64 2
  %226 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %225, align 8
  %227 = tail call zeroext i1 %226(%"class.v8::String::ExternalStringResourceBase"* %222) #7
  br i1 %227, label %228, label %232

228:                                              ; preds = %220
  %229 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %219, align 1
  tail call void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"* %229) #7
  %230 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %229, i64 0, i32 1
  %231 = load i8*, i8** %230, align 8
  br label %242

232:                                              ; preds = %220, %209
  %233 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %219, align 1
  %234 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %233 to i8* (%"class.v8::String::ExternalOneByteStringResource"*)***
  %235 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)**, i8* (%"class.v8::String::ExternalOneByteStringResource"*)*** %234, align 8
  %236 = getelementptr inbounds i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %235, i64 6
  %237 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %236, align 8
  %238 = tail call i8* %237(%"class.v8::String::ExternalOneByteStringResource"* %233) #7
  br label %242

239:                                              ; preds = %200
  %240 = add i64 %156, 11
  %241 = inttoptr i64 %240 to i8*
  br label %242

242:                                              ; preds = %239, %232, %228
  %243 = phi i8* [ %241, %239 ], [ %231, %228 ], [ %238, %232 ]
  %244 = getelementptr inbounds i8, i8* %243, i64 %64
  %245 = tail call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* %244, i32 %168, i64 %28) #7
  br label %331

246:                                              ; preds = %197, %191
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %194) #7
  %247 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8* nonnull %193, i32 %168, i64 %28) #7
  call void @_ZdaPv(i8* nonnull %193) #19
  br label %331

248:                                              ; preds = %154
  br i1 %169, label %249, label %252

249:                                              ; preds = %248
  %250 = shl i32 %168, 2
  %251 = or i32 %250, 2
  br label %331

252:                                              ; preds = %248
  %253 = load atomic i32, i32* %155 monotonic, align 4
  %254 = zext i32 %253 to i64
  %255 = or i64 %29, %254
  %256 = add i64 %255, 7
  %257 = inttoptr i64 %256 to i16*
  %258 = load atomic i16, i16* %257 monotonic, align 2
  %259 = icmp ult i16 %258, 64
  br i1 %259, label %260, label %283

260:                                              ; preds = %252
  %261 = load atomic i32, i32* %155 monotonic, align 4
  %262 = zext i32 %261 to i64
  %263 = or i64 %29, %262
  %264 = add i64 %263, 7
  %265 = inttoptr i64 %264 to i16*
  %266 = load atomic i16, i16* %265 monotonic, align 2
  %267 = and i16 %266, 7
  %268 = icmp eq i16 %267, 1
  br i1 %268, label %269, label %283

269:                                              ; preds = %260
  %270 = sext i32 %168 to i64
  %271 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %270, i64 2) #7
  %272 = extractvalue { i64, i1 } %271, 1
  %273 = extractvalue { i64, i1 } %271, 0
  %274 = select i1 %272, i64 -1, i64 %273
  %275 = tail call i8* @_Znam(i64 %274) #19
  %276 = bitcast i8* %275 to i16*
  %277 = getelementptr inbounds %"class.v8::internal::SharedStringAccessGuardIfNeeded", %"class.v8::internal::SharedStringAccessGuardIfNeeded"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %277) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %277, i8 0, i64 16, i1 false) #7, !alias.scope !40
  call void @_ZN2v88internal6String11WriteToFlatItEEvS1_PT_iiRKNS0_31SharedStringAccessGuardIfNeededE(i64 %156, i16* nonnull %276, i32 0, i32 %168, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* nonnull dereferenceable(16) %3) #7
  %278 = load i8, i8* %277, align 8, !range !5
  %279 = icmp eq i8 %278, 0
  br i1 %279, label %329, label %280

280:                                              ; preds = %269
  %281 = getelementptr inbounds %"class.v8::internal::SharedStringAccessGuardIfNeeded", %"class.v8::internal::SharedStringAccessGuardIfNeeded"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %282 = load %"class.v8::base::SharedMutex"*, %"class.v8::base::SharedMutex"** %281, align 8
  call void @_ZN2v84base11SharedMutex12UnlockSharedEv(%"class.v8::base::SharedMutex"* %282) #7
  br label %329

283:                                              ; preds = %260, %252
  %284 = load atomic i32, i32* %155 acquire, align 4
  %285 = zext i32 %284 to i64
  %286 = or i64 %29, %285
  %287 = add i64 %286, 7
  %288 = inttoptr i64 %287 to i16*
  %289 = load atomic i16, i16* %288 monotonic, align 2
  %290 = and i16 %289, 7
  %291 = icmp eq i16 %290, 2
  br i1 %291, label %292, label %322

292:                                              ; preds = %283
  %293 = load atomic i32, i32* %155 monotonic, align 4
  %294 = zext i32 %293 to i64
  %295 = or i64 %29, %294
  %296 = add i64 %295, 7
  %297 = inttoptr i64 %296 to i16*
  %298 = load atomic i16, i16* %297 monotonic, align 2
  %299 = and i16 %298, 16
  %300 = icmp eq i16 %299, 0
  %301 = add i64 %156, 11
  %302 = inttoptr i64 %301 to %"class.v8::String::ExternalStringResource"**
  br i1 %300, label %315, label %303

303:                                              ; preds = %292
  %304 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %302, align 1
  %305 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %304, i64 0, i32 0
  %306 = bitcast %"class.v8::String::ExternalStringResource"* %304 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %307 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %306, align 8
  %308 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %307, i64 2
  %309 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %308, align 8
  %310 = tail call zeroext i1 %309(%"class.v8::String::ExternalStringResourceBase"* %305) #7
  br i1 %310, label %311, label %315

311:                                              ; preds = %303
  %312 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %302, align 1
  tail call void @_ZNK2v86String22ExternalStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalStringResource"* %312) #7
  %313 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %312, i64 0, i32 1
  %314 = load i16*, i16** %313, align 8
  br label %325

315:                                              ; preds = %303, %292
  %316 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %302, align 1
  %317 = bitcast %"class.v8::String::ExternalStringResource"* %316 to i16* (%"class.v8::String::ExternalStringResource"*)***
  %318 = load i16* (%"class.v8::String::ExternalStringResource"*)**, i16* (%"class.v8::String::ExternalStringResource"*)*** %317, align 8
  %319 = getelementptr inbounds i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %318, i64 6
  %320 = load i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %319, align 8
  %321 = tail call i16* %320(%"class.v8::String::ExternalStringResource"* %316) #7
  br label %325

322:                                              ; preds = %283
  %323 = add i64 %156, 11
  %324 = inttoptr i64 %323 to i16*
  br label %325

325:                                              ; preds = %322, %315, %311
  %326 = phi i16* [ %324, %322 ], [ %314, %311 ], [ %321, %315 ]
  %327 = getelementptr inbounds i16, i16* %326, i64 %64
  %328 = tail call i32 @_ZN2v88internal12StringHasher20HashSequentialStringItEEjPKT_im(i16* %327, i32 %168, i64 %28) #7
  br label %331

329:                                              ; preds = %280, %269
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %277) #7
  %330 = call i32 @_ZN2v88internal12StringHasher20HashSequentialStringItEEjPKT_im(i16* nonnull %276, i32 %168, i64 %28) #7
  call void @_ZdaPv(i8* nonnull %275) #19
  br label %331

331:                                              ; preds = %329, %325, %249, %246, %242, %171
  %332 = phi i32 [ %173, %171 ], [ %245, %242 ], [ %247, %246 ], [ %251, %249 ], [ %328, %325 ], [ %330, %329 ]
  %333 = load i64, i64* %4, align 8
  %334 = add i64 %333, 3
  %335 = inttoptr i64 %334 to i32*
  store i32 %332, i32* %335, align 4
  br label %336

336:                                              ; preds = %331, %144
  %337 = phi i32 [ %153, %144 ], [ %332, %331 ]
  %338 = lshr i32 %337, 2
  ret i32 %338
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal6String16SlowAsArrayIndexEPj(%"class.v8::internal::String"* nocapture readonly, i32*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::String", align 8
  %4 = alloca %"class.v8::internal::StringCharacterStream", align 8
  %5 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 7
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %9, 8
  br i1 %10, label %11, label %32

11:                                               ; preds = %2
  %12 = add i64 %6, 3
  %13 = inttoptr i64 %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.v8::internal::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #7
  %19 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %6, i64* %19, align 8
  %20 = call i32 @_ZN2v88internal6String17ComputeAndSetHashEv(%"class.v8::internal::String"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #7
  %21 = load i64, i64* %5, align 8
  %22 = add i64 %21, 3
  %23 = inttoptr i64 %22 to i32*
  br label %24

24:                                               ; preds = %11, %17
  %25 = phi i32* [ %13, %11 ], [ %23, %17 ]
  %26 = load i32, i32* %25, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %44

29:                                               ; preds = %24
  %30 = lshr i32 %26, 2
  %31 = and i32 %30, 16777215
  store i32 %31, i32* %1, align 4
  br label %44

32:                                               ; preds = %2
  %33 = icmp sgt i32 %9, 10
  br i1 %33, label %44, label %34

34:                                               ; preds = %32
  %35 = bitcast %"class.v8::internal::StringCharacterStream"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 320, i8* nonnull %35) #7
  call void @_ZN2v88internal21StringCharacterStreamC2ENS0_6StringEi(%"class.v8::internal::StringCharacterStream"* nonnull %4, i64 %6, i32 0)
  %36 = call zeroext i1 @_ZN2v88internal13StringToIndexINS0_21StringCharacterStreamEjLNS0_11ToIndexModeE0EEEbPT_PT0_(%"class.v8::internal::StringCharacterStream"* nonnull %4, i32* %1)
  %37 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %4, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8, i8* %37, align 8, !range !5
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %4, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %42 = load %"class.v8::base::SharedMutex"*, %"class.v8::base::SharedMutex"** %41, align 8
  call void @_ZN2v84base11SharedMutex12UnlockSharedEv(%"class.v8::base::SharedMutex"* %42) #7
  br label %43

43:                                               ; preds = %34, %40
  call void @llvm.lifetime.end.p0i8(i64 320, i8* nonnull %35) #7
  br label %44

44:                                               ; preds = %32, %29, %24, %43
  %45 = phi i1 [ %36, %43 ], [ true, %29 ], [ false, %24 ], [ false, %32 ]
  ret i1 %45
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal13StringToIndexINS0_21StringCharacterStreamEjLNS0_11ToIndexModeE0EEEbPT_PT0_(%"class.v8::internal::StringCharacterStream"*, i32*) local_unnamed_addr #0 comdat {
  %3 = alloca i8, align 1
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  %8 = alloca i32, align 4
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  %11 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 2
  %12 = getelementptr inbounds %union.anon.1152, %union.anon.1152* %11, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 3
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %13, %15
  br i1 %16, label %17, label %44

17:                                               ; preds = %2
  %18 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #7
  %19 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 0
  store i32 0, i32* %4, align 4
  %20 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %43, label %23

23:                                               ; preds = %17
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #7
  %24 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 0, i32 3
  %25 = load i32, i32* %24, align 4
  %26 = sub nsw i32 %25, %21
  %27 = icmp eq i32 %26, 32
  %28 = zext i1 %27 to i8
  store i8 %28, i8* %3, align 1
  br i1 %27, label %33, label %29

29:                                               ; preds = %23
  %30 = call i64 @_ZN2v88internal18ConsStringIterator8NextLeafEPb(%"class.v8::internal::ConsStringIterator"* %19, i8* nonnull %3) #7
  %31 = load i8, i8* %3, align 1
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %29, %23
  %34 = call i64 @_ZN2v88internal18ConsStringIterator6SearchEPi(%"class.v8::internal::ConsStringIterator"* %19, i32* nonnull %4) #7
  br label %35

35:                                               ; preds = %33, %29
  %36 = phi i64 [ %30, %29 ], [ %34, %33 ]
  %37 = trunc i64 %36 to i32
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  store i32 0, i32* %20, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #7
  br label %43

40:                                               ; preds = %35
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #7
  %41 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 4
  %42 = tail call i64 @_ZN2v88internal6String9VisitFlatINS0_21StringCharacterStreamEEENS0_10ConsStringEPT_S1_iRKNS0_31SharedStringAccessGuardIfNeededE(%"class.v8::internal::StringCharacterStream"* %0, i64 %36, i32 0, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16) %41) #7
  br label %43

43:                                               ; preds = %40, %39, %17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #7
  br label %44

44:                                               ; preds = %43, %2
  %45 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 1
  %46 = load i8, i8* %45, align 8, !range !5
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %44
  %49 = load i8*, i8** %12, align 8
  %50 = getelementptr inbounds i8, i8* %49, i64 1
  store i8* %50, i8** %12, align 8
  %51 = load i8, i8* %49, align 1
  %52 = zext i8 %51 to i16
  br label %59

53:                                               ; preds = %44
  %54 = bitcast %union.anon.1152* %11 to i16**
  %55 = load i16*, i16** %54, align 8
  %56 = getelementptr inbounds i16, i16* %55, i64 1
  store i16* %56, i16** %54, align 8
  %57 = load i16, i16* %55, align 2
  %58 = bitcast i16* %56 to i8*
  br label %59

59:                                               ; preds = %48, %53
  %60 = phi i8* [ %50, %48 ], [ %58, %53 ]
  %61 = phi i16 [ %52, %48 ], [ %57, %53 ]
  %62 = icmp eq i16 %61, 48
  br i1 %62, label %63, label %99

63:                                               ; preds = %59
  store i32 0, i32* %1, align 4
  %64 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 2, i32 0
  %65 = load i8*, i8** %64, align 8
  %66 = load i8*, i8** %14, align 8
  %67 = icmp eq i8* %65, %66
  br i1 %67, label %68, label %96

68:                                               ; preds = %63
  %69 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %69) #7
  %70 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 0
  store i32 0, i32* %10, align 4
  %71 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 0, i32 2
  %72 = load i32, i32* %71, align 8
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %94, label %74

74:                                               ; preds = %68
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #7
  %75 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 0, i32 3
  %76 = load i32, i32* %75, align 4
  %77 = sub nsw i32 %76, %72
  %78 = icmp eq i32 %77, 32
  %79 = zext i1 %78 to i8
  store i8 %79, i8* %9, align 1
  br i1 %78, label %84, label %80

80:                                               ; preds = %74
  %81 = call i64 @_ZN2v88internal18ConsStringIterator8NextLeafEPb(%"class.v8::internal::ConsStringIterator"* %70, i8* nonnull %9) #7
  %82 = load i8, i8* %9, align 1
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %86, label %84

84:                                               ; preds = %80, %74
  %85 = call i64 @_ZN2v88internal18ConsStringIterator6SearchEPi(%"class.v8::internal::ConsStringIterator"* %70, i32* nonnull %10) #7
  br label %86

86:                                               ; preds = %84, %80
  %87 = phi i64 [ %81, %80 ], [ %85, %84 ]
  %88 = trunc i64 %87 to i32
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %86
  store i32 0, i32* %71, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #7
  br label %94

91:                                               ; preds = %86
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #7
  %92 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 4
  %93 = tail call i64 @_ZN2v88internal6String9VisitFlatINS0_21StringCharacterStreamEEENS0_10ConsStringEPT_S1_iRKNS0_31SharedStringAccessGuardIfNeededE(%"class.v8::internal::StringCharacterStream"* %0, i64 %87, i32 0, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16) %92) #7
  br label %94

94:                                               ; preds = %91, %90, %68
  %95 = phi i1 [ true, %91 ], [ false, %68 ], [ false, %90 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %69) #7
  br label %96

96:                                               ; preds = %63, %94
  %97 = phi i1 [ %95, %94 ], [ true, %63 ]
  %98 = xor i1 %97, true
  br label %193

99:                                               ; preds = %59
  %100 = zext i16 %61 to i32
  %101 = add nsw i32 %100, -48
  %102 = icmp ult i32 %101, 10
  br i1 %102, label %103, label %193

103:                                              ; preds = %99
  %104 = bitcast i32* %8 to i8*
  %105 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 0
  %106 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 0, i32 2
  %107 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 0, i32 3
  %108 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 4
  %109 = bitcast i32* %6 to i8*
  %110 = bitcast %union.anon.1152* %11 to i16**
  br label %111

111:                                              ; preds = %103, %189
  %112 = phi i8* [ %179, %189 ], [ %60, %103 ]
  %113 = phi i32 [ %191, %189 ], [ %101, %103 ]
  %114 = load i8*, i8** %14, align 8
  %115 = icmp eq i8* %112, %114
  br i1 %115, label %116, label %139

116:                                              ; preds = %111
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %104) #7
  store i32 0, i32* %8, align 4
  %117 = load i32, i32* %106, align 8
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %192, label %119

119:                                              ; preds = %116
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #7
  %120 = load i32, i32* %107, align 4
  %121 = sub nsw i32 %120, %117
  %122 = icmp eq i32 %121, 32
  %123 = zext i1 %122 to i8
  store i8 %123, i8* %7, align 1
  br i1 %122, label %128, label %124

124:                                              ; preds = %119
  %125 = call i64 @_ZN2v88internal18ConsStringIterator8NextLeafEPb(%"class.v8::internal::ConsStringIterator"* %105, i8* nonnull %7) #7
  %126 = load i8, i8* %7, align 1
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %130, label %128

128:                                              ; preds = %124, %119
  %129 = call i64 @_ZN2v88internal18ConsStringIterator6SearchEPi(%"class.v8::internal::ConsStringIterator"* %105, i32* nonnull %8) #7
  br label %130

130:                                              ; preds = %128, %124
  %131 = phi i64 [ %125, %124 ], [ %129, %128 ]
  %132 = trunc i64 %131 to i32
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %135

134:                                              ; preds = %130
  store i32 0, i32* %106, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #7
  br label %192

135:                                              ; preds = %130
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #7
  %136 = tail call i64 @_ZN2v88internal6String9VisitFlatINS0_21StringCharacterStreamEEENS0_10ConsStringEPT_S1_iRKNS0_31SharedStringAccessGuardIfNeededE(%"class.v8::internal::StringCharacterStream"* %0, i64 %131, i32 0, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16) %108) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %104) #7
  %137 = load i8*, i8** %12, align 8
  %138 = load i8*, i8** %14, align 8
  br label %139

139:                                              ; preds = %111, %135
  %140 = phi i8* [ %114, %111 ], [ %138, %135 ]
  %141 = phi i8* [ %112, %111 ], [ %137, %135 ]
  %142 = icmp eq i8* %141, %140
  br i1 %142, label %143, label %165

143:                                              ; preds = %139
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %109) #7
  store i32 0, i32* %6, align 4
  %144 = load i32, i32* %106, align 8
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %164, label %146

146:                                              ; preds = %143
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #7
  %147 = load i32, i32* %107, align 4
  %148 = sub nsw i32 %147, %144
  %149 = icmp eq i32 %148, 32
  %150 = zext i1 %149 to i8
  store i8 %150, i8* %5, align 1
  br i1 %149, label %155, label %151

151:                                              ; preds = %146
  %152 = call i64 @_ZN2v88internal18ConsStringIterator8NextLeafEPb(%"class.v8::internal::ConsStringIterator"* %105, i8* nonnull %5) #7
  %153 = load i8, i8* %5, align 1
  %154 = icmp eq i8 %153, 0
  br i1 %154, label %157, label %155

155:                                              ; preds = %151, %146
  %156 = call i64 @_ZN2v88internal18ConsStringIterator6SearchEPi(%"class.v8::internal::ConsStringIterator"* %105, i32* nonnull %6) #7
  br label %157

157:                                              ; preds = %155, %151
  %158 = phi i64 [ %152, %151 ], [ %156, %155 ]
  %159 = trunc i64 %158 to i32
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %162

161:                                              ; preds = %157
  store i32 0, i32* %106, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #7
  br label %164

162:                                              ; preds = %157
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #7
  %163 = tail call i64 @_ZN2v88internal6String9VisitFlatINS0_21StringCharacterStreamEEENS0_10ConsStringEPT_S1_iRKNS0_31SharedStringAccessGuardIfNeededE(%"class.v8::internal::StringCharacterStream"* %0, i64 %158, i32 0, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16) %108) #7
  br label %164

164:                                              ; preds = %162, %161, %143
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %109) #7
  br label %165

165:                                              ; preds = %164, %139
  %166 = load i8, i8* %45, align 8, !range !5
  %167 = icmp eq i8 %166, 0
  br i1 %167, label %173, label %168

168:                                              ; preds = %165
  %169 = load i8*, i8** %12, align 8
  %170 = getelementptr inbounds i8, i8* %169, i64 1
  store i8* %170, i8** %12, align 8
  %171 = load i8, i8* %169, align 1
  %172 = zext i8 %171 to i16
  br label %178

173:                                              ; preds = %165
  %174 = load i16*, i16** %110, align 8
  %175 = getelementptr inbounds i16, i16* %174, i64 1
  store i16* %175, i16** %110, align 8
  %176 = load i16, i16* %174, align 2
  %177 = bitcast i16* %175 to i8*
  br label %178

178:                                              ; preds = %168, %173
  %179 = phi i8* [ %170, %168 ], [ %177, %173 ]
  %180 = phi i16 [ %172, %168 ], [ %176, %173 ]
  %181 = zext i16 %180 to i32
  %182 = add nsw i32 %181, -48
  %183 = icmp ult i32 %182, 10
  br i1 %183, label %184, label %193

184:                                              ; preds = %178
  %185 = add nsw i32 %181, -45
  %186 = ashr i32 %185, 3
  %187 = sub nuw nsw i32 429496729, %186
  %188 = icmp ugt i32 %113, %187
  br i1 %188, label %193, label %189

189:                                              ; preds = %184
  %190 = mul i32 %113, 10
  %191 = add i32 %182, %190
  br label %111

192:                                              ; preds = %116, %134
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %104) #7
  store i32 %113, i32* %1, align 4
  br label %193

193:                                              ; preds = %184, %178, %192, %99, %96
  %194 = phi i1 [ %98, %96 ], [ false, %99 ], [ true, %192 ], [ false, %178 ], [ false, %184 ]
  ret i1 %194
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal6String18SlowAsIntegerIndexEPm(%"class.v8::internal::String"* nocapture readonly, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::String", align 8
  %4 = alloca %"class.v8::internal::StringCharacterStream", align 8
  %5 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 7
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %9, 8
  br i1 %10, label %11, label %33

11:                                               ; preds = %2
  %12 = add i64 %6, 3
  %13 = inttoptr i64 %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.v8::internal::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #7
  %19 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %6, i64* %19, align 8
  %20 = call i32 @_ZN2v88internal6String17ComputeAndSetHashEv(%"class.v8::internal::String"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #7
  %21 = load i64, i64* %5, align 8
  %22 = add i64 %21, 3
  %23 = inttoptr i64 %22 to i32*
  br label %24

24:                                               ; preds = %11, %17
  %25 = phi i32* [ %13, %11 ], [ %23, %17 ]
  %26 = load i32, i32* %25, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %45

29:                                               ; preds = %24
  %30 = lshr i32 %26, 2
  %31 = and i32 %30, 16777215
  %32 = zext i32 %31 to i64
  store i64 %32, i64* %1, align 8
  br label %45

33:                                               ; preds = %2
  %34 = icmp sgt i32 %9, 16
  br i1 %34, label %45, label %35

35:                                               ; preds = %33
  %36 = bitcast %"class.v8::internal::StringCharacterStream"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 320, i8* nonnull %36) #7
  call void @_ZN2v88internal21StringCharacterStreamC2ENS0_6StringEi(%"class.v8::internal::StringCharacterStream"* nonnull %4, i64 %6, i32 0)
  %37 = call zeroext i1 @_ZN2v88internal13StringToIndexINS0_21StringCharacterStreamEmLNS0_11ToIndexModeE1EEEbPT_PT0_(%"class.v8::internal::StringCharacterStream"* nonnull %4, i64* %1)
  %38 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %4, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8, i8* %38, align 8, !range !5
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %4, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %43 = load %"class.v8::base::SharedMutex"*, %"class.v8::base::SharedMutex"** %42, align 8
  call void @_ZN2v84base11SharedMutex12UnlockSharedEv(%"class.v8::base::SharedMutex"* %43) #7
  br label %44

44:                                               ; preds = %35, %41
  call void @llvm.lifetime.end.p0i8(i64 320, i8* nonnull %36) #7
  br label %45

45:                                               ; preds = %33, %29, %24, %44
  %46 = phi i1 [ %37, %44 ], [ true, %29 ], [ false, %24 ], [ false, %33 ]
  ret i1 %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal13StringToIndexINS0_21StringCharacterStreamEmLNS0_11ToIndexModeE1EEEbPT_PT0_(%"class.v8::internal::StringCharacterStream"*, i64*) local_unnamed_addr #0 comdat {
  %3 = alloca i8, align 1
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  %8 = alloca i32, align 4
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  %11 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 2
  %12 = getelementptr inbounds %union.anon.1152, %union.anon.1152* %11, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 3
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %13, %15
  br i1 %16, label %17, label %44

17:                                               ; preds = %2
  %18 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #7
  %19 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 0
  store i32 0, i32* %4, align 4
  %20 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %43, label %23

23:                                               ; preds = %17
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #7
  %24 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 0, i32 3
  %25 = load i32, i32* %24, align 4
  %26 = sub nsw i32 %25, %21
  %27 = icmp eq i32 %26, 32
  %28 = zext i1 %27 to i8
  store i8 %28, i8* %3, align 1
  br i1 %27, label %33, label %29

29:                                               ; preds = %23
  %30 = call i64 @_ZN2v88internal18ConsStringIterator8NextLeafEPb(%"class.v8::internal::ConsStringIterator"* %19, i8* nonnull %3) #7
  %31 = load i8, i8* %3, align 1
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %29, %23
  %34 = call i64 @_ZN2v88internal18ConsStringIterator6SearchEPi(%"class.v8::internal::ConsStringIterator"* %19, i32* nonnull %4) #7
  br label %35

35:                                               ; preds = %33, %29
  %36 = phi i64 [ %30, %29 ], [ %34, %33 ]
  %37 = trunc i64 %36 to i32
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  store i32 0, i32* %20, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #7
  br label %43

40:                                               ; preds = %35
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #7
  %41 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 4
  %42 = tail call i64 @_ZN2v88internal6String9VisitFlatINS0_21StringCharacterStreamEEENS0_10ConsStringEPT_S1_iRKNS0_31SharedStringAccessGuardIfNeededE(%"class.v8::internal::StringCharacterStream"* %0, i64 %36, i32 0, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16) %41) #7
  br label %43

43:                                               ; preds = %40, %39, %17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #7
  br label %44

44:                                               ; preds = %43, %2
  %45 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 1
  %46 = load i8, i8* %45, align 8, !range !5
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %44
  %49 = load i8*, i8** %12, align 8
  %50 = getelementptr inbounds i8, i8* %49, i64 1
  store i8* %50, i8** %12, align 8
  %51 = load i8, i8* %49, align 1
  %52 = zext i8 %51 to i16
  br label %59

53:                                               ; preds = %44
  %54 = bitcast %union.anon.1152* %11 to i16**
  %55 = load i16*, i16** %54, align 8
  %56 = getelementptr inbounds i16, i16* %55, i64 1
  store i16* %56, i16** %54, align 8
  %57 = load i16, i16* %55, align 2
  %58 = bitcast i16* %56 to i8*
  br label %59

59:                                               ; preds = %48, %53
  %60 = phi i8* [ %50, %48 ], [ %58, %53 ]
  %61 = phi i16 [ %52, %48 ], [ %57, %53 ]
  %62 = icmp eq i16 %61, 48
  br i1 %62, label %63, label %99

63:                                               ; preds = %59
  store i64 0, i64* %1, align 8
  %64 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 2, i32 0
  %65 = load i8*, i8** %64, align 8
  %66 = load i8*, i8** %14, align 8
  %67 = icmp eq i8* %65, %66
  br i1 %67, label %68, label %96

68:                                               ; preds = %63
  %69 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %69) #7
  %70 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 0
  store i32 0, i32* %10, align 4
  %71 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 0, i32 2
  %72 = load i32, i32* %71, align 8
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %94, label %74

74:                                               ; preds = %68
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #7
  %75 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 0, i32 3
  %76 = load i32, i32* %75, align 4
  %77 = sub nsw i32 %76, %72
  %78 = icmp eq i32 %77, 32
  %79 = zext i1 %78 to i8
  store i8 %79, i8* %9, align 1
  br i1 %78, label %84, label %80

80:                                               ; preds = %74
  %81 = call i64 @_ZN2v88internal18ConsStringIterator8NextLeafEPb(%"class.v8::internal::ConsStringIterator"* %70, i8* nonnull %9) #7
  %82 = load i8, i8* %9, align 1
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %86, label %84

84:                                               ; preds = %80, %74
  %85 = call i64 @_ZN2v88internal18ConsStringIterator6SearchEPi(%"class.v8::internal::ConsStringIterator"* %70, i32* nonnull %10) #7
  br label %86

86:                                               ; preds = %84, %80
  %87 = phi i64 [ %81, %80 ], [ %85, %84 ]
  %88 = trunc i64 %87 to i32
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %86
  store i32 0, i32* %71, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #7
  br label %94

91:                                               ; preds = %86
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #7
  %92 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 4
  %93 = tail call i64 @_ZN2v88internal6String9VisitFlatINS0_21StringCharacterStreamEEENS0_10ConsStringEPT_S1_iRKNS0_31SharedStringAccessGuardIfNeededE(%"class.v8::internal::StringCharacterStream"* %0, i64 %87, i32 0, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16) %92) #7
  br label %94

94:                                               ; preds = %91, %90, %68
  %95 = phi i1 [ true, %91 ], [ false, %68 ], [ false, %90 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %69) #7
  br label %96

96:                                               ; preds = %63, %94
  %97 = phi i1 [ %95, %94 ], [ true, %63 ]
  %98 = xor i1 %97, true
  br label %191

99:                                               ; preds = %59
  %100 = zext i16 %61 to i32
  %101 = add nsw i32 %100, -48
  %102 = icmp ult i32 %101, 10
  br i1 %102, label %103, label %191

103:                                              ; preds = %99
  %104 = sext i32 %101 to i64
  %105 = bitcast i32* %8 to i8*
  %106 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 0
  %107 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 0, i32 2
  %108 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 0, i32 3
  %109 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 4
  %110 = bitcast i32* %6 to i8*
  %111 = bitcast %union.anon.1152* %11 to i16**
  br label %112

112:                                              ; preds = %185, %103
  %113 = phi i8* [ %60, %103 ], [ %180, %185 ]
  %114 = phi i64 [ %104, %103 ], [ %188, %185 ]
  %115 = load i8*, i8** %14, align 8
  %116 = icmp eq i8* %113, %115
  br i1 %116, label %117, label %140

117:                                              ; preds = %112
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %105) #7
  store i32 0, i32* %8, align 4
  %118 = load i32, i32* %107, align 8
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %190, label %120

120:                                              ; preds = %117
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #7
  %121 = load i32, i32* %108, align 4
  %122 = sub nsw i32 %121, %118
  %123 = icmp eq i32 %122, 32
  %124 = zext i1 %123 to i8
  store i8 %124, i8* %7, align 1
  br i1 %123, label %129, label %125

125:                                              ; preds = %120
  %126 = call i64 @_ZN2v88internal18ConsStringIterator8NextLeafEPb(%"class.v8::internal::ConsStringIterator"* %106, i8* nonnull %7) #7
  %127 = load i8, i8* %7, align 1
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %131, label %129

129:                                              ; preds = %125, %120
  %130 = call i64 @_ZN2v88internal18ConsStringIterator6SearchEPi(%"class.v8::internal::ConsStringIterator"* %106, i32* nonnull %8) #7
  br label %131

131:                                              ; preds = %129, %125
  %132 = phi i64 [ %126, %125 ], [ %130, %129 ]
  %133 = trunc i64 %132 to i32
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %131
  store i32 0, i32* %107, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #7
  br label %190

136:                                              ; preds = %131
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #7
  %137 = tail call i64 @_ZN2v88internal6String9VisitFlatINS0_21StringCharacterStreamEEENS0_10ConsStringEPT_S1_iRKNS0_31SharedStringAccessGuardIfNeededE(%"class.v8::internal::StringCharacterStream"* %0, i64 %132, i32 0, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16) %109) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %105) #7
  %138 = load i8*, i8** %12, align 8
  %139 = load i8*, i8** %14, align 8
  br label %140

140:                                              ; preds = %112, %136
  %141 = phi i8* [ %115, %112 ], [ %139, %136 ]
  %142 = phi i8* [ %113, %112 ], [ %138, %136 ]
  %143 = icmp eq i8* %142, %141
  br i1 %143, label %144, label %166

144:                                              ; preds = %140
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %110) #7
  store i32 0, i32* %6, align 4
  %145 = load i32, i32* %107, align 8
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %165, label %147

147:                                              ; preds = %144
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #7
  %148 = load i32, i32* %108, align 4
  %149 = sub nsw i32 %148, %145
  %150 = icmp eq i32 %149, 32
  %151 = zext i1 %150 to i8
  store i8 %151, i8* %5, align 1
  br i1 %150, label %156, label %152

152:                                              ; preds = %147
  %153 = call i64 @_ZN2v88internal18ConsStringIterator8NextLeafEPb(%"class.v8::internal::ConsStringIterator"* %106, i8* nonnull %5) #7
  %154 = load i8, i8* %5, align 1
  %155 = icmp eq i8 %154, 0
  br i1 %155, label %158, label %156

156:                                              ; preds = %152, %147
  %157 = call i64 @_ZN2v88internal18ConsStringIterator6SearchEPi(%"class.v8::internal::ConsStringIterator"* %106, i32* nonnull %6) #7
  br label %158

158:                                              ; preds = %156, %152
  %159 = phi i64 [ %153, %152 ], [ %157, %156 ]
  %160 = trunc i64 %159 to i32
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %163

162:                                              ; preds = %158
  store i32 0, i32* %107, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #7
  br label %165

163:                                              ; preds = %158
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #7
  %164 = tail call i64 @_ZN2v88internal6String9VisitFlatINS0_21StringCharacterStreamEEENS0_10ConsStringEPT_S1_iRKNS0_31SharedStringAccessGuardIfNeededE(%"class.v8::internal::StringCharacterStream"* %0, i64 %159, i32 0, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16) %109) #7
  br label %165

165:                                              ; preds = %163, %162, %144
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %110) #7
  br label %166

166:                                              ; preds = %165, %140
  %167 = load i8, i8* %45, align 8, !range !5
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %174, label %169

169:                                              ; preds = %166
  %170 = load i8*, i8** %12, align 8
  %171 = getelementptr inbounds i8, i8* %170, i64 1
  store i8* %171, i8** %12, align 8
  %172 = load i8, i8* %170, align 1
  %173 = zext i8 %172 to i16
  br label %179

174:                                              ; preds = %166
  %175 = load i16*, i16** %111, align 8
  %176 = getelementptr inbounds i16, i16* %175, i64 1
  store i16* %176, i16** %111, align 8
  %177 = load i16, i16* %175, align 2
  %178 = bitcast i16* %176 to i8*
  br label %179

179:                                              ; preds = %169, %174
  %180 = phi i8* [ %171, %169 ], [ %178, %174 ]
  %181 = phi i16 [ %173, %169 ], [ %177, %174 ]
  %182 = zext i16 %181 to i32
  %183 = add nsw i32 %182, -48
  %184 = icmp ult i32 %183, 10
  br i1 %184, label %185, label %191

185:                                              ; preds = %179
  %186 = mul i64 %114, 10
  %187 = sext i32 %183 to i64
  %188 = add nuw nsw i64 %186, %187
  %189 = icmp ult i64 %188, 9007199254740992
  br i1 %189, label %112, label %191

190:                                              ; preds = %117, %135
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %105) #7
  store i64 %114, i64* %1, align 8
  br label %191

191:                                              ; preds = %179, %185, %190, %99, %96
  %192 = phi i1 [ %98, %96 ], [ false, %99 ], [ true, %190 ], [ false, %185 ], [ false, %179 ]
  ret i1 %192
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal6String7PrintOnEP8_IO_FILE(%"class.v8::internal::String"* nocapture readonly, %struct._IO_FILE*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::String", align 8
  %4 = alloca i32, align 4
  %5 = alloca %"class.v8::internal::StringShape", align 4
  %6 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 7
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %18

12:                                               ; preds = %2
  %13 = bitcast i32* %4 to i8*
  %14 = bitcast %"class.v8::internal::StringShape"* %5 to i8*
  %15 = getelementptr inbounds %"class.v8::internal::StringShape", %"class.v8::internal::StringShape"* %5, i64 0, i32 0
  %16 = bitcast %"class.v8::internal::String"* %3 to i8*
  %17 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %19

18:                                               ; preds = %19, %2
  ret void

19:                                               ; preds = %37, %12
  %20 = phi i64 [ %7, %12 ], [ %38, %37 ]
  %21 = phi i32 [ 0, %12 ], [ %35, %37 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #7
  store i32 %21, i32* %4, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #7
  %22 = and i64 %20, -4294967296
  %23 = add i64 %20, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 acquire, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %22, %26
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = zext i16 %30 to i32
  store i32 %31, i32* %15, align 4
  %32 = load i64, i64* %6, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #7
  store i64 %32, i64* %17, align 8
  %33 = call zeroext i16 @_ZN2v88internal11StringShape33DispatchToSpecificTypeWithoutCastIZNS1_22DispatchToSpecificTypeIZNKS0_6String7GetImplEiE19StringGetDispatchertJRiEEET0_S4_DpOT1_E17CastingDispatchertJRS4_S6_EEES7_SA_(%"class.v8::internal::StringShape"* nonnull %5, %"class.v8::internal::String"* nonnull dereferenceable(8) %3, i32* nonnull dereferenceable(4) %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #7
  %34 = zext i16 %33 to i32
  call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), i32 %34) #7
  %35 = add nuw nsw i32 %21, 1
  %36 = icmp eq i32 %35, %10
  br i1 %36, label %18, label %37

37:                                               ; preds = %19
  %38 = load i64, i64* %6, align 8
  br label %19
}

declare void @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal9SeqString8TruncateENS0_6HandleIS1_EEi(i64*, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 0
  %4 = load i64, i64* %0, align 8
  br i1 %3, label %5, label %25

5:                                                ; preds = %2
  %6 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %7 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %6, i64 0, i32 0, i32 1
  %10 = load i8, i8* %9, align 8, !range !5
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %6, i64 0, i32 1, i64 0
  br label %22

14:                                               ; preds = %8, %5
  %15 = and i64 %4, -262144
  %16 = or i64 %15, 16
  %17 = inttoptr i64 %16 to i64*
  %18 = load i64, i64* %17, align 16
  %19 = add i64 %18, -41416
  %20 = inttoptr i64 %19 to %"class.v8::internal::Isolate"*
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %20, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %22

22:                                               ; preds = %12, %14
  %23 = phi i64* [ %21, %14 ], [ %13, %12 ]
  %24 = getelementptr inbounds i64, i64* %23, i64 9
  br label %80

25:                                               ; preds = %2
  %26 = add i64 %4, 7
  %27 = inttoptr i64 %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = icmp sgt i32 %28, %1
  br i1 %29, label %30, label %80

30:                                               ; preds = %25
  %31 = and i64 %4, -4294967296
  %32 = add i64 %4, -1
  %33 = inttoptr i64 %32 to i32*
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = zext i32 %34 to i64
  %36 = or i64 %31, %35
  %37 = add i64 %36, 7
  %38 = inttoptr i64 %37 to i16*
  %39 = load atomic i16, i16* %38 monotonic, align 2
  %40 = icmp ult i16 %39, 64
  br i1 %40, label %41, label %59

41:                                               ; preds = %30
  %42 = load atomic i32, i32* %33 monotonic, align 4
  %43 = zext i32 %42 to i64
  %44 = or i64 %31, %43
  %45 = add i64 %44, 7
  %46 = inttoptr i64 %45 to i16*
  %47 = load atomic i16, i16* %46 monotonic, align 2
  %48 = and i16 %47, 7
  %49 = icmp eq i16 %48, 0
  br i1 %49, label %50, label %59

50:                                               ; preds = %41
  %51 = load atomic i32, i32* %33 monotonic, align 4
  %52 = zext i32 %51 to i64
  %53 = or i64 %31, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load atomic i16, i16* %55 monotonic, align 2
  %57 = and i16 %56, 8
  %58 = icmp eq i16 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %50, %41, %30
  %60 = shl i32 %28, 1
  %61 = shl i32 %1, 1
  br label %62

62:                                               ; preds = %50, %59
  %63 = phi i32 [ %60, %59 ], [ %28, %50 ]
  %64 = phi i32 [ %61, %59 ], [ %1, %50 ]
  %65 = add i32 %64, 15
  %66 = add i32 %63, 15
  %67 = and i32 %65, -4
  %68 = and i32 %66, -4
  %69 = sub nsw i32 %68, %67
  %70 = and i64 %4, -262144
  %71 = inttoptr i64 %70 to %"class.v8::internal::BasicMemoryChunk"*
  %72 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %71, i64 0, i32 2
  %73 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %72, align 16
  %74 = sext i32 %67 to i64
  %75 = add i64 %32, %74
  %76 = tail call i64 @_ZN2v88internal4Heap20CreateFillerObjectAtEmiNS0_18ClearRecordedSlotsE(%"class.v8::internal::Heap"* %73, i64 %75, i32 %69, i32 1) #7
  %77 = load i64, i64* %0, align 8
  %78 = add i64 %77, 7
  %79 = inttoptr i64 %78 to i32*
  store atomic volatile i32 %1, i32* %79 release, align 4
  br label %80

80:                                               ; preds = %25, %62, %22
  %81 = phi i64* [ %24, %22 ], [ %0, %62 ], [ %0, %25 ]
  ret i64* %81
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16SeqOneByteString13clear_paddingEv(%"class.v8::internal::SeqOneByteString"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::SeqOneByteString", %"class.v8::internal::SeqOneByteString"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 7
  %5 = inttoptr i64 %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = add nsw i32 %6, 12
  %8 = add i64 %3, -1
  %9 = sext i32 %7 to i64
  %10 = add i64 %8, %9
  %11 = inttoptr i64 %10 to i8*
  %12 = add i32 %6, 15
  %13 = and i32 %12, -4
  %14 = sub nsw i32 %13, %7
  %15 = sext i32 %14 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %11, i8 0, i64 %15, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16SeqTwoByteString13clear_paddingEv(%"class.v8::internal::SeqTwoByteString"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::SeqTwoByteString", %"class.v8::internal::SeqTwoByteString"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 7
  %5 = inttoptr i64 %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = shl i32 %6, 1
  %8 = add nsw i32 %7, 12
  %9 = add i64 %3, -1
  %10 = sext i32 %8 to i64
  %11 = add i64 %9, %10
  %12 = inttoptr i64 %11 to i8*
  %13 = add i32 %7, 15
  %14 = and i32 %13, -4
  %15 = sub nsw i32 %14, %8
  %16 = sext i32 %15 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %12, i8 0, i64 %16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i16 @_ZNK2v88internal10ConsString3GetEi(%"class.v8::internal::ConsString"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::String", align 8
  %4 = alloca i32, align 4
  %5 = alloca %"class.v8::internal::StringShape", align 4
  %6 = alloca %"class.v8::internal::String", align 8
  %7 = alloca i32, align 4
  %8 = alloca %"class.v8::internal::StringShape", align 4
  %9 = getelementptr inbounds %"class.v8::internal::ConsString", %"class.v8::internal::ConsString"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, -4294967296
  %12 = add i64 %10, 15
  %13 = inttoptr i64 %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i64
  %16 = or i64 %11, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %42

21:                                               ; preds = %2
  %22 = add i64 %10, 11
  %23 = inttoptr i64 %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i64
  %26 = or i64 %11, %25
  %27 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27)
  store i32 %1, i32* %4, align 4
  %28 = bitcast %"class.v8::internal::StringShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #7
  %29 = getelementptr inbounds %"class.v8::internal::StringShape", %"class.v8::internal::StringShape"* %5, i64 0, i32 0
  %30 = add i64 %26, -1
  %31 = inttoptr i64 %30 to i32*
  %32 = load atomic i32, i32* %31 acquire, align 4
  %33 = zext i32 %32 to i64
  %34 = or i64 %11, %33
  %35 = add i64 %34, 7
  %36 = inttoptr i64 %35 to i16*
  %37 = load atomic i16, i16* %36 monotonic, align 2
  %38 = zext i16 %37 to i32
  store i32 %38, i32* %29, align 4
  %39 = bitcast %"class.v8::internal::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #7
  %40 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %26, i64* %40, align 8
  %41 = call zeroext i16 @_ZN2v88internal11StringShape33DispatchToSpecificTypeWithoutCastIZNS1_22DispatchToSpecificTypeIZNKS0_6String7GetImplEiE19StringGetDispatchertJRiEEET0_S4_DpOT1_E17CastingDispatchertJRS4_S6_EEES7_SA_(%"class.v8::internal::StringShape"* nonnull %5, %"class.v8::internal::String"* nonnull dereferenceable(8) %3, i32* nonnull dereferenceable(4) %4) #7
  br label %107

42:                                               ; preds = %2
  %43 = add i64 %10, -1
  %44 = inttoptr i64 %43 to i32*
  %45 = load atomic i32, i32* %44 acquire, align 4
  %46 = zext i32 %45 to i64
  %47 = or i64 %11, %46
  %48 = add i64 %47, 7
  %49 = inttoptr i64 %48 to i16*
  %50 = load atomic i16, i16* %49 monotonic, align 2
  %51 = and i16 %50, 7
  %52 = icmp eq i16 %51, 1
  br i1 %52, label %53, label %89

53:                                               ; preds = %42, %73
  %54 = phi i64 [ %76, %73 ], [ %11, %42 ]
  %55 = phi i32 [ %75, %73 ], [ %1, %42 ]
  %56 = phi i64 [ %74, %73 ], [ %10, %42 ]
  %57 = add i64 %56, 11
  %58 = inttoptr i64 %57 to i32*
  %59 = load i32, i32* %58, align 4
  %60 = zext i32 %59 to i64
  %61 = or i64 %54, %60
  %62 = add i64 %61, 7
  %63 = inttoptr i64 %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = icmp slt i32 %55, %64
  br i1 %65, label %73, label %66

66:                                               ; preds = %53
  %67 = sub nsw i32 %55, %64
  %68 = add i64 %56, 15
  %69 = inttoptr i64 %68 to i32*
  %70 = load i32, i32* %69, align 4
  %71 = zext i32 %70 to i64
  %72 = or i64 %54, %71
  br label %73

73:                                               ; preds = %53, %66
  %74 = phi i64 [ %72, %66 ], [ %61, %53 ]
  %75 = phi i32 [ %67, %66 ], [ %55, %53 ]
  %76 = and i64 %74, -4294967296
  %77 = add i64 %74, -1
  %78 = inttoptr i64 %77 to i32*
  %79 = load atomic i32, i32* %78 acquire, align 4
  %80 = zext i32 %79 to i64
  %81 = or i64 %76, %80
  %82 = add i64 %81, 7
  %83 = inttoptr i64 %82 to i16*
  %84 = load atomic i16, i16* %83 monotonic, align 2
  %85 = and i16 %84, 7
  %86 = icmp eq i16 %85, 1
  br i1 %86, label %53, label %87

87:                                               ; preds = %73
  %88 = inttoptr i64 %77 to i32*
  br label %89

89:                                               ; preds = %87, %42
  %90 = phi i64 [ %10, %42 ], [ %74, %87 ]
  %91 = phi i32 [ %1, %42 ], [ %75, %87 ]
  %92 = phi i64 [ %11, %42 ], [ %76, %87 ]
  %93 = phi i32* [ %44, %42 ], [ %88, %87 ]
  %94 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %94)
  store i32 %91, i32* %7, align 4
  %95 = bitcast %"class.v8::internal::StringShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %95) #7
  %96 = getelementptr inbounds %"class.v8::internal::StringShape", %"class.v8::internal::StringShape"* %8, i64 0, i32 0
  %97 = load atomic i32, i32* %93 acquire, align 4
  %98 = zext i32 %97 to i64
  %99 = or i64 %92, %98
  %100 = add i64 %99, 7
  %101 = inttoptr i64 %100 to i16*
  %102 = load atomic i16, i16* %101 monotonic, align 2
  %103 = zext i16 %102 to i32
  store i32 %103, i32* %96, align 4
  %104 = bitcast %"class.v8::internal::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #7
  %105 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %90, i64* %105, align 8
  %106 = call zeroext i16 @_ZN2v88internal11StringShape33DispatchToSpecificTypeWithoutCastIZNS1_22DispatchToSpecificTypeIZNKS0_6String7GetImplEiE19StringGetDispatchertJRiEEET0_S4_DpOT1_E17CastingDispatchertJRS4_S6_EEES7_SA_(%"class.v8::internal::StringShape"* nonnull %8, %"class.v8::internal::String"* nonnull dereferenceable(8) %6, i32* nonnull dereferenceable(4) %7) #7
  br label %107

107:                                              ; preds = %89, %21
  %108 = phi i8* [ %104, %89 ], [ %39, %21 ]
  %109 = phi i8* [ %95, %89 ], [ %28, %21 ]
  %110 = phi i8* [ %94, %89 ], [ %27, %21 ]
  %111 = phi i16 [ %106, %89 ], [ %41, %21 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %109) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %110)
  ret i16 %111
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i16 @_ZNK2v88internal10ThinString3GetEi(%"class.v8::internal::ThinString"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::String", align 8
  %4 = alloca i32, align 4
  %5 = alloca %"class.v8::internal::StringShape", align 4
  %6 = getelementptr inbounds %"class.v8::internal::ThinString", %"class.v8::internal::ThinString"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, -4294967296
  %9 = add i64 %7, 11
  %10 = inttoptr i64 %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = or i64 %8, %12
  %14 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #7
  store i32 %1, i32* %4, align 4
  %15 = bitcast %"class.v8::internal::StringShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #7
  %16 = getelementptr inbounds %"class.v8::internal::StringShape", %"class.v8::internal::StringShape"* %5, i64 0, i32 0
  %17 = add i64 %13, -1
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 acquire, align 4
  %20 = zext i32 %19 to i64
  %21 = or i64 %8, %20
  %22 = add i64 %21, 7
  %23 = inttoptr i64 %22 to i16*
  %24 = load atomic i16, i16* %23 monotonic, align 2
  %25 = zext i16 %24 to i32
  store i32 %25, i32* %16, align 4
  %26 = bitcast %"class.v8::internal::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #7
  %27 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %13, i64* %27, align 8
  %28 = call zeroext i16 @_ZN2v88internal11StringShape33DispatchToSpecificTypeWithoutCastIZNS1_22DispatchToSpecificTypeIZNKS0_6String7GetImplEiE19StringGetDispatchertJRiEEET0_S4_DpOT1_E17CastingDispatchertJRS4_S6_EEES7_SA_(%"class.v8::internal::StringShape"* nonnull %5, %"class.v8::internal::String"* nonnull dereferenceable(8) %3, i32* nonnull dereferenceable(4) %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #7
  ret i16 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i16 @_ZNK2v88internal12SlicedString3GetEi(%"class.v8::internal::SlicedString"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::String", align 8
  %4 = alloca i32, align 4
  %5 = alloca %"class.v8::internal::StringShape", align 4
  %6 = getelementptr inbounds %"class.v8::internal::SlicedString", %"class.v8::internal::SlicedString"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, -4294967296
  %9 = add i64 %7, 11
  %10 = inttoptr i64 %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = or i64 %8, %12
  %14 = add i64 %7, 15
  %15 = inttoptr i64 %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = ashr i32 %16, 1
  %18 = add nsw i32 %17, %1
  %19 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19)
  store i32 %18, i32* %4, align 4
  %20 = bitcast %"class.v8::internal::StringShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #7
  %21 = getelementptr inbounds %"class.v8::internal::StringShape", %"class.v8::internal::StringShape"* %5, i64 0, i32 0
  %22 = add i64 %13, -1
  %23 = inttoptr i64 %22 to i32*
  %24 = load atomic i32, i32* %23 acquire, align 4
  %25 = zext i32 %24 to i64
  %26 = or i64 %8, %25
  %27 = add i64 %26, 7
  %28 = inttoptr i64 %27 to i16*
  %29 = load atomic i16, i16* %28 monotonic, align 2
  %30 = zext i16 %29 to i32
  store i32 %30, i32* %21, align 4
  %31 = bitcast %"class.v8::internal::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #7
  %32 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %13, i64* %32, align 8
  %33 = call zeroext i16 @_ZN2v88internal11StringShape33DispatchToSpecificTypeWithoutCastIZNS1_22DispatchToSpecificTypeIZNKS0_6String7GetImplEiE19StringGetDispatchertJRiEEET0_S4_DpOT1_E17CastingDispatchertJRS4_S6_EEES7_SA_(%"class.v8::internal::StringShape"* nonnull %5, %"class.v8::internal::String"* nonnull dereferenceable(8) %3, i32* nonnull dereferenceable(4) %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19)
  ret i16 %33
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal14ExternalString19ExternalPayloadSizeEv(%"class.v8::internal::ExternalString"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::ExternalString", %"class.v8::internal::ExternalString"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, -1
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = add i64 %9, 7
  %11 = inttoptr i64 %10 to i16*
  %12 = load atomic i16, i16* %11 monotonic, align 2
  %13 = and i16 %12, 8
  %14 = icmp eq i16 %13, 0
  %15 = select i1 %14, i32 2, i32 1
  %16 = add i64 %3, 7
  %17 = inttoptr i64 %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = mul nsw i32 %15, %18
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16FlatStringReaderC2EPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::FlatStringReader"*, %"class.v8::internal::Isolate"*, i64*) unnamed_addr #0 align 2 {
  %4 = ptrtoint i64* %2 to i64
  %5 = getelementptr inbounds %"class.v8::internal::FlatStringReader", %"class.v8::internal::FlatStringReader"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::FlatStringReader", %"class.v8::internal::FlatStringReader"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal11RelocatableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::FlatStringReader", %"class.v8::internal::FlatStringReader"* %0, i64 0, i32 0, i32 1
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 91
  %9 = bitcast %"class.v8::internal::Relocatable"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::FlatStringReader", %"class.v8::internal::FlatStringReader"* %0, i64 0, i32 0, i32 2
  %12 = bitcast %"class.v8::internal::Relocatable"** %11 to i64*
  store i64 %10, i64* %12, align 8
  store %"class.v8::internal::Relocatable"* %5, %"class.v8::internal::Relocatable"** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal16FlatStringReaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %13 = getelementptr inbounds %"class.v8::internal::FlatStringReader", %"class.v8::internal::FlatStringReader"* %0, i64 0, i32 1
  %14 = bitcast %"class.v8::internal::Handle.1129"* %13 to i64*
  store i64 %4, i64* %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::FlatStringReader", %"class.v8::internal::FlatStringReader"* %0, i64 0, i32 3
  %16 = load i64, i64* %2, align 8
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i32*
  %19 = load i32, i32* %18, align 4
  store i32 %19, i32* %15, align 4
  tail call void @_ZN2v88internal16FlatStringReader21PostGarbageCollectionEv(%"class.v8::internal::FlatStringReader"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16FlatStringReader21PostGarbageCollectionEv(%"class.v8::internal::FlatStringReader"* nocapture) unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::CombinationAssertScope", align 1
  %3 = alloca %"class.v8::internal::String::FlatContent", align 8
  %4 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %5 = getelementptr inbounds %"class.v8::internal::CombinationAssertScope", %"class.v8::internal::CombinationAssertScope"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #7
  %6 = bitcast %"class.v8::internal::String::FlatContent"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #7
  %7 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #7
  %8 = getelementptr inbounds %"class.v8::internal::FlatStringReader", %"class.v8::internal::FlatStringReader"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %4, i64 0, i32 0
  call void @_ZN2v88internal6String14GetFlatContentERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENS3_ILS4_1ELb0EEEEEE(%"class.v8::internal::String::FlatContent"* nonnull sret %3, %"class.v8::internal::String"* nonnull %12, %"class.v8::internal::CombinationAssertScope"* nonnull dereferenceable(1) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #7
  %13 = getelementptr inbounds %"class.v8::internal::String::FlatContent", %"class.v8::internal::String::FlatContent"* %3, i64 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 1
  %16 = getelementptr inbounds %"class.v8::internal::FlatStringReader", %"class.v8::internal::FlatStringReader"* %0, i64 0, i32 2
  %17 = zext i1 %15 to i8
  store i8 %17, i8* %16, align 8
  %18 = bitcast %"class.v8::internal::String::FlatContent"* %3 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::FlatStringReader", %"class.v8::internal::FlatStringReader"* %0, i64 0, i32 4
  %21 = bitcast i8** %20 to i64*
  store i64 %19, i64* %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal18ConsStringIterator10InitializeENS0_10ConsStringEi(%"class.v8::internal::ConsStringIterator"* nocapture, i64, i32) local_unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::ConsStringIterator", %"class.v8::internal::ConsStringIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::ConsStringIterator", %"class.v8::internal::ConsStringIterator"* %0, i64 0, i32 4
  store i32 %2, i32* %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::ConsStringIterator", %"class.v8::internal::ConsStringIterator"* %0, i64 0, i32 2
  store i32 1, i32* %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::ConsStringIterator", %"class.v8::internal::ConsStringIterator"* %0, i64 0, i32 3
  store i32 33, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal18ConsStringIterator8ContinueEPi(%"class.v8::internal::ConsStringIterator"* nocapture, i32* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #7
  %4 = getelementptr inbounds %"class.v8::internal::ConsStringIterator", %"class.v8::internal::ConsStringIterator"* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.v8::internal::ConsStringIterator", %"class.v8::internal::ConsStringIterator"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = sub nsw i32 %5, %7
  %9 = icmp eq i32 %8, 32
  %10 = zext i1 %9 to i8
  store i8 %10, i8* %3, align 1
  br i1 %9, label %15, label %11

11:                                               ; preds = %2
  %12 = call i64 @_ZN2v88internal18ConsStringIterator8NextLeafEPb(%"class.v8::internal::ConsStringIterator"* %0, i8* nonnull %3)
  %13 = load i8, i8* %3, align 1
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %2, %11
  %16 = tail call i64 @_ZN2v88internal18ConsStringIterator6SearchEPi(%"class.v8::internal::ConsStringIterator"* %0, i32* %1)
  br label %17

17:                                               ; preds = %11, %15
  %18 = phi i64 [ %12, %11 ], [ %16, %15 ]
  %19 = trunc i64 %18 to i32
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %17
  store i32 0, i32* %6, align 8
  br label %22

22:                                               ; preds = %21, %17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #7
  ret i64 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal18ConsStringIterator8NextLeafEPb(%"class.v8::internal::ConsStringIterator"* nocapture, i8* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::ConsStringIterator", %"class.v8::internal::ConsStringIterator"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::ConsStringIterator", %"class.v8::internal::ConsStringIterator"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  br label %10

9:                                                ; preds = %108, %2
  store i8 0, i8* %1, align 1
  br label %112

10:                                               ; preds = %6, %108
  %11 = phi i32 [ %8, %6 ], [ %110, %108 ]
  %12 = phi i32 [ %4, %6 ], [ %109, %108 ]
  %13 = sub nsw i32 %11, %12
  %14 = icmp eq i32 %13, 32
  br i1 %14, label %15, label %16

15:                                               ; preds = %10
  store i8 1, i8* %1, align 1
  br label %112

16:                                               ; preds = %10
  %17 = add nsw i32 %12, -1
  %18 = and i32 %17, 31
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.v8::internal::ConsStringIterator", %"class.v8::internal::ConsStringIterator"* %0, i64 0, i32 0, i64 %19, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = and i64 %21, -4294967296
  %23 = add i64 %21, 15
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %22, %26
  %28 = add i64 %27, -1
  %29 = inttoptr i64 %28 to i32*
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = zext i32 %30 to i64
  %32 = or i64 %22, %31
  %33 = add i64 %32, 7
  %34 = inttoptr i64 %33 to i16*
  %35 = load atomic i16, i16* %34 monotonic, align 2
  %36 = and i16 %35, 7
  %37 = icmp eq i16 %36, 1
  br i1 %37, label %47, label %38

38:                                               ; preds = %16
  store i32 %17, i32* %3, align 8
  %39 = add i64 %27, 7
  %40 = inttoptr i64 %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %108, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.v8::internal::ConsStringIterator", %"class.v8::internal::ConsStringIterator"* %0, i64 0, i32 4
  %45 = load i32, i32* %44, align 8
  %46 = add nsw i32 %45, %41
  store i32 %46, i32* %44, align 8
  br label %112

47:                                               ; preds = %16
  %48 = add i32 %12, 31
  %49 = and i32 %48, 31
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds %"class.v8::internal::ConsStringIterator", %"class.v8::internal::ConsStringIterator"* %0, i64 0, i32 0, i64 %50, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %27, i64* %51, align 8
  %52 = add i64 %27, 11
  %53 = inttoptr i64 %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i64
  %56 = or i64 %22, %55
  %57 = add i64 %56, -1
  %58 = inttoptr i64 %57 to i32*
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = zext i32 %59 to i64
  %61 = or i64 %22, %60
  %62 = add i64 %61, 7
  %63 = inttoptr i64 %62 to i16*
  %64 = load atomic i16, i16* %63 monotonic, align 2
  %65 = and i16 %64, 7
  %66 = icmp eq i16 %65, 1
  %67 = load i32, i32* %3, align 8
  br i1 %66, label %84, label %68

68:                                               ; preds = %84, %47
  %69 = phi i64 [ %56, %47 ], [ %96, %84 ]
  %70 = phi i32 [ %67, %47 ], [ %107, %84 ]
  %71 = load i32, i32* %7, align 4
  %72 = icmp sgt i32 %70, %71
  br i1 %72, label %73, label %74

73:                                               ; preds = %68
  store i32 %70, i32* %7, align 4
  br label %74

74:                                               ; preds = %68, %73
  %75 = phi i32 [ %71, %68 ], [ %70, %73 ]
  %76 = add i64 %69, 7
  %77 = inttoptr i64 %76 to i32*
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %108, label %80

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.v8::internal::ConsStringIterator", %"class.v8::internal::ConsStringIterator"* %0, i64 0, i32 4
  %82 = load i32, i32* %81, align 8
  %83 = add nsw i32 %82, %78
  store i32 %83, i32* %81, align 8
  br label %112

84:                                               ; preds = %47, %84
  %85 = phi i32 [ %107, %84 ], [ %67, %47 ]
  %86 = phi i64 [ %96, %84 ], [ %56, %47 ]
  %87 = add nsw i32 %85, 1
  store i32 %87, i32* %3, align 8
  %88 = and i32 %85, 31
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds %"class.v8::internal::ConsStringIterator", %"class.v8::internal::ConsStringIterator"* %0, i64 0, i32 0, i64 %89, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %86, i64* %90, align 8
  %91 = and i64 %86, -4294967296
  %92 = add i64 %86, 11
  %93 = inttoptr i64 %92 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = zext i32 %94 to i64
  %96 = or i64 %91, %95
  %97 = add i64 %96, -1
  %98 = inttoptr i64 %97 to i32*
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = zext i32 %99 to i64
  %101 = or i64 %91, %100
  %102 = add i64 %101, 7
  %103 = inttoptr i64 %102 to i16*
  %104 = load atomic i16, i16* %103 monotonic, align 2
  %105 = and i16 %104, 7
  %106 = icmp eq i16 %105, 1
  %107 = load i32, i32* %3, align 8
  br i1 %106, label %84, label %68

108:                                              ; preds = %74, %38
  %109 = phi i32 [ %70, %74 ], [ %17, %38 ]
  %110 = phi i32 [ %75, %74 ], [ %11, %38 ]
  %111 = icmp eq i32 %109, 0
  br i1 %111, label %9, label %10

112:                                              ; preds = %80, %43, %15, %9
  %113 = phi i64 [ 0, %9 ], [ 0, %15 ], [ %69, %80 ], [ %27, %43 ]
  ret i64 %113
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal18ConsStringIterator6SearchEPi(%"class.v8::internal::ConsStringIterator"* nocapture, i32* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::ConsStringIterator", %"class.v8::internal::ConsStringIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::ConsStringIterator", %"class.v8::internal::ConsStringIterator"* %0, i64 0, i32 2
  store i32 1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::ConsStringIterator", %"class.v8::internal::ConsStringIterator"* %0, i64 0, i32 3
  store i32 1, i32* %6, align 4
  %7 = getelementptr inbounds %"class.v8::internal::ConsStringIterator", %"class.v8::internal::ConsStringIterator"* %0, i64 0, i32 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %4, i64* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::ConsStringIterator", %"class.v8::internal::ConsStringIterator"* %0, i64 0, i32 4
  %9 = load i32, i32* %8, align 8
  br label %10

10:                                               ; preds = %80, %2
  %11 = phi i64 [ %4, %2 ], [ %82, %80 ]
  %12 = phi i32 [ 0, %2 ], [ %83, %80 ]
  %13 = and i64 %11, -4294967296
  %14 = add i64 %11, 11
  %15 = inttoptr i64 %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %13, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = add nsw i32 %21, %12
  %23 = icmp slt i32 %9, %22
  br i1 %23, label %24, label %42

24:                                               ; preds = %10
  %25 = add i64 %18, -1
  %26 = inttoptr i64 %25 to i32*
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = zext i32 %27 to i64
  %29 = or i64 %13, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load atomic i16, i16* %31 monotonic, align 2
  %33 = and i16 %32, 7
  %34 = icmp eq i16 %33, 1
  %35 = load i32, i32* %5, align 8
  br i1 %34, label %36, label %38

36:                                               ; preds = %24
  %37 = add nsw i32 %35, 1
  store i32 %37, i32* %5, align 8
  br label %80

38:                                               ; preds = %24
  %39 = load i32, i32* %6, align 4
  %40 = icmp sgt i32 %35, %39
  br i1 %40, label %41, label %75

41:                                               ; preds = %38
  store i32 %35, i32* %6, align 4
  br label %75

42:                                               ; preds = %10
  %43 = add i64 %11, 15
  %44 = inttoptr i64 %43 to i32*
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i64
  %47 = or i64 %13, %46
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = zext i32 %50 to i64
  %52 = or i64 %13, %51
  %53 = add i64 %52, 7
  %54 = inttoptr i64 %53 to i16*
  %55 = load atomic i16, i16* %54 monotonic, align 2
  %56 = and i16 %55, 7
  %57 = icmp eq i16 %56, 1
  br i1 %57, label %58, label %61

58:                                               ; preds = %42
  %59 = load i32, i32* %5, align 8
  %60 = add i32 %59, 31
  br label %80

61:                                               ; preds = %42
  %62 = add i64 %47, 7
  %63 = inttoptr i64 %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %61
  store i32 0, i32* %5, align 8
  br label %87

67:                                               ; preds = %61
  %68 = load i32, i32* %5, align 8
  %69 = load i32, i32* %6, align 4
  %70 = icmp sgt i32 %68, %69
  br i1 %70, label %71, label %72

71:                                               ; preds = %67
  store i32 %68, i32* %6, align 4
  br label %72

72:                                               ; preds = %67, %71
  %73 = add nsw i32 %68, -1
  store i32 %73, i32* %5, align 8
  %74 = add nsw i32 %22, %64
  br label %75

75:                                               ; preds = %41, %38, %72
  %76 = phi i32 [ %22, %41 ], [ %22, %38 ], [ %74, %72 ]
  %77 = phi i64 [ %18, %41 ], [ %18, %38 ], [ %47, %72 ]
  %78 = phi i32 [ %12, %41 ], [ %12, %38 ], [ %22, %72 ]
  store i32 %76, i32* %8, align 8
  %79 = sub nsw i32 %9, %78
  store i32 %79, i32* %1, align 4
  br label %87

80:                                               ; preds = %58, %36
  %81 = phi i32 [ %60, %58 ], [ %35, %36 ]
  %82 = phi i64 [ %47, %58 ], [ %18, %36 ]
  %83 = phi i32 [ %22, %58 ], [ %12, %36 ]
  %84 = and i32 %81, 31
  %85 = zext i32 %84 to i64
  %86 = getelementptr inbounds %"class.v8::internal::ConsStringIterator", %"class.v8::internal::ConsStringIterator"* %0, i64 0, i32 0, i64 %85, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %82, i64* %86, align 8
  br label %10

87:                                               ; preds = %75, %66
  %88 = phi i64 [ 0, %66 ], [ %77, %75 ]
  ret i64 %88
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2v88internal6String20AddressOfCharacterAtEiRKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENS3_ILS4_1ELb0EEEEEE(%"class.v8::internal::String"* nocapture readonly, i32, %"class.v8::internal::CombinationAssertScope"* nocapture readnone dereferenceable(1)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, -4294967296
  %7 = add i64 %5, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %6, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load atomic i16, i16* %13 monotonic, align 2
  %15 = icmp ult i16 %14, 64
  br i1 %15, label %16, label %31

16:                                               ; preds = %3
  %17 = load atomic i32, i32* %8 monotonic, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %6, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load atomic i16, i16* %21 monotonic, align 2
  %23 = and i16 %22, 7
  %24 = icmp eq i16 %23, 1
  br i1 %24, label %25, label %31

25:                                               ; preds = %16
  %26 = add i64 %5, 11
  %27 = inttoptr i64 %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %6, %29
  br label %59

31:                                               ; preds = %3, %16
  %32 = load atomic i32, i32* %8 monotonic, align 4
  %33 = zext i32 %32 to i64
  %34 = or i64 %6, %33
  %35 = add i64 %34, 7
  %36 = inttoptr i64 %35 to i16*
  %37 = load atomic i16, i16* %36 monotonic, align 2
  %38 = icmp ult i16 %37, 64
  br i1 %38, label %39, label %59

39:                                               ; preds = %31
  %40 = load atomic i32, i32* %8 monotonic, align 4
  %41 = zext i32 %40 to i64
  %42 = or i64 %6, %41
  %43 = add i64 %42, 7
  %44 = inttoptr i64 %43 to i16*
  %45 = load atomic i16, i16* %44 monotonic, align 2
  %46 = and i16 %45, 7
  %47 = icmp eq i16 %46, 3
  br i1 %47, label %48, label %59

48:                                               ; preds = %39
  %49 = add i64 %5, 15
  %50 = inttoptr i64 %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = ashr i32 %51, 1
  %53 = add nsw i32 %52, %1
  %54 = add i64 %5, 11
  %55 = inttoptr i64 %54 to i32*
  %56 = load i32, i32* %55, align 4
  %57 = zext i32 %56 to i64
  %58 = or i64 %6, %57
  br label %59

59:                                               ; preds = %31, %39, %48, %25
  %60 = phi i64 [ %30, %25 ], [ %58, %48 ], [ %5, %39 ], [ %5, %31 ]
  %61 = phi i32 [ %1, %25 ], [ %53, %48 ], [ %1, %39 ], [ %1, %31 ]
  %62 = and i64 %60, -4294967296
  %63 = add i64 %60, -1
  %64 = inttoptr i64 %63 to i32*
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = zext i32 %65 to i64
  %67 = or i64 %62, %66
  %68 = add i64 %67, 7
  %69 = inttoptr i64 %68 to i16*
  %70 = load atomic i16, i16* %69 monotonic, align 2
  %71 = icmp ult i16 %70, 64
  br i1 %71, label %72, label %87

72:                                               ; preds = %59
  %73 = load atomic i32, i32* %64 monotonic, align 4
  %74 = zext i32 %73 to i64
  %75 = or i64 %62, %74
  %76 = add i64 %75, 7
  %77 = inttoptr i64 %76 to i16*
  %78 = load atomic i16, i16* %77 monotonic, align 2
  %79 = and i16 %78, 7
  %80 = icmp eq i16 %79, 5
  br i1 %80, label %81, label %87

81:                                               ; preds = %72
  %82 = add i64 %60, 11
  %83 = inttoptr i64 %82 to i32*
  %84 = load i32, i32* %83, align 4
  %85 = zext i32 %84 to i64
  %86 = or i64 %62, %85
  br label %87

87:                                               ; preds = %59, %72, %81
  %88 = phi i64 [ %86, %81 ], [ %60, %72 ], [ %60, %59 ]
  %89 = icmp sgt i32 %61, -1
  br i1 %89, label %91, label %90, !prof !43

90:                                               ; preds = %87
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.22, i64 0, i64 0)) #18
  unreachable

91:                                               ; preds = %87
  %92 = add i64 %88, 7
  %93 = inttoptr i64 %92 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = icmp sgt i32 %61, %94
  br i1 %95, label %96, label %97, !prof !26

96:                                               ; preds = %91
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.23, i64 0, i64 0)) #18
  unreachable

97:                                               ; preds = %91
  %98 = and i64 %88, -4294967296
  %99 = add i64 %88, -1
  %100 = inttoptr i64 %99 to i32*
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = zext i32 %101 to i64
  %103 = or i64 %98, %102
  %104 = add i64 %103, 7
  %105 = inttoptr i64 %104 to i16*
  %106 = load atomic i16, i16* %105 monotonic, align 2
  %107 = icmp ult i16 %106, 64
  br i1 %107, label %108, label %131

108:                                              ; preds = %97
  %109 = load atomic i32, i32* %100 monotonic, align 4
  %110 = zext i32 %109 to i64
  %111 = or i64 %98, %110
  %112 = add i64 %111, 7
  %113 = inttoptr i64 %112 to i16*
  %114 = load atomic i16, i16* %113 monotonic, align 2
  %115 = and i16 %114, 7
  %116 = icmp eq i16 %115, 0
  br i1 %116, label %117, label %131

117:                                              ; preds = %108
  %118 = load atomic i32, i32* %100 monotonic, align 4
  %119 = zext i32 %118 to i64
  %120 = or i64 %98, %119
  %121 = add i64 %120, 7
  %122 = inttoptr i64 %121 to i16*
  %123 = load atomic i16, i16* %122 monotonic, align 2
  %124 = and i16 %123, 8
  %125 = icmp eq i16 %124, 0
  br i1 %125, label %131, label %126

126:                                              ; preds = %117
  %127 = add i64 %88, 11
  %128 = inttoptr i64 %127 to i8*
  %129 = sext i32 %61 to i64
  %130 = getelementptr inbounds i8, i8* %128, i64 %129
  br label %258

131:                                              ; preds = %117, %108, %97
  %132 = load atomic i32, i32* %100 monotonic, align 4
  %133 = zext i32 %132 to i64
  %134 = or i64 %98, %133
  %135 = add i64 %134, 7
  %136 = inttoptr i64 %135 to i16*
  %137 = load atomic i16, i16* %136 monotonic, align 2
  %138 = icmp ult i16 %137, 64
  br i1 %138, label %139, label %163

139:                                              ; preds = %131
  %140 = load atomic i32, i32* %100 monotonic, align 4
  %141 = zext i32 %140 to i64
  %142 = or i64 %98, %141
  %143 = add i64 %142, 7
  %144 = inttoptr i64 %143 to i16*
  %145 = load atomic i16, i16* %144 monotonic, align 2
  %146 = and i16 %145, 7
  %147 = icmp eq i16 %146, 0
  br i1 %147, label %148, label %163

148:                                              ; preds = %139
  %149 = load atomic i32, i32* %100 monotonic, align 4
  %150 = zext i32 %149 to i64
  %151 = or i64 %98, %150
  %152 = add i64 %151, 7
  %153 = inttoptr i64 %152 to i16*
  %154 = load atomic i16, i16* %153 monotonic, align 2
  %155 = and i16 %154, 8
  %156 = icmp eq i16 %155, 0
  br i1 %156, label %157, label %163

157:                                              ; preds = %148
  %158 = add i64 %88, 11
  %159 = inttoptr i64 %158 to i16*
  %160 = sext i32 %61 to i64
  %161 = getelementptr inbounds i16, i16* %159, i64 %160
  %162 = bitcast i16* %161 to i8*
  br label %258

163:                                              ; preds = %139, %131, %148
  %164 = load atomic i32, i32* %100 monotonic, align 4
  %165 = zext i32 %164 to i64
  %166 = or i64 %98, %165
  %167 = add i64 %166, 7
  %168 = inttoptr i64 %167 to i16*
  %169 = load atomic i16, i16* %168 monotonic, align 2
  %170 = icmp ult i16 %169, 64
  br i1 %170, label %171, label %223

171:                                              ; preds = %163
  %172 = load atomic i32, i32* %100 monotonic, align 4
  %173 = zext i32 %172 to i64
  %174 = or i64 %98, %173
  %175 = add i64 %174, 7
  %176 = inttoptr i64 %175 to i16*
  %177 = load atomic i16, i16* %176 monotonic, align 2
  %178 = and i16 %177, 7
  %179 = icmp eq i16 %178, 2
  br i1 %179, label %180, label %223

180:                                              ; preds = %171
  %181 = load atomic i32, i32* %100 monotonic, align 4
  %182 = zext i32 %181 to i64
  %183 = or i64 %98, %182
  %184 = add i64 %183, 7
  %185 = inttoptr i64 %184 to i16*
  %186 = load atomic i16, i16* %185 monotonic, align 2
  %187 = and i16 %186, 8
  %188 = icmp eq i16 %187, 0
  br i1 %188, label %223, label %189

189:                                              ; preds = %180
  %190 = load atomic i32, i32* %100 monotonic, align 4
  %191 = zext i32 %190 to i64
  %192 = or i64 %98, %191
  %193 = add i64 %192, 7
  %194 = inttoptr i64 %193 to i16*
  %195 = load atomic i16, i16* %194 monotonic, align 2
  %196 = and i16 %195, 16
  %197 = icmp eq i16 %196, 0
  %198 = add i64 %88, 11
  %199 = inttoptr i64 %198 to %"class.v8::String::ExternalOneByteStringResource"**
  br i1 %197, label %212, label %200

200:                                              ; preds = %189
  %201 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %199, align 1
  %202 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %201, i64 0, i32 0
  %203 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %201 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %204 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %203, align 8
  %205 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %204, i64 2
  %206 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %205, align 8
  %207 = tail call zeroext i1 %206(%"class.v8::String::ExternalStringResourceBase"* %202) #7
  br i1 %207, label %208, label %212

208:                                              ; preds = %200
  %209 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %199, align 1
  tail call void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"* %209) #7
  %210 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %209, i64 0, i32 1
  %211 = load i8*, i8** %210, align 8
  br label %219

212:                                              ; preds = %189, %200
  %213 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %199, align 1
  %214 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %213 to i8* (%"class.v8::String::ExternalOneByteStringResource"*)***
  %215 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)**, i8* (%"class.v8::String::ExternalOneByteStringResource"*)*** %214, align 8
  %216 = getelementptr inbounds i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %215, i64 6
  %217 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %216, align 8
  %218 = tail call i8* %217(%"class.v8::String::ExternalOneByteStringResource"* %213) #7
  br label %219

219:                                              ; preds = %208, %212
  %220 = phi i8* [ %211, %208 ], [ %218, %212 ]
  %221 = sext i32 %61 to i64
  %222 = getelementptr inbounds i8, i8* %220, i64 %221
  br label %258

223:                                              ; preds = %180, %171, %163
  %224 = load atomic i32, i32* %100 monotonic, align 4
  %225 = zext i32 %224 to i64
  %226 = or i64 %98, %225
  %227 = add i64 %226, 7
  %228 = inttoptr i64 %227 to i16*
  %229 = load atomic i16, i16* %228 monotonic, align 2
  %230 = and i16 %229, 16
  %231 = icmp eq i16 %230, 0
  %232 = add i64 %88, 11
  %233 = inttoptr i64 %232 to %"class.v8::String::ExternalStringResource"**
  br i1 %231, label %246, label %234

234:                                              ; preds = %223
  %235 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %233, align 1
  %236 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %235, i64 0, i32 0
  %237 = bitcast %"class.v8::String::ExternalStringResource"* %235 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %238 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %237, align 8
  %239 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %238, i64 2
  %240 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %239, align 8
  %241 = tail call zeroext i1 %240(%"class.v8::String::ExternalStringResourceBase"* %236) #7
  br i1 %241, label %242, label %246

242:                                              ; preds = %234
  %243 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %233, align 1
  tail call void @_ZNK2v86String22ExternalStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalStringResource"* %243) #7
  %244 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %243, i64 0, i32 1
  %245 = load i16*, i16** %244, align 8
  br label %253

246:                                              ; preds = %223, %234
  %247 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %233, align 1
  %248 = bitcast %"class.v8::String::ExternalStringResource"* %247 to i16* (%"class.v8::String::ExternalStringResource"*)***
  %249 = load i16* (%"class.v8::String::ExternalStringResource"*)**, i16* (%"class.v8::String::ExternalStringResource"*)*** %248, align 8
  %250 = getelementptr inbounds i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %249, i64 6
  %251 = load i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %250, align 8
  %252 = tail call i16* %251(%"class.v8::String::ExternalStringResource"* %247) #7
  br label %253

253:                                              ; preds = %242, %246
  %254 = phi i16* [ %245, %242 ], [ %252, %246 ]
  %255 = sext i32 %61 to i64
  %256 = getelementptr inbounds i16, i16* %254, i64 %255
  %257 = bitcast i16* %256 to i8*
  br label %258

258:                                              ; preds = %253, %219, %157, %126
  %259 = phi i8* [ %130, %126 ], [ %162, %157 ], [ %222, %219 ], [ %257, %253 ]
  ret i8* %259
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11RelocatableD2Ev(%"class.v8::internal::Relocatable"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Relocatable", %"class.v8::internal::Relocatable"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal11RelocatableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::Relocatable", %"class.v8::internal::Relocatable"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Relocatable", %"class.v8::internal::Relocatable"* %0, i64 0, i32 2
  %6 = bitcast %"class.v8::internal::Relocatable"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 91
  %9 = bitcast %"class.v8::internal::Relocatable"** %8 to i64*
  store i64 %7, i64* %9, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal16FlatStringReaderD0Ev(%"class.v8::internal::FlatStringReader"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::FlatStringReader", %"class.v8::internal::FlatStringReader"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal11RelocatableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::FlatStringReader", %"class.v8::internal::FlatStringReader"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::FlatStringReader", %"class.v8::internal::FlatStringReader"* %0, i64 0, i32 0, i32 2
  %6 = bitcast %"class.v8::internal::Relocatable"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 91
  %9 = bitcast %"class.v8::internal::Relocatable"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.v8::internal::FlatStringReader"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11Relocatable15IterateInstanceEPNS0_11RootVisitorE(%"class.v8::internal::Relocatable"*, %"class.v8::internal::RootVisitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN2v84base11SharedMutex12UnlockSharedEv(%"class.v8::base::SharedMutex"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @llvm.assume(i1) #7

declare void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"*) local_unnamed_addr #3

declare void @_ZNK2v86String22ExternalStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalStringResource"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i16 @_ZN2v88internal11StringShape33DispatchToSpecificTypeWithoutCastIZNS1_22DispatchToSpecificTypeIZNKS0_6String7GetImplEiE19StringGetDispatchertJRiEEET0_S4_DpOT1_E17CastingDispatchertJRS4_S6_EEES7_SA_(%"class.v8::internal::StringShape"*, %"class.v8::internal::String"* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #2 comdat align 2 {
  %4 = alloca %"class.v8::internal::String", align 8
  %5 = alloca i32, align 4
  %6 = alloca %"class.v8::internal::StringShape", align 4
  %7 = alloca %"class.v8::internal::String", align 8
  %8 = alloca i32, align 4
  %9 = alloca %"class.v8::internal::StringShape", align 4
  %10 = alloca %"class.v8::internal::ConsString", align 8
  %11 = getelementptr inbounds %"class.v8::internal::StringShape", %"class.v8::internal::StringShape"* %0, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 15
  switch i32 %13, label %179 [
    i32 8, label %14
    i32 0, label %24
    i32 9, label %34
    i32 1, label %34
    i32 10, label %41
    i32 2, label %83
    i32 11, label %124
    i32 3, label %124
    i32 13, label %154
    i32 5, label %154
  ]

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = load i32, i32* %2, align 4
  %18 = sext i32 %17 to i64
  %19 = add i64 %16, 11
  %20 = add i64 %19, %18
  %21 = inttoptr i64 %20 to i8*
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i16
  br label %180

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = load i32, i32* %2, align 4
  %28 = shl nsw i32 %27, 1
  %29 = sext i32 %28 to i64
  %30 = add i64 %26, 11
  %31 = add i64 %30, %29
  %32 = inttoptr i64 %31 to i16*
  %33 = load i16, i16* %32, align 2
  br label %180

34:                                               ; preds = %3, %3
  %35 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = load i32, i32* %2, align 4
  %38 = bitcast %"class.v8::internal::ConsString"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38)
  %39 = getelementptr inbounds %"class.v8::internal::ConsString", %"class.v8::internal::ConsString"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %36, i64* %39, align 8
  %40 = call zeroext i16 @_ZNK2v88internal10ConsString3GetEi(%"class.v8::internal::ConsString"* nonnull %10, i32 %37) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38)
  br label %180

41:                                               ; preds = %3
  %42 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = load i32, i32* %2, align 4
  %45 = and i64 %43, -4294967296
  %46 = add i64 %43, -1
  %47 = inttoptr i64 %46 to i32*
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = zext i32 %48 to i64
  %50 = or i64 %45, %49
  %51 = add i64 %50, 7
  %52 = inttoptr i64 %51 to i16*
  %53 = load atomic i16, i16* %52 monotonic, align 2
  %54 = and i16 %53, 16
  %55 = icmp eq i16 %54, 0
  %56 = add i64 %43, 11
  %57 = inttoptr i64 %56 to %"class.v8::String::ExternalOneByteStringResource"**
  br i1 %55, label %70, label %58

58:                                               ; preds = %41
  %59 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %57, align 1
  %60 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %59, i64 0, i32 0
  %61 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %59 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %62 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %61, align 8
  %63 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %62, i64 2
  %64 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %63, align 8
  %65 = tail call zeroext i1 %64(%"class.v8::String::ExternalStringResourceBase"* %60) #7
  br i1 %65, label %66, label %70

66:                                               ; preds = %58
  %67 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %57, align 1
  tail call void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"* %67) #7
  %68 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %67, i64 0, i32 1
  %69 = load i8*, i8** %68, align 8
  br label %77

70:                                               ; preds = %58, %41
  %71 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %57, align 1
  %72 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %71 to i8* (%"class.v8::String::ExternalOneByteStringResource"*)***
  %73 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)**, i8* (%"class.v8::String::ExternalOneByteStringResource"*)*** %72, align 8
  %74 = getelementptr inbounds i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %73, i64 6
  %75 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %74, align 8
  %76 = tail call i8* %75(%"class.v8::String::ExternalOneByteStringResource"* %71) #7
  br label %77

77:                                               ; preds = %66, %70
  %78 = phi i8* [ %69, %66 ], [ %76, %70 ]
  %79 = sext i32 %44 to i64
  %80 = getelementptr inbounds i8, i8* %78, i64 %79
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i16
  br label %180

83:                                               ; preds = %3
  %84 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i64, i64* %84, align 8
  %86 = load i32, i32* %2, align 4
  %87 = and i64 %85, -4294967296
  %88 = add i64 %85, -1
  %89 = inttoptr i64 %88 to i32*
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = zext i32 %90 to i64
  %92 = or i64 %87, %91
  %93 = add i64 %92, 7
  %94 = inttoptr i64 %93 to i16*
  %95 = load atomic i16, i16* %94 monotonic, align 2
  %96 = and i16 %95, 16
  %97 = icmp eq i16 %96, 0
  %98 = add i64 %85, 11
  %99 = inttoptr i64 %98 to %"class.v8::String::ExternalStringResource"**
  br i1 %97, label %112, label %100

100:                                              ; preds = %83
  %101 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %99, align 1
  %102 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %101, i64 0, i32 0
  %103 = bitcast %"class.v8::String::ExternalStringResource"* %101 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %104 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %103, align 8
  %105 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %104, i64 2
  %106 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %105, align 8
  %107 = tail call zeroext i1 %106(%"class.v8::String::ExternalStringResourceBase"* %102) #7
  br i1 %107, label %108, label %112

108:                                              ; preds = %100
  %109 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %99, align 1
  tail call void @_ZNK2v86String22ExternalStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalStringResource"* %109) #7
  %110 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %109, i64 0, i32 1
  %111 = load i16*, i16** %110, align 8
  br label %119

112:                                              ; preds = %100, %83
  %113 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %99, align 1
  %114 = bitcast %"class.v8::String::ExternalStringResource"* %113 to i16* (%"class.v8::String::ExternalStringResource"*)***
  %115 = load i16* (%"class.v8::String::ExternalStringResource"*)**, i16* (%"class.v8::String::ExternalStringResource"*)*** %114, align 8
  %116 = getelementptr inbounds i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %115, i64 6
  %117 = load i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %116, align 8
  %118 = tail call i16* %117(%"class.v8::String::ExternalStringResource"* %113) #7
  br label %119

119:                                              ; preds = %108, %112
  %120 = phi i16* [ %111, %108 ], [ %118, %112 ]
  %121 = sext i32 %86 to i64
  %122 = getelementptr inbounds i16, i16* %120, i64 %121
  %123 = load i16, i16* %122, align 2
  br label %180

124:                                              ; preds = %3, %3
  %125 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load i64, i64* %125, align 8
  %127 = load i32, i32* %2, align 4
  %128 = and i64 %126, -4294967296
  %129 = add i64 %126, 11
  %130 = inttoptr i64 %129 to i32*
  %131 = load i32, i32* %130, align 4
  %132 = zext i32 %131 to i64
  %133 = or i64 %128, %132
  %134 = add i64 %126, 15
  %135 = inttoptr i64 %134 to i32*
  %136 = load i32, i32* %135, align 4
  %137 = ashr i32 %136, 1
  %138 = add nsw i32 %137, %127
  %139 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %139) #7
  store i32 %138, i32* %8, align 4
  %140 = bitcast %"class.v8::internal::StringShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %140) #7
  %141 = getelementptr inbounds %"class.v8::internal::StringShape", %"class.v8::internal::StringShape"* %9, i64 0, i32 0
  %142 = add i64 %133, -1
  %143 = inttoptr i64 %142 to i32*
  %144 = load atomic i32, i32* %143 acquire, align 4
  %145 = zext i32 %144 to i64
  %146 = or i64 %128, %145
  %147 = add i64 %146, 7
  %148 = inttoptr i64 %147 to i16*
  %149 = load atomic i16, i16* %148 monotonic, align 2
  %150 = zext i16 %149 to i32
  store i32 %150, i32* %141, align 4
  %151 = bitcast %"class.v8::internal::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %151) #7
  %152 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %133, i64* %152, align 8
  %153 = call zeroext i16 @_ZN2v88internal11StringShape33DispatchToSpecificTypeWithoutCastIZNS1_22DispatchToSpecificTypeIZNKS0_6String7GetImplEiE19StringGetDispatchertJRiEEET0_S4_DpOT1_E17CastingDispatchertJRS4_S6_EEES7_SA_(%"class.v8::internal::StringShape"* nonnull %9, %"class.v8::internal::String"* nonnull dereferenceable(8) %7, i32* nonnull dereferenceable(4) %8) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %151) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %140) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %139) #7
  br label %180

154:                                              ; preds = %3, %3
  %155 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load i64, i64* %155, align 8
  %157 = load i32, i32* %2, align 4
  %158 = and i64 %156, -4294967296
  %159 = add i64 %156, 11
  %160 = inttoptr i64 %159 to i32*
  %161 = load i32, i32* %160, align 4
  %162 = zext i32 %161 to i64
  %163 = or i64 %158, %162
  %164 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %164) #7
  store i32 %157, i32* %5, align 4
  %165 = bitcast %"class.v8::internal::StringShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %165) #7
  %166 = getelementptr inbounds %"class.v8::internal::StringShape", %"class.v8::internal::StringShape"* %6, i64 0, i32 0
  %167 = add i64 %163, -1
  %168 = inttoptr i64 %167 to i32*
  %169 = load atomic i32, i32* %168 acquire, align 4
  %170 = zext i32 %169 to i64
  %171 = or i64 %158, %170
  %172 = add i64 %171, 7
  %173 = inttoptr i64 %172 to i16*
  %174 = load atomic i16, i16* %173 monotonic, align 2
  %175 = zext i16 %174 to i32
  store i32 %175, i32* %166, align 4
  %176 = bitcast %"class.v8::internal::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %176) #7
  %177 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %163, i64* %177, align 8
  %178 = call zeroext i16 @_ZN2v88internal11StringShape33DispatchToSpecificTypeWithoutCastIZNS1_22DispatchToSpecificTypeIZNKS0_6String7GetImplEiE19StringGetDispatchertJRiEEET0_S4_DpOT1_E17CastingDispatchertJRS4_S6_EEES7_SA_(%"class.v8::internal::StringShape"* nonnull %6, %"class.v8::internal::String"* nonnull dereferenceable(8) %4, i32* nonnull dereferenceable(4) %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %176) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %165) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %164) #7
  br label %180

179:                                              ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24, i64 0, i64 0)) #18
  unreachable

180:                                              ; preds = %154, %124, %119, %77, %34, %24, %14
  %181 = phi i16 [ %178, %154 ], [ %153, %124 ], [ %123, %119 ], [ %82, %77 ], [ %40, %34 ], [ %33, %24 ], [ %23, %14 ]
  ret i16 %181
}

declare void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"*, i64, i64, i64) local_unnamed_addr #3

declare void @_ZN2v88internal4Heap20UpdateExternalStringENS0_6StringEmm(%"class.v8::internal::Heap"*, i64, i64, i64) local_unnamed_addr #3

declare void @_ZN2v86String22ExternalStringResource15UpdateDataCacheEv(%"class.v8::String::ExternalStringResource"*) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

declare void @_ZN2v86String29ExternalOneByteStringResource15UpdateDataCacheEv(%"class.v8::String::ExternalOneByteStringResource"*) local_unnamed_addr #3

declare void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"*, i8*, i64, %"class.v8::internal::StringStream::FmtElm"*, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #11

declare %"class.v8::internal::LocalHeap"* @_ZN2v88internal9LocalHeap7CurrentEv() local_unnamed_addr #3

declare void @_ZN2v84base11SharedMutex10LockSharedEv(%"class.v8::base::SharedMutex"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2v88internal6String9VisitFlatINS0_21StringCharacterStreamEEENS0_10ConsStringEPT_S1_iRKNS0_31SharedStringAccessGuardIfNeededE(%"class.v8::internal::StringCharacterStream"*, i64, i32, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16)) local_unnamed_addr #2 comdat align 2 {
  %5 = add i64 %1, 7
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  br label %8

8:                                                ; preds = %137, %4
  %9 = phi i64 [ %1, %4 ], [ %143, %137 ]
  %10 = phi i32 [ %2, %4 ], [ %138, %137 ]
  %11 = and i64 %9, -4294967296
  %12 = add i64 %9, -1
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = zext i32 %14 to i64
  %16 = or i64 %11, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load atomic i16, i16* %18 monotonic, align 2
  %20 = and i16 %19, 15
  %21 = zext i16 %20 to i32
  switch i32 %21, label %136 [
    i32 8, label %22
    i32 0, label %33
    i32 10, label %46
    i32 2, label %87
    i32 11, label %130
    i32 3, label %130
    i32 9, label %144
    i32 1, label %144
    i32 13, label %137
    i32 5, label %137
  ]

22:                                               ; preds = %8
  %23 = add i64 %9, 11
  %24 = inttoptr i64 %23 to i8*
  %25 = sext i32 %10 to i64
  %26 = getelementptr inbounds i8, i8* %24, i64 %25
  %27 = sub nsw i32 %7, %2
  %28 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 1
  store i8 1, i8* %28, align 8
  %29 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 2, i32 0
  store i8* %26, i8** %29, align 8
  %30 = sext i32 %27 to i64
  %31 = getelementptr inbounds i8, i8* %26, i64 %30
  %32 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 3
  store i8* %31, i8** %32, align 8
  br label %144

33:                                               ; preds = %8
  %34 = add i64 %9, 11
  %35 = inttoptr i64 %34 to i16*
  %36 = sext i32 %10 to i64
  %37 = getelementptr inbounds i16, i16* %35, i64 %36
  %38 = sub nsw i32 %7, %2
  %39 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 1
  store i8 0, i8* %39, align 8
  %40 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 2
  %41 = bitcast %union.anon.1152* %40 to i16**
  store i16* %37, i16** %41, align 8
  %42 = sext i32 %38 to i64
  %43 = getelementptr inbounds i16, i16* %37, i64 %42
  %44 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 3
  %45 = bitcast i8** %44 to i16**
  store i16* %43, i16** %45, align 8
  br label %144

46:                                               ; preds = %8
  %47 = inttoptr i64 %12 to i32*
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = zext i32 %48 to i64
  %50 = or i64 %11, %49
  %51 = add i64 %50, 7
  %52 = inttoptr i64 %51 to i16*
  %53 = load atomic i16, i16* %52 monotonic, align 2
  %54 = and i16 %53, 16
  %55 = icmp eq i16 %54, 0
  %56 = add i64 %9, 11
  %57 = inttoptr i64 %56 to %"class.v8::String::ExternalOneByteStringResource"**
  br i1 %55, label %70, label %58

58:                                               ; preds = %46
  %59 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %57, align 1
  %60 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %59, i64 0, i32 0
  %61 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %59 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %62 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %61, align 8
  %63 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %62, i64 2
  %64 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %63, align 8
  %65 = tail call zeroext i1 %64(%"class.v8::String::ExternalStringResourceBase"* %60) #7
  br i1 %65, label %66, label %70

66:                                               ; preds = %58
  %67 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %57, align 1
  tail call void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"* %67) #7
  %68 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %67, i64 0, i32 1
  %69 = load i8*, i8** %68, align 8
  br label %77

70:                                               ; preds = %46, %58
  %71 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %57, align 1
  %72 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %71 to i8* (%"class.v8::String::ExternalOneByteStringResource"*)***
  %73 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)**, i8* (%"class.v8::String::ExternalOneByteStringResource"*)*** %72, align 8
  %74 = getelementptr inbounds i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %73, i64 6
  %75 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %74, align 8
  %76 = tail call i8* %75(%"class.v8::String::ExternalOneByteStringResource"* %71) #7
  br label %77

77:                                               ; preds = %66, %70
  %78 = phi i8* [ %69, %66 ], [ %76, %70 ]
  %79 = sext i32 %10 to i64
  %80 = getelementptr inbounds i8, i8* %78, i64 %79
  %81 = sub nsw i32 %7, %2
  %82 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 1
  store i8 1, i8* %82, align 8
  %83 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 2, i32 0
  store i8* %80, i8** %83, align 8
  %84 = sext i32 %81 to i64
  %85 = getelementptr inbounds i8, i8* %80, i64 %84
  %86 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 3
  store i8* %85, i8** %86, align 8
  br label %144

87:                                               ; preds = %8
  %88 = inttoptr i64 %12 to i32*
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = zext i32 %89 to i64
  %91 = or i64 %11, %90
  %92 = add i64 %91, 7
  %93 = inttoptr i64 %92 to i16*
  %94 = load atomic i16, i16* %93 monotonic, align 2
  %95 = and i16 %94, 16
  %96 = icmp eq i16 %95, 0
  %97 = add i64 %9, 11
  %98 = inttoptr i64 %97 to %"class.v8::String::ExternalStringResource"**
  br i1 %96, label %111, label %99

99:                                               ; preds = %87
  %100 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %98, align 1
  %101 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %100, i64 0, i32 0
  %102 = bitcast %"class.v8::String::ExternalStringResource"* %100 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %103 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %102, align 8
  %104 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %103, i64 2
  %105 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %104, align 8
  %106 = tail call zeroext i1 %105(%"class.v8::String::ExternalStringResourceBase"* %101) #7
  br i1 %106, label %107, label %111

107:                                              ; preds = %99
  %108 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %98, align 1
  tail call void @_ZNK2v86String22ExternalStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalStringResource"* %108) #7
  %109 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %108, i64 0, i32 1
  %110 = load i16*, i16** %109, align 8
  br label %118

111:                                              ; preds = %87, %99
  %112 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %98, align 1
  %113 = bitcast %"class.v8::String::ExternalStringResource"* %112 to i16* (%"class.v8::String::ExternalStringResource"*)***
  %114 = load i16* (%"class.v8::String::ExternalStringResource"*)**, i16* (%"class.v8::String::ExternalStringResource"*)*** %113, align 8
  %115 = getelementptr inbounds i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %114, i64 6
  %116 = load i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %115, align 8
  %117 = tail call i16* %116(%"class.v8::String::ExternalStringResource"* %112) #7
  br label %118

118:                                              ; preds = %107, %111
  %119 = phi i16* [ %110, %107 ], [ %117, %111 ]
  %120 = sext i32 %10 to i64
  %121 = getelementptr inbounds i16, i16* %119, i64 %120
  %122 = sub nsw i32 %7, %2
  %123 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 1
  store i8 0, i8* %123, align 8
  %124 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 2
  %125 = bitcast %union.anon.1152* %124 to i16**
  store i16* %121, i16** %125, align 8
  %126 = sext i32 %122 to i64
  %127 = getelementptr inbounds i16, i16* %121, i64 %126
  %128 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 3
  %129 = bitcast i8** %128 to i16**
  store i16* %127, i16** %129, align 8
  br label %144

130:                                              ; preds = %8, %8
  %131 = add i64 %9, 15
  %132 = inttoptr i64 %131 to i32*
  %133 = load i32, i32* %132, align 4
  %134 = ashr i32 %133, 1
  %135 = add nsw i32 %134, %10
  br label %137

136:                                              ; preds = %8
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24, i64 0, i64 0)) #18
  unreachable

137:                                              ; preds = %8, %8, %130
  %138 = phi i32 [ %135, %130 ], [ %10, %8 ], [ %10, %8 ]
  %139 = add i64 %9, 11
  %140 = inttoptr i64 %139 to i32*
  %141 = load i32, i32* %140, align 4
  %142 = zext i32 %141 to i64
  %143 = or i64 %11, %142
  br label %8

144:                                              ; preds = %8, %8, %118, %77, %33, %22
  %145 = phi i64 [ 0, %22 ], [ 0, %33 ], [ 0, %77 ], [ 0, %118 ], [ %9, %8 ], [ %9, %8 ]
  ret i64 %145
}

; Function Attrs: nounwind readnone
declare i16** @__ctype_b_loc() local_unnamed_addr #12

declare i64 @_ZN2v88internal7Isolate13ThrowInternalENS0_6ObjectEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"*, i64, %"class.v8::internal::MessageLocation"*) local_unnamed_addr #3

declare i64* @_ZN2v88internal7Factory20NewStringFromOneByteERKNS0_6VectorIKhEENS0_14AllocationTypeE(%"class.v8::internal::Factory"*, %"class.v8::internal::Vector.1134"* dereferenceable(16), i8 zeroext) local_unnamed_addr #3

declare i64* @_ZN2v88internal6Object15ConvertToStringEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #3

declare i64* @_ZN2v88internal6Object16ConvertToIntegerEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #3

declare i64* @_ZN2v88internal7Factory18NewProperSubStringENS0_6HandleINS0_6StringEEEii(%"class.v8::internal::Factory"*, i64*, i32, i32) local_unnamed_addr #3

declare void @_ZN2v88internal24IncrementalStringBuilder6ExtendEv(%"class.v8::internal::IncrementalStringBuilder"*) local_unnamed_addr #3

declare i64* @_ZN2v88internal6Object24ConvertToNumberOrNumericEPNS0_7IsolateENS0_6HandleIS1_EENS1_10ConversionE(%"class.v8::internal::Isolate"*, i64*, i32) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11RelocatableD0Ev(%"class.v8::internal::Relocatable"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Relocatable", %"class.v8::internal::Relocatable"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal11RelocatableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::Relocatable", %"class.v8::internal::Relocatable"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Relocatable", %"class.v8::internal::Relocatable"* %0, i64 0, i32 2
  %6 = bitcast %"class.v8::internal::Relocatable"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 91
  %9 = bitcast %"class.v8::internal::Relocatable"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.v8::internal::Relocatable"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11Relocatable21PostGarbageCollectionEv(%"class.v8::internal::Relocatable"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN2v84base11SharedMutex13LockExclusiveEv(%"class.v8::base::SharedMutex"*) local_unnamed_addr #3

declare void @_ZN2v84base11SharedMutex15UnlockExclusiveEv(%"class.v8::base::SharedMutex"*) local_unnamed_addr #3

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"*) local_unnamed_addr #3

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #3

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #3

declare void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64, i64, i64) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnamRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #13

declare %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZN2v88internal23FatalProcessOutOfMemoryEPNS0_7IsolateEPKc(%"class.v8::internal::Isolate"*, i8*) local_unnamed_addr #6

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIhhE16SingleCharSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch"*, i8*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = load i8, i8* %6, align 1
  %10 = trunc i64 %2 to i32
  %11 = trunc i64 %8 to i32
  %12 = sub nsw i32 %10, %11
  %13 = add nsw i32 %12, 1
  %14 = zext i8 %9 to i32
  %15 = ptrtoint i8* %1 to i64
  br label %16

16:                                               ; preds = %33, %4
  %17 = phi i32 [ %3, %4 ], [ %34, %33 ]
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i8, i8* %1, i64 %18
  %20 = sub i32 %13, %17
  %21 = sext i32 %20 to i64
  %22 = tail call i8* @memchr(i8* %19, i32 %14, i64 %21) #20
  %23 = icmp eq i8* %22, null
  br i1 %23, label %38, label %24

24:                                               ; preds = %16
  %25 = ptrtoint i8* %22 to i64
  %26 = sub i64 %25, %15
  %27 = trunc i64 %26 to i32
  %28 = shl i64 %26, 32
  %29 = ashr exact i64 %28, 32
  %30 = getelementptr inbounds i8, i8* %1, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp eq i8 %31, %9
  br i1 %32, label %36, label %33

33:                                               ; preds = %24
  %34 = add nsw i32 %27, 1
  %35 = icmp sgt i32 %12, %27
  br i1 %35, label %16, label %38

36:                                               ; preds = %24
  %37 = trunc i64 %26 to i32
  br label %38

38:                                               ; preds = %16, %33, %36
  %39 = phi i32 [ %37, %36 ], [ -1, %33 ], [ -1, %16 ]
  ret i32 %39
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIhhE12LinearSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch"*, i8*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = trunc i64 %2 to i32
  %11 = sub nsw i32 %10, %9
  %12 = icmp slt i32 %11, %3
  br i1 %12, label %65, label %13

13:                                               ; preds = %4
  %14 = load i8, i8* %6, align 1
  %15 = add nsw i32 %11, 1
  %16 = zext i8 %14 to i32
  %17 = ptrtoint i8* %1 to i64
  %18 = getelementptr inbounds i8, i8* %6, i64 1
  %19 = shl i64 %8, 32
  %20 = add i64 %19, -4294967296
  %21 = ashr exact i64 %20, 32
  br label %24

22:                                               ; preds = %53
  %23 = icmp sgt i32 %11, %47
  br i1 %23, label %44, label %65

24:                                               ; preds = %44, %13
  %25 = phi i32 [ %3, %13 ], [ %45, %44 ]
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i8, i8* %1, i64 %26
  %28 = sub i32 %15, %25
  %29 = sext i32 %28 to i64
  %30 = tail call i8* @memchr(i8* %27, i32 %16, i64 %29) #20
  %31 = icmp eq i8* %30, null
  br i1 %31, label %65, label %32

32:                                               ; preds = %24
  %33 = ptrtoint i8* %30 to i64
  %34 = sub i64 %33, %17
  %35 = trunc i64 %34 to i32
  %36 = shl i64 %34, 32
  %37 = ashr exact i64 %36, 32
  %38 = getelementptr inbounds i8, i8* %1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, %14
  br i1 %40, label %46, label %41

41:                                               ; preds = %32
  %42 = add nsw i32 %35, 1
  %43 = icmp sgt i32 %11, %35
  br i1 %43, label %44, label %65

44:                                               ; preds = %41, %22
  %45 = phi i32 [ %42, %41 ], [ %50, %22 ]
  br label %24

46:                                               ; preds = %32
  %47 = trunc i64 %34 to i32
  %48 = icmp eq i32 %47, -1
  br i1 %48, label %65, label %49

49:                                               ; preds = %46
  %50 = add nuw nsw i32 %47, 1
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %1, i64 %51
  br label %53

53:                                               ; preds = %60, %49
  %54 = phi i64 [ %61, %60 ], [ 0, %49 ]
  %55 = getelementptr inbounds i8, i8* %18, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = getelementptr inbounds i8, i8* %52, i64 %54
  %58 = load i8, i8* %57, align 1
  %59 = icmp eq i8 %56, %58
  br i1 %59, label %60, label %22

60:                                               ; preds = %53
  %61 = add nuw nsw i64 %54, 1
  %62 = icmp slt i64 %61, %21
  br i1 %62, label %53, label %63

63:                                               ; preds = %60
  %64 = trunc i64 %34 to i32
  br label %65

65:                                               ; preds = %22, %46, %41, %24, %63, %4
  %66 = phi i32 [ -1, %4 ], [ %64, %63 ], [ -1, %24 ], [ -1, %41 ], [ -1, %46 ], [ -1, %22 ]
  ret i32 %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIhhE13InitialSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch"*, i8*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = trunc i64 %2 to i32
  %11 = sub nsw i32 %10, %9
  %12 = icmp slt i32 %11, %3
  br i1 %12, label %281, label %13

13:                                               ; preds = %4
  %14 = shl i32 %9, 2
  %15 = sub nsw i32 -10, %14
  %16 = add nsw i32 %11, 1
  %17 = ptrtoint i8* %1 to i64
  %18 = shl i64 %8, 32
  %19 = ashr exact i64 %18, 32
  br label %20

20:                                               ; preds = %275, %13
  %21 = phi i32 [ %15, %13 ], [ %276, %275 ]
  %22 = phi i32 [ %3, %13 ], [ %277, %275 ]
  %23 = add nsw i32 %21, 1
  %24 = icmp slt i32 %21, 0
  br i1 %24, label %25, label %72

25:                                               ; preds = %20
  %26 = load i8, i8* %6, align 1
  %27 = zext i8 %26 to i32
  br label %28

28:                                               ; preds = %45, %25
  %29 = phi i32 [ %22, %25 ], [ %46, %45 ]
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %1, i64 %30
  %32 = sub i32 %16, %29
  %33 = sext i32 %32 to i64
  %34 = tail call i8* @memchr(i8* %31, i32 %27, i64 %33) #20
  %35 = icmp eq i8* %34, null
  br i1 %35, label %281, label %36

36:                                               ; preds = %28
  %37 = ptrtoint i8* %34 to i64
  %38 = sub i64 %37, %17
  %39 = trunc i64 %38 to i32
  %40 = shl i64 %38, 32
  %41 = ashr exact i64 %40, 32
  %42 = getelementptr inbounds i8, i8* %1, i64 %41
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, %26
  br i1 %44, label %48, label %45

45:                                               ; preds = %36
  %46 = add nsw i32 %39, 1
  %47 = icmp sgt i32 %11, %39
  br i1 %47, label %28, label %281

48:                                               ; preds = %36
  %49 = trunc i64 %38 to i32
  %50 = icmp eq i32 %49, -1
  br i1 %50, label %281, label %51

51:                                               ; preds = %48
  %52 = shl i64 %38, 32
  %53 = ashr exact i64 %52, 32
  br label %54

54:                                               ; preds = %51, %63
  %55 = phi i64 [ 1, %51 ], [ %64, %63 ]
  %56 = phi i32 [ 1, %51 ], [ %65, %63 ]
  %57 = getelementptr inbounds i8, i8* %6, i64 %55
  %58 = load i8, i8* %57, align 1
  %59 = add nsw i64 %55, %53
  %60 = getelementptr inbounds i8, i8* %1, i64 %59
  %61 = load i8, i8* %60, align 1
  %62 = icmp eq i8 %58, %61
  br i1 %62, label %63, label %67

63:                                               ; preds = %54
  %64 = add nuw nsw i64 %55, 1
  %65 = add nuw nsw i32 %56, 1
  %66 = icmp slt i64 %64, %19
  br i1 %66, label %54, label %69

67:                                               ; preds = %54
  %68 = trunc i64 %55 to i32
  br label %69

69:                                               ; preds = %63, %67
  %70 = phi i32 [ %68, %67 ], [ %65, %63 ]
  %71 = icmp eq i32 %70, %9
  br i1 %71, label %279, label %275

72:                                               ; preds = %20
  %73 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 0
  %74 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 3
  %76 = load i32, i32* %75, align 8
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %212, label %78

78:                                               ; preds = %72
  %79 = add nsw i32 %76, -1
  %80 = insertelement <4 x i32> undef, i32 %79, i32 0
  %81 = shufflevector <4 x i32> %80, <4 x i32> undef, <4 x i32> zeroinitializer
  %82 = insertelement <4 x i32> undef, i32 %79, i32 0
  %83 = shufflevector <4 x i32> %82, <4 x i32> undef, <4 x i32> zeroinitializer
  %84 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 0
  %85 = bitcast i32* %84 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %85, align 4
  %86 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 4
  %87 = bitcast i32* %86 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %87, align 4
  %88 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 8
  %89 = bitcast i32* %88 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %89, align 4
  %90 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 12
  %91 = bitcast i32* %90 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %91, align 4
  %92 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 16
  %93 = bitcast i32* %92 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %93, align 4
  %94 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 20
  %95 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %95, align 4
  %96 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 24
  %97 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %97, align 4
  %98 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 28
  %99 = bitcast i32* %98 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %99, align 4
  %100 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 32
  %101 = bitcast i32* %100 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %101, align 4
  %102 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 36
  %103 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %103, align 4
  %104 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 40
  %105 = bitcast i32* %104 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %105, align 4
  %106 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 44
  %107 = bitcast i32* %106 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %107, align 4
  %108 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 48
  %109 = bitcast i32* %108 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %109, align 4
  %110 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 52
  %111 = bitcast i32* %110 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %111, align 4
  %112 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 56
  %113 = bitcast i32* %112 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %113, align 4
  %114 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 60
  %115 = bitcast i32* %114 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %115, align 4
  %116 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 64
  %117 = bitcast i32* %116 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %117, align 4
  %118 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 68
  %119 = bitcast i32* %118 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %119, align 4
  %120 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 72
  %121 = bitcast i32* %120 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %121, align 4
  %122 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 76
  %123 = bitcast i32* %122 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %123, align 4
  %124 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 80
  %125 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %125, align 4
  %126 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 84
  %127 = bitcast i32* %126 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %127, align 4
  %128 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 88
  %129 = bitcast i32* %128 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %129, align 4
  %130 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 92
  %131 = bitcast i32* %130 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %131, align 4
  %132 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 96
  %133 = bitcast i32* %132 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %133, align 4
  %134 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 100
  %135 = bitcast i32* %134 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %135, align 4
  %136 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 104
  %137 = bitcast i32* %136 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %137, align 4
  %138 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 108
  %139 = bitcast i32* %138 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %139, align 4
  %140 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 112
  %141 = bitcast i32* %140 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %141, align 4
  %142 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 116
  %143 = bitcast i32* %142 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %143, align 4
  %144 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 120
  %145 = bitcast i32* %144 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %145, align 4
  %146 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 124
  %147 = bitcast i32* %146 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %147, align 4
  %148 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 128
  %149 = bitcast i32* %148 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %149, align 4
  %150 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 132
  %151 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %151, align 4
  %152 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 136
  %153 = bitcast i32* %152 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %153, align 4
  %154 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 140
  %155 = bitcast i32* %154 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %155, align 4
  %156 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 144
  %157 = bitcast i32* %156 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %157, align 4
  %158 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 148
  %159 = bitcast i32* %158 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %159, align 4
  %160 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 152
  %161 = bitcast i32* %160 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %161, align 4
  %162 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 156
  %163 = bitcast i32* %162 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %163, align 4
  %164 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 160
  %165 = bitcast i32* %164 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %165, align 4
  %166 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 164
  %167 = bitcast i32* %166 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %167, align 4
  %168 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 168
  %169 = bitcast i32* %168 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %169, align 4
  %170 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 172
  %171 = bitcast i32* %170 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %171, align 4
  %172 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 176
  %173 = bitcast i32* %172 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %173, align 4
  %174 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 180
  %175 = bitcast i32* %174 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %175, align 4
  %176 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 184
  %177 = bitcast i32* %176 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %177, align 4
  %178 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 188
  %179 = bitcast i32* %178 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %179, align 4
  %180 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 192
  %181 = bitcast i32* %180 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %181, align 4
  %182 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 196
  %183 = bitcast i32* %182 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %183, align 4
  %184 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 200
  %185 = bitcast i32* %184 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %185, align 4
  %186 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 204
  %187 = bitcast i32* %186 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %187, align 4
  %188 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 208
  %189 = bitcast i32* %188 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %189, align 4
  %190 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 212
  %191 = bitcast i32* %190 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %191, align 4
  %192 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 216
  %193 = bitcast i32* %192 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %193, align 4
  %194 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 220
  %195 = bitcast i32* %194 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %195, align 4
  %196 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 224
  %197 = bitcast i32* %196 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %197, align 4
  %198 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 228
  %199 = bitcast i32* %198 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %199, align 4
  %200 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 232
  %201 = bitcast i32* %200 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %201, align 4
  %202 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 236
  %203 = bitcast i32* %202 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %203, align 4
  %204 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 240
  %205 = bitcast i32* %204 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %205, align 4
  %206 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 244
  %207 = bitcast i32* %206 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %207, align 4
  %208 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 248
  %209 = bitcast i32* %208 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %209, align 4
  %210 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 252
  %211 = bitcast i32* %210 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %211, align 4
  br label %215

212:                                              ; preds = %72
  %213 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 0
  %214 = bitcast i32* %213 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %214, i8 -1, i64 1024, i1 false) #7
  br label %215

215:                                              ; preds = %78, %212
  %216 = add i32 %9, -1
  %217 = icmp slt i32 %76, %216
  br i1 %217, label %218, label %272

218:                                              ; preds = %215
  %219 = sext i32 %76 to i64
  %220 = sext i32 %216 to i64
  %221 = sub nsw i64 %220, %219
  %222 = xor i64 %219, -1
  %223 = add nsw i64 %222, %220
  %224 = and i64 %221, 3
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %238, label %226

226:                                              ; preds = %218, %226
  %227 = phi i64 [ %235, %226 ], [ %219, %218 ]
  %228 = phi i64 [ %236, %226 ], [ %224, %218 ]
  %229 = load i8*, i8** %5, align 8
  %230 = getelementptr inbounds i8, i8* %229, i64 %227
  %231 = load i8, i8* %230, align 1
  %232 = zext i8 %231 to i64
  %233 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 %232
  %234 = trunc i64 %227 to i32
  store i32 %234, i32* %233, align 4
  %235 = add nsw i64 %227, 1
  %236 = add i64 %228, -1
  %237 = icmp eq i64 %236, 0
  br i1 %237, label %238, label %226, !llvm.loop !44

238:                                              ; preds = %226, %218
  %239 = phi i64 [ %219, %218 ], [ %235, %226 ]
  %240 = icmp ult i64 %223, 3
  br i1 %240, label %272, label %241

241:                                              ; preds = %238, %241
  %242 = phi i64 [ %270, %241 ], [ %239, %238 ]
  %243 = load i8*, i8** %5, align 8
  %244 = getelementptr inbounds i8, i8* %243, i64 %242
  %245 = load i8, i8* %244, align 1
  %246 = zext i8 %245 to i64
  %247 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 %246
  %248 = trunc i64 %242 to i32
  store i32 %248, i32* %247, align 4
  %249 = add nsw i64 %242, 1
  %250 = load i8*, i8** %5, align 8
  %251 = getelementptr inbounds i8, i8* %250, i64 %249
  %252 = load i8, i8* %251, align 1
  %253 = zext i8 %252 to i64
  %254 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 %253
  %255 = trunc i64 %249 to i32
  store i32 %255, i32* %254, align 4
  %256 = add nsw i64 %242, 2
  %257 = load i8*, i8** %5, align 8
  %258 = getelementptr inbounds i8, i8* %257, i64 %256
  %259 = load i8, i8* %258, align 1
  %260 = zext i8 %259 to i64
  %261 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 %260
  %262 = trunc i64 %256 to i32
  store i32 %262, i32* %261, align 4
  %263 = add nsw i64 %242, 3
  %264 = load i8*, i8** %5, align 8
  %265 = getelementptr inbounds i8, i8* %264, i64 %263
  %266 = load i8, i8* %265, align 1
  %267 = zext i8 %266 to i64
  %268 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 121, i64 %267
  %269 = trunc i64 %263 to i32
  store i32 %269, i32* %268, align 4
  %270 = add nsw i64 %242, 4
  %271 = icmp eq i64 %270, %220
  br i1 %271, label %272, label %241

272:                                              ; preds = %238, %241, %215
  %273 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 2
  store i32 (%"class.v8::internal::StringSearch"*, i8*, i64, i32)* @_ZN2v88internal12StringSearchIhhE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKhEEi, i32 (%"class.v8::internal::StringSearch"*, i8*, i64, i32)** %273, align 8
  %274 = tail call i32 @_ZN2v88internal12StringSearchIhhE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch"* %0, i8* %1, i64 %2, i32 %22)
  br label %281

275:                                              ; preds = %69
  %276 = add nsw i32 %23, %70
  %277 = add nsw i32 %49, 1
  %278 = icmp sgt i32 %11, %49
  br i1 %278, label %20, label %281

279:                                              ; preds = %69
  %280 = trunc i64 %38 to i32
  br label %281

281:                                              ; preds = %48, %275, %45, %28, %279, %4, %272
  %282 = phi i32 [ %274, %272 ], [ -1, %4 ], [ %280, %279 ], [ -1, %28 ], [ -1, %45 ], [ -1, %275 ], [ -1, %48 ]
  ret i32 %282
}

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIhhE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch"*, i8*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %2 to i32
  %10 = trunc i64 %8 to i32
  %11 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 0
  %12 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %13 = add nsw i32 %10, -1
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i8, i8* %6, i64 %14
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 121, i64 %17
  %19 = load i32, i32* %18, align 4
  %20 = sub nsw i32 %13, %19
  %21 = sub nsw i32 %9, %10
  %22 = add i32 %10, -2
  %23 = icmp sgt i32 %22, -1
  %24 = sub i32 %10, %20
  br i1 %23, label %25, label %68

25:                                               ; preds = %4
  %26 = sub nsw i32 0, %10
  %27 = sext i32 %22 to i64
  br label %28

28:                                               ; preds = %25, %57
  %29 = phi i32 [ %59, %57 ], [ %3, %25 ]
  %30 = phi i32 [ %61, %57 ], [ %26, %25 ]
  %31 = icmp sgt i32 %29, %21
  br i1 %31, label %173, label %32

32:                                               ; preds = %28, %40
  %33 = phi i32 [ %45, %40 ], [ %29, %28 ]
  %34 = phi i32 [ %47, %40 ], [ %30, %28 ]
  %35 = add nsw i32 %33, %13
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  %38 = load i8, i8* %37, align 1
  %39 = icmp eq i8 %16, %38
  br i1 %39, label %66, label %40

40:                                               ; preds = %32
  %41 = zext i8 %38 to i64
  %42 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 121, i64 %41
  %43 = load i32, i32* %42, align 4
  %44 = sub nsw i32 %13, %43
  %45 = add nsw i32 %44, %33
  %46 = add i32 %34, 1
  %47 = sub i32 %46, %44
  %48 = icmp sgt i32 %45, %21
  br i1 %48, label %173, label %32

49:                                               ; preds = %66, %63
  %50 = phi i64 [ %27, %66 ], [ %64, %63 ]
  %51 = getelementptr inbounds i8, i8* %6, i64 %50
  %52 = load i8, i8* %51, align 1
  %53 = add nsw i64 %50, %67
  %54 = getelementptr inbounds i8, i8* %1, i64 %53
  %55 = load i8, i8* %54, align 1
  %56 = icmp eq i8 %52, %55
  br i1 %56, label %63, label %57

57:                                               ; preds = %49
  %58 = trunc i64 %50 to i32
  %59 = add nsw i32 %33, %20
  %60 = add i32 %24, %34
  %61 = sub i32 %60, %58
  %62 = icmp sgt i32 %61, 0
  br i1 %62, label %84, label %28

63:                                               ; preds = %49
  %64 = add nsw i64 %50, -1
  %65 = icmp sgt i64 %50, 0
  br i1 %65, label %49, label %173

66:                                               ; preds = %32
  %67 = sext i32 %33 to i64
  br label %49

68:                                               ; preds = %4
  %69 = icmp slt i32 %21, %3
  br i1 %69, label %173, label %70

70:                                               ; preds = %68, %77
  %71 = phi i32 [ %82, %77 ], [ %3, %68 ]
  %72 = add nsw i32 %71, %13
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i8, i8* %1, i64 %73
  %75 = load i8, i8* %74, align 1
  %76 = icmp eq i8 %16, %75
  br i1 %76, label %173, label %77

77:                                               ; preds = %70
  %78 = zext i8 %75 to i64
  %79 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 121, i64 %78
  %80 = load i32, i32* %79, align 4
  %81 = sub nsw i32 %13, %80
  %82 = add nsw i32 %81, %71
  %83 = icmp sgt i32 %82, %21
  br i1 %83, label %173, label %70

84:                                               ; preds = %57
  tail call void @_ZN2v88internal12StringSearchIhhE23PopulateBoyerMooreTableEv(%"class.v8::internal::StringSearch"* %0)
  %85 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 2
  store i32 (%"class.v8::internal::StringSearch"*, i8*, i64, i32)* @_ZN2v88internal12StringSearchIhhE16BoyerMooreSearchEPS2_NS0_6VectorIKhEEi, i32 (%"class.v8::internal::StringSearch"*, i8*, i64, i32)** %85, align 8
  %86 = load i8*, i8** %5, align 8
  %87 = load i64, i64* %7, align 8
  %88 = trunc i64 %87 to i32
  %89 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 3
  %90 = load i32, i32* %89, align 8
  %91 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %92 = sext i32 %90 to i64
  %93 = sub nsw i64 0, %92
  %94 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %91, i64 0, i32 122, i64 %93
  %95 = add nsw i32 %88, -1
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds i8, i8* %86, i64 %96
  %98 = load i8, i8* %97, align 1
  %99 = sub nsw i32 %9, %88
  %100 = icmp slt i32 %99, %59
  br i1 %100, label %173, label %101

101:                                              ; preds = %84
  %102 = icmp sgt i32 %88, 0
  %103 = zext i8 %98 to i64
  %104 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %91, i64 0, i32 121, i64 %103
  br i1 %102, label %105, label %159

105:                                              ; preds = %101
  %106 = shl i64 %87, 32
  %107 = ashr exact i64 %106, 32
  br label %108

108:                                              ; preds = %122, %105
  %109 = phi i32 [ %59, %105 ], [ %123, %122 ]
  %110 = add nsw i32 %109, %95
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds i8, i8* %1, i64 %111
  %113 = load i8, i8* %112, align 1
  %114 = icmp eq i8 %98, %113
  br i1 %114, label %157, label %115

115:                                              ; preds = %108
  %116 = zext i8 %113 to i64
  %117 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %91, i64 0, i32 121, i64 %116
  %118 = load i32, i32* %117, align 4
  %119 = sub nsw i32 %95, %118
  %120 = add nsw i32 %119, %109
  %121 = icmp sgt i32 %120, %99
  br i1 %121, label %173, label %122

122:                                              ; preds = %115, %151
  %123 = phi i32 [ %120, %115 ], [ %153, %151 ]
  br label %108

124:                                              ; preds = %157, %155
  %125 = phi i64 [ %107, %157 ], [ %126, %155 ]
  %126 = add nsw i64 %125, -1
  %127 = getelementptr inbounds i8, i8* %86, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = add nsw i64 %126, %158
  %130 = getelementptr inbounds i8, i8* %1, i64 %129
  %131 = load i8, i8* %130, align 1
  %132 = icmp eq i8 %128, %131
  br i1 %132, label %155, label %133

133:                                              ; preds = %124
  %134 = trunc i64 %126 to i32
  %135 = icmp sgt i32 %90, %134
  br i1 %135, label %148, label %136

136:                                              ; preds = %133
  %137 = shl i64 %126, 32
  %138 = add i64 %137, 4294967296
  %139 = ashr exact i64 %138, 32
  %140 = getelementptr inbounds i32, i32* %94, i64 %139
  %141 = load i32, i32* %140, align 4
  %142 = zext i8 %131 to i64
  %143 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %91, i64 0, i32 121, i64 %142
  %144 = load i32, i32* %143, align 4
  %145 = sub nsw i32 %134, %144
  %146 = icmp sgt i32 %141, %145
  %147 = select i1 %146, i32 %141, i32 %145
  br label %151

148:                                              ; preds = %133
  %149 = load i32, i32* %104, align 4
  %150 = sub nsw i32 %95, %149
  br label %151

151:                                              ; preds = %148, %136
  %152 = phi i32 [ %150, %148 ], [ %147, %136 ]
  %153 = add nsw i32 %152, %109
  %154 = icmp sgt i32 %153, %99
  br i1 %154, label %173, label %122

155:                                              ; preds = %124
  %156 = icmp sgt i64 %126, 0
  br i1 %156, label %124, label %173

157:                                              ; preds = %108
  %158 = sext i32 %109 to i64
  br label %124

159:                                              ; preds = %101, %166
  %160 = phi i32 [ %171, %166 ], [ %59, %101 ]
  %161 = add nsw i32 %160, %95
  %162 = sext i32 %161 to i64
  %163 = getelementptr inbounds i8, i8* %1, i64 %162
  %164 = load i8, i8* %163, align 1
  %165 = icmp eq i8 %98, %164
  br i1 %165, label %173, label %166

166:                                              ; preds = %159
  %167 = zext i8 %164 to i64
  %168 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %91, i64 0, i32 121, i64 %167
  %169 = load i32, i32* %168, align 4
  %170 = sub nsw i32 %95, %169
  %171 = add nsw i32 %170, %160
  %172 = icmp sgt i32 %171, %99
  br i1 %172, label %173, label %159

173:                                              ; preds = %77, %70, %28, %40, %63, %166, %159, %151, %115, %155, %68, %84
  %174 = phi i32 [ -1, %84 ], [ -1, %68 ], [ %109, %155 ], [ -1, %115 ], [ -1, %151 ], [ %160, %159 ], [ -1, %166 ], [ %33, %63 ], [ -1, %40 ], [ -1, %28 ], [ %71, %70 ], [ -1, %77 ]
  ret i32 %174
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12StringSearchIhhE23PopulateBoyerMooreTableEv(%"class.v8::internal::StringSearch"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 1, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = trunc i64 %3 to i32
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = sub nsw i32 %4, %8
  %10 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 0
  %11 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %12 = sext i32 %8 to i64
  %13 = sub nsw i64 0, %12
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %13
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 123, i64 %13
  %16 = icmp slt i32 %8, %4
  br i1 %16, label %17, label %100

17:                                               ; preds = %1
  %18 = shl i64 %3, 32
  %19 = ashr exact i64 %18, 32
  %20 = shl i64 %3, 32
  %21 = ashr exact i64 %20, 32
  %22 = sub nsw i64 %21, %12
  %23 = icmp ult i64 %22, 8
  br i1 %23, label %24, label %26

24:                                               ; preds = %98, %17
  %25 = phi i64 [ %12, %17 ], [ %28, %98 ]
  br label %106

26:                                               ; preds = %17
  %27 = and i64 %22, -8
  %28 = add nsw i64 %27, %12
  %29 = insertelement <4 x i32> undef, i32 %9, i32 0
  %30 = shufflevector <4 x i32> %29, <4 x i32> undef, <4 x i32> zeroinitializer
  %31 = insertelement <4 x i32> undef, i32 %9, i32 0
  %32 = shufflevector <4 x i32> %31, <4 x i32> undef, <4 x i32> zeroinitializer
  %33 = add nsw i64 %27, -8
  %34 = lshr exact i64 %33, 3
  %35 = add nuw nsw i64 %34, 1
  %36 = and i64 %35, 7
  %37 = icmp ult i64 %33, 56
  br i1 %37, label %85, label %38

38:                                               ; preds = %26
  %39 = sub nsw i64 %35, %36
  br label %40

40:                                               ; preds = %40, %38
  %41 = phi i64 [ 0, %38 ], [ %82, %40 ]
  %42 = phi i64 [ %39, %38 ], [ %83, %40 ]
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %41
  %44 = bitcast i32* %43 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %44, align 4
  %45 = getelementptr inbounds i32, i32* %43, i64 4
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %46, align 4
  %47 = or i64 %41, 8
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %47
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %49, align 4
  %50 = getelementptr inbounds i32, i32* %48, i64 4
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %51, align 4
  %52 = or i64 %41, 16
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %52
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %54, align 4
  %55 = getelementptr inbounds i32, i32* %53, i64 4
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %56, align 4
  %57 = or i64 %41, 24
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %57
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %59, align 4
  %60 = getelementptr inbounds i32, i32* %58, i64 4
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %61, align 4
  %62 = or i64 %41, 32
  %63 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %62
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %64, align 4
  %65 = getelementptr inbounds i32, i32* %63, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %66, align 4
  %67 = or i64 %41, 40
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %67
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %69, align 4
  %70 = getelementptr inbounds i32, i32* %68, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %71, align 4
  %72 = or i64 %41, 48
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %72
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %74, align 4
  %75 = getelementptr inbounds i32, i32* %73, i64 4
  %76 = bitcast i32* %75 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %76, align 4
  %77 = or i64 %41, 56
  %78 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %77
  %79 = bitcast i32* %78 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %79, align 4
  %80 = getelementptr inbounds i32, i32* %78, i64 4
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %81, align 4
  %82 = add i64 %41, 64
  %83 = add i64 %42, -8
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %40, !llvm.loop !45

85:                                               ; preds = %40, %26
  %86 = phi i64 [ 0, %26 ], [ %82, %40 ]
  %87 = icmp eq i64 %36, 0
  br i1 %87, label %98, label %88

88:                                               ; preds = %85, %88
  %89 = phi i64 [ %95, %88 ], [ %86, %85 ]
  %90 = phi i64 [ %96, %88 ], [ %36, %85 ]
  %91 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %89
  %92 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %92, align 4
  %93 = getelementptr inbounds i32, i32* %91, i64 4
  %94 = bitcast i32* %93 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %94, align 4
  %95 = add i64 %89, 8
  %96 = add i64 %90, -1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %88, !llvm.loop !46

98:                                               ; preds = %88, %85
  %99 = icmp eq i64 %22, %27
  br i1 %99, label %100, label %24

100:                                              ; preds = %106, %98, %1
  %101 = shl i64 %3, 32
  %102 = ashr exact i64 %101, 32
  %103 = getelementptr inbounds i32, i32* %14, i64 %102
  store i32 1, i32* %103, align 4
  %104 = add nsw i32 %4, 1
  %105 = getelementptr inbounds i32, i32* %15, i64 %102
  store i32 %104, i32* %105, align 4
  br i1 %16, label %111, label %227

106:                                              ; preds = %24, %106
  %107 = phi i64 [ %109, %106 ], [ %25, %24 ]
  %108 = getelementptr inbounds i32, i32* %14, i64 %107
  store i32 %9, i32* %108, align 4
  %109 = add nsw i64 %107, 1
  %110 = icmp eq i64 %109, %19
  br i1 %110, label %100, label %106, !llvm.loop !47

111:                                              ; preds = %100
  %112 = add i64 %101, -4294967296
  %113 = ashr exact i64 %112, 32
  %114 = getelementptr inbounds i8, i8* %6, i64 %113
  %115 = load i8, i8* %114, align 1
  %116 = shl i64 %3, 32
  %117 = ashr exact i64 %116, 32
  br label %118

118:                                              ; preds = %111, %172
  %119 = phi i32 [ %4, %111 ], [ %174, %172 ]
  %120 = phi i32 [ %104, %111 ], [ %173, %172 ]
  %121 = add nsw i32 %119, -1
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds i8, i8* %6, i64 %122
  %124 = load i8, i8* %123, align 1
  %125 = icmp sgt i32 %120, %4
  br i1 %125, label %144, label %126

126:                                              ; preds = %118, %140
  %127 = phi i32 [ %142, %140 ], [ %120, %118 ]
  %128 = add nsw i32 %127, -1
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i8, i8* %6, i64 %129
  %131 = load i8, i8* %130, align 1
  %132 = icmp eq i8 %124, %131
  br i1 %132, label %144, label %133

133:                                              ; preds = %126
  %134 = sext i32 %127 to i64
  %135 = getelementptr inbounds i32, i32* %14, i64 %134
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, %9
  br i1 %137, label %138, label %140

138:                                              ; preds = %133
  %139 = sub nsw i32 %127, %119
  store i32 %139, i32* %135, align 4
  br label %140

140:                                              ; preds = %138, %133
  %141 = getelementptr inbounds i32, i32* %15, i64 %134
  %142 = load i32, i32* %141, align 4
  %143 = icmp sgt i32 %142, %4
  br i1 %143, label %144, label %126

144:                                              ; preds = %140, %126, %118
  %145 = phi i32 [ %120, %118 ], [ %127, %126 ], [ %142, %140 ]
  %146 = add nsw i32 %145, -1
  %147 = getelementptr inbounds i32, i32* %15, i64 %122
  store i32 %146, i32* %147, align 4
  %148 = icmp eq i32 %146, %4
  %149 = icmp sgt i32 %121, %8
  %150 = and i1 %148, %149
  br i1 %150, label %151, label %172

151:                                              ; preds = %144, %163
  %152 = phi i64 [ %153, %163 ], [ %122, %144 ]
  %153 = add nsw i64 %152, -1
  %154 = getelementptr inbounds i8, i8* %6, i64 %153
  %155 = load i8, i8* %154, align 1
  %156 = icmp eq i8 %155, %115
  br i1 %156, label %166, label %157

157:                                              ; preds = %151
  %158 = load i32, i32* %103, align 4
  %159 = icmp eq i32 %158, %9
  br i1 %159, label %160, label %163

160:                                              ; preds = %157
  %161 = sub nsw i64 %117, %152
  %162 = trunc i64 %161 to i32
  store i32 %162, i32* %103, align 4
  br label %163

163:                                              ; preds = %160, %157
  %164 = getelementptr inbounds i32, i32* %15, i64 %153
  store i32 %4, i32* %164, align 4
  %165 = icmp sgt i64 %153, %12
  br i1 %165, label %151, label %170

166:                                              ; preds = %151
  %167 = trunc i64 %153 to i32
  %168 = add nsw i32 %145, -2
  %169 = getelementptr inbounds i32, i32* %15, i64 %153
  store i32 %168, i32* %169, align 4
  br label %172

170:                                              ; preds = %163
  %171 = trunc i64 %153 to i32
  br label %172

172:                                              ; preds = %170, %166, %144
  %173 = phi i32 [ %168, %166 ], [ %146, %144 ], [ %4, %170 ]
  %174 = phi i32 [ %167, %166 ], [ %121, %144 ], [ %171, %170 ]
  %175 = icmp sgt i32 %174, %8
  br i1 %175, label %118, label %176

176:                                              ; preds = %172
  %177 = icmp sge i32 %173, %4
  %178 = icmp sgt i32 %8, %4
  %179 = or i1 %177, %178
  br i1 %179, label %227, label %180

180:                                              ; preds = %176
  %181 = shl i64 %3, 32
  %182 = ashr exact i64 %181, 32
  %183 = add nsw i64 %182, 1
  %184 = sub nsw i64 %183, %12
  %185 = and i64 %184, 1
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %202, label %187

187:                                              ; preds = %180
  %188 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 0
  %189 = load i32, i32* %188, align 4
  %190 = icmp eq i32 %189, %9
  br i1 %190, label %191, label %193

191:                                              ; preds = %187
  %192 = sub nsw i32 %173, %8
  store i32 %192, i32* %188, align 4
  br label %193

193:                                              ; preds = %191, %187
  %194 = icmp eq i32 %173, %8
  br i1 %194, label %195, label %199

195:                                              ; preds = %193
  %196 = sext i32 %173 to i64
  %197 = getelementptr inbounds i32, i32* %15, i64 %196
  %198 = load i32, i32* %197, align 4
  br label %199

199:                                              ; preds = %195, %193
  %200 = phi i32 [ %198, %195 ], [ %173, %193 ]
  %201 = add nsw i64 %12, 1
  br label %202

202:                                              ; preds = %180, %199
  %203 = phi i64 [ %12, %180 ], [ %201, %199 ]
  %204 = phi i32 [ %173, %180 ], [ %200, %199 ]
  %205 = icmp eq i64 %182, %12
  br i1 %205, label %227, label %206

206:                                              ; preds = %202, %237
  %207 = phi i64 [ %239, %237 ], [ %203, %202 ]
  %208 = phi i32 [ %238, %237 ], [ %204, %202 ]
  %209 = getelementptr inbounds i32, i32* %14, i64 %207
  %210 = load i32, i32* %209, align 4
  %211 = icmp eq i32 %210, %9
  br i1 %211, label %212, label %214

212:                                              ; preds = %206
  %213 = sub nsw i32 %208, %8
  store i32 %213, i32* %209, align 4
  br label %214

214:                                              ; preds = %212, %206
  %215 = trunc i64 %207 to i32
  %216 = icmp eq i32 %208, %215
  br i1 %216, label %217, label %221

217:                                              ; preds = %214
  %218 = sext i32 %208 to i64
  %219 = getelementptr inbounds i32, i32* %15, i64 %218
  %220 = load i32, i32* %219, align 4
  br label %221

221:                                              ; preds = %214, %217
  %222 = phi i32 [ %220, %217 ], [ %208, %214 ]
  %223 = add nsw i64 %207, 1
  %224 = getelementptr inbounds i32, i32* %14, i64 %223
  %225 = load i32, i32* %224, align 4
  %226 = icmp eq i32 %225, %9
  br i1 %226, label %228, label %230

227:                                              ; preds = %202, %237, %176, %100
  ret void

228:                                              ; preds = %221
  %229 = sub nsw i32 %222, %8
  store i32 %229, i32* %224, align 4
  br label %230

230:                                              ; preds = %228, %221
  %231 = trunc i64 %223 to i32
  %232 = icmp eq i32 %222, %231
  br i1 %232, label %233, label %237

233:                                              ; preds = %230
  %234 = sext i32 %222 to i64
  %235 = getelementptr inbounds i32, i32* %15, i64 %234
  %236 = load i32, i32* %235, align 4
  br label %237

237:                                              ; preds = %233, %230
  %238 = phi i32 [ %236, %233 ], [ %222, %230 ]
  %239 = add nsw i64 %207, 2
  %240 = icmp slt i64 %223, %117
  br i1 %240, label %206, label %227
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIhhE16BoyerMooreSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch"*, i8*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %2 to i32
  %10 = trunc i64 %8 to i32
  %11 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::StringSearch", %"class.v8::internal::StringSearch"* %0, i64 0, i32 0
  %14 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %13, align 8
  %15 = sext i32 %12 to i64
  %16 = sub nsw i64 0, %15
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 122, i64 %16
  %18 = add nsw i32 %10, -1
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %6, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = sub nsw i32 %9, %10
  %23 = icmp slt i32 %22, %3
  br i1 %23, label %96, label %24

24:                                               ; preds = %4
  %25 = icmp sgt i32 %10, 0
  %26 = zext i8 %21 to i64
  %27 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %26
  br i1 %25, label %28, label %82

28:                                               ; preds = %24
  %29 = shl i64 %8, 32
  %30 = ashr exact i64 %29, 32
  br label %31

31:                                               ; preds = %45, %28
  %32 = phi i32 [ %3, %28 ], [ %46, %45 ]
  %33 = add nsw i32 %32, %18
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds i8, i8* %1, i64 %34
  %36 = load i8, i8* %35, align 1
  %37 = icmp eq i8 %21, %36
  br i1 %37, label %80, label %38

38:                                               ; preds = %31
  %39 = zext i8 %36 to i64
  %40 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %39
  %41 = load i32, i32* %40, align 4
  %42 = sub nsw i32 %18, %41
  %43 = add nsw i32 %42, %32
  %44 = icmp sgt i32 %43, %22
  br i1 %44, label %96, label %45

45:                                               ; preds = %38, %74
  %46 = phi i32 [ %43, %38 ], [ %76, %74 ]
  br label %31

47:                                               ; preds = %80, %78
  %48 = phi i64 [ %30, %80 ], [ %49, %78 ]
  %49 = add i64 %48, -1
  %50 = getelementptr inbounds i8, i8* %6, i64 %49
  %51 = load i8, i8* %50, align 1
  %52 = add nsw i64 %49, %81
  %53 = getelementptr inbounds i8, i8* %1, i64 %52
  %54 = load i8, i8* %53, align 1
  %55 = icmp eq i8 %51, %54
  br i1 %55, label %78, label %56

56:                                               ; preds = %47
  %57 = trunc i64 %49 to i32
  %58 = icmp sgt i32 %12, %57
  br i1 %58, label %71, label %59

59:                                               ; preds = %56
  %60 = shl i64 %49, 32
  %61 = add i64 %60, 4294967296
  %62 = ashr exact i64 %61, 32
  %63 = getelementptr inbounds i32, i32* %17, i64 %62
  %64 = load i32, i32* %63, align 4
  %65 = zext i8 %54 to i64
  %66 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %65
  %67 = load i32, i32* %66, align 4
  %68 = sub nsw i32 %57, %67
  %69 = icmp sgt i32 %64, %68
  %70 = select i1 %69, i32 %64, i32 %68
  br label %74

71:                                               ; preds = %56
  %72 = load i32, i32* %27, align 4
  %73 = sub nsw i32 %18, %72
  br label %74

74:                                               ; preds = %71, %59
  %75 = phi i32 [ %73, %71 ], [ %70, %59 ]
  %76 = add nsw i32 %75, %32
  %77 = icmp sgt i32 %76, %22
  br i1 %77, label %96, label %45

78:                                               ; preds = %47
  %79 = icmp sgt i64 %49, 0
  br i1 %79, label %47, label %96

80:                                               ; preds = %31
  %81 = sext i32 %32 to i64
  br label %47

82:                                               ; preds = %24, %89
  %83 = phi i32 [ %94, %89 ], [ %3, %24 ]
  %84 = add nsw i32 %83, %18
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds i8, i8* %1, i64 %85
  %87 = load i8, i8* %86, align 1
  %88 = icmp eq i8 %21, %87
  br i1 %88, label %96, label %89

89:                                               ; preds = %82
  %90 = zext i8 %87 to i64
  %91 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %90
  %92 = load i32, i32* %91, align 4
  %93 = sub nsw i32 %18, %92
  %94 = add nsw i32 %93, %83
  %95 = icmp sgt i32 %94, %22
  br i1 %95, label %96, label %82

96:                                               ; preds = %89, %82, %74, %38, %78, %4
  %97 = phi i32 [ -1, %4 ], [ %32, %78 ], [ -1, %38 ], [ -1, %74 ], [ %83, %82 ], [ -1, %89 ]
  ret i32 %97
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIhtE16SingleCharSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1200"*, i16*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1200", %"class.v8::internal::StringSearch.1200"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1200", %"class.v8::internal::StringSearch.1200"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = load i8, i8* %6, align 1
  %10 = trunc i64 %2 to i32
  %11 = trunc i64 %8 to i32
  %12 = sub nsw i32 %10, %11
  %13 = add nsw i32 %12, 1
  %14 = icmp eq i8 %9, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %4
  %16 = zext i8 %9 to i32
  %17 = ptrtoint i16* %1 to i64
  br label %33

18:                                               ; preds = %4
  %19 = icmp slt i32 %12, %3
  br i1 %19, label %60, label %20

20:                                               ; preds = %18
  %21 = sext i32 %3 to i64
  %22 = sext i32 %12 to i64
  br label %23

23:                                               ; preds = %28, %20
  %24 = phi i64 [ %21, %20 ], [ %29, %28 ]
  %25 = getelementptr inbounds i16, i16* %1, i64 %24
  %26 = load i16, i16* %25, align 2
  %27 = icmp eq i16 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %23
  %29 = add nsw i64 %24, 1
  %30 = icmp slt i64 %24, %22
  br i1 %30, label %23, label %60

31:                                               ; preds = %23
  %32 = trunc i64 %24 to i32
  br label %60

33:                                               ; preds = %55, %15
  %34 = phi i32 [ %56, %55 ], [ %3, %15 ]
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %1, i64 %35
  %37 = bitcast i16* %36 to i8*
  %38 = sub i32 %13, %34
  %39 = sext i32 %38 to i64
  %40 = shl nsw i64 %39, 1
  %41 = tail call i8* @memchr(i8* %37, i32 %16, i64 %40) #20
  %42 = icmp eq i8* %41, null
  br i1 %42, label %60, label %43

43:                                               ; preds = %33
  %44 = ptrtoint i8* %41 to i64
  %45 = and i64 %44, -2
  %46 = sub i64 %45, %17
  %47 = lshr exact i64 %46, 1
  %48 = trunc i64 %47 to i32
  %49 = shl i64 %46, 31
  %50 = ashr exact i64 %49, 32
  %51 = getelementptr inbounds i16, i16* %1, i64 %50
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i32
  %54 = icmp eq i32 %53, %16
  br i1 %54, label %58, label %55

55:                                               ; preds = %43
  %56 = add nsw i32 %48, 1
  %57 = icmp sgt i32 %12, %48
  br i1 %57, label %33, label %60

58:                                               ; preds = %43
  %59 = trunc i64 %47 to i32
  br label %60

60:                                               ; preds = %33, %55, %28, %58, %18, %31
  %61 = phi i32 [ -1, %18 ], [ %32, %31 ], [ %59, %58 ], [ -1, %28 ], [ -1, %55 ], [ -1, %33 ]
  ret i32 %61
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIhtE12LinearSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1200"*, i16*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1200", %"class.v8::internal::StringSearch.1200"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1200", %"class.v8::internal::StringSearch.1200"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = trunc i64 %2 to i32
  %11 = sub nsw i32 %10, %9
  %12 = icmp slt i32 %11, %3
  br i1 %12, label %108, label %13

13:                                               ; preds = %4
  %14 = load i8, i8* %6, align 1
  %15 = add nsw i32 %11, 1
  %16 = icmp eq i8 %14, 0
  %17 = zext i8 %14 to i32
  %18 = ptrtoint i16* %1 to i64
  %19 = sext i32 %11 to i64
  %20 = getelementptr inbounds i8, i8* %6, i64 1
  %21 = shl i64 %8, 32
  %22 = add i64 %21, -4294967296
  %23 = ashr exact i64 %22, 32
  br i1 %16, label %24, label %58

24:                                               ; preds = %13, %54
  %25 = phi i32 [ %39, %54 ], [ %3, %13 ]
  %26 = sext i32 %25 to i64
  br label %27

27:                                               ; preds = %32, %24
  %28 = phi i64 [ %26, %24 ], [ %33, %32 ]
  %29 = getelementptr inbounds i16, i16* %1, i64 %28
  %30 = load i16, i16* %29, align 2
  %31 = icmp eq i16 %30, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %27
  %33 = add nsw i64 %28, 1
  %34 = icmp slt i64 %28, %19
  br i1 %34, label %27, label %108

35:                                               ; preds = %27
  %36 = trunc i64 %28 to i32
  %37 = icmp eq i32 %36, -1
  br i1 %37, label %108, label %38

38:                                               ; preds = %35
  %39 = add nuw nsw i32 %36, 1
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i16, i16* %1, i64 %40
  br label %42

42:                                               ; preds = %51, %38
  %43 = phi i64 [ %52, %51 ], [ 0, %38 ]
  %44 = getelementptr inbounds i8, i8* %20, i64 %43
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = getelementptr inbounds i16, i16* %41, i64 %43
  %48 = load i16, i16* %47, align 2
  %49 = zext i16 %48 to i32
  %50 = icmp eq i32 %46, %49
  br i1 %50, label %51, label %54

51:                                               ; preds = %42
  %52 = add nuw nsw i64 %43, 1
  %53 = icmp slt i64 %52, %23
  br i1 %53, label %42, label %104

54:                                               ; preds = %42
  %55 = icmp sgt i32 %11, %36
  br i1 %55, label %24, label %108

56:                                               ; preds = %92
  %57 = icmp sgt i32 %11, %86
  br i1 %57, label %83, label %108

58:                                               ; preds = %13, %83
  %59 = phi i32 [ %84, %83 ], [ %3, %13 ]
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i16, i16* %1, i64 %60
  %62 = bitcast i16* %61 to i8*
  %63 = sub i32 %15, %59
  %64 = sext i32 %63 to i64
  %65 = shl nsw i64 %64, 1
  %66 = tail call i8* @memchr(i8* %62, i32 %17, i64 %65) #20
  %67 = icmp eq i8* %66, null
  br i1 %67, label %108, label %68

68:                                               ; preds = %58
  %69 = ptrtoint i8* %66 to i64
  %70 = and i64 %69, -2
  %71 = sub i64 %70, %18
  %72 = lshr exact i64 %71, 1
  %73 = trunc i64 %72 to i32
  %74 = shl i64 %71, 31
  %75 = ashr exact i64 %74, 32
  %76 = getelementptr inbounds i16, i16* %1, i64 %75
  %77 = load i16, i16* %76, align 2
  %78 = zext i16 %77 to i32
  %79 = icmp eq i32 %78, %17
  br i1 %79, label %85, label %80

80:                                               ; preds = %68
  %81 = add nsw i32 %73, 1
  %82 = icmp sgt i32 %11, %73
  br i1 %82, label %83, label %108

83:                                               ; preds = %80, %56
  %84 = phi i32 [ %81, %80 ], [ %89, %56 ]
  br label %58

85:                                               ; preds = %68
  %86 = trunc i64 %72 to i32
  %87 = icmp eq i32 %86, -1
  br i1 %87, label %108, label %88

88:                                               ; preds = %85
  %89 = add nuw nsw i32 %86, 1
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds i16, i16* %1, i64 %90
  br label %92

92:                                               ; preds = %101, %88
  %93 = phi i64 [ %102, %101 ], [ 0, %88 ]
  %94 = getelementptr inbounds i8, i8* %20, i64 %93
  %95 = load i8, i8* %94, align 1
  %96 = zext i8 %95 to i32
  %97 = getelementptr inbounds i16, i16* %91, i64 %93
  %98 = load i16, i16* %97, align 2
  %99 = zext i16 %98 to i32
  %100 = icmp eq i32 %96, %99
  br i1 %100, label %101, label %56

101:                                              ; preds = %92
  %102 = add nuw nsw i64 %93, 1
  %103 = icmp slt i64 %102, %23
  br i1 %103, label %92, label %106

104:                                              ; preds = %51
  %105 = trunc i64 %28 to i32
  br label %108

106:                                              ; preds = %101
  %107 = trunc i64 %72 to i32
  br label %108

108:                                              ; preds = %56, %85, %80, %58, %54, %35, %32, %106, %104, %4
  %109 = phi i32 [ -1, %4 ], [ %105, %104 ], [ %107, %106 ], [ -1, %32 ], [ -1, %35 ], [ -1, %54 ], [ -1, %58 ], [ -1, %80 ], [ -1, %85 ], [ -1, %56 ]
  ret i32 %109
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIhtE13InitialSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1200"*, i16*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1200", %"class.v8::internal::StringSearch.1200"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1200", %"class.v8::internal::StringSearch.1200"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = trunc i64 %2 to i32
  %11 = sub nsw i32 %10, %9
  %12 = icmp slt i32 %11, %3
  br i1 %12, label %302, label %13

13:                                               ; preds = %4
  %14 = shl i32 %9, 2
  %15 = sub nsw i32 -10, %14
  %16 = add nsw i32 %11, 1
  %17 = ptrtoint i16* %1 to i64
  %18 = sext i32 %11 to i64
  %19 = shl i64 %8, 32
  %20 = ashr exact i64 %19, 32
  br label %21

21:                                               ; preds = %296, %13
  %22 = phi i32 [ %15, %13 ], [ %297, %296 ]
  %23 = phi i32 [ %3, %13 ], [ %298, %296 ]
  %24 = add nsw i32 %22, 1
  %25 = icmp slt i32 %22, 0
  br i1 %25, label %26, label %93

26:                                               ; preds = %21
  %27 = load i8, i8* %6, align 1
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %26
  %30 = zext i8 %27 to i32
  br label %41

31:                                               ; preds = %26
  %32 = sext i32 %23 to i64
  br label %33

33:                                               ; preds = %38, %31
  %34 = phi i64 [ %32, %31 ], [ %39, %38 ]
  %35 = getelementptr inbounds i16, i16* %1, i64 %34
  %36 = load i16, i16* %35, align 2
  %37 = icmp eq i16 %36, 0
  br i1 %37, label %66, label %38

38:                                               ; preds = %33
  %39 = add nsw i64 %34, 1
  %40 = icmp slt i64 %34, %18
  br i1 %40, label %33, label %302

41:                                               ; preds = %63, %29
  %42 = phi i32 [ %64, %63 ], [ %23, %29 ]
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i16, i16* %1, i64 %43
  %45 = bitcast i16* %44 to i8*
  %46 = sub i32 %16, %42
  %47 = sext i32 %46 to i64
  %48 = shl nsw i64 %47, 1
  %49 = tail call i8* @memchr(i8* %45, i32 %30, i64 %48) #20
  %50 = icmp eq i8* %49, null
  br i1 %50, label %302, label %51

51:                                               ; preds = %41
  %52 = ptrtoint i8* %49 to i64
  %53 = and i64 %52, -2
  %54 = sub i64 %53, %17
  %55 = lshr exact i64 %54, 1
  %56 = trunc i64 %55 to i32
  %57 = shl i64 %54, 31
  %58 = ashr exact i64 %57, 32
  %59 = getelementptr inbounds i16, i16* %1, i64 %58
  %60 = load i16, i16* %59, align 2
  %61 = zext i16 %60 to i32
  %62 = icmp eq i32 %61, %30
  br i1 %62, label %66, label %63

63:                                               ; preds = %51
  %64 = add nsw i32 %56, 1
  %65 = icmp sgt i32 %11, %56
  br i1 %65, label %41, label %302

66:                                               ; preds = %51, %33
  %67 = phi i64 [ %34, %33 ], [ %55, %51 ]
  %68 = trunc i64 %67 to i32
  %69 = icmp eq i32 %68, -1
  br i1 %69, label %302, label %70

70:                                               ; preds = %66
  %71 = shl i64 %67, 32
  %72 = ashr exact i64 %71, 32
  br label %73

73:                                               ; preds = %70, %84
  %74 = phi i64 [ 1, %70 ], [ %85, %84 ]
  %75 = phi i32 [ 1, %70 ], [ %86, %84 ]
  %76 = getelementptr inbounds i8, i8* %6, i64 %74
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i32
  %79 = add nsw i64 %74, %72
  %80 = getelementptr inbounds i16, i16* %1, i64 %79
  %81 = load i16, i16* %80, align 2
  %82 = zext i16 %81 to i32
  %83 = icmp eq i32 %78, %82
  br i1 %83, label %84, label %88

84:                                               ; preds = %73
  %85 = add nuw nsw i64 %74, 1
  %86 = add nuw nsw i32 %75, 1
  %87 = icmp slt i64 %85, %20
  br i1 %87, label %73, label %90

88:                                               ; preds = %73
  %89 = trunc i64 %74 to i32
  br label %90

90:                                               ; preds = %84, %88
  %91 = phi i32 [ %89, %88 ], [ %86, %84 ]
  %92 = icmp eq i32 %91, %9
  br i1 %92, label %300, label %296

93:                                               ; preds = %21
  %94 = getelementptr inbounds %"class.v8::internal::StringSearch.1200", %"class.v8::internal::StringSearch.1200"* %0, i64 0, i32 0
  %95 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %94, align 8
  %96 = getelementptr inbounds %"class.v8::internal::StringSearch.1200", %"class.v8::internal::StringSearch.1200"* %0, i64 0, i32 3
  %97 = load i32, i32* %96, align 8
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %233, label %99

99:                                               ; preds = %93
  %100 = add nsw i32 %97, -1
  %101 = insertelement <4 x i32> undef, i32 %100, i32 0
  %102 = shufflevector <4 x i32> %101, <4 x i32> undef, <4 x i32> zeroinitializer
  %103 = insertelement <4 x i32> undef, i32 %100, i32 0
  %104 = shufflevector <4 x i32> %103, <4 x i32> undef, <4 x i32> zeroinitializer
  %105 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 0
  %106 = bitcast i32* %105 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %106, align 4
  %107 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 4
  %108 = bitcast i32* %107 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %108, align 4
  %109 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 8
  %110 = bitcast i32* %109 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %110, align 4
  %111 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 12
  %112 = bitcast i32* %111 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %112, align 4
  %113 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 16
  %114 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %114, align 4
  %115 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 20
  %116 = bitcast i32* %115 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %116, align 4
  %117 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 24
  %118 = bitcast i32* %117 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %118, align 4
  %119 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 28
  %120 = bitcast i32* %119 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %120, align 4
  %121 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 32
  %122 = bitcast i32* %121 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %122, align 4
  %123 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 36
  %124 = bitcast i32* %123 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %124, align 4
  %125 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 40
  %126 = bitcast i32* %125 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %126, align 4
  %127 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 44
  %128 = bitcast i32* %127 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %128, align 4
  %129 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 48
  %130 = bitcast i32* %129 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %130, align 4
  %131 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 52
  %132 = bitcast i32* %131 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %132, align 4
  %133 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 56
  %134 = bitcast i32* %133 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %134, align 4
  %135 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 60
  %136 = bitcast i32* %135 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %136, align 4
  %137 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 64
  %138 = bitcast i32* %137 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %138, align 4
  %139 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 68
  %140 = bitcast i32* %139 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %140, align 4
  %141 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 72
  %142 = bitcast i32* %141 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %142, align 4
  %143 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 76
  %144 = bitcast i32* %143 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %144, align 4
  %145 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 80
  %146 = bitcast i32* %145 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %146, align 4
  %147 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 84
  %148 = bitcast i32* %147 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %148, align 4
  %149 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 88
  %150 = bitcast i32* %149 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %150, align 4
  %151 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 92
  %152 = bitcast i32* %151 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %152, align 4
  %153 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 96
  %154 = bitcast i32* %153 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %154, align 4
  %155 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 100
  %156 = bitcast i32* %155 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %156, align 4
  %157 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 104
  %158 = bitcast i32* %157 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %158, align 4
  %159 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 108
  %160 = bitcast i32* %159 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %160, align 4
  %161 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 112
  %162 = bitcast i32* %161 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %162, align 4
  %163 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 116
  %164 = bitcast i32* %163 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %164, align 4
  %165 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 120
  %166 = bitcast i32* %165 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %166, align 4
  %167 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 124
  %168 = bitcast i32* %167 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %168, align 4
  %169 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 128
  %170 = bitcast i32* %169 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %170, align 4
  %171 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 132
  %172 = bitcast i32* %171 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %172, align 4
  %173 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 136
  %174 = bitcast i32* %173 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %174, align 4
  %175 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 140
  %176 = bitcast i32* %175 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %176, align 4
  %177 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 144
  %178 = bitcast i32* %177 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %178, align 4
  %179 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 148
  %180 = bitcast i32* %179 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %180, align 4
  %181 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 152
  %182 = bitcast i32* %181 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %182, align 4
  %183 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 156
  %184 = bitcast i32* %183 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %184, align 4
  %185 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 160
  %186 = bitcast i32* %185 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %186, align 4
  %187 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 164
  %188 = bitcast i32* %187 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %188, align 4
  %189 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 168
  %190 = bitcast i32* %189 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %190, align 4
  %191 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 172
  %192 = bitcast i32* %191 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %192, align 4
  %193 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 176
  %194 = bitcast i32* %193 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %194, align 4
  %195 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 180
  %196 = bitcast i32* %195 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %196, align 4
  %197 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 184
  %198 = bitcast i32* %197 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %198, align 4
  %199 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 188
  %200 = bitcast i32* %199 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %200, align 4
  %201 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 192
  %202 = bitcast i32* %201 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %202, align 4
  %203 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 196
  %204 = bitcast i32* %203 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %204, align 4
  %205 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 200
  %206 = bitcast i32* %205 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %206, align 4
  %207 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 204
  %208 = bitcast i32* %207 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %208, align 4
  %209 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 208
  %210 = bitcast i32* %209 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %210, align 4
  %211 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 212
  %212 = bitcast i32* %211 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %212, align 4
  %213 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 216
  %214 = bitcast i32* %213 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %214, align 4
  %215 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 220
  %216 = bitcast i32* %215 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %216, align 4
  %217 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 224
  %218 = bitcast i32* %217 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %218, align 4
  %219 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 228
  %220 = bitcast i32* %219 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %220, align 4
  %221 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 232
  %222 = bitcast i32* %221 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %222, align 4
  %223 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 236
  %224 = bitcast i32* %223 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %224, align 4
  %225 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 240
  %226 = bitcast i32* %225 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %226, align 4
  %227 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 244
  %228 = bitcast i32* %227 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %228, align 4
  %229 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 248
  %230 = bitcast i32* %229 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %230, align 4
  %231 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 252
  %232 = bitcast i32* %231 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %232, align 4
  br label %236

233:                                              ; preds = %93
  %234 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 0
  %235 = bitcast i32* %234 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %235, i8 -1, i64 1024, i1 false) #7
  br label %236

236:                                              ; preds = %99, %233
  %237 = add i32 %9, -1
  %238 = icmp slt i32 %97, %237
  br i1 %238, label %239, label %293

239:                                              ; preds = %236
  %240 = sext i32 %97 to i64
  %241 = sext i32 %237 to i64
  %242 = sub nsw i64 %241, %240
  %243 = xor i64 %240, -1
  %244 = add nsw i64 %243, %241
  %245 = and i64 %242, 3
  %246 = icmp eq i64 %245, 0
  br i1 %246, label %259, label %247

247:                                              ; preds = %239, %247
  %248 = phi i64 [ %256, %247 ], [ %240, %239 ]
  %249 = phi i64 [ %257, %247 ], [ %245, %239 ]
  %250 = load i8*, i8** %5, align 8
  %251 = getelementptr inbounds i8, i8* %250, i64 %248
  %252 = load i8, i8* %251, align 1
  %253 = zext i8 %252 to i64
  %254 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 %253
  %255 = trunc i64 %248 to i32
  store i32 %255, i32* %254, align 4
  %256 = add nsw i64 %248, 1
  %257 = add i64 %249, -1
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %259, label %247, !llvm.loop !49

259:                                              ; preds = %247, %239
  %260 = phi i64 [ %240, %239 ], [ %256, %247 ]
  %261 = icmp ult i64 %244, 3
  br i1 %261, label %293, label %262

262:                                              ; preds = %259, %262
  %263 = phi i64 [ %291, %262 ], [ %260, %259 ]
  %264 = load i8*, i8** %5, align 8
  %265 = getelementptr inbounds i8, i8* %264, i64 %263
  %266 = load i8, i8* %265, align 1
  %267 = zext i8 %266 to i64
  %268 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 %267
  %269 = trunc i64 %263 to i32
  store i32 %269, i32* %268, align 4
  %270 = add nsw i64 %263, 1
  %271 = load i8*, i8** %5, align 8
  %272 = getelementptr inbounds i8, i8* %271, i64 %270
  %273 = load i8, i8* %272, align 1
  %274 = zext i8 %273 to i64
  %275 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 %274
  %276 = trunc i64 %270 to i32
  store i32 %276, i32* %275, align 4
  %277 = add nsw i64 %263, 2
  %278 = load i8*, i8** %5, align 8
  %279 = getelementptr inbounds i8, i8* %278, i64 %277
  %280 = load i8, i8* %279, align 1
  %281 = zext i8 %280 to i64
  %282 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 %281
  %283 = trunc i64 %277 to i32
  store i32 %283, i32* %282, align 4
  %284 = add nsw i64 %263, 3
  %285 = load i8*, i8** %5, align 8
  %286 = getelementptr inbounds i8, i8* %285, i64 %284
  %287 = load i8, i8* %286, align 1
  %288 = zext i8 %287 to i64
  %289 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 121, i64 %288
  %290 = trunc i64 %284 to i32
  store i32 %290, i32* %289, align 4
  %291 = add nsw i64 %263, 4
  %292 = icmp eq i64 %291, %241
  br i1 %292, label %293, label %262

293:                                              ; preds = %259, %262, %236
  %294 = getelementptr inbounds %"class.v8::internal::StringSearch.1200", %"class.v8::internal::StringSearch.1200"* %0, i64 0, i32 2
  store i32 (%"class.v8::internal::StringSearch.1200"*, i16*, i64, i32)* @_ZN2v88internal12StringSearchIhtE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKtEEi, i32 (%"class.v8::internal::StringSearch.1200"*, i16*, i64, i32)** %294, align 8
  %295 = tail call i32 @_ZN2v88internal12StringSearchIhtE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1200"* %0, i16* %1, i64 %2, i32 %23)
  br label %302

296:                                              ; preds = %90
  %297 = add nsw i32 %24, %91
  %298 = add nsw i32 %68, 1
  %299 = icmp sgt i32 %11, %68
  br i1 %299, label %21, label %302

300:                                              ; preds = %90
  %301 = trunc i64 %67 to i32
  br label %302

302:                                              ; preds = %300, %66, %296, %63, %41, %38, %4, %293
  %303 = phi i32 [ %295, %293 ], [ -1, %4 ], [ -1, %38 ], [ -1, %41 ], [ -1, %63 ], [ %301, %300 ], [ -1, %66 ], [ -1, %296 ]
  ret i32 %303
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIhtE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1200"*, i16*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1200", %"class.v8::internal::StringSearch.1200"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1200", %"class.v8::internal::StringSearch.1200"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %2 to i32
  %10 = trunc i64 %8 to i32
  %11 = getelementptr inbounds %"class.v8::internal::StringSearch.1200", %"class.v8::internal::StringSearch.1200"* %0, i64 0, i32 0
  %12 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %13 = add nsw i32 %10, -1
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i8, i8* %6, i64 %14
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 121, i64 %17
  %19 = load i32, i32* %18, align 4
  %20 = sub nsw i32 %13, %19
  %21 = sub nsw i32 %9, %10
  %22 = zext i8 %16 to i32
  %23 = add i32 %10, -2
  %24 = icmp sgt i32 %23, -1
  %25 = sub i32 %10, %20
  br i1 %24, label %26, label %76

26:                                               ; preds = %4
  %27 = sub nsw i32 0, %10
  %28 = sext i32 %23 to i64
  br label %29

29:                                               ; preds = %26, %65
  %30 = phi i32 [ %67, %65 ], [ %3, %26 ]
  %31 = phi i32 [ %69, %65 ], [ %27, %26 ]
  %32 = icmp sgt i32 %30, %21
  br i1 %32, label %100, label %33

33:                                               ; preds = %29, %48
  %34 = phi i32 [ %51, %48 ], [ %30, %29 ]
  %35 = phi i32 [ %53, %48 ], [ %31, %29 ]
  %36 = add nsw i32 %34, %13
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i16, i16* %1, i64 %37
  %39 = load i16, i16* %38, align 2
  %40 = zext i16 %39 to i32
  %41 = icmp eq i32 %22, %40
  br i1 %41, label %74, label %42

42:                                               ; preds = %33
  %43 = icmp ugt i16 %39, 255
  br i1 %43, label %48, label %44

44:                                               ; preds = %42
  %45 = zext i16 %39 to i64
  %46 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 121, i64 %45
  %47 = load i32, i32* %46, align 4
  br label %48

48:                                               ; preds = %44, %42
  %49 = phi i32 [ %47, %44 ], [ -1, %42 ]
  %50 = sub nsw i32 %13, %49
  %51 = add nsw i32 %50, %34
  %52 = add i32 %35, 1
  %53 = sub i32 %52, %50
  %54 = icmp sgt i32 %51, %21
  br i1 %54, label %100, label %33

55:                                               ; preds = %74, %71
  %56 = phi i64 [ %28, %74 ], [ %72, %71 ]
  %57 = getelementptr inbounds i8, i8* %6, i64 %56
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i32
  %60 = add nsw i64 %56, %75
  %61 = getelementptr inbounds i16, i16* %1, i64 %60
  %62 = load i16, i16* %61, align 2
  %63 = zext i16 %62 to i32
  %64 = icmp eq i32 %59, %63
  br i1 %64, label %71, label %65

65:                                               ; preds = %55
  %66 = trunc i64 %56 to i32
  %67 = add nsw i32 %34, %20
  %68 = add i32 %25, %35
  %69 = sub i32 %68, %66
  %70 = icmp sgt i32 %69, 0
  br i1 %70, label %97, label %29

71:                                               ; preds = %55
  %72 = add nsw i64 %56, -1
  %73 = icmp sgt i64 %56, 0
  br i1 %73, label %55, label %100

74:                                               ; preds = %33
  %75 = sext i32 %34 to i64
  br label %55

76:                                               ; preds = %4
  %77 = icmp slt i32 %21, %3
  br i1 %77, label %100, label %78

78:                                               ; preds = %76, %92
  %79 = phi i32 [ %95, %92 ], [ %3, %76 ]
  %80 = add nsw i32 %79, %13
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds i16, i16* %1, i64 %81
  %83 = load i16, i16* %82, align 2
  %84 = zext i16 %83 to i32
  %85 = icmp eq i32 %22, %84
  br i1 %85, label %100, label %86

86:                                               ; preds = %78
  %87 = icmp ugt i16 %83, 255
  br i1 %87, label %92, label %88

88:                                               ; preds = %86
  %89 = zext i16 %83 to i64
  %90 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 121, i64 %89
  %91 = load i32, i32* %90, align 4
  br label %92

92:                                               ; preds = %86, %88
  %93 = phi i32 [ %91, %88 ], [ -1, %86 ]
  %94 = sub nsw i32 %13, %93
  %95 = add nsw i32 %94, %79
  %96 = icmp sgt i32 %95, %21
  br i1 %96, label %100, label %78

97:                                               ; preds = %65
  tail call void @_ZN2v88internal12StringSearchIhtE23PopulateBoyerMooreTableEv(%"class.v8::internal::StringSearch.1200"* %0)
  %98 = getelementptr inbounds %"class.v8::internal::StringSearch.1200", %"class.v8::internal::StringSearch.1200"* %0, i64 0, i32 2
  store i32 (%"class.v8::internal::StringSearch.1200"*, i16*, i64, i32)* @_ZN2v88internal12StringSearchIhtE16BoyerMooreSearchEPS2_NS0_6VectorIKtEEi, i32 (%"class.v8::internal::StringSearch.1200"*, i16*, i64, i32)** %98, align 8
  %99 = tail call i32 @_ZN2v88internal12StringSearchIhtE16BoyerMooreSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1200"* %0, i16* %1, i64 %2, i32 %67)
  br label %100

100:                                              ; preds = %92, %78, %29, %48, %71, %76, %97
  %101 = phi i32 [ %99, %97 ], [ -1, %76 ], [ %34, %71 ], [ -1, %48 ], [ -1, %29 ], [ %79, %78 ], [ -1, %92 ]
  ret i32 %101
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12StringSearchIhtE23PopulateBoyerMooreTableEv(%"class.v8::internal::StringSearch.1200"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::StringSearch.1200", %"class.v8::internal::StringSearch.1200"* %0, i64 0, i32 1, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = trunc i64 %3 to i32
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1200", %"class.v8::internal::StringSearch.1200"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1200", %"class.v8::internal::StringSearch.1200"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = sub nsw i32 %4, %8
  %10 = getelementptr inbounds %"class.v8::internal::StringSearch.1200", %"class.v8::internal::StringSearch.1200"* %0, i64 0, i32 0
  %11 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %12 = sext i32 %8 to i64
  %13 = sub nsw i64 0, %12
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %13
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 123, i64 %13
  %16 = icmp slt i32 %8, %4
  br i1 %16, label %17, label %100

17:                                               ; preds = %1
  %18 = shl i64 %3, 32
  %19 = ashr exact i64 %18, 32
  %20 = shl i64 %3, 32
  %21 = ashr exact i64 %20, 32
  %22 = sub nsw i64 %21, %12
  %23 = icmp ult i64 %22, 8
  br i1 %23, label %24, label %26

24:                                               ; preds = %98, %17
  %25 = phi i64 [ %12, %17 ], [ %28, %98 ]
  br label %106

26:                                               ; preds = %17
  %27 = and i64 %22, -8
  %28 = add nsw i64 %27, %12
  %29 = insertelement <4 x i32> undef, i32 %9, i32 0
  %30 = shufflevector <4 x i32> %29, <4 x i32> undef, <4 x i32> zeroinitializer
  %31 = insertelement <4 x i32> undef, i32 %9, i32 0
  %32 = shufflevector <4 x i32> %31, <4 x i32> undef, <4 x i32> zeroinitializer
  %33 = add nsw i64 %27, -8
  %34 = lshr exact i64 %33, 3
  %35 = add nuw nsw i64 %34, 1
  %36 = and i64 %35, 7
  %37 = icmp ult i64 %33, 56
  br i1 %37, label %85, label %38

38:                                               ; preds = %26
  %39 = sub nsw i64 %35, %36
  br label %40

40:                                               ; preds = %40, %38
  %41 = phi i64 [ 0, %38 ], [ %82, %40 ]
  %42 = phi i64 [ %39, %38 ], [ %83, %40 ]
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %41
  %44 = bitcast i32* %43 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %44, align 4
  %45 = getelementptr inbounds i32, i32* %43, i64 4
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %46, align 4
  %47 = or i64 %41, 8
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %47
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %49, align 4
  %50 = getelementptr inbounds i32, i32* %48, i64 4
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %51, align 4
  %52 = or i64 %41, 16
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %52
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %54, align 4
  %55 = getelementptr inbounds i32, i32* %53, i64 4
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %56, align 4
  %57 = or i64 %41, 24
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %57
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %59, align 4
  %60 = getelementptr inbounds i32, i32* %58, i64 4
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %61, align 4
  %62 = or i64 %41, 32
  %63 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %62
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %64, align 4
  %65 = getelementptr inbounds i32, i32* %63, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %66, align 4
  %67 = or i64 %41, 40
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %67
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %69, align 4
  %70 = getelementptr inbounds i32, i32* %68, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %71, align 4
  %72 = or i64 %41, 48
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %72
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %74, align 4
  %75 = getelementptr inbounds i32, i32* %73, i64 4
  %76 = bitcast i32* %75 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %76, align 4
  %77 = or i64 %41, 56
  %78 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %77
  %79 = bitcast i32* %78 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %79, align 4
  %80 = getelementptr inbounds i32, i32* %78, i64 4
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %81, align 4
  %82 = add i64 %41, 64
  %83 = add i64 %42, -8
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %40, !llvm.loop !50

85:                                               ; preds = %40, %26
  %86 = phi i64 [ 0, %26 ], [ %82, %40 ]
  %87 = icmp eq i64 %36, 0
  br i1 %87, label %98, label %88

88:                                               ; preds = %85, %88
  %89 = phi i64 [ %95, %88 ], [ %86, %85 ]
  %90 = phi i64 [ %96, %88 ], [ %36, %85 ]
  %91 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %89
  %92 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %92, align 4
  %93 = getelementptr inbounds i32, i32* %91, i64 4
  %94 = bitcast i32* %93 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %94, align 4
  %95 = add i64 %89, 8
  %96 = add i64 %90, -1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %88, !llvm.loop !51

98:                                               ; preds = %88, %85
  %99 = icmp eq i64 %22, %27
  br i1 %99, label %100, label %24

100:                                              ; preds = %106, %98, %1
  %101 = shl i64 %3, 32
  %102 = ashr exact i64 %101, 32
  %103 = getelementptr inbounds i32, i32* %14, i64 %102
  store i32 1, i32* %103, align 4
  %104 = add nsw i32 %4, 1
  %105 = getelementptr inbounds i32, i32* %15, i64 %102
  store i32 %104, i32* %105, align 4
  br i1 %16, label %111, label %227

106:                                              ; preds = %24, %106
  %107 = phi i64 [ %109, %106 ], [ %25, %24 ]
  %108 = getelementptr inbounds i32, i32* %14, i64 %107
  store i32 %9, i32* %108, align 4
  %109 = add nsw i64 %107, 1
  %110 = icmp eq i64 %109, %19
  br i1 %110, label %100, label %106, !llvm.loop !52

111:                                              ; preds = %100
  %112 = add i64 %101, -4294967296
  %113 = ashr exact i64 %112, 32
  %114 = getelementptr inbounds i8, i8* %6, i64 %113
  %115 = load i8, i8* %114, align 1
  %116 = shl i64 %3, 32
  %117 = ashr exact i64 %116, 32
  br label %118

118:                                              ; preds = %111, %172
  %119 = phi i32 [ %4, %111 ], [ %174, %172 ]
  %120 = phi i32 [ %104, %111 ], [ %173, %172 ]
  %121 = add nsw i32 %119, -1
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds i8, i8* %6, i64 %122
  %124 = load i8, i8* %123, align 1
  %125 = icmp sgt i32 %120, %4
  br i1 %125, label %144, label %126

126:                                              ; preds = %118, %140
  %127 = phi i32 [ %142, %140 ], [ %120, %118 ]
  %128 = add nsw i32 %127, -1
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i8, i8* %6, i64 %129
  %131 = load i8, i8* %130, align 1
  %132 = icmp eq i8 %124, %131
  br i1 %132, label %144, label %133

133:                                              ; preds = %126
  %134 = sext i32 %127 to i64
  %135 = getelementptr inbounds i32, i32* %14, i64 %134
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, %9
  br i1 %137, label %138, label %140

138:                                              ; preds = %133
  %139 = sub nsw i32 %127, %119
  store i32 %139, i32* %135, align 4
  br label %140

140:                                              ; preds = %138, %133
  %141 = getelementptr inbounds i32, i32* %15, i64 %134
  %142 = load i32, i32* %141, align 4
  %143 = icmp sgt i32 %142, %4
  br i1 %143, label %144, label %126

144:                                              ; preds = %140, %126, %118
  %145 = phi i32 [ %120, %118 ], [ %127, %126 ], [ %142, %140 ]
  %146 = add nsw i32 %145, -1
  %147 = getelementptr inbounds i32, i32* %15, i64 %122
  store i32 %146, i32* %147, align 4
  %148 = icmp eq i32 %146, %4
  %149 = icmp sgt i32 %121, %8
  %150 = and i1 %148, %149
  br i1 %150, label %151, label %172

151:                                              ; preds = %144, %163
  %152 = phi i64 [ %153, %163 ], [ %122, %144 ]
  %153 = add nsw i64 %152, -1
  %154 = getelementptr inbounds i8, i8* %6, i64 %153
  %155 = load i8, i8* %154, align 1
  %156 = icmp eq i8 %155, %115
  br i1 %156, label %166, label %157

157:                                              ; preds = %151
  %158 = load i32, i32* %103, align 4
  %159 = icmp eq i32 %158, %9
  br i1 %159, label %160, label %163

160:                                              ; preds = %157
  %161 = sub nsw i64 %117, %152
  %162 = trunc i64 %161 to i32
  store i32 %162, i32* %103, align 4
  br label %163

163:                                              ; preds = %160, %157
  %164 = getelementptr inbounds i32, i32* %15, i64 %153
  store i32 %4, i32* %164, align 4
  %165 = icmp sgt i64 %153, %12
  br i1 %165, label %151, label %170

166:                                              ; preds = %151
  %167 = trunc i64 %153 to i32
  %168 = add nsw i32 %145, -2
  %169 = getelementptr inbounds i32, i32* %15, i64 %153
  store i32 %168, i32* %169, align 4
  br label %172

170:                                              ; preds = %163
  %171 = trunc i64 %153 to i32
  br label %172

172:                                              ; preds = %170, %166, %144
  %173 = phi i32 [ %168, %166 ], [ %146, %144 ], [ %4, %170 ]
  %174 = phi i32 [ %167, %166 ], [ %121, %144 ], [ %171, %170 ]
  %175 = icmp sgt i32 %174, %8
  br i1 %175, label %118, label %176

176:                                              ; preds = %172
  %177 = icmp sge i32 %173, %4
  %178 = icmp sgt i32 %8, %4
  %179 = or i1 %177, %178
  br i1 %179, label %227, label %180

180:                                              ; preds = %176
  %181 = shl i64 %3, 32
  %182 = ashr exact i64 %181, 32
  %183 = add nsw i64 %182, 1
  %184 = sub nsw i64 %183, %12
  %185 = and i64 %184, 1
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %202, label %187

187:                                              ; preds = %180
  %188 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 0
  %189 = load i32, i32* %188, align 4
  %190 = icmp eq i32 %189, %9
  br i1 %190, label %191, label %193

191:                                              ; preds = %187
  %192 = sub nsw i32 %173, %8
  store i32 %192, i32* %188, align 4
  br label %193

193:                                              ; preds = %191, %187
  %194 = icmp eq i32 %173, %8
  br i1 %194, label %195, label %199

195:                                              ; preds = %193
  %196 = sext i32 %173 to i64
  %197 = getelementptr inbounds i32, i32* %15, i64 %196
  %198 = load i32, i32* %197, align 4
  br label %199

199:                                              ; preds = %195, %193
  %200 = phi i32 [ %198, %195 ], [ %173, %193 ]
  %201 = add nsw i64 %12, 1
  br label %202

202:                                              ; preds = %180, %199
  %203 = phi i64 [ %12, %180 ], [ %201, %199 ]
  %204 = phi i32 [ %173, %180 ], [ %200, %199 ]
  %205 = icmp eq i64 %182, %12
  br i1 %205, label %227, label %206

206:                                              ; preds = %202, %237
  %207 = phi i64 [ %239, %237 ], [ %203, %202 ]
  %208 = phi i32 [ %238, %237 ], [ %204, %202 ]
  %209 = getelementptr inbounds i32, i32* %14, i64 %207
  %210 = load i32, i32* %209, align 4
  %211 = icmp eq i32 %210, %9
  br i1 %211, label %212, label %214

212:                                              ; preds = %206
  %213 = sub nsw i32 %208, %8
  store i32 %213, i32* %209, align 4
  br label %214

214:                                              ; preds = %212, %206
  %215 = trunc i64 %207 to i32
  %216 = icmp eq i32 %208, %215
  br i1 %216, label %217, label %221

217:                                              ; preds = %214
  %218 = sext i32 %208 to i64
  %219 = getelementptr inbounds i32, i32* %15, i64 %218
  %220 = load i32, i32* %219, align 4
  br label %221

221:                                              ; preds = %214, %217
  %222 = phi i32 [ %220, %217 ], [ %208, %214 ]
  %223 = add nsw i64 %207, 1
  %224 = getelementptr inbounds i32, i32* %14, i64 %223
  %225 = load i32, i32* %224, align 4
  %226 = icmp eq i32 %225, %9
  br i1 %226, label %228, label %230

227:                                              ; preds = %202, %237, %176, %100
  ret void

228:                                              ; preds = %221
  %229 = sub nsw i32 %222, %8
  store i32 %229, i32* %224, align 4
  br label %230

230:                                              ; preds = %228, %221
  %231 = trunc i64 %223 to i32
  %232 = icmp eq i32 %222, %231
  br i1 %232, label %233, label %237

233:                                              ; preds = %230
  %234 = sext i32 %222 to i64
  %235 = getelementptr inbounds i32, i32* %15, i64 %234
  %236 = load i32, i32* %235, align 4
  br label %237

237:                                              ; preds = %233, %230
  %238 = phi i32 [ %236, %233 ], [ %222, %230 ]
  %239 = add nsw i64 %207, 2
  %240 = icmp slt i64 %223, %117
  br i1 %240, label %206, label %227
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIhtE16BoyerMooreSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1200"*, i16*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1200", %"class.v8::internal::StringSearch.1200"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1200", %"class.v8::internal::StringSearch.1200"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %2 to i32
  %10 = trunc i64 %8 to i32
  %11 = getelementptr inbounds %"class.v8::internal::StringSearch.1200", %"class.v8::internal::StringSearch.1200"* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::StringSearch.1200", %"class.v8::internal::StringSearch.1200"* %0, i64 0, i32 0
  %14 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %13, align 8
  %15 = sext i32 %12 to i64
  %16 = sub nsw i64 0, %15
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 122, i64 %16
  %18 = add nsw i32 %10, -1
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %6, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = sub nsw i32 %9, %10
  %23 = icmp slt i32 %22, %3
  br i1 %23, label %113, label %24

24:                                               ; preds = %4
  %25 = zext i8 %21 to i32
  %26 = icmp sgt i32 %10, 0
  %27 = zext i8 %21 to i64
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %27
  br i1 %26, label %29, label %94

29:                                               ; preds = %24
  %30 = shl i64 %8, 32
  %31 = ashr exact i64 %30, 32
  br label %32

32:                                               ; preds = %51, %29
  %33 = phi i32 [ %3, %29 ], [ %52, %51 ]
  %34 = add nsw i32 %33, %18
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %1, i64 %35
  %37 = load i16, i16* %36, align 2
  %38 = zext i16 %37 to i32
  %39 = icmp eq i32 %25, %38
  br i1 %39, label %92, label %40

40:                                               ; preds = %32
  %41 = icmp ugt i16 %37, 255
  br i1 %41, label %46, label %42

42:                                               ; preds = %40
  %43 = zext i16 %37 to i64
  %44 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %43
  %45 = load i32, i32* %44, align 4
  br label %46

46:                                               ; preds = %42, %40
  %47 = phi i32 [ %45, %42 ], [ -1, %40 ]
  %48 = sub nsw i32 %18, %47
  %49 = add nsw i32 %48, %33
  %50 = icmp sgt i32 %49, %22
  br i1 %50, label %113, label %51

51:                                               ; preds = %46, %86
  %52 = phi i32 [ %49, %46 ], [ %88, %86 ]
  br label %32

53:                                               ; preds = %92, %90
  %54 = phi i64 [ %31, %92 ], [ %55, %90 ]
  %55 = add i64 %54, -1
  %56 = getelementptr inbounds i8, i8* %6, i64 %55
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i32
  %59 = add nsw i64 %55, %93
  %60 = getelementptr inbounds i16, i16* %1, i64 %59
  %61 = load i16, i16* %60, align 2
  %62 = zext i16 %61 to i32
  %63 = icmp eq i32 %58, %62
  br i1 %63, label %90, label %64

64:                                               ; preds = %53
  %65 = trunc i64 %55 to i32
  %66 = icmp sgt i32 %12, %65
  br i1 %66, label %83, label %67

67:                                               ; preds = %64
  %68 = shl i64 %55, 32
  %69 = add i64 %68, 4294967296
  %70 = ashr exact i64 %69, 32
  %71 = getelementptr inbounds i32, i32* %17, i64 %70
  %72 = load i32, i32* %71, align 4
  %73 = icmp ugt i16 %61, 255
  br i1 %73, label %78, label %74

74:                                               ; preds = %67
  %75 = zext i16 %61 to i64
  %76 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %75
  %77 = load i32, i32* %76, align 4
  br label %78

78:                                               ; preds = %74, %67
  %79 = phi i32 [ %77, %74 ], [ -1, %67 ]
  %80 = sub nsw i32 %65, %79
  %81 = icmp sgt i32 %72, %80
  %82 = select i1 %81, i32 %72, i32 %80
  br label %86

83:                                               ; preds = %64
  %84 = load i32, i32* %28, align 4
  %85 = sub nsw i32 %18, %84
  br label %86

86:                                               ; preds = %83, %78
  %87 = phi i32 [ %85, %83 ], [ %82, %78 ]
  %88 = add nsw i32 %87, %33
  %89 = icmp sgt i32 %88, %22
  br i1 %89, label %113, label %51

90:                                               ; preds = %53
  %91 = icmp sgt i64 %55, 0
  br i1 %91, label %53, label %113

92:                                               ; preds = %32
  %93 = sext i32 %33 to i64
  br label %53

94:                                               ; preds = %24, %108
  %95 = phi i32 [ %111, %108 ], [ %3, %24 ]
  %96 = add nsw i32 %95, %18
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds i16, i16* %1, i64 %97
  %99 = load i16, i16* %98, align 2
  %100 = zext i16 %99 to i32
  %101 = icmp eq i32 %25, %100
  br i1 %101, label %113, label %102

102:                                              ; preds = %94
  %103 = icmp ugt i16 %99, 255
  br i1 %103, label %108, label %104

104:                                              ; preds = %102
  %105 = zext i16 %99 to i64
  %106 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %105
  %107 = load i32, i32* %106, align 4
  br label %108

108:                                              ; preds = %102, %104
  %109 = phi i32 [ %107, %104 ], [ -1, %102 ]
  %110 = sub nsw i32 %18, %109
  %111 = add nsw i32 %110, %95
  %112 = icmp sgt i32 %111, %22
  br i1 %112, label %113, label %94

113:                                              ; preds = %108, %94, %86, %46, %90, %4
  %114 = phi i32 [ -1, %4 ], [ %33, %90 ], [ -1, %46 ], [ -1, %86 ], [ %95, %94 ], [ -1, %108 ]
  ret i32 %114
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIthE10FailSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch.1202"*, i8*, i64, i32) #0 comdat align 2 {
  ret i32 -1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIthE16SingleCharSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch.1202"*, i8*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1202", %"class.v8::internal::StringSearch.1202"* %0, i64 0, i32 1, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = load i16, i16* %6, align 2
  %8 = icmp ugt i16 %7, 255
  br i1 %8, label %48, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.v8::internal::StringSearch.1202", %"class.v8::internal::StringSearch.1202"* %0, i64 0, i32 1, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = trunc i64 %2 to i32
  %13 = trunc i64 %11 to i32
  %14 = sub nsw i32 %12, %13
  %15 = add nsw i32 %14, 1
  %16 = trunc i16 %7 to i8
  %17 = lshr i16 %7, 8
  %18 = trunc i16 %17 to i8
  %19 = icmp ult i8 %16, %18
  %20 = select i1 %19, i8 %18, i8 %16
  %21 = zext i8 %20 to i32
  %22 = ptrtoint i8* %1 to i64
  %23 = and i16 %7, 255
  %24 = zext i16 %23 to i32
  br label %25

25:                                               ; preds = %43, %9
  %26 = phi i32 [ %3, %9 ], [ %44, %43 ]
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i8, i8* %1, i64 %27
  %29 = sub i32 %15, %26
  %30 = sext i32 %29 to i64
  %31 = tail call i8* @memchr(i8* %28, i32 %21, i64 %30) #20
  %32 = icmp eq i8* %31, null
  br i1 %32, label %48, label %33

33:                                               ; preds = %25
  %34 = ptrtoint i8* %31 to i64
  %35 = sub i64 %34, %22
  %36 = trunc i64 %35 to i32
  %37 = shl i64 %35, 32
  %38 = ashr exact i64 %37, 32
  %39 = getelementptr inbounds i8, i8* %1, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = icmp eq i32 %41, %24
  br i1 %42, label %46, label %43

43:                                               ; preds = %33
  %44 = add nsw i32 %36, 1
  %45 = icmp sgt i32 %14, %36
  br i1 %45, label %25, label %48

46:                                               ; preds = %33
  %47 = trunc i64 %35 to i32
  br label %48

48:                                               ; preds = %43, %25, %46, %4
  %49 = phi i32 [ -1, %4 ], [ %47, %46 ], [ -1, %25 ], [ -1, %43 ]
  ret i32 %49
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIthE12LinearSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch.1202"*, i8*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1202", %"class.v8::internal::StringSearch.1202"* %0, i64 0, i32 1, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1202", %"class.v8::internal::StringSearch.1202"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = trunc i64 %2 to i32
  %11 = sub nsw i32 %10, %9
  %12 = icmp slt i32 %11, %3
  br i1 %12, label %75, label %13

13:                                               ; preds = %4
  %14 = load i16, i16* %6, align 2
  %15 = add nsw i32 %11, 1
  %16 = trunc i16 %14 to i8
  %17 = lshr i16 %14, 8
  %18 = trunc i16 %17 to i8
  %19 = icmp ult i8 %16, %18
  %20 = select i1 %19, i8 %18, i8 %16
  %21 = zext i8 %20 to i32
  %22 = ptrtoint i8* %1 to i64
  %23 = and i16 %14, 255
  %24 = zext i16 %23 to i32
  %25 = getelementptr inbounds i16, i16* %6, i64 1
  %26 = shl i64 %8, 32
  %27 = add i64 %26, -4294967296
  %28 = ashr exact i64 %27, 32
  br label %31

29:                                               ; preds = %61
  %30 = icmp sgt i32 %11, %55
  br i1 %30, label %52, label %75

31:                                               ; preds = %52, %13
  %32 = phi i32 [ %3, %13 ], [ %53, %52 ]
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i8, i8* %1, i64 %33
  %35 = sub i32 %15, %32
  %36 = sext i32 %35 to i64
  %37 = tail call i8* @memchr(i8* %34, i32 %21, i64 %36) #20
  %38 = icmp eq i8* %37, null
  br i1 %38, label %75, label %39

39:                                               ; preds = %31
  %40 = ptrtoint i8* %37 to i64
  %41 = sub i64 %40, %22
  %42 = trunc i64 %41 to i32
  %43 = shl i64 %41, 32
  %44 = ashr exact i64 %43, 32
  %45 = getelementptr inbounds i8, i8* %1, i64 %44
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i32
  %48 = icmp eq i32 %47, %24
  br i1 %48, label %54, label %49

49:                                               ; preds = %39
  %50 = add nsw i32 %42, 1
  %51 = icmp sgt i32 %11, %42
  br i1 %51, label %52, label %75

52:                                               ; preds = %49, %29
  %53 = phi i32 [ %50, %49 ], [ %58, %29 ]
  br label %31

54:                                               ; preds = %39
  %55 = trunc i64 %41 to i32
  %56 = icmp eq i32 %55, -1
  br i1 %56, label %75, label %57

57:                                               ; preds = %54
  %58 = add nuw nsw i32 %55, 1
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds i8, i8* %1, i64 %59
  br label %61

61:                                               ; preds = %70, %57
  %62 = phi i64 [ %71, %70 ], [ 0, %57 ]
  %63 = getelementptr inbounds i16, i16* %25, i64 %62
  %64 = load i16, i16* %63, align 2
  %65 = zext i16 %64 to i32
  %66 = getelementptr inbounds i8, i8* %60, i64 %62
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i32
  %69 = icmp eq i32 %65, %68
  br i1 %69, label %70, label %29

70:                                               ; preds = %61
  %71 = add nuw nsw i64 %62, 1
  %72 = icmp slt i64 %71, %28
  br i1 %72, label %61, label %73

73:                                               ; preds = %70
  %74 = trunc i64 %41 to i32
  br label %75

75:                                               ; preds = %29, %54, %49, %31, %73, %4
  %76 = phi i32 [ -1, %4 ], [ %74, %73 ], [ -1, %31 ], [ -1, %49 ], [ -1, %54 ], [ -1, %29 ]
  ret i32 %76
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIthE13InitialSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch.1202"*, i8*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1202", %"class.v8::internal::StringSearch.1202"* %0, i64 0, i32 1, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1202", %"class.v8::internal::StringSearch.1202"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = trunc i64 %2 to i32
  %11 = sub nsw i32 %10, %9
  %12 = icmp slt i32 %11, %3
  br i1 %12, label %275, label %13

13:                                               ; preds = %4
  %14 = shl i32 %9, 2
  %15 = sub nsw i32 -10, %14
  %16 = add nsw i32 %11, 1
  %17 = ptrtoint i8* %1 to i64
  %18 = shl i64 %8, 32
  %19 = ashr exact i64 %18, 32
  br label %20

20:                                               ; preds = %269, %13
  %21 = phi i32 [ %15, %13 ], [ %270, %269 ]
  %22 = phi i32 [ %3, %13 ], [ %271, %269 ]
  %23 = add nsw i32 %21, 1
  %24 = icmp slt i32 %21, 0
  br i1 %24, label %25, label %82

25:                                               ; preds = %20
  %26 = load i16, i16* %6, align 2
  %27 = trunc i16 %26 to i8
  %28 = lshr i16 %26, 8
  %29 = trunc i16 %28 to i8
  %30 = icmp ult i8 %27, %29
  %31 = select i1 %30, i8 %29, i8 %27
  %32 = zext i8 %31 to i32
  %33 = and i16 %26, 255
  %34 = zext i16 %33 to i32
  br label %35

35:                                               ; preds = %53, %25
  %36 = phi i32 [ %22, %25 ], [ %54, %53 ]
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i8, i8* %1, i64 %37
  %39 = sub i32 %16, %36
  %40 = sext i32 %39 to i64
  %41 = tail call i8* @memchr(i8* %38, i32 %32, i64 %40) #20
  %42 = icmp eq i8* %41, null
  br i1 %42, label %275, label %43

43:                                               ; preds = %35
  %44 = ptrtoint i8* %41 to i64
  %45 = sub i64 %44, %17
  %46 = trunc i64 %45 to i32
  %47 = shl i64 %45, 32
  %48 = ashr exact i64 %47, 32
  %49 = getelementptr inbounds i8, i8* %1, i64 %48
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = icmp eq i32 %51, %34
  br i1 %52, label %56, label %53

53:                                               ; preds = %43
  %54 = add nsw i32 %46, 1
  %55 = icmp sgt i32 %11, %46
  br i1 %55, label %35, label %275

56:                                               ; preds = %43
  %57 = trunc i64 %45 to i32
  %58 = icmp eq i32 %57, -1
  br i1 %58, label %275, label %59

59:                                               ; preds = %56
  %60 = shl i64 %45, 32
  %61 = ashr exact i64 %60, 32
  br label %62

62:                                               ; preds = %59, %73
  %63 = phi i64 [ 1, %59 ], [ %74, %73 ]
  %64 = phi i32 [ 1, %59 ], [ %75, %73 ]
  %65 = getelementptr inbounds i16, i16* %6, i64 %63
  %66 = load i16, i16* %65, align 2
  %67 = zext i16 %66 to i32
  %68 = add nsw i64 %63, %61
  %69 = getelementptr inbounds i8, i8* %1, i64 %68
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = icmp eq i32 %67, %71
  br i1 %72, label %73, label %77

73:                                               ; preds = %62
  %74 = add nuw nsw i64 %63, 1
  %75 = add nuw nsw i32 %64, 1
  %76 = icmp slt i64 %74, %19
  br i1 %76, label %62, label %79

77:                                               ; preds = %62
  %78 = trunc i64 %63 to i32
  br label %79

79:                                               ; preds = %73, %77
  %80 = phi i32 [ %78, %77 ], [ %75, %73 ]
  %81 = icmp eq i32 %80, %9
  br i1 %81, label %273, label %269

82:                                               ; preds = %20
  %83 = getelementptr inbounds %"class.v8::internal::StringSearch.1202", %"class.v8::internal::StringSearch.1202"* %0, i64 0, i32 0
  %84 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %83, align 8
  %85 = getelementptr inbounds %"class.v8::internal::StringSearch.1202", %"class.v8::internal::StringSearch.1202"* %0, i64 0, i32 3
  %86 = load i32, i32* %85, align 8
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %222, label %88

88:                                               ; preds = %82
  %89 = add nsw i32 %86, -1
  %90 = insertelement <4 x i32> undef, i32 %89, i32 0
  %91 = shufflevector <4 x i32> %90, <4 x i32> undef, <4 x i32> zeroinitializer
  %92 = insertelement <4 x i32> undef, i32 %89, i32 0
  %93 = shufflevector <4 x i32> %92, <4 x i32> undef, <4 x i32> zeroinitializer
  %94 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 0
  %95 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %95, align 4
  %96 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 4
  %97 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %97, align 4
  %98 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 8
  %99 = bitcast i32* %98 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %99, align 4
  %100 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 12
  %101 = bitcast i32* %100 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %101, align 4
  %102 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 16
  %103 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %103, align 4
  %104 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 20
  %105 = bitcast i32* %104 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %105, align 4
  %106 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 24
  %107 = bitcast i32* %106 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %107, align 4
  %108 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 28
  %109 = bitcast i32* %108 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %109, align 4
  %110 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 32
  %111 = bitcast i32* %110 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %111, align 4
  %112 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 36
  %113 = bitcast i32* %112 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %113, align 4
  %114 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 40
  %115 = bitcast i32* %114 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %115, align 4
  %116 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 44
  %117 = bitcast i32* %116 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %117, align 4
  %118 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 48
  %119 = bitcast i32* %118 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %119, align 4
  %120 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 52
  %121 = bitcast i32* %120 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %121, align 4
  %122 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 56
  %123 = bitcast i32* %122 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %123, align 4
  %124 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 60
  %125 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %125, align 4
  %126 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 64
  %127 = bitcast i32* %126 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %127, align 4
  %128 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 68
  %129 = bitcast i32* %128 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %129, align 4
  %130 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 72
  %131 = bitcast i32* %130 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %131, align 4
  %132 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 76
  %133 = bitcast i32* %132 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %133, align 4
  %134 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 80
  %135 = bitcast i32* %134 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %135, align 4
  %136 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 84
  %137 = bitcast i32* %136 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %137, align 4
  %138 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 88
  %139 = bitcast i32* %138 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %139, align 4
  %140 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 92
  %141 = bitcast i32* %140 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %141, align 4
  %142 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 96
  %143 = bitcast i32* %142 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %143, align 4
  %144 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 100
  %145 = bitcast i32* %144 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %145, align 4
  %146 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 104
  %147 = bitcast i32* %146 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %147, align 4
  %148 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 108
  %149 = bitcast i32* %148 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %149, align 4
  %150 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 112
  %151 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %151, align 4
  %152 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 116
  %153 = bitcast i32* %152 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %153, align 4
  %154 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 120
  %155 = bitcast i32* %154 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %155, align 4
  %156 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 124
  %157 = bitcast i32* %156 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %157, align 4
  %158 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 128
  %159 = bitcast i32* %158 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %159, align 4
  %160 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 132
  %161 = bitcast i32* %160 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %161, align 4
  %162 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 136
  %163 = bitcast i32* %162 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %163, align 4
  %164 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 140
  %165 = bitcast i32* %164 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %165, align 4
  %166 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 144
  %167 = bitcast i32* %166 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %167, align 4
  %168 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 148
  %169 = bitcast i32* %168 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %169, align 4
  %170 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 152
  %171 = bitcast i32* %170 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %171, align 4
  %172 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 156
  %173 = bitcast i32* %172 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %173, align 4
  %174 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 160
  %175 = bitcast i32* %174 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %175, align 4
  %176 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 164
  %177 = bitcast i32* %176 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %177, align 4
  %178 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 168
  %179 = bitcast i32* %178 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %179, align 4
  %180 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 172
  %181 = bitcast i32* %180 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %181, align 4
  %182 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 176
  %183 = bitcast i32* %182 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %183, align 4
  %184 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 180
  %185 = bitcast i32* %184 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %185, align 4
  %186 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 184
  %187 = bitcast i32* %186 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %187, align 4
  %188 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 188
  %189 = bitcast i32* %188 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %189, align 4
  %190 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 192
  %191 = bitcast i32* %190 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %191, align 4
  %192 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 196
  %193 = bitcast i32* %192 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %193, align 4
  %194 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 200
  %195 = bitcast i32* %194 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %195, align 4
  %196 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 204
  %197 = bitcast i32* %196 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %197, align 4
  %198 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 208
  %199 = bitcast i32* %198 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %199, align 4
  %200 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 212
  %201 = bitcast i32* %200 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %201, align 4
  %202 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 216
  %203 = bitcast i32* %202 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %203, align 4
  %204 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 220
  %205 = bitcast i32* %204 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %205, align 4
  %206 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 224
  %207 = bitcast i32* %206 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %207, align 4
  %208 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 228
  %209 = bitcast i32* %208 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %209, align 4
  %210 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 232
  %211 = bitcast i32* %210 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %211, align 4
  %212 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 236
  %213 = bitcast i32* %212 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %213, align 4
  %214 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 240
  %215 = bitcast i32* %214 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %215, align 4
  %216 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 244
  %217 = bitcast i32* %216 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %217, align 4
  %218 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 248
  %219 = bitcast i32* %218 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %219, align 4
  %220 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 252
  %221 = bitcast i32* %220 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %221, align 4
  br label %225

222:                                              ; preds = %82
  %223 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 0
  %224 = bitcast i32* %223 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %224, i8 -1, i64 1024, i1 false) #7
  br label %225

225:                                              ; preds = %88, %222
  %226 = add i32 %9, -1
  %227 = icmp slt i32 %86, %226
  br i1 %227, label %228, label %266

228:                                              ; preds = %225
  %229 = sext i32 %86 to i64
  %230 = sext i32 %226 to i64
  %231 = sub nsw i64 %230, %229
  %232 = xor i64 %229, -1
  %233 = and i64 %231, 1
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %243, label %235

235:                                              ; preds = %228
  %236 = load i16*, i16** %5, align 8
  %237 = getelementptr inbounds i16, i16* %236, i64 %229
  %238 = load i16, i16* %237, align 2
  %239 = and i16 %238, 255
  %240 = zext i16 %239 to i64
  %241 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 %240
  store i32 %86, i32* %241, align 4
  %242 = add nsw i64 %229, 1
  br label %243

243:                                              ; preds = %228, %235
  %244 = phi i64 [ %229, %228 ], [ %242, %235 ]
  %245 = sub nsw i64 0, %230
  %246 = icmp eq i64 %232, %245
  br i1 %246, label %266, label %247

247:                                              ; preds = %243, %247
  %248 = phi i64 [ %264, %247 ], [ %244, %243 ]
  %249 = load i16*, i16** %5, align 8
  %250 = getelementptr inbounds i16, i16* %249, i64 %248
  %251 = load i16, i16* %250, align 2
  %252 = and i16 %251, 255
  %253 = zext i16 %252 to i64
  %254 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 %253
  %255 = trunc i64 %248 to i32
  store i32 %255, i32* %254, align 4
  %256 = add nsw i64 %248, 1
  %257 = load i16*, i16** %5, align 8
  %258 = getelementptr inbounds i16, i16* %257, i64 %256
  %259 = load i16, i16* %258, align 2
  %260 = and i16 %259, 255
  %261 = zext i16 %260 to i64
  %262 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 121, i64 %261
  %263 = trunc i64 %256 to i32
  store i32 %263, i32* %262, align 4
  %264 = add nsw i64 %248, 2
  %265 = icmp eq i64 %264, %230
  br i1 %265, label %266, label %247

266:                                              ; preds = %243, %247, %225
  %267 = getelementptr inbounds %"class.v8::internal::StringSearch.1202", %"class.v8::internal::StringSearch.1202"* %0, i64 0, i32 2
  store i32 (%"class.v8::internal::StringSearch.1202"*, i8*, i64, i32)* @_ZN2v88internal12StringSearchIthE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKhEEi, i32 (%"class.v8::internal::StringSearch.1202"*, i8*, i64, i32)** %267, align 8
  %268 = tail call i32 @_ZN2v88internal12StringSearchIthE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch.1202"* %0, i8* %1, i64 %2, i32 %22)
  br label %275

269:                                              ; preds = %79
  %270 = add nsw i32 %23, %80
  %271 = add nsw i32 %57, 1
  %272 = icmp sgt i32 %11, %57
  br i1 %272, label %20, label %275

273:                                              ; preds = %79
  %274 = trunc i64 %45 to i32
  br label %275

275:                                              ; preds = %56, %269, %53, %35, %273, %4, %266
  %276 = phi i32 [ %268, %266 ], [ -1, %4 ], [ %274, %273 ], [ -1, %35 ], [ -1, %53 ], [ -1, %269 ], [ -1, %56 ]
  ret i32 %276
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIthE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch.1202"*, i8*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1202", %"class.v8::internal::StringSearch.1202"* %0, i64 0, i32 1, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1202", %"class.v8::internal::StringSearch.1202"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %2 to i32
  %10 = trunc i64 %8 to i32
  %11 = getelementptr inbounds %"class.v8::internal::StringSearch.1202", %"class.v8::internal::StringSearch.1202"* %0, i64 0, i32 0
  %12 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %13 = add nsw i32 %10, -1
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i16, i16* %6, i64 %14
  %16 = load i16, i16* %15, align 2
  %17 = and i16 %16, 255
  %18 = zext i16 %17 to i64
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 121, i64 %18
  %20 = load i32, i32* %19, align 4
  %21 = sub nsw i32 %13, %20
  %22 = sub nsw i32 %9, %10
  %23 = zext i16 %16 to i32
  %24 = add i32 %10, -2
  %25 = icmp sgt i32 %24, -1
  %26 = sub i32 %10, %21
  br i1 %25, label %27, label %73

27:                                               ; preds = %4
  %28 = sub nsw i32 0, %10
  %29 = sext i32 %24 to i64
  br label %30

30:                                               ; preds = %27, %62
  %31 = phi i32 [ %64, %62 ], [ %3, %27 ]
  %32 = phi i32 [ %66, %62 ], [ %28, %27 ]
  %33 = icmp sgt i32 %31, %22
  br i1 %33, label %93, label %34

34:                                               ; preds = %30, %43
  %35 = phi i32 [ %48, %43 ], [ %31, %30 ]
  %36 = phi i32 [ %50, %43 ], [ %32, %30 ]
  %37 = add nsw i32 %35, %13
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds i8, i8* %1, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = icmp eq i32 %23, %41
  br i1 %42, label %71, label %43

43:                                               ; preds = %34
  %44 = zext i8 %40 to i64
  %45 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 121, i64 %44
  %46 = load i32, i32* %45, align 4
  %47 = sub nsw i32 %13, %46
  %48 = add nsw i32 %47, %35
  %49 = add i32 %36, 1
  %50 = sub i32 %49, %47
  %51 = icmp sgt i32 %48, %22
  br i1 %51, label %93, label %34

52:                                               ; preds = %71, %68
  %53 = phi i64 [ %29, %71 ], [ %69, %68 ]
  %54 = getelementptr inbounds i16, i16* %6, i64 %53
  %55 = load i16, i16* %54, align 2
  %56 = zext i16 %55 to i32
  %57 = add nsw i64 %53, %72
  %58 = getelementptr inbounds i8, i8* %1, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i32
  %61 = icmp eq i32 %56, %60
  br i1 %61, label %68, label %62

62:                                               ; preds = %52
  %63 = trunc i64 %53 to i32
  %64 = add nsw i32 %35, %21
  %65 = add i32 %26, %36
  %66 = sub i32 %65, %63
  %67 = icmp sgt i32 %66, 0
  br i1 %67, label %90, label %30

68:                                               ; preds = %52
  %69 = add nsw i64 %53, -1
  %70 = icmp sgt i64 %53, 0
  br i1 %70, label %52, label %93

71:                                               ; preds = %34
  %72 = sext i32 %35 to i64
  br label %52

73:                                               ; preds = %4
  %74 = icmp slt i32 %22, %3
  br i1 %74, label %93, label %75

75:                                               ; preds = %73, %83
  %76 = phi i32 [ %88, %83 ], [ %3, %73 ]
  %77 = add nsw i32 %76, %13
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds i8, i8* %1, i64 %78
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i32
  %82 = icmp eq i32 %23, %81
  br i1 %82, label %93, label %83

83:                                               ; preds = %75
  %84 = zext i8 %80 to i64
  %85 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 121, i64 %84
  %86 = load i32, i32* %85, align 4
  %87 = sub nsw i32 %13, %86
  %88 = add nsw i32 %87, %76
  %89 = icmp sgt i32 %88, %22
  br i1 %89, label %93, label %75

90:                                               ; preds = %62
  tail call void @_ZN2v88internal12StringSearchIthE23PopulateBoyerMooreTableEv(%"class.v8::internal::StringSearch.1202"* %0)
  %91 = getelementptr inbounds %"class.v8::internal::StringSearch.1202", %"class.v8::internal::StringSearch.1202"* %0, i64 0, i32 2
  store i32 (%"class.v8::internal::StringSearch.1202"*, i8*, i64, i32)* @_ZN2v88internal12StringSearchIthE16BoyerMooreSearchEPS2_NS0_6VectorIKhEEi, i32 (%"class.v8::internal::StringSearch.1202"*, i8*, i64, i32)** %91, align 8
  %92 = tail call i32 @_ZN2v88internal12StringSearchIthE16BoyerMooreSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch.1202"* %0, i8* %1, i64 %2, i32 %64)
  br label %93

93:                                               ; preds = %83, %75, %30, %43, %68, %73, %90
  %94 = phi i32 [ %92, %90 ], [ -1, %73 ], [ %35, %68 ], [ -1, %43 ], [ -1, %30 ], [ %76, %75 ], [ -1, %83 ]
  ret i32 %94
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12StringSearchIthE23PopulateBoyerMooreTableEv(%"class.v8::internal::StringSearch.1202"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::StringSearch.1202", %"class.v8::internal::StringSearch.1202"* %0, i64 0, i32 1, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = trunc i64 %3 to i32
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1202", %"class.v8::internal::StringSearch.1202"* %0, i64 0, i32 1, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1202", %"class.v8::internal::StringSearch.1202"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = sub nsw i32 %4, %8
  %10 = getelementptr inbounds %"class.v8::internal::StringSearch.1202", %"class.v8::internal::StringSearch.1202"* %0, i64 0, i32 0
  %11 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %12 = sext i32 %8 to i64
  %13 = sub nsw i64 0, %12
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %13
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 123, i64 %13
  %16 = icmp slt i32 %8, %4
  br i1 %16, label %17, label %100

17:                                               ; preds = %1
  %18 = shl i64 %3, 32
  %19 = ashr exact i64 %18, 32
  %20 = shl i64 %3, 32
  %21 = ashr exact i64 %20, 32
  %22 = sub nsw i64 %21, %12
  %23 = icmp ult i64 %22, 8
  br i1 %23, label %24, label %26

24:                                               ; preds = %98, %17
  %25 = phi i64 [ %12, %17 ], [ %28, %98 ]
  br label %106

26:                                               ; preds = %17
  %27 = and i64 %22, -8
  %28 = add nsw i64 %27, %12
  %29 = insertelement <4 x i32> undef, i32 %9, i32 0
  %30 = shufflevector <4 x i32> %29, <4 x i32> undef, <4 x i32> zeroinitializer
  %31 = insertelement <4 x i32> undef, i32 %9, i32 0
  %32 = shufflevector <4 x i32> %31, <4 x i32> undef, <4 x i32> zeroinitializer
  %33 = add nsw i64 %27, -8
  %34 = lshr exact i64 %33, 3
  %35 = add nuw nsw i64 %34, 1
  %36 = and i64 %35, 7
  %37 = icmp ult i64 %33, 56
  br i1 %37, label %85, label %38

38:                                               ; preds = %26
  %39 = sub nsw i64 %35, %36
  br label %40

40:                                               ; preds = %40, %38
  %41 = phi i64 [ 0, %38 ], [ %82, %40 ]
  %42 = phi i64 [ %39, %38 ], [ %83, %40 ]
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %41
  %44 = bitcast i32* %43 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %44, align 4
  %45 = getelementptr inbounds i32, i32* %43, i64 4
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %46, align 4
  %47 = or i64 %41, 8
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %47
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %49, align 4
  %50 = getelementptr inbounds i32, i32* %48, i64 4
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %51, align 4
  %52 = or i64 %41, 16
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %52
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %54, align 4
  %55 = getelementptr inbounds i32, i32* %53, i64 4
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %56, align 4
  %57 = or i64 %41, 24
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %57
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %59, align 4
  %60 = getelementptr inbounds i32, i32* %58, i64 4
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %61, align 4
  %62 = or i64 %41, 32
  %63 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %62
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %64, align 4
  %65 = getelementptr inbounds i32, i32* %63, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %66, align 4
  %67 = or i64 %41, 40
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %67
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %69, align 4
  %70 = getelementptr inbounds i32, i32* %68, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %71, align 4
  %72 = or i64 %41, 48
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %72
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %74, align 4
  %75 = getelementptr inbounds i32, i32* %73, i64 4
  %76 = bitcast i32* %75 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %76, align 4
  %77 = or i64 %41, 56
  %78 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %77
  %79 = bitcast i32* %78 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %79, align 4
  %80 = getelementptr inbounds i32, i32* %78, i64 4
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %81, align 4
  %82 = add i64 %41, 64
  %83 = add i64 %42, -8
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %40, !llvm.loop !53

85:                                               ; preds = %40, %26
  %86 = phi i64 [ 0, %26 ], [ %82, %40 ]
  %87 = icmp eq i64 %36, 0
  br i1 %87, label %98, label %88

88:                                               ; preds = %85, %88
  %89 = phi i64 [ %95, %88 ], [ %86, %85 ]
  %90 = phi i64 [ %96, %88 ], [ %36, %85 ]
  %91 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %89
  %92 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %92, align 4
  %93 = getelementptr inbounds i32, i32* %91, i64 4
  %94 = bitcast i32* %93 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %94, align 4
  %95 = add i64 %89, 8
  %96 = add i64 %90, -1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %88, !llvm.loop !54

98:                                               ; preds = %88, %85
  %99 = icmp eq i64 %22, %27
  br i1 %99, label %100, label %24

100:                                              ; preds = %106, %98, %1
  %101 = shl i64 %3, 32
  %102 = ashr exact i64 %101, 32
  %103 = getelementptr inbounds i32, i32* %14, i64 %102
  store i32 1, i32* %103, align 4
  %104 = add nsw i32 %4, 1
  %105 = getelementptr inbounds i32, i32* %15, i64 %102
  store i32 %104, i32* %105, align 4
  br i1 %16, label %111, label %227

106:                                              ; preds = %24, %106
  %107 = phi i64 [ %109, %106 ], [ %25, %24 ]
  %108 = getelementptr inbounds i32, i32* %14, i64 %107
  store i32 %9, i32* %108, align 4
  %109 = add nsw i64 %107, 1
  %110 = icmp eq i64 %109, %19
  br i1 %110, label %100, label %106, !llvm.loop !55

111:                                              ; preds = %100
  %112 = add i64 %101, -4294967296
  %113 = ashr exact i64 %112, 32
  %114 = getelementptr inbounds i16, i16* %6, i64 %113
  %115 = load i16, i16* %114, align 2
  %116 = shl i64 %3, 32
  %117 = ashr exact i64 %116, 32
  br label %118

118:                                              ; preds = %111, %172
  %119 = phi i32 [ %4, %111 ], [ %174, %172 ]
  %120 = phi i32 [ %104, %111 ], [ %173, %172 ]
  %121 = add nsw i32 %119, -1
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds i16, i16* %6, i64 %122
  %124 = load i16, i16* %123, align 2
  %125 = icmp sgt i32 %120, %4
  br i1 %125, label %144, label %126

126:                                              ; preds = %118, %140
  %127 = phi i32 [ %142, %140 ], [ %120, %118 ]
  %128 = add nsw i32 %127, -1
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i16, i16* %6, i64 %129
  %131 = load i16, i16* %130, align 2
  %132 = icmp eq i16 %124, %131
  br i1 %132, label %144, label %133

133:                                              ; preds = %126
  %134 = sext i32 %127 to i64
  %135 = getelementptr inbounds i32, i32* %14, i64 %134
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, %9
  br i1 %137, label %138, label %140

138:                                              ; preds = %133
  %139 = sub nsw i32 %127, %119
  store i32 %139, i32* %135, align 4
  br label %140

140:                                              ; preds = %138, %133
  %141 = getelementptr inbounds i32, i32* %15, i64 %134
  %142 = load i32, i32* %141, align 4
  %143 = icmp sgt i32 %142, %4
  br i1 %143, label %144, label %126

144:                                              ; preds = %140, %126, %118
  %145 = phi i32 [ %120, %118 ], [ %127, %126 ], [ %142, %140 ]
  %146 = add nsw i32 %145, -1
  %147 = getelementptr inbounds i32, i32* %15, i64 %122
  store i32 %146, i32* %147, align 4
  %148 = icmp eq i32 %146, %4
  %149 = icmp sgt i32 %121, %8
  %150 = and i1 %148, %149
  br i1 %150, label %151, label %172

151:                                              ; preds = %144, %163
  %152 = phi i64 [ %153, %163 ], [ %122, %144 ]
  %153 = add nsw i64 %152, -1
  %154 = getelementptr inbounds i16, i16* %6, i64 %153
  %155 = load i16, i16* %154, align 2
  %156 = icmp eq i16 %155, %115
  br i1 %156, label %166, label %157

157:                                              ; preds = %151
  %158 = load i32, i32* %103, align 4
  %159 = icmp eq i32 %158, %9
  br i1 %159, label %160, label %163

160:                                              ; preds = %157
  %161 = sub nsw i64 %117, %152
  %162 = trunc i64 %161 to i32
  store i32 %162, i32* %103, align 4
  br label %163

163:                                              ; preds = %160, %157
  %164 = getelementptr inbounds i32, i32* %15, i64 %153
  store i32 %4, i32* %164, align 4
  %165 = icmp sgt i64 %153, %12
  br i1 %165, label %151, label %170

166:                                              ; preds = %151
  %167 = trunc i64 %153 to i32
  %168 = add nsw i32 %145, -2
  %169 = getelementptr inbounds i32, i32* %15, i64 %153
  store i32 %168, i32* %169, align 4
  br label %172

170:                                              ; preds = %163
  %171 = trunc i64 %153 to i32
  br label %172

172:                                              ; preds = %170, %166, %144
  %173 = phi i32 [ %168, %166 ], [ %146, %144 ], [ %4, %170 ]
  %174 = phi i32 [ %167, %166 ], [ %121, %144 ], [ %171, %170 ]
  %175 = icmp sgt i32 %174, %8
  br i1 %175, label %118, label %176

176:                                              ; preds = %172
  %177 = icmp sge i32 %173, %4
  %178 = icmp sgt i32 %8, %4
  %179 = or i1 %177, %178
  br i1 %179, label %227, label %180

180:                                              ; preds = %176
  %181 = shl i64 %3, 32
  %182 = ashr exact i64 %181, 32
  %183 = add nsw i64 %182, 1
  %184 = sub nsw i64 %183, %12
  %185 = and i64 %184, 1
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %202, label %187

187:                                              ; preds = %180
  %188 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 0
  %189 = load i32, i32* %188, align 4
  %190 = icmp eq i32 %189, %9
  br i1 %190, label %191, label %193

191:                                              ; preds = %187
  %192 = sub nsw i32 %173, %8
  store i32 %192, i32* %188, align 4
  br label %193

193:                                              ; preds = %191, %187
  %194 = icmp eq i32 %173, %8
  br i1 %194, label %195, label %199

195:                                              ; preds = %193
  %196 = sext i32 %173 to i64
  %197 = getelementptr inbounds i32, i32* %15, i64 %196
  %198 = load i32, i32* %197, align 4
  br label %199

199:                                              ; preds = %195, %193
  %200 = phi i32 [ %198, %195 ], [ %173, %193 ]
  %201 = add nsw i64 %12, 1
  br label %202

202:                                              ; preds = %180, %199
  %203 = phi i64 [ %12, %180 ], [ %201, %199 ]
  %204 = phi i32 [ %173, %180 ], [ %200, %199 ]
  %205 = icmp eq i64 %182, %12
  br i1 %205, label %227, label %206

206:                                              ; preds = %202, %237
  %207 = phi i64 [ %239, %237 ], [ %203, %202 ]
  %208 = phi i32 [ %238, %237 ], [ %204, %202 ]
  %209 = getelementptr inbounds i32, i32* %14, i64 %207
  %210 = load i32, i32* %209, align 4
  %211 = icmp eq i32 %210, %9
  br i1 %211, label %212, label %214

212:                                              ; preds = %206
  %213 = sub nsw i32 %208, %8
  store i32 %213, i32* %209, align 4
  br label %214

214:                                              ; preds = %212, %206
  %215 = trunc i64 %207 to i32
  %216 = icmp eq i32 %208, %215
  br i1 %216, label %217, label %221

217:                                              ; preds = %214
  %218 = sext i32 %208 to i64
  %219 = getelementptr inbounds i32, i32* %15, i64 %218
  %220 = load i32, i32* %219, align 4
  br label %221

221:                                              ; preds = %214, %217
  %222 = phi i32 [ %220, %217 ], [ %208, %214 ]
  %223 = add nsw i64 %207, 1
  %224 = getelementptr inbounds i32, i32* %14, i64 %223
  %225 = load i32, i32* %224, align 4
  %226 = icmp eq i32 %225, %9
  br i1 %226, label %228, label %230

227:                                              ; preds = %202, %237, %176, %100
  ret void

228:                                              ; preds = %221
  %229 = sub nsw i32 %222, %8
  store i32 %229, i32* %224, align 4
  br label %230

230:                                              ; preds = %228, %221
  %231 = trunc i64 %223 to i32
  %232 = icmp eq i32 %222, %231
  br i1 %232, label %233, label %237

233:                                              ; preds = %230
  %234 = sext i32 %222 to i64
  %235 = getelementptr inbounds i32, i32* %15, i64 %234
  %236 = load i32, i32* %235, align 4
  br label %237

237:                                              ; preds = %233, %230
  %238 = phi i32 [ %236, %233 ], [ %222, %230 ]
  %239 = add nsw i64 %207, 2
  %240 = icmp slt i64 %223, %117
  br i1 %240, label %206, label %227
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIthE16BoyerMooreSearchEPS2_NS0_6VectorIKhEEi(%"class.v8::internal::StringSearch.1202"*, i8*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1202", %"class.v8::internal::StringSearch.1202"* %0, i64 0, i32 1, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1202", %"class.v8::internal::StringSearch.1202"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %2 to i32
  %10 = trunc i64 %8 to i32
  %11 = getelementptr inbounds %"class.v8::internal::StringSearch.1202", %"class.v8::internal::StringSearch.1202"* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::StringSearch.1202", %"class.v8::internal::StringSearch.1202"* %0, i64 0, i32 0
  %14 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %13, align 8
  %15 = sext i32 %12 to i64
  %16 = sub nsw i64 0, %15
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 122, i64 %16
  %18 = add nsw i32 %10, -1
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i16, i16* %6, i64 %19
  %21 = load i16, i16* %20, align 2
  %22 = sub nsw i32 %9, %10
  %23 = icmp slt i32 %22, %3
  br i1 %23, label %102, label %24

24:                                               ; preds = %4
  %25 = zext i16 %21 to i32
  %26 = icmp sgt i32 %10, 0
  %27 = and i16 %21, 255
  %28 = zext i16 %27 to i64
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %28
  br i1 %26, label %30, label %87

30:                                               ; preds = %24
  %31 = shl i64 %8, 32
  %32 = ashr exact i64 %31, 32
  br label %33

33:                                               ; preds = %48, %30
  %34 = phi i32 [ %3, %30 ], [ %49, %48 ]
  %35 = add nsw i32 %34, %18
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = icmp eq i32 %25, %39
  br i1 %40, label %85, label %41

41:                                               ; preds = %33
  %42 = zext i8 %38 to i64
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %42
  %44 = load i32, i32* %43, align 4
  %45 = sub nsw i32 %18, %44
  %46 = add nsw i32 %45, %34
  %47 = icmp sgt i32 %46, %22
  br i1 %47, label %102, label %48

48:                                               ; preds = %41, %79
  %49 = phi i32 [ %46, %41 ], [ %81, %79 ]
  br label %33

50:                                               ; preds = %85, %83
  %51 = phi i64 [ %32, %85 ], [ %52, %83 ]
  %52 = add i64 %51, -1
  %53 = getelementptr inbounds i16, i16* %6, i64 %52
  %54 = load i16, i16* %53, align 2
  %55 = zext i16 %54 to i32
  %56 = add nsw i64 %52, %86
  %57 = getelementptr inbounds i8, i8* %1, i64 %56
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i32
  %60 = icmp eq i32 %55, %59
  br i1 %60, label %83, label %61

61:                                               ; preds = %50
  %62 = trunc i64 %52 to i32
  %63 = icmp sgt i32 %12, %62
  br i1 %63, label %76, label %64

64:                                               ; preds = %61
  %65 = shl i64 %52, 32
  %66 = add i64 %65, 4294967296
  %67 = ashr exact i64 %66, 32
  %68 = getelementptr inbounds i32, i32* %17, i64 %67
  %69 = load i32, i32* %68, align 4
  %70 = zext i8 %58 to i64
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %70
  %72 = load i32, i32* %71, align 4
  %73 = sub nsw i32 %62, %72
  %74 = icmp sgt i32 %69, %73
  %75 = select i1 %74, i32 %69, i32 %73
  br label %79

76:                                               ; preds = %61
  %77 = load i32, i32* %29, align 4
  %78 = sub nsw i32 %18, %77
  br label %79

79:                                               ; preds = %76, %64
  %80 = phi i32 [ %78, %76 ], [ %75, %64 ]
  %81 = add nsw i32 %80, %34
  %82 = icmp sgt i32 %81, %22
  br i1 %82, label %102, label %48

83:                                               ; preds = %50
  %84 = icmp sgt i64 %52, 0
  br i1 %84, label %50, label %102

85:                                               ; preds = %33
  %86 = sext i32 %34 to i64
  br label %50

87:                                               ; preds = %24, %95
  %88 = phi i32 [ %100, %95 ], [ %3, %24 ]
  %89 = add nsw i32 %88, %18
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds i8, i8* %1, i64 %90
  %92 = load i8, i8* %91, align 1
  %93 = zext i8 %92 to i32
  %94 = icmp eq i32 %25, %93
  br i1 %94, label %102, label %95

95:                                               ; preds = %87
  %96 = zext i8 %92 to i64
  %97 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %96
  %98 = load i32, i32* %97, align 4
  %99 = sub nsw i32 %18, %98
  %100 = add nsw i32 %99, %88
  %101 = icmp sgt i32 %100, %22
  br i1 %101, label %102, label %87

102:                                              ; preds = %95, %87, %79, %41, %83, %4
  %103 = phi i32 [ -1, %4 ], [ %34, %83 ], [ -1, %41 ], [ -1, %79 ], [ %88, %87 ], [ -1, %95 ]
  ret i32 %103
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIttE16SingleCharSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1205"*, i16*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1205", %"class.v8::internal::StringSearch.1205"* %0, i64 0, i32 1, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1205", %"class.v8::internal::StringSearch.1205"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = load i16, i16* %6, align 2
  %10 = trunc i64 %2 to i32
  %11 = trunc i64 %8 to i32
  %12 = sub nsw i32 %10, %11
  %13 = add nsw i32 %12, 1
  %14 = icmp eq i16 %9, 0
  br i1 %14, label %15, label %30

15:                                               ; preds = %4
  %16 = icmp slt i32 %12, %3
  br i1 %16, label %64, label %17

17:                                               ; preds = %15
  %18 = sext i32 %3 to i64
  %19 = sext i32 %12 to i64
  br label %20

20:                                               ; preds = %25, %17
  %21 = phi i64 [ %18, %17 ], [ %26, %25 ]
  %22 = getelementptr inbounds i16, i16* %1, i64 %21
  %23 = load i16, i16* %22, align 2
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %20
  %26 = add nsw i64 %21, 1
  %27 = icmp slt i64 %21, %19
  br i1 %27, label %20, label %64

28:                                               ; preds = %20
  %29 = trunc i64 %21 to i32
  br label %64

30:                                               ; preds = %4
  %31 = trunc i16 %9 to i8
  %32 = lshr i16 %9, 8
  %33 = trunc i16 %32 to i8
  %34 = icmp ult i8 %31, %33
  %35 = select i1 %34, i8 %33, i8 %31
  %36 = zext i8 %35 to i32
  %37 = ptrtoint i16* %1 to i64
  br label %38

38:                                               ; preds = %59, %30
  %39 = phi i32 [ %3, %30 ], [ %60, %59 ]
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i16, i16* %1, i64 %40
  %42 = bitcast i16* %41 to i8*
  %43 = sub i32 %13, %39
  %44 = sext i32 %43 to i64
  %45 = shl nsw i64 %44, 1
  %46 = tail call i8* @memchr(i8* %42, i32 %36, i64 %45) #20
  %47 = icmp eq i8* %46, null
  br i1 %47, label %64, label %48

48:                                               ; preds = %38
  %49 = ptrtoint i8* %46 to i64
  %50 = and i64 %49, -2
  %51 = sub i64 %50, %37
  %52 = lshr exact i64 %51, 1
  %53 = trunc i64 %52 to i32
  %54 = shl i64 %51, 31
  %55 = ashr exact i64 %54, 32
  %56 = getelementptr inbounds i16, i16* %1, i64 %55
  %57 = load i16, i16* %56, align 2
  %58 = icmp eq i16 %57, %9
  br i1 %58, label %62, label %59

59:                                               ; preds = %48
  %60 = add nsw i32 %53, 1
  %61 = icmp sgt i32 %12, %53
  br i1 %61, label %38, label %64

62:                                               ; preds = %48
  %63 = trunc i64 %52 to i32
  br label %64

64:                                               ; preds = %38, %59, %25, %62, %15, %28
  %65 = phi i32 [ -1, %15 ], [ %29, %28 ], [ %63, %62 ], [ -1, %25 ], [ -1, %59 ], [ -1, %38 ]
  ret i32 %65
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIttE12LinearSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1205"*, i16*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1205", %"class.v8::internal::StringSearch.1205"* %0, i64 0, i32 1, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1205", %"class.v8::internal::StringSearch.1205"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = trunc i64 %2 to i32
  %11 = sub nsw i32 %10, %9
  %12 = icmp slt i32 %11, %3
  br i1 %12, label %108, label %13

13:                                               ; preds = %4
  %14 = load i16, i16* %6, align 2
  %15 = add nsw i32 %11, 1
  %16 = icmp eq i16 %14, 0
  %17 = trunc i16 %14 to i8
  %18 = lshr i16 %14, 8
  %19 = trunc i16 %18 to i8
  %20 = icmp ult i8 %17, %19
  %21 = select i1 %20, i8 %19, i8 %17
  %22 = zext i8 %21 to i32
  %23 = ptrtoint i16* %1 to i64
  %24 = sext i32 %11 to i64
  %25 = getelementptr inbounds i16, i16* %6, i64 1
  %26 = shl i64 %8, 32
  %27 = add i64 %26, -4294967296
  %28 = ashr exact i64 %27, 32
  br i1 %16, label %29, label %61

29:                                               ; preds = %13, %57
  %30 = phi i32 [ %44, %57 ], [ %3, %13 ]
  %31 = sext i32 %30 to i64
  br label %32

32:                                               ; preds = %37, %29
  %33 = phi i64 [ %31, %29 ], [ %38, %37 ]
  %34 = getelementptr inbounds i16, i16* %1, i64 %33
  %35 = load i16, i16* %34, align 2
  %36 = icmp eq i16 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %32
  %38 = add nsw i64 %33, 1
  %39 = icmp slt i64 %33, %24
  br i1 %39, label %32, label %108

40:                                               ; preds = %32
  %41 = trunc i64 %33 to i32
  %42 = icmp eq i32 %41, -1
  br i1 %42, label %108, label %43

43:                                               ; preds = %40
  %44 = add nuw nsw i32 %41, 1
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i16, i16* %1, i64 %45
  br label %47

47:                                               ; preds = %54, %43
  %48 = phi i64 [ %55, %54 ], [ 0, %43 ]
  %49 = getelementptr inbounds i16, i16* %25, i64 %48
  %50 = load i16, i16* %49, align 2
  %51 = getelementptr inbounds i16, i16* %46, i64 %48
  %52 = load i16, i16* %51, align 2
  %53 = icmp eq i16 %50, %52
  br i1 %53, label %54, label %57

54:                                               ; preds = %47
  %55 = add nuw nsw i64 %48, 1
  %56 = icmp slt i64 %55, %28
  br i1 %56, label %47, label %104

57:                                               ; preds = %47
  %58 = icmp sgt i32 %11, %41
  br i1 %58, label %29, label %108

59:                                               ; preds = %94
  %60 = icmp sgt i32 %11, %88
  br i1 %60, label %85, label %108

61:                                               ; preds = %13, %85
  %62 = phi i32 [ %86, %85 ], [ %3, %13 ]
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds i16, i16* %1, i64 %63
  %65 = bitcast i16* %64 to i8*
  %66 = sub i32 %15, %62
  %67 = sext i32 %66 to i64
  %68 = shl nsw i64 %67, 1
  %69 = tail call i8* @memchr(i8* %65, i32 %22, i64 %68) #20
  %70 = icmp eq i8* %69, null
  br i1 %70, label %108, label %71

71:                                               ; preds = %61
  %72 = ptrtoint i8* %69 to i64
  %73 = and i64 %72, -2
  %74 = sub i64 %73, %23
  %75 = lshr exact i64 %74, 1
  %76 = trunc i64 %75 to i32
  %77 = shl i64 %74, 31
  %78 = ashr exact i64 %77, 32
  %79 = getelementptr inbounds i16, i16* %1, i64 %78
  %80 = load i16, i16* %79, align 2
  %81 = icmp eq i16 %80, %14
  br i1 %81, label %87, label %82

82:                                               ; preds = %71
  %83 = add nsw i32 %76, 1
  %84 = icmp sgt i32 %11, %76
  br i1 %84, label %85, label %108

85:                                               ; preds = %82, %59
  %86 = phi i32 [ %83, %82 ], [ %91, %59 ]
  br label %61

87:                                               ; preds = %71
  %88 = trunc i64 %75 to i32
  %89 = icmp eq i32 %88, -1
  br i1 %89, label %108, label %90

90:                                               ; preds = %87
  %91 = add nuw nsw i32 %88, 1
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds i16, i16* %1, i64 %92
  br label %94

94:                                               ; preds = %101, %90
  %95 = phi i64 [ %102, %101 ], [ 0, %90 ]
  %96 = getelementptr inbounds i16, i16* %25, i64 %95
  %97 = load i16, i16* %96, align 2
  %98 = getelementptr inbounds i16, i16* %93, i64 %95
  %99 = load i16, i16* %98, align 2
  %100 = icmp eq i16 %97, %99
  br i1 %100, label %101, label %59

101:                                              ; preds = %94
  %102 = add nuw nsw i64 %95, 1
  %103 = icmp slt i64 %102, %28
  br i1 %103, label %94, label %106

104:                                              ; preds = %54
  %105 = trunc i64 %33 to i32
  br label %108

106:                                              ; preds = %101
  %107 = trunc i64 %75 to i32
  br label %108

108:                                              ; preds = %59, %87, %82, %61, %57, %40, %37, %106, %104, %4
  %109 = phi i32 [ -1, %4 ], [ %105, %104 ], [ %107, %106 ], [ -1, %37 ], [ -1, %40 ], [ -1, %57 ], [ -1, %61 ], [ -1, %82 ], [ -1, %87 ], [ -1, %59 ]
  ret i32 %109
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIttE13InitialSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1205"*, i16*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1205", %"class.v8::internal::StringSearch.1205"* %0, i64 0, i32 1, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1205", %"class.v8::internal::StringSearch.1205"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = trunc i64 %2 to i32
  %11 = sub nsw i32 %10, %9
  %12 = icmp slt i32 %11, %3
  br i1 %12, label %288, label %13

13:                                               ; preds = %4
  %14 = shl i32 %9, 2
  %15 = sub nsw i32 -10, %14
  %16 = add nsw i32 %11, 1
  %17 = ptrtoint i16* %1 to i64
  %18 = sext i32 %11 to i64
  %19 = shl i64 %8, 32
  %20 = ashr exact i64 %19, 32
  br label %21

21:                                               ; preds = %282, %13
  %22 = phi i32 [ %15, %13 ], [ %283, %282 ]
  %23 = phi i32 [ %3, %13 ], [ %284, %282 ]
  %24 = add nsw i32 %22, 1
  %25 = icmp slt i32 %22, 0
  br i1 %25, label %26, label %95

26:                                               ; preds = %21
  %27 = load i16, i16* %6, align 2
  %28 = icmp eq i16 %27, 0
  br i1 %28, label %29, label %39

29:                                               ; preds = %26
  %30 = sext i32 %23 to i64
  br label %31

31:                                               ; preds = %36, %29
  %32 = phi i64 [ %30, %29 ], [ %37, %36 ]
  %33 = getelementptr inbounds i16, i16* %1, i64 %32
  %34 = load i16, i16* %33, align 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %70, label %36

36:                                               ; preds = %31
  %37 = add nsw i64 %32, 1
  %38 = icmp slt i64 %32, %18
  br i1 %38, label %31, label %288

39:                                               ; preds = %26
  %40 = trunc i16 %27 to i8
  %41 = lshr i16 %27, 8
  %42 = trunc i16 %41 to i8
  %43 = icmp ult i8 %40, %42
  %44 = select i1 %43, i8 %42, i8 %40
  %45 = zext i8 %44 to i32
  br label %46

46:                                               ; preds = %67, %39
  %47 = phi i32 [ %23, %39 ], [ %68, %67 ]
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i16, i16* %1, i64 %48
  %50 = bitcast i16* %49 to i8*
  %51 = sub i32 %16, %47
  %52 = sext i32 %51 to i64
  %53 = shl nsw i64 %52, 1
  %54 = tail call i8* @memchr(i8* %50, i32 %45, i64 %53) #20
  %55 = icmp eq i8* %54, null
  br i1 %55, label %288, label %56

56:                                               ; preds = %46
  %57 = ptrtoint i8* %54 to i64
  %58 = and i64 %57, -2
  %59 = sub i64 %58, %17
  %60 = lshr exact i64 %59, 1
  %61 = trunc i64 %60 to i32
  %62 = shl i64 %59, 31
  %63 = ashr exact i64 %62, 32
  %64 = getelementptr inbounds i16, i16* %1, i64 %63
  %65 = load i16, i16* %64, align 2
  %66 = icmp eq i16 %65, %27
  br i1 %66, label %70, label %67

67:                                               ; preds = %56
  %68 = add nsw i32 %61, 1
  %69 = icmp sgt i32 %11, %61
  br i1 %69, label %46, label %288

70:                                               ; preds = %56, %31
  %71 = phi i64 [ %32, %31 ], [ %60, %56 ]
  %72 = trunc i64 %71 to i32
  %73 = icmp eq i32 %72, -1
  br i1 %73, label %288, label %74

74:                                               ; preds = %70
  %75 = shl i64 %71, 32
  %76 = ashr exact i64 %75, 32
  br label %77

77:                                               ; preds = %74, %86
  %78 = phi i64 [ 1, %74 ], [ %87, %86 ]
  %79 = phi i32 [ 1, %74 ], [ %88, %86 ]
  %80 = getelementptr inbounds i16, i16* %6, i64 %78
  %81 = load i16, i16* %80, align 2
  %82 = add nsw i64 %78, %76
  %83 = getelementptr inbounds i16, i16* %1, i64 %82
  %84 = load i16, i16* %83, align 2
  %85 = icmp eq i16 %81, %84
  br i1 %85, label %86, label %90

86:                                               ; preds = %77
  %87 = add nuw nsw i64 %78, 1
  %88 = add nuw nsw i32 %79, 1
  %89 = icmp slt i64 %87, %20
  br i1 %89, label %77, label %92

90:                                               ; preds = %77
  %91 = trunc i64 %78 to i32
  br label %92

92:                                               ; preds = %86, %90
  %93 = phi i32 [ %91, %90 ], [ %88, %86 ]
  %94 = icmp eq i32 %93, %9
  br i1 %94, label %286, label %282

95:                                               ; preds = %21
  %96 = getelementptr inbounds %"class.v8::internal::StringSearch.1205", %"class.v8::internal::StringSearch.1205"* %0, i64 0, i32 0
  %97 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %96, align 8
  %98 = getelementptr inbounds %"class.v8::internal::StringSearch.1205", %"class.v8::internal::StringSearch.1205"* %0, i64 0, i32 3
  %99 = load i32, i32* %98, align 8
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %235, label %101

101:                                              ; preds = %95
  %102 = add nsw i32 %99, -1
  %103 = insertelement <4 x i32> undef, i32 %102, i32 0
  %104 = shufflevector <4 x i32> %103, <4 x i32> undef, <4 x i32> zeroinitializer
  %105 = insertelement <4 x i32> undef, i32 %102, i32 0
  %106 = shufflevector <4 x i32> %105, <4 x i32> undef, <4 x i32> zeroinitializer
  %107 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 0
  %108 = bitcast i32* %107 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %108, align 4
  %109 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %110, align 4
  %111 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 8
  %112 = bitcast i32* %111 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %112, align 4
  %113 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 12
  %114 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %114, align 4
  %115 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 16
  %116 = bitcast i32* %115 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %116, align 4
  %117 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 20
  %118 = bitcast i32* %117 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %118, align 4
  %119 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 24
  %120 = bitcast i32* %119 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %120, align 4
  %121 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 28
  %122 = bitcast i32* %121 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %122, align 4
  %123 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 32
  %124 = bitcast i32* %123 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %124, align 4
  %125 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 36
  %126 = bitcast i32* %125 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %126, align 4
  %127 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 40
  %128 = bitcast i32* %127 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %128, align 4
  %129 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 44
  %130 = bitcast i32* %129 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %130, align 4
  %131 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 48
  %132 = bitcast i32* %131 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %132, align 4
  %133 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 52
  %134 = bitcast i32* %133 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %134, align 4
  %135 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 56
  %136 = bitcast i32* %135 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %136, align 4
  %137 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 60
  %138 = bitcast i32* %137 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %138, align 4
  %139 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 64
  %140 = bitcast i32* %139 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %140, align 4
  %141 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 68
  %142 = bitcast i32* %141 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %142, align 4
  %143 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 72
  %144 = bitcast i32* %143 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %144, align 4
  %145 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 76
  %146 = bitcast i32* %145 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %146, align 4
  %147 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 80
  %148 = bitcast i32* %147 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %148, align 4
  %149 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 84
  %150 = bitcast i32* %149 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %150, align 4
  %151 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 88
  %152 = bitcast i32* %151 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %152, align 4
  %153 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 92
  %154 = bitcast i32* %153 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %154, align 4
  %155 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 96
  %156 = bitcast i32* %155 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %156, align 4
  %157 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 100
  %158 = bitcast i32* %157 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %158, align 4
  %159 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 104
  %160 = bitcast i32* %159 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %160, align 4
  %161 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 108
  %162 = bitcast i32* %161 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %162, align 4
  %163 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 112
  %164 = bitcast i32* %163 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %164, align 4
  %165 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 116
  %166 = bitcast i32* %165 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %166, align 4
  %167 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 120
  %168 = bitcast i32* %167 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %168, align 4
  %169 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 124
  %170 = bitcast i32* %169 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %170, align 4
  %171 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 128
  %172 = bitcast i32* %171 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %172, align 4
  %173 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 132
  %174 = bitcast i32* %173 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %174, align 4
  %175 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 136
  %176 = bitcast i32* %175 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %176, align 4
  %177 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 140
  %178 = bitcast i32* %177 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %178, align 4
  %179 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 144
  %180 = bitcast i32* %179 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %180, align 4
  %181 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 148
  %182 = bitcast i32* %181 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %182, align 4
  %183 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 152
  %184 = bitcast i32* %183 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %184, align 4
  %185 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 156
  %186 = bitcast i32* %185 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %186, align 4
  %187 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 160
  %188 = bitcast i32* %187 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %188, align 4
  %189 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 164
  %190 = bitcast i32* %189 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %190, align 4
  %191 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 168
  %192 = bitcast i32* %191 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %192, align 4
  %193 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 172
  %194 = bitcast i32* %193 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %194, align 4
  %195 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 176
  %196 = bitcast i32* %195 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %196, align 4
  %197 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 180
  %198 = bitcast i32* %197 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %198, align 4
  %199 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 184
  %200 = bitcast i32* %199 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %200, align 4
  %201 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 188
  %202 = bitcast i32* %201 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %202, align 4
  %203 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 192
  %204 = bitcast i32* %203 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %204, align 4
  %205 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 196
  %206 = bitcast i32* %205 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %206, align 4
  %207 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 200
  %208 = bitcast i32* %207 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %208, align 4
  %209 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 204
  %210 = bitcast i32* %209 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %210, align 4
  %211 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 208
  %212 = bitcast i32* %211 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %212, align 4
  %213 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 212
  %214 = bitcast i32* %213 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %214, align 4
  %215 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 216
  %216 = bitcast i32* %215 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %216, align 4
  %217 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 220
  %218 = bitcast i32* %217 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %218, align 4
  %219 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 224
  %220 = bitcast i32* %219 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %220, align 4
  %221 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 228
  %222 = bitcast i32* %221 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %222, align 4
  %223 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 232
  %224 = bitcast i32* %223 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %224, align 4
  %225 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 236
  %226 = bitcast i32* %225 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %226, align 4
  %227 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 240
  %228 = bitcast i32* %227 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %228, align 4
  %229 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 244
  %230 = bitcast i32* %229 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %230, align 4
  %231 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 248
  %232 = bitcast i32* %231 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %232, align 4
  %233 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 252
  %234 = bitcast i32* %233 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %234, align 4
  br label %238

235:                                              ; preds = %95
  %236 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 0
  %237 = bitcast i32* %236 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %237, i8 -1, i64 1024, i1 false) #7
  br label %238

238:                                              ; preds = %101, %235
  %239 = add i32 %9, -1
  %240 = icmp slt i32 %99, %239
  br i1 %240, label %241, label %279

241:                                              ; preds = %238
  %242 = sext i32 %99 to i64
  %243 = sext i32 %239 to i64
  %244 = sub nsw i64 %243, %242
  %245 = xor i64 %242, -1
  %246 = and i64 %244, 1
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %256, label %248

248:                                              ; preds = %241
  %249 = load i16*, i16** %5, align 8
  %250 = getelementptr inbounds i16, i16* %249, i64 %242
  %251 = load i16, i16* %250, align 2
  %252 = and i16 %251, 255
  %253 = zext i16 %252 to i64
  %254 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 %253
  store i32 %99, i32* %254, align 4
  %255 = add nsw i64 %242, 1
  br label %256

256:                                              ; preds = %241, %248
  %257 = phi i64 [ %242, %241 ], [ %255, %248 ]
  %258 = sub nsw i64 0, %243
  %259 = icmp eq i64 %245, %258
  br i1 %259, label %279, label %260

260:                                              ; preds = %256, %260
  %261 = phi i64 [ %277, %260 ], [ %257, %256 ]
  %262 = load i16*, i16** %5, align 8
  %263 = getelementptr inbounds i16, i16* %262, i64 %261
  %264 = load i16, i16* %263, align 2
  %265 = and i16 %264, 255
  %266 = zext i16 %265 to i64
  %267 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 %266
  %268 = trunc i64 %261 to i32
  store i32 %268, i32* %267, align 4
  %269 = add nsw i64 %261, 1
  %270 = load i16*, i16** %5, align 8
  %271 = getelementptr inbounds i16, i16* %270, i64 %269
  %272 = load i16, i16* %271, align 2
  %273 = and i16 %272, 255
  %274 = zext i16 %273 to i64
  %275 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 121, i64 %274
  %276 = trunc i64 %269 to i32
  store i32 %276, i32* %275, align 4
  %277 = add nsw i64 %261, 2
  %278 = icmp eq i64 %277, %243
  br i1 %278, label %279, label %260

279:                                              ; preds = %256, %260, %238
  %280 = getelementptr inbounds %"class.v8::internal::StringSearch.1205", %"class.v8::internal::StringSearch.1205"* %0, i64 0, i32 2
  store i32 (%"class.v8::internal::StringSearch.1205"*, i16*, i64, i32)* @_ZN2v88internal12StringSearchIttE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKtEEi, i32 (%"class.v8::internal::StringSearch.1205"*, i16*, i64, i32)** %280, align 8
  %281 = tail call i32 @_ZN2v88internal12StringSearchIttE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1205"* %0, i16* %1, i64 %2, i32 %23)
  br label %288

282:                                              ; preds = %92
  %283 = add nsw i32 %24, %93
  %284 = add nsw i32 %72, 1
  %285 = icmp sgt i32 %11, %72
  br i1 %285, label %21, label %288

286:                                              ; preds = %92
  %287 = trunc i64 %71 to i32
  br label %288

288:                                              ; preds = %286, %70, %282, %67, %46, %36, %4, %279
  %289 = phi i32 [ %281, %279 ], [ -1, %4 ], [ -1, %36 ], [ -1, %46 ], [ -1, %67 ], [ %287, %286 ], [ -1, %70 ], [ -1, %282 ]
  ret i32 %289
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIttE24BoyerMooreHorspoolSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1205"*, i16*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1205", %"class.v8::internal::StringSearch.1205"* %0, i64 0, i32 1, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1205", %"class.v8::internal::StringSearch.1205"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %2 to i32
  %10 = trunc i64 %8 to i32
  %11 = getelementptr inbounds %"class.v8::internal::StringSearch.1205", %"class.v8::internal::StringSearch.1205"* %0, i64 0, i32 0
  %12 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %13 = add nsw i32 %10, -1
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i16, i16* %6, i64 %14
  %16 = load i16, i16* %15, align 2
  %17 = and i16 %16, 255
  %18 = zext i16 %17 to i64
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 121, i64 %18
  %20 = load i32, i32* %19, align 4
  %21 = sub nsw i32 %13, %20
  %22 = sub nsw i32 %9, %10
  %23 = add i32 %10, -2
  %24 = icmp sgt i32 %23, -1
  %25 = sub i32 %10, %21
  br i1 %24, label %26, label %70

26:                                               ; preds = %4
  %27 = sub nsw i32 0, %10
  %28 = sext i32 %23 to i64
  br label %29

29:                                               ; preds = %26, %59
  %30 = phi i32 [ %61, %59 ], [ %3, %26 ]
  %31 = phi i32 [ %63, %59 ], [ %27, %26 ]
  %32 = icmp sgt i32 %30, %22
  br i1 %32, label %90, label %33

33:                                               ; preds = %29, %41
  %34 = phi i32 [ %47, %41 ], [ %30, %29 ]
  %35 = phi i32 [ %49, %41 ], [ %31, %29 ]
  %36 = add nsw i32 %34, %13
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i16, i16* %1, i64 %37
  %39 = load i16, i16* %38, align 2
  %40 = icmp eq i16 %16, %39
  br i1 %40, label %68, label %41

41:                                               ; preds = %33
  %42 = and i16 %39, 255
  %43 = zext i16 %42 to i64
  %44 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 121, i64 %43
  %45 = load i32, i32* %44, align 4
  %46 = sub nsw i32 %13, %45
  %47 = add nsw i32 %46, %34
  %48 = add i32 %35, 1
  %49 = sub i32 %48, %46
  %50 = icmp sgt i32 %47, %22
  br i1 %50, label %90, label %33

51:                                               ; preds = %68, %65
  %52 = phi i64 [ %28, %68 ], [ %66, %65 ]
  %53 = getelementptr inbounds i16, i16* %6, i64 %52
  %54 = load i16, i16* %53, align 2
  %55 = add nsw i64 %52, %69
  %56 = getelementptr inbounds i16, i16* %1, i64 %55
  %57 = load i16, i16* %56, align 2
  %58 = icmp eq i16 %54, %57
  br i1 %58, label %65, label %59

59:                                               ; preds = %51
  %60 = trunc i64 %52 to i32
  %61 = add nsw i32 %34, %21
  %62 = add i32 %25, %35
  %63 = sub i32 %62, %60
  %64 = icmp sgt i32 %63, 0
  br i1 %64, label %87, label %29

65:                                               ; preds = %51
  %66 = add nsw i64 %52, -1
  %67 = icmp sgt i64 %52, 0
  br i1 %67, label %51, label %90

68:                                               ; preds = %33
  %69 = sext i32 %34 to i64
  br label %51

70:                                               ; preds = %4
  %71 = icmp slt i32 %22, %3
  br i1 %71, label %90, label %72

72:                                               ; preds = %70, %79
  %73 = phi i32 [ %85, %79 ], [ %3, %70 ]
  %74 = add nsw i32 %73, %13
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i16, i16* %1, i64 %75
  %77 = load i16, i16* %76, align 2
  %78 = icmp eq i16 %16, %77
  br i1 %78, label %90, label %79

79:                                               ; preds = %72
  %80 = and i16 %77, 255
  %81 = zext i16 %80 to i64
  %82 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 121, i64 %81
  %83 = load i32, i32* %82, align 4
  %84 = sub nsw i32 %13, %83
  %85 = add nsw i32 %84, %73
  %86 = icmp sgt i32 %85, %22
  br i1 %86, label %90, label %72

87:                                               ; preds = %59
  tail call void @_ZN2v88internal12StringSearchIttE23PopulateBoyerMooreTableEv(%"class.v8::internal::StringSearch.1205"* %0)
  %88 = getelementptr inbounds %"class.v8::internal::StringSearch.1205", %"class.v8::internal::StringSearch.1205"* %0, i64 0, i32 2
  store i32 (%"class.v8::internal::StringSearch.1205"*, i16*, i64, i32)* @_ZN2v88internal12StringSearchIttE16BoyerMooreSearchEPS2_NS0_6VectorIKtEEi, i32 (%"class.v8::internal::StringSearch.1205"*, i16*, i64, i32)** %88, align 8
  %89 = tail call i32 @_ZN2v88internal12StringSearchIttE16BoyerMooreSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1205"* %0, i16* %1, i64 %2, i32 %61)
  br label %90

90:                                               ; preds = %79, %72, %29, %41, %65, %70, %87
  %91 = phi i32 [ %89, %87 ], [ -1, %70 ], [ %34, %65 ], [ -1, %41 ], [ -1, %29 ], [ %73, %72 ], [ -1, %79 ]
  ret i32 %91
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12StringSearchIttE23PopulateBoyerMooreTableEv(%"class.v8::internal::StringSearch.1205"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::StringSearch.1205", %"class.v8::internal::StringSearch.1205"* %0, i64 0, i32 1, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = trunc i64 %3 to i32
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1205", %"class.v8::internal::StringSearch.1205"* %0, i64 0, i32 1, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1205", %"class.v8::internal::StringSearch.1205"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = sub nsw i32 %4, %8
  %10 = getelementptr inbounds %"class.v8::internal::StringSearch.1205", %"class.v8::internal::StringSearch.1205"* %0, i64 0, i32 0
  %11 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %12 = sext i32 %8 to i64
  %13 = sub nsw i64 0, %12
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %13
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 123, i64 %13
  %16 = icmp slt i32 %8, %4
  br i1 %16, label %17, label %100

17:                                               ; preds = %1
  %18 = shl i64 %3, 32
  %19 = ashr exact i64 %18, 32
  %20 = shl i64 %3, 32
  %21 = ashr exact i64 %20, 32
  %22 = sub nsw i64 %21, %12
  %23 = icmp ult i64 %22, 8
  br i1 %23, label %24, label %26

24:                                               ; preds = %98, %17
  %25 = phi i64 [ %12, %17 ], [ %28, %98 ]
  br label %106

26:                                               ; preds = %17
  %27 = and i64 %22, -8
  %28 = add nsw i64 %27, %12
  %29 = insertelement <4 x i32> undef, i32 %9, i32 0
  %30 = shufflevector <4 x i32> %29, <4 x i32> undef, <4 x i32> zeroinitializer
  %31 = insertelement <4 x i32> undef, i32 %9, i32 0
  %32 = shufflevector <4 x i32> %31, <4 x i32> undef, <4 x i32> zeroinitializer
  %33 = add nsw i64 %27, -8
  %34 = lshr exact i64 %33, 3
  %35 = add nuw nsw i64 %34, 1
  %36 = and i64 %35, 7
  %37 = icmp ult i64 %33, 56
  br i1 %37, label %85, label %38

38:                                               ; preds = %26
  %39 = sub nsw i64 %35, %36
  br label %40

40:                                               ; preds = %40, %38
  %41 = phi i64 [ 0, %38 ], [ %82, %40 ]
  %42 = phi i64 [ %39, %38 ], [ %83, %40 ]
  %43 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %41
  %44 = bitcast i32* %43 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %44, align 4
  %45 = getelementptr inbounds i32, i32* %43, i64 4
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %46, align 4
  %47 = or i64 %41, 8
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %47
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %49, align 4
  %50 = getelementptr inbounds i32, i32* %48, i64 4
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %51, align 4
  %52 = or i64 %41, 16
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %52
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %54, align 4
  %55 = getelementptr inbounds i32, i32* %53, i64 4
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %56, align 4
  %57 = or i64 %41, 24
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %57
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %59, align 4
  %60 = getelementptr inbounds i32, i32* %58, i64 4
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %61, align 4
  %62 = or i64 %41, 32
  %63 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %62
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %64, align 4
  %65 = getelementptr inbounds i32, i32* %63, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %66, align 4
  %67 = or i64 %41, 40
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %67
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %69, align 4
  %70 = getelementptr inbounds i32, i32* %68, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %71, align 4
  %72 = or i64 %41, 48
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %72
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %74, align 4
  %75 = getelementptr inbounds i32, i32* %73, i64 4
  %76 = bitcast i32* %75 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %76, align 4
  %77 = or i64 %41, 56
  %78 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %77
  %79 = bitcast i32* %78 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %79, align 4
  %80 = getelementptr inbounds i32, i32* %78, i64 4
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %81, align 4
  %82 = add i64 %41, 64
  %83 = add i64 %42, -8
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %40, !llvm.loop !56

85:                                               ; preds = %40, %26
  %86 = phi i64 [ 0, %26 ], [ %82, %40 ]
  %87 = icmp eq i64 %36, 0
  br i1 %87, label %98, label %88

88:                                               ; preds = %85, %88
  %89 = phi i64 [ %95, %88 ], [ %86, %85 ]
  %90 = phi i64 [ %96, %88 ], [ %36, %85 ]
  %91 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 %89
  %92 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %92, align 4
  %93 = getelementptr inbounds i32, i32* %91, i64 4
  %94 = bitcast i32* %93 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %94, align 4
  %95 = add i64 %89, 8
  %96 = add i64 %90, -1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %88, !llvm.loop !57

98:                                               ; preds = %88, %85
  %99 = icmp eq i64 %22, %27
  br i1 %99, label %100, label %24

100:                                              ; preds = %106, %98, %1
  %101 = shl i64 %3, 32
  %102 = ashr exact i64 %101, 32
  %103 = getelementptr inbounds i32, i32* %14, i64 %102
  store i32 1, i32* %103, align 4
  %104 = add nsw i32 %4, 1
  %105 = getelementptr inbounds i32, i32* %15, i64 %102
  store i32 %104, i32* %105, align 4
  br i1 %16, label %111, label %227

106:                                              ; preds = %24, %106
  %107 = phi i64 [ %109, %106 ], [ %25, %24 ]
  %108 = getelementptr inbounds i32, i32* %14, i64 %107
  store i32 %9, i32* %108, align 4
  %109 = add nsw i64 %107, 1
  %110 = icmp eq i64 %109, %19
  br i1 %110, label %100, label %106, !llvm.loop !58

111:                                              ; preds = %100
  %112 = add i64 %101, -4294967296
  %113 = ashr exact i64 %112, 32
  %114 = getelementptr inbounds i16, i16* %6, i64 %113
  %115 = load i16, i16* %114, align 2
  %116 = shl i64 %3, 32
  %117 = ashr exact i64 %116, 32
  br label %118

118:                                              ; preds = %111, %172
  %119 = phi i32 [ %4, %111 ], [ %174, %172 ]
  %120 = phi i32 [ %104, %111 ], [ %173, %172 ]
  %121 = add nsw i32 %119, -1
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds i16, i16* %6, i64 %122
  %124 = load i16, i16* %123, align 2
  %125 = icmp sgt i32 %120, %4
  br i1 %125, label %144, label %126

126:                                              ; preds = %118, %140
  %127 = phi i32 [ %142, %140 ], [ %120, %118 ]
  %128 = add nsw i32 %127, -1
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i16, i16* %6, i64 %129
  %131 = load i16, i16* %130, align 2
  %132 = icmp eq i16 %124, %131
  br i1 %132, label %144, label %133

133:                                              ; preds = %126
  %134 = sext i32 %127 to i64
  %135 = getelementptr inbounds i32, i32* %14, i64 %134
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, %9
  br i1 %137, label %138, label %140

138:                                              ; preds = %133
  %139 = sub nsw i32 %127, %119
  store i32 %139, i32* %135, align 4
  br label %140

140:                                              ; preds = %138, %133
  %141 = getelementptr inbounds i32, i32* %15, i64 %134
  %142 = load i32, i32* %141, align 4
  %143 = icmp sgt i32 %142, %4
  br i1 %143, label %144, label %126

144:                                              ; preds = %140, %126, %118
  %145 = phi i32 [ %120, %118 ], [ %127, %126 ], [ %142, %140 ]
  %146 = add nsw i32 %145, -1
  %147 = getelementptr inbounds i32, i32* %15, i64 %122
  store i32 %146, i32* %147, align 4
  %148 = icmp eq i32 %146, %4
  %149 = icmp sgt i32 %121, %8
  %150 = and i1 %148, %149
  br i1 %150, label %151, label %172

151:                                              ; preds = %144, %163
  %152 = phi i64 [ %153, %163 ], [ %122, %144 ]
  %153 = add nsw i64 %152, -1
  %154 = getelementptr inbounds i16, i16* %6, i64 %153
  %155 = load i16, i16* %154, align 2
  %156 = icmp eq i16 %155, %115
  br i1 %156, label %166, label %157

157:                                              ; preds = %151
  %158 = load i32, i32* %103, align 4
  %159 = icmp eq i32 %158, %9
  br i1 %159, label %160, label %163

160:                                              ; preds = %157
  %161 = sub nsw i64 %117, %152
  %162 = trunc i64 %161 to i32
  store i32 %162, i32* %103, align 4
  br label %163

163:                                              ; preds = %160, %157
  %164 = getelementptr inbounds i32, i32* %15, i64 %153
  store i32 %4, i32* %164, align 4
  %165 = icmp sgt i64 %153, %12
  br i1 %165, label %151, label %170

166:                                              ; preds = %151
  %167 = trunc i64 %153 to i32
  %168 = add nsw i32 %145, -2
  %169 = getelementptr inbounds i32, i32* %15, i64 %153
  store i32 %168, i32* %169, align 4
  br label %172

170:                                              ; preds = %163
  %171 = trunc i64 %153 to i32
  br label %172

172:                                              ; preds = %170, %166, %144
  %173 = phi i32 [ %168, %166 ], [ %146, %144 ], [ %4, %170 ]
  %174 = phi i32 [ %167, %166 ], [ %121, %144 ], [ %171, %170 ]
  %175 = icmp sgt i32 %174, %8
  br i1 %175, label %118, label %176

176:                                              ; preds = %172
  %177 = icmp sge i32 %173, %4
  %178 = icmp sgt i32 %8, %4
  %179 = or i1 %177, %178
  br i1 %179, label %227, label %180

180:                                              ; preds = %176
  %181 = shl i64 %3, 32
  %182 = ashr exact i64 %181, 32
  %183 = add nsw i64 %182, 1
  %184 = sub nsw i64 %183, %12
  %185 = and i64 %184, 1
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %202, label %187

187:                                              ; preds = %180
  %188 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 122, i64 0
  %189 = load i32, i32* %188, align 4
  %190 = icmp eq i32 %189, %9
  br i1 %190, label %191, label %193

191:                                              ; preds = %187
  %192 = sub nsw i32 %173, %8
  store i32 %192, i32* %188, align 4
  br label %193

193:                                              ; preds = %191, %187
  %194 = icmp eq i32 %173, %8
  br i1 %194, label %195, label %199

195:                                              ; preds = %193
  %196 = sext i32 %173 to i64
  %197 = getelementptr inbounds i32, i32* %15, i64 %196
  %198 = load i32, i32* %197, align 4
  br label %199

199:                                              ; preds = %195, %193
  %200 = phi i32 [ %198, %195 ], [ %173, %193 ]
  %201 = add nsw i64 %12, 1
  br label %202

202:                                              ; preds = %180, %199
  %203 = phi i64 [ %12, %180 ], [ %201, %199 ]
  %204 = phi i32 [ %173, %180 ], [ %200, %199 ]
  %205 = icmp eq i64 %182, %12
  br i1 %205, label %227, label %206

206:                                              ; preds = %202, %237
  %207 = phi i64 [ %239, %237 ], [ %203, %202 ]
  %208 = phi i32 [ %238, %237 ], [ %204, %202 ]
  %209 = getelementptr inbounds i32, i32* %14, i64 %207
  %210 = load i32, i32* %209, align 4
  %211 = icmp eq i32 %210, %9
  br i1 %211, label %212, label %214

212:                                              ; preds = %206
  %213 = sub nsw i32 %208, %8
  store i32 %213, i32* %209, align 4
  br label %214

214:                                              ; preds = %212, %206
  %215 = trunc i64 %207 to i32
  %216 = icmp eq i32 %208, %215
  br i1 %216, label %217, label %221

217:                                              ; preds = %214
  %218 = sext i32 %208 to i64
  %219 = getelementptr inbounds i32, i32* %15, i64 %218
  %220 = load i32, i32* %219, align 4
  br label %221

221:                                              ; preds = %214, %217
  %222 = phi i32 [ %220, %217 ], [ %208, %214 ]
  %223 = add nsw i64 %207, 1
  %224 = getelementptr inbounds i32, i32* %14, i64 %223
  %225 = load i32, i32* %224, align 4
  %226 = icmp eq i32 %225, %9
  br i1 %226, label %228, label %230

227:                                              ; preds = %202, %237, %176, %100
  ret void

228:                                              ; preds = %221
  %229 = sub nsw i32 %222, %8
  store i32 %229, i32* %224, align 4
  br label %230

230:                                              ; preds = %228, %221
  %231 = trunc i64 %223 to i32
  %232 = icmp eq i32 %222, %231
  br i1 %232, label %233, label %237

233:                                              ; preds = %230
  %234 = sext i32 %222 to i64
  %235 = getelementptr inbounds i32, i32* %15, i64 %234
  %236 = load i32, i32* %235, align 4
  br label %237

237:                                              ; preds = %233, %230
  %238 = phi i32 [ %236, %233 ], [ %222, %230 ]
  %239 = add nsw i64 %207, 2
  %240 = icmp slt i64 %223, %117
  br i1 %240, label %206, label %227
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringSearchIttE16BoyerMooreSearchEPS2_NS0_6VectorIKtEEi(%"class.v8::internal::StringSearch.1205"*, i16*, i64, i32) #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::StringSearch.1205", %"class.v8::internal::StringSearch.1205"* %0, i64 0, i32 1, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringSearch.1205", %"class.v8::internal::StringSearch.1205"* %0, i64 0, i32 1, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %2 to i32
  %10 = trunc i64 %8 to i32
  %11 = getelementptr inbounds %"class.v8::internal::StringSearch.1205", %"class.v8::internal::StringSearch.1205"* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::StringSearch.1205", %"class.v8::internal::StringSearch.1205"* %0, i64 0, i32 0
  %14 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %13, align 8
  %15 = sext i32 %12 to i64
  %16 = sub nsw i64 0, %15
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 122, i64 %16
  %18 = add nsw i32 %10, -1
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i16, i16* %6, i64 %19
  %21 = load i16, i16* %20, align 2
  %22 = sub nsw i32 %9, %10
  %23 = icmp slt i32 %22, %3
  br i1 %23, label %100, label %24

24:                                               ; preds = %4
  %25 = icmp sgt i32 %10, 0
  %26 = and i16 %21, 255
  %27 = zext i16 %26 to i64
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %27
  br i1 %25, label %29, label %85

29:                                               ; preds = %24
  %30 = shl i64 %8, 32
  %31 = ashr exact i64 %30, 32
  br label %32

32:                                               ; preds = %47, %29
  %33 = phi i32 [ %3, %29 ], [ %48, %47 ]
  %34 = add nsw i32 %33, %18
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %1, i64 %35
  %37 = load i16, i16* %36, align 2
  %38 = icmp eq i16 %21, %37
  br i1 %38, label %83, label %39

39:                                               ; preds = %32
  %40 = and i16 %37, 255
  %41 = zext i16 %40 to i64
  %42 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %41
  %43 = load i32, i32* %42, align 4
  %44 = sub nsw i32 %18, %43
  %45 = add nsw i32 %44, %33
  %46 = icmp sgt i32 %45, %22
  br i1 %46, label %100, label %47

47:                                               ; preds = %39, %77
  %48 = phi i32 [ %45, %39 ], [ %79, %77 ]
  br label %32

49:                                               ; preds = %83, %81
  %50 = phi i64 [ %31, %83 ], [ %51, %81 ]
  %51 = add i64 %50, -1
  %52 = getelementptr inbounds i16, i16* %6, i64 %51
  %53 = load i16, i16* %52, align 2
  %54 = add nsw i64 %51, %84
  %55 = getelementptr inbounds i16, i16* %1, i64 %54
  %56 = load i16, i16* %55, align 2
  %57 = icmp eq i16 %53, %56
  br i1 %57, label %81, label %58

58:                                               ; preds = %49
  %59 = trunc i64 %51 to i32
  %60 = icmp sgt i32 %12, %59
  br i1 %60, label %74, label %61

61:                                               ; preds = %58
  %62 = shl i64 %51, 32
  %63 = add i64 %62, 4294967296
  %64 = ashr exact i64 %63, 32
  %65 = getelementptr inbounds i32, i32* %17, i64 %64
  %66 = load i32, i32* %65, align 4
  %67 = and i16 %56, 255
  %68 = zext i16 %67 to i64
  %69 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %68
  %70 = load i32, i32* %69, align 4
  %71 = sub nsw i32 %59, %70
  %72 = icmp sgt i32 %66, %71
  %73 = select i1 %72, i32 %66, i32 %71
  br label %77

74:                                               ; preds = %58
  %75 = load i32, i32* %28, align 4
  %76 = sub nsw i32 %18, %75
  br label %77

77:                                               ; preds = %74, %61
  %78 = phi i32 [ %76, %74 ], [ %73, %61 ]
  %79 = add nsw i32 %78, %33
  %80 = icmp sgt i32 %79, %22
  br i1 %80, label %100, label %47

81:                                               ; preds = %49
  %82 = icmp sgt i64 %51, 0
  br i1 %82, label %49, label %100

83:                                               ; preds = %32
  %84 = sext i32 %33 to i64
  br label %49

85:                                               ; preds = %24, %92
  %86 = phi i32 [ %98, %92 ], [ %3, %24 ]
  %87 = add nsw i32 %86, %18
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds i16, i16* %1, i64 %88
  %90 = load i16, i16* %89, align 2
  %91 = icmp eq i16 %21, %90
  br i1 %91, label %100, label %92

92:                                               ; preds = %85
  %93 = and i16 %90, 255
  %94 = zext i16 %93 to i64
  %95 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 121, i64 %94
  %96 = load i32, i32* %95, align 4
  %97 = sub nsw i32 %18, %96
  %98 = add nsw i32 %97, %86
  %99 = icmp sgt i32 %98, %22
  br i1 %99, label %100, label %85

100:                                              ; preds = %92, %85, %77, %39, %81, %4
  %101 = phi i32 [ -1, %4 ], [ %33, %81 ], [ -1, %39 ], [ -1, %77 ], [ %86, %85 ], [ -1, %92 ]
  ret i32 %101
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal6String23IsConsStringEqualToImplIcEEbNS0_10ConsStringEiNS0_6VectorIKT_EENS0_16PtrComprCageBaseERKNS0_31SharedStringAccessGuardIfNeededE(i64, i32, i8*, i64, i64, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16)) local_unnamed_addr #15 comdat align 2 {
  %7 = alloca i8, align 1
  %8 = alloca i32, align 4
  %9 = alloca %"class.v8::internal::ConsStringIterator", align 8
  store i32 %1, i32* %8, align 4
  %10 = bitcast %"class.v8::internal::ConsStringIterator"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %10) #7
  %11 = trunc i64 %0 to i32
  %12 = icmp eq i32 %11, 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 268, i1 false) #7
  br i1 %12, label %13, label %14

13:                                               ; preds = %6
  store i32 0, i32* %8, align 4
  br label %210

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.v8::internal::ConsStringIterator", %"class.v8::internal::ConsStringIterator"* %9, i64 0, i32 2
  %16 = getelementptr inbounds %"class.v8::internal::ConsStringIterator", %"class.v8::internal::ConsStringIterator"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %0, i64* %16, align 8
  %17 = getelementptr inbounds %"class.v8::internal::ConsStringIterator", %"class.v8::internal::ConsStringIterator"* %9, i64 0, i32 4
  store i32 %1, i32* %17, align 8
  store i32 1, i32* %15, align 8
  %18 = getelementptr inbounds %"class.v8::internal::ConsStringIterator", %"class.v8::internal::ConsStringIterator"* %9, i64 0, i32 3
  store i32 33, i32* %18, align 4
  store i32 0, i32* %8, align 4
  %19 = getelementptr inbounds %"class.v8::internal::ConsStringIterator", %"class.v8::internal::ConsStringIterator"* %9, i64 0, i32 2
  %20 = call i64 @_ZN2v88internal18ConsStringIterator6SearchEPi(%"class.v8::internal::ConsStringIterator"* nonnull %9, i32* nonnull %8) #7
  %21 = trunc i64 %20 to i32
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %14
  store i32 0, i32* %19, align 8
  br label %24

24:                                               ; preds = %14, %23
  %25 = trunc i64 %20 to i32
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %210, label %27

27:                                               ; preds = %24
  %28 = and i64 %4, 4294967295
  %29 = icmp eq i64 %28, 0
  tail call void @llvm.assume(i1 %29) #7
  %30 = getelementptr inbounds %"class.v8::internal::ConsStringIterator", %"class.v8::internal::ConsStringIterator"* %9, i64 0, i32 3
  br label %31

31:                                               ; preds = %27, %207
  %32 = phi i64 [ %3, %27 ], [ %186, %207 ]
  %33 = phi i64 [ %20, %27 ], [ %203, %207 ]
  %34 = phi i8* [ %2, %27 ], [ %185, %207 ]
  %35 = add i64 %33, 7
  %36 = inttoptr i64 %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = sext i32 %37 to i64
  %39 = icmp ult i64 %32, %38
  %40 = select i1 %39, i64 %32, i64 %38
  br label %41

41:                                               ; preds = %175, %31
  %42 = phi i64 [ %33, %31 ], [ %181, %175 ]
  %43 = phi i32 [ 0, %31 ], [ %176, %175 ]
  %44 = add i64 %42, -1
  %45 = inttoptr i64 %44 to i32*
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = zext i32 %46 to i64
  %48 = or i64 %47, %4
  %49 = add i64 %48, 7
  %50 = inttoptr i64 %49 to i16*
  %51 = load atomic i16, i16* %50 monotonic, align 2
  %52 = and i16 %51, 15
  %53 = zext i16 %52 to i32
  switch i32 %53, label %174 [
    i32 8, label %54
    i32 0, label %61
    i32 10, label %80
    i32 2, label %118
    i32 11, label %168
    i32 3, label %168
    i32 9, label %182
    i32 1, label %182
    i32 13, label %175
    i32 5, label %175
  ]

54:                                               ; preds = %41
  %55 = add i64 %42, 11
  %56 = inttoptr i64 %55 to i8*
  %57 = sext i32 %43 to i64
  %58 = getelementptr inbounds i8, i8* %56, i64 %57
  %59 = tail call i32 @bcmp(i8* %58, i8* %34, i64 %40) #7
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %184, label %210

61:                                               ; preds = %41
  %62 = add i64 %42, 11
  %63 = inttoptr i64 %62 to i16*
  %64 = sext i32 %43 to i64
  %65 = getelementptr inbounds i16, i16* %63, i64 %64
  %66 = getelementptr inbounds i16, i16* %65, i64 %40
  %67 = icmp sgt i64 %40, 0
  br i1 %67, label %68, label %184

68:                                               ; preds = %61, %76
  %69 = phi i16* [ %77, %76 ], [ %65, %61 ]
  %70 = phi i8* [ %78, %76 ], [ %34, %61 ]
  %71 = load i16, i16* %69, align 2
  %72 = zext i16 %71 to i32
  %73 = load i8, i8* %70, align 1
  %74 = zext i8 %73 to i32
  %75 = icmp eq i32 %72, %74
  br i1 %75, label %76, label %210

76:                                               ; preds = %68
  %77 = getelementptr inbounds i16, i16* %69, i64 1
  %78 = getelementptr inbounds i8, i8* %70, i64 1
  %79 = icmp ult i16* %77, %66
  br i1 %79, label %68, label %184

80:                                               ; preds = %41
  %81 = inttoptr i64 %44 to i32*
  %82 = and i64 %42, -4294967296
  %83 = load atomic i32, i32* %81 monotonic, align 4
  %84 = zext i32 %83 to i64
  %85 = or i64 %82, %84
  %86 = add i64 %85, 7
  %87 = inttoptr i64 %86 to i16*
  %88 = load atomic i16, i16* %87 monotonic, align 2
  %89 = and i16 %88, 16
  %90 = icmp eq i16 %89, 0
  %91 = add i64 %42, 11
  %92 = inttoptr i64 %91 to %"class.v8::String::ExternalOneByteStringResource"**
  br i1 %90, label %105, label %93

93:                                               ; preds = %80
  %94 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %92, align 1
  %95 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %94, i64 0, i32 0
  %96 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %94 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %97 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %96, align 8
  %98 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %97, i64 2
  %99 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %98, align 8
  %100 = tail call zeroext i1 %99(%"class.v8::String::ExternalStringResourceBase"* %95) #7
  br i1 %100, label %101, label %105

101:                                              ; preds = %93
  %102 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %92, align 1
  tail call void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"* %102) #7
  %103 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %102, i64 0, i32 1
  %104 = load i8*, i8** %103, align 8
  br label %112

105:                                              ; preds = %80, %93
  %106 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %92, align 1
  %107 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %106 to i8* (%"class.v8::String::ExternalOneByteStringResource"*)***
  %108 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)**, i8* (%"class.v8::String::ExternalOneByteStringResource"*)*** %107, align 8
  %109 = getelementptr inbounds i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %108, i64 6
  %110 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %109, align 8
  %111 = tail call i8* %110(%"class.v8::String::ExternalOneByteStringResource"* %106) #7
  br label %112

112:                                              ; preds = %105, %101
  %113 = phi i8* [ %104, %101 ], [ %111, %105 ]
  %114 = sext i32 %43 to i64
  %115 = getelementptr inbounds i8, i8* %113, i64 %114
  %116 = tail call i32 @bcmp(i8* %115, i8* %34, i64 %40) #7
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %184, label %210

118:                                              ; preds = %41
  %119 = inttoptr i64 %44 to i32*
  %120 = and i64 %42, -4294967296
  %121 = load atomic i32, i32* %119 monotonic, align 4
  %122 = zext i32 %121 to i64
  %123 = or i64 %120, %122
  %124 = add i64 %123, 7
  %125 = inttoptr i64 %124 to i16*
  %126 = load atomic i16, i16* %125 monotonic, align 2
  %127 = and i16 %126, 16
  %128 = icmp eq i16 %127, 0
  %129 = add i64 %42, 11
  %130 = inttoptr i64 %129 to %"class.v8::String::ExternalStringResource"**
  br i1 %128, label %143, label %131

131:                                              ; preds = %118
  %132 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %130, align 1
  %133 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %132, i64 0, i32 0
  %134 = bitcast %"class.v8::String::ExternalStringResource"* %132 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %135 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %134, align 8
  %136 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %135, i64 2
  %137 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %136, align 8
  %138 = tail call zeroext i1 %137(%"class.v8::String::ExternalStringResourceBase"* %133) #7
  br i1 %138, label %139, label %143

139:                                              ; preds = %131
  %140 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %130, align 1
  tail call void @_ZNK2v86String22ExternalStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalStringResource"* %140) #7
  %141 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %140, i64 0, i32 1
  %142 = load i16*, i16** %141, align 8
  br label %150

143:                                              ; preds = %118, %131
  %144 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %130, align 1
  %145 = bitcast %"class.v8::String::ExternalStringResource"* %144 to i16* (%"class.v8::String::ExternalStringResource"*)***
  %146 = load i16* (%"class.v8::String::ExternalStringResource"*)**, i16* (%"class.v8::String::ExternalStringResource"*)*** %145, align 8
  %147 = getelementptr inbounds i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %146, i64 6
  %148 = load i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %147, align 8
  %149 = tail call i16* %148(%"class.v8::String::ExternalStringResource"* %144) #7
  br label %150

150:                                              ; preds = %143, %139
  %151 = phi i16* [ %142, %139 ], [ %149, %143 ]
  %152 = sext i32 %43 to i64
  %153 = getelementptr inbounds i16, i16* %151, i64 %152
  %154 = getelementptr inbounds i16, i16* %153, i64 %40
  %155 = icmp sgt i64 %40, 0
  br i1 %155, label %156, label %184

156:                                              ; preds = %150, %164
  %157 = phi i16* [ %165, %164 ], [ %153, %150 ]
  %158 = phi i8* [ %166, %164 ], [ %34, %150 ]
  %159 = load i16, i16* %157, align 2
  %160 = zext i16 %159 to i32
  %161 = load i8, i8* %158, align 1
  %162 = zext i8 %161 to i32
  %163 = icmp eq i32 %160, %162
  br i1 %163, label %164, label %210

164:                                              ; preds = %156
  %165 = getelementptr inbounds i16, i16* %157, i64 1
  %166 = getelementptr inbounds i8, i8* %158, i64 1
  %167 = icmp ult i16* %165, %154
  br i1 %167, label %156, label %184

168:                                              ; preds = %41, %41
  %169 = add i64 %42, 15
  %170 = inttoptr i64 %169 to i32*
  %171 = load i32, i32* %170, align 4
  %172 = ashr i32 %171, 1
  %173 = add nsw i32 %172, %43
  br label %175

174:                                              ; preds = %41
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24, i64 0, i64 0)) #18
  unreachable

175:                                              ; preds = %41, %41, %168
  %176 = phi i32 [ %173, %168 ], [ %43, %41 ], [ %43, %41 ]
  %177 = add i64 %42, 11
  %178 = inttoptr i64 %177 to i32*
  %179 = load i32, i32* %178, align 4
  %180 = zext i32 %179 to i64
  %181 = or i64 %180, %4
  br label %41

182:                                              ; preds = %41, %41
  %183 = tail call zeroext i1 @_ZN2v88internal6String23IsConsStringEqualToImplIcEEbNS0_10ConsStringEiNS0_6VectorIKT_EENS0_16PtrComprCageBaseERKNS0_31SharedStringAccessGuardIfNeededE(i64 %42, i32 %43, i8* %34, i64 %40, i64 %4, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16) %5) #7
  br i1 %183, label %184, label %210

184:                                              ; preds = %164, %76, %61, %150, %112, %54, %182
  %185 = getelementptr inbounds i8, i8* %34, i64 %40
  %186 = sub i64 %32, %40
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %210, label %188

188:                                              ; preds = %184
  store i32 0, i32* %8, align 4
  %189 = load i32, i32* %19, align 8
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %210, label %191

191:                                              ; preds = %188
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #7
  %192 = load i32, i32* %30, align 4
  %193 = sub nsw i32 %192, %189
  %194 = icmp eq i32 %193, 32
  %195 = zext i1 %194 to i8
  store i8 %195, i8* %7, align 1
  br i1 %194, label %200, label %196

196:                                              ; preds = %191
  %197 = call i64 @_ZN2v88internal18ConsStringIterator8NextLeafEPb(%"class.v8::internal::ConsStringIterator"* nonnull %9, i8* nonnull %7) #7
  %198 = load i8, i8* %7, align 1
  %199 = icmp eq i8 %198, 0
  br i1 %199, label %202, label %200

200:                                              ; preds = %196, %191
  %201 = call i64 @_ZN2v88internal18ConsStringIterator6SearchEPi(%"class.v8::internal::ConsStringIterator"* nonnull %9, i32* nonnull %8) #7
  br label %202

202:                                              ; preds = %200, %196
  %203 = phi i64 [ %197, %196 ], [ %201, %200 ]
  %204 = trunc i64 %203 to i32
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %207

206:                                              ; preds = %202
  store i32 0, i32* %19, align 8
  br label %207

207:                                              ; preds = %202, %206
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #7
  %208 = trunc i64 %203 to i32
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %31

210:                                              ; preds = %188, %184, %207, %112, %54, %182, %156, %68, %13, %24
  %211 = phi i1 [ true, %24 ], [ true, %13 ], [ false, %68 ], [ false, %156 ], [ true, %188 ], [ true, %184 ], [ true, %207 ], [ false, %112 ], [ false, %54 ], [ false, %182 ]
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %10) #7
  ret i1 %211
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #9

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringHasher20HashSequentialStringIhEEjPKT_im(i8*, i32, i64) local_unnamed_addr #2 comdat align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %97

5:                                                ; preds = %3
  %6 = load i8, i8* %0, align 1
  %7 = zext i8 %6 to i32
  %8 = add nsw i32 %7, -48
  %9 = icmp ult i32 %8, 10
  br i1 %9, label %10, label %90

10:                                               ; preds = %5
  %11 = icmp eq i32 %1, 1
  br i1 %11, label %36, label %12

12:                                               ; preds = %10
  %13 = icmp eq i8 %6, 48
  br i1 %13, label %90, label %14

14:                                               ; preds = %12
  %15 = icmp slt i32 %1, 11
  br i1 %15, label %16, label %39

16:                                               ; preds = %14
  %17 = zext i32 %1 to i64
  br label %18

18:                                               ; preds = %16, %32
  %19 = phi i64 [ 1, %16 ], [ %21, %32 ]
  %20 = phi i32 [ %8, %16 ], [ %34, %32 ]
  %21 = add nuw nsw i64 %19, 1
  %22 = getelementptr inbounds i8, i8* %0, i64 %19
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = add nsw i32 %24, -48
  %26 = icmp ult i32 %25, 10
  br i1 %26, label %27, label %39

27:                                               ; preds = %18
  %28 = add nsw i32 %24, -45
  %29 = ashr i32 %28, 3
  %30 = sub nuw nsw i32 429496729, %29
  %31 = icmp ugt i32 %20, %30
  br i1 %31, label %39, label %32

32:                                               ; preds = %27
  %33 = mul i32 %20, 10
  %34 = add i32 %25, %33
  %35 = icmp eq i64 %21, %17
  br i1 %35, label %36, label %18

36:                                               ; preds = %32, %10
  %37 = phi i32 [ %8, %10 ], [ %34, %32 ]
  %38 = tail call i32 @_ZN2v88internal12StringHasher18MakeArrayIndexHashEji(i32 %37, i32 %1) #7
  br label %170

39:                                               ; preds = %18, %27, %14
  %40 = icmp slt i32 %1, 17
  br i1 %40, label %41, label %90

41:                                               ; preds = %39
  %42 = trunc i64 %2 to i32
  %43 = sext i32 %1 to i64
  %44 = getelementptr inbounds i8, i8* %0, i64 %43
  %45 = icmp eq i32 %1, 0
  br i1 %45, label %72, label %46

46:                                               ; preds = %41, %63
  %47 = phi i8* [ %66, %63 ], [ %0, %41 ]
  %48 = phi i32 [ %70, %63 ], [ %42, %41 ]
  %49 = phi i32 [ %65, %63 ], [ 0, %41 ]
  %50 = phi i64 [ %64, %63 ], [ 0, %41 ]
  %51 = icmp eq i32 %49, 0
  %52 = load i8, i8* %47, align 1
  %53 = zext i8 %52 to i32
  br i1 %51, label %54, label %63

54:                                               ; preds = %46
  %55 = add nsw i32 %53, -48
  %56 = icmp ult i32 %55, 10
  br i1 %56, label %57, label %63

57:                                               ; preds = %54
  %58 = mul i64 %50, 10
  %59 = sext i32 %55 to i64
  %60 = add i64 %58, %59
  %61 = icmp ult i64 %60, 9007199254740992
  %62 = select i1 %61, i32 0, i32 2
  br label %63

63:                                               ; preds = %46, %57, %54
  %64 = phi i64 [ %60, %57 ], [ %50, %54 ], [ %50, %46 ]
  %65 = phi i32 [ %62, %57 ], [ 2, %54 ], [ %49, %46 ]
  %66 = getelementptr inbounds i8, i8* %47, i64 1
  %67 = add i32 %48, %53
  %68 = mul i32 %67, 1025
  %69 = lshr i32 %68, 6
  %70 = xor i32 %69, %68
  %71 = icmp eq i8* %66, %44
  br i1 %71, label %72, label %46

72:                                               ; preds = %63, %41
  %73 = phi i32 [ 0, %41 ], [ %65, %63 ]
  %74 = phi i32 [ %42, %41 ], [ %70, %63 ]
  %75 = mul i32 %74, 9
  %76 = lshr i32 %75, 11
  %77 = xor i32 %76, %75
  %78 = mul i32 %77, 32769
  %79 = and i32 %78, 1073741823
  %80 = add nsw i32 %79, -1
  %81 = ashr i32 %80, 31
  %82 = and i32 %81, 27
  %83 = or i32 %82, %78
  %84 = shl i32 %83, 2
  %85 = or i32 %84, %73
  %86 = and i32 %85, -536870910
  %87 = icmp eq i32 %86, 0
  %88 = or i32 %85, 536870912
  %89 = select i1 %87, i32 %88, i32 %85
  br label %170

90:                                               ; preds = %12, %39, %5
  %91 = icmp sgt i32 %1, 16383
  br i1 %91, label %94, label %92

92:                                               ; preds = %90
  %93 = trunc i64 %2 to i32
  br label %100

94:                                               ; preds = %90
  %95 = shl i32 %1, 2
  %96 = or i32 %95, 2
  br label %170

97:                                               ; preds = %3
  %98 = trunc i64 %2 to i32
  %99 = icmp eq i32 %1, 0
  br i1 %99, label %157, label %100

100:                                              ; preds = %92, %97
  %101 = phi i32 [ %93, %92 ], [ %98, %97 ]
  %102 = sext i32 %1 to i64
  %103 = getelementptr inbounds i8, i8* %0, i64 %102
  %104 = add nsw i64 %102, -1
  %105 = and i64 %102, 3
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %120, label %107

107:                                              ; preds = %100, %107
  %108 = phi i32 [ %117, %107 ], [ %101, %100 ]
  %109 = phi i8* [ %111, %107 ], [ %0, %100 ]
  %110 = phi i64 [ %118, %107 ], [ %105, %100 ]
  %111 = getelementptr inbounds i8, i8* %109, i64 1
  %112 = load i8, i8* %109, align 1
  %113 = zext i8 %112 to i32
  %114 = add i32 %108, %113
  %115 = mul i32 %114, 1025
  %116 = lshr i32 %115, 6
  %117 = xor i32 %116, %115
  %118 = add i64 %110, -1
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %107, !llvm.loop !59

120:                                              ; preds = %107, %100
  %121 = phi i32 [ undef, %100 ], [ %117, %107 ]
  %122 = phi i32 [ %101, %100 ], [ %117, %107 ]
  %123 = phi i8* [ %0, %100 ], [ %111, %107 ]
  %124 = icmp ult i64 %104, 3
  br i1 %124, label %157, label %125

125:                                              ; preds = %120, %125
  %126 = phi i32 [ %155, %125 ], [ %122, %120 ]
  %127 = phi i8* [ %149, %125 ], [ %123, %120 ]
  %128 = getelementptr inbounds i8, i8* %127, i64 1
  %129 = load i8, i8* %127, align 1
  %130 = zext i8 %129 to i32
  %131 = add i32 %126, %130
  %132 = mul i32 %131, 1025
  %133 = lshr i32 %132, 6
  %134 = xor i32 %133, %132
  %135 = getelementptr inbounds i8, i8* %127, i64 2
  %136 = load i8, i8* %128, align 1
  %137 = zext i8 %136 to i32
  %138 = add i32 %134, %137
  %139 = mul i32 %138, 1025
  %140 = lshr i32 %139, 6
  %141 = xor i32 %140, %139
  %142 = getelementptr inbounds i8, i8* %127, i64 3
  %143 = load i8, i8* %135, align 1
  %144 = zext i8 %143 to i32
  %145 = add i32 %141, %144
  %146 = mul i32 %145, 1025
  %147 = lshr i32 %146, 6
  %148 = xor i32 %147, %146
  %149 = getelementptr inbounds i8, i8* %127, i64 4
  %150 = load i8, i8* %142, align 1
  %151 = zext i8 %150 to i32
  %152 = add i32 %148, %151
  %153 = mul i32 %152, 1025
  %154 = lshr i32 %153, 6
  %155 = xor i32 %154, %153
  %156 = icmp eq i8* %149, %103
  br i1 %156, label %157, label %125

157:                                              ; preds = %120, %125, %97
  %158 = phi i32 [ %98, %97 ], [ %121, %120 ], [ %155, %125 ]
  %159 = mul i32 %158, 9
  %160 = lshr i32 %159, 11
  %161 = xor i32 %160, %159
  %162 = mul i32 %161, 32769
  %163 = and i32 %162, 1073741823
  %164 = add nsw i32 %163, -1
  %165 = ashr i32 %164, 31
  %166 = and i32 %165, 27
  %167 = or i32 %166, %162
  %168 = shl i32 %167, 2
  %169 = or i32 %168, 2
  br label %170

170:                                              ; preds = %36, %157, %94, %72
  %171 = phi i32 [ %89, %72 ], [ %96, %94 ], [ %169, %157 ], [ %38, %36 ]
  ret i32 %171
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #10

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #16

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12StringHasher20HashSequentialStringItEEjPKT_im(i16*, i32, i64) local_unnamed_addr #2 comdat align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %97

5:                                                ; preds = %3
  %6 = load i16, i16* %0, align 2
  %7 = zext i16 %6 to i32
  %8 = add nsw i32 %7, -48
  %9 = icmp ult i32 %8, 10
  br i1 %9, label %10, label %90

10:                                               ; preds = %5
  %11 = icmp eq i32 %1, 1
  br i1 %11, label %36, label %12

12:                                               ; preds = %10
  %13 = icmp eq i16 %6, 48
  br i1 %13, label %90, label %14

14:                                               ; preds = %12
  %15 = icmp slt i32 %1, 11
  br i1 %15, label %16, label %39

16:                                               ; preds = %14
  %17 = zext i32 %1 to i64
  br label %18

18:                                               ; preds = %16, %32
  %19 = phi i64 [ 1, %16 ], [ %21, %32 ]
  %20 = phi i32 [ %8, %16 ], [ %34, %32 ]
  %21 = add nuw nsw i64 %19, 1
  %22 = getelementptr inbounds i16, i16* %0, i64 %19
  %23 = load i16, i16* %22, align 2
  %24 = zext i16 %23 to i32
  %25 = add nsw i32 %24, -48
  %26 = icmp ult i32 %25, 10
  br i1 %26, label %27, label %39

27:                                               ; preds = %18
  %28 = add nsw i32 %24, -45
  %29 = ashr i32 %28, 3
  %30 = sub nuw nsw i32 429496729, %29
  %31 = icmp ugt i32 %20, %30
  br i1 %31, label %39, label %32

32:                                               ; preds = %27
  %33 = mul i32 %20, 10
  %34 = add i32 %25, %33
  %35 = icmp eq i64 %21, %17
  br i1 %35, label %36, label %18

36:                                               ; preds = %32, %10
  %37 = phi i32 [ %8, %10 ], [ %34, %32 ]
  %38 = tail call i32 @_ZN2v88internal12StringHasher18MakeArrayIndexHashEji(i32 %37, i32 %1) #7
  br label %173

39:                                               ; preds = %18, %27, %14
  %40 = icmp slt i32 %1, 17
  br i1 %40, label %41, label %90

41:                                               ; preds = %39
  %42 = trunc i64 %2 to i32
  %43 = sext i32 %1 to i64
  %44 = getelementptr inbounds i16, i16* %0, i64 %43
  %45 = icmp eq i32 %1, 0
  br i1 %45, label %72, label %46

46:                                               ; preds = %41, %63
  %47 = phi i16* [ %66, %63 ], [ %0, %41 ]
  %48 = phi i32 [ %70, %63 ], [ %42, %41 ]
  %49 = phi i32 [ %65, %63 ], [ 0, %41 ]
  %50 = phi i64 [ %64, %63 ], [ 0, %41 ]
  %51 = icmp eq i32 %49, 0
  %52 = load i16, i16* %47, align 2
  %53 = zext i16 %52 to i32
  br i1 %51, label %54, label %63

54:                                               ; preds = %46
  %55 = add nsw i32 %53, -48
  %56 = icmp ult i32 %55, 10
  br i1 %56, label %57, label %63

57:                                               ; preds = %54
  %58 = mul i64 %50, 10
  %59 = sext i32 %55 to i64
  %60 = add i64 %58, %59
  %61 = icmp ult i64 %60, 9007199254740992
  %62 = select i1 %61, i32 0, i32 2
  br label %63

63:                                               ; preds = %46, %57, %54
  %64 = phi i64 [ %60, %57 ], [ %50, %54 ], [ %50, %46 ]
  %65 = phi i32 [ %62, %57 ], [ 2, %54 ], [ %49, %46 ]
  %66 = getelementptr inbounds i16, i16* %47, i64 1
  %67 = add i32 %48, %53
  %68 = mul i32 %67, 1025
  %69 = lshr i32 %68, 6
  %70 = xor i32 %69, %68
  %71 = icmp eq i16* %66, %44
  br i1 %71, label %72, label %46

72:                                               ; preds = %63, %41
  %73 = phi i32 [ 0, %41 ], [ %65, %63 ]
  %74 = phi i32 [ %42, %41 ], [ %70, %63 ]
  %75 = mul i32 %74, 9
  %76 = lshr i32 %75, 11
  %77 = xor i32 %76, %75
  %78 = mul i32 %77, 32769
  %79 = and i32 %78, 1073741823
  %80 = add nsw i32 %79, -1
  %81 = ashr i32 %80, 31
  %82 = and i32 %81, 27
  %83 = or i32 %82, %78
  %84 = shl i32 %83, 2
  %85 = or i32 %84, %73
  %86 = and i32 %85, -536870910
  %87 = icmp eq i32 %86, 0
  %88 = or i32 %85, 536870912
  %89 = select i1 %87, i32 %88, i32 %85
  br label %173

90:                                               ; preds = %12, %39, %5
  %91 = icmp sgt i32 %1, 16383
  br i1 %91, label %94, label %92

92:                                               ; preds = %90
  %93 = trunc i64 %2 to i32
  br label %100

94:                                               ; preds = %90
  %95 = shl i32 %1, 2
  %96 = or i32 %95, 2
  br label %173

97:                                               ; preds = %3
  %98 = trunc i64 %2 to i32
  %99 = icmp eq i32 %1, 0
  br i1 %99, label %160, label %100

100:                                              ; preds = %92, %97
  %101 = phi i32 [ %93, %92 ], [ %98, %97 ]
  %102 = sext i32 %1 to i64
  %103 = getelementptr inbounds i16, i16* %0, i64 %102
  %104 = shl nsw i64 %102, 1
  %105 = add nsw i64 %104, -2
  %106 = lshr exact i64 %105, 1
  %107 = add nuw i64 %106, 1
  %108 = and i64 %107, 3
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %123, label %110

110:                                              ; preds = %100, %110
  %111 = phi i32 [ %120, %110 ], [ %101, %100 ]
  %112 = phi i16* [ %114, %110 ], [ %0, %100 ]
  %113 = phi i64 [ %121, %110 ], [ %108, %100 ]
  %114 = getelementptr inbounds i16, i16* %112, i64 1
  %115 = load i16, i16* %112, align 2
  %116 = zext i16 %115 to i32
  %117 = add i32 %111, %116
  %118 = mul i32 %117, 1025
  %119 = lshr i32 %118, 6
  %120 = xor i32 %119, %118
  %121 = add i64 %113, -1
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %123, label %110, !llvm.loop !60

123:                                              ; preds = %110, %100
  %124 = phi i32 [ undef, %100 ], [ %120, %110 ]
  %125 = phi i32 [ %101, %100 ], [ %120, %110 ]
  %126 = phi i16* [ %0, %100 ], [ %114, %110 ]
  %127 = icmp ult i64 %105, 6
  br i1 %127, label %160, label %128

128:                                              ; preds = %123, %128
  %129 = phi i32 [ %158, %128 ], [ %125, %123 ]
  %130 = phi i16* [ %152, %128 ], [ %126, %123 ]
  %131 = getelementptr inbounds i16, i16* %130, i64 1
  %132 = load i16, i16* %130, align 2
  %133 = zext i16 %132 to i32
  %134 = add i32 %129, %133
  %135 = mul i32 %134, 1025
  %136 = lshr i32 %135, 6
  %137 = xor i32 %136, %135
  %138 = getelementptr inbounds i16, i16* %130, i64 2
  %139 = load i16, i16* %131, align 2
  %140 = zext i16 %139 to i32
  %141 = add i32 %137, %140
  %142 = mul i32 %141, 1025
  %143 = lshr i32 %142, 6
  %144 = xor i32 %143, %142
  %145 = getelementptr inbounds i16, i16* %130, i64 3
  %146 = load i16, i16* %138, align 2
  %147 = zext i16 %146 to i32
  %148 = add i32 %144, %147
  %149 = mul i32 %148, 1025
  %150 = lshr i32 %149, 6
  %151 = xor i32 %150, %149
  %152 = getelementptr inbounds i16, i16* %130, i64 4
  %153 = load i16, i16* %145, align 2
  %154 = zext i16 %153 to i32
  %155 = add i32 %151, %154
  %156 = mul i32 %155, 1025
  %157 = lshr i32 %156, 6
  %158 = xor i32 %157, %156
  %159 = icmp eq i16* %152, %103
  br i1 %159, label %160, label %128

160:                                              ; preds = %123, %128, %97
  %161 = phi i32 [ %98, %97 ], [ %124, %123 ], [ %158, %128 ]
  %162 = mul i32 %161, 9
  %163 = lshr i32 %162, 11
  %164 = xor i32 %163, %162
  %165 = mul i32 %164, 32769
  %166 = and i32 %165, 1073741823
  %167 = add nsw i32 %166, -1
  %168 = ashr i32 %167, 31
  %169 = and i32 %168, 27
  %170 = or i32 %169, %165
  %171 = shl i32 %170, 2
  %172 = or i32 %171, 2
  br label %173

173:                                              ; preds = %36, %160, %94, %72
  %174 = phi i32 [ %89, %72 ], [ %96, %94 ], [ %172, %160 ], [ %38, %36 ]
  ret i32 %174
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #17

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readnone speculatable }
attributes #17 = { nofree nounwind readonly }
attributes #18 = { noreturn nounwind }
attributes #19 = { builtin nounwind }
attributes #20 = { nounwind readonly }
attributes #21 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN2v88internal31SharedStringAccessGuardIfNeeded9NotNeededEv: argument 0"}
!4 = distinct !{!4, !"_ZN2v88internal31SharedStringAccessGuardIfNeeded9NotNeededEv"}
!5 = !{i8 0, i8 2}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN2v88internal31SharedStringAccessGuardIfNeeded9NotNeededEv: argument 0"}
!8 = distinct !{!8, !"_ZN2v88internal31SharedStringAccessGuardIfNeeded9NotNeededEv"}
!9 = !{!10}
!10 = distinct !{!10, !11}
!11 = distinct !{!11, !"LVerDomain"}
!12 = !{!13}
!13 = distinct !{!13, !11}
!14 = distinct !{!14, !15}
!15 = !{!"llvm.loop.isvectorized", i32 1}
!16 = distinct !{!16, !15}
!17 = !{!18}
!18 = distinct !{!18, !19}
!19 = distinct !{!19, !"LVerDomain"}
!20 = !{!21}
!21 = distinct !{!21, !19}
!22 = distinct !{!22, !15}
!23 = distinct !{!23, !24}
!24 = !{!"llvm.loop.unroll.disable"}
!25 = distinct !{!25, !15}
!26 = !{!"branch_weights", i32 1, i32 2000}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZN2v88internal31SharedStringAccessGuardIfNeeded9NotNeededEv: argument 0"}
!29 = distinct !{!29, !"_ZN2v88internal31SharedStringAccessGuardIfNeeded9NotNeededEv"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZN2v88internal31SharedStringAccessGuardIfNeeded9NotNeededEv: argument 0"}
!32 = distinct !{!32, !"_ZN2v88internal31SharedStringAccessGuardIfNeeded9NotNeededEv"}
!33 = distinct !{!33, !24}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZN2v88internal31SharedStringAccessGuardIfNeeded9NotNeededEv: argument 0"}
!36 = distinct !{!36, !"_ZN2v88internal31SharedStringAccessGuardIfNeeded9NotNeededEv"}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZN2v88internal31SharedStringAccessGuardIfNeeded9NotNeededEv: argument 0"}
!39 = distinct !{!39, !"_ZN2v88internal31SharedStringAccessGuardIfNeeded9NotNeededEv"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZN2v88internal31SharedStringAccessGuardIfNeeded9NotNeededEv: argument 0"}
!42 = distinct !{!42, !"_ZN2v88internal31SharedStringAccessGuardIfNeeded9NotNeededEv"}
!43 = !{!"branch_weights", i32 2000, i32 1}
!44 = distinct !{!44, !24}
!45 = distinct !{!45, !15}
!46 = distinct !{!46, !24}
!47 = distinct !{!47, !48, !15}
!48 = !{!"llvm.loop.unroll.runtime.disable"}
!49 = distinct !{!49, !24}
!50 = distinct !{!50, !15}
!51 = distinct !{!51, !24}
!52 = distinct !{!52, !48, !15}
!53 = distinct !{!53, !15}
!54 = distinct !{!54, !24}
!55 = distinct !{!55, !48, !15}
!56 = distinct !{!56, !15}
!57 = distinct !{!57, !24}
!58 = distinct !{!58, !48, !15}
!59 = distinct !{!59, !24}
!60 = distinct !{!60, !24}
