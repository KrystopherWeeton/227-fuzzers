; ModuleID = '../../base/trace_event/trace_buffer.cc'
source_filename = "../../base/trace_event/trace_buffer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::atomic.58" = type { %"struct.std::__1::__atomic_base.59" }
%"struct.std::__1::__atomic_base.59" = type { %"struct.std::__1::__cxx_atomic_impl.60" }
%"struct.std::__1::__cxx_atomic_impl.60" = type { %"struct.std::__1::__cxx_atomic_base_impl.61" }
%"struct.std::__1::__cxx_atomic_base_impl.61" = type { i32 }
%"class.base::trace_event::TraceBufferChunk" = type <{ i64, %"class.std::__1::unique_ptr", [64 x %"class.base::trace_event::TraceEvent"], i32, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::trace_event::TraceEventMemoryOverhead"* }
%"class.base::trace_event::TraceEventMemoryOverhead" = type { [14 x %"struct.base::trace_event::TraceEventMemoryOverhead::ObjectCountAndSize"] }
%"struct.base::trace_event::TraceEventMemoryOverhead::ObjectCountAndSize" = type { i64, i64, i64 }
%"class.base::trace_event::TraceEvent" = type <{ %"class.base::TimeTicks", %"class.base::ThreadTicks", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::trace_event::ThreadInstructionCount", %"class.base::trace_event::ThreadInstructionDelta", i8*, i64, i8*, i8*, %"class.base::trace_event::StringStorage", %"class.base::trace_event::TraceArguments", %union.anon, i32, i64, i8, [7 x i8] }>
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadTicks" = type { %"class.base::time_internal::TimeBase.1" }
%"class.base::time_internal::TimeBase.1" = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%"class.base::trace_event::ThreadInstructionCount" = type { i64 }
%"class.base::trace_event::ThreadInstructionDelta" = type { i64 }
%"class.base::trace_event::StringStorage" = type { %"struct.base::trace_event::StringStorage::Data"* }
%"struct.base::trace_event::StringStorage::Data" = type <{ i64, [1 x i8], [7 x i8] }>
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%union.anon = type { i32 }
%"class.base::trace_event::TraceResultBuffer" = type <{ %"class.base::RepeatingCallback", i8, [7 x i8] }>
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.base::trace_event::TraceResultBuffer::SimpleOutput" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.18 }
%union.anon.18 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::trace_event::TraceBuffer" = type { i32 (...)** }
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { %"class.std::__1::unique_ptr.25"*, %"class.std::__1::unique_ptr.25"*, %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.base::trace_event::TraceBufferChunk"* }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.std::__1::unique_ptr.25"* }
%"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer" = type <{ %"class.base::trace_event::TraceBuffer", i64, %"class.std::__1::vector.23", %"class.std::__1::unique_ptr.36", i64, i64, i64, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { i64* }
%"class.base::trace_event::AllocationContextTracker" = type <{ %"class.std::__1::vector.44", i8*, %"class.std::__1::vector.51", i32, [4 x i8] }>
%"class.std::__1::vector.44" = type { %"class.std::__1::__vector_base.45" }
%"class.std::__1::__vector_base.45" = type { %"struct.base::trace_event::StackFrame"*, %"struct.base::trace_event::StackFrame"*, %"class.std::__1::__compressed_pair.46" }
%"struct.base::trace_event::StackFrame" = type { i32, i8* }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"struct.base::trace_event::StackFrame"* }
%"class.std::__1::vector.51" = type { %"class.std::__1::__vector_base.52" }
%"class.std::__1::__vector_base.52" = type { i8**, i8**, %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { i8** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::trace_event::(anonymous namespace)::TraceBufferVector" = type { %"class.base::trace_event::TraceBuffer", i64, i64, i64, %"class.std::__1::vector.23" }

$_ZNSt3__16vectorINS_10unique_ptrIN4base11trace_event16TraceBufferChunkENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE7reserveEm = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN4base11trace_event16TraceBufferChunkENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE8__appendEm = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN4base11trace_event16TraceBufferChunkENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMNS_11trace_event17TraceResultBuffer12SimpleOutputEFvRKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEEJNS0_17UnretainedWrapperIS5_EEEEEFvSE_EE3RunEPNS0_13BindStateBaseESE_ = comdat any

$_ZN4base8internal9BindStateIMNS_11trace_event17TraceResultBuffer12SimpleOutputEFvRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

@_ZTVN4base11trace_event12_GLOBAL__N_121TraceBufferRingBufferE = internal unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"*)* @_ZN4base11trace_event12_GLOBAL__N_121TraceBufferRingBufferD2Ev to i8*), i8* bitcast (void (%"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"*)* @_ZN4base11trace_event12_GLOBAL__N_121TraceBufferRingBufferD0Ev to i8*), i8* bitcast (%"class.base::trace_event::TraceBufferChunk"* (%"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"*, i64*)* @_ZN4base11trace_event12_GLOBAL__N_121TraceBufferRingBuffer8GetChunkEPm to i8*), i8* bitcast (void (%"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"*, i64, %"class.base::trace_event::TraceBufferChunk"*)* @_ZN4base11trace_event12_GLOBAL__N_121TraceBufferRingBuffer11ReturnChunkEmNSt3__110unique_ptrINS0_16TraceBufferChunkENS3_14default_deleteIS5_EEEE to i8*), i8* bitcast (i1 (%"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"*)* @_ZNK4base11trace_event12_GLOBAL__N_121TraceBufferRingBuffer6IsFullEv to i8*), i8* bitcast (i64 (%"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"*)* @_ZNK4base11trace_event12_GLOBAL__N_121TraceBufferRingBuffer4SizeEv to i8*), i8* bitcast (i64 (%"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"*)* @_ZNK4base11trace_event12_GLOBAL__N_121TraceBufferRingBuffer8CapacityEv to i8*), i8* bitcast (%"class.base::trace_event::TraceEvent"* (%"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"*, i64)* @_ZN4base11trace_event12_GLOBAL__N_121TraceBufferRingBuffer16GetEventByHandleENS0_16TraceEventHandleE to i8*), i8* bitcast (%"class.base::trace_event::TraceBufferChunk"* (%"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"*)* @_ZN4base11trace_event12_GLOBAL__N_121TraceBufferRingBuffer9NextChunkEv to i8*), i8* bitcast (void (%"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"*, %"class.base::trace_event::TraceEventMemoryOverhead"*)* @_ZN4base11trace_event12_GLOBAL__N_121TraceBufferRingBuffer27EstimateTraceMemoryOverheadEPNS0_24TraceEventMemoryOverheadE to i8*)] }, align 8
@_ZN4base11trace_event24AllocationContextTracker13capture_mode_E = external local_unnamed_addr global %"struct.std::__1::atomic.58", align 4
@_ZTVN4base11trace_event12_GLOBAL__N_117TraceBufferVectorE = internal unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::trace_event::(anonymous namespace)::TraceBufferVector"*)* @_ZN4base11trace_event12_GLOBAL__N_117TraceBufferVectorD2Ev to i8*), i8* bitcast (void (%"class.base::trace_event::(anonymous namespace)::TraceBufferVector"*)* @_ZN4base11trace_event12_GLOBAL__N_117TraceBufferVectorD0Ev to i8*), i8* bitcast (%"class.base::trace_event::TraceBufferChunk"* (%"class.base::trace_event::(anonymous namespace)::TraceBufferVector"*, i64*)* @_ZN4base11trace_event12_GLOBAL__N_117TraceBufferVector8GetChunkEPm to i8*), i8* bitcast (void (%"class.base::trace_event::(anonymous namespace)::TraceBufferVector"*, i64, %"class.base::trace_event::TraceBufferChunk"*)* @_ZN4base11trace_event12_GLOBAL__N_117TraceBufferVector11ReturnChunkEmNSt3__110unique_ptrINS0_16TraceBufferChunkENS3_14default_deleteIS5_EEEE to i8*), i8* bitcast (i1 (%"class.base::trace_event::(anonymous namespace)::TraceBufferVector"*)* @_ZNK4base11trace_event12_GLOBAL__N_117TraceBufferVector6IsFullEv to i8*), i8* bitcast (i64 (%"class.base::trace_event::(anonymous namespace)::TraceBufferVector"*)* @_ZNK4base11trace_event12_GLOBAL__N_117TraceBufferVector4SizeEv to i8*), i8* bitcast (i64 (%"class.base::trace_event::(anonymous namespace)::TraceBufferVector"*)* @_ZNK4base11trace_event12_GLOBAL__N_117TraceBufferVector8CapacityEv to i8*), i8* bitcast (%"class.base::trace_event::TraceEvent"* (%"class.base::trace_event::(anonymous namespace)::TraceBufferVector"*, i64)* @_ZN4base11trace_event12_GLOBAL__N_117TraceBufferVector16GetEventByHandleENS0_16TraceEventHandleE to i8*), i8* bitcast (%"class.base::trace_event::TraceBufferChunk"* (%"class.base::trace_event::(anonymous namespace)::TraceBufferVector"*)* @_ZN4base11trace_event12_GLOBAL__N_117TraceBufferVector9NextChunkEv to i8*), i8* bitcast (void (%"class.base::trace_event::(anonymous namespace)::TraceBufferVector"*, %"class.base::trace_event::TraceEventMemoryOverhead"*)* @_ZN4base11trace_event12_GLOBAL__N_117TraceBufferVector27EstimateTraceMemoryOverheadEPNS0_24TraceEventMemoryOverheadE to i8*)] }, align 8

@_ZN4base11trace_event16TraceBufferChunkC1Ej = hidden unnamed_addr alias void (%"class.base::trace_event::TraceBufferChunk"*, i32), void (%"class.base::trace_event::TraceBufferChunk"*, i32)* @_ZN4base11trace_event16TraceBufferChunkC2Ej
@_ZN4base11trace_event16TraceBufferChunkD1Ev = hidden unnamed_addr alias void (%"class.base::trace_event::TraceBufferChunk"*), void (%"class.base::trace_event::TraceBufferChunk"*)* @_ZN4base11trace_event16TraceBufferChunkD2Ev
@_ZN4base11trace_event17TraceResultBufferC1Ev = hidden unnamed_addr alias void (%"class.base::trace_event::TraceResultBuffer"*), void (%"class.base::trace_event::TraceResultBuffer"*)* @_ZN4base11trace_event17TraceResultBufferC2Ev
@_ZN4base11trace_event17TraceResultBufferD1Ev = hidden unnamed_addr alias void (%"class.base::trace_event::TraceResultBuffer"*), void (%"class.base::trace_event::TraceResultBuffer"*)* @_ZN4base11trace_event17TraceResultBufferD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11trace_event16TraceBufferChunkC2Ej(%"class.base::trace_event::TraceBufferChunk"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 0
  %4 = bitcast %"class.base::trace_event::TraceBufferChunk"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false)
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %3) #14
  %5 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 1
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %5) #14
  %6 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 2
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %6) #14
  %7 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 3
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %7) #14
  %8 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 4
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %8) #14
  %9 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 5
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %9) #14
  %10 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 6
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %10) #14
  %11 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 7
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %11) #14
  %12 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 8
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %12) #14
  %13 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 9
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %13) #14
  %14 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 10
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %14) #14
  %15 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 11
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %15) #14
  %16 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 12
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %16) #14
  %17 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 13
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %17) #14
  %18 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 14
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %18) #14
  %19 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 15
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %19) #14
  %20 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 16
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %20) #14
  %21 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 17
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %21) #14
  %22 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 18
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %22) #14
  %23 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 19
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %23) #14
  %24 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 20
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %24) #14
  %25 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 21
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %25) #14
  %26 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 22
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %26) #14
  %27 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 23
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %27) #14
  %28 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 24
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %28) #14
  %29 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 25
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %29) #14
  %30 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 26
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %30) #14
  %31 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 27
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %31) #14
  %32 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 28
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %32) #14
  %33 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 29
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %33) #14
  %34 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 30
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %34) #14
  %35 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 31
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %35) #14
  %36 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 32
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %36) #14
  %37 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 33
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %37) #14
  %38 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 34
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %38) #14
  %39 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 35
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %39) #14
  %40 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 36
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %40) #14
  %41 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 37
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %41) #14
  %42 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 38
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %42) #14
  %43 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 39
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %43) #14
  %44 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 40
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %44) #14
  %45 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 41
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %45) #14
  %46 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 42
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %46) #14
  %47 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 43
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %47) #14
  %48 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 44
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %48) #14
  %49 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 45
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %49) #14
  %50 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 46
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %50) #14
  %51 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 47
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %51) #14
  %52 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 48
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %52) #14
  %53 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 49
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %53) #14
  %54 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 50
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %54) #14
  %55 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 51
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %55) #14
  %56 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 52
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %56) #14
  %57 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 53
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %57) #14
  %58 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 54
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %58) #14
  %59 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 55
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %59) #14
  %60 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 56
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %60) #14
  %61 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 57
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %61) #14
  %62 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 58
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %62) #14
  %63 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 59
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %63) #14
  %64 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 60
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %64) #14
  %65 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 61
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %65) #14
  %66 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 62
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %66) #14
  %67 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 63
  tail call void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"* %67) #14
  %68 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 3
  store i32 %1, i32* %68, align 8
  ret void
}

declare void @_ZN4base11trace_event10TraceEventC1Ev(%"class.base::trace_event::TraceEvent"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11trace_event16TraceBufferChunkD2Ev(%"class.base::trace_event::TraceBufferChunk"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 63
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %2) #14
  %3 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 62
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %3) #14
  %4 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 61
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %4) #14
  %5 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 60
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %5) #14
  %6 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 59
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %6) #14
  %7 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 58
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %7) #14
  %8 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 57
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %8) #14
  %9 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 56
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %9) #14
  %10 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 55
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %10) #14
  %11 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 54
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %11) #14
  %12 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 53
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %12) #14
  %13 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 52
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %13) #14
  %14 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 51
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %14) #14
  %15 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 50
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %15) #14
  %16 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 49
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %16) #14
  %17 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 48
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %17) #14
  %18 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 47
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %18) #14
  %19 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 46
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %19) #14
  %20 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 45
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %20) #14
  %21 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 44
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %21) #14
  %22 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 43
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %22) #14
  %23 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 42
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %23) #14
  %24 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 41
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %24) #14
  %25 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 40
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %25) #14
  %26 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 39
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %26) #14
  %27 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 38
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %27) #14
  %28 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 37
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %28) #14
  %29 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 36
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %29) #14
  %30 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 35
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %30) #14
  %31 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 34
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %31) #14
  %32 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 33
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %32) #14
  %33 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 32
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %33) #14
  %34 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 31
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %34) #14
  %35 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 30
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %35) #14
  %36 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 29
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %36) #14
  %37 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 28
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %37) #14
  %38 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 27
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %38) #14
  %39 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 26
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %39) #14
  %40 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 25
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %40) #14
  %41 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 24
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %41) #14
  %42 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 23
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %42) #14
  %43 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 22
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %43) #14
  %44 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 21
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %44) #14
  %45 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 20
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %45) #14
  %46 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 19
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %46) #14
  %47 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 18
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %47) #14
  %48 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 17
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %48) #14
  %49 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 16
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %49) #14
  %50 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 15
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %50) #14
  %51 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 14
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %51) #14
  %52 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 13
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %52) #14
  %53 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 12
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %53) #14
  %54 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 11
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %54) #14
  %55 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 10
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %55) #14
  %56 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 9
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %56) #14
  %57 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 8
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %57) #14
  %58 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 7
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %58) #14
  %59 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 6
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %59) #14
  %60 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 5
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %60) #14
  %61 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 4
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %61) #14
  %62 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 3
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %62) #14
  %63 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 2
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %63) #14
  %64 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 1
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %64) #14
  %65 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 0
  tail call void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"* %65) #14
  %66 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %67 = load %"class.base::trace_event::TraceEventMemoryOverhead"*, %"class.base::trace_event::TraceEventMemoryOverhead"** %66, align 8
  store %"class.base::trace_event::TraceEventMemoryOverhead"* null, %"class.base::trace_event::TraceEventMemoryOverhead"** %66, align 8
  %68 = icmp eq %"class.base::trace_event::TraceEventMemoryOverhead"* %67, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %1
  tail call void @_ZN4base11trace_event24TraceEventMemoryOverheadD1Ev(%"class.base::trace_event::TraceEventMemoryOverhead"* nonnull %67) #14
  %70 = bitcast %"class.base::trace_event::TraceEventMemoryOverhead"* %67 to i8*
  tail call void @_ZdlPv(i8* %70) #15
  br label %71

71:                                               ; preds = %1, %69
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base11trace_event10TraceEventD1Ev(%"class.base::trace_event::TraceEvent"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11trace_event16TraceBufferChunk5ResetEj(%"class.base::trace_event::TraceBufferChunk"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %6, label %14

6:                                                ; preds = %14, %2
  store i64 0, i64* %3, align 8
  %7 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 3
  store i32 %1, i32* %7, align 8
  %8 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %"class.base::trace_event::TraceEventMemoryOverhead"*, %"class.base::trace_event::TraceEventMemoryOverhead"** %8, align 8
  store %"class.base::trace_event::TraceEventMemoryOverhead"* null, %"class.base::trace_event::TraceEventMemoryOverhead"** %8, align 8
  %10 = icmp eq %"class.base::trace_event::TraceEventMemoryOverhead"* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %6
  tail call void @_ZN4base11trace_event24TraceEventMemoryOverheadD1Ev(%"class.base::trace_event::TraceEventMemoryOverhead"* nonnull %9) #14
  %12 = bitcast %"class.base::trace_event::TraceEventMemoryOverhead"* %9 to i8*
  tail call void @_ZdlPv(i8* %12) #15
  br label %13

13:                                               ; preds = %6, %11
  ret void

14:                                               ; preds = %2, %14
  %15 = phi i64 [ %17, %14 ], [ 0, %2 ]
  %16 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 %15
  tail call void @_ZN4base11trace_event10TraceEvent5ResetEv(%"class.base::trace_event::TraceEvent"* %16) #14
  %17 = add nuw i64 %15, 1
  %18 = load i64, i64* %3, align 8
  %19 = icmp ult i64 %17, %18
  br i1 %19, label %14, label %6
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN4base11trace_event10TraceEvent5ResetEv(%"class.base::trace_event::TraceEvent"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %"class.base::trace_event::TraceEvent"* @_ZN4base11trace_event16TraceBufferChunk13AddTraceEventEPm(%"class.base::trace_event::TraceBufferChunk"*, i64* nocapture) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 1
  store i64 %5, i64* %3, align 8
  store i64 %4, i64* %1, align 8
  %6 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 %4
  ret %"class.base::trace_event::TraceEvent"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11trace_event16TraceBufferChunk27EstimateTraceMemoryOverheadEPNS0_24TraceEventMemoryOverheadE(%"class.base::trace_event::TraceBufferChunk"*, %"class.base::trace_event::TraceEventMemoryOverhead"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.base::trace_event::TraceEventMemoryOverhead"*, %"class.base::trace_event::TraceEventMemoryOverhead"** %4, align 8
  %6 = icmp eq %"class.base::trace_event::TraceEventMemoryOverhead"* %5, null
  br i1 %6, label %7, label %21

7:                                                ; preds = %2
  %8 = tail call i8* @_Znwm(i64 336) #15
  %9 = bitcast i8* %8 to %"class.base::trace_event::TraceEventMemoryOverhead"*
  tail call void @_ZN4base11trace_event24TraceEventMemoryOverheadC1Ev(%"class.base::trace_event::TraceEventMemoryOverhead"* nonnull %9) #14
  %10 = ptrtoint i8* %8 to i64
  %11 = load %"class.base::trace_event::TraceEventMemoryOverhead"*, %"class.base::trace_event::TraceEventMemoryOverhead"** %4, align 8
  %12 = bitcast %"class.std::__1::unique_ptr"* %3 to i64*
  store i64 %10, i64* %12, align 8
  %13 = icmp eq %"class.base::trace_event::TraceEventMemoryOverhead"* %11, null
  %14 = bitcast i8* %8 to %"class.base::trace_event::TraceEventMemoryOverhead"*
  br i1 %13, label %18, label %15

15:                                               ; preds = %7
  tail call void @_ZN4base11trace_event24TraceEventMemoryOverheadD1Ev(%"class.base::trace_event::TraceEventMemoryOverhead"* nonnull %11) #14
  %16 = bitcast %"class.base::trace_event::TraceEventMemoryOverhead"* %11 to i8*
  tail call void @_ZdlPv(i8* %16) #15
  %17 = load %"class.base::trace_event::TraceEventMemoryOverhead"*, %"class.base::trace_event::TraceEventMemoryOverhead"** %4, align 8
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi %"class.base::trace_event::TraceEventMemoryOverhead"* [ %17, %15 ], [ %14, %7 ]
  tail call void @_ZN4base11trace_event24TraceEventMemoryOverhead3AddENS1_10ObjectTypeEm(%"class.base::trace_event::TraceEventMemoryOverhead"* %19, i32 2, i64 24) #14
  %20 = load %"class.base::trace_event::TraceEventMemoryOverhead"*, %"class.base::trace_event::TraceEventMemoryOverhead"** %4, align 8
  br label %21

21:                                               ; preds = %2, %18
  %22 = phi %"class.base::trace_event::TraceEventMemoryOverhead"* [ %5, %2 ], [ %20, %18 ]
  %23 = tail call i64 @_ZNK4base11trace_event24TraceEventMemoryOverhead8GetCountENS1_10ObjectTypeE(%"class.base::trace_event::TraceEventMemoryOverhead"* %22, i32 3) #14
  %24 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 64
  %27 = icmp eq i64 %23, %25
  %28 = and i1 %26, %27
  br i1 %28, label %46, label %29

29:                                               ; preds = %21
  %30 = icmp ult i64 %23, %25
  br i1 %30, label %34, label %31

31:                                               ; preds = %34, %29
  %32 = phi i64 [ %25, %29 ], [ %39, %34 ]
  %33 = icmp eq i64 %32, 64
  br i1 %33, label %41, label %43

34:                                               ; preds = %29, %34
  %35 = phi i64 [ %38, %34 ], [ %23, %29 ]
  %36 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %0, i64 0, i32 2, i64 %35
  %37 = load %"class.base::trace_event::TraceEventMemoryOverhead"*, %"class.base::trace_event::TraceEventMemoryOverhead"** %4, align 8
  tail call void @_ZN4base11trace_event10TraceEvent27EstimateTraceMemoryOverheadEPNS0_24TraceEventMemoryOverheadE(%"class.base::trace_event::TraceEvent"* %36, %"class.base::trace_event::TraceEventMemoryOverhead"* %37) #14
  %38 = add nuw i64 %35, 1
  %39 = load i64, i64* %24, align 8
  %40 = icmp ult i64 %38, %39
  br i1 %40, label %34, label %31

41:                                               ; preds = %31
  %42 = load %"class.base::trace_event::TraceEventMemoryOverhead"*, %"class.base::trace_event::TraceEventMemoryOverhead"** %4, align 8
  tail call void @_ZN4base11trace_event24TraceEventMemoryOverhead7AddSelfEv(%"class.base::trace_event::TraceEventMemoryOverhead"* %42) #14
  br label %46

43:                                               ; preds = %31
  %44 = sub i64 64, %32
  %45 = mul i64 %44, 152
  tail call void @_ZN4base11trace_event24TraceEventMemoryOverhead3AddENS1_10ObjectTypeEm(%"class.base::trace_event::TraceEventMemoryOverhead"* %1, i32 4, i64 %45) #14
  br label %46

46:                                               ; preds = %41, %43, %21
  %47 = load %"class.base::trace_event::TraceEventMemoryOverhead"*, %"class.base::trace_event::TraceEventMemoryOverhead"** %4, align 8
  tail call void @_ZN4base11trace_event24TraceEventMemoryOverhead6UpdateERKS1_(%"class.base::trace_event::TraceEventMemoryOverhead"* %1, %"class.base::trace_event::TraceEventMemoryOverhead"* dereferenceable(336) %47) #14
  ret void
}

declare void @_ZN4base11trace_event24TraceEventMemoryOverhead3AddENS1_10ObjectTypeEm(%"class.base::trace_event::TraceEventMemoryOverhead"*, i32, i64) local_unnamed_addr #1

declare i64 @_ZNK4base11trace_event24TraceEventMemoryOverhead8GetCountENS1_10ObjectTypeE(%"class.base::trace_event::TraceEventMemoryOverhead"*, i32) local_unnamed_addr #1

declare void @_ZN4base11trace_event24TraceEventMemoryOverhead6UpdateERKS1_(%"class.base::trace_event::TraceEventMemoryOverhead"*, %"class.base::trace_event::TraceEventMemoryOverhead"* dereferenceable(336)) local_unnamed_addr #1

declare void @_ZN4base11trace_event10TraceEvent27EstimateTraceMemoryOverheadEPNS0_24TraceEventMemoryOverheadE(%"class.base::trace_event::TraceEvent"*, %"class.base::trace_event::TraceEventMemoryOverhead"*) local_unnamed_addr #1

declare void @_ZN4base11trace_event24TraceEventMemoryOverhead7AddSelfEv(%"class.base::trace_event::TraceEventMemoryOverhead"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11trace_event17TraceResultBuffer12SimpleOutput11GetCallbackEv(%"class.base::RepeatingCallback"* noalias nocapture sret, %"struct.base::trace_event::TraceResultBuffer::SimpleOutput"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"struct.base::trace_event::TraceResultBuffer::SimpleOutput"* %1 to i64
  %4 = tail call i8* @_Znwm(i64 56) #15, !noalias !2
  %5 = bitcast i8* %4 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %5, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMNS_11trace_event17TraceResultBuffer12SimpleOutputEFvRKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEEJNS0_17UnretainedWrapperIS5_EEEEEFvSE_EE3RunEPNS0_13BindStateBaseESE_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMNS_11trace_event17TraceResultBuffer12SimpleOutputEFvRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #14, !noalias !2
  %6 = getelementptr inbounds i8, i8* %4, i64 32
  %7 = bitcast i8* %6 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"struct.base::trace_event::TraceResultBuffer::SimpleOutput"*, %"class.std::__1::basic_string"*)* @_ZN4base11trace_event17TraceResultBuffer12SimpleOutput6AppendERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE to i64), i64 0>, <2 x i64>* %7, align 8, !noalias !2
  %8 = getelementptr inbounds i8, i8* %4, i64 48
  %9 = bitcast i8* %8 to i64*
  store i64 %3, i64* %9, align 8, !noalias !2
  %10 = bitcast %"class.base::RepeatingCallback"* %0 to i8**
  store i8* %4, i8** %10, align 8, !alias.scope !2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11trace_event17TraceResultBuffer12SimpleOutput6AppendERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"struct.base::trace_event::TraceResultBuffer::SimpleOutput"*, %"class.std::__1::basic_string"* dereferenceable(24)) #0 align 2 {
  %3 = getelementptr inbounds %"struct.base::trace_event::TraceResultBuffer::SimpleOutput", %"struct.base::trace_event::TraceResultBuffer::SimpleOutput"* %0, i64 0, i32 0
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %13 = zext i8 %6 to i64
  %14 = select i1 %7, i8* %9, i8* %12
  %15 = select i1 %7, i64 %11, i64 %13
  %16 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %3, i8* %14, i64 %15) #14
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base11trace_event17TraceResultBufferC2Ev(%"class.base::trace_event::TraceResultBuffer"* nocapture) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.base::trace_event::TraceResultBuffer", %"class.base::trace_event::TraceResultBuffer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %2, align 8
  %3 = getelementptr inbounds %"class.base::trace_event::TraceResultBuffer", %"class.base::trace_event::TraceResultBuffer"* %0, i64 0, i32 1
  store i8 0, i8* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11trace_event17TraceResultBufferD2Ev(%"class.base::trace_event::TraceResultBuffer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::trace_event::TraceResultBuffer", %"class.base::trace_event::TraceResultBuffer"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %2) #14
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11trace_event17TraceResultBuffer17SetOutputCallbackENS_17RepeatingCallbackIFvRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEE(%"class.base::trace_event::TraceResultBuffer"*, %"class.base::RepeatingCallback"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::trace_event::TraceResultBuffer", %"class.base::trace_event::TraceResultBuffer"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0
  %5 = tail call dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSEOS1_(%"class.base::internal::CallbackBaseCopyable"* %3, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %4) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11trace_event17TraceResultBuffer5StartEv(%"class.base::trace_event::TraceResultBuffer"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = getelementptr inbounds %"class.base::trace_event::TraceResultBuffer", %"class.base::trace_event::TraceResultBuffer"* %0, i64 0, i32 1
  store i8 0, i8* %3, align 8
  %4 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #14
  %5 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  store i8 1, i8* %6, align 1
  store i8 91, i8* %4, align 8
  %7 = getelementptr inbounds i8, i8* %4, i64 1
  store i8 0, i8* %7, align 1
  %8 = getelementptr inbounds %"class.base::trace_event::TraceResultBuffer", %"class.base::trace_event::TraceResultBuffer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %8, align 8
  %10 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %9, i64 0, i32 1
  %11 = bitcast void ()** %10 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*)**
  %12 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*)** %11, align 8
  call void %12(%"class.base::internal::BindStateBase"* %9, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #14
  %13 = load i8, i8* %6, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @_ZdlPv(i8* %17) #15
  br label %18

18:                                               ; preds = %1, %15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11trace_event17TraceResultBuffer11AddFragmentERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.base::trace_event::TraceResultBuffer"* nocapture, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.base::trace_event::TraceResultBuffer", %"class.base::trace_event::TraceResultBuffer"* %0, i64 0, i32 1
  %5 = load i8, i8* %4, align 8, !range !7
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %23, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #14
  %9 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  store i8 1, i8* %10, align 1
  store i8 44, i8* %8, align 8
  %11 = getelementptr inbounds i8, i8* %8, i64 1
  store i8 0, i8* %11, align 1
  %12 = getelementptr inbounds %"class.base::trace_event::TraceResultBuffer", %"class.base::trace_event::TraceResultBuffer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %12, align 8
  %14 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %13, i64 0, i32 1
  %15 = bitcast void ()** %14 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*)**
  %16 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*)** %15, align 8
  call void %16(%"class.base::internal::BindStateBase"* %13, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #14
  %17 = load i8, i8* %10, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %7
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %21) #15
  br label %22

22:                                               ; preds = %7, %19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #14
  br label %23

23:                                               ; preds = %2, %22
  store i8 1, i8* %4, align 8
  %24 = getelementptr inbounds %"class.base::trace_event::TraceResultBuffer", %"class.base::trace_event::TraceResultBuffer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %24, align 8
  %26 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %25, i64 0, i32 1
  %27 = bitcast void ()** %26 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*)**
  %28 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*)** %27, align 8
  call void %28(%"class.base::internal::BindStateBase"* %25, %"class.std::__1::basic_string"* dereferenceable(24) %1) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11trace_event17TraceResultBuffer6FinishEv(%"class.base::trace_event::TraceResultBuffer"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #14
  %4 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  store i8 1, i8* %5, align 1
  store i8 93, i8* %3, align 8
  %6 = getelementptr inbounds i8, i8* %3, i64 1
  store i8 0, i8* %6, align 1
  %7 = getelementptr inbounds %"class.base::trace_event::TraceResultBuffer", %"class.base::trace_event::TraceResultBuffer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %7, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %8, i64 0, i32 1
  %10 = bitcast void ()** %9 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*)**
  %11 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*)** %10, align 8
  call void %11(%"class.base::internal::BindStateBase"* %8, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #14
  %12 = load i8, i8* %5, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %16) #15
  br label %17

17:                                               ; preds = %1, %14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.base::trace_event::TraceBuffer"* @_ZN4base11trace_event11TraceBuffer27CreateTraceBufferRingBufferEm(i64) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 80) #15
  %3 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4base11trace_event12_GLOBAL__N_121TraceBufferRingBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  %5 = bitcast i8* %4 to i64*
  store i64 %0, i64* %5, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 16
  %7 = bitcast i8* %6 to %"class.std::__1::vector.23"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #14
  %8 = getelementptr inbounds i8, i8* %2, i64 40
  %9 = add i64 %0, 1
  %10 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %9, i64 8) #14
  %11 = extractvalue { i64, i1 } %10, 1
  %12 = extractvalue { i64, i1 } %10, 0
  %13 = select i1 %11, i64 -1, i64 %12
  %14 = tail call i8* @_Znam(i64 %13) #15
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast i8* %8 to i64*
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds i8, i8* %2, i64 48
  %18 = bitcast i8* %17 to i64*
  store i64 0, i64* %18, align 8
  %19 = getelementptr inbounds i8, i8* %2, i64 56
  %20 = bitcast i8* %19 to i64*
  store i64 %0, i64* %20, align 8
  %21 = getelementptr inbounds i8, i8* %2, i64 64
  %22 = bitcast i8* %21 to i64*
  store i64 0, i64* %22, align 8
  %23 = getelementptr inbounds i8, i8* %2, i64 72
  %24 = bitcast i8* %23 to i32*
  store i32 1, i32* %24, align 8
  tail call void @_ZNSt3__16vectorINS_10unique_ptrIN4base11trace_event16TraceBufferChunkENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE7reserveEm(%"class.std::__1::vector.23"* %7, i64 %0) #14
  %25 = icmp eq i64 %0, 0
  br i1 %25, label %61, label %26

26:                                               ; preds = %1
  %27 = bitcast i8* %8 to i64**
  %28 = add i64 %0, -1
  %29 = and i64 %0, 3
  %30 = icmp ult i64 %28, 3
  br i1 %30, label %50, label %31

31:                                               ; preds = %26
  %32 = sub i64 %0, %29
  br label %33

33:                                               ; preds = %33, %31
  %34 = phi i64 [ 0, %31 ], [ %47, %33 ]
  %35 = phi i64 [ %32, %31 ], [ %48, %33 ]
  %36 = load i64*, i64** %27, align 8
  %37 = getelementptr inbounds i64, i64* %36, i64 %34
  store i64 %34, i64* %37, align 8
  %38 = or i64 %34, 1
  %39 = load i64*, i64** %27, align 8
  %40 = getelementptr inbounds i64, i64* %39, i64 %38
  store i64 %38, i64* %40, align 8
  %41 = or i64 %34, 2
  %42 = load i64*, i64** %27, align 8
  %43 = getelementptr inbounds i64, i64* %42, i64 %41
  store i64 %41, i64* %43, align 8
  %44 = or i64 %34, 3
  %45 = load i64*, i64** %27, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 %44
  store i64 %44, i64* %46, align 8
  %47 = add nuw i64 %34, 4
  %48 = add i64 %35, -4
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %33

50:                                               ; preds = %33, %26
  %51 = phi i64 [ 0, %26 ], [ %47, %33 ]
  %52 = icmp eq i64 %29, 0
  br i1 %52, label %61, label %53

53:                                               ; preds = %50, %53
  %54 = phi i64 [ %58, %53 ], [ %51, %50 ]
  %55 = phi i64 [ %59, %53 ], [ %29, %50 ]
  %56 = load i64*, i64** %27, align 8
  %57 = getelementptr inbounds i64, i64* %56, i64 %54
  store i64 %54, i64* %57, align 8
  %58 = add nuw i64 %54, 1
  %59 = add i64 %55, -1
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %61, label %53, !llvm.loop !8

61:                                               ; preds = %50, %53, %1
  %62 = bitcast i8* %2 to %"class.base::trace_event::TraceBuffer"*
  ret %"class.base::trace_event::TraceBuffer"* %62
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.base::trace_event::TraceBuffer"* @_ZN4base11trace_event11TraceBuffer29CreateTraceBufferVectorOfSizeEm(i64) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 56) #15
  %3 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4base11trace_event12_GLOBAL__N_117TraceBufferVectorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  %5 = getelementptr inbounds i8, i8* %2, i64 24
  %6 = bitcast i8* %5 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false) #14
  store i64 %0, i64* %6, align 8
  %7 = getelementptr inbounds i8, i8* %2, i64 32
  %8 = bitcast i8* %7 to %"class.std::__1::vector.23"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #14
  tail call void @_ZNSt3__16vectorINS_10unique_ptrIN4base11trace_event16TraceBufferChunkENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE7reserveEm(%"class.std::__1::vector.23"* %8, i64 %0) #14
  %9 = bitcast i8* %2 to %"class.base::trace_event::TraceBuffer"*
  ret %"class.base::trace_event::TraceBuffer"* %9
}

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSEOS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN4base11trace_event16TraceBufferChunkENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE7reserveEm(%"class.std::__1::vector.23"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.std::__1::unique_ptr.25"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.23"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.std::__1::unique_ptr.25"*
  br i1 %10, label %12, label %132

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::unique_ptr.25"** %13 to i64*
  %15 = icmp ugt i64 %1, 2305843009213693951
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #16
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = ashr exact i64 %19, 3
  %21 = shl i64 %1, 3
  %22 = tail call i8* @_Znwm(i64 %21) #15
  %23 = bitcast i8* %22 to %"class.std::__1::unique_ptr.25"*
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %23, i64 %20
  %25 = ptrtoint %"class.std::__1::unique_ptr.25"* %24 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %23, i64 %1
  %27 = ptrtoint %"class.std::__1::unique_ptr.25"* %26 to i64
  %28 = inttoptr i64 %18 to %"class.std::__1::unique_ptr.25"*
  %29 = icmp eq %"class.std::__1::unique_ptr.25"* %28, %11
  br i1 %29, label %57, label %30

30:                                               ; preds = %17
  %31 = getelementptr %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %28, i64 -1, i32 0, i32 0, i32 0
  %32 = bitcast %"class.base::trace_event::TraceBufferChunk"** %31 to i8*
  %33 = sub i64 0, %7
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = lshr i64 %35, 3
  %37 = add nuw nsw i64 %36, 1
  %38 = and i64 %37, 7
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %52, label %40

40:                                               ; preds = %30, %40
  %41 = phi %"class.std::__1::unique_ptr.25"* [ %44, %40 ], [ %24, %30 ]
  %42 = phi %"class.std::__1::unique_ptr.25"* [ %45, %40 ], [ %28, %30 ]
  %43 = phi i64 [ %50, %40 ], [ %38, %30 ]
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %41, i64 -1
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %42, i64 -1
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = bitcast %"class.std::__1::unique_ptr.25"* %45 to i64*
  %48 = load i64, i64* %47, align 8
  store %"class.base::trace_event::TraceBufferChunk"* null, %"class.base::trace_event::TraceBufferChunk"** %46, align 8
  %49 = bitcast %"class.std::__1::unique_ptr.25"* %44 to i64*
  store i64 %48, i64* %49, align 8
  %50 = add i64 %43, -1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %40, !llvm.loop !10

52:                                               ; preds = %40, %30
  %53 = phi %"class.std::__1::unique_ptr.25"* [ undef, %30 ], [ %44, %40 ]
  %54 = phi %"class.std::__1::unique_ptr.25"* [ %24, %30 ], [ %44, %40 ]
  %55 = phi %"class.std::__1::unique_ptr.25"* [ %28, %30 ], [ %45, %40 ]
  %56 = icmp ult i8* %34, inttoptr (i64 56 to i8*)
  br i1 %56, label %110, label %58

57:                                               ; preds = %17
  store i64 %25, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  br label %127

58:                                               ; preds = %52, %58
  %59 = phi %"class.std::__1::unique_ptr.25"* [ %103, %58 ], [ %54, %52 ]
  %60 = phi %"class.std::__1::unique_ptr.25"* [ %104, %58 ], [ %55, %52 ]
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %59, i64 -1
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %60, i64 -1
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = bitcast %"class.std::__1::unique_ptr.25"* %62 to i64*
  %65 = load i64, i64* %64, align 8
  store %"class.base::trace_event::TraceBufferChunk"* null, %"class.base::trace_event::TraceBufferChunk"** %63, align 8
  %66 = bitcast %"class.std::__1::unique_ptr.25"* %61 to i64*
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %59, i64 -2
  %68 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %60, i64 -2
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %68, i64 0, i32 0, i32 0, i32 0
  %70 = bitcast %"class.std::__1::unique_ptr.25"* %68 to i64*
  %71 = load i64, i64* %70, align 8
  store %"class.base::trace_event::TraceBufferChunk"* null, %"class.base::trace_event::TraceBufferChunk"** %69, align 8
  %72 = bitcast %"class.std::__1::unique_ptr.25"* %67 to i64*
  store i64 %71, i64* %72, align 8
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %59, i64 -3
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %60, i64 -3
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %74, i64 0, i32 0, i32 0, i32 0
  %76 = bitcast %"class.std::__1::unique_ptr.25"* %74 to i64*
  %77 = load i64, i64* %76, align 8
  store %"class.base::trace_event::TraceBufferChunk"* null, %"class.base::trace_event::TraceBufferChunk"** %75, align 8
  %78 = bitcast %"class.std::__1::unique_ptr.25"* %73 to i64*
  store i64 %77, i64* %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %59, i64 -4
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %60, i64 -4
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.25"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.base::trace_event::TraceBufferChunk"* null, %"class.base::trace_event::TraceBufferChunk"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.25"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %59, i64 -5
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %60, i64 -5
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.25"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.base::trace_event::TraceBufferChunk"* null, %"class.base::trace_event::TraceBufferChunk"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.25"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %59, i64 -6
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %60, i64 -6
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.25"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.base::trace_event::TraceBufferChunk"* null, %"class.base::trace_event::TraceBufferChunk"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.25"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %59, i64 -7
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %60, i64 -7
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.25"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.base::trace_event::TraceBufferChunk"* null, %"class.base::trace_event::TraceBufferChunk"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.25"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %59, i64 -8
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %60, i64 -8
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.25"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.base::trace_event::TraceBufferChunk"* null, %"class.base::trace_event::TraceBufferChunk"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.25"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = icmp eq %"class.std::__1::unique_ptr.25"* %104, %11
  br i1 %109, label %110, label %58

110:                                              ; preds = %58, %52
  %111 = phi %"class.std::__1::unique_ptr.25"* [ %53, %52 ], [ %103, %58 ]
  %112 = ptrtoint %"class.std::__1::unique_ptr.25"* %111 to i64
  %113 = load i64, i64* %6, align 8
  %114 = load %"class.std::__1::unique_ptr.25"*, %"class.std::__1::unique_ptr.25"** %13, align 8
  %115 = inttoptr i64 %113 to %"class.std::__1::unique_ptr.25"*
  store i64 %112, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %116 = icmp eq %"class.std::__1::unique_ptr.25"* %114, %115
  br i1 %116, label %127, label %117

117:                                              ; preds = %110, %125
  %118 = phi %"class.std::__1::unique_ptr.25"* [ %119, %125 ], [ %114, %110 ]
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %118, i64 -1
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %119, i64 0, i32 0, i32 0, i32 0
  %121 = load %"class.base::trace_event::TraceBufferChunk"*, %"class.base::trace_event::TraceBufferChunk"** %120, align 8
  store %"class.base::trace_event::TraceBufferChunk"* null, %"class.base::trace_event::TraceBufferChunk"** %120, align 8
  %122 = icmp eq %"class.base::trace_event::TraceBufferChunk"* %121, null
  br i1 %122, label %125, label %123

123:                                              ; preds = %117
  tail call void @_ZN4base11trace_event16TraceBufferChunkD2Ev(%"class.base::trace_event::TraceBufferChunk"* nonnull %121) #14
  %124 = bitcast %"class.base::trace_event::TraceBufferChunk"* %121 to i8*
  tail call void @_ZdlPv(i8* %124) #15
  br label %125

125:                                              ; preds = %123, %117
  %126 = icmp eq %"class.std::__1::unique_ptr.25"* %119, %115
  br i1 %126, label %127, label %117

127:                                              ; preds = %125, %57, %110
  %128 = phi i64 [ %7, %57 ], [ %113, %110 ], [ %113, %125 ]
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %132, label %130

130:                                              ; preds = %127
  %131 = inttoptr i64 %128 to i8*
  tail call void @_ZdlPv(i8* %131) #15
  br label %132

132:                                              ; preds = %130, %127, %2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN4base11trace_event12_GLOBAL__N_121TraceBufferRingBufferD2Ev(%"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"* nocapture) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer", %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4base11trace_event12_GLOBAL__N_121TraceBufferRingBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer", %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  store i64* null, i64** %3, align 8
  %5 = icmp eq i64* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast i64* %4 to i8*
  tail call void @_ZdaPv(i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer", %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %9, i64 0, i32 0, i32 0
  %11 = load %"class.std::__1::unique_ptr.25"*, %"class.std::__1::unique_ptr.25"** %10, align 8
  %12 = icmp eq %"class.std::__1::unique_ptr.25"* %11, null
  br i1 %12, label %33, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::unique_ptr.25"* %11 to i8*
  %15 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer", %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"* %0, i64 0, i32 2, i32 0, i32 1
  %16 = load %"class.std::__1::unique_ptr.25"*, %"class.std::__1::unique_ptr.25"** %15, align 8
  %17 = icmp eq %"class.std::__1::unique_ptr.25"* %16, %11
  br i1 %17, label %31, label %18

18:                                               ; preds = %13, %26
  %19 = phi %"class.std::__1::unique_ptr.25"* [ %20, %26 ], [ %16, %13 ]
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %19, i64 -1
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.base::trace_event::TraceBufferChunk"*, %"class.base::trace_event::TraceBufferChunk"** %21, align 8
  store %"class.base::trace_event::TraceBufferChunk"* null, %"class.base::trace_event::TraceBufferChunk"** %21, align 8
  %23 = icmp eq %"class.base::trace_event::TraceBufferChunk"* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %18
  tail call void @_ZN4base11trace_event16TraceBufferChunkD2Ev(%"class.base::trace_event::TraceBufferChunk"* nonnull %22) #14
  %25 = bitcast %"class.base::trace_event::TraceBufferChunk"* %22 to i8*
  tail call void @_ZdlPv(i8* %25) #15
  br label %26

26:                                               ; preds = %24, %18
  %27 = icmp eq %"class.std::__1::unique_ptr.25"* %20, %11
  br i1 %27, label %28, label %18

28:                                               ; preds = %26
  %29 = bitcast %"class.std::__1::vector.23"* %9 to i8**
  %30 = load i8*, i8** %29, align 8
  br label %31

31:                                               ; preds = %28, %13
  %32 = phi i8* [ %30, %28 ], [ %14, %13 ]
  store %"class.std::__1::unique_ptr.25"* %11, %"class.std::__1::unique_ptr.25"** %15, align 8
  tail call void @_ZdlPv(i8* %32) #15
  br label %33

33:                                               ; preds = %8, %31
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN4base11trace_event12_GLOBAL__N_121TraceBufferRingBufferD0Ev(%"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"*) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer", %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4base11trace_event12_GLOBAL__N_121TraceBufferRingBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer", %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  store i64* null, i64** %3, align 8
  %5 = icmp eq i64* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast i64* %4 to i8*
  tail call void @_ZdaPv(i8* %7) #15
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer", %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %9, i64 0, i32 0, i32 0
  %11 = load %"class.std::__1::unique_ptr.25"*, %"class.std::__1::unique_ptr.25"** %10, align 8
  %12 = icmp eq %"class.std::__1::unique_ptr.25"* %11, null
  br i1 %12, label %33, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::unique_ptr.25"* %11 to i8*
  %15 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer", %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"* %0, i64 0, i32 2, i32 0, i32 1
  %16 = load %"class.std::__1::unique_ptr.25"*, %"class.std::__1::unique_ptr.25"** %15, align 8
  %17 = icmp eq %"class.std::__1::unique_ptr.25"* %16, %11
  br i1 %17, label %31, label %18

18:                                               ; preds = %13, %26
  %19 = phi %"class.std::__1::unique_ptr.25"* [ %20, %26 ], [ %16, %13 ]
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %19, i64 -1
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.base::trace_event::TraceBufferChunk"*, %"class.base::trace_event::TraceBufferChunk"** %21, align 8
  store %"class.base::trace_event::TraceBufferChunk"* null, %"class.base::trace_event::TraceBufferChunk"** %21, align 8
  %23 = icmp eq %"class.base::trace_event::TraceBufferChunk"* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %18
  tail call void @_ZN4base11trace_event16TraceBufferChunkD2Ev(%"class.base::trace_event::TraceBufferChunk"* nonnull %22) #14
  %25 = bitcast %"class.base::trace_event::TraceBufferChunk"* %22 to i8*
  tail call void @_ZdlPv(i8* %25) #15
  br label %26

26:                                               ; preds = %24, %18
  %27 = icmp eq %"class.std::__1::unique_ptr.25"* %20, %11
  br i1 %27, label %28, label %18

28:                                               ; preds = %26
  %29 = bitcast %"class.std::__1::vector.23"* %9 to i8**
  %30 = load i8*, i8** %29, align 8
  br label %31

31:                                               ; preds = %28, %13
  %32 = phi i8* [ %30, %28 ], [ %14, %13 ]
  store %"class.std::__1::unique_ptr.25"* %11, %"class.std::__1::unique_ptr.25"** %15, align 8
  tail call void @_ZdlPv(i8* %32) #15
  br label %33

33:                                               ; preds = %8, %31
  %34 = bitcast %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"* %0 to i8*
  tail call void @_ZdlPv(i8* %34) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.base::trace_event::TraceBufferChunk"* @_ZN4base11trace_event12_GLOBAL__N_121TraceBufferRingBuffer8GetChunkEPm(%"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"*, i64* nocapture) unnamed_addr #0 align 2 {
  %3 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.58", %"struct.std::__1::atomic.58"* @_ZN4base11trace_event24AllocationContextTracker13capture_mode_E, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %13, label %5

5:                                                ; preds = %2
  %6 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.58", %"struct.std::__1::atomic.58"* @_ZN4base11trace_event24AllocationContextTracker13capture_mode_E, i64 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %13, label %8, !prof !11

8:                                                ; preds = %5
  %9 = tail call %"class.base::trace_event::AllocationContextTracker"* @_ZN4base11trace_event24AllocationContextTracker27GetInstanceForCurrentThreadEv() #14
  %10 = getelementptr inbounds %"class.base::trace_event::AllocationContextTracker", %"class.base::trace_event::AllocationContextTracker"* %9, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  %12 = add i32 %11, 1
  store i32 %12, i32* %10, align 8
  br label %13

13:                                               ; preds = %2, %5, %8
  %14 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer", %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"* %0, i64 0, i32 4
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer", %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = getelementptr inbounds i64, i64* %17, i64 %15
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %1, align 8
  %20 = load i64, i64* %14, align 8
  %21 = add i64 %20, 1
  %22 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer", %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"* %0, i64 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, 1
  %25 = icmp ult i64 %21, %24
  %26 = select i1 %25, i64 %21, i64 0
  store i64 %26, i64* %14, align 8
  %27 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer", %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"* %0, i64 0, i32 6
  store i64 %26, i64* %27, align 8
  %28 = load i64, i64* %1, align 8
  %29 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer", %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"* %0, i64 0, i32 2
  %30 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer", %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"* %0, i64 0, i32 2, i32 0, i32 1
  %31 = bitcast %"class.std::__1::unique_ptr.25"** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.std::__1::vector.23"* %29 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %32, %34
  %36 = ashr exact i64 %35, 3
  %37 = icmp ult i64 %28, %36
  br i1 %37, label %61, label %38

38:                                               ; preds = %13
  %39 = add i64 %28, 1
  %40 = icmp ugt i64 %39, %36
  %41 = inttoptr i64 %34 to %"class.std::__1::unique_ptr.25"*
  %42 = inttoptr i64 %32 to %"class.std::__1::unique_ptr.25"*
  br i1 %40, label %43, label %45

43:                                               ; preds = %38
  %44 = sub i64 %39, %36
  tail call void @_ZNSt3__16vectorINS_10unique_ptrIN4base11trace_event16TraceBufferChunkENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE8__appendEm(%"class.std::__1::vector.23"* %29, i64 %44) #14
  br label %61

45:                                               ; preds = %38
  %46 = icmp ult i64 %39, %36
  br i1 %46, label %47, label %61

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %41, i64 %39
  %49 = icmp eq %"class.std::__1::unique_ptr.25"* %48, %42
  br i1 %49, label %60, label %50

50:                                               ; preds = %47, %58
  %51 = phi %"class.std::__1::unique_ptr.25"* [ %52, %58 ], [ %42, %47 ]
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %51, i64 -1
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %52, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.base::trace_event::TraceBufferChunk"*, %"class.base::trace_event::TraceBufferChunk"** %53, align 8
  store %"class.base::trace_event::TraceBufferChunk"* null, %"class.base::trace_event::TraceBufferChunk"** %53, align 8
  %55 = icmp eq %"class.base::trace_event::TraceBufferChunk"* %54, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %50
  tail call void @_ZN4base11trace_event16TraceBufferChunkD2Ev(%"class.base::trace_event::TraceBufferChunk"* nonnull %54) #14
  %57 = bitcast %"class.base::trace_event::TraceBufferChunk"* %54 to i8*
  tail call void @_ZdlPv(i8* %57) #15
  br label %58

58:                                               ; preds = %56, %50
  %59 = icmp eq %"class.std::__1::unique_ptr.25"* %52, %48
  br i1 %59, label %60, label %50

60:                                               ; preds = %58, %47
  store %"class.std::__1::unique_ptr.25"* %48, %"class.std::__1::unique_ptr.25"** %30, align 8
  br label %61

61:                                               ; preds = %60, %45, %43, %13
  %62 = load i64, i64* %1, align 8
  %63 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %29, i64 0, i32 0, i32 0
  %64 = load %"class.std::__1::unique_ptr.25"*, %"class.std::__1::unique_ptr.25"** %63, align 8
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %64, i64 %62, i32 0, i32 0, i32 0
  %66 = load %"class.base::trace_event::TraceBufferChunk"*, %"class.base::trace_event::TraceBufferChunk"** %65, align 8
  store %"class.base::trace_event::TraceBufferChunk"* null, %"class.base::trace_event::TraceBufferChunk"** %65, align 8
  %67 = load i64, i64* %1, align 8
  %68 = load %"class.std::__1::unique_ptr.25"*, %"class.std::__1::unique_ptr.25"** %63, align 8
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %68, i64 %67, i32 0, i32 0, i32 0
  %70 = load %"class.base::trace_event::TraceBufferChunk"*, %"class.base::trace_event::TraceBufferChunk"** %69, align 8
  store %"class.base::trace_event::TraceBufferChunk"* null, %"class.base::trace_event::TraceBufferChunk"** %69, align 8
  %71 = icmp eq %"class.base::trace_event::TraceBufferChunk"* %70, null
  br i1 %71, label %74, label %72

72:                                               ; preds = %61
  tail call void @_ZN4base11trace_event16TraceBufferChunkD2Ev(%"class.base::trace_event::TraceBufferChunk"* nonnull %70) #14
  %73 = bitcast %"class.base::trace_event::TraceBufferChunk"* %70 to i8*
  tail call void @_ZdlPv(i8* %73) #15
  br label %74

74:                                               ; preds = %61, %72
  %75 = icmp eq %"class.base::trace_event::TraceBufferChunk"* %66, null
  br i1 %75, label %96, label %76

76:                                               ; preds = %74
  %77 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer", %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"* %0, i64 0, i32 7
  %78 = load i32, i32* %77, align 8
  %79 = add i32 %78, 1
  store i32 %79, i32* %77, align 8
  %80 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %66, i64 0, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %90

83:                                               ; preds = %90, %76
  store i64 0, i64* %80, align 8
  %84 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %66, i64 0, i32 3
  store i32 %78, i32* %84, align 8
  %85 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %66, i64 0, i32 1, i32 0, i32 0, i32 0
  %86 = load %"class.base::trace_event::TraceEventMemoryOverhead"*, %"class.base::trace_event::TraceEventMemoryOverhead"** %85, align 8
  store %"class.base::trace_event::TraceEventMemoryOverhead"* null, %"class.base::trace_event::TraceEventMemoryOverhead"** %85, align 8
  %87 = icmp eq %"class.base::trace_event::TraceEventMemoryOverhead"* %86, null
  br i1 %87, label %102, label %88

88:                                               ; preds = %83
  tail call void @_ZN4base11trace_event24TraceEventMemoryOverheadD1Ev(%"class.base::trace_event::TraceEventMemoryOverhead"* nonnull %86) #14
  %89 = bitcast %"class.base::trace_event::TraceEventMemoryOverhead"* %86 to i8*
  tail call void @_ZdlPv(i8* %89) #15
  br label %102

90:                                               ; preds = %76, %90
  %91 = phi i64 [ %93, %90 ], [ 0, %76 ]
  %92 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %66, i64 0, i32 2, i64 %91
  tail call void @_ZN4base11trace_event10TraceEvent5ResetEv(%"class.base::trace_event::TraceEvent"* %92) #14
  %93 = add nuw i64 %91, 1
  %94 = load i64, i64* %80, align 8
  %95 = icmp ult i64 %93, %94
  br i1 %95, label %90, label %83

96:                                               ; preds = %74
  %97 = tail call i8* @_Znwm(i64 9752) #15
  %98 = bitcast i8* %97 to %"class.base::trace_event::TraceBufferChunk"*
  %99 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer", %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"* %0, i64 0, i32 7
  %100 = load i32, i32* %99, align 8
  %101 = add i32 %100, 1
  store i32 %101, i32* %99, align 8
  tail call void @_ZN4base11trace_event16TraceBufferChunkC2Ej(%"class.base::trace_event::TraceBufferChunk"* nonnull %98, i32 %100)
  br label %102

102:                                              ; preds = %88, %83, %96
  %103 = phi %"class.base::trace_event::TraceBufferChunk"* [ %98, %96 ], [ %66, %83 ], [ %66, %88 ]
  %104 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.58", %"struct.std::__1::atomic.58"* @_ZN4base11trace_event24AllocationContextTracker13capture_mode_E, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %116, label %106

106:                                              ; preds = %102
  %107 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.58", %"struct.std::__1::atomic.58"* @_ZN4base11trace_event24AllocationContextTracker13capture_mode_E, i64 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %116, label %109, !prof !11

109:                                              ; preds = %106
  %110 = tail call %"class.base::trace_event::AllocationContextTracker"* @_ZN4base11trace_event24AllocationContextTracker27GetInstanceForCurrentThreadEv() #14
  %111 = getelementptr inbounds %"class.base::trace_event::AllocationContextTracker", %"class.base::trace_event::AllocationContextTracker"* %110, i64 0, i32 3
  %112 = load i32, i32* %111, align 8
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %116, label %114

114:                                              ; preds = %109
  %115 = add i32 %112, -1
  store i32 %115, i32* %111, align 8
  br label %116

116:                                              ; preds = %102, %106, %109, %114
  ret %"class.base::trace_event::TraceBufferChunk"* %103
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base11trace_event12_GLOBAL__N_121TraceBufferRingBuffer11ReturnChunkEmNSt3__110unique_ptrINS0_16TraceBufferChunkENS3_14default_deleteIS5_EEEE(%"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"* nocapture, i64, %"class.base::trace_event::TraceBufferChunk"*) unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.base::trace_event::TraceBufferChunk"* %2 to i64
  %5 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer", %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"* %0, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr.25"*, %"class.std::__1::unique_ptr.25"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %6, i64 %1
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.base::trace_event::TraceBufferChunk"*, %"class.base::trace_event::TraceBufferChunk"** %8, align 8
  %10 = bitcast %"class.std::__1::unique_ptr.25"* %7 to i64*
  store i64 %4, i64* %10, align 8
  %11 = icmp eq %"class.base::trace_event::TraceBufferChunk"* %9, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %3
  tail call void @_ZN4base11trace_event16TraceBufferChunkD2Ev(%"class.base::trace_event::TraceBufferChunk"* nonnull %9) #14
  %13 = bitcast %"class.base::trace_event::TraceBufferChunk"* %9 to i8*
  tail call void @_ZdlPv(i8* %13) #15
  br label %14

14:                                               ; preds = %12, %3
  %15 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer", %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"* %0, i64 0, i32 5
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer", %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = getelementptr inbounds i64, i64* %18, i64 %16
  store i64 %1, i64* %19, align 8
  %20 = load i64, i64* %15, align 8
  %21 = add i64 %20, 1
  %22 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer", %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"* %0, i64 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, 1
  %25 = icmp ult i64 %21, %24
  %26 = select i1 %25, i64 %21, i64 0
  store i64 %26, i64* %15, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZNK4base11trace_event12_GLOBAL__N_121TraceBufferRingBuffer6IsFullEv(%"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"* nocapture readnone) unnamed_addr #9 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i64 @_ZNK4base11trace_event12_GLOBAL__N_121TraceBufferRingBuffer4SizeEv(%"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"* nocapture readonly) unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer", %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer", %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"* %0, i64 0, i32 2, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.25"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.23"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = shl i64 %8, 3
  ret i64 %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i64 @_ZNK4base11trace_event12_GLOBAL__N_121TraceBufferRingBuffer8CapacityEv(%"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"* nocapture readonly) unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer", %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = shl i64 %3, 6
  ret i64 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal %"class.base::trace_event::TraceEvent"* @_ZN4base11trace_event12_GLOBAL__N_121TraceBufferRingBuffer16GetEventByHandleENS0_16TraceEventHandleE(%"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"* nocapture readonly, i64) unnamed_addr #10 align 2 {
  %3 = trunc i64 %1 to i32
  %4 = lshr i64 %1, 32
  %5 = and i64 %4, 67108863
  %6 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer", %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer", %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = bitcast %"class.std::__1::unique_ptr.25"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.23"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = ashr exact i64 %12, 3
  %14 = icmp ult i64 %5, %13
  br i1 %14, label %15, label %27

15:                                               ; preds = %2
  %16 = inttoptr i64 %11 to %"class.std::__1::unique_ptr.25"*
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %16, i64 %5, i32 0, i32 0, i32 0
  %18 = load %"class.base::trace_event::TraceBufferChunk"*, %"class.base::trace_event::TraceBufferChunk"** %17, align 8
  %19 = icmp eq %"class.base::trace_event::TraceBufferChunk"* %18, null
  br i1 %19, label %27, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %18, i64 0, i32 3
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, %3
  br i1 %23, label %24, label %27

24:                                               ; preds = %20
  %25 = lshr i64 %1, 58
  %26 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %18, i64 0, i32 2, i64 %25
  br label %27

27:                                               ; preds = %24, %20, %15, %2
  %28 = phi %"class.base::trace_event::TraceEvent"* [ null, %2 ], [ %26, %24 ], [ null, %20 ], [ null, %15 ]
  ret %"class.base::trace_event::TraceEvent"* %28
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal %"class.base::trace_event::TraceBufferChunk"* @_ZN4base11trace_event12_GLOBAL__N_121TraceBufferRingBuffer9NextChunkEv(%"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer", %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.std::__1::unique_ptr.25"*, %"class.std::__1::unique_ptr.25"** %2, align 8
  %4 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer", %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = load %"class.std::__1::unique_ptr.25"*, %"class.std::__1::unique_ptr.25"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.25"* %3, %5
  br i1 %6, label %34, label %7

7:                                                ; preds = %1
  %8 = ptrtoint %"class.std::__1::unique_ptr.25"* %3 to i64
  %9 = ptrtoint %"class.std::__1::unique_ptr.25"* %5 to i64
  %10 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer", %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"* %0, i64 0, i32 6
  %11 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer", %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"* %0, i64 0, i32 5
  %12 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer", %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer", %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"* %0, i64 0, i32 1
  %14 = load i64, i64* %10, align 8
  %15 = load i64, i64* %11, align 8
  %16 = sub i64 %9, %8
  %17 = ashr exact i64 %16, 3
  br label %18

18:                                               ; preds = %7, %21
  %19 = phi i64 [ %14, %7 ], [ %29, %21 ]
  %20 = icmp eq i64 %19, %15
  br i1 %20, label %34, label %21

21:                                               ; preds = %18
  %22 = load i64*, i64** %12, align 8
  %23 = getelementptr inbounds i64, i64* %22, i64 %19
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %19, 1
  %26 = load i64, i64* %13, align 8
  %27 = add i64 %26, 1
  %28 = icmp ult i64 %25, %27
  %29 = select i1 %28, i64 %25, i64 0
  store i64 %29, i64* %10, align 8
  %30 = icmp ult i64 %24, %17
  br i1 %30, label %31, label %18

31:                                               ; preds = %21
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %3, i64 %24, i32 0, i32 0, i32 0
  %33 = load %"class.base::trace_event::TraceBufferChunk"*, %"class.base::trace_event::TraceBufferChunk"** %32, align 8
  br label %34

34:                                               ; preds = %18, %31, %1
  %35 = phi %"class.base::trace_event::TraceBufferChunk"* [ null, %1 ], [ %33, %31 ], [ null, %18 ]
  ret %"class.base::trace_event::TraceBufferChunk"* %35
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base11trace_event12_GLOBAL__N_121TraceBufferRingBuffer27EstimateTraceMemoryOverheadEPNS0_24TraceEventMemoryOverheadE(%"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"* nocapture readonly, %"class.base::trace_event::TraceEventMemoryOverhead"*) unnamed_addr #0 align 2 {
  tail call void @_ZN4base11trace_event24TraceEventMemoryOverhead3AddENS1_10ObjectTypeEm(%"class.base::trace_event::TraceEventMemoryOverhead"* %1, i32 1, i64 80) #14
  %3 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer", %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"* %0, i64 0, i32 4
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer", %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"* %0, i64 0, i32 5
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %15, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer", %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer", %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer", %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"* %0, i64 0, i32 2, i32 0, i32 1
  %12 = bitcast %"class.std::__1::unique_ptr.25"** %11 to i64*
  %13 = bitcast %"class.std::__1::vector.23"* %10 to i64*
  %14 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer", %"class.base::trace_event::(anonymous namespace)::TraceBufferRingBuffer"* %0, i64 0, i32 1
  br label %16

15:                                               ; preds = %32, %2
  ret void

16:                                               ; preds = %8, %32
  %17 = phi i64 [ %6, %8 ], [ %33, %32 ]
  %18 = phi i64 [ %4, %8 ], [ %38, %32 ]
  %19 = load i64*, i64** %9, align 8
  %20 = getelementptr inbounds i64, i64* %19, i64 %18
  %21 = load i64, i64* %20, align 8
  %22 = load i64, i64* %12, align 8
  %23 = load i64, i64* %13, align 8
  %24 = sub i64 %22, %23
  %25 = ashr exact i64 %24, 3
  %26 = icmp ult i64 %21, %25
  br i1 %26, label %27, label %32

27:                                               ; preds = %16
  %28 = inttoptr i64 %23 to %"class.std::__1::unique_ptr.25"*
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %28, i64 %21, i32 0, i32 0, i32 0
  %30 = load %"class.base::trace_event::TraceBufferChunk"*, %"class.base::trace_event::TraceBufferChunk"** %29, align 8
  tail call void @_ZN4base11trace_event16TraceBufferChunk27EstimateTraceMemoryOverheadEPNS0_24TraceEventMemoryOverheadE(%"class.base::trace_event::TraceBufferChunk"* %30, %"class.base::trace_event::TraceEventMemoryOverhead"* %1)
  %31 = load i64, i64* %5, align 8
  br label %32

32:                                               ; preds = %16, %27
  %33 = phi i64 [ %17, %16 ], [ %31, %27 ]
  %34 = add i64 %18, 1
  %35 = load i64, i64* %14, align 8
  %36 = add i64 %35, 1
  %37 = icmp ult i64 %34, %36
  %38 = select i1 %37, i64 %34, i64 0
  %39 = icmp eq i64 %38, %33
  br i1 %39, label %15, label %16
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #12

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #12

declare %"class.base::trace_event::AllocationContextTracker"* @_ZN4base11trace_event24AllocationContextTracker27GetInstanceForCurrentThreadEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN4base11trace_event16TraceBufferChunkENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE8__appendEm(%"class.std::__1::vector.23"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.std::__1::unique_ptr.25"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::unique_ptr.25"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.std::__1::unique_ptr.25"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %13, i64 %18, i32 0, i32 0, i32 0
  %20 = bitcast %"class.base::trace_event::TraceBufferChunk"** %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 8
  %25 = and i64 %24, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %25, i1 false) #14
  %26 = ptrtoint %"class.std::__1::unique_ptr.25"* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %214

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.23"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 3
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 2305843009213693951
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.23"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #16
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 1152921504606846975
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 2305843009213693951
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #16
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 2305843009213693951, %38 ]
  %52 = shl i64 %51, 3
  %53 = tail call i8* @_Znwm(i64 %52) #15
  %54 = bitcast i8* %53 to %"class.std::__1::unique_ptr.25"*
  br label %55

55:                                               ; preds = %42, %50
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %"class.std::__1::unique_ptr.25"* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %57, i64 %33
  %59 = ptrtoint %"class.std::__1::unique_ptr.25"* %58 to i64
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %57, i64 %56
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %58, i64 %1
  %62 = shl nsw i64 %1, 3
  %63 = add i64 %62, -8
  %64 = lshr exact i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %79, label %68

68:                                               ; preds = %55, %68
  %69 = phi %"class.std::__1::unique_ptr.25"* [ %73, %68 ], [ %58, %55 ]
  %70 = phi i64 [ %74, %68 ], [ %59, %55 ]
  %71 = phi i64 [ %75, %68 ], [ %66, %55 ]
  %72 = inttoptr i64 %70 to i64*
  store i64 0, i64* %72, align 8
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %69, i64 1
  %74 = ptrtoint %"class.std::__1::unique_ptr.25"* %73 to i64
  %75 = add i64 %71, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %68, !llvm.loop !12

77:                                               ; preds = %68
  %78 = ptrtoint %"class.std::__1::unique_ptr.25"* %73 to i64
  br label %79

79:                                               ; preds = %55, %77
  %80 = phi %"class.std::__1::unique_ptr.25"* [ %58, %55 ], [ %73, %77 ]
  %81 = phi i64 [ %59, %55 ], [ %78, %77 ]
  %82 = icmp ult i64 %63, 56
  br i1 %82, label %104, label %83

83:                                               ; preds = %79, %83
  %84 = phi %"class.std::__1::unique_ptr.25"* [ %101, %83 ], [ %80, %79 ]
  %85 = phi i64 [ %102, %83 ], [ %81, %79 ]
  %86 = inttoptr i64 %85 to i64*
  store i64 0, i64* %86, align 8
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %84, i64 1
  %88 = bitcast %"class.std::__1::unique_ptr.25"* %87 to i64*
  store i64 0, i64* %88, align 8
  %89 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %84, i64 2
  %90 = bitcast %"class.std::__1::unique_ptr.25"* %89 to i64*
  store i64 0, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %84, i64 3
  %92 = bitcast %"class.std::__1::unique_ptr.25"* %91 to i64*
  store i64 0, i64* %92, align 8
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %84, i64 4
  %94 = bitcast %"class.std::__1::unique_ptr.25"* %93 to i64*
  store i64 0, i64* %94, align 8
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %84, i64 5
  %96 = bitcast %"class.std::__1::unique_ptr.25"* %95 to i64*
  store i64 0, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %84, i64 6
  %98 = bitcast %"class.std::__1::unique_ptr.25"* %97 to i64*
  store i64 0, i64* %98, align 8
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %84, i64 7
  %100 = bitcast %"class.std::__1::unique_ptr.25"* %99 to i64*
  store i64 0, i64* %100, align 8
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %84, i64 8
  %102 = ptrtoint %"class.std::__1::unique_ptr.25"* %101 to i64
  %103 = icmp eq %"class.std::__1::unique_ptr.25"* %61, %101
  br i1 %103, label %104, label %83

104:                                              ; preds = %83, %79
  %105 = ptrtoint %"class.std::__1::unique_ptr.25"* %60 to i64
  %106 = ptrtoint %"class.std::__1::unique_ptr.25"* %61 to i64
  %107 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %0, i64 0, i32 0, i32 0
  %108 = load %"class.std::__1::unique_ptr.25"*, %"class.std::__1::unique_ptr.25"** %107, align 8
  %109 = ptrtoint %"class.std::__1::unique_ptr.25"* %108 to i64
  %110 = load %"class.std::__1::unique_ptr.25"*, %"class.std::__1::unique_ptr.25"** %6, align 8
  %111 = icmp eq %"class.std::__1::unique_ptr.25"* %110, %108
  br i1 %111, label %194, label %112

112:                                              ; preds = %104
  %113 = getelementptr %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %110, i64 -1, i32 0, i32 0, i32 0
  %114 = ptrtoint %"class.base::trace_event::TraceBufferChunk"** %113 to i64
  %115 = sub i64 %114, %109
  %116 = lshr i64 %115, 3
  %117 = add nuw nsw i64 %116, 1
  %118 = and i64 %117, 7
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %132, label %120

120:                                              ; preds = %112, %120
  %121 = phi %"class.std::__1::unique_ptr.25"* [ %124, %120 ], [ %58, %112 ]
  %122 = phi %"class.std::__1::unique_ptr.25"* [ %125, %120 ], [ %110, %112 ]
  %123 = phi i64 [ %130, %120 ], [ %118, %112 ]
  %124 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %121, i64 -1
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %122, i64 -1
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %125, i64 0, i32 0, i32 0, i32 0
  %127 = bitcast %"class.std::__1::unique_ptr.25"* %125 to i64*
  %128 = load i64, i64* %127, align 8
  store %"class.base::trace_event::TraceBufferChunk"* null, %"class.base::trace_event::TraceBufferChunk"** %126, align 8
  %129 = bitcast %"class.std::__1::unique_ptr.25"* %124 to i64*
  store i64 %128, i64* %129, align 8
  %130 = add i64 %123, -1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %120, !llvm.loop !13

132:                                              ; preds = %120, %112
  %133 = phi %"class.std::__1::unique_ptr.25"* [ undef, %112 ], [ %124, %120 ]
  %134 = phi %"class.std::__1::unique_ptr.25"* [ %58, %112 ], [ %124, %120 ]
  %135 = phi %"class.std::__1::unique_ptr.25"* [ %110, %112 ], [ %125, %120 ]
  %136 = icmp ult i64 %115, 56
  br i1 %136, label %189, label %137

137:                                              ; preds = %132, %137
  %138 = phi %"class.std::__1::unique_ptr.25"* [ %182, %137 ], [ %134, %132 ]
  %139 = phi %"class.std::__1::unique_ptr.25"* [ %183, %137 ], [ %135, %132 ]
  %140 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %138, i64 -1
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %139, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = bitcast %"class.std::__1::unique_ptr.25"* %141 to i64*
  %144 = load i64, i64* %143, align 8
  store %"class.base::trace_event::TraceBufferChunk"* null, %"class.base::trace_event::TraceBufferChunk"** %142, align 8
  %145 = bitcast %"class.std::__1::unique_ptr.25"* %140 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %138, i64 -2
  %147 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %139, i64 -2
  %148 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %147, i64 0, i32 0, i32 0, i32 0
  %149 = bitcast %"class.std::__1::unique_ptr.25"* %147 to i64*
  %150 = load i64, i64* %149, align 8
  store %"class.base::trace_event::TraceBufferChunk"* null, %"class.base::trace_event::TraceBufferChunk"** %148, align 8
  %151 = bitcast %"class.std::__1::unique_ptr.25"* %146 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %138, i64 -3
  %153 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %139, i64 -3
  %154 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %153, i64 0, i32 0, i32 0, i32 0
  %155 = bitcast %"class.std::__1::unique_ptr.25"* %153 to i64*
  %156 = load i64, i64* %155, align 8
  store %"class.base::trace_event::TraceBufferChunk"* null, %"class.base::trace_event::TraceBufferChunk"** %154, align 8
  %157 = bitcast %"class.std::__1::unique_ptr.25"* %152 to i64*
  store i64 %156, i64* %157, align 8
  %158 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %138, i64 -4
  %159 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %139, i64 -4
  %160 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %159, i64 0, i32 0, i32 0, i32 0
  %161 = bitcast %"class.std::__1::unique_ptr.25"* %159 to i64*
  %162 = load i64, i64* %161, align 8
  store %"class.base::trace_event::TraceBufferChunk"* null, %"class.base::trace_event::TraceBufferChunk"** %160, align 8
  %163 = bitcast %"class.std::__1::unique_ptr.25"* %158 to i64*
  store i64 %162, i64* %163, align 8
  %164 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %138, i64 -5
  %165 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %139, i64 -5
  %166 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %165, i64 0, i32 0, i32 0, i32 0
  %167 = bitcast %"class.std::__1::unique_ptr.25"* %165 to i64*
  %168 = load i64, i64* %167, align 8
  store %"class.base::trace_event::TraceBufferChunk"* null, %"class.base::trace_event::TraceBufferChunk"** %166, align 8
  %169 = bitcast %"class.std::__1::unique_ptr.25"* %164 to i64*
  store i64 %168, i64* %169, align 8
  %170 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %138, i64 -6
  %171 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %139, i64 -6
  %172 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %171, i64 0, i32 0, i32 0, i32 0
  %173 = bitcast %"class.std::__1::unique_ptr.25"* %171 to i64*
  %174 = load i64, i64* %173, align 8
  store %"class.base::trace_event::TraceBufferChunk"* null, %"class.base::trace_event::TraceBufferChunk"** %172, align 8
  %175 = bitcast %"class.std::__1::unique_ptr.25"* %170 to i64*
  store i64 %174, i64* %175, align 8
  %176 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %138, i64 -7
  %177 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %139, i64 -7
  %178 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %177, i64 0, i32 0, i32 0, i32 0
  %179 = bitcast %"class.std::__1::unique_ptr.25"* %177 to i64*
  %180 = load i64, i64* %179, align 8
  store %"class.base::trace_event::TraceBufferChunk"* null, %"class.base::trace_event::TraceBufferChunk"** %178, align 8
  %181 = bitcast %"class.std::__1::unique_ptr.25"* %176 to i64*
  store i64 %180, i64* %181, align 8
  %182 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %138, i64 -8
  %183 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %139, i64 -8
  %184 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %183, i64 0, i32 0, i32 0, i32 0
  %185 = bitcast %"class.std::__1::unique_ptr.25"* %183 to i64*
  %186 = load i64, i64* %185, align 8
  store %"class.base::trace_event::TraceBufferChunk"* null, %"class.base::trace_event::TraceBufferChunk"** %184, align 8
  %187 = bitcast %"class.std::__1::unique_ptr.25"* %182 to i64*
  store i64 %186, i64* %187, align 8
  %188 = icmp eq %"class.std::__1::unique_ptr.25"* %183, %108
  br i1 %188, label %189, label %137

189:                                              ; preds = %137, %132
  %190 = phi %"class.std::__1::unique_ptr.25"* [ %133, %132 ], [ %182, %137 ]
  %191 = ptrtoint %"class.std::__1::unique_ptr.25"* %190 to i64
  %192 = load i64, i64* %30, align 8
  %193 = load %"class.std::__1::unique_ptr.25"*, %"class.std::__1::unique_ptr.25"** %6, align 8
  br label %194

194:                                              ; preds = %104, %189
  %195 = phi %"class.std::__1::unique_ptr.25"* [ %193, %189 ], [ %108, %104 ]
  %196 = phi i64 [ %191, %189 ], [ %59, %104 ]
  %197 = phi i64 [ %192, %189 ], [ %109, %104 ]
  store i64 %196, i64* %30, align 8
  store i64 %106, i64* %7, align 8
  store i64 %105, i64* %4, align 8
  %198 = inttoptr i64 %197 to %"class.std::__1::unique_ptr.25"*
  %199 = icmp eq %"class.std::__1::unique_ptr.25"* %195, %198
  br i1 %199, label %210, label %200

200:                                              ; preds = %194, %208
  %201 = phi %"class.std::__1::unique_ptr.25"* [ %202, %208 ], [ %195, %194 ]
  %202 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %201, i64 -1
  %203 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %202, i64 0, i32 0, i32 0, i32 0
  %204 = load %"class.base::trace_event::TraceBufferChunk"*, %"class.base::trace_event::TraceBufferChunk"** %203, align 8
  store %"class.base::trace_event::TraceBufferChunk"* null, %"class.base::trace_event::TraceBufferChunk"** %203, align 8
  %205 = icmp eq %"class.base::trace_event::TraceBufferChunk"* %204, null
  br i1 %205, label %208, label %206

206:                                              ; preds = %200
  tail call void @_ZN4base11trace_event16TraceBufferChunkD2Ev(%"class.base::trace_event::TraceBufferChunk"* nonnull %204) #14
  %207 = bitcast %"class.base::trace_event::TraceBufferChunk"* %204 to i8*
  tail call void @_ZdlPv(i8* %207) #15
  br label %208

208:                                              ; preds = %206, %200
  %209 = icmp eq %"class.std::__1::unique_ptr.25"* %202, %198
  br i1 %209, label %210, label %200

210:                                              ; preds = %208, %194
  %211 = icmp eq i64 %197, 0
  br i1 %211, label %214, label %212

212:                                              ; preds = %210
  %213 = inttoptr i64 %197 to i8*
  tail call void @_ZdlPv(i8* %213) #15
  br label %214

214:                                              ; preds = %212, %210, %27
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #13

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN4base11trace_event12_GLOBAL__N_117TraceBufferVectorD2Ev(%"class.base::trace_event::(anonymous namespace)::TraceBufferVector"* nocapture) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferVector", %"class.base::trace_event::(anonymous namespace)::TraceBufferVector"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4base11trace_event12_GLOBAL__N_117TraceBufferVectorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferVector", %"class.base::trace_event::(anonymous namespace)::TraceBufferVector"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.25"*, %"class.std::__1::unique_ptr.25"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.25"* %5, null
  br i1 %6, label %27, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr.25"* %5 to i8*
  %9 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferVector", %"class.base::trace_event::(anonymous namespace)::TraceBufferVector"* %0, i64 0, i32 4, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.25"*, %"class.std::__1::unique_ptr.25"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.25"* %10, %5
  br i1 %11, label %25, label %12

12:                                               ; preds = %7, %20
  %13 = phi %"class.std::__1::unique_ptr.25"* [ %14, %20 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.base::trace_event::TraceBufferChunk"*, %"class.base::trace_event::TraceBufferChunk"** %15, align 8
  store %"class.base::trace_event::TraceBufferChunk"* null, %"class.base::trace_event::TraceBufferChunk"** %15, align 8
  %17 = icmp eq %"class.base::trace_event::TraceBufferChunk"* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %12
  tail call void @_ZN4base11trace_event16TraceBufferChunkD2Ev(%"class.base::trace_event::TraceBufferChunk"* nonnull %16) #14
  %19 = bitcast %"class.base::trace_event::TraceBufferChunk"* %16 to i8*
  tail call void @_ZdlPv(i8* %19) #15
  br label %20

20:                                               ; preds = %18, %12
  %21 = icmp eq %"class.std::__1::unique_ptr.25"* %14, %5
  br i1 %21, label %22, label %12

22:                                               ; preds = %20
  %23 = bitcast %"class.std::__1::vector.23"* %3 to i8**
  %24 = load i8*, i8** %23, align 8
  br label %25

25:                                               ; preds = %22, %7
  %26 = phi i8* [ %24, %22 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr.25"* %5, %"class.std::__1::unique_ptr.25"** %9, align 8
  tail call void @_ZdlPv(i8* %26) #15
  br label %27

27:                                               ; preds = %1, %25
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN4base11trace_event12_GLOBAL__N_117TraceBufferVectorD0Ev(%"class.base::trace_event::(anonymous namespace)::TraceBufferVector"*) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferVector", %"class.base::trace_event::(anonymous namespace)::TraceBufferVector"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN4base11trace_event12_GLOBAL__N_117TraceBufferVectorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferVector", %"class.base::trace_event::(anonymous namespace)::TraceBufferVector"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.25"*, %"class.std::__1::unique_ptr.25"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.25"* %5, null
  br i1 %6, label %27, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr.25"* %5 to i8*
  %9 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferVector", %"class.base::trace_event::(anonymous namespace)::TraceBufferVector"* %0, i64 0, i32 4, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.25"*, %"class.std::__1::unique_ptr.25"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.25"* %10, %5
  br i1 %11, label %25, label %12

12:                                               ; preds = %7, %20
  %13 = phi %"class.std::__1::unique_ptr.25"* [ %14, %20 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.base::trace_event::TraceBufferChunk"*, %"class.base::trace_event::TraceBufferChunk"** %15, align 8
  store %"class.base::trace_event::TraceBufferChunk"* null, %"class.base::trace_event::TraceBufferChunk"** %15, align 8
  %17 = icmp eq %"class.base::trace_event::TraceBufferChunk"* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %12
  tail call void @_ZN4base11trace_event16TraceBufferChunkD2Ev(%"class.base::trace_event::TraceBufferChunk"* nonnull %16) #14
  %19 = bitcast %"class.base::trace_event::TraceBufferChunk"* %16 to i8*
  tail call void @_ZdlPv(i8* %19) #15
  br label %20

20:                                               ; preds = %18, %12
  %21 = icmp eq %"class.std::__1::unique_ptr.25"* %14, %5
  br i1 %21, label %22, label %12

22:                                               ; preds = %20
  %23 = bitcast %"class.std::__1::vector.23"* %3 to i8**
  %24 = load i8*, i8** %23, align 8
  br label %25

25:                                               ; preds = %22, %7
  %26 = phi i8* [ %24, %22 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr.25"* %5, %"class.std::__1::unique_ptr.25"** %9, align 8
  tail call void @_ZdlPv(i8* %26) #15
  br label %27

27:                                               ; preds = %1, %25
  %28 = bitcast %"class.base::trace_event::(anonymous namespace)::TraceBufferVector"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal nonnull %"class.base::trace_event::TraceBufferChunk"* @_ZN4base11trace_event12_GLOBAL__N_117TraceBufferVector8GetChunkEPm(%"class.base::trace_event::(anonymous namespace)::TraceBufferVector"*, i64* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.25", align 8
  %4 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.58", %"struct.std::__1::atomic.58"* @_ZN4base11trace_event24AllocationContextTracker13capture_mode_E, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.58", %"struct.std::__1::atomic.58"* @_ZN4base11trace_event24AllocationContextTracker13capture_mode_E, i64 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !11

9:                                                ; preds = %6
  %10 = tail call %"class.base::trace_event::AllocationContextTracker"* @_ZN4base11trace_event24AllocationContextTracker27GetInstanceForCurrentThreadEv() #14
  %11 = getelementptr inbounds %"class.base::trace_event::AllocationContextTracker", %"class.base::trace_event::AllocationContextTracker"* %10, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = add i32 %12, 1
  store i32 %13, i32* %11, align 8
  br label %14

14:                                               ; preds = %2, %6, %9
  %15 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferVector", %"class.base::trace_event::(anonymous namespace)::TraceBufferVector"* %0, i64 0, i32 4
  %16 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferVector", %"class.base::trace_event::(anonymous namespace)::TraceBufferVector"* %0, i64 0, i32 4, i32 0, i32 1
  %17 = bitcast %"class.std::__1::unique_ptr.25"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::vector.23"* %15 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %18, %20
  %22 = ashr exact i64 %21, 3
  store i64 %22, i64* %1, align 8
  %23 = bitcast %"class.std::__1::unique_ptr.25"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #14
  %24 = bitcast %"class.std::__1::unique_ptr.25"* %3 to i64*
  store i64 0, i64* %24, align 8
  %25 = load %"class.std::__1::unique_ptr.25"*, %"class.std::__1::unique_ptr.25"** %16, align 8
  %26 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferVector", %"class.base::trace_event::(anonymous namespace)::TraceBufferVector"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %27 = load %"class.std::__1::unique_ptr.25"*, %"class.std::__1::unique_ptr.25"** %26, align 8
  %28 = icmp ult %"class.std::__1::unique_ptr.25"* %25, %27
  br i1 %28, label %29, label %34

29:                                               ; preds = %14
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.base::trace_event::TraceBufferChunk"* null, %"class.base::trace_event::TraceBufferChunk"** %30, align 8
  %31 = bitcast %"class.std::__1::unique_ptr.25"* %25 to i64*
  store i64 0, i64* %31, align 8
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %25, i64 1
  %33 = ptrtoint %"class.std::__1::unique_ptr.25"* %32 to i64
  store i64 %33, i64* %17, align 8
  br label %35

34:                                               ; preds = %14
  call void @_ZNSt3__16vectorINS_10unique_ptrIN4base11trace_event16TraceBufferChunkENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.23"* %15, %"class.std::__1::unique_ptr.25"* nonnull dereferenceable(8) %3) #14
  br label %35

35:                                               ; preds = %29, %34
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %3, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.base::trace_event::TraceBufferChunk"*, %"class.base::trace_event::TraceBufferChunk"** %36, align 8
  store %"class.base::trace_event::TraceBufferChunk"* null, %"class.base::trace_event::TraceBufferChunk"** %36, align 8
  %38 = icmp eq %"class.base::trace_event::TraceBufferChunk"* %37, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %35
  call void @_ZN4base11trace_event16TraceBufferChunkD2Ev(%"class.base::trace_event::TraceBufferChunk"* nonnull %37) #14
  %40 = bitcast %"class.base::trace_event::TraceBufferChunk"* %37 to i8*
  call void @_ZdlPv(i8* %40) #15
  br label %41

41:                                               ; preds = %35, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #14
  %42 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferVector", %"class.base::trace_event::(anonymous namespace)::TraceBufferVector"* %0, i64 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = add i64 %43, 1
  store i64 %44, i64* %42, align 8
  %45 = load i64, i64* %1, align 8
  %46 = trunc i64 %45 to i32
  %47 = add i32 %46, 1
  %48 = call i8* @_Znwm(i64 9752) #15
  %49 = bitcast i8* %48 to %"class.base::trace_event::TraceBufferChunk"*
  call void @_ZN4base11trace_event16TraceBufferChunkC2Ej(%"class.base::trace_event::TraceBufferChunk"* nonnull %49, i32 %47) #14
  %50 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.58", %"struct.std::__1::atomic.58"* @_ZN4base11trace_event24AllocationContextTracker13capture_mode_E, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %62, label %52

52:                                               ; preds = %41
  %53 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.58", %"struct.std::__1::atomic.58"* @_ZN4base11trace_event24AllocationContextTracker13capture_mode_E, i64 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %62, label %55, !prof !11

55:                                               ; preds = %52
  %56 = call %"class.base::trace_event::AllocationContextTracker"* @_ZN4base11trace_event24AllocationContextTracker27GetInstanceForCurrentThreadEv() #14
  %57 = getelementptr inbounds %"class.base::trace_event::AllocationContextTracker", %"class.base::trace_event::AllocationContextTracker"* %56, i64 0, i32 3
  %58 = load i32, i32* %57, align 8
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %55
  %61 = add i32 %58, -1
  store i32 %61, i32* %57, align 8
  br label %62

62:                                               ; preds = %41, %52, %55, %60
  ret %"class.base::trace_event::TraceBufferChunk"* %49
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base11trace_event12_GLOBAL__N_117TraceBufferVector11ReturnChunkEmNSt3__110unique_ptrINS0_16TraceBufferChunkENS3_14default_deleteIS5_EEEE(%"class.base::trace_event::(anonymous namespace)::TraceBufferVector"* nocapture, i64, %"class.base::trace_event::TraceBufferChunk"*) unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.base::trace_event::TraceBufferChunk"* %2 to i64
  %5 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferVector", %"class.base::trace_event::(anonymous namespace)::TraceBufferVector"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, -1
  store i64 %7, i64* %5, align 8
  %8 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferVector", %"class.base::trace_event::(anonymous namespace)::TraceBufferVector"* %0, i64 0, i32 4, i32 0, i32 0
  %9 = load %"class.std::__1::unique_ptr.25"*, %"class.std::__1::unique_ptr.25"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %9, i64 %1
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.base::trace_event::TraceBufferChunk"*, %"class.base::trace_event::TraceBufferChunk"** %11, align 8
  %13 = bitcast %"class.std::__1::unique_ptr.25"* %10 to i64*
  store i64 %4, i64* %13, align 8
  %14 = icmp eq %"class.base::trace_event::TraceBufferChunk"* %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %3
  tail call void @_ZN4base11trace_event16TraceBufferChunkD2Ev(%"class.base::trace_event::TraceBufferChunk"* nonnull %12) #14
  %16 = bitcast %"class.base::trace_event::TraceBufferChunk"* %12 to i8*
  tail call void @_ZdlPv(i8* %16) #15
  br label %17

17:                                               ; preds = %15, %3
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i1 @_ZNK4base11trace_event12_GLOBAL__N_117TraceBufferVector6IsFullEv(%"class.base::trace_event::(anonymous namespace)::TraceBufferVector"* nocapture readonly) unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferVector", %"class.base::trace_event::(anonymous namespace)::TraceBufferVector"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferVector", %"class.base::trace_event::(anonymous namespace)::TraceBufferVector"* %0, i64 0, i32 4, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.25"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.23"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferVector", %"class.base::trace_event::(anonymous namespace)::TraceBufferVector"* %0, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = icmp uge i64 %9, %11
  ret i1 %12
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i64 @_ZNK4base11trace_event12_GLOBAL__N_117TraceBufferVector4SizeEv(%"class.base::trace_event::(anonymous namespace)::TraceBufferVector"* nocapture readonly) unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferVector", %"class.base::trace_event::(anonymous namespace)::TraceBufferVector"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferVector", %"class.base::trace_event::(anonymous namespace)::TraceBufferVector"* %0, i64 0, i32 4, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.25"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.23"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = shl i64 %8, 3
  ret i64 %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i64 @_ZNK4base11trace_event12_GLOBAL__N_117TraceBufferVector8CapacityEv(%"class.base::trace_event::(anonymous namespace)::TraceBufferVector"* nocapture readonly) unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferVector", %"class.base::trace_event::(anonymous namespace)::TraceBufferVector"* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  %4 = shl i64 %3, 6
  ret i64 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal %"class.base::trace_event::TraceEvent"* @_ZN4base11trace_event12_GLOBAL__N_117TraceBufferVector16GetEventByHandleENS0_16TraceEventHandleE(%"class.base::trace_event::(anonymous namespace)::TraceBufferVector"* nocapture readonly, i64) unnamed_addr #10 align 2 {
  %3 = trunc i64 %1 to i32
  %4 = lshr i64 %1, 32
  %5 = and i64 %4, 67108863
  %6 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferVector", %"class.base::trace_event::(anonymous namespace)::TraceBufferVector"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferVector", %"class.base::trace_event::(anonymous namespace)::TraceBufferVector"* %0, i64 0, i32 4, i32 0, i32 1
  %8 = bitcast %"class.std::__1::unique_ptr.25"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.23"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = ashr exact i64 %12, 3
  %14 = icmp ult i64 %5, %13
  br i1 %14, label %15, label %27

15:                                               ; preds = %2
  %16 = inttoptr i64 %11 to %"class.std::__1::unique_ptr.25"*
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %16, i64 %5, i32 0, i32 0, i32 0
  %18 = load %"class.base::trace_event::TraceBufferChunk"*, %"class.base::trace_event::TraceBufferChunk"** %17, align 8
  %19 = icmp eq %"class.base::trace_event::TraceBufferChunk"* %18, null
  br i1 %19, label %27, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %18, i64 0, i32 3
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, %3
  br i1 %23, label %24, label %27

24:                                               ; preds = %20
  %25 = lshr i64 %1, 58
  %26 = getelementptr inbounds %"class.base::trace_event::TraceBufferChunk", %"class.base::trace_event::TraceBufferChunk"* %18, i64 0, i32 2, i64 %25
  br label %27

27:                                               ; preds = %24, %20, %15, %2
  %28 = phi %"class.base::trace_event::TraceEvent"* [ null, %2 ], [ %26, %24 ], [ null, %20 ], [ null, %15 ]
  ret %"class.base::trace_event::TraceEvent"* %28
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal %"class.base::trace_event::TraceBufferChunk"* @_ZN4base11trace_event12_GLOBAL__N_117TraceBufferVector9NextChunkEv(%"class.base::trace_event::(anonymous namespace)::TraceBufferVector"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferVector", %"class.base::trace_event::(anonymous namespace)::TraceBufferVector"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferVector", %"class.base::trace_event::(anonymous namespace)::TraceBufferVector"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferVector", %"class.base::trace_event::(anonymous namespace)::TraceBufferVector"* %0, i64 0, i32 4, i32 0, i32 1
  %5 = bitcast %"class.std::__1::unique_ptr.25"** %4 to i64*
  %6 = bitcast %"class.std::__1::vector.23"* %3 to i64*
  %7 = load i64, i64* %2, align 8
  %8 = load i64, i64* %5, align 8
  %9 = load i64, i64* %6, align 8
  %10 = inttoptr i64 %9 to %"class.std::__1::unique_ptr.25"*
  %11 = sub i64 %8, %9
  %12 = ashr exact i64 %11, 3
  br label %13

13:                                               ; preds = %16, %1
  %14 = phi i64 [ %7, %1 ], [ %17, %16 ]
  %15 = icmp ult i64 %14, %12
  br i1 %15, label %16, label %21

16:                                               ; preds = %13
  %17 = add nuw i64 %14, 1
  store i64 %17, i64* %2, align 8
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %10, i64 %14, i32 0, i32 0, i32 0
  %19 = load %"class.base::trace_event::TraceBufferChunk"*, %"class.base::trace_event::TraceBufferChunk"** %18, align 8
  %20 = icmp eq %"class.base::trace_event::TraceBufferChunk"* %19, null
  br i1 %20, label %13, label %21

21:                                               ; preds = %13, %16
  %22 = phi %"class.base::trace_event::TraceBufferChunk"* [ %19, %16 ], [ null, %13 ]
  ret %"class.base::trace_event::TraceBufferChunk"* %22
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base11trace_event12_GLOBAL__N_117TraceBufferVector27EstimateTraceMemoryOverheadEPNS0_24TraceEventMemoryOverheadE(%"class.base::trace_event::(anonymous namespace)::TraceBufferVector"* nocapture readonly, %"class.base::trace_event::TraceEventMemoryOverhead"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferVector", %"class.base::trace_event::(anonymous namespace)::TraceBufferVector"* %0, i64 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = shl i64 %4, 3
  %6 = add i64 %5, 56
  %7 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferVector", %"class.base::trace_event::(anonymous namespace)::TraceBufferVector"* %0, i64 0, i32 4
  %8 = getelementptr inbounds %"class.base::trace_event::(anonymous namespace)::TraceBufferVector", %"class.base::trace_event::(anonymous namespace)::TraceBufferVector"* %0, i64 0, i32 4, i32 0, i32 1
  %9 = bitcast %"class.std::__1::unique_ptr.25"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.23"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %10, 56
  %14 = sub i64 %13, %12
  tail call void @_ZN4base11trace_event24TraceEventMemoryOverhead3AddENS1_10ObjectTypeEmm(%"class.base::trace_event::TraceEventMemoryOverhead"* %1, i32 1, i64 %6, i64 %14) #14
  %15 = load i64, i64* %9, align 8
  %16 = load i64, i64* %11, align 8
  %17 = icmp eq i64 %15, %16
  br i1 %17, label %18, label %19

18:                                               ; preds = %30, %2
  ret void

19:                                               ; preds = %2, %30
  %20 = phi i64 [ %31, %30 ], [ %16, %2 ]
  %21 = phi i64 [ %32, %30 ], [ %15, %2 ]
  %22 = phi i64 [ %33, %30 ], [ 0, %2 ]
  %23 = inttoptr i64 %20 to %"class.std::__1::unique_ptr.25"*
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %23, i64 %22, i32 0, i32 0, i32 0
  %25 = load %"class.base::trace_event::TraceBufferChunk"*, %"class.base::trace_event::TraceBufferChunk"** %24, align 8
  %26 = icmp eq %"class.base::trace_event::TraceBufferChunk"* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %19
  tail call void @_ZN4base11trace_event16TraceBufferChunk27EstimateTraceMemoryOverheadEPNS0_24TraceEventMemoryOverheadE(%"class.base::trace_event::TraceBufferChunk"* nonnull %25, %"class.base::trace_event::TraceEventMemoryOverhead"* %1)
  %28 = load i64, i64* %9, align 8
  %29 = load i64, i64* %11, align 8
  br label %30

30:                                               ; preds = %19, %27
  %31 = phi i64 [ %20, %19 ], [ %29, %27 ]
  %32 = phi i64 [ %21, %19 ], [ %28, %27 ]
  %33 = add nuw i64 %22, 1
  %34 = sub i64 %32, %31
  %35 = ashr exact i64 %34, 3
  %36 = icmp ult i64 %33, %35
  br i1 %36, label %19, label %18
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN4base11trace_event16TraceBufferChunkENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.23"*, %"class.std::__1::unique_ptr.25"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.25"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.23"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.23"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.25"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #16
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #15
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.25"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.25"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.25"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.25"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.base::trace_event::TraceBufferChunk"* null, %"class.base::trace_event::TraceBufferChunk"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.25"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.25"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.25"*, %"class.std::__1::unique_ptr.25"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.25"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.25"*, %"class.std::__1::unique_ptr.25"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.25"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.base::trace_event::TraceBufferChunk"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.25"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.25"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.25"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.base::trace_event::TraceBufferChunk"* null, %"class.base::trace_event::TraceBufferChunk"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.25"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !14

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.25"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.25"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.25"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.25"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.25"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.25"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.base::trace_event::TraceBufferChunk"* null, %"class.base::trace_event::TraceBufferChunk"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.25"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.25"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.base::trace_event::TraceBufferChunk"* null, %"class.base::trace_event::TraceBufferChunk"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.25"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.25"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.base::trace_event::TraceBufferChunk"* null, %"class.base::trace_event::TraceBufferChunk"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.25"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.25"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.base::trace_event::TraceBufferChunk"* null, %"class.base::trace_event::TraceBufferChunk"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.25"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.25"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.base::trace_event::TraceBufferChunk"* null, %"class.base::trace_event::TraceBufferChunk"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.25"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.25"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.base::trace_event::TraceBufferChunk"* null, %"class.base::trace_event::TraceBufferChunk"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.25"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.25"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.base::trace_event::TraceBufferChunk"* null, %"class.base::trace_event::TraceBufferChunk"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.25"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.25"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.base::trace_event::TraceBufferChunk"* null, %"class.base::trace_event::TraceBufferChunk"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.25"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.25"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.25"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.25"*, %"class.std::__1::unique_ptr.25"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.25"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.25"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.25"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.25"*
  %138 = icmp eq %"class.std::__1::unique_ptr.25"* %133, %137
  br i1 %138, label %149, label %139

139:                                              ; preds = %132, %147
  %140 = phi %"class.std::__1::unique_ptr.25"* [ %141, %147 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.base::trace_event::TraceBufferChunk"*, %"class.base::trace_event::TraceBufferChunk"** %142, align 8
  store %"class.base::trace_event::TraceBufferChunk"* null, %"class.base::trace_event::TraceBufferChunk"** %142, align 8
  %144 = icmp eq %"class.base::trace_event::TraceBufferChunk"* %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %139
  tail call void @_ZN4base11trace_event16TraceBufferChunkD2Ev(%"class.base::trace_event::TraceBufferChunk"* nonnull %143) #14
  %146 = bitcast %"class.base::trace_event::TraceBufferChunk"* %143 to i8*
  tail call void @_ZdlPv(i8* %146) #15
  br label %147

147:                                              ; preds = %145, %139
  %148 = icmp eq %"class.std::__1::unique_ptr.25"* %141, %137
  br i1 %148, label %149, label %139

149:                                              ; preds = %147, %132
  %150 = icmp eq i64 %135, 0
  br i1 %150, label %153, label %151

151:                                              ; preds = %149
  %152 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %152) #15
  br label %153

153:                                              ; preds = %149, %151
  ret void
}

declare void @_ZN4base11trace_event24TraceEventMemoryOverhead3AddENS1_10ObjectTypeEmm(%"class.base::trace_event::TraceEventMemoryOverhead"*, i32, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base11trace_event24TraceEventMemoryOverheadD1Ev(%"class.base::trace_event::TraceEventMemoryOverhead"*) unnamed_addr #2

declare void @_ZN4base11trace_event24TraceEventMemoryOverheadC1Ev(%"class.base::trace_event::TraceEventMemoryOverhead"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMNS_11trace_event17TraceResultBuffer12SimpleOutputEFvRKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEEJNS0_17UnretainedWrapperIS5_EEEEEFvSE_EE3RunEPNS0_13BindStateBaseESE_(%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"* dereferenceable(24)) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %10 = bitcast void ()** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 %11
  %13 = bitcast i8* %12 to %"struct.base::trace_event::TraceResultBuffer::SimpleOutput"*
  %14 = and i64 %8, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = bitcast i8* %12 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = add i64 %8, -1
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to void (%"struct.base::trace_event::TraceResultBuffer::SimpleOutput"*, %"class.std::__1::basic_string"*)**
  %22 = load void (%"struct.base::trace_event::TraceResultBuffer::SimpleOutput"*, %"class.std::__1::basic_string"*)*, void (%"struct.base::trace_event::TraceResultBuffer::SimpleOutput"*, %"class.std::__1::basic_string"*)** %21, align 8
  br label %25

23:                                               ; preds = %2
  %24 = inttoptr i64 %8 to void (%"struct.base::trace_event::TraceResultBuffer::SimpleOutput"*, %"class.std::__1::basic_string"*)*
  br label %25

25:                                               ; preds = %16, %23
  %26 = phi void (%"struct.base::trace_event::TraceResultBuffer::SimpleOutput"*, %"class.std::__1::basic_string"*)* [ %22, %16 ], [ %24, %23 ]
  tail call void %26(%"struct.base::trace_event::TraceResultBuffer::SimpleOutput"* %13, %"class.std::__1::basic_string"* dereferenceable(24) %1) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMNS_11trace_event17TraceResultBuffer12SimpleOutputEFvRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #15
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMNS_11trace_event17TraceResultBuffer12SimpleOutputEFvRKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMNS_11trace_event17TraceResultBuffer12SimpleOutputEFvRKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base13BindRepeatingIMNS_11trace_event17TraceResultBuffer12SimpleOutputEFvRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEJNS_8internal17UnretainedWrapperIS3_EEEEENS_17RepeatingCallbackINSF_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_: argument 0"}
!6 = distinct !{!6, !"_ZN4base13BindRepeatingIMNS_11trace_event17TraceResultBuffer12SimpleOutputEFvRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEJNS_8internal17UnretainedWrapperIS3_EEEEENS_17RepeatingCallbackINSF_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_"}
!7 = !{i8 0, i8 2}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.unroll.disable"}
!10 = distinct !{!10, !9}
!11 = !{!"branch_weights", i32 2000, i32 1}
!12 = distinct !{!12, !9}
!13 = distinct !{!13, !9}
!14 = distinct !{!14, !9}
