; ModuleID = '../../net/socket/client_socket_pool_manager.cc'
source_filename = "../../net/socket/client_socket_pool_manager.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"class.net::ClientSocketPoolManager" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.net::HttpNetworkSession" = type { %"class.net::NetLog"*, %"class.net::HttpServerProperties"*, %"class.net::CertVerifier"*, %"class.net::HttpAuthHandlerFactory"*, %"class.net::HostResolver"*, %"class.net::ReportingService"*, %"class.net::NetworkErrorLoggingService"*, %"class.net::ProxyResolutionService"*, %"class.net::SSLConfigService"*, %"class.net::HttpAuthCache", %"class.net::SSLClientSessionCache", %"class.net::SSLClientContext", %"class.net::WebSocketEndpointLockManager", %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.217", %"class.net::QuicStreamFactory", %"class.net::SpdySessionPool", %"class.std::__1::unique_ptr.503", %"class.std::__1::map.523", %"class.std::__1::vector.534", %"class.base::flat_map.541", %"struct.net::HttpNetworkSession::Params", %"struct.net::HttpNetworkSession::Context", %"class.std::__1::unique_ptr.163" }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.6" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair.1" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.8" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"class.net::HttpServerProperties" = type { %"class.net::BrokenAlternativeServices::Delegate", %"class.base::TickClock"*, %"class.base::Clock"*, i8, i8, i8, %"class.std::__1::unique_ptr", %"class.net::HttpServerProperties::ServerInfoMap", %"class.net::BrokenAlternativeServices", %"class.net::IPAddress", %"class.base::flat_map", %"class.std::__1::vector.89", %"class.base::MRUCache.96", %"class.base::flat_map.116", i64, %"class.base::OneShotTimer" }
%"class.net::BrokenAlternativeServices::Delegate" = type { i32 (...)** }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::Clock" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.net::HttpServerPropertiesManager"* }
%"class.net::HttpServerPropertiesManager" = type opaque
%"class.net::HttpServerProperties::ServerInfoMap" = type { %"class.base::MRUCache" }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::map", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.16" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.21", %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.net::BrokenAlternativeServices" = type { %"class.net::BrokenAlternativeServices::Delegate"*, %"class.base::TickClock"*, %"class.std::__1::list.28", %"class.std::__1::map.35", %"class.std::__1::set", %"class.net::RecentlyBrokenAlternativeServices", %"class.base::OneShotTimer", %"class.base::WeakPtrFactory.81" }
%"class.std::__1::list.28" = type { %"class.std::__1::__list_imp.29" }
%"class.std::__1::__list_imp.29" = type { %"struct.std::__1::__list_node_base.30", %"class.std::__1::__compressed_pair.31" }
%"struct.std::__1::__list_node_base.30" = type { %"struct.std::__1::__list_node_base.30"*, %"struct.std::__1::__list_node_base.30"* }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::map.35" = type { %"class.std::__1::__tree.36" }
%"class.std::__1::__tree.36" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.46" }
%"class.std::__1::__tree.46" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.47", %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.net::RecentlyBrokenAlternativeServices" = type { %"class.base::MRUCache.53" }
%"class.base::MRUCache.53" = type { %"class.base::MRUCacheBase.54" }
%"class.base::MRUCacheBase.54" = type { i32 (...)**, %"class.std::__1::list.55", %"class.std::__1::map.62", i64 }
%"class.std::__1::list.55" = type { %"class.std::__1::__list_imp.56" }
%"class.std::__1::__list_imp.56" = type { %"struct.std::__1::__list_node_base.57", %"class.std::__1::__compressed_pair.58" }
%"struct.std::__1::__list_node_base.57" = type { %"struct.std::__1::__list_node_base.57"*, %"struct.std::__1::__list_node_base.57"* }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::map.62" = type { %"class.std::__1::__tree.63" }
%"class.std::__1::__tree.63" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.64", %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.base::WeakPtrFactory.81" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.72 }
%class.scoped_refptr.72 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.73", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.73" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.71" }
%"struct.std::__1::__atomic_base.71" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.74" }
%"struct.std::__1::atomic.74" = type { %"struct.std::__1::__atomic_base.75" }
%"struct.std::__1::__atomic_base.75" = type { %"struct.std::__1::__atomic_base.76" }
%"struct.std::__1::__atomic_base.76" = type { %"struct.std::__1::__cxx_atomic_impl.77" }
%"struct.std::__1::__cxx_atomic_impl.77" = type { %"struct.std::__1::__cxx_atomic_base_impl.78" }
%"struct.std::__1::__cxx_atomic_base_impl.78" = type { i8 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.82" }
%"class.std::__1::vector.82" = type { %"class.std::__1::__vector_base.83" }
%"class.std::__1::__vector_base.83" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.84" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.89" = type { %"class.std::__1::__vector_base.90" }
%"class.std::__1::__vector_base.90" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.std::__1::basic_string"* }
%"class.base::MRUCache.96" = type { %"class.base::MRUCacheBase.97" }
%"class.base::MRUCacheBase.97" = type { i32 (...)**, %"class.std::__1::list.98", %"class.std::__1::map.105", i64 }
%"class.std::__1::list.98" = type { %"class.std::__1::__list_imp.99" }
%"class.std::__1::__list_imp.99" = type { %"struct.std::__1::__list_node_base.100", %"class.std::__1::__compressed_pair.101" }
%"struct.std::__1::__list_node_base.100" = type { %"struct.std::__1::__list_node_base.100"*, %"struct.std::__1::__list_node_base.100"* }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::map.105" = type { %"class.std::__1::__tree.106" }
%"class.std::__1::__tree.106" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.107", %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.base::flat_map.116" = type { %"class.base::internal::flat_tree.117" }
%"class.base::internal::flat_tree.117" = type { %"class.std::__1::vector.118" }
%"class.std::__1::vector.118" = type { %"class.std::__1::__vector_base.119" }
%"class.std::__1::__vector_base.119" = type { %"struct.std::__1::pair.120"*, %"struct.std::__1::pair.120"*, %"class.std::__1::__compressed_pair.121" }
%"struct.std::__1::pair.120" = type opaque
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"struct.std::__1::pair.120"* }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%class.scoped_refptr = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.79 }
%class.scoped_refptr.79 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.80", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.80" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.net::CertVerifier" = type opaque
%"class.net::HttpAuthHandlerFactory" = type opaque
%"class.net::HostResolver" = type { i32 (...)** }
%"class.net::ReportingService" = type opaque
%"class.net::NetworkErrorLoggingService" = type opaque
%"class.net::ProxyResolutionService" = type opaque
%"class.net::SSLConfigService" = type { i32 (...)**, %"class.base::ObserverList" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.126", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.126" = type { %"class.std::__1::__vector_base.127" }
%"class.std::__1::__vector_base.127" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.128" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.net::HttpAuthCache" = type { %"class.base::TickClock"*, %"class.base::Clock"*, i8, %"class.std::__1::multimap" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.133" }
%"class.std::__1::__tree.133" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.134", %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.net::SSLClientSessionCache" = type { %"class.base::Clock"*, %"struct.net::SSLClientSessionCache::Config", %"class.base::MRUCache.143", i64, %"class.std::__1::unique_ptr.163" }
%"struct.net::SSLClientSessionCache::Config" = type { i64, i64 }
%"class.base::MRUCache.143" = type { %"class.base::MRUCacheBase.144" }
%"class.base::MRUCacheBase.144" = type { i32 (...)**, %"class.std::__1::list.145", %"class.std::__1::map.152", i64 }
%"class.std::__1::list.145" = type { %"class.std::__1::__list_imp.146" }
%"class.std::__1::__list_imp.146" = type { %"struct.std::__1::__list_node_base.147", %"class.std::__1::__compressed_pair.148" }
%"struct.std::__1::__list_node_base.147" = type { %"struct.std::__1::__list_node_base.147"*, %"struct.std::__1::__list_node_base.147"* }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::map.152" = type { %"class.std::__1::__tree.153" }
%"class.std::__1::__tree.153" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.154", %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.net::SSLClientContext" = type { %"class.net::SSLConfigService::Observer", %"class.net::CertDatabase::Observer", %"struct.net::SSLContextConfig", %"class.net::SSLConfigService"*, %"class.net::CertVerifier"*, %"class.net::TransportSecurityState"*, %"class.net::CTPolicyEnforcer"*, %"class.net::SSLClientSessionCache"*, %"class.net::SCTAuditingDelegate"*, %"class.net::SSLClientAuthCache", %"class.base::ObserverList.187" }
%"class.net::SSLConfigService::Observer" = type { i32 (...)** }
%"class.net::CertDatabase::Observer" = type { i32 (...)** }
%"struct.net::SSLContextConfig" = type <{ i16, i16, i16, [2 x i8], %"class.std::__1::vector.169", i8, i8, [6 x i8] }>
%"class.std::__1::vector.169" = type { %"class.std::__1::__vector_base.170" }
%"class.std::__1::__vector_base.170" = type { i16*, i16*, %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { i16* }
%"class.net::TransportSecurityState" = type opaque
%"class.net::CTPolicyEnforcer" = type opaque
%"class.net::SCTAuditingDelegate" = type opaque
%"class.net::SSLClientAuthCache" = type { %"class.std::__1::map.176" }
%"class.std::__1::map.176" = type { %"class.std::__1::__tree.177" }
%"class.std::__1::__tree.177" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.178", %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.base::ObserverList.187" = type <{ %"class.std::__1::vector.188", %"class.base::LinkedList.196", i64, i32, [4 x i8] }>
%"class.std::__1::vector.188" = type { %"class.std::__1::__vector_base.189" }
%"class.std::__1::__vector_base.189" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.191" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.190 }
%class.scoped_refptr.190 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList.196" = type { %"class.base::LinkNode.197" }
%"class.base::LinkNode.197" = type { %"class.base::internal::LinkNodeBase" }
%"class.net::WebSocketEndpointLockManager" = type { %"class.std::__1::map.199", %"class.base::TimeDelta", i64, %"class.base::WeakPtrFactory.210" }
%"class.std::__1::map.199" = type { %"class.std::__1::__tree.200" }
%"class.std::__1::__tree.200" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.201", %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.base::WeakPtrFactory.210" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.net::ClientSocketPoolManager"* }
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.net::ServerPushDelegate"* }
%"class.net::ServerPushDelegate" = type { i32 (...)** }
%"class.net::QuicStreamFactory" = type { %"class.net::NetworkChangeNotifier::IPAddressObserver", %"class.net::NetworkChangeNotifier::NetworkObserver", %"class.net::CertDatabase::Observer", i8, %"class.net::NetLog"*, %"class.net::HostResolver"*, %"class.net::ClientSocketFactory"*, %"class.net::HttpServerProperties"*, %"class.net::ServerPushDelegate"*, %"class.net::CertVerifier"*, %"class.net::CTPolicyEnforcer"*, %"class.net::TransportSecurityState"*, %"class.net::SCTAuditingDelegate"*, %"class.net::QuicCryptoClientStreamFactory"*, %"class.quic::QuicRandom"*, %"class.quic::QuicClock"*, %"struct.net::QuicParams", %"class.net::QuicClockSkewDetector", %"class.net::SocketPerformanceWatcherFactory"*, %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.255", %"class.std::__1::map.261", %"class.std::__1::map.272", %"class.std::__1::map.283", %"class.std::__1::map.292", %"class.std::__1::map.301", %"class.std::__1::set.310", %"class.std::__1::map.320", %"class.std::__1::map.329", %"class.base::MRUCache.340", %"class.quic::QuicConfig", %"class.std::__1::map.383", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i32, %"class.quic::QuicTime::Delta", i64, %"class.net::IPEndPoint", i8, i8, %"class.net::NetworkConnection", i32, %"class.net::QuicConnectivityMonitor", %"class.base::TickClock"*, %"class.base::SequencedTaskRunner"*, %"class.net::SSLConfigService"*, i8, %"class.base::WeakPtrFactory.429" }
%"class.net::NetworkChangeNotifier::IPAddressObserver" = type { i32 (...)**, %class.scoped_refptr.223 }
%class.scoped_refptr.223 = type { %"class.base::ObserverListThreadSafe"* }
%"class.base::ObserverListThreadSafe" = type opaque
%"class.net::NetworkChangeNotifier::NetworkObserver" = type { i32 (...)**, %class.scoped_refptr.224 }
%class.scoped_refptr.224 = type { %"class.base::ObserverListThreadSafe.225"* }
%"class.base::ObserverListThreadSafe.225" = type opaque
%"class.net::ClientSocketFactory" = type opaque
%"class.net::QuicCryptoClientStreamFactory" = type opaque
%"class.quic::QuicRandom" = type { i32 (...)** }
%"class.quic::QuicClock" = type { i32 (...)**, i8, %"class.quic::QuicTime::Delta" }
%"struct.net::QuicParams" = type { %"class.std::__1::vector.226", %"class.std::__1::basic_string", i64, i64, %"class.std::__1::set.233", %"class.std::__1::vector.241", %"class.std::__1::vector.241", i8, i8, i8, i8, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, i8, i8, i8, i8, %"class.base::TimeDelta", %"class.base::TimeDelta", i32, i32, i8, i8, i8, i8, i8, i8, i8, %"class.base::TimeDelta", i8, i8, i32 }
%"class.std::__1::vector.226" = type { %"class.std::__1::__vector_base.227" }
%"class.std::__1::__vector_base.227" = type { %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"*, %"class.std::__1::__compressed_pair.228" }
%"struct.quic::ParsedQuicVersion" = type { i32, i32 }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.quic::ParsedQuicVersion"* }
%"class.std::__1::set.233" = type { %"class.std::__1::__tree.234" }
%"class.std::__1::__tree.234" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.235", %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.241" = type { %"class.std::__1::__vector_base.242" }
%"class.std::__1::__vector_base.242" = type { i32*, i32*, %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { i32* }
%"class.net::QuicClockSkewDetector" = type { %"class.base::TimeTicks", %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.248" }
%"class.base::time_internal::TimeBase.248" = type { i64 }
%"class.net::SocketPerformanceWatcherFactory" = type opaque
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.net::QuicChromiumConnectionHelper"* }
%"class.net::QuicChromiumConnectionHelper" = type opaque
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.quic::QuicAlarmFactory"* }
%"class.quic::QuicAlarmFactory" = type { i32 (...)** }
%"class.std::__1::map.261" = type { %"class.std::__1::__tree.262" }
%"class.std::__1::__tree.262" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.263", %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::map.272" = type { %"class.std::__1::__tree.273" }
%"class.std::__1::__tree.273" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.274", %"class.std::__1::__compressed_pair.278" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::map.283" = type { %"class.std::__1::__tree.284" }
%"class.std::__1::__tree.284" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.285", %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::map.292" = type { %"class.std::__1::__tree.293" }
%"class.std::__1::__tree.293" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.294", %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::map.301" = type { %"class.std::__1::__tree.302" }
%"class.std::__1::__tree.302" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.303", %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::set.310" = type { %"class.std::__1::__tree.311" }
%"class.std::__1::__tree.311" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.312", %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::map.320" = type { %"class.std::__1::__tree.321" }
%"class.std::__1::__tree.321" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.322", %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::map.329" = type { %"class.std::__1::__tree.330" }
%"class.std::__1::__tree.330" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.331", %"class.std::__1::__compressed_pair.335" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.base::MRUCache.340" = type { %"class.base::MRUCacheBase.341" }
%"class.base::MRUCacheBase.341" = type { i32 (...)**, %"class.std::__1::list.342", %"class.std::__1::map.349", i64 }
%"class.std::__1::list.342" = type { %"class.std::__1::__list_imp.343" }
%"class.std::__1::__list_imp.343" = type { %"struct.std::__1::__list_node_base.344", %"class.std::__1::__compressed_pair.345" }
%"struct.std::__1::__list_node_base.344" = type { %"struct.std::__1::__list_node_base.344"*, %"struct.std::__1::__list_node_base.344"* }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::map.349" = type { %"class.std::__1::__tree.350" }
%"class.std::__1::__tree.350" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.351", %"class.std::__1::__compressed_pair.355" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.355" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.quic::QuicConfig" = type { i8, %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i64, %"class.quic::QuicFixedTagVector", %"class.quic::QuicFixedTagVector", %"class.quic::QuicTime::Delta", %"class.absl::optional", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint32", i8, i8, [6 x i8], %"class.quic::QuicFixedSocketAddress", %"class.quic::QuicFixedSocketAddress", %"class.absl::optional.361", %"class.quic::QuicFixedStatelessResetToken", %"class.std::__1::vector.241", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.absl::optional.371", %"class.absl::optional.371", %"class.absl::optional.371", %"class.absl::optional.371", %"class.absl::optional.371", %"class.absl::optional.371", %"class.absl::flat_hash_map", %"class.absl::flat_hash_map" }
%"class.quic::QuicFixedTagVector" = type { %"class.quic::QuicConfigValue.base", i8, i8, %"class.std::__1::vector.241", %"class.std::__1::vector.241" }
%"class.quic::QuicConfigValue.base" = type <{ i32 (...)**, i32, i8 }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.358 }
%union.anon.358 = type { %"class.quic::QuicTime::Delta" }
%"class.quic::QuicFixedSocketAddress" = type { %"class.quic::QuicConfigValue.base", i8, i8, i8, %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress" }
%"class.quic::QuicSocketAddress" = type <{ %"class.quic::QuicIpAddress", i16, [2 x i8] }>
%"class.quic::QuicIpAddress" = type { %union.anon.359, i32 }
%union.anon.359 = type { %struct.in6_addr }
%struct.in6_addr = type { %union.anon.360 }
%union.anon.360 = type { [4 x i32] }
%"class.absl::optional.361" = type { %"class.absl::optional_internal::optional_data.362" }
%"class.absl::optional_internal::optional_data.362" = type { %"class.absl::optional_internal::optional_data_base.363" }
%"class.absl::optional_internal::optional_data_base.363" = type { %"class.absl::optional_internal::optional_data_dtor_base.364" }
%"class.absl::optional_internal::optional_data_dtor_base.364" = type { i8, %union.anon.365 }
%union.anon.365 = type { %"struct.std::__1::pair.366" }
%"struct.std::__1::pair.366" = type { %"class.quic::QuicConnectionId", %"struct.std::__1::array.370" }
%"class.quic::QuicConnectionId" = type { %union.anon.367 }
%union.anon.367 = type { %struct.anon.369 }
%struct.anon.369 = type { i8, i8* }
%"struct.std::__1::array.370" = type { [16 x i8] }
%"class.quic::QuicFixedStatelessResetToken" = type { %"class.quic::QuicConfigValue.base", i8, i8, %"struct.std::__1::array.370", %"struct.std::__1::array.370", i8 }
%"class.quic::QuicFixedUint32" = type { %"class.quic::QuicConfigValue.base", i8, i8, i32, i32 }
%"class.quic::QuicFixedUint62" = type { %"class.quic::QuicConfigValue.base", i8, i8, i64, i64 }
%"class.absl::optional.371" = type { %"class.absl::optional_internal::optional_data.372" }
%"class.absl::optional_internal::optional_data.372" = type { %"class.absl::optional_internal::optional_data_base.373" }
%"class.absl::optional_internal::optional_data_base.373" = type { %"class.absl::optional_internal::optional_data_dtor_base.374" }
%"class.absl::optional_internal::optional_data_dtor_base.374" = type { i8, %union.anon.375 }
%union.anon.375 = type { %"class.quic::QuicConnectionId" }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"union.absl::container_internal::map_slot_type" = type opaque
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.std::__1::map.383" = type { %"class.std::__1::__tree.384" }
%"class.std::__1::__tree.384" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.385", %"class.std::__1::__compressed_pair.389" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.quic::QuicTime::Delta" = type { i64 }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::NetworkConnection" = type { %"class.net::NetworkChangeNotifier::IPAddressObserver", %"class.net::NetworkChangeNotifier::ConnectionTypeObserver", i32, i8* }
%"class.net::NetworkChangeNotifier::ConnectionTypeObserver" = type { i32 (...)**, %class.scoped_refptr.392 }
%class.scoped_refptr.392 = type { %"class.base::ObserverListThreadSafe.393"* }
%"class.base::ObserverListThreadSafe.393" = type opaque
%"class.net::QuicConnectivityMonitor" = type { %"class.net::QuicChromiumClientSession::ConnectivityObserver", i64, %"class.std::__1::set.395", %"class.std::__1::set.395", %"class.absl::optional.403", %"class.base::internal::ClampedNumeric", %"class.base::flat_map.408", %"class.base::flat_map.418", %"class.base::WeakPtrFactory.428" }
%"class.net::QuicChromiumClientSession::ConnectivityObserver" = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory.394" }
%"class.base::WeakPtrFactory.394" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::set.395" = type { %"class.std::__1::__tree.396" }
%"class.std::__1::__tree.396" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.397", %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.397" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.absl::optional.403" = type { %"class.absl::optional_internal::optional_data.404" }
%"class.absl::optional_internal::optional_data.404" = type { %"class.absl::optional_internal::optional_data_base.405" }
%"class.absl::optional_internal::optional_data_base.405" = type { %"class.absl::optional_internal::optional_data_dtor_base.406" }
%"class.absl::optional_internal::optional_data_dtor_base.406" = type { i8, %union.anon.407 }
%union.anon.407 = type { %"class.base::internal::ClampedNumeric" }
%"class.base::internal::ClampedNumeric" = type { i32 }
%"class.base::flat_map.408" = type { %"class.base::internal::flat_tree.409" }
%"class.base::internal::flat_tree.409" = type { %"class.std::__1::vector.410" }
%"class.std::__1::vector.410" = type { %"class.std::__1::__vector_base.411" }
%"class.std::__1::__vector_base.411" = type { %"struct.std::__1::pair.412"*, %"struct.std::__1::pair.412"*, %"class.std::__1::__compressed_pair.413" }
%"struct.std::__1::pair.412" = type opaque
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"struct.std::__1::pair.412"* }
%"class.base::flat_map.418" = type { %"class.base::internal::flat_tree.419" }
%"class.base::internal::flat_tree.419" = type { %"class.std::__1::vector.420" }
%"class.std::__1::vector.420" = type { %"class.std::__1::__vector_base.421" }
%"class.std::__1::__vector_base.421" = type { %"struct.std::__1::pair.422"*, %"struct.std::__1::pair.422"*, %"class.std::__1::__compressed_pair.423" }
%"struct.std::__1::pair.422" = type opaque
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.424" }
%"struct.std::__1::__compressed_pair_elem.424" = type { %"struct.std::__1::pair.422"* }
%"class.base::WeakPtrFactory.428" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtrFactory.429" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.net::SpdySessionPool" = type { %"class.net::NetworkChangeNotifier::IPAddressObserver", %"class.net::SSLClientContext::Observer", %"class.net::HttpServerProperties"*, %"class.net::TransportSecurityState"*, %"class.std::__1::set.430", %"class.std::__1::map.440", %"class.std::__1::multimap.451", %"class.std::__1::map.460", %"class.net::Http2PushPromiseIndex", %"class.net::SSLClientContext"*, %"class.net::HostResolver"*, %"class.std::__1::vector.226", i8, i8, i8, i8, i64, i32, %"class.std::__1::map.477", %"class.absl::optional.488", i8, i8, %"class.std::__1::map.493", i64 ()*, %"class.net::ServerPushDelegate"*, %"class.net::NetworkQualityEstimator"*, %"class.base::WeakPtrFactory.502" }
%"class.net::SSLClientContext::Observer" = type { %"class.base::CheckedObserver" }
%"class.std::__1::set.430" = type { %"class.std::__1::__tree.431" }
%"class.std::__1::__tree.431" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.432", %"class.std::__1::__compressed_pair.436" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::map.440" = type { %"class.std::__1::__tree.441" }
%"class.std::__1::__tree.441" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.442", %"class.std::__1::__compressed_pair.446" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::multimap.451" = type { %"class.std::__1::__tree.452" }
%"class.std::__1::__tree.452" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.453", %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::map.460" = type { %"class.std::__1::__tree.461" }
%"class.std::__1::__tree.461" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.462", %"class.std::__1::__compressed_pair.466" }
%"class.std::__1::__compressed_pair.462" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.net::Http2PushPromiseIndex" = type { %"class.std::__1::set.469" }
%"class.std::__1::set.469" = type { %"class.std::__1::__tree.470" }
%"class.std::__1::__tree.470" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.471", %"class.std::__1::__compressed_pair.475" }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::map.477" = type { %"class.std::__1::__tree.478" }
%"class.std::__1::__tree.478" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.479", %"class.std::__1::__compressed_pair.483" }
%"class.std::__1::__compressed_pair.479" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.absl::optional.488" = type { %"class.absl::optional_internal::optional_data.489" }
%"class.absl::optional_internal::optional_data.489" = type { %"class.absl::optional_internal::optional_data_base.490" }
%"class.absl::optional_internal::optional_data_base.490" = type { %"class.absl::optional_internal::optional_data_dtor_base.491" }
%"class.absl::optional_internal::optional_data_dtor_base.491" = type { i8, %union.anon.492 }
%union.anon.492 = type { %"struct.net::SpdySessionPool::GreasedHttp2Frame" }
%"struct.net::SpdySessionPool::GreasedHttp2Frame" = type { i8, i8, %"class.std::__1::basic_string" }
%"class.std::__1::map.493" = type { %"class.std::__1::__tree.494" }
%"class.std::__1::__tree.494" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.495", %"class.std::__1::__compressed_pair.499" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.499" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.net::NetworkQualityEstimator" = type opaque
%"class.base::WeakPtrFactory.502" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.503" = type { %"class.std::__1::__compressed_pair.504" }
%"class.std::__1::__compressed_pair.504" = type { %"struct.std::__1::__compressed_pair_elem.505" }
%"struct.std::__1::__compressed_pair_elem.505" = type { %"class.net::HttpStreamFactory"* }
%"class.net::HttpStreamFactory" = type { i32 (...)**, %"class.net::HttpNetworkSession"*, %"class.std::__1::set.506", %"class.std::__1::unique_ptr.514" }
%"class.std::__1::set.506" = type { %"class.std::__1::__tree.507" }
%"class.std::__1::__tree.507" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.508", %"class.std::__1::__compressed_pair.512" }
%"class.std::__1::__compressed_pair.508" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.512" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"class.net::HttpStreamFactory::JobFactory"* }
%"class.net::HttpStreamFactory::JobFactory" = type opaque
%"class.std::__1::map.523" = type { %"class.std::__1::__tree.524" }
%"class.std::__1::__tree.524" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.525", %"class.std::__1::__compressed_pair.529" }
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.529" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.534" = type { %"class.std::__1::__vector_base.535" }
%"class.std::__1::__vector_base.535" = type { i32*, i32*, %"class.std::__1::__compressed_pair.536" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.537" = type { i32* }
%"class.base::flat_map.541" = type { %"class.base::internal::flat_tree.542" }
%"class.base::internal::flat_tree.542" = type { %"class.std::__1::vector.543" }
%"class.std::__1::vector.543" = type { %"class.std::__1::__vector_base.544" }
%"class.std::__1::__vector_base.544" = type { %"struct.std::__1::pair.545"*, %"struct.std::__1::pair.545"*, %"class.std::__1::__compressed_pair.546" }
%"struct.std::__1::pair.545" = type opaque
%"class.std::__1::__compressed_pair.546" = type { %"struct.std::__1::__compressed_pair_elem.547" }
%"struct.std::__1::__compressed_pair_elem.547" = type { %"struct.std::__1::pair.545"* }
%"struct.net::HttpNetworkSession::Params" = type <{ i8, [7 x i8], %"class.net::HostMappingRules", i8, i8, i16, i16, i8, i8, i8, [7 x i8], i64, i32, [4 x i8], %"class.std::__1::map.477", %"class.absl::optional.488", i8, [7 x i8], i64 ()*, i8, i8, i8, i8, i8, [3 x i8], %"class.base::internal::flat_tree.565", i8, i8, i8, [5 x i8] }>
%"class.net::HostMappingRules" = type { %"class.std::__1::vector.551", %"class.std::__1::vector.558" }
%"class.std::__1::vector.551" = type { %"class.std::__1::__vector_base.552" }
%"class.std::__1::__vector_base.552" = type { %"struct.net::HostMappingRules::MapRule"*, %"struct.net::HostMappingRules::MapRule"*, %"class.std::__1::__compressed_pair.553" }
%"struct.net::HostMappingRules::MapRule" = type opaque
%"class.std::__1::__compressed_pair.553" = type { %"struct.std::__1::__compressed_pair_elem.554" }
%"struct.std::__1::__compressed_pair_elem.554" = type { %"struct.net::HostMappingRules::MapRule"* }
%"class.std::__1::vector.558" = type { %"class.std::__1::__vector_base.559" }
%"class.std::__1::__vector_base.559" = type { %"struct.net::HostMappingRules::ExclusionRule"*, %"struct.net::HostMappingRules::ExclusionRule"*, %"class.std::__1::__compressed_pair.560" }
%"struct.net::HostMappingRules::ExclusionRule" = type opaque
%"class.std::__1::__compressed_pair.560" = type { %"struct.std::__1::__compressed_pair_elem.561" }
%"struct.std::__1::__compressed_pair_elem.561" = type { %"struct.net::HostMappingRules::ExclusionRule"* }
%"class.base::internal::flat_tree.565" = type { %"class.std::__1::vector.89" }
%"struct.net::HttpNetworkSession::Context" = type { %"class.net::ClientSocketFactory"*, %"class.net::HostResolver"*, %"class.net::CertVerifier"*, %"class.net::TransportSecurityState"*, %"class.net::CTPolicyEnforcer"*, %"class.net::SCTAuditingDelegate"*, %"class.net::ProxyResolutionService"*, %"class.net::ProxyDelegate"*, %"class.net::HttpUserAgentSettings"*, %"class.net::SSLConfigService"*, %"class.net::HttpAuthHandlerFactory"*, %"class.net::HttpServerProperties"*, %"class.net::NetLog"*, %"class.net::SocketPerformanceWatcherFactory"*, %"class.net::NetworkQualityEstimator"*, %"class.net::QuicContext"*, %"class.net::ReportingService"*, %"class.net::NetworkErrorLoggingService"*, %"class.net::QuicCryptoClientStreamFactory"* }
%"class.net::ProxyDelegate" = type opaque
%"class.net::HttpUserAgentSettings" = type opaque
%"class.net::QuicContext" = type { %"class.std::__1::unique_ptr.566", %"struct.net::QuicParams" }
%"class.std::__1::unique_ptr.566" = type { %"class.std::__1::__compressed_pair.567" }
%"class.std::__1::__compressed_pair.567" = type { %"struct.std::__1::__compressed_pair_elem.568" }
%"struct.std::__1::__compressed_pair_elem.568" = type { %"class.quic::QuicConnectionHelperInterface"* }
%"class.quic::QuicConnectionHelperInterface" = type { i32 (...)** }
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.base::MemoryPressureListener"* }
%"class.base::MemoryPressureListener" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback", %"class.base::Location" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.net::ProxyInfo" = type { %"class.net::ProxyList", %"class.std::__1::map.579", %"struct.net::MutableNetworkTrafficAnnotationTag", i8, %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.net::ProxyList" = type { %"class.std::__1::vector.572" }
%"class.std::__1::vector.572" = type { %"class.std::__1::__vector_base.573" }
%"class.std::__1::__vector_base.573" = type { %"class.net::ProxyServer"*, %"class.net::ProxyServer"*, %"class.std::__1::__compressed_pair.574" }
%"class.net::ProxyServer" = type { i32, [4 x i8], %"class.net::HostPortPair" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.575" }
%"struct.std::__1::__compressed_pair_elem.575" = type { %"class.net::ProxyServer"* }
%"class.std::__1::map.579" = type { %"class.std::__1::__tree.580" }
%"class.std::__1::__tree.580" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.581", %"class.std::__1::__compressed_pair.585" }
%"class.std::__1::__compressed_pair.581" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.585" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.net::MutableNetworkTrafficAnnotationTag" = type { i32 }
%"struct.net::SSLConfig" = type <{ %"class.absl::optional.590", %"class.absl::optional.590", i8, i8, i8, [5 x i8], %"class.std::__1::vector.595", i8, i8, [6 x i8], %"class.std::__1::vector.534", i8, [7 x i8], %"class.std::__1::vector.534", %"class.base::flat_map.541", %"class.net::NetworkIsolationKey", i32, i8, [3 x i8] }>
%"class.absl::optional.590" = type { %"class.absl::optional_internal::optional_data.591" }
%"class.absl::optional_internal::optional_data.591" = type { %"class.absl::optional_internal::optional_data_base.592" }
%"class.absl::optional_internal::optional_data_base.592" = type { %"class.absl::optional_internal::optional_data_dtor_base.593" }
%"class.absl::optional_internal::optional_data_dtor_base.593" = type { i8, %union.anon.594 }
%union.anon.594 = type { i16 }
%"class.std::__1::vector.595" = type { %"class.std::__1::__vector_base.596" }
%"class.std::__1::__vector_base.596" = type { %"struct.net::SSLConfig::CertAndStatus"*, %"struct.net::SSLConfig::CertAndStatus"*, %"class.std::__1::__compressed_pair.610" }
%"struct.net::SSLConfig::CertAndStatus" = type <{ %class.scoped_refptr.597, i32, [4 x i8] }>
%class.scoped_refptr.597 = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe.598", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.599", %"class.std::__1::vector.603" }
%"class.base::RefCountedThreadSafe.598" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.89", %"class.std::__1::vector.89", %"class.std::__1::vector.89", %"class.std::__1::vector.89" }
%"class.std::__1::unique_ptr.599" = type { %"class.std::__1::__compressed_pair.600" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.601" }
%"struct.std::__1::__compressed_pair_elem.601" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.603" = type { %"class.std::__1::__vector_base.604" }
%"class.std::__1::__vector_base.604" = type { %"class.std::__1::unique_ptr.599"*, %"class.std::__1::unique_ptr.599"*, %"class.std::__1::__compressed_pair.605" }
%"class.std::__1::__compressed_pair.605" = type { %"struct.std::__1::__compressed_pair_elem.606" }
%"struct.std::__1::__compressed_pair_elem.606" = type { %"class.std::__1::unique_ptr.599"* }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.611" }
%"struct.std::__1::__compressed_pair_elem.611" = type { %"struct.net::SSLConfig::CertAndStatus"* }
%"class.net::NetworkIsolationKey" = type { i8, %"class.absl::optional.615", %"class.absl::optional.615" }
%"class.absl::optional.615" = type { %"class.absl::optional_internal::optional_data.616" }
%"class.absl::optional_internal::optional_data.616" = type { %"class.absl::optional_internal::optional_data_base.617" }
%"class.absl::optional_internal::optional_data_base.617" = type { %"class.absl::optional_internal::optional_data_dtor_base.618" }
%"class.absl::optional_internal::optional_data_dtor_base.618" = type { i8, %union.anon.619 }
%union.anon.619 = type { %"class.net::SchemefulSite" }
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.620" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.620" = type { %"class.absl::optional_internal::optional_data.621" }
%"class.absl::optional_internal::optional_data.621" = type { %"class.absl::optional_internal::optional_data_base.622" }
%"class.absl::optional_internal::optional_data_base.622" = type { %"class.absl::optional_internal::optional_data_dtor_base.623" }
%"class.absl::optional_internal::optional_data_dtor_base.623" = type { i8, %union.anon.624 }
%union.anon.624 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.net::SocketTag" = type { i8 }
%"class.net::NetLogWithSource" = type { %"struct.net::NetLogSource", %"class.net::NetLog"* }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.net::ClientSocketHandle" = type { i8, %"class.net::ClientSocketPool"*, %"class.net::HigherLayeredPool"*, %"class.std::__1::unique_ptr.625", %"class.net::ClientSocketPool::GroupId", i32, %"class.base::OnceCallback.631", %"class.base::TimeDelta", i64, %"struct.net::ResolveErrorInfo", i8, %class.scoped_refptr.632, %"class.std::__1::vector.641", %"struct.net::NetLogSource", %"struct.net::LoadTimingInfo::ConnectTiming" }
%"class.net::ClientSocketPool" = type { %"class.net::LowerLayeredPool" }
%"class.net::LowerLayeredPool" = type { i32 (...)** }
%"class.net::HigherLayeredPool" = type { i32 (...)** }
%"class.std::__1::unique_ptr.625" = type { %"class.std::__1::__compressed_pair.626" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.627" }
%"struct.std::__1::__compressed_pair_elem.627" = type { %"class.net::StreamSocket"* }
%"class.net::StreamSocket" = type { %"class.net::Socket" }
%"class.net::Socket" = type { i32 (...)**, %"class.std::__1::vector.89" }
%"class.net::ClientSocketPool::GroupId" = type <{ %"class.net::HostPortPair", i32, i32, %"class.net::NetworkIsolationKey", i32, [4 x i8] }>
%"class.base::OnceCallback.631" = type { %"class.base::internal::CallbackBase" }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%class.scoped_refptr.632 = type { %"class.net::SSLCertRequestInfo"* }
%"class.net::SSLCertRequestInfo" = type { %"class.base::RefCountedThreadSafe.633", [4 x i8], %"class.net::HostPortPair", i8, %"class.std::__1::vector.89", %"class.std::__1::vector.634" }
%"class.base::RefCountedThreadSafe.633" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.634" = type { %"class.std::__1::__vector_base.635" }
%"class.std::__1::__vector_base.635" = type { i32*, i32*, %"class.std::__1::__compressed_pair.636" }
%"class.std::__1::__compressed_pair.636" = type { %"struct.std::__1::__compressed_pair_elem.637" }
%"struct.std::__1::__compressed_pair_elem.637" = type { i32* }
%"class.std::__1::vector.641" = type { %"class.std::__1::__vector_base.642" }
%"class.std::__1::__vector_base.642" = type { %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"*, %"class.std::__1::__compressed_pair.643" }
%"struct.net::ConnectionAttempt" = type { %"class.net::IPEndPoint", i32 }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.644" }
%"struct.std::__1::__compressed_pair_elem.644" = type { %"struct.net::ConnectionAttempt"* }
%"struct.net::LoadTimingInfo::ConnectTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.base::RepeatingCallback.648" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.absl::optional.657" = type { %"class.absl::optional_internal::optional_data.658" }
%"class.absl::optional_internal::optional_data.658" = type { %"class.absl::optional_internal::optional_data_base.659" }
%"class.absl::optional_internal::optional_data_base.659" = type { %"class.absl::optional_internal::optional_data_dtor_base.660" }
%"class.absl::optional_internal::optional_data_dtor_base.660" = type { i8, %union.anon.661 }
%union.anon.661 = type { %"struct.net::NetworkTrafficAnnotationTag" }
%"struct.net::NetworkTrafficAnnotationTag" = type { i32 }
%"class.net::ClientSocketPool::SocketParams" = type { %"class.base::RefCounted", %"class.std::__1::unique_ptr.651", %"class.std::__1::unique_ptr.651" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::unique_ptr.651" = type { %"class.std::__1::__compressed_pair.652" }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.653" }
%"struct.std::__1::__compressed_pair_elem.653" = type { %"struct.net::SSLConfig"* }

@_ZTVN3net23ClientSocketPoolManagerE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::ClientSocketPoolManager"*)* @_ZN3net23ClientSocketPoolManagerD2Ev to i8*), i8* bitcast (void (%"class.net::ClientSocketPoolManager"*)* @_ZN3net23ClientSocketPoolManagerD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZN3net12_GLOBAL__N_122g_max_sockets_per_poolE = internal unnamed_addr global [2 x i32] [i32 256, i32 256], align 4
@_ZN3net12_GLOBAL__N_123g_max_sockets_per_groupE = internal unnamed_addr global [2 x i32] [i32 6, i32 255], align 4
@_ZN3net12_GLOBAL__N_130g_max_sockets_per_proxy_serverE = internal unnamed_addr global [2 x i32] [i32 32, i32 32], align 4
@_ZN3net8features27kNetUnusedIdleSocketTimeoutE = external global %"struct.base::Feature", align 8
@.str = private unnamed_addr constant [35 x i8] c"unused_idle_socket_timeout_seconds\00", align 1

@_ZN3net23ClientSocketPoolManagerD1Ev = hidden unnamed_addr alias void (%"class.net::ClientSocketPoolManager"*), void (%"class.net::ClientSocketPoolManager"*)* @_ZN3net23ClientSocketPoolManagerD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net23ClientSocketPoolManagerC2Ev(%"class.net::ClientSocketPoolManager"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::ClientSocketPoolManager", %"class.net::ClientSocketPoolManager"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN3net23ClientSocketPoolManagerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3net23ClientSocketPoolManagerD2Ev(%"class.net::ClientSocketPoolManager"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN3net23ClientSocketPoolManagerD0Ev(%"class.net::ClientSocketPoolManager"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #11
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN3net23ClientSocketPoolManager20max_sockets_per_poolENS_18HttpNetworkSession14SocketPoolTypeE(i32) local_unnamed_addr #4 align 2 {
  %2 = zext i32 %0 to i64
  %3 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZN3net12_GLOBAL__N_122g_max_sockets_per_poolE, i64 0, i64 %2
  %4 = load i32, i32* %3, align 4
  ret i32 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net23ClientSocketPoolManager24set_max_sockets_per_poolENS_18HttpNetworkSession14SocketPoolTypeEi(i32, i32) local_unnamed_addr #0 align 2 {
  %3 = zext i32 %0 to i64
  %4 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZN3net12_GLOBAL__N_122g_max_sockets_per_poolE, i64 0, i64 %3
  store i32 %1, i32* %4, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN3net23ClientSocketPoolManager21max_sockets_per_groupENS_18HttpNetworkSession14SocketPoolTypeE(i32) local_unnamed_addr #4 align 2 {
  %2 = zext i32 %0 to i64
  %3 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZN3net12_GLOBAL__N_123g_max_sockets_per_groupE, i64 0, i64 %2
  %4 = load i32, i32* %3, align 4
  ret i32 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net23ClientSocketPoolManager25set_max_sockets_per_groupENS_18HttpNetworkSession14SocketPoolTypeEi(i32, i32) local_unnamed_addr #0 align 2 {
  %3 = zext i32 %0 to i64
  %4 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZN3net12_GLOBAL__N_123g_max_sockets_per_groupE, i64 0, i64 %3
  store i32 %1, i32* %4, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN3net23ClientSocketPoolManager28max_sockets_per_proxy_serverENS_18HttpNetworkSession14SocketPoolTypeE(i32) local_unnamed_addr #4 align 2 {
  %2 = zext i32 %0 to i64
  %3 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZN3net12_GLOBAL__N_130g_max_sockets_per_proxy_serverE, i64 0, i64 %2
  %4 = load i32, i32* %3, align 4
  ret i32 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net23ClientSocketPoolManager32set_max_sockets_per_proxy_serverENS_18HttpNetworkSession14SocketPoolTypeEi(i32, i32) local_unnamed_addr #0 align 2 {
  %3 = zext i32 %0 to i64
  %4 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZN3net12_GLOBAL__N_130g_max_sockets_per_proxy_serverE, i64 0, i64 %3
  store i32 %1, i32* %4, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3net23ClientSocketPoolManager26unused_idle_socket_timeoutENS_18HttpNetworkSession14SocketPoolTypeE(i32) local_unnamed_addr #5 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #12
  %4 = tail call i8* @_Znwm(i64 48) #13
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %4, i8** %5, align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast i64* %6 to <2 x i64>*
  store <2 x i64> <i64 34, i64 -9223372036854775760>, <2 x i64>* %7, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %4, i8* align 1 getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0), i64 34, i1 false) #12
  %8 = getelementptr inbounds i8, i8* %4, i64 34
  store i8 0, i8* %8, align 1
  %9 = call i32 @_ZN4base32GetFieldTrialParamByFeatureAsIntERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEi(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN3net8features27kNetUnusedIdleSocketTimeoutE, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2, i32 60) #12
  %10 = sext i32 %9 to i64
  %11 = mul nsw i64 %10, 1000000
  %12 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %1
  %17 = load i8*, i8** %5, align 8
  call void @_ZdlPv(i8* %17) #13
  br label %18

18:                                               ; preds = %1, %16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #12
  ret i64 %11
}

declare i32 @_ZN4base32GetFieldTrialParamByFeatureAsIntERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEi(%"struct.base::Feature"* dereferenceable(16), %"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net30InitSocketHandleForHttpRequestENS_23ClientSocketPoolManager15SocketGroupTypeERKNS_12HostPortPairEiNS_15RequestPriorityEPNS_18HttpNetworkSessionERKNS_9ProxyInfoERKNS_9SSLConfigESD_NS_11PrivacyModeERKNS_19NetworkIsolationKeyENS_15SecureDnsPolicyERKNS_9SocketTagERKNS_16NetLogWithSourceEPNS_18ClientSocketHandleEN4base12OnceCallbackIFviEEERKNSR_17RepeatingCallbackIFvRKNS_16HttpResponseInfoEPNS_18HttpAuthControllerENSS_IFvvEEEEEE(i32, %"class.net::HostPortPair"* nocapture readonly dereferenceable(32), i32, i32, %"class.net::HttpNetworkSession"*, %"class.net::ProxyInfo"* dereferenceable(72), %"struct.net::SSLConfig"* dereferenceable(320), %"struct.net::SSLConfig"* dereferenceable(320), i32, %"class.net::NetworkIsolationKey"* dereferenceable(184), i32, %"class.net::SocketTag"* dereferenceable(1), %"class.net::NetLogWithSource"* dereferenceable(24), %"class.net::ClientSocketHandle"*, %"class.base::OnceCallback.631"* nocapture, %"class.base::RepeatingCallback.648"* dereferenceable(8)) local_unnamed_addr #5 {
  %17 = alloca %"class.base::OnceCallback.631", align 8
  %18 = getelementptr inbounds %"class.base::OnceCallback.631", %"class.base::OnceCallback.631"* %14, i64 0, i32 0, i32 0, i32 0
  %19 = bitcast %"class.base::OnceCallback.631"* %14 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.base::OnceCallback.631"* %17 to i64*
  store i64 %20, i64* %21, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %18, align 8
  %22 = call fastcc i32 @_ZN3net12_GLOBAL__N_120InitSocketPoolHelperENS_23ClientSocketPoolManager15SocketGroupTypeERKNS_12HostPortPairEiNS_15RequestPriorityEPNS_18HttpNetworkSessionERKNS_9ProxyInfoERKNS_9SSLConfigESE_bNS_11PrivacyModeERKNS_19NetworkIsolationKeyENS_15SecureDnsPolicyERKNS_9SocketTagERKNS_16NetLogWithSourceEiPNS_18ClientSocketHandleENS7_14SocketPoolTypeEN4base12OnceCallbackIFviEEERKNST_17RepeatingCallbackIFvRKNS_16HttpResponseInfoEPNS_18HttpAuthControllerENSU_IFvvEEEEEE(i32 %0, %"class.net::HostPortPair"* dereferenceable(32) %1, i32 %2, i32 %3, %"class.net::HttpNetworkSession"* %4, %"class.net::ProxyInfo"* dereferenceable(72) %5, %"struct.net::SSLConfig"* dereferenceable(320) %6, %"struct.net::SSLConfig"* dereferenceable(320) %7, i32 %8, %"class.net::NetworkIsolationKey"* dereferenceable(184) %9, i32 %10, %"class.net::SocketTag"* dereferenceable(1) %11, %"class.net::NetLogWithSource"* dereferenceable(24) %12, i32 0, %"class.net::ClientSocketHandle"* %13, i32 0, %"class.base::OnceCallback.631"* nonnull %17, %"class.base::RepeatingCallback.648"* dereferenceable(8) %15)
  %23 = getelementptr inbounds %"class.base::OnceCallback.631", %"class.base::OnceCallback.631"* %17, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #12
  ret i32 %22
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN3net12_GLOBAL__N_120InitSocketPoolHelperENS_23ClientSocketPoolManager15SocketGroupTypeERKNS_12HostPortPairEiNS_15RequestPriorityEPNS_18HttpNetworkSessionERKNS_9ProxyInfoERKNS_9SSLConfigESE_bNS_11PrivacyModeERKNS_19NetworkIsolationKeyENS_15SecureDnsPolicyERKNS_9SocketTagERKNS_16NetLogWithSourceEiPNS_18ClientSocketHandleENS7_14SocketPoolTypeEN4base12OnceCallbackIFviEEERKNST_17RepeatingCallbackIFvRKNS_16HttpResponseInfoEPNS_18HttpAuthControllerENSU_IFvvEEEEEE(i32, %"class.net::HostPortPair"* nocapture readonly dereferenceable(32), i32, i32, %"class.net::HttpNetworkSession"*, %"class.net::ProxyInfo"* dereferenceable(72), %"struct.net::SSLConfig"* dereferenceable(320), %"struct.net::SSLConfig"* dereferenceable(320), i32, %"class.net::NetworkIsolationKey"* dereferenceable(184), i32, %"class.net::SocketTag"* dereferenceable(1), %"class.net::NetLogWithSource"* dereferenceable(24), i32, %"class.net::ClientSocketHandle"*, i32, %"class.base::OnceCallback.631"* nocapture, %"class.base::RepeatingCallback.648"* dereferenceable(8)) unnamed_addr #5 {
  %19 = alloca %"class.net::NetworkIsolationKey", align 8
  %20 = alloca %"class.net::HostPortPair", align 8
  %21 = alloca %"class.net::ClientSocketPool::GroupId", align 8
  %22 = alloca i64, align 8
  %23 = bitcast i64* %22 to %"class.absl::optional.657"*
  %24 = alloca %"class.base::OnceCallback.631", align 8
  %25 = icmp eq i32 %0, 0
  %26 = bitcast %"class.net::HostPortPair"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %26) #12
  %27 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %20, i64 0, i32 1
  %29 = bitcast %"class.net::HostPortPair"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = bitcast %"class.net::HostPortPair"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 32, i1 false)
  %32 = load i8, i8* %30, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %18
  %35 = bitcast %"class.net::HostPortPair"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* align 8 %35, i64 24, i1 false) #12
  br label %42

36:                                               ; preds = %18
  %37 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %20, i64 0, i32 0
  %38 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %37, i8* %39, i64 %41) #12
  br label %42

42:                                               ; preds = %34, %36
  %43 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %1, i64 0, i32 1
  %44 = load i16, i16* %43, align 8
  store i16 %44, i16* %28, align 8
  br i1 %25, label %50, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.net::HttpNetworkSession", %"class.net::HttpNetworkSession"* %4, i64 0, i32 22, i32 5
  %47 = load i16, i16* %46, align 2
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %55, label %49

49:                                               ; preds = %45
  store i16 %47, i16* %28, align 8
  br label %55

50:                                               ; preds = %42
  %51 = getelementptr inbounds %"class.net::HttpNetworkSession", %"class.net::HttpNetworkSession"* %4, i64 0, i32 22, i32 6
  %52 = load i16, i16* %51, align 4
  %53 = icmp eq i16 %52, 0
  br i1 %53, label %55, label %54

54:                                               ; preds = %50
  store i16 %52, i16* %28, align 8
  br label %55

55:                                               ; preds = %45, %50, %54, %49
  %56 = bitcast %"class.net::ClientSocketPool::GroupId"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %56) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 232, i1 false)
  %57 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %19, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %57)
  %58 = zext i1 %25 to i32
  call void @_ZN3net19NetworkIsolationKeyC1ERKS0_(%"class.net::NetworkIsolationKey"* nonnull %19, %"class.net::NetworkIsolationKey"* dereferenceable(184) %9) #12, !noalias !2
  call void @_ZN3net16ClientSocketPool7GroupIdC1ERKNS_12HostPortPairENS0_10SocketTypeENS_11PrivacyModeENS_19NetworkIsolationKeyENS_15SecureDnsPolicyE(%"class.net::ClientSocketPool::GroupId"* nonnull %21, %"class.net::HostPortPair"* nonnull dereferenceable(32) %20, i32 %58, i32 %8, %"class.net::NetworkIsolationKey"* nonnull %19, i32 %10) #12
  call void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"* nonnull %19) #12
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %57)
  %59 = getelementptr inbounds %"class.net::ProxyInfo", %"class.net::ProxyInfo"* %5, i64 0, i32 0
  %60 = call dereferenceable(40) %"class.net::ProxyServer"* @_ZNK3net9ProxyList3GetEv(%"class.net::ProxyList"* %59) #12
  %61 = getelementptr inbounds %"class.net::ClientSocketPool::GroupId", %"class.net::ClientSocketPool::GroupId"* %21, i64 0, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %62, 1
  %64 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %60, i64 0, i32 0
  %65 = load i32, i32* %64, align 8
  %66 = add i32 %65, -4
  %67 = icmp ult i32 %66, 61
  br i1 %67, label %68, label %73

68:                                               ; preds = %55
  %69 = zext i32 %66 to i61
  %70 = lshr i61 -1152921504338411520, %69
  %71 = and i61 %70, 1
  %72 = icmp ne i61 %71, 0
  br label %73

73:                                               ; preds = %68, %55
  %74 = phi i1 [ false, %55 ], [ %72, %68 ]
  br i1 %63, label %75, label %78

75:                                               ; preds = %73
  %76 = call i8* @_Znwm(i64 320) #13
  %77 = bitcast i8* %76 to %"struct.net::SSLConfig"*
  call void @_ZN3net9SSLConfigC1ERKS0_(%"struct.net::SSLConfig"* nonnull %77, %"struct.net::SSLConfig"* dereferenceable(320) %6) #12
  br label %78

78:                                               ; preds = %75, %73
  %79 = phi %"struct.net::SSLConfig"* [ %77, %75 ], [ null, %73 ]
  br i1 %74, label %80, label %83

80:                                               ; preds = %78
  %81 = call i8* @_Znwm(i64 320) #13
  %82 = bitcast i8* %81 to %"struct.net::SSLConfig"*
  call void @_ZN3net9SSLConfigC1ERKS0_(%"struct.net::SSLConfig"* nonnull %82, %"struct.net::SSLConfig"* dereferenceable(320) %7) #12
  br label %83

83:                                               ; preds = %78, %80
  %84 = phi %"struct.net::SSLConfig"* [ %82, %80 ], [ null, %78 ]
  %85 = call i8* @_Znwm(i64 24) #13
  %86 = bitcast i8* %85 to %"class.net::ClientSocketPool::SocketParams"*
  call void @_ZN3net16ClientSocketPool12SocketParamsC1ENSt3__110unique_ptrINS_9SSLConfigENS2_14default_deleteIS4_EEEES7_(%"class.net::ClientSocketPool::SocketParams"* nonnull %86, %"struct.net::SSLConfig"* %79, %"struct.net::SSLConfig"* %84) #12
  %87 = bitcast i8* %85 to %"class.base::subtle::RefCountedBase"*
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* nonnull %87) #12
  %88 = call dereferenceable(40) %"class.net::ProxyServer"* @_ZNK3net9ProxyList3GetEv(%"class.net::ProxyList"* %59) #12
  %89 = call %"class.net::ClientSocketPool"* @_ZN3net18HttpNetworkSession13GetSocketPoolENS0_14SocketPoolTypeERKNS_11ProxyServerE(%"class.net::HttpNetworkSession"* %4, i32 %15, %"class.net::ProxyServer"* dereferenceable(40) %88) #12
  %90 = lshr i32 %2, 10
  %91 = and i32 %90, 1
  %92 = xor i32 %91, 1
  %93 = bitcast i64* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #12
  store i64 -6148914691236517206, i64* %22, align 8
  %94 = call zeroext i1 @_ZNK3net9ProxyList7IsEmptyEv(%"class.net::ProxyList"* %59) #12
  br i1 %94, label %101, label %95

95:                                               ; preds = %83
  %96 = call dereferenceable(40) %"class.net::ProxyServer"* @_ZNK3net9ProxyList3GetEv(%"class.net::ProxyList"* %59) #12
  %97 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %96, i64 0, i32 0
  %98 = load i32, i32* %97, align 8
  %99 = icmp eq i32 %98, 2
  br i1 %99, label %100, label %101

100:                                              ; preds = %95
  store i8 0, i8* %93, align 8
  br label %105

101:                                              ; preds = %83, %95
  %102 = getelementptr inbounds %"class.net::ProxyInfo", %"class.net::ProxyInfo"* %5, i64 0, i32 2, i32 0
  %103 = load i32, i32* %102, align 8
  store i8 1, i8* %93, align 8
  %104 = getelementptr inbounds %"class.absl::optional.657", %"class.absl::optional.657"* %23, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 %103, i32* %104, align 4
  br label %105

105:                                              ; preds = %101, %100
  %106 = icmp eq i32 %13, 0
  br i1 %106, label %112, label %107

107:                                              ; preds = %105
  %108 = bitcast %"class.net::ClientSocketPool"* %89 to void (%"class.net::ClientSocketPool"*, %"class.net::ClientSocketPool::GroupId"*, %"class.net::ClientSocketPool::SocketParams"*, %"class.absl::optional.657"*, i32, %"class.net::NetLogWithSource"*)***
  %109 = load void (%"class.net::ClientSocketPool"*, %"class.net::ClientSocketPool::GroupId"*, %"class.net::ClientSocketPool::SocketParams"*, %"class.absl::optional.657"*, i32, %"class.net::NetLogWithSource"*)**, void (%"class.net::ClientSocketPool"*, %"class.net::ClientSocketPool::GroupId"*, %"class.net::ClientSocketPool::SocketParams"*, %"class.absl::optional.657"*, i32, %"class.net::NetLogWithSource"*)*** %108, align 8
  %110 = getelementptr inbounds void (%"class.net::ClientSocketPool"*, %"class.net::ClientSocketPool::GroupId"*, %"class.net::ClientSocketPool::SocketParams"*, %"class.absl::optional.657"*, i32, %"class.net::NetLogWithSource"*)*, void (%"class.net::ClientSocketPool"*, %"class.net::ClientSocketPool::GroupId"*, %"class.net::ClientSocketPool::SocketParams"*, %"class.absl::optional.657"*, i32, %"class.net::NetLogWithSource"*)** %109, i64 6
  %111 = load void (%"class.net::ClientSocketPool"*, %"class.net::ClientSocketPool::GroupId"*, %"class.net::ClientSocketPool::SocketParams"*, %"class.absl::optional.657"*, i32, %"class.net::NetLogWithSource"*)*, void (%"class.net::ClientSocketPool"*, %"class.net::ClientSocketPool::GroupId"*, %"class.net::ClientSocketPool::SocketParams"*, %"class.absl::optional.657"*, i32, %"class.net::NetLogWithSource"*)** %110, align 8
  call void %111(%"class.net::ClientSocketPool"* %89, %"class.net::ClientSocketPool::GroupId"* nonnull dereferenceable(232) %21, %"class.net::ClientSocketPool::SocketParams"* nonnull %86, %"class.absl::optional.657"* nonnull dereferenceable(8) %23, i32 %13, %"class.net::NetLogWithSource"* dereferenceable(24) %12) #12
  br label %119

112:                                              ; preds = %105
  %113 = getelementptr inbounds %"class.base::OnceCallback.631", %"class.base::OnceCallback.631"* %16, i64 0, i32 0, i32 0, i32 0
  %114 = bitcast %"class.base::OnceCallback.631"* %16 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = bitcast %"class.base::OnceCallback.631"* %24 to i64*
  store i64 %115, i64* %116, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %113, align 8
  %117 = call i32 @_ZN3net18ClientSocketHandle4InitERKNS_16ClientSocketPool7GroupIdE13scoped_refptrINS1_12SocketParamsEERKN4absl8optionalINS_27NetworkTrafficAnnotationTagEEENS_15RequestPriorityERKNS_9SocketTagENS1_13RespectLimitsEN4base12OnceCallbackIFviEEERKNSJ_17RepeatingCallbackIFvRKNS_16HttpResponseInfoEPNS_18HttpAuthControllerENSK_IFvvEEEEEEPS1_RKNS_16NetLogWithSourceE(%"class.net::ClientSocketHandle"* %14, %"class.net::ClientSocketPool::GroupId"* nonnull dereferenceable(232) %21, %"class.net::ClientSocketPool::SocketParams"* nonnull %86, %"class.absl::optional.657"* nonnull dereferenceable(8) %23, i32 %3, %"class.net::SocketTag"* dereferenceable(1) %11, i32 %92, %"class.base::OnceCallback.631"* nonnull %24, %"class.base::RepeatingCallback.648"* dereferenceable(8) %17, %"class.net::ClientSocketPool"* %89, %"class.net::NetLogWithSource"* dereferenceable(24) %12) #12
  %118 = getelementptr inbounds %"class.base::OnceCallback.631", %"class.base::OnceCallback.631"* %24, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %118) #12
  br label %119

119:                                              ; preds = %107, %112
  %120 = phi i32 [ 0, %107 ], [ %117, %112 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #12
  call void @_ZN3net16ClientSocketPool7GroupIdD1Ev(%"class.net::ClientSocketPool::GroupId"* nonnull %21) #12
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %56) #12
  %121 = bitcast %"class.net::HostPortPair"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %122 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %121, i64 0, i32 1, i32 0
  %123 = load i8, i8* %122, align 1
  %124 = icmp slt i8 %123, 0
  br i1 %124, label %125, label %127

125:                                              ; preds = %119
  %126 = load i8*, i8** %27, align 8
  call void @_ZdlPv(i8* %126) #13
  br label %127

127:                                              ; preds = %119, %125
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #12
  ret i32 %120
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net35InitSocketHandleForWebSocketRequestENS_23ClientSocketPoolManager15SocketGroupTypeERKNS_12HostPortPairEiNS_15RequestPriorityEPNS_18HttpNetworkSessionERKNS_9ProxyInfoERKNS_9SSLConfigESD_NS_11PrivacyModeERKNS_19NetworkIsolationKeyERKNS_16NetLogWithSourceEPNS_18ClientSocketHandleEN4base12OnceCallbackIFviEEERKNSN_17RepeatingCallbackIFvRKNS_16HttpResponseInfoEPNS_18HttpAuthControllerENSO_IFvvEEEEEE(i32, %"class.net::HostPortPair"* nocapture readonly dereferenceable(32), i32, i32, %"class.net::HttpNetworkSession"*, %"class.net::ProxyInfo"* dereferenceable(72), %"struct.net::SSLConfig"* dereferenceable(320), %"struct.net::SSLConfig"* dereferenceable(320), i32, %"class.net::NetworkIsolationKey"* dereferenceable(184), %"class.net::NetLogWithSource"* dereferenceable(24), %"class.net::ClientSocketHandle"*, %"class.base::OnceCallback.631"* nocapture, %"class.base::RepeatingCallback.648"* dereferenceable(8)) local_unnamed_addr #5 {
  %15 = alloca %"class.net::SocketTag", align 1
  %16 = alloca %"class.base::OnceCallback.631", align 8
  %17 = getelementptr inbounds %"class.net::SocketTag", %"class.net::SocketTag"* %15, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #12
  %18 = getelementptr inbounds %"class.base::OnceCallback.631", %"class.base::OnceCallback.631"* %12, i64 0, i32 0, i32 0, i32 0
  %19 = bitcast %"class.base::OnceCallback.631"* %12 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.base::OnceCallback.631"* %16 to i64*
  store i64 %20, i64* %21, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %18, align 8
  %22 = call fastcc i32 @_ZN3net12_GLOBAL__N_120InitSocketPoolHelperENS_23ClientSocketPoolManager15SocketGroupTypeERKNS_12HostPortPairEiNS_15RequestPriorityEPNS_18HttpNetworkSessionERKNS_9ProxyInfoERKNS_9SSLConfigESE_bNS_11PrivacyModeERKNS_19NetworkIsolationKeyENS_15SecureDnsPolicyERKNS_9SocketTagERKNS_16NetLogWithSourceEiPNS_18ClientSocketHandleENS7_14SocketPoolTypeEN4base12OnceCallbackIFviEEERKNST_17RepeatingCallbackIFvRKNS_16HttpResponseInfoEPNS_18HttpAuthControllerENSU_IFvvEEEEEE(i32 %0, %"class.net::HostPortPair"* dereferenceable(32) %1, i32 %2, i32 %3, %"class.net::HttpNetworkSession"* %4, %"class.net::ProxyInfo"* dereferenceable(72) %5, %"struct.net::SSLConfig"* dereferenceable(320) %6, %"struct.net::SSLConfig"* dereferenceable(320) %7, i32 %8, %"class.net::NetworkIsolationKey"* dereferenceable(184) %9, i32 0, %"class.net::SocketTag"* nonnull dereferenceable(1) %15, %"class.net::NetLogWithSource"* dereferenceable(24) %10, i32 0, %"class.net::ClientSocketHandle"* %11, i32 1, %"class.base::OnceCallback.631"* nonnull %16, %"class.base::RepeatingCallback.648"* dereferenceable(8) %13)
  %23 = getelementptr inbounds %"class.base::OnceCallback.631", %"class.base::OnceCallback.631"* %16, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #12
  ret i32 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net31PreconnectSocketsForHttpRequestENS_23ClientSocketPoolManager15SocketGroupTypeERKNS_12HostPortPairEiNS_15RequestPriorityEPNS_18HttpNetworkSessionERKNS_9ProxyInfoERKNS_9SSLConfigESD_NS_11PrivacyModeERKNS_19NetworkIsolationKeyENS_15SecureDnsPolicyERKNS_16NetLogWithSourceEi(i32, %"class.net::HostPortPair"* nocapture readonly dereferenceable(32), i32, i32, %"class.net::HttpNetworkSession"*, %"class.net::ProxyInfo"* dereferenceable(72), %"struct.net::SSLConfig"* dereferenceable(320), %"struct.net::SSLConfig"* dereferenceable(320), i32, %"class.net::NetworkIsolationKey"* dereferenceable(184), i32, %"class.net::NetLogWithSource"* dereferenceable(24), i32) local_unnamed_addr #5 {
  %14 = alloca %"class.net::SocketTag", align 1
  %15 = alloca %"class.base::OnceCallback.631", align 8
  %16 = alloca %"class.base::RepeatingCallback.648", align 8
  %17 = getelementptr inbounds %"class.net::SocketTag", %"class.net::SocketTag"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #12
  %18 = getelementptr inbounds %"class.base::OnceCallback.631", %"class.base::OnceCallback.631"* %15, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %18, align 8
  %19 = bitcast %"class.base::RepeatingCallback.648"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #12
  %20 = getelementptr inbounds %"class.base::RepeatingCallback.648", %"class.base::RepeatingCallback.648"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %20, align 8
  %21 = call fastcc i32 @_ZN3net12_GLOBAL__N_120InitSocketPoolHelperENS_23ClientSocketPoolManager15SocketGroupTypeERKNS_12HostPortPairEiNS_15RequestPriorityEPNS_18HttpNetworkSessionERKNS_9ProxyInfoERKNS_9SSLConfigESE_bNS_11PrivacyModeERKNS_19NetworkIsolationKeyENS_15SecureDnsPolicyERKNS_9SocketTagERKNS_16NetLogWithSourceEiPNS_18ClientSocketHandleENS7_14SocketPoolTypeEN4base12OnceCallbackIFviEEERKNST_17RepeatingCallbackIFvRKNS_16HttpResponseInfoEPNS_18HttpAuthControllerENSU_IFvvEEEEEE(i32 %0, %"class.net::HostPortPair"* dereferenceable(32) %1, i32 %2, i32 %3, %"class.net::HttpNetworkSession"* %4, %"class.net::ProxyInfo"* dereferenceable(72) %5, %"struct.net::SSLConfig"* dereferenceable(320) %6, %"struct.net::SSLConfig"* dereferenceable(320) %7, i32 %8, %"class.net::NetworkIsolationKey"* dereferenceable(184) %9, i32 %10, %"class.net::SocketTag"* nonnull dereferenceable(1) %14, %"class.net::NetLogWithSource"* dereferenceable(24) %11, i32 %12, %"class.net::ClientSocketHandle"* null, i32 0, %"class.base::OnceCallback.631"* nonnull %15, %"class.base::RepeatingCallback.648"* nonnull dereferenceable(8) %16)
  %22 = getelementptr inbounds %"class.base::RepeatingCallback.648", %"class.base::RepeatingCallback.648"* %16, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #12
  %23 = getelementptr inbounds %"class.base::OnceCallback.631", %"class.base::OnceCallback.631"* %15, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #12
  ret i32 %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #8

declare void @__cxa_pure_virtual() unnamed_addr

declare %"class.net::ClientSocketPool"* @_ZN3net18HttpNetworkSession13GetSocketPoolENS0_14SocketPoolTypeERKNS_11ProxyServerE(%"class.net::HttpNetworkSession"*, i32, %"class.net::ProxyServer"* dereferenceable(40)) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #7

declare i32 @_ZN3net18ClientSocketHandle4InitERKNS_16ClientSocketPool7GroupIdE13scoped_refptrINS1_12SocketParamsEERKN4absl8optionalINS_27NetworkTrafficAnnotationTagEEENS_15RequestPriorityERKNS_9SocketTagENS1_13RespectLimitsEN4base12OnceCallbackIFviEEERKNSJ_17RepeatingCallbackIFvRKNS_16HttpResponseInfoEPNS_18HttpAuthControllerENSK_IFvvEEEEEEPS1_RKNS_16NetLogWithSourceE(%"class.net::ClientSocketHandle"*, %"class.net::ClientSocketPool::GroupId"* dereferenceable(232), %"class.net::ClientSocketPool::SocketParams"*, %"class.absl::optional.657"* dereferenceable(8), i32, %"class.net::SocketTag"* dereferenceable(1), i32, %"class.base::OnceCallback.631"*, %"class.base::RepeatingCallback.648"* dereferenceable(8), %"class.net::ClientSocketPool"*, %"class.net::NetLogWithSource"* dereferenceable(24)) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN3net16ClientSocketPool7GroupIdD1Ev(%"class.net::ClientSocketPool::GroupId"*) unnamed_addr #8

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #6

declare void @_ZN3net19NetworkIsolationKeyC1ERKS0_(%"class.net::NetworkIsolationKey"*, %"class.net::NetworkIsolationKey"* dereferenceable(184)) unnamed_addr #6

declare void @_ZN3net16ClientSocketPool7GroupIdC1ERKNS_12HostPortPairENS0_10SocketTypeENS_11PrivacyModeENS_19NetworkIsolationKeyENS_15SecureDnsPolicyE(%"class.net::ClientSocketPool::GroupId"*, %"class.net::HostPortPair"* dereferenceable(32), i32, i32, %"class.net::NetworkIsolationKey"*, i32) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"*) unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare void @_ZN3net16ClientSocketPool12SocketParamsC1ENSt3__110unique_ptrINS_9SSLConfigENS2_14default_deleteIS4_EEEES7_(%"class.net::ClientSocketPool::SocketParams"*, %"struct.net::SSLConfig"*, %"struct.net::SSLConfig"*) unnamed_addr #6

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #6

declare void @_ZN3net9SSLConfigC1ERKS0_(%"struct.net::SSLConfig"*, %"struct.net::SSLConfig"* dereferenceable(320)) unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

declare dereferenceable(40) %"class.net::ProxyServer"* @_ZNK3net9ProxyList3GetEv(%"class.net::ProxyList"*) local_unnamed_addr #6

declare zeroext i1 @_ZNK3net9ProxyList7IsEmptyEv(%"class.net::ProxyList"*) local_unnamed_addr #6

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN3net12_GLOBAL__N_113CreateGroupIdENS_23ClientSocketPoolManager15SocketGroupTypeERKNS_12HostPortPairERKNS_9ProxyInfoENS_11PrivacyModeERKNS_19NetworkIsolationKeyENS_15SecureDnsPolicyE: argument 0"}
!4 = distinct !{!4, !"_ZN3net12_GLOBAL__N_113CreateGroupIdENS_23ClientSocketPoolManager15SocketGroupTypeERKNS_12HostPortPairERKNS_9ProxyInfoENS_11PrivacyModeERKNS_19NetworkIsolationKeyENS_15SecureDnsPolicyE"}
