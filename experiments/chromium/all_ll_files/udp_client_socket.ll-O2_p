; ModuleID = '../../net/socket/udp_client_socket.cc'
source_filename = "../../net/socket/udp_client_socket.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::UDPClientSocket" = type { %"class.net::DatagramClientSocket", %"class.net::UDPSocketPosix", i64 }
%"class.net::DatagramClientSocket" = type { %"class.net::DatagramSocket", %"class.net::Socket" }
%"class.net::DatagramSocket" = type { i32 (...)** }
%"class.net::Socket" = type { i32 (...)**, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"class.net::UDPSocketPosix" = type { i32 (...)**, %"class.std::__1::unique_ptr", %class.scoped_refptr, %"class.std::__1::unique_ptr.10", %"class.std::__1::list", i32, i32, i32, i8, i32, i32, i32, i32, i32, %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21", %"class.base::MessagePumpLibevent::FdWatchController", %"class.base::MessagePumpLibevent::FdWatchController", %"class.net::UDPSocketPosix::ReadWatcher", %"class.net::UDPSocketPosix::WriteWatcher", i8, i8, i8, i32, i32, i32, %"class.base::RepeatingTimer", i8, i32, %class.scoped_refptr.33, %class.scoped_refptr.44, i32, %"class.net::IPEndPoint"*, %class.scoped_refptr.44, i32, %"class.std::__1::unique_ptr.21", %"class.base::OnceCallback", %"class.base::OnceCallback", %"class.net::NetLogWithSource", i64, i8, %"class.net::UDPSocketPosix::ReceivedActivityMonitor", %"class.net::SocketTag", i8, %"class.net::OwnedUDPSocketCount", %"class.base::WeakPtrFactory.60" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.net::UDPSocketPosix::WriteAsyncWatcher"* }
%"class.net::UDPSocketPosix::WriteAsyncWatcher" = type <{ %"class.base::WatchableIOMessagePumpPosix::FdWatcher", %"class.net::UDPSocketPosix"*, i8, [7 x i8] }>
%"class.base::WatchableIOMessagePumpPosix::FdWatcher" = type { i32 (...)** }
%class.scoped_refptr = type { %"class.net::UDPSocketPosixSender"* }
%"class.net::UDPSocketPosixSender" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", i8, [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.net::DatagramBufferPool"* }
%"class.net::DatagramBufferPool" = type { i32 (...)**, i64, %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.13" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { i64 }
%"class.base::MessagePumpLibevent::FdWatchController" = type { %"class.base::WatchableIOMessagePumpPosix::FdWatchControllerInterface", %"class.std::__1::unique_ptr.27", %"class.base::MessagePumpLibevent"*, %"class.base::WatchableIOMessagePumpPosix::FdWatcher"*, i8* }
%"class.base::WatchableIOMessagePumpPosix::FdWatchControllerInterface" = type { i32 (...)**, %"class.base::Location" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %struct.event* }
%struct.event = type opaque
%"class.base::MessagePumpLibevent" = type <{ %"class.base::MessagePump", %"struct.base::MessagePumpLibevent::RunState"*, i8, [7 x i8], %struct.event_base*, i32, i32, %struct.event*, %"class.base::ThreadChecker", [7 x i8] }>
%"class.base::MessagePump" = type { i32 (...)** }
%"struct.base::MessagePumpLibevent::RunState" = type <{ %"class.base::MessagePump::Delegate"*, i8, [7 x i8] }>
%"class.base::MessagePump::Delegate" = type { i32 (...)** }
%struct.event_base = type opaque
%"class.base::ThreadChecker" = type { i8 }
%"class.net::UDPSocketPosix::ReadWatcher" = type { %"class.base::WatchableIOMessagePumpPosix::FdWatcher", %"class.net::UDPSocketPosix"* }
%"class.net::UDPSocketPosix::WriteWatcher" = type { %"class.base::WatchableIOMessagePumpPosix::FdWatcher", %"class.net::UDPSocketPosix"* }
%"class.base::RepeatingTimer" = type { %"class.base::internal::TimerBase", %"class.base::RepeatingCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.33, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::TimeDelta" = type { i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.35 }
%class.scoped_refptr.35 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.36", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.36" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.37" }
%"struct.std::__1::atomic.37" = type { %"struct.std::__1::__atomic_base.38" }
%"struct.std::__1::__atomic_base.38" = type { %"struct.std::__1::__atomic_base.39" }
%"struct.std::__1::__atomic_base.39" = type { %"struct.std::__1::__cxx_atomic_impl.40" }
%"struct.std::__1::__cxx_atomic_impl.40" = type { %"struct.std::__1::__cxx_atomic_base_impl.41" }
%"struct.std::__1::__cxx_atomic_base_impl.41" = type { i8 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.42 }
%class.scoped_refptr.42 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.43", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.43" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.33 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.34" }>
%"class.base::RefCountedThreadSafe.34" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%class.scoped_refptr.44 = type { %"class.net::IOBuffer"* }
%"class.net::IOBuffer" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.45", i8* }
%"class.base::RefCountedThreadSafe.45" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.net::IPEndPoint"* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.net::NetLogWithSource" = type { %"struct.net::NetLogSource", %"class.net::NetLog"* }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.net::UDPSocketPosix::ReceivedActivityMonitor" = type { i32, i32, %"class.base::RepeatingTimer" }
%"class.net::SocketTag" = type { i8 }
%"class.net::OwnedUDPSocketCount" = type { i8 }
%"class.base::WeakPtrFactory.60" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector.46", %"class.std::__1::vector.53" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.46" = type { %"class.std::__1::__vector_base.47" }
%"class.std::__1::__vector_base.47" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair.48" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.53" = type { %"class.std::__1::__vector_base.54" }
%"class.std::__1::__vector_base.54" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.55" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"struct.net::NetworkTrafficAnnotationTag" = type { i32 }
%"class.net::DatagramBuffer" = type { %"class.std::__1::unique_ptr.64", i64 }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { i8* }

$_ZN3net14DatagramSocketD2Ev = comdat any

$_ZN3net14DatagramSocketD0Ev = comdat any

$_ZTVN3net14DatagramSocketE = comdat any

@_ZTVN3net15UDPClientSocketE = hidden unnamed_addr constant { [32 x i8*], [12 x i8*] } { [32 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::UDPClientSocket"*)* @_ZN3net15UDPClientSocketD2Ev to i8*), i8* bitcast (void (%"class.net::UDPClientSocket"*)* @_ZN3net15UDPClientSocketD0Ev to i8*), i8* bitcast (void (%"class.net::UDPClientSocket"*)* @_ZN3net15UDPClientSocket5CloseEv to i8*), i8* bitcast (i32 (%"class.net::UDPClientSocket"*, %"class.net::IPEndPoint"*)* @_ZNK3net15UDPClientSocket14GetPeerAddressEPNS_10IPEndPointE to i8*), i8* bitcast (i32 (%"class.net::UDPClientSocket"*, %"class.net::IPEndPoint"*)* @_ZNK3net15UDPClientSocket15GetLocalAddressEPNS_10IPEndPointE to i8*), i8* bitcast (void (%"class.net::UDPClientSocket"*)* @_ZN3net15UDPClientSocket16UseNonBlockingIOEv to i8*), i8* bitcast (i32 (%"class.net::UDPClientSocket"*)* @_ZN3net15UDPClientSocket16SetDoNotFragmentEv to i8*), i8* bitcast (void (%"class.net::UDPClientSocket"*, i1)* @_ZN3net15UDPClientSocket13SetMsgConfirmEb to i8*), i8* bitcast (%"class.net::NetLogWithSource"* (%"class.net::UDPClientSocket"*)* @_ZNK3net15UDPClientSocket6NetLogEv to i8*), i8* bitcast (i32 (%"class.net::UDPClientSocket"*, %"class.net::IPEndPoint"*)* @_ZN3net15UDPClientSocket7ConnectERKNS_10IPEndPointE to i8*), i8* bitcast (i32 (%"class.net::UDPClientSocket"*, i64, %"class.net::IPEndPoint"*)* @_ZN3net15UDPClientSocket19ConnectUsingNetworkElRKNS_10IPEndPointE to i8*), i8* bitcast (i32 (%"class.net::UDPClientSocket"*, %"class.net::IPEndPoint"*)* @_ZN3net15UDPClientSocket26ConnectUsingDefaultNetworkERKNS_10IPEndPointE to i8*), i8* bitcast (i64 (%"class.net::UDPClientSocket"*)* @_ZNK3net15UDPClientSocket15GetBoundNetworkEv to i8*), i8* bitcast (void (%"class.net::UDPClientSocket"*, %"class.net::SocketTag"*)* @_ZN3net15UDPClientSocket14ApplySocketTagERKNS_9SocketTagE to i8*), i8* bitcast (void (%"class.net::UDPClientSocket"*)* @_ZN3net15UDPClientSocket22EnableRecvOptimizationEv to i8*), i8* bitcast (i32 (%"class.net::UDPClientSocket"*, %"class.std::__1::list"*, %"class.base::OnceCallback"*, %"struct.net::NetworkTrafficAnnotationTag"*)* @_ZN3net15UDPClientSocket10WriteAsyncENSt3__14listINS1_10unique_ptrINS_14DatagramBufferENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEEN4base12OnceCallbackIFviEEERKNS_27NetworkTrafficAnnotationTagE to i8*), i8* bitcast (i32 (%"class.net::UDPClientSocket"*, i8*, i64, %"class.base::OnceCallback"*, %"struct.net::NetworkTrafficAnnotationTag"*)* @_ZN3net15UDPClientSocket10WriteAsyncEPKcmN4base12OnceCallbackIFviEEERKNS_27NetworkTrafficAnnotationTagE to i8*), i8* bitcast (void (%"class.std::__1::list"*, %"class.net::UDPClientSocket"*)* @_ZN3net15UDPClientSocket19GetUnwrittenBuffersEv to i8*), i8* bitcast (void (%"class.net::UDPClientSocket"*, i1)* @_ZN3net15UDPClientSocket20SetWriteAsyncEnabledEb to i8*), i8* bitcast (void (%"class.net::UDPClientSocket"*, i64)* @_ZN3net15UDPClientSocket16SetMaxPacketSizeEm to i8*), i8* bitcast (i1 (%"class.net::UDPClientSocket"*)* @_ZN3net15UDPClientSocket17WriteAsyncEnabledEv to i8*), i8* bitcast (void (%"class.net::UDPClientSocket"*, i1)* @_ZN3net15UDPClientSocket24SetWriteMultiCoreEnabledEb to i8*), i8* bitcast (void (%"class.net::UDPClientSocket"*, i1)* @_ZN3net15UDPClientSocket18SetSendmmsgEnabledEb to i8*), i8* bitcast (void (%"class.net::UDPClientSocket"*, i1)* @_ZN3net15UDPClientSocket22SetWriteBatchingActiveEb to i8*), i8* bitcast (i32 (%"class.net::UDPClientSocket"*, i32)* @_ZN3net15UDPClientSocket21SetMulticastInterfaceEj to i8*), i8* bitcast (void (%"class.net::UDPClientSocket"*, i32)* @_ZN3net15UDPClientSocket24SetIOSNetworkServiceTypeEi to i8*), i8* bitcast (i32 (%"class.net::UDPClientSocket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)* @_ZN3net15UDPClientSocket4ReadEPNS_8IOBufferEiN4base12OnceCallbackIFviEEE to i8*), i8* bitcast (i32 (%"class.net::UDPClientSocket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, %"struct.net::NetworkTrafficAnnotationTag"*)* @_ZN3net15UDPClientSocket5WriteEPNS_8IOBufferEiN4base12OnceCallbackIFviEEERKNS_27NetworkTrafficAnnotationTagE to i8*), i8* bitcast (i32 (%"class.net::UDPClientSocket"*, i32)* @_ZN3net15UDPClientSocket20SetReceiveBufferSizeEi to i8*), i8* bitcast (i32 (%"class.net::UDPClientSocket"*, i32)* @_ZN3net15UDPClientSocket17SetSendBufferSizeEi to i8*)], [12 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.net::UDPClientSocket"*)* @_ZThn8_N3net15UDPClientSocketD1Ev to i8*), i8* bitcast (void (%"class.net::UDPClientSocket"*)* @_ZThn8_N3net15UDPClientSocketD0Ev to i8*), i8* bitcast (i32 (%"class.net::UDPClientSocket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)* @_ZThn8_N3net15UDPClientSocket4ReadEPNS_8IOBufferEiN4base12OnceCallbackIFviEEE to i8*), i8* bitcast (i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)* @_ZN3net6Socket11ReadIfReadyEPNS_8IOBufferEiN4base12OnceCallbackIFviEEE to i8*), i8* bitcast (i32 (%"class.net::Socket"*)* @_ZN3net6Socket17CancelReadIfReadyEv to i8*), i8* bitcast (i32 (%"class.net::UDPClientSocket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, %"struct.net::NetworkTrafficAnnotationTag"*)* @_ZThn8_N3net15UDPClientSocket5WriteEPNS_8IOBufferEiN4base12OnceCallbackIFviEEERKNS_27NetworkTrafficAnnotationTagE to i8*), i8* bitcast (i32 (%"class.net::UDPClientSocket"*, i32)* @_ZThn8_N3net15UDPClientSocket20SetReceiveBufferSizeEi to i8*), i8* bitcast (i32 (%"class.net::UDPClientSocket"*, i32)* @_ZThn8_N3net15UDPClientSocket17SetSendBufferSizeEi to i8*), i8* bitcast (void (%"class.net::Socket"*, %"class.std::__1::vector"*)* @_ZN3net6Socket13SetDnsAliasesENSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE to i8*), i8* bitcast (%"class.std::__1::vector"* (%"class.net::Socket"*)* @_ZNK3net6Socket13GetDnsAliasesEv to i8*)] }, align 8
@_ZN3net21NetworkChangeNotifier21kInvalidNetworkHandleE = external local_unnamed_addr constant i64, align 8
@_ZTVN3net14DatagramSocketE = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::DatagramSocket"*)* @_ZN3net14DatagramSocketD2Ev to i8*), i8* bitcast (void (%"class.net::DatagramSocket"*)* @_ZN3net14DatagramSocketD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8

@_ZN3net15UDPClientSocketC1ENS_14DatagramSocket8BindTypeEPNS_6NetLogERKNS_12NetLogSourceE = hidden unnamed_addr alias void (%"class.net::UDPClientSocket"*, i32, %"class.net::NetLog"*, %"struct.net::NetLogSource"*), void (%"class.net::UDPClientSocket"*, i32, %"class.net::NetLog"*, %"struct.net::NetLogSource"*)* @_ZN3net15UDPClientSocketC2ENS_14DatagramSocket8BindTypeEPNS_6NetLogERKNS_12NetLogSourceE
@_ZN3net15UDPClientSocketD1Ev = hidden unnamed_addr alias void (%"class.net::UDPClientSocket"*), void (%"class.net::UDPClientSocket"*)* @_ZN3net15UDPClientSocketD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15UDPClientSocketC2ENS_14DatagramSocket8BindTypeEPNS_6NetLogERKNS_12NetLogSourceE(%"class.net::UDPClientSocket"*, i32, %"class.net::NetLog"*, %"struct.net::NetLogSource"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.net::UDPClientSocket", %"class.net::UDPClientSocket"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN3net14DatagramSocketE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.net::UDPClientSocket", %"class.net::UDPClientSocket"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN3net6SocketC2Ev(%"class.net::Socket"* %6) #10
  %7 = bitcast %"class.net::UDPClientSocket"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [32 x i8*], [12 x i8*] }, { [32 x i8*], [12 x i8*] }* @_ZTVN3net15UDPClientSocketE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [32 x i8*], [12 x i8*] }, { [32 x i8*], [12 x i8*] }* @_ZTVN3net15UDPClientSocketE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %7, align 8
  %8 = getelementptr inbounds %"class.net::UDPClientSocket", %"class.net::UDPClientSocket"* %0, i64 0, i32 1
  tail call void @_ZN3net14UDPSocketPosixC1ENS_14DatagramSocket8BindTypeEPNS_6NetLogERKNS_12NetLogSourceE(%"class.net::UDPSocketPosix"* %8, i32 %1, %"class.net::NetLog"* %2, %"struct.net::NetLogSource"* dereferenceable(16) %3) #10
  %9 = getelementptr inbounds %"class.net::UDPClientSocket", %"class.net::UDPClientSocket"* %0, i64 0, i32 2
  %10 = load i64, i64* @_ZN3net21NetworkChangeNotifier21kInvalidNetworkHandleE, align 8
  store i64 %10, i64* %9, align 8
  ret void
}

declare void @_ZN3net14UDPSocketPosixC1ENS_14DatagramSocket8BindTypeEPNS_6NetLogERKNS_12NetLogSourceE(%"class.net::UDPSocketPosix"*, i32, %"class.net::NetLog"*, %"struct.net::NetLogSource"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15UDPClientSocketD2Ev(%"class.net::UDPClientSocket"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.net::UDPClientSocket"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [32 x i8*], [12 x i8*] }, { [32 x i8*], [12 x i8*] }* @_ZTVN3net15UDPClientSocketE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [32 x i8*], [12 x i8*] }, { [32 x i8*], [12 x i8*] }* @_ZTVN3net15UDPClientSocketE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.net::UDPClientSocket", %"class.net::UDPClientSocket"* %0, i64 0, i32 1
  tail call void @_ZN3net14UDPSocketPosixD1Ev(%"class.net::UDPSocketPosix"* %3) #10
  %4 = getelementptr inbounds %"class.net::UDPClientSocket", %"class.net::UDPClientSocket"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN3net6SocketD2Ev(%"class.net::Socket"* %4) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net14UDPSocketPosixD1Ev(%"class.net::UDPSocketPosix"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N3net15UDPClientSocketD1Ev(%"class.net::UDPClientSocket"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::UDPClientSocket", %"class.net::UDPClientSocket"* %0, i64 -1, i32 2
  %3 = getelementptr inbounds i64, i64* %2, i64 1
  %4 = bitcast i64* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [32 x i8*], [12 x i8*] }, { [32 x i8*], [12 x i8*] }* @_ZTVN3net15UDPClientSocketE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [32 x i8*], [12 x i8*] }, { [32 x i8*], [12 x i8*] }* @_ZTVN3net15UDPClientSocketE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds i64, i64* %2, i64 5
  %6 = bitcast i64* %5 to %"class.net::UDPSocketPosix"*
  tail call void @_ZN3net14UDPSocketPosixD1Ev(%"class.net::UDPSocketPosix"* %6) #10
  %7 = bitcast i64* %3 to %"class.net::Socket"*
  tail call void @_ZN3net6SocketD2Ev(%"class.net::Socket"* %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15UDPClientSocketD0Ev(%"class.net::UDPClientSocket"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.net::UDPClientSocket"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [32 x i8*], [12 x i8*] }, { [32 x i8*], [12 x i8*] }* @_ZTVN3net15UDPClientSocketE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [32 x i8*], [12 x i8*] }, { [32 x i8*], [12 x i8*] }* @_ZTVN3net15UDPClientSocketE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.net::UDPClientSocket", %"class.net::UDPClientSocket"* %0, i64 0, i32 1
  tail call void @_ZN3net14UDPSocketPosixD1Ev(%"class.net::UDPSocketPosix"* %3) #10
  %4 = getelementptr inbounds %"class.net::UDPClientSocket", %"class.net::UDPClientSocket"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN3net6SocketD2Ev(%"class.net::Socket"* %4) #10
  %5 = bitcast %"class.net::UDPClientSocket"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N3net15UDPClientSocketD0Ev(%"class.net::UDPClientSocket"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::UDPClientSocket", %"class.net::UDPClientSocket"* %0, i64 -1, i32 2
  %3 = getelementptr inbounds i64, i64* %2, i64 1
  %4 = bitcast i64* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [32 x i8*], [12 x i8*] }, { [32 x i8*], [12 x i8*] }* @_ZTVN3net15UDPClientSocketE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [32 x i8*], [12 x i8*] }, { [32 x i8*], [12 x i8*] }* @_ZTVN3net15UDPClientSocketE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds i64, i64* %2, i64 5
  %6 = bitcast i64* %5 to %"class.net::UDPSocketPosix"*
  tail call void @_ZN3net14UDPSocketPosixD1Ev(%"class.net::UDPSocketPosix"* %6) #10
  %7 = bitcast i64* %3 to %"class.net::Socket"*
  tail call void @_ZN3net6SocketD2Ev(%"class.net::Socket"* %7) #10
  %8 = bitcast i64* %2 to i8*
  tail call void @_ZdlPv(i8* %8) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net15UDPClientSocket7ConnectERKNS_10IPEndPointE(%"class.net::UDPClientSocket"*, %"class.net::IPEndPoint"* dereferenceable(20)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::UDPClientSocket", %"class.net::UDPClientSocket"* %0, i64 0, i32 1
  %4 = tail call i32 @_ZNK3net10IPEndPoint9GetFamilyEv(%"class.net::IPEndPoint"* %1) #10
  %5 = tail call i32 @_ZN3net14UDPSocketPosix4OpenENS_13AddressFamilyE(%"class.net::UDPSocketPosix"* %3, i32 %4) #10
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = tail call i32 @_ZN3net14UDPSocketPosix7ConnectERKNS_10IPEndPointE(%"class.net::UDPSocketPosix"* %3, %"class.net::IPEndPoint"* dereferenceable(20) %1) #10
  br label %9

9:                                                ; preds = %2, %7
  %10 = phi i32 [ %8, %7 ], [ %5, %2 ]
  ret i32 %10
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare i32 @_ZN3net14UDPSocketPosix4OpenENS_13AddressFamilyE(%"class.net::UDPSocketPosix"*, i32) local_unnamed_addr #1

declare i32 @_ZNK3net10IPEndPoint9GetFamilyEv(%"class.net::IPEndPoint"*) local_unnamed_addr #1

declare i32 @_ZN3net14UDPSocketPosix7ConnectERKNS_10IPEndPointE(%"class.net::UDPSocketPosix"*, %"class.net::IPEndPoint"* dereferenceable(20)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net15UDPClientSocket19ConnectUsingNetworkElRKNS_10IPEndPointE(%"class.net::UDPClientSocket"*, i64, %"class.net::IPEndPoint"* dereferenceable(20)) unnamed_addr #0 align 2 {
  %4 = tail call zeroext i1 @_ZN3net21NetworkChangeNotifier26AreNetworkHandlesSupportedEv() #10
  br i1 %4, label %5, label %16

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.net::UDPClientSocket", %"class.net::UDPClientSocket"* %0, i64 0, i32 1
  %7 = tail call i32 @_ZNK3net10IPEndPoint9GetFamilyEv(%"class.net::IPEndPoint"* %2) #10
  %8 = tail call i32 @_ZN3net14UDPSocketPosix4OpenENS_13AddressFamilyE(%"class.net::UDPSocketPosix"* %6, i32 %7) #10
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %5
  %11 = tail call i32 @_ZN3net14UDPSocketPosix13BindToNetworkEl(%"class.net::UDPSocketPosix"* %6, i64 %1) #10
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.net::UDPClientSocket", %"class.net::UDPClientSocket"* %0, i64 0, i32 2
  store i64 %1, i64* %14, align 8
  %15 = tail call i32 @_ZN3net14UDPSocketPosix7ConnectERKNS_10IPEndPointE(%"class.net::UDPSocketPosix"* %6, %"class.net::IPEndPoint"* dereferenceable(20) %2) #10
  br label %16

16:                                               ; preds = %13, %5, %10, %3
  %17 = phi i32 [ -11, %3 ], [ %15, %13 ], [ %8, %5 ], [ %11, %10 ]
  ret i32 %17
}

declare zeroext i1 @_ZN3net21NetworkChangeNotifier26AreNetworkHandlesSupportedEv() local_unnamed_addr #1

declare i32 @_ZN3net14UDPSocketPosix13BindToNetworkEl(%"class.net::UDPSocketPosix"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net15UDPClientSocket26ConnectUsingDefaultNetworkERKNS_10IPEndPointE(%"class.net::UDPClientSocket"*, %"class.net::IPEndPoint"* dereferenceable(20)) unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZN3net21NetworkChangeNotifier26AreNetworkHandlesSupportedEv() #10
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.net::UDPClientSocket", %"class.net::UDPClientSocket"* %0, i64 0, i32 1
  %6 = tail call i32 @_ZNK3net10IPEndPoint9GetFamilyEv(%"class.net::IPEndPoint"* %1) #10
  %7 = tail call i32 @_ZN3net14UDPSocketPosix4OpenENS_13AddressFamilyE(%"class.net::UDPSocketPosix"* %5, i32 %6) #10
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %26

9:                                                ; preds = %4
  %10 = load i64, i64* @_ZN3net21NetworkChangeNotifier21kInvalidNetworkHandleE, align 8
  %11 = tail call i64 @_ZN3net21NetworkChangeNotifier17GetDefaultNetworkEv() #10
  %12 = icmp eq i64 %11, %10
  br i1 %12, label %26, label %16

13:                                               ; preds = %16
  %14 = tail call i64 @_ZN3net21NetworkChangeNotifier17GetDefaultNetworkEv() #10
  %15 = icmp eq i64 %14, %10
  br i1 %15, label %26, label %28

16:                                               ; preds = %9
  %17 = tail call i32 @_ZN3net14UDPSocketPosix13BindToNetworkEl(%"class.net::UDPSocketPosix"* %5, i64 %11) #10
  %18 = icmp eq i32 %17, -21
  br i1 %18, label %13, label %19

19:                                               ; preds = %28, %16
  %20 = phi i64 [ %11, %16 ], [ %14, %28 ]
  %21 = phi i32 [ %17, %16 ], [ %29, %28 ]
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.net::UDPClientSocket", %"class.net::UDPClientSocket"* %0, i64 0, i32 2
  store i64 %20, i64* %24, align 8
  %25 = tail call i32 @_ZN3net14UDPSocketPosix7ConnectERKNS_10IPEndPointE(%"class.net::UDPSocketPosix"* %5, %"class.net::IPEndPoint"* dereferenceable(20) %1) #10
  br label %26

26:                                               ; preds = %28, %9, %13, %4, %19, %23, %2
  %27 = phi i32 [ -11, %2 ], [ %7, %4 ], [ %25, %23 ], [ %21, %19 ], [ -106, %13 ], [ -106, %9 ], [ -21, %28 ]
  ret i32 %27

28:                                               ; preds = %13
  %29 = tail call i32 @_ZN3net14UDPSocketPosix13BindToNetworkEl(%"class.net::UDPSocketPosix"* %5, i64 %14) #10
  %30 = icmp eq i32 %29, -21
  br i1 %30, label %26, label %19
}

declare i64 @_ZN3net21NetworkChangeNotifier17GetDefaultNetworkEv() local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK3net15UDPClientSocket15GetBoundNetworkEv(%"class.net::UDPClientSocket"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.net::UDPClientSocket", %"class.net::UDPClientSocket"* %0, i64 0, i32 2
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15UDPClientSocket14ApplySocketTagERKNS_9SocketTagE(%"class.net::UDPClientSocket"*, %"class.net::SocketTag"* dereferenceable(1)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::UDPClientSocket", %"class.net::UDPClientSocket"* %0, i64 0, i32 1
  tail call void @_ZN3net14UDPSocketPosix14ApplySocketTagERKNS_9SocketTagE(%"class.net::UDPSocketPosix"* %3, %"class.net::SocketTag"* dereferenceable(1) %1) #10
  ret void
}

declare void @_ZN3net14UDPSocketPosix14ApplySocketTagERKNS_9SocketTagE(%"class.net::UDPSocketPosix"*, %"class.net::SocketTag"* dereferenceable(1)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net15UDPClientSocket4ReadEPNS_8IOBufferEiN4base12OnceCallbackIFviEEE(%"class.net::UDPClientSocket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = getelementptr inbounds %"class.net::UDPClientSocket", %"class.net::UDPClientSocket"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %9, i64* %10, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %7, align 8
  %11 = call i32 @_ZN3net14UDPSocketPosix4ReadEPNS_8IOBufferEiN4base12OnceCallbackIFviEEE(%"class.net::UDPSocketPosix"* %6, %"class.net::IOBuffer"* %1, i32 %2, %"class.base::OnceCallback"* nonnull %5) #10
  %12 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %12) #10
  ret i32 %11
}

declare i32 @_ZN3net14UDPSocketPosix4ReadEPNS_8IOBufferEiN4base12OnceCallbackIFviEEE(%"class.net::UDPSocketPosix"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZThn8_N3net15UDPClientSocket4ReadEPNS_8IOBufferEiN4base12OnceCallbackIFviEEE(%"class.net::UDPClientSocket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = getelementptr inbounds %"class.net::UDPClientSocket", %"class.net::UDPClientSocket"* %0, i64 -1, i32 2
  %7 = bitcast %"class.base::OnceCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = getelementptr inbounds i64, i64* %6, i64 5
  %9 = bitcast i64* %8 to %"class.net::UDPSocketPosix"*
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = call i32 @_ZN3net14UDPSocketPosix4ReadEPNS_8IOBufferEiN4base12OnceCallbackIFviEEE(%"class.net::UDPSocketPosix"* %9, %"class.net::IOBuffer"* %1, i32 %2, %"class.base::OnceCallback"* nonnull %5) #10
  %15 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net15UDPClientSocket5WriteEPNS_8IOBufferEiN4base12OnceCallbackIFviEEERKNS_27NetworkTrafficAnnotationTagE(%"class.net::UDPClientSocket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"* nocapture, %"struct.net::NetworkTrafficAnnotationTag"* dereferenceable(4)) unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = getelementptr inbounds %"class.net::UDPClientSocket", %"class.net::UDPClientSocket"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %10, i64* %11, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %12 = call i32 @_ZN3net14UDPSocketPosix5WriteEPNS_8IOBufferEiN4base12OnceCallbackIFviEEERKNS_27NetworkTrafficAnnotationTagE(%"class.net::UDPSocketPosix"* %7, %"class.net::IOBuffer"* %1, i32 %2, %"class.base::OnceCallback"* nonnull %6, %"struct.net::NetworkTrafficAnnotationTag"* dereferenceable(4) %4) #10
  %13 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #10
  ret i32 %12
}

declare i32 @_ZN3net14UDPSocketPosix5WriteEPNS_8IOBufferEiN4base12OnceCallbackIFviEEERKNS_27NetworkTrafficAnnotationTagE(%"class.net::UDPSocketPosix"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, %"struct.net::NetworkTrafficAnnotationTag"* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZThn8_N3net15UDPClientSocket5WriteEPNS_8IOBufferEiN4base12OnceCallbackIFviEEERKNS_27NetworkTrafficAnnotationTagE(%"class.net::UDPClientSocket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"* nocapture, %"struct.net::NetworkTrafficAnnotationTag"* dereferenceable(4)) unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = getelementptr inbounds %"class.net::UDPClientSocket", %"class.net::UDPClientSocket"* %0, i64 -1, i32 2
  %8 = bitcast %"class.base::OnceCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8)
  %9 = getelementptr inbounds i64, i64* %7, i64 5
  %10 = bitcast i64* %9 to %"class.net::UDPSocketPosix"*
  %11 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  %15 = call i32 @_ZN3net14UDPSocketPosix5WriteEPNS_8IOBufferEiN4base12OnceCallbackIFviEEERKNS_27NetworkTrafficAnnotationTagE(%"class.net::UDPSocketPosix"* %10, %"class.net::IOBuffer"* %1, i32 %2, %"class.base::OnceCallback"* nonnull %6, %"struct.net::NetworkTrafficAnnotationTag"* dereferenceable(4) %4) #10
  %16 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %16) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8)
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net15UDPClientSocket10WriteAsyncEPKcmN4base12OnceCallbackIFviEEERKNS_27NetworkTrafficAnnotationTagE(%"class.net::UDPClientSocket"*, i8*, i64, %"class.base::OnceCallback"* nocapture, %"struct.net::NetworkTrafficAnnotationTag"* dereferenceable(4)) unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = getelementptr inbounds %"class.net::UDPClientSocket", %"class.net::UDPClientSocket"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %10, i64* %11, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %12 = call i32 @_ZN3net14UDPSocketPosix10WriteAsyncEPKcmN4base12OnceCallbackIFviEEERKNS_27NetworkTrafficAnnotationTagE(%"class.net::UDPSocketPosix"* %7, i8* %1, i64 %2, %"class.base::OnceCallback"* nonnull %6, %"struct.net::NetworkTrafficAnnotationTag"* dereferenceable(4) %4) #10
  %13 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #10
  ret i32 %12
}

declare i32 @_ZN3net14UDPSocketPosix10WriteAsyncEPKcmN4base12OnceCallbackIFviEEERKNS_27NetworkTrafficAnnotationTagE(%"class.net::UDPSocketPosix"*, i8*, i64, %"class.base::OnceCallback"*, %"struct.net::NetworkTrafficAnnotationTag"* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net15UDPClientSocket10WriteAsyncENSt3__14listINS1_10unique_ptrINS_14DatagramBufferENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEEN4base12OnceCallbackIFviEEERKNS_27NetworkTrafficAnnotationTagE(%"class.net::UDPClientSocket"*, %"class.std::__1::list"* nocapture, %"class.base::OnceCallback"* nocapture, %"struct.net::NetworkTrafficAnnotationTag"* dereferenceable(4)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::list", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = getelementptr inbounds %"class.net::UDPClientSocket", %"class.net::UDPClientSocket"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %5, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %5, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %8, %"struct.std::__1::__list_node_base"** %9, align 8
  %10 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %5, i64 0, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %8, %"struct.std::__1::__list_node_base"** %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %37, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %1, i64 0, i32 0, i32 0, i32 1
  %17 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %1, i64 0, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %18, align 8
  %20 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %19, i64 0, i32 1
  %21 = bitcast %"struct.std::__1::__list_node_base"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %17, i64 0, i32 0
  %24 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %24, i64 0, i32 1
  %26 = bitcast %"struct.std::__1::__list_node_base"** %25 to i64*
  store i64 %22, i64* %26, align 8
  %27 = bitcast %"struct.std::__1::__list_node_base"* %17 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"struct.std::__1::__list_node_base"** %20 to i64**
  %30 = load i64*, i64** %29, align 8
  store i64 %28, i64* %30, align 8
  %31 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %9, align 8
  %32 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %31, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %17, %"struct.std::__1::__list_node_base"** %32, align 8
  %33 = ptrtoint %"struct.std::__1::__list_node_base"* %31 to i64
  store i64 %33, i64* %27, align 8
  store %"struct.std::__1::__list_node_base"* %19, %"struct.std::__1::__list_node_base"** %9, align 8
  store %"struct.std::__1::__list_node_base"* %8, %"struct.std::__1::__list_node_base"** %20, align 8
  %34 = load i64, i64* %12, align 8
  %35 = load i64, i64* %11, align 8
  %36 = add i64 %35, %34
  store i64 %36, i64* %11, align 8
  store i64 0, i64* %12, align 8
  br label %37

37:                                               ; preds = %4, %15
  %38 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %39 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %40, i64* %41, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %38, align 8
  %42 = call i32 @_ZN3net14UDPSocketPosix10WriteAsyncENSt3__14listINS1_10unique_ptrINS_14DatagramBufferENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEEN4base12OnceCallbackIFviEEERKNS_27NetworkTrafficAnnotationTagE(%"class.net::UDPSocketPosix"* %7, %"class.std::__1::list"* nonnull %5, %"class.base::OnceCallback"* nonnull %6, %"struct.net::NetworkTrafficAnnotationTag"* dereferenceable(4) %3) #10
  %43 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %43) #10
  %44 = load i64, i64* %11, align 8
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %74, label %46

46:                                               ; preds = %37
  %47 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %10, align 8
  %48 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %9, align 8
  %49 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %48, i64 0, i32 1
  %50 = bitcast %"struct.std::__1::__list_node_base"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %47, i64 0, i32 0
  %53 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %52, align 8
  %54 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %53, i64 0, i32 1
  %55 = bitcast %"struct.std::__1::__list_node_base"** %54 to i64*
  store i64 %51, i64* %55, align 8
  %56 = bitcast %"struct.std::__1::__list_node_base"* %47 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"struct.std::__1::__list_node_base"** %49 to i64**
  %59 = load i64*, i64** %58, align 8
  store i64 %57, i64* %59, align 8
  store i64 0, i64* %11, align 8
  %60 = icmp eq %"struct.std::__1::__list_node_base"* %47, %8
  br i1 %60, label %74, label %61

61:                                               ; preds = %46, %71
  %62 = phi %"struct.std::__1::__list_node_base"* [ %64, %71 ], [ %47, %46 ]
  %63 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %62, i64 0, i32 1
  %64 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %63, align 8
  %65 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %62, i64 1
  %66 = bitcast %"struct.std::__1::__list_node_base"* %65 to %"class.net::DatagramBuffer"**
  %67 = load %"class.net::DatagramBuffer"*, %"class.net::DatagramBuffer"** %66, align 8
  store %"class.net::DatagramBuffer"* null, %"class.net::DatagramBuffer"** %66, align 8
  %68 = icmp eq %"class.net::DatagramBuffer"* %67, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %61
  call void @_ZN3net14DatagramBufferD1Ev(%"class.net::DatagramBuffer"* nonnull %67) #10
  %70 = bitcast %"class.net::DatagramBuffer"* %67 to i8*
  call void @_ZdlPv(i8* %70) #11
  br label %71

71:                                               ; preds = %69, %61
  %72 = bitcast %"struct.std::__1::__list_node_base"* %62 to i8*
  call void @_ZdlPv(i8* %72) #11
  %73 = icmp eq %"struct.std::__1::__list_node_base"* %64, %8
  br i1 %73, label %74, label %61

74:                                               ; preds = %71, %37, %46
  ret i32 %42
}

declare i32 @_ZN3net14UDPSocketPosix10WriteAsyncENSt3__14listINS1_10unique_ptrINS_14DatagramBufferENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEEN4base12OnceCallbackIFviEEERKNS_27NetworkTrafficAnnotationTagE(%"class.net::UDPSocketPosix"*, %"class.std::__1::list"*, %"class.base::OnceCallback"*, %"struct.net::NetworkTrafficAnnotationTag"* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15UDPClientSocket19GetUnwrittenBuffersEv(%"class.std::__1::list"* noalias sret, %"class.net::UDPClientSocket"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::UDPClientSocket", %"class.net::UDPClientSocket"* %1, i64 0, i32 1
  tail call void @_ZN3net14UDPSocketPosix19GetUnwrittenBuffersEv(%"class.std::__1::list"* sret %0, %"class.net::UDPSocketPosix"* %3) #10
  ret void
}

declare void @_ZN3net14UDPSocketPosix19GetUnwrittenBuffersEv(%"class.std::__1::list"* sret, %"class.net::UDPSocketPosix"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15UDPClientSocket5CloseEv(%"class.net::UDPClientSocket"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::UDPClientSocket", %"class.net::UDPClientSocket"* %0, i64 0, i32 1
  tail call void @_ZN3net14UDPSocketPosix5CloseEv(%"class.net::UDPSocketPosix"* %2) #10
  ret void
}

declare void @_ZN3net14UDPSocketPosix5CloseEv(%"class.net::UDPSocketPosix"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3net15UDPClientSocket14GetPeerAddressEPNS_10IPEndPointE(%"class.net::UDPClientSocket"*, %"class.net::IPEndPoint"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::UDPClientSocket", %"class.net::UDPClientSocket"* %0, i64 0, i32 1
  %4 = tail call i32 @_ZNK3net14UDPSocketPosix14GetPeerAddressEPNS_10IPEndPointE(%"class.net::UDPSocketPosix"* %3, %"class.net::IPEndPoint"* %1) #10
  ret i32 %4
}

declare i32 @_ZNK3net14UDPSocketPosix14GetPeerAddressEPNS_10IPEndPointE(%"class.net::UDPSocketPosix"*, %"class.net::IPEndPoint"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3net15UDPClientSocket15GetLocalAddressEPNS_10IPEndPointE(%"class.net::UDPClientSocket"*, %"class.net::IPEndPoint"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::UDPClientSocket", %"class.net::UDPClientSocket"* %0, i64 0, i32 1
  %4 = tail call i32 @_ZNK3net14UDPSocketPosix15GetLocalAddressEPNS_10IPEndPointE(%"class.net::UDPSocketPosix"* %3, %"class.net::IPEndPoint"* %1) #10
  ret i32 %4
}

declare i32 @_ZNK3net14UDPSocketPosix15GetLocalAddressEPNS_10IPEndPointE(%"class.net::UDPSocketPosix"*, %"class.net::IPEndPoint"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net15UDPClientSocket20SetReceiveBufferSizeEi(%"class.net::UDPClientSocket"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::UDPClientSocket", %"class.net::UDPClientSocket"* %0, i64 0, i32 1
  %4 = tail call i32 @_ZN3net14UDPSocketPosix20SetReceiveBufferSizeEi(%"class.net::UDPSocketPosix"* %3, i32 %1) #10
  ret i32 %4
}

declare i32 @_ZN3net14UDPSocketPosix20SetReceiveBufferSizeEi(%"class.net::UDPSocketPosix"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZThn8_N3net15UDPClientSocket20SetReceiveBufferSizeEi(%"class.net::UDPClientSocket"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::UDPClientSocket", %"class.net::UDPClientSocket"* %0, i64 -1, i32 2
  %4 = getelementptr inbounds i64, i64* %3, i64 5
  %5 = bitcast i64* %4 to %"class.net::UDPSocketPosix"*
  %6 = tail call i32 @_ZN3net14UDPSocketPosix20SetReceiveBufferSizeEi(%"class.net::UDPSocketPosix"* %5, i32 %1) #10
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net15UDPClientSocket17SetSendBufferSizeEi(%"class.net::UDPClientSocket"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::UDPClientSocket", %"class.net::UDPClientSocket"* %0, i64 0, i32 1
  %4 = tail call i32 @_ZN3net14UDPSocketPosix17SetSendBufferSizeEi(%"class.net::UDPSocketPosix"* %3, i32 %1) #10
  ret i32 %4
}

declare i32 @_ZN3net14UDPSocketPosix17SetSendBufferSizeEi(%"class.net::UDPSocketPosix"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZThn8_N3net15UDPClientSocket17SetSendBufferSizeEi(%"class.net::UDPClientSocket"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::UDPClientSocket", %"class.net::UDPClientSocket"* %0, i64 -1, i32 2
  %4 = getelementptr inbounds i64, i64* %3, i64 5
  %5 = bitcast i64* %4 to %"class.net::UDPSocketPosix"*
  %6 = tail call i32 @_ZN3net14UDPSocketPosix17SetSendBufferSizeEi(%"class.net::UDPSocketPosix"* %5, i32 %1) #10
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net15UDPClientSocket16SetDoNotFragmentEv(%"class.net::UDPClientSocket"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::UDPClientSocket", %"class.net::UDPClientSocket"* %0, i64 0, i32 1
  %3 = tail call i32 @_ZN3net14UDPSocketPosix16SetDoNotFragmentEv(%"class.net::UDPSocketPosix"* %2) #10
  ret i32 %3
}

declare i32 @_ZN3net14UDPSocketPosix16SetDoNotFragmentEv(%"class.net::UDPSocketPosix"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15UDPClientSocket13SetMsgConfirmEb(%"class.net::UDPClientSocket"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::UDPClientSocket", %"class.net::UDPClientSocket"* %0, i64 0, i32 1
  tail call void @_ZN3net14UDPSocketPosix13SetMsgConfirmEb(%"class.net::UDPSocketPosix"* %3, i1 zeroext %1) #10
  ret void
}

declare void @_ZN3net14UDPSocketPosix13SetMsgConfirmEb(%"class.net::UDPSocketPosix"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.net::NetLogWithSource"* @_ZNK3net15UDPClientSocket6NetLogEv(%"class.net::UDPClientSocket"* readnone) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.net::UDPClientSocket", %"class.net::UDPClientSocket"* %0, i64 0, i32 1, i32 38
  ret %"class.net::NetLogWithSource"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3net15UDPClientSocket16UseNonBlockingIOEv(%"class.net::UDPClientSocket"* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net15UDPClientSocket20SetWriteAsyncEnabledEb(%"class.net::UDPClientSocket"* nocapture, i1 zeroext) unnamed_addr #7 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.net::UDPClientSocket", %"class.net::UDPClientSocket"* %0, i64 0, i32 1, i32 20
  store i8 %3, i8* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15UDPClientSocket16SetMaxPacketSizeEm(%"class.net::UDPClientSocket"*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::UDPClientSocket", %"class.net::UDPClientSocket"* %0, i64 0, i32 1
  tail call void @_ZN3net14UDPSocketPosix16SetMaxPacketSizeEm(%"class.net::UDPSocketPosix"* %3, i64 %1) #10
  ret void
}

declare void @_ZN3net14UDPSocketPosix16SetMaxPacketSizeEm(%"class.net::UDPSocketPosix"*, i64) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN3net15UDPClientSocket17WriteAsyncEnabledEv(%"class.net::UDPClientSocket"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.net::UDPClientSocket", %"class.net::UDPClientSocket"* %0, i64 0, i32 1, i32 20
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net15UDPClientSocket24SetWriteMultiCoreEnabledEb(%"class.net::UDPClientSocket"* nocapture, i1 zeroext) unnamed_addr #7 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.net::UDPClientSocket", %"class.net::UDPClientSocket"* %0, i64 0, i32 1, i32 22
  store i8 %3, i8* %4, align 2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3net15UDPClientSocket18SetSendmmsgEnabledEb(%"class.net::UDPClientSocket"* nocapture readonly, i1 zeroext) unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.net::UDPClientSocket", %"class.net::UDPClientSocket"* %0, i64 0, i32 1, i32 2, i32 0
  %4 = load %"class.net::UDPSocketPosixSender"*, %"class.net::UDPSocketPosixSender"** %3, align 8
  %5 = zext i1 %1 to i8
  %6 = getelementptr inbounds %"class.net::UDPSocketPosixSender", %"class.net::UDPSocketPosixSender"* %4, i64 0, i32 2
  store i8 %5, i8* %6, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net15UDPClientSocket22SetWriteBatchingActiveEb(%"class.net::UDPClientSocket"* nocapture, i1 zeroext) unnamed_addr #7 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.net::UDPClientSocket", %"class.net::UDPClientSocket"* %0, i64 0, i32 1, i32 21
  store i8 %3, i8* %4, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net15UDPClientSocket21SetMulticastInterfaceEj(%"class.net::UDPClientSocket"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::UDPClientSocket", %"class.net::UDPClientSocket"* %0, i64 0, i32 1
  %4 = tail call i32 @_ZN3net14UDPSocketPosix21SetMulticastInterfaceEj(%"class.net::UDPSocketPosix"* %3, i32 %1) #10
  ret i32 %4
}

declare i32 @_ZN3net14UDPSocketPosix21SetMulticastInterfaceEj(%"class.net::UDPSocketPosix"*, i32) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net15UDPClientSocket22EnableRecvOptimizationEv(%"class.net::UDPClientSocket"* nocapture) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.net::UDPClientSocket", %"class.net::UDPClientSocket"* %0, i64 0, i32 1, i32 43
  store i8 1, i8* %2, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15UDPClientSocket24SetIOSNetworkServiceTypeEi(%"class.net::UDPClientSocket"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::UDPClientSocket", %"class.net::UDPClientSocket"* %0, i64 0, i32 1
  %4 = tail call i32 @_ZN3net14UDPSocketPosix24SetIOSNetworkServiceTypeEi(%"class.net::UDPSocketPosix"* %3, i32 %1) #10
  ret void
}

declare i32 @_ZN3net14UDPSocketPosix24SetIOSNetworkServiceTypeEi(%"class.net::UDPSocketPosix"*, i32) local_unnamed_addr #1

declare i32 @_ZN3net6Socket11ReadIfReadyEPNS_8IOBufferEiN4base12OnceCallbackIFviEEE(%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*) unnamed_addr #1

declare i32 @_ZN3net6Socket17CancelReadIfReadyEv(%"class.net::Socket"*) unnamed_addr #1

declare void @_ZN3net6Socket13SetDnsAliasesENSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE(%"class.net::Socket"*, %"class.std::__1::vector"*) unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::vector"* @_ZNK3net6Socket13GetDnsAliasesEv(%"class.net::Socket"*) unnamed_addr #1

declare void @_ZN3net6SocketC2Ev(%"class.net::Socket"*) unnamed_addr #1

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net14DatagramSocketD2Ev(%"class.net::DatagramSocket"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net14DatagramSocketD0Ev(%"class.net::DatagramSocket"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: nounwind
declare void @_ZN3net6SocketD2Ev(%"class.net::Socket"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net14DatagramBufferD1Ev(%"class.net::DatagramBuffer"*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
