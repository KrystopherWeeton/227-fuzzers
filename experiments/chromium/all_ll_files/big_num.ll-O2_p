; ModuleID = '../../third_party/private-join-and-compute/src/crypto/big_num.cc'
source_filename = "../../third_party/private-join-and-compute/src/crypto/big_num.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.private_join_and_compute::BigNum" = type { %"class.std::__1::unique_ptr", %struct.bignum_ctx* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %struct.bignum_st* }
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
%struct.bignum_ctx = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i8* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.private_join_and_compute::StatusOr" = type { %"class.private_join_and_compute::Status", %"class.std::__1::unique_ptr.9" }
%"class.private_join_and_compute::Status" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { i64* }
%struct.bn_gencb_st = type { i8*, i32 (i32, i32, %struct.bn_gencb_st*)* }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@.str = private unnamed_addr constant [46 x i8] c"'BN_dup(other.bn_.get())' Must be non nullptr\00", align 1
@.str.1 = private unnamed_addr constant [65 x i8] c"../../third_party/private-join-and-compute/src/crypto/big_num.cc\00", align 1
@.str.2 = private unnamed_addr constant [30 x i8] c"BN_set_u64(bn_.get(), number)\00", align 1
@.str.3 = private unnamed_addr constant [100 x i8] c"nullptr != BN_bin2bn(reinterpret_cast<const unsigned char*>(bytes.data()), bytes.size(), bn_.get())\00", align 1
@.str.4 = private unnamed_addr constant [47 x i8] c"nullptr != BN_bin2bn(bytes, length, bn_.get())\00", align 1
@.str.5 = private unnamed_addr constant [31 x i8] c"'BN_new()' Must be non nullptr\00", align 1
@.str.6 = private unnamed_addr constant [16 x i8] c"IsNonNegative()\00", align 1
@.str.7 = private unnamed_addr constant [36 x i8] c"Cannot serialize a negative BigNum.\00", align 1
@.str.8 = private unnamed_addr constant [30 x i8] c"BigNum has more than 64 bits.\00", align 1
@.str.9 = private unnamed_addr constant [51 x i8] c"1 == BN_add(r.bn_.get(), bn_.get(), val.bn_.get())\00", align 1
@.str.10 = private unnamed_addr constant [60 x i8] c"1 == BN_mul(r.bn_.get(), bn_.get(), val.bn_.get(), bn_ctx_)\00", align 1
@.str.11 = private unnamed_addr constant [51 x i8] c"1 == BN_sub(r.bn_.get(), bn_.get(), val.bn_.get())\00", align 1
@.str.12 = private unnamed_addr constant [71 x i8] c"1 == BN_div(r.bn_.get(), rem.get(), bn_.get(), val.bn_.get(), bn_ctx_)\00", align 1
@.str.13 = private unnamed_addr constant [22 x i8] c"BN_is_zero(rem.get())\00", align 1
@.str.14 = private unnamed_addr constant [70 x i8] c"Use DivAndTruncate() instead of Div() if you want truncated division.\00", align 1
@.str.15 = private unnamed_addr constant [65 x i8] c"1 == BN_exp(r.bn_.get(), bn_.get(), exponent.bn_.get(), bn_ctx_)\00", align 1
@.str.16 = private unnamed_addr constant [60 x i8] c"1 == BN_nnmod(r.bn_.get(), bn_.get(), m.bn_.get(), bn_ctx_)\00", align 1
@.str.17 = private unnamed_addr constant [77 x i8] c"1 == BN_mod_add(r.bn_.get(), bn_.get(), val.bn_.get(), m.bn_.get(), bn_ctx_)\00", align 1
@.str.18 = private unnamed_addr constant [77 x i8] c"1 == BN_mod_sub(r.bn_.get(), bn_.get(), val.bn_.get(), m.bn_.get(), bn_ctx_)\00", align 1
@.str.19 = private unnamed_addr constant [77 x i8] c"1 == BN_mod_mul(r.bn_.get(), bn_.get(), val.bn_.get(), m.bn_.get(), bn_ctx_)\00", align 1
@.str.20 = private unnamed_addr constant [25 x i8] c"exponent.IsNonNegative()\00", align 1
@.str.21 = private unnamed_addr constant [49 x i8] c"Cannot use a negative exponent in BigNum ModExp.\00", align 1
@.str.22 = private unnamed_addr constant [82 x i8] c"1 == BN_mod_exp(r.bn_.get(), bn_.get(), exponent.bn_.get(), m.bn_.get(), bn_ctx_)\00", align 1
@.str.23 = private unnamed_addr constant [62 x i8] c"1 == BN_mod_sqr(r.bn_.get(), bn_.get(), m.bn_.get(), bn_ctx_)\00", align 1
@.str.24 = private unnamed_addr constant [72 x i8] c"nullptr != BN_mod_inverse(r.bn_.get(), bn_.get(), m.bn_.get(), bn_ctx_)\00", align 1
@.str.25 = private unnamed_addr constant [69 x i8] c"nullptr != BN_mod_sqrt(r.bn_.get(), bn_.get(), m.bn_.get(), bn_ctx_)\00", align 1
@.str.26 = private unnamed_addr constant [42 x i8] c"1 == BN_lshift(r.bn_.get(), bn_.get(), n)\00", align 1
@.str.27 = private unnamed_addr constant [42 x i8] c"1 == BN_rshift(r.bn_.get(), bn_.get(), n)\00", align 1
@.str.28 = private unnamed_addr constant [60 x i8] c"1 == BN_gcd(r.bn_.get(), bn_.get(), val.bn_.get(), bn_ctx_)\00", align 1
@.str.30 = private unnamed_addr constant [64 x i8] c"../../third_party/private-join-and-compute/src/chromium_patch.h\00", align 1
@.str.31 = private unnamed_addr constant [2 x i8] c"t\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN24private_join_and_compute6BigNumC1ERKS0_ = hidden unnamed_addr alias void (%"class.private_join_and_compute::BigNum"*, %"class.private_join_and_compute::BigNum"*), void (%"class.private_join_and_compute::BigNum"*, %"class.private_join_and_compute::BigNum"*)* @_ZN24private_join_and_compute6BigNumC2ERKS0_
@_ZN24private_join_and_compute6BigNumC1EOS0_ = hidden unnamed_addr alias void (%"class.private_join_and_compute::BigNum"*, %"class.private_join_and_compute::BigNum"*), void (%"class.private_join_and_compute::BigNum"*, %"class.private_join_and_compute::BigNum"*)* @_ZN24private_join_and_compute6BigNumC2EOS0_
@_ZN24private_join_and_compute6BigNumC1EP10bignum_ctxm = hidden unnamed_addr alias void (%"class.private_join_and_compute::BigNum"*, %struct.bignum_ctx*, i64), void (%"class.private_join_and_compute::BigNum"*, %struct.bignum_ctx*, i64)* @_ZN24private_join_and_compute6BigNumC2EP10bignum_ctxm
@_ZN24private_join_and_compute6BigNumC1EP10bignum_ctxRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE = hidden unnamed_addr alias void (%"class.private_join_and_compute::BigNum"*, %struct.bignum_ctx*, %"class.std::__1::basic_string"*), void (%"class.private_join_and_compute::BigNum"*, %struct.bignum_ctx*, %"class.std::__1::basic_string"*)* @_ZN24private_join_and_compute6BigNumC2EP10bignum_ctxRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE
@_ZN24private_join_and_compute6BigNumC1EP10bignum_ctxPKhi = hidden unnamed_addr alias void (%"class.private_join_and_compute::BigNum"*, %struct.bignum_ctx*, i8*, i32), void (%"class.private_join_and_compute::BigNum"*, %struct.bignum_ctx*, i8*, i32)* @_ZN24private_join_and_compute6BigNumC2EP10bignum_ctxPKhi
@_ZN24private_join_and_compute6BigNumC1EP10bignum_ctx = hidden unnamed_addr alias void (%"class.private_join_and_compute::BigNum"*, %struct.bignum_ctx*), void (%"class.private_join_and_compute::BigNum"*, %struct.bignum_ctx*)* @_ZN24private_join_and_compute6BigNumC2EP10bignum_ctx
@_ZN24private_join_and_compute6BigNumC1EP10bignum_ctxNSt3__110unique_ptrI9bignum_stNS0_9BnDeleterEEE = hidden unnamed_addr alias void (%"class.private_join_and_compute::BigNum"*, %struct.bignum_ctx*, %struct.bignum_st*), void (%"class.private_join_and_compute::BigNum"*, %struct.bignum_ctx*, %struct.bignum_st*)* @_ZN24private_join_and_compute6BigNumC2EP10bignum_ctxNSt3__110unique_ptrI9bignum_stNS0_9BnDeleterEEE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24private_join_and_compute6BigNumC2ERKS0_(%"class.private_join_and_compute::BigNum"* nocapture, %"class.private_join_and_compute::BigNum"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %struct.bignum_st*, %struct.bignum_st** %4, align 8
  %6 = tail call %struct.bignum_st* @BN_dup(%struct.bignum_st* %5) #11
  %7 = icmp eq %struct.bignum_st* %6, null
  br i1 %7, label %8, label %12

8:                                                ; preds = %2
  %9 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.30, i64 0, i64 0), i32 19, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31, i64 0, i64 0)) #11
  %10 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %10, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i64 45) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  br label %12

12:                                               ; preds = %2, %8
  %13 = ptrtoint %struct.bignum_st* %6 to i64
  %14 = bitcast %"class.private_join_and_compute::BigNum"* %0 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 1
  %17 = bitcast %struct.bignum_ctx** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %struct.bignum_ctx** %15 to i64*
  store i64 %18, i64* %19, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %struct.bignum_st* @BN_dup(%struct.bignum_st*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.private_join_and_compute::BigNum"* @_ZN24private_join_and_compute6BigNumaSERKS0_(%"class.private_join_and_compute::BigNum"* returned, %"class.private_join_and_compute::BigNum"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %struct.bignum_st*, %struct.bignum_st** %4, align 8
  %6 = tail call %struct.bignum_st* @BN_dup(%struct.bignum_st* %5) #11
  %7 = icmp eq %struct.bignum_st* %6, null
  br i1 %7, label %8, label %12

8:                                                ; preds = %2
  %9 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.30, i64 0, i64 0), i32 19, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31, i64 0, i64 0)) #11
  %10 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %10, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i64 45) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  br label %12

12:                                               ; preds = %2, %8
  %13 = ptrtoint %struct.bignum_st* %6 to i64
  %14 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %struct.bignum_st*, %struct.bignum_st** %14, align 8
  %16 = bitcast %"class.private_join_and_compute::BigNum"* %0 to i64*
  store i64 %13, i64* %16, align 8
  %17 = icmp eq %struct.bignum_st* %15, null
  br i1 %17, label %19, label %18

18:                                               ; preds = %12
  call void @BN_clear_free(%struct.bignum_st* nonnull %15) #11
  br label %19

19:                                               ; preds = %18, %12
  %20 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 1
  %21 = bitcast %struct.bignum_ctx** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %0, i64 0, i32 1
  %24 = bitcast %struct.bignum_ctx** %23 to i64*
  store i64 %22, i64* %24, align 8
  ret %"class.private_join_and_compute::BigNum"* %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN24private_join_and_compute6BigNumC2EOS0_(%"class.private_join_and_compute::BigNum"* nocapture, %"class.private_join_and_compute::BigNum"* nocapture dereferenceable(16)) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = bitcast %"class.private_join_and_compute::BigNum"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  store %struct.bignum_st* null, %struct.bignum_st** %3, align 8
  %6 = bitcast %"class.private_join_and_compute::BigNum"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 1
  %9 = bitcast %struct.bignum_ctx** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %struct.bignum_ctx** %7 to i64*
  store i64 %10, i64* %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.private_join_and_compute::BigNum"* @_ZN24private_join_and_compute6BigNumaSEOS0_(%"class.private_join_and_compute::BigNum"* returned, %"class.private_join_and_compute::BigNum"* nocapture dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = bitcast %"class.private_join_and_compute::BigNum"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  store %struct.bignum_st* null, %struct.bignum_st** %3, align 8
  %6 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %struct.bignum_st*, %struct.bignum_st** %6, align 8
  %8 = bitcast %"class.private_join_and_compute::BigNum"* %0 to i64*
  store i64 %5, i64* %8, align 8
  %9 = icmp eq %struct.bignum_st* %7, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %2
  tail call void @BN_clear_free(%struct.bignum_st* nonnull %7) #11
  br label %11

11:                                               ; preds = %2, %10
  %12 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 1
  %13 = bitcast %struct.bignum_ctx** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %0, i64 0, i32 1
  %16 = bitcast %struct.bignum_ctx** %15 to i64*
  store i64 %14, i64* %16, align 8
  ret %"class.private_join_and_compute::BigNum"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24private_join_and_compute6BigNumC2EP10bignum_ctxm(%"class.private_join_and_compute::BigNum"* nocapture, %struct.bignum_ctx*, i64) unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  tail call void @_ZN24private_join_and_compute6BigNumC2EP10bignum_ctx(%"class.private_join_and_compute::BigNum"* %0, %struct.bignum_ctx* %1)
  %6 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %struct.bignum_st*, %struct.bignum_st** %6, align 8
  %8 = tail call i32 @BN_set_u64(%struct.bignum_st* %7, i64 %2) #11
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %31

10:                                               ; preds = %3
  %11 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 48, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i64 0, i64 0)) #11
  %12 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  %13 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #11
  call void @_ZN24private_join_and_compute18OpenSSLErrorStringEv(%"class.std::__1::basic_string"* nonnull sret %5) #11
  %14 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = zext i8 %16 to i64
  %23 = select i1 %17, i8* %19, i8* %13
  %24 = select i1 %17, i64 %21, i64 %22
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %12, i8* %23, i64 %24) #11
  %26 = load i8, i8* %15, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %10
  %29 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %29) #12
  br label %30

30:                                               ; preds = %10, %28
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  br label %31

31:                                               ; preds = %3, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24private_join_and_compute6BigNumC2EP10bignum_ctx(%"class.private_join_and_compute::BigNum"* nocapture, %struct.bignum_ctx*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.private_join_and_compute::BigNum"* %0 to i64*
  store i64 0, i64* %4, align 8
  %5 = tail call %struct.bignum_st* @BN_new() #11
  %6 = icmp eq %struct.bignum_st* %5, null
  br i1 %6, label %7, label %11

7:                                                ; preds = %2
  %8 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.30, i64 0, i64 0), i32 19, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31, i64 0, i64 0)) #11
  %9 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  %10 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %9, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.5, i64 0, i64 0), i64 30) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #11
  br label %11

11:                                               ; preds = %2, %7
  %12 = ptrtoint %struct.bignum_st* %5 to i64
  %13 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %struct.bignum_st*, %struct.bignum_st** %13, align 8
  store i64 %12, i64* %4, align 8
  %15 = icmp eq %struct.bignum_st* %14, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %11
  call void @BN_clear_free(%struct.bignum_st* nonnull %14) #11
  br label %17

17:                                               ; preds = %16, %11
  %18 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %0, i64 0, i32 1
  store %struct.bignum_ctx* %1, %struct.bignum_ctx** %18, align 8
  ret void
}

declare i32 @BN_set_u64(%struct.bignum_st*, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

declare void @_ZN24private_join_and_compute18OpenSSLErrorStringEv(%"class.std::__1::basic_string"* sret) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24private_join_and_compute6BigNumC2EP10bignum_ctxRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.private_join_and_compute::BigNum"* nocapture, %struct.bignum_ctx*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  tail call void @_ZN24private_join_and_compute6BigNumC2EP10bignum_ctx(%"class.private_join_and_compute::BigNum"* %0, %struct.bignum_ctx* %1)
  %6 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %15 = zext i8 %8 to i64
  %16 = select i1 %9, i8* %11, i8* %14
  %17 = select i1 %9, i64 %13, i64 %15
  %18 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %struct.bignum_st*, %struct.bignum_st** %18, align 8
  %20 = tail call %struct.bignum_st* @BN_bin2bn(i8* %16, i64 %17, %struct.bignum_st* %19) #11
  %21 = icmp eq %struct.bignum_st* %20, null
  br i1 %21, label %22, label %43

22:                                               ; preds = %3
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 55, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @.str.3, i64 0, i64 0)) #11
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  %25 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #11
  call void @_ZN24private_join_and_compute18OpenSSLErrorStringEv(%"class.std::__1::basic_string"* nonnull sret %5) #11
  %26 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = zext i8 %28 to i64
  %35 = select i1 %29, i8* %31, i8* %25
  %36 = select i1 %29, i64 %33, i64 %34
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %24, i8* %35, i64 %36) #11
  %38 = load i8, i8* %27, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %22
  %41 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %41) #12
  br label %42

42:                                               ; preds = %22, %40
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #11
  br label %43

43:                                               ; preds = %3, %42
  ret void
}

declare %struct.bignum_st* @BN_bin2bn(i8*, i64, %struct.bignum_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24private_join_and_compute6BigNumC2EP10bignum_ctxPKhi(%"class.private_join_and_compute::BigNum"* nocapture, %struct.bignum_ctx*, i8*, i32) unnamed_addr #0 align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  tail call void @_ZN24private_join_and_compute6BigNumC2EP10bignum_ctx(%"class.private_join_and_compute::BigNum"* %0, %struct.bignum_ctx* %1)
  %7 = sext i32 %3 to i64
  %8 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %struct.bignum_st*, %struct.bignum_st** %8, align 8
  %10 = tail call %struct.bignum_st* @BN_bin2bn(i8* %2, i64 %7, %struct.bignum_st* %9) #11
  %11 = icmp eq %struct.bignum_st* %10, null
  br i1 %11, label %12, label %33

12:                                               ; preds = %4
  %13 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 60, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.4, i64 0, i64 0)) #11
  %14 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  %15 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #11
  call void @_ZN24private_join_and_compute18OpenSSLErrorStringEv(%"class.std::__1::basic_string"* nonnull sret %6) #11
  %16 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = zext i8 %18 to i64
  %25 = select i1 %19, i8* %21, i8* %15
  %26 = select i1 %19, i64 %23, i64 %24
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %14, i8* %25, i64 %26) #11
  %28 = load i8, i8* %17, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %12
  %31 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %31) #12
  br label %32

32:                                               ; preds = %12, %30
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #11
  br label %33

33:                                               ; preds = %4, %32
  ret void
}

declare %struct.bignum_st* @BN_new() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24private_join_and_compute6BigNumC2EP10bignum_ctxNSt3__110unique_ptrI9bignum_stNS0_9BnDeleterEEE(%"class.private_join_and_compute::BigNum"* nocapture, %struct.bignum_ctx*, %struct.bignum_st*) unnamed_addr #0 align 2 {
  %4 = ptrtoint %struct.bignum_st* %2 to i64
  %5 = bitcast %"class.private_join_and_compute::BigNum"* %0 to i64*
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %0, i64 0, i32 1
  store %struct.bignum_ctx* %1, %struct.bignum_ctx** %6, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.bignum_st* @_ZNK24private_join_and_compute6BigNum17GetConstBignumPtrEv(%"class.private_join_and_compute::BigNum"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %struct.bignum_st*, %struct.bignum_st** %2, align 8
  ret %struct.bignum_st* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK24private_join_and_compute6BigNum7ToBytesEv(%"class.std::__1::basic_string"* noalias sret, %"class.private_join_and_compute::BigNum"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %struct.bignum_st*, %struct.bignum_st** %5, align 8
  %7 = tail call i32 @BN_is_negative(%struct.bignum_st* %6) #11
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 76, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0)) #11
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  %12 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %11, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7, i64 0, i64 0), i64 35) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #11
  br label %13

13:                                               ; preds = %2, %9
  %14 = load %struct.bignum_st*, %struct.bignum_st** %5, align 8
  %15 = call i32 @BN_num_bytes(%struct.bignum_st* %14) #11
  %16 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %20 = sext i32 %15 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false) #11
  %21 = icmp eq i32 %15, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %13
  %23 = bitcast i8** %18 to i64*
  br label %37

24:                                               ; preds = %13
  %25 = icmp slt i32 %15, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %24
  %27 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %27) #13
  unreachable

28:                                               ; preds = %24
  %29 = call i8* @_Znwm(i64 %20) #12
  store i8* %29, i8** %17, align 8
  %30 = getelementptr inbounds i8, i8* %29, i64 %20
  store i8* %30, i8** %19, align 8
  %31 = bitcast i8** %18 to i64*
  %32 = ptrtoint i8* %29 to i64
  %33 = sub i64 %20, %32
  %34 = getelementptr i8, i8* %29, i64 %33
  %35 = ptrtoint i8* %34 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %29, i8 0, i64 %35, i1 false) #11
  %36 = ptrtoint i8* %30 to i64
  store i64 %36, i64* %31, align 8
  br label %37

37:                                               ; preds = %22, %28
  %38 = phi i64* [ %23, %22 ], [ %31, %28 ]
  %39 = phi i8* [ null, %22 ], [ %29, %28 ]
  %40 = load %struct.bignum_st*, %struct.bignum_st** %5, align 8
  %41 = call i64 @BN_bn2bin(%struct.bignum_st* %40, i8* %39) #11
  %42 = load i8*, i8** %17, align 8
  %43 = load i64, i64* %38, align 8
  %44 = ptrtoint i8* %42 to i64
  %45 = sub i64 %43, %44
  %46 = icmp ugt i64 %45, -17
  br i1 %46, label %47, label %49

47:                                               ; preds = %37
  %48 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %48) #13
  unreachable

49:                                               ; preds = %37
  %50 = icmp ult i64 %45, 23
  br i1 %50, label %59, label %51

51:                                               ; preds = %49
  %52 = add nuw i64 %45, 16
  %53 = and i64 %52, -16
  %54 = call i8* @_Znwm(i64 %53) #12
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %54, i8** %55, align 8
  %56 = or i64 %53, -9223372036854775808
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %45, i64* %58, align 8
  br label %65

59:                                               ; preds = %49
  %60 = trunc i64 %45 to i8
  %61 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  store i8 %60, i8* %62, align 1
  %63 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %64 = icmp eq i64 %45, 0
  br i1 %64, label %67, label %65

65:                                               ; preds = %59, %51
  %66 = phi i8* [ %54, %51 ], [ %63, %59 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %66, i8* align 1 %42, i64 %45, i1 false) #11
  br label %67

67:                                               ; preds = %59, %65
  %68 = phi i8* [ %63, %59 ], [ %66, %65 ]
  %69 = getelementptr inbounds i8, i8* %68, i64 %45
  store i8 0, i8* %69, align 1
  %70 = icmp eq i8* %42, null
  br i1 %70, label %72, label %71

71:                                               ; preds = %67
  store i64 %44, i64* %38, align 8
  call void @_ZdlPv(i8* nonnull %42) #12
  br label %72

72:                                               ; preds = %67, %71
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK24private_join_and_compute6BigNum13IsNonNegativeEv(%"class.private_join_and_compute::BigNum"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %struct.bignum_st*, %struct.bignum_st** %2, align 8
  %4 = tail call i32 @BN_is_negative(%struct.bignum_st* %3) #11
  %5 = icmp eq i32 %4, 0
  ret i1 %5
}

declare i32 @BN_num_bytes(%struct.bignum_st*) local_unnamed_addr #2

declare i64 @BN_bn2bin(%struct.bignum_st*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK24private_join_and_compute6BigNum10ToIntValueEv(%"class.private_join_and_compute::StatusOr"* noalias sret, %"class.private_join_and_compute::BigNum"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.private_join_and_compute::Status", align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.private_join_and_compute::Status", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  store i64 -6148914691236517206, i64* %4, align 8
  %8 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %struct.bignum_st*, %struct.bignum_st** %8, align 8
  %10 = call i32 @BN_get_u64(%struct.bignum_st* %9, i64* nonnull %4) #11
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %55

12:                                               ; preds = %2
  %13 = bitcast %"class.private_join_and_compute::Status"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #11
  %14 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #11
  %15 = call i8* @_Znwm(i64 32) #12
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %15, i8** %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = bitcast i64* %17 to <2 x i64>*
  store <2 x i64> <i64 29, i64 -9223372036854775776>, <2 x i64>* %18, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %15, i8* align 1 getelementptr inbounds ([30 x i8], [30 x i8]* @.str.8, i64 0, i64 0), i64 29, i1 false) #11
  %19 = getelementptr inbounds i8, i8* %15, i64 29
  store i8 0, i8* %19, align 1
  call void @_ZN24private_join_and_compute20InvalidArgumentErrorERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.private_join_and_compute::Status"* nonnull sret %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #11
  %20 = getelementptr inbounds %"class.private_join_and_compute::StatusOr", %"class.private_join_and_compute::StatusOr"* %0, i64 0, i32 0
  call void @_ZN24private_join_and_compute6StatusC1ERKS0_(%"class.private_join_and_compute::Status"* %20, %"class.private_join_and_compute::Status"* nonnull dereferenceable(32) %5) #11
  %21 = getelementptr inbounds %"class.private_join_and_compute::StatusOr", %"class.private_join_and_compute::StatusOr"* %0, i64 0, i32 1
  %22 = bitcast %"class.std::__1::unique_ptr.9"* %21 to i64*
  store i64 0, i64* %22, align 8
  %23 = getelementptr inbounds %"class.private_join_and_compute::Status", %"class.private_join_and_compute::Status"* %5, i64 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %38

26:                                               ; preds = %12
  %27 = bitcast %"class.private_join_and_compute::Status"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #11
  call void @_ZN24private_join_and_compute8internal14StatusOrHelper26HandleInvalidStatusCtorArgEv(%"class.private_join_and_compute::Status"* nonnull sret %3) #11
  %28 = call dereferenceable(32) %"class.private_join_and_compute::Status"* @_ZN24private_join_and_compute6StatusaSERKS0_(%"class.private_join_and_compute::Status"* %20, %"class.private_join_and_compute::Status"* nonnull dereferenceable(32) %3) #11
  %29 = getelementptr inbounds %"class.private_join_and_compute::Status", %"class.private_join_and_compute::Status"* %3, i64 0, i32 1
  %30 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %26
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  call void @_ZdlPv(i8* %36) #12
  br label %37

37:                                               ; preds = %34, %26
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #11
  br label %38

38:                                               ; preds = %12, %37
  %39 = getelementptr inbounds %"class.private_join_and_compute::Status", %"class.private_join_and_compute::Status"* %5, i64 0, i32 1
  %40 = bitcast %"class.std::__1::basic_string"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  call void @_ZdlPv(i8* %46) #12
  br label %47

47:                                               ; preds = %38, %44
  %48 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %47
  %53 = load i8*, i8** %16, align 8
  call void @_ZdlPv(i8* %53) #12
  br label %54

54:                                               ; preds = %47, %52
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #11
  br label %63

55:                                               ; preds = %2
  %56 = getelementptr inbounds %"class.private_join_and_compute::StatusOr", %"class.private_join_and_compute::StatusOr"* %0, i64 0, i32 0
  call void @_ZN24private_join_and_compute6StatusC1Ev(%"class.private_join_and_compute::Status"* %56) #11
  %57 = getelementptr inbounds %"class.private_join_and_compute::StatusOr", %"class.private_join_and_compute::StatusOr"* %0, i64 0, i32 1
  %58 = call i8* @_Znwm(i64 8) #12
  %59 = bitcast i8* %58 to i64*
  %60 = load i64, i64* %4, align 8
  store i64 %60, i64* %59, align 8
  %61 = ptrtoint i8* %58 to i64
  %62 = bitcast %"class.std::__1::unique_ptr.9"* %57 to i64*
  store i64 %61, i64* %62, align 8
  br label %63

63:                                               ; preds = %55, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  ret void
}

declare i32 @BN_get_u64(%struct.bignum_st*, i64*) local_unnamed_addr #2

declare void @_ZN24private_join_and_compute20InvalidArgumentErrorERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.private_join_and_compute::Status"* sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK24private_join_and_compute6BigNum9BitLengthEv(%"class.private_join_and_compute::BigNum"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %struct.bignum_st*, %struct.bignum_st** %2, align 8
  %4 = tail call i32 @BN_num_bits(%struct.bignum_st* %3) #11
  ret i32 %4
}

declare i32 @BN_num_bits(%struct.bignum_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK24private_join_and_compute6BigNum7IsPrimeEd(%"class.private_join_and_compute::BigNum"* nocapture readonly, double) local_unnamed_addr #0 align 2 {
  %3 = tail call double @log(double %1) #11
  %4 = fdiv double %3, 0xBFF62E42FEFA39EF
  %5 = tail call double @llvm.ceil.f64(double %4)
  %6 = fptosi double %5 to i32
  %7 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %struct.bignum_st*, %struct.bignum_st** %7, align 8
  %9 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %0, i64 0, i32 1
  %10 = load %struct.bignum_ctx*, %struct.bignum_ctx** %9, align 8
  %11 = tail call i32 @BN_is_prime_ex(%struct.bignum_st* %8, i32 %6, %struct.bignum_ctx* %10, %struct.bn_gencb_st* null) #11
  %12 = icmp eq i32 %11, 1
  ret i1 %12
}

; Function Attrs: nofree nounwind
declare double @log(double) local_unnamed_addr #6

; Function Attrs: nounwind readnone speculatable
declare double @llvm.ceil.f64(double) #7

declare i32 @BN_is_prime_ex(%struct.bignum_st*, i32, %struct.bignum_ctx*, %struct.bn_gencb_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK24private_join_and_compute6BigNum11IsSafePrimeEd(%"class.private_join_and_compute::BigNum"* nocapture readonly, double) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.private_join_and_compute::BigNum", align 8
  %4 = alloca %"class.private_join_and_compute::BigNum", align 8
  %5 = alloca %"class.private_join_and_compute::BigNum", align 8
  %6 = alloca %"class.private_join_and_compute::BigNum", align 8
  %7 = tail call double @log(double %1) #11
  %8 = fdiv double %7, 0xBFF62E42FEFA39EF
  %9 = tail call double @llvm.ceil.f64(double %8) #11
  %10 = fptosi double %9 to i32
  %11 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %struct.bignum_st*, %struct.bignum_st** %11, align 8
  %13 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %0, i64 0, i32 1
  %14 = load %struct.bignum_ctx*, %struct.bignum_ctx** %13, align 8
  %15 = tail call i32 @BN_is_prime_ex(%struct.bignum_st* %12, i32 %10, %struct.bignum_ctx* %14, %struct.bn_gencb_st* null) #11
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %17, label %52

17:                                               ; preds = %2
  %18 = bitcast %"class.private_join_and_compute::BigNum"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #11
  %19 = bitcast %"class.private_join_and_compute::BigNum"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #11
  %20 = bitcast %"class.private_join_and_compute::BigNum"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #11
  %21 = load %struct.bignum_ctx*, %struct.bignum_ctx** %13, align 8
  call void @_ZN24private_join_and_compute6BigNumC2EP10bignum_ctxm(%"class.private_join_and_compute::BigNum"* nonnull %5, %struct.bignum_ctx* %21, i64 1)
  call void @_ZNK24private_join_and_compute6BigNum3SubERKS0_(%"class.private_join_and_compute::BigNum"* nonnull sret %4, %"class.private_join_and_compute::BigNum"* %0, %"class.private_join_and_compute::BigNum"* nonnull dereferenceable(16) %5) #11
  %22 = bitcast %"class.private_join_and_compute::BigNum"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #11
  %23 = load %struct.bignum_ctx*, %struct.bignum_ctx** %13, align 8
  call void @_ZN24private_join_and_compute6BigNumC2EP10bignum_ctxm(%"class.private_join_and_compute::BigNum"* nonnull %6, %struct.bignum_ctx* %23, i64 2)
  call void @_ZNK24private_join_and_compute6BigNum3DivERKS0_(%"class.private_join_and_compute::BigNum"* nonnull sret %3, %"class.private_join_and_compute::BigNum"* nonnull %4, %"class.private_join_and_compute::BigNum"* nonnull dereferenceable(16) %6) #11
  %24 = tail call double @log(double %1) #11
  %25 = fdiv double %24, 0xBFF62E42FEFA39EF
  %26 = tail call double @llvm.ceil.f64(double %25) #11
  %27 = fptosi double %26 to i32
  %28 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %struct.bignum_st*, %struct.bignum_st** %28, align 8
  %30 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %3, i64 0, i32 1
  %31 = load %struct.bignum_ctx*, %struct.bignum_ctx** %30, align 8
  %32 = tail call i32 @BN_is_prime_ex(%struct.bignum_st* %29, i32 %27, %struct.bignum_ctx* %31, %struct.bn_gencb_st* null) #11
  %33 = icmp eq i32 %32, 1
  store %struct.bignum_st* null, %struct.bignum_st** %28, align 8
  %34 = icmp eq %struct.bignum_st* %29, null
  br i1 %34, label %36, label %35

35:                                               ; preds = %17
  tail call void @BN_clear_free(%struct.bignum_st* nonnull %29) #11
  br label %36

36:                                               ; preds = %17, %35
  %37 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %struct.bignum_st*, %struct.bignum_st** %37, align 8
  store %struct.bignum_st* null, %struct.bignum_st** %37, align 8
  %39 = icmp eq %struct.bignum_st* %38, null
  br i1 %39, label %41, label %40

40:                                               ; preds = %36
  tail call void @BN_clear_free(%struct.bignum_st* nonnull %38) #11
  br label %41

41:                                               ; preds = %36, %40
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #11
  %42 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = load %struct.bignum_st*, %struct.bignum_st** %42, align 8
  store %struct.bignum_st* null, %struct.bignum_st** %42, align 8
  %44 = icmp eq %struct.bignum_st* %43, null
  br i1 %44, label %46, label %45

45:                                               ; preds = %41
  tail call void @BN_clear_free(%struct.bignum_st* nonnull %43) #11
  br label %46

46:                                               ; preds = %41, %45
  %47 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %48 = load %struct.bignum_st*, %struct.bignum_st** %47, align 8
  store %struct.bignum_st* null, %struct.bignum_st** %47, align 8
  %49 = icmp eq %struct.bignum_st* %48, null
  br i1 %49, label %51, label %50

50:                                               ; preds = %46
  tail call void @BN_clear_free(%struct.bignum_st* nonnull %48) #11
  br label %51

51:                                               ; preds = %46, %50
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #11
  br label %52

52:                                               ; preds = %2, %51
  %53 = phi i1 [ %33, %51 ], [ false, %2 ]
  ret i1 %53
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK24private_join_and_compute6BigNum6IsZeroEv(%"class.private_join_and_compute::BigNum"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %struct.bignum_st*, %struct.bignum_st** %2, align 8
  %4 = tail call i32 @BN_is_zero(%struct.bignum_st* %3) #11
  %5 = icmp ne i32 %4, 0
  ret i1 %5
}

declare i32 @BN_is_zero(%struct.bignum_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK24private_join_and_compute6BigNum5IsOneEv(%"class.private_join_and_compute::BigNum"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %struct.bignum_st*, %struct.bignum_st** %2, align 8
  %4 = tail call i32 @BN_is_one(%struct.bignum_st* %3) #11
  %5 = icmp ne i32 %4, 0
  ret i1 %5
}

declare i32 @BN_is_one(%struct.bignum_st*) local_unnamed_addr #2

declare i32 @BN_is_negative(%struct.bignum_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK24private_join_and_compute6BigNum12GetLastNBitsEi(%"class.private_join_and_compute::BigNum"* noalias nocapture sret, %"class.private_join_and_compute::BigNum"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.private_join_and_compute::BigNum"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -86, i64 16, i1 false)
  %8 = load %struct.bignum_st*, %struct.bignum_st** %6, align 8
  %9 = tail call %struct.bignum_st* @BN_dup(%struct.bignum_st* %8) #11
  %10 = icmp eq %struct.bignum_st* %9, null
  br i1 %10, label %11, label %15

11:                                               ; preds = %3
  %12 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.30, i64 0, i64 0), i32 19, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31, i64 0, i64 0)) #11
  %13 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  %14 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %13, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i64 45) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #11
  br label %15

15:                                               ; preds = %3, %11
  %16 = ptrtoint %struct.bignum_st* %9 to i64
  %17 = bitcast %"class.private_join_and_compute::BigNum"* %0 to i64*
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 1
  %19 = bitcast %struct.bignum_ctx** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %struct.bignum_ctx** %5 to i64*
  store i64 %20, i64* %21, align 8
  %22 = call i32 @BN_mask_bits(%struct.bignum_st* %9, i32 %2) #11
  ret void
}

declare i32 @BN_mask_bits(%struct.bignum_st*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK24private_join_and_compute6BigNum8IsBitSetEi(%"class.private_join_and_compute::BigNum"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %struct.bignum_st*, %struct.bignum_st** %3, align 8
  %5 = tail call i32 @BN_is_bit_set(%struct.bignum_st* %4, i32 %1) #11
  %6 = icmp ne i32 %5, 0
  ret i1 %6
}

declare i32 @BN_is_bit_set(%struct.bignum_st*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK24private_join_and_compute6BigNum3NegEv(%"class.private_join_and_compute::BigNum"* noalias nocapture sret, %"class.private_join_and_compute::BigNum"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.private_join_and_compute::BigNum"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 -86, i64 16, i1 false)
  %7 = load %struct.bignum_st*, %struct.bignum_st** %5, align 8
  %8 = tail call %struct.bignum_st* @BN_dup(%struct.bignum_st* %7) #11
  %9 = icmp eq %struct.bignum_st* %8, null
  br i1 %9, label %10, label %14

10:                                               ; preds = %2
  %11 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.30, i64 0, i64 0), i32 19, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31, i64 0, i64 0)) #11
  %12 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  %13 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %12, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i64 45) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  br label %14

14:                                               ; preds = %2, %10
  %15 = ptrtoint %struct.bignum_st* %8 to i64
  %16 = bitcast %"class.private_join_and_compute::BigNum"* %0 to i64*
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 1
  %18 = bitcast %struct.bignum_ctx** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %struct.bignum_ctx** %4 to i64*
  store i64 %19, i64* %20, align 8
  %21 = call i32 @BN_is_negative(%struct.bignum_st* %8) #11
  %22 = icmp eq i32 %21, 0
  %23 = zext i1 %22 to i32
  call void @BN_set_negative(%struct.bignum_st* %8, i32 %23) #11
  ret void
}

declare void @BN_set_negative(%struct.bignum_st*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK24private_join_and_compute6BigNum3AddERKS0_(%"class.private_join_and_compute::BigNum"* noalias nocapture sret, %"class.private_join_and_compute::BigNum"* nocapture readonly, %"class.private_join_and_compute::BigNum"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 1
  %8 = bitcast %"class.private_join_and_compute::BigNum"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load %struct.bignum_ctx*, %struct.bignum_ctx** %7, align 8
  tail call void @_ZN24private_join_and_compute6BigNumC2EP10bignum_ctx(%"class.private_join_and_compute::BigNum"* %0, %struct.bignum_ctx* %9)
  %10 = load %struct.bignum_st*, %struct.bignum_st** %6, align 8
  %11 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %struct.bignum_st*, %struct.bignum_st** %11, align 8
  %13 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %struct.bignum_st*, %struct.bignum_st** %13, align 8
  %15 = tail call i32 @BN_add(%struct.bignum_st* %10, %struct.bignum_st* %12, %struct.bignum_st* %14) #11
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %38, label %17

17:                                               ; preds = %3
  %18 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 131, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.9, i64 0, i64 0)) #11
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  %20 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #11
  call void @_ZN24private_join_and_compute18OpenSSLErrorStringEv(%"class.std::__1::basic_string"* nonnull sret %5) #11
  %21 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = zext i8 %23 to i64
  %30 = select i1 %24, i8* %26, i8* %20
  %31 = select i1 %24, i64 %28, i64 %29
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %19, i8* %30, i64 %31) #11
  %33 = load i8, i8* %22, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %17
  %36 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %36) #12
  br label %37

37:                                               ; preds = %17, %35
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  br label %38

38:                                               ; preds = %3, %37
  ret void
}

declare i32 @BN_add(%struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK24private_join_and_compute6BigNum3MulERKS0_(%"class.private_join_and_compute::BigNum"* noalias nocapture sret, %"class.private_join_and_compute::BigNum"* nocapture readonly, %"class.private_join_and_compute::BigNum"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 1
  %8 = bitcast %"class.private_join_and_compute::BigNum"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load %struct.bignum_ctx*, %struct.bignum_ctx** %7, align 8
  tail call void @_ZN24private_join_and_compute6BigNumC2EP10bignum_ctx(%"class.private_join_and_compute::BigNum"* %0, %struct.bignum_ctx* %9)
  %10 = load %struct.bignum_st*, %struct.bignum_st** %6, align 8
  %11 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %struct.bignum_st*, %struct.bignum_st** %11, align 8
  %13 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %struct.bignum_st*, %struct.bignum_st** %13, align 8
  %15 = load %struct.bignum_ctx*, %struct.bignum_ctx** %7, align 8
  %16 = tail call i32 @BN_mul(%struct.bignum_st* %10, %struct.bignum_st* %12, %struct.bignum_st* %14, %struct.bignum_ctx* %15) #11
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %39, label %18

18:                                               ; preds = %3
  %19 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 137, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.10, i64 0, i64 0)) #11
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  %21 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #11
  call void @_ZN24private_join_and_compute18OpenSSLErrorStringEv(%"class.std::__1::basic_string"* nonnull sret %5) #11
  %22 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %24 to i64
  %31 = select i1 %25, i8* %27, i8* %21
  %32 = select i1 %25, i64 %29, i64 %30
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %20, i8* %31, i64 %32) #11
  %34 = load i8, i8* %23, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %18
  %37 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %37) #12
  br label %38

38:                                               ; preds = %18, %36
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #11
  br label %39

39:                                               ; preds = %3, %38
  ret void
}

declare i32 @BN_mul(%struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_ctx*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK24private_join_and_compute6BigNum3SubERKS0_(%"class.private_join_and_compute::BigNum"* noalias nocapture sret, %"class.private_join_and_compute::BigNum"* nocapture readonly, %"class.private_join_and_compute::BigNum"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 1
  %8 = bitcast %"class.private_join_and_compute::BigNum"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load %struct.bignum_ctx*, %struct.bignum_ctx** %7, align 8
  tail call void @_ZN24private_join_and_compute6BigNumC2EP10bignum_ctx(%"class.private_join_and_compute::BigNum"* %0, %struct.bignum_ctx* %9)
  %10 = load %struct.bignum_st*, %struct.bignum_st** %6, align 8
  %11 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %struct.bignum_st*, %struct.bignum_st** %11, align 8
  %13 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %struct.bignum_st*, %struct.bignum_st** %13, align 8
  %15 = tail call i32 @BN_sub(%struct.bignum_st* %10, %struct.bignum_st* %12, %struct.bignum_st* %14) #11
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %38, label %17

17:                                               ; preds = %3
  %18 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 143, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.11, i64 0, i64 0)) #11
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  %20 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #11
  call void @_ZN24private_join_and_compute18OpenSSLErrorStringEv(%"class.std::__1::basic_string"* nonnull sret %5) #11
  %21 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = zext i8 %23 to i64
  %30 = select i1 %24, i8* %26, i8* %20
  %31 = select i1 %24, i64 %28, i64 %29
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %19, i8* %30, i64 %31) #11
  %33 = load i8, i8* %22, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %17
  %36 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %36) #12
  br label %37

37:                                               ; preds = %17, %35
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  br label %38

38:                                               ; preds = %3, %37
  ret void
}

declare i32 @BN_sub(%struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK24private_join_and_compute6BigNum3DivERKS0_(%"class.private_join_and_compute::BigNum"* noalias nocapture sret, %"class.private_join_and_compute::BigNum"* nocapture readonly, %"class.private_join_and_compute::BigNum"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 1
  %10 = bitcast %"class.private_join_and_compute::BigNum"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 -86, i64 16, i1 false)
  %11 = load %struct.bignum_ctx*, %struct.bignum_ctx** %9, align 8
  tail call void @_ZN24private_join_and_compute6BigNumC2EP10bignum_ctx(%"class.private_join_and_compute::BigNum"* %0, %struct.bignum_ctx* %11)
  %12 = tail call %struct.bignum_st* @BN_new() #11
  %13 = icmp eq %struct.bignum_st* %12, null
  br i1 %13, label %14, label %18

14:                                               ; preds = %3
  %15 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.30, i64 0, i64 0), i32 19, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31, i64 0, i64 0)) #11
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %16, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.5, i64 0, i64 0), i64 30) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  br label %18

18:                                               ; preds = %3, %14
  %19 = load %struct.bignum_st*, %struct.bignum_st** %8, align 8
  %20 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %struct.bignum_st*, %struct.bignum_st** %20, align 8
  %22 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %struct.bignum_st*, %struct.bignum_st** %22, align 8
  %24 = load %struct.bignum_ctx*, %struct.bignum_ctx** %9, align 8
  %25 = call i32 @BN_div(%struct.bignum_st* %19, %struct.bignum_st* %12, %struct.bignum_st* %21, %struct.bignum_st* %23, %struct.bignum_ctx* %24) #11
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %48, label %27

27:                                               ; preds = %18
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 151, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.12, i64 0, i64 0)) #11
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  %30 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #11
  call void @_ZN24private_join_and_compute18OpenSSLErrorStringEv(%"class.std::__1::basic_string"* nonnull sret %6) #11
  %31 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = zext i8 %33 to i64
  %40 = select i1 %34, i8* %36, i8* %30
  %41 = select i1 %34, i64 %38, i64 %39
  %42 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %29, i8* %40, i64 %41) #11
  %43 = load i8, i8* %32, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %27
  %46 = load i8*, i8** %35, align 8
  call void @_ZdlPv(i8* %46) #12
  br label %47

47:                                               ; preds = %27, %45
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %48

48:                                               ; preds = %18, %47
  %49 = call i32 @BN_is_zero(%struct.bignum_st* %12) #11
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %55

51:                                               ; preds = %48
  %52 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 152, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.13, i64 0, i64 0)) #11
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #11
  %54 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %53, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.14, i64 0, i64 0), i64 69) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #11
  br label %55

55:                                               ; preds = %48, %51
  br i1 %13, label %57, label %56

56:                                               ; preds = %55
  call void @BN_clear_free(%struct.bignum_st* nonnull %12) #11
  br label %57

57:                                               ; preds = %55, %56
  ret void
}

declare i32 @BN_div(%struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_ctx*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK24private_join_and_compute6BigNum14DivAndTruncateERKS0_(%"class.private_join_and_compute::BigNum"* noalias nocapture sret, %"class.private_join_and_compute::BigNum"* nocapture readonly, %"class.private_join_and_compute::BigNum"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 1
  %9 = bitcast %"class.private_join_and_compute::BigNum"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load %struct.bignum_ctx*, %struct.bignum_ctx** %8, align 8
  tail call void @_ZN24private_join_and_compute6BigNumC2EP10bignum_ctx(%"class.private_join_and_compute::BigNum"* %0, %struct.bignum_ctx* %10)
  %11 = tail call %struct.bignum_st* @BN_new() #11
  %12 = icmp eq %struct.bignum_st* %11, null
  br i1 %12, label %13, label %17

13:                                               ; preds = %3
  %14 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.30, i64 0, i64 0), i32 19, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31, i64 0, i64 0)) #11
  %15 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %15, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.5, i64 0, i64 0), i64 30) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #11
  br label %17

17:                                               ; preds = %3, %13
  %18 = load %struct.bignum_st*, %struct.bignum_st** %7, align 8
  %19 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %struct.bignum_st*, %struct.bignum_st** %19, align 8
  %21 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %struct.bignum_st*, %struct.bignum_st** %21, align 8
  %23 = load %struct.bignum_ctx*, %struct.bignum_ctx** %8, align 8
  %24 = call i32 @BN_div(%struct.bignum_st* %18, %struct.bignum_st* %11, %struct.bignum_st* %20, %struct.bignum_st* %22, %struct.bignum_ctx* %23) #11
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %47, label %26

26:                                               ; preds = %17
  %27 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 161, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.12, i64 0, i64 0)) #11
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  %29 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #11
  call void @_ZN24private_join_and_compute18OpenSSLErrorStringEv(%"class.std::__1::basic_string"* nonnull sret %6) #11
  %30 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = zext i8 %32 to i64
  %39 = select i1 %33, i8* %35, i8* %29
  %40 = select i1 %33, i64 %37, i64 %38
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %28, i8* %39, i64 %40) #11
  %42 = load i8, i8* %31, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %26
  %45 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %45) #12
  br label %46

46:                                               ; preds = %26, %44
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  br label %47

47:                                               ; preds = %17, %46
  br i1 %12, label %49, label %48

48:                                               ; preds = %47
  call void @BN_clear_free(%struct.bignum_st* nonnull %11) #11
  br label %49

49:                                               ; preds = %47, %48
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK24private_join_and_compute6BigNum9CompareToERKS0_(%"class.private_join_and_compute::BigNum"* nocapture readonly, %"class.private_join_and_compute::BigNum"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %struct.bignum_st*, %struct.bignum_st** %3, align 8
  %5 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %struct.bignum_st*, %struct.bignum_st** %5, align 8
  %7 = tail call i32 @BN_cmp(%struct.bignum_st* %4, %struct.bignum_st* %6) #11
  ret i32 %7
}

declare i32 @BN_cmp(%struct.bignum_st*, %struct.bignum_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK24private_join_and_compute6BigNum3ExpERKS0_(%"class.private_join_and_compute::BigNum"* noalias nocapture sret, %"class.private_join_and_compute::BigNum"* nocapture readonly, %"class.private_join_and_compute::BigNum"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 1
  %8 = bitcast %"class.private_join_and_compute::BigNum"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load %struct.bignum_ctx*, %struct.bignum_ctx** %7, align 8
  tail call void @_ZN24private_join_and_compute6BigNumC2EP10bignum_ctx(%"class.private_join_and_compute::BigNum"* %0, %struct.bignum_ctx* %9)
  %10 = load %struct.bignum_st*, %struct.bignum_st** %6, align 8
  %11 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %struct.bignum_st*, %struct.bignum_st** %11, align 8
  %13 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %struct.bignum_st*, %struct.bignum_st** %13, align 8
  %15 = load %struct.bignum_ctx*, %struct.bignum_ctx** %7, align 8
  %16 = tail call i32 @BN_exp(%struct.bignum_st* %10, %struct.bignum_st* %12, %struct.bignum_st* %14, %struct.bignum_ctx* %15) #11
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %39, label %18

18:                                               ; preds = %3
  %19 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 172, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.15, i64 0, i64 0)) #11
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  %21 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #11
  call void @_ZN24private_join_and_compute18OpenSSLErrorStringEv(%"class.std::__1::basic_string"* nonnull sret %5) #11
  %22 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %24 to i64
  %31 = select i1 %25, i8* %27, i8* %21
  %32 = select i1 %25, i64 %29, i64 %30
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %20, i8* %31, i64 %32) #11
  %34 = load i8, i8* %23, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %18
  %37 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %37) #12
  br label %38

38:                                               ; preds = %18, %36
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #11
  br label %39

39:                                               ; preds = %3, %38
  ret void
}

declare i32 @BN_exp(%struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_ctx*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK24private_join_and_compute6BigNum3ModERKS0_(%"class.private_join_and_compute::BigNum"* noalias nocapture sret, %"class.private_join_and_compute::BigNum"* nocapture readonly, %"class.private_join_and_compute::BigNum"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 1
  %8 = bitcast %"class.private_join_and_compute::BigNum"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load %struct.bignum_ctx*, %struct.bignum_ctx** %7, align 8
  tail call void @_ZN24private_join_and_compute6BigNumC2EP10bignum_ctx(%"class.private_join_and_compute::BigNum"* %0, %struct.bignum_ctx* %9)
  %10 = load %struct.bignum_st*, %struct.bignum_st** %6, align 8
  %11 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %struct.bignum_st*, %struct.bignum_st** %11, align 8
  %13 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %struct.bignum_st*, %struct.bignum_st** %13, align 8
  %15 = load %struct.bignum_ctx*, %struct.bignum_ctx** %7, align 8
  %16 = tail call i32 @BN_nnmod(%struct.bignum_st* %10, %struct.bignum_st* %12, %struct.bignum_st* %14, %struct.bignum_ctx* %15) #11
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %39, label %18

18:                                               ; preds = %3
  %19 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 178, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.16, i64 0, i64 0)) #11
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  %21 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #11
  call void @_ZN24private_join_and_compute18OpenSSLErrorStringEv(%"class.std::__1::basic_string"* nonnull sret %5) #11
  %22 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %24 to i64
  %31 = select i1 %25, i8* %27, i8* %21
  %32 = select i1 %25, i64 %29, i64 %30
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %20, i8* %31, i64 %32) #11
  %34 = load i8, i8* %23, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %18
  %37 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %37) #12
  br label %38

38:                                               ; preds = %18, %36
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #11
  br label %39

39:                                               ; preds = %3, %38
  ret void
}

declare i32 @BN_nnmod(%struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_ctx*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK24private_join_and_compute6BigNum6ModAddERKS0_S2_(%"class.private_join_and_compute::BigNum"* noalias nocapture sret, %"class.private_join_and_compute::BigNum"* nocapture readonly, %"class.private_join_and_compute::BigNum"* nocapture readonly dereferenceable(16), %"class.private_join_and_compute::BigNum"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 1
  %9 = bitcast %"class.private_join_and_compute::BigNum"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load %struct.bignum_ctx*, %struct.bignum_ctx** %8, align 8
  tail call void @_ZN24private_join_and_compute6BigNumC2EP10bignum_ctx(%"class.private_join_and_compute::BigNum"* %0, %struct.bignum_ctx* %10)
  %11 = load %struct.bignum_st*, %struct.bignum_st** %7, align 8
  %12 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %struct.bignum_st*, %struct.bignum_st** %12, align 8
  %14 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %struct.bignum_st*, %struct.bignum_st** %14, align 8
  %16 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %struct.bignum_st*, %struct.bignum_st** %16, align 8
  %18 = load %struct.bignum_ctx*, %struct.bignum_ctx** %8, align 8
  %19 = tail call i32 @BN_mod_add(%struct.bignum_st* %11, %struct.bignum_st* %13, %struct.bignum_st* %15, %struct.bignum_st* %17, %struct.bignum_ctx* %18) #11
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %42, label %21

21:                                               ; preds = %4
  %22 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 185, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.17, i64 0, i64 0)) #11
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  %24 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #11
  call void @_ZN24private_join_and_compute18OpenSSLErrorStringEv(%"class.std::__1::basic_string"* nonnull sret %6) #11
  %25 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = zext i8 %27 to i64
  %34 = select i1 %28, i8* %30, i8* %24
  %35 = select i1 %28, i64 %32, i64 %33
  %36 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %23, i8* %34, i64 %35) #11
  %37 = load i8, i8* %26, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %21
  %40 = load i8*, i8** %29, align 8
  call void @_ZdlPv(i8* %40) #12
  br label %41

41:                                               ; preds = %21, %39
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #11
  br label %42

42:                                               ; preds = %4, %41
  ret void
}

declare i32 @BN_mod_add(%struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_ctx*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK24private_join_and_compute6BigNum6ModSubERKS0_S2_(%"class.private_join_and_compute::BigNum"* noalias nocapture sret, %"class.private_join_and_compute::BigNum"* nocapture readonly, %"class.private_join_and_compute::BigNum"* nocapture readonly dereferenceable(16), %"class.private_join_and_compute::BigNum"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 1
  %9 = bitcast %"class.private_join_and_compute::BigNum"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load %struct.bignum_ctx*, %struct.bignum_ctx** %8, align 8
  tail call void @_ZN24private_join_and_compute6BigNumC2EP10bignum_ctx(%"class.private_join_and_compute::BigNum"* %0, %struct.bignum_ctx* %10)
  %11 = load %struct.bignum_st*, %struct.bignum_st** %7, align 8
  %12 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %struct.bignum_st*, %struct.bignum_st** %12, align 8
  %14 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %struct.bignum_st*, %struct.bignum_st** %14, align 8
  %16 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %struct.bignum_st*, %struct.bignum_st** %16, align 8
  %18 = load %struct.bignum_ctx*, %struct.bignum_ctx** %8, align 8
  %19 = tail call i32 @BN_mod_sub(%struct.bignum_st* %11, %struct.bignum_st* %13, %struct.bignum_st* %15, %struct.bignum_st* %17, %struct.bignum_ctx* %18) #11
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %42, label %21

21:                                               ; preds = %4
  %22 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 192, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.18, i64 0, i64 0)) #11
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  %24 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #11
  call void @_ZN24private_join_and_compute18OpenSSLErrorStringEv(%"class.std::__1::basic_string"* nonnull sret %6) #11
  %25 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = zext i8 %27 to i64
  %34 = select i1 %28, i8* %30, i8* %24
  %35 = select i1 %28, i64 %32, i64 %33
  %36 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %23, i8* %34, i64 %35) #11
  %37 = load i8, i8* %26, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %21
  %40 = load i8*, i8** %29, align 8
  call void @_ZdlPv(i8* %40) #12
  br label %41

41:                                               ; preds = %21, %39
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #11
  br label %42

42:                                               ; preds = %4, %41
  ret void
}

declare i32 @BN_mod_sub(%struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_ctx*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK24private_join_and_compute6BigNum6ModMulERKS0_S2_(%"class.private_join_and_compute::BigNum"* noalias nocapture sret, %"class.private_join_and_compute::BigNum"* nocapture readonly, %"class.private_join_and_compute::BigNum"* nocapture readonly dereferenceable(16), %"class.private_join_and_compute::BigNum"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 1
  %9 = bitcast %"class.private_join_and_compute::BigNum"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load %struct.bignum_ctx*, %struct.bignum_ctx** %8, align 8
  tail call void @_ZN24private_join_and_compute6BigNumC2EP10bignum_ctx(%"class.private_join_and_compute::BigNum"* %0, %struct.bignum_ctx* %10)
  %11 = load %struct.bignum_st*, %struct.bignum_st** %7, align 8
  %12 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %struct.bignum_st*, %struct.bignum_st** %12, align 8
  %14 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %struct.bignum_st*, %struct.bignum_st** %14, align 8
  %16 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %struct.bignum_st*, %struct.bignum_st** %16, align 8
  %18 = load %struct.bignum_ctx*, %struct.bignum_ctx** %8, align 8
  %19 = tail call i32 @BN_mod_mul(%struct.bignum_st* %11, %struct.bignum_st* %13, %struct.bignum_st* %15, %struct.bignum_st* %17, %struct.bignum_ctx* %18) #11
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %42, label %21

21:                                               ; preds = %4
  %22 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 199, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.19, i64 0, i64 0)) #11
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  %24 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #11
  call void @_ZN24private_join_and_compute18OpenSSLErrorStringEv(%"class.std::__1::basic_string"* nonnull sret %6) #11
  %25 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = zext i8 %27 to i64
  %34 = select i1 %28, i8* %30, i8* %24
  %35 = select i1 %28, i64 %32, i64 %33
  %36 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %23, i8* %34, i64 %35) #11
  %37 = load i8, i8* %26, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %21
  %40 = load i8*, i8** %29, align 8
  call void @_ZdlPv(i8* %40) #12
  br label %41

41:                                               ; preds = %21, %39
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #11
  br label %42

42:                                               ; preds = %4, %41
  ret void
}

declare i32 @BN_mod_mul(%struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_ctx*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK24private_join_and_compute6BigNum6ModExpERKS0_S2_(%"class.private_join_and_compute::BigNum"* noalias nocapture sret, %"class.private_join_and_compute::BigNum"* nocapture readonly, %"class.private_join_and_compute::BigNum"* nocapture readonly dereferenceable(16), %"class.private_join_and_compute::BigNum"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %struct.bignum_st*, %struct.bignum_st** %8, align 8
  %10 = tail call i32 @BN_is_negative(%struct.bignum_st* %9) #11
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %16, label %12

12:                                               ; preds = %4
  %13 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 204, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i64 0, i64 0)) #11
  %14 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  %15 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %14, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.21, i64 0, i64 0), i64 48) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #11
  br label %16

16:                                               ; preds = %4, %12
  %17 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 1
  %19 = bitcast %"class.private_join_and_compute::BigNum"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 -86, i64 16, i1 false)
  %20 = load %struct.bignum_ctx*, %struct.bignum_ctx** %18, align 8
  call void @_ZN24private_join_and_compute6BigNumC2EP10bignum_ctx(%"class.private_join_and_compute::BigNum"* %0, %struct.bignum_ctx* %20)
  %21 = load %struct.bignum_st*, %struct.bignum_st** %17, align 8
  %22 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %struct.bignum_st*, %struct.bignum_st** %22, align 8
  %24 = load %struct.bignum_st*, %struct.bignum_st** %8, align 8
  %25 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %struct.bignum_st*, %struct.bignum_st** %25, align 8
  %27 = load %struct.bignum_ctx*, %struct.bignum_ctx** %18, align 8
  %28 = call i32 @BN_mod_exp(%struct.bignum_st* %21, %struct.bignum_st* %23, %struct.bignum_st* %24, %struct.bignum_st* %26, %struct.bignum_ctx* %27) #11
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %51, label %30

30:                                               ; preds = %16
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 208, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.22, i64 0, i64 0)) #11
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  %33 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #11
  call void @_ZN24private_join_and_compute18OpenSSLErrorStringEv(%"class.std::__1::basic_string"* nonnull sret %7) #11
  %34 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = zext i8 %36 to i64
  %43 = select i1 %37, i8* %39, i8* %33
  %44 = select i1 %37, i64 %41, i64 %42
  %45 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %32, i8* %43, i64 %44) #11
  %46 = load i8, i8* %35, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %30
  %49 = load i8*, i8** %38, align 8
  call void @_ZdlPv(i8* %49) #12
  br label %50

50:                                               ; preds = %30, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #11
  br label %51

51:                                               ; preds = %16, %50
  ret void
}

declare i32 @BN_mod_exp(%struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_ctx*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK24private_join_and_compute6BigNum6ModSqrERKS0_(%"class.private_join_and_compute::BigNum"* noalias nocapture sret, %"class.private_join_and_compute::BigNum"* nocapture readonly, %"class.private_join_and_compute::BigNum"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 1
  %8 = bitcast %"class.private_join_and_compute::BigNum"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load %struct.bignum_ctx*, %struct.bignum_ctx** %7, align 8
  tail call void @_ZN24private_join_and_compute6BigNumC2EP10bignum_ctx(%"class.private_join_and_compute::BigNum"* %0, %struct.bignum_ctx* %9)
  %10 = load %struct.bignum_st*, %struct.bignum_st** %6, align 8
  %11 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %struct.bignum_st*, %struct.bignum_st** %11, align 8
  %13 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %struct.bignum_st*, %struct.bignum_st** %13, align 8
  %15 = load %struct.bignum_ctx*, %struct.bignum_ctx** %7, align 8
  %16 = tail call i32 @BN_mod_sqr(%struct.bignum_st* %10, %struct.bignum_st* %12, %struct.bignum_st* %14, %struct.bignum_ctx* %15) #11
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %39, label %18

18:                                               ; preds = %3
  %19 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 214, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.23, i64 0, i64 0)) #11
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  %21 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #11
  call void @_ZN24private_join_and_compute18OpenSSLErrorStringEv(%"class.std::__1::basic_string"* nonnull sret %5) #11
  %22 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %24 to i64
  %31 = select i1 %25, i8* %27, i8* %21
  %32 = select i1 %25, i64 %29, i64 %30
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %20, i8* %31, i64 %32) #11
  %34 = load i8, i8* %23, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %18
  %37 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %37) #12
  br label %38

38:                                               ; preds = %18, %36
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #11
  br label %39

39:                                               ; preds = %3, %38
  ret void
}

declare i32 @BN_mod_sqr(%struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_ctx*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK24private_join_and_compute6BigNum10ModInverseERKS0_(%"class.private_join_and_compute::BigNum"* noalias nocapture sret, %"class.private_join_and_compute::BigNum"* nocapture readonly, %"class.private_join_and_compute::BigNum"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 1
  %8 = bitcast %"class.private_join_and_compute::BigNum"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load %struct.bignum_ctx*, %struct.bignum_ctx** %7, align 8
  tail call void @_ZN24private_join_and_compute6BigNumC2EP10bignum_ctx(%"class.private_join_and_compute::BigNum"* %0, %struct.bignum_ctx* %9)
  %10 = load %struct.bignum_st*, %struct.bignum_st** %6, align 8
  %11 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %struct.bignum_st*, %struct.bignum_st** %11, align 8
  %13 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %struct.bignum_st*, %struct.bignum_st** %13, align 8
  %15 = load %struct.bignum_ctx*, %struct.bignum_ctx** %7, align 8
  %16 = tail call %struct.bignum_st* @BN_mod_inverse(%struct.bignum_st* %10, %struct.bignum_st* %12, %struct.bignum_st* %14, %struct.bignum_ctx* %15) #11
  %17 = icmp eq %struct.bignum_st* %16, null
  br i1 %17, label %18, label %39

18:                                               ; preds = %3
  %19 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 221, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.24, i64 0, i64 0)) #11
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  %21 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #11
  call void @_ZN24private_join_and_compute18OpenSSLErrorStringEv(%"class.std::__1::basic_string"* nonnull sret %5) #11
  %22 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %24 to i64
  %31 = select i1 %25, i8* %27, i8* %21
  %32 = select i1 %25, i64 %29, i64 %30
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %20, i8* %31, i64 %32) #11
  %34 = load i8, i8* %23, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %18
  %37 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %37) #12
  br label %38

38:                                               ; preds = %18, %36
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #11
  br label %39

39:                                               ; preds = %3, %38
  ret void
}

declare %struct.bignum_st* @BN_mod_inverse(%struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_ctx*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK24private_join_and_compute6BigNum7ModSqrtERKS0_(%"class.private_join_and_compute::BigNum"* noalias nocapture sret, %"class.private_join_and_compute::BigNum"* nocapture readonly, %"class.private_join_and_compute::BigNum"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 1
  %8 = bitcast %"class.private_join_and_compute::BigNum"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load %struct.bignum_ctx*, %struct.bignum_ctx** %7, align 8
  tail call void @_ZN24private_join_and_compute6BigNumC2EP10bignum_ctx(%"class.private_join_and_compute::BigNum"* %0, %struct.bignum_ctx* %9)
  %10 = load %struct.bignum_st*, %struct.bignum_st** %6, align 8
  %11 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %struct.bignum_st*, %struct.bignum_st** %11, align 8
  %13 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %struct.bignum_st*, %struct.bignum_st** %13, align 8
  %15 = load %struct.bignum_ctx*, %struct.bignum_ctx** %7, align 8
  %16 = tail call %struct.bignum_st* @BN_mod_sqrt(%struct.bignum_st* %10, %struct.bignum_st* %12, %struct.bignum_st* %14, %struct.bignum_ctx* %15) #11
  %17 = icmp eq %struct.bignum_st* %16, null
  br i1 %17, label %18, label %39

18:                                               ; preds = %3
  %19 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 228, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.25, i64 0, i64 0)) #11
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  %21 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #11
  call void @_ZN24private_join_and_compute18OpenSSLErrorStringEv(%"class.std::__1::basic_string"* nonnull sret %5) #11
  %22 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %24 to i64
  %31 = select i1 %25, i8* %27, i8* %21
  %32 = select i1 %25, i64 %29, i64 %30
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %20, i8* %31, i64 %32) #11
  %34 = load i8, i8* %23, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %18
  %37 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %37) #12
  br label %38

38:                                               ; preds = %18, %36
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #11
  br label %39

39:                                               ; preds = %3, %38
  ret void
}

declare %struct.bignum_st* @BN_mod_sqrt(%struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_ctx*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK24private_join_and_compute6BigNum9ModNegateERKS0_(%"class.private_join_and_compute::BigNum"* noalias nocapture sret, %"class.private_join_and_compute::BigNum"* nocapture readonly, %"class.private_join_and_compute::BigNum"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.private_join_and_compute::BigNum", align 8
  %6 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %struct.bignum_st*, %struct.bignum_st** %6, align 8
  %8 = tail call i32 @BN_is_zero(%struct.bignum_st* %7) #11
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %26, label %10

10:                                               ; preds = %3
  %11 = load %struct.bignum_st*, %struct.bignum_st** %6, align 8
  %12 = tail call %struct.bignum_st* @BN_dup(%struct.bignum_st* %11) #11
  %13 = icmp eq %struct.bignum_st* %12, null
  br i1 %13, label %14, label %18

14:                                               ; preds = %10
  %15 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.30, i64 0, i64 0), i32 19, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31, i64 0, i64 0)) #11
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %16, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i64 45) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  br label %18

18:                                               ; preds = %10, %14
  %19 = ptrtoint %struct.bignum_st* %12 to i64
  %20 = bitcast %"class.private_join_and_compute::BigNum"* %0 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %0, i64 0, i32 1
  %22 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 1
  %23 = bitcast %struct.bignum_ctx** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %struct.bignum_ctx** %21 to i64*
  store i64 %24, i64* %25, align 8
  br label %33

26:                                               ; preds = %3
  %27 = bitcast %"class.private_join_and_compute::BigNum"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #11
  call void @_ZNK24private_join_and_compute6BigNum3ModERKS0_(%"class.private_join_and_compute::BigNum"* nonnull sret %5, %"class.private_join_and_compute::BigNum"* %1, %"class.private_join_and_compute::BigNum"* dereferenceable(16) %2)
  call void @_ZNK24private_join_and_compute6BigNum3SubERKS0_(%"class.private_join_and_compute::BigNum"* sret %0, %"class.private_join_and_compute::BigNum"* %2, %"class.private_join_and_compute::BigNum"* nonnull dereferenceable(16) %5) #11
  %28 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %struct.bignum_st*, %struct.bignum_st** %28, align 8
  store %struct.bignum_st* null, %struct.bignum_st** %28, align 8
  %30 = icmp eq %struct.bignum_st* %29, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %26
  tail call void @BN_clear_free(%struct.bignum_st* nonnull %29) #11
  br label %32

32:                                               ; preds = %26, %31
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #11
  br label %33

33:                                               ; preds = %32, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK24private_join_and_compute6BigNum6LshiftEi(%"class.private_join_and_compute::BigNum"* noalias nocapture sret, %"class.private_join_and_compute::BigNum"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 1
  %8 = bitcast %"class.private_join_and_compute::BigNum"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load %struct.bignum_ctx*, %struct.bignum_ctx** %7, align 8
  tail call void @_ZN24private_join_and_compute6BigNumC2EP10bignum_ctx(%"class.private_join_and_compute::BigNum"* %0, %struct.bignum_ctx* %9)
  %10 = load %struct.bignum_st*, %struct.bignum_st** %6, align 8
  %11 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %struct.bignum_st*, %struct.bignum_st** %11, align 8
  %13 = tail call i32 @BN_lshift(%struct.bignum_st* %10, %struct.bignum_st* %12, i32 %2) #11
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %36, label %15

15:                                               ; preds = %3
  %16 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 241, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.26, i64 0, i64 0)) #11
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  %18 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #11
  call void @_ZN24private_join_and_compute18OpenSSLErrorStringEv(%"class.std::__1::basic_string"* nonnull sret %5) #11
  %19 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = zext i8 %21 to i64
  %28 = select i1 %22, i8* %24, i8* %18
  %29 = select i1 %22, i64 %26, i64 %27
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %17, i8* %28, i64 %29) #11
  %31 = load i8, i8* %20, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %15
  %34 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %34) #12
  br label %35

35:                                               ; preds = %15, %33
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  br label %36

36:                                               ; preds = %3, %35
  ret void
}

declare i32 @BN_lshift(%struct.bignum_st*, %struct.bignum_st*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK24private_join_and_compute6BigNum6RshiftEi(%"class.private_join_and_compute::BigNum"* noalias nocapture sret, %"class.private_join_and_compute::BigNum"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 1
  %8 = bitcast %"class.private_join_and_compute::BigNum"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load %struct.bignum_ctx*, %struct.bignum_ctx** %7, align 8
  tail call void @_ZN24private_join_and_compute6BigNumC2EP10bignum_ctx(%"class.private_join_and_compute::BigNum"* %0, %struct.bignum_ctx* %9)
  %10 = load %struct.bignum_st*, %struct.bignum_st** %6, align 8
  %11 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %struct.bignum_st*, %struct.bignum_st** %11, align 8
  %13 = tail call i32 @BN_rshift(%struct.bignum_st* %10, %struct.bignum_st* %12, i32 %2) #11
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %36, label %15

15:                                               ; preds = %3
  %16 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 247, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.27, i64 0, i64 0)) #11
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  %18 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #11
  call void @_ZN24private_join_and_compute18OpenSSLErrorStringEv(%"class.std::__1::basic_string"* nonnull sret %5) #11
  %19 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = zext i8 %21 to i64
  %28 = select i1 %22, i8* %24, i8* %18
  %29 = select i1 %22, i64 %26, i64 %27
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %17, i8* %28, i64 %29) #11
  %31 = load i8, i8* %20, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %15
  %34 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %34) #12
  br label %35

35:                                               ; preds = %15, %33
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  br label %36

36:                                               ; preds = %3, %35
  ret void
}

declare i32 @BN_rshift(%struct.bignum_st*, %struct.bignum_st*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK24private_join_and_compute6BigNum3GcdERKS0_(%"class.private_join_and_compute::BigNum"* noalias nocapture sret, %"class.private_join_and_compute::BigNum"* nocapture readonly, %"class.private_join_and_compute::BigNum"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 1
  %8 = bitcast %"class.private_join_and_compute::BigNum"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load %struct.bignum_ctx*, %struct.bignum_ctx** %7, align 8
  tail call void @_ZN24private_join_and_compute6BigNumC2EP10bignum_ctx(%"class.private_join_and_compute::BigNum"* %0, %struct.bignum_ctx* %9)
  %10 = load %struct.bignum_st*, %struct.bignum_st** %6, align 8
  %11 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %struct.bignum_st*, %struct.bignum_st** %11, align 8
  %13 = getelementptr inbounds %"class.private_join_and_compute::BigNum", %"class.private_join_and_compute::BigNum"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %struct.bignum_st*, %struct.bignum_st** %13, align 8
  %15 = load %struct.bignum_ctx*, %struct.bignum_ctx** %7, align 8
  %16 = tail call i32 @BN_gcd(%struct.bignum_st* %10, %struct.bignum_st* %12, %struct.bignum_st* %14, %struct.bignum_ctx* %15) #11
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %39, label %18

18:                                               ; preds = %3
  %19 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0), i32 253, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.28, i64 0, i64 0)) #11
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  %21 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #11
  call void @_ZN24private_join_and_compute18OpenSSLErrorStringEv(%"class.std::__1::basic_string"* nonnull sret %5) #11
  %22 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %24 to i64
  %31 = select i1 %25, i8* %27, i8* %21
  %32 = select i1 %25, i64 %29, i64 %30
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %20, i8* %31, i64 %32) #11
  %34 = load i8, i8* %23, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %18
  %37 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %37) #12
  br label %38

38:                                               ; preds = %18, %36
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #11
  br label %39

39:                                               ; preds = %3, %38
  ret void
}

declare i32 @BN_gcd(%struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_ctx*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

declare void @BN_clear_free(%struct.bignum_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #11
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #11
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #11
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #11
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #11
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #11
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #12
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #11
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #11
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #11
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

declare void @_ZN24private_join_and_compute6StatusC1ERKS0_(%"class.private_join_and_compute::Status"*, %"class.private_join_and_compute::Status"* dereferenceable(32)) unnamed_addr #2

declare void @_ZN24private_join_and_compute8internal14StatusOrHelper26HandleInvalidStatusCtorArgEv(%"class.private_join_and_compute::Status"* sret) local_unnamed_addr #2

declare dereferenceable(32) %"class.private_join_and_compute::Status"* @_ZN24private_join_and_compute6StatusaSERKS0_(%"class.private_join_and_compute::Status"*, %"class.private_join_and_compute::Status"* dereferenceable(32)) local_unnamed_addr #2

declare void @_ZN24private_join_and_compute6StatusC1Ev(%"class.private_join_and_compute::Status"*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
