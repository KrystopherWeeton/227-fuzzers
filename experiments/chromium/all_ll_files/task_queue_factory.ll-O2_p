; ModuleID = '../../third_party/webrtc_overrides/task_queue_factory.cc'
source_filename = "../../third_party/webrtc_overrides/task_queue_factory.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webrtc::TaskQueueFactory" = type { i32 (...)** }
%"class.webrtc::TaskQueueBase" = type { i32 (...)** }
%"class.base::TaskTraits" = type { %"struct.base::TaskTraitsExtensionStorage", i8, i8, i8, i8, i8, i8 }
%"struct.base::TaskTraitsExtensionStorage" = type { i8, %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [8 x i8] }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.(anonymous namespace)::WebrtcTaskQueue" = type { %"class.webrtc::TaskQueueBase", %class.scoped_refptr, %class.scoped_refptr.12 }
%class.scoped_refptr = type { %"class.base::SequencedTaskRunner"* }
%class.scoped_refptr.12 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type <{ %"class.base::RefCountedThreadSafe.13", i8, [3 x i8] }>
%"class.base::RefCountedThreadSafe.13" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.38, i8, [7 x i8] }>
%class.scoped_refptr.38 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.39", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.39" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.40" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.43 }
%class.scoped_refptr.43 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.44", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.44" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.webrtc::QueuedTask" = type { i32 (...)** }
%"class.webrtc::TaskQueueBase::CurrentTaskQueueSetter" = type { %"class.webrtc::TaskQueueBase"* }
%"class.(anonymous namespace)::WebrtcTaskQueueFactory" = type { %"class.webrtc::TaskQueueFactory" }

$_ZN4base8internal7InvokerINS0_9BindStateIPFv13scoped_refptrINS_14RefCountedDataIbEEEPNS_13WaitableEventEEJS6_S8_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFv13scoped_refptrINS_14RefCountedDataIbEEEPNS_13WaitableEventEEJS5_S7_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN6webrtc16TaskQueueFactoryD2Ev = comdat any

@_ZTVN12_GLOBAL__N_115WebrtcTaskQueueE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::WebrtcTaskQueue"*)* @_ZN12_GLOBAL__N_115WebrtcTaskQueue6DeleteEv to i8*), i8* bitcast (void (%"class.(anonymous namespace)::WebrtcTaskQueue"*, %"class.webrtc::QueuedTask"*)* @_ZN12_GLOBAL__N_115WebrtcTaskQueue8PostTaskENSt3__110unique_ptrIN6webrtc10QueuedTaskENS1_14default_deleteIS4_EEEE to i8*), i8* bitcast (void (%"class.(anonymous namespace)::WebrtcTaskQueue"*, %"class.webrtc::QueuedTask"*, i32)* @_ZN12_GLOBAL__N_115WebrtcTaskQueue15PostDelayedTaskENSt3__110unique_ptrIN6webrtc10QueuedTaskENS1_14default_deleteIS4_EEEEj to i8*), i8* bitcast (void (%"class.(anonymous namespace)::WebrtcTaskQueue"*)* @_ZN12_GLOBAL__N_115WebrtcTaskQueueD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::WebrtcTaskQueue"*)* @_ZN12_GLOBAL__N_115WebrtcTaskQueueD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [7 x i8] c"Delete\00", align 1
@.str.1 = private unnamed_addr constant [57 x i8] c"../../third_party/webrtc_overrides/task_queue_factory.cc\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"PostTask\00", align 1
@.str.3 = private unnamed_addr constant [16 x i8] c"PostDelayedTask\00", align 1
@_ZTVN12_GLOBAL__N_122WebrtcTaskQueueFactoryE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::TaskQueueFactory"*)* @_ZN6webrtc16TaskQueueFactoryD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::WebrtcTaskQueueFactory"*)* @_ZN12_GLOBAL__N_122WebrtcTaskQueueFactoryD0Ev to i8*), i8* bitcast (%"class.webrtc::TaskQueueBase"* (%"class.(anonymous namespace)::WebrtcTaskQueueFactory"*, i8*, i64, i32)* @_ZNK12_GLOBAL__N_122WebrtcTaskQueueFactory15CreateTaskQueueEN4absl11string_viewEN6webrtc16TaskQueueFactory8PriorityE to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %"class.webrtc::TaskQueueFactory"* @_Z28CreateWebRtcTaskQueueFactoryv() local_unnamed_addr #0 {
  %1 = tail call i8* @_Znwm(i64 8) #7
  %2 = bitcast i8* %1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12_GLOBAL__N_122WebrtcTaskQueueFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = bitcast i8* %1 to %"class.webrtc::TaskQueueFactory"*
  ret %"class.webrtc::TaskQueueFactory"* %3
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.webrtc::TaskQueueBase"* @_Z21CreateWebRtcTaskQueueN6webrtc16TaskQueueFactory8PriorityE(i32) local_unnamed_addr #0 {
  %2 = alloca %"class.base::TaskTraits", align 1
  %3 = tail call i8* @_Znwm(i64 24) #7
  %4 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %2, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %4) #8
  switch i32 %0, label %21 [
    i32 1, label %5
    i32 2, label %12
  ]

5:                                                ; preds = %1
  store i8 0, i8* %4, align 1, !alias.scope !2
  %6 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %2, i64 0, i32 0, i32 1, i32 0, i64 0
  %7 = bitcast i8* %6 to i64*
  store i64 0, i64* %7, align 1, !alias.scope !2
  %8 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %2, i64 0, i32 1
  store i8 2, i8* %8, align 1, !alias.scope !7
  %9 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %2, i64 0, i32 2
  store i8 1, i8* %9, align 1, !alias.scope !7
  %10 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %2, i64 0, i32 3
  %11 = bitcast i8* %10 to i32*
  store i32 0, i32* %11, align 1, !alias.scope !7
  br label %28

12:                                               ; preds = %1
  store i8 0, i8* %4, align 1, !alias.scope !8
  %13 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %2, i64 0, i32 0, i32 1, i32 0, i64 0
  %14 = bitcast i8* %13 to i64*
  store i64 0, i64* %14, align 1, !alias.scope !8
  %15 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %2, i64 0, i32 1
  store i8 0, i8* %15, align 1, !alias.scope !7
  %16 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %2, i64 0, i32 2
  store i8 1, i8* %16, align 1, !alias.scope !7
  %17 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %2, i64 0, i32 3
  store i8 0, i8* %17, align 1, !alias.scope !7
  %18 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %2, i64 0, i32 4
  store i8 1, i8* %18, align 1, !alias.scope !7
  %19 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %2, i64 0, i32 5
  store i8 0, i8* %19, align 1, !alias.scope !7
  %20 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %2, i64 0, i32 6
  store i8 0, i8* %20, align 1, !alias.scope !7
  br label %28

21:                                               ; preds = %1
  store i8 0, i8* %4, align 1, !alias.scope !11
  %22 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %2, i64 0, i32 0, i32 1, i32 0, i64 0
  %23 = bitcast i8* %22 to i64*
  store i64 0, i64* %23, align 1, !alias.scope !11
  %24 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %2, i64 0, i32 1
  store i8 2, i8* %24, align 1, !alias.scope !7
  %25 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %2, i64 0, i32 2
  store i8 1, i8* %25, align 1, !alias.scope !7
  %26 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %2, i64 0, i32 3
  %27 = bitcast i8* %26 to i32*
  store i32 0, i32* %27, align 1, !alias.scope !7
  br label %28

28:                                               ; preds = %5, %12, %21
  %29 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN12_GLOBAL__N_115WebrtcTaskQueueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8
  %30 = call %"class.base::SequencedTaskRunner"* @_ZN4base10ThreadPool25CreateSequencedTaskRunnerERKNS_10TaskTraitsE(%"class.base::TaskTraits"* nonnull dereferenceable(15) %2) #8
  %31 = getelementptr inbounds i8, i8* %3, i64 8
  %32 = bitcast i8* %31 to %"class.base::SequencedTaskRunner"**
  store %"class.base::SequencedTaskRunner"* %30, %"class.base::SequencedTaskRunner"** %32, align 8
  %33 = call i8* @_Znwm(i64 8) #7
  %34 = bitcast i8* %33 to i32*
  store i32 0, i32* %34, align 4
  %35 = getelementptr inbounds i8, i8* %33, i64 4
  store i8 1, i8* %35, align 4
  %36 = getelementptr inbounds i8, i8* %3, i64 16
  %37 = bitcast i8* %36 to i8**
  store i8* %33, i8** %37, align 8
  %38 = atomicrmw add i32* %34, i32 1 monotonic
  %39 = bitcast i8* %3 to %"class.webrtc::TaskQueueBase"*
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %4) #8
  ret %"class.webrtc::TaskQueueBase"* %39
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %"class.base::SequencedTaskRunner"* @_ZN4base10ThreadPool25CreateSequencedTaskRunnerERKNS_10TaskTraitsE(%"class.base::TaskTraits"* dereferenceable(15)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_115WebrtcTaskQueue6DeleteEv(%"class.(anonymous namespace)::WebrtcTaskQueue"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::WaitableEvent", align 8
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = bitcast %"class.base::WaitableEvent"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #8
  %6 = bitcast %"class.base::WaitableEvent"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZN4base13WaitableEventC1ENS0_11ResetPolicyENS0_12InitialStateE(%"class.base::WaitableEvent"* nonnull %2, i32 0, i32 1) #8
  %7 = getelementptr inbounds %"class.(anonymous namespace)::WebrtcTaskQueue", %"class.(anonymous namespace)::WebrtcTaskQueue"* %0, i64 0, i32 1, i32 0
  %8 = bitcast %"class.base::SequencedTaskRunner"** %7 to %"class.base::TaskRunner"**
  %9 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %8, align 8
  %10 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #8
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.1, i64 0, i64 0), i32 54) #8
  %11 = ptrtoint %"class.base::WaitableEvent"* %2 to i64
  %12 = call i8* @_Znwm(i64 56) #7, !noalias !14
  %13 = bitcast i8* %12 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %13, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFv13scoped_refptrINS_14RefCountedDataIbEEEPNS_13WaitableEventEEJS6_S8_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFv13scoped_refptrINS_14RefCountedDataIbEEEPNS_13WaitableEventEEJS5_S7_EE7DestroyEPKNS0_13BindStateBaseE) #8, !noalias !14
  %14 = getelementptr inbounds i8, i8* %12, i64 32
  %15 = bitcast i8* %14 to i64*
  store i64 ptrtoint (void (%"class.base::RefCountedData"*, %"class.base::WaitableEvent"*)* @_ZN12_GLOBAL__N_110DeactivateE13scoped_refptrIN4base14RefCountedDataIbEEEPNS1_13WaitableEventE to i64), i64* %15, align 8, !noalias !14
  %16 = getelementptr inbounds %"class.(anonymous namespace)::WebrtcTaskQueue", %"class.(anonymous namespace)::WebrtcTaskQueue"* %0, i64 0, i32 2, i32 0
  %17 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %16, align 8, !noalias !14
  %18 = getelementptr inbounds i8, i8* %12, i64 40
  %19 = bitcast i8* %18 to %"class.base::RefCountedData"**
  store %"class.base::RefCountedData"* %17, %"class.base::RefCountedData"** %19, align 8, !noalias !14
  %20 = icmp eq %"class.base::RefCountedData"* %17, null
  br i1 %20, label %24, label %21

21:                                               ; preds = %1
  %22 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 1 monotonic, !noalias !14
  br label %24

24:                                               ; preds = %1, %21
  %25 = getelementptr inbounds i8, i8* %12, i64 48
  %26 = bitcast i8* %25 to i64*
  store i64 %11, i64* %26, align 8, !noalias !14
  %27 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %12, i8** %27, align 8, !alias.scope !14
  %28 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %9, %"class.base::Location"* nonnull dereferenceable(32) %3, %"class.base::OnceCallback"* nonnull %4) #8
  %29 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %29) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #8
  notail call void @_ZN4base13WaitableEvent4WaitEv(%"class.base::WaitableEvent"* nonnull %2) #8
  %30 = icmp eq %"class.(anonymous namespace)::WebrtcTaskQueue"* %0, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %24
  %32 = bitcast %"class.(anonymous namespace)::WebrtcTaskQueue"* %0 to void (%"class.(anonymous namespace)::WebrtcTaskQueue"*)***
  %33 = load void (%"class.(anonymous namespace)::WebrtcTaskQueue"*)**, void (%"class.(anonymous namespace)::WebrtcTaskQueue"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.(anonymous namespace)::WebrtcTaskQueue"*)*, void (%"class.(anonymous namespace)::WebrtcTaskQueue"*)** %33, i64 4
  %35 = load void (%"class.(anonymous namespace)::WebrtcTaskQueue"*)*, void (%"class.(anonymous namespace)::WebrtcTaskQueue"*)** %34, align 8
  call void %35(%"class.(anonymous namespace)::WebrtcTaskQueue"* nonnull %0) #8
  br label %36

36:                                               ; preds = %31, %24
  call void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_115WebrtcTaskQueue8PostTaskENSt3__110unique_ptrIN6webrtc10QueuedTaskENS1_14default_deleteIS4_EEEE(%"class.(anonymous namespace)::WebrtcTaskQueue"*, %"class.webrtc::QueuedTask"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = ptrtoint %"class.webrtc::QueuedTask"* %1 to i64
  %6 = getelementptr inbounds %"class.(anonymous namespace)::WebrtcTaskQueue", %"class.(anonymous namespace)::WebrtcTaskQueue"* %0, i64 0, i32 1, i32 0
  %7 = bitcast %"class.base::SequencedTaskRunner"** %6 to %"class.base::TaskRunner"**
  %8 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %7, align 8
  %9 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #8
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.1, i64 0, i64 0), i32 80) #8
  %10 = ptrtoint %"class.(anonymous namespace)::WebrtcTaskQueue"* %0 to i64
  %11 = call i8* @_Znwm(i64 64) #7, !noalias !19
  %12 = bitcast i8* %11 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %12, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvPN12_GLOBAL__N_115WebrtcTaskQueueE13scoped_refptrINS_14RefCountedDataIbEEENSt3__110unique_ptrIN6webrtc10QueuedTaskENSA_14default_deleteISD_EEEEEJNS0_17UnretainedWrapperIS4_EES9_SG_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvPN12_GLOBAL__N_115WebrtcTaskQueueE13scoped_refptrINS_14RefCountedDataIbEEENSt3__110unique_ptrIN6webrtc10QueuedTaskENS9_14default_deleteISC_EEEEEJNS0_17UnretainedWrapperIS3_EES8_SF_EE7DestroyEPKNS0_13BindStateBaseE) #8, !noalias !19
  %13 = getelementptr inbounds i8, i8* %11, i64 32
  %14 = bitcast i8* %13 to i64*
  store i64 ptrtoint (void (%"class.(anonymous namespace)::WebrtcTaskQueue"*, %"class.base::RefCountedData"*, %"class.webrtc::QueuedTask"*)* @_ZN12_GLOBAL__N_115WebrtcTaskQueue7RunTaskEPS0_13scoped_refptrIN4base14RefCountedDataIbEEENSt3__110unique_ptrIN6webrtc10QueuedTaskENS7_14default_deleteISA_EEEE to i64), i64* %14, align 8, !noalias !19
  %15 = getelementptr inbounds i8, i8* %11, i64 40
  %16 = bitcast i8* %15 to i64*
  store i64 %10, i64* %16, align 8, !noalias !19
  %17 = getelementptr inbounds %"class.(anonymous namespace)::WebrtcTaskQueue", %"class.(anonymous namespace)::WebrtcTaskQueue"* %0, i64 0, i32 2, i32 0
  %18 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %17, align 8, !noalias !19
  %19 = getelementptr inbounds i8, i8* %11, i64 48
  %20 = bitcast i8* %19 to %"class.base::RefCountedData"**
  store %"class.base::RefCountedData"* %18, %"class.base::RefCountedData"** %20, align 8, !noalias !19
  %21 = icmp eq %"class.base::RefCountedData"* %18, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw add i32* %23, i32 1 monotonic, !noalias !19
  br label %25

25:                                               ; preds = %22, %2
  %26 = getelementptr inbounds i8, i8* %11, i64 56
  %27 = bitcast i8* %26 to i64*
  store i64 %5, i64* %27, align 8, !noalias !19
  %28 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %11, i8** %28, align 8, !alias.scope !19
  %29 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %8, %"class.base::Location"* nonnull dereferenceable(32) %3, %"class.base::OnceCallback"* nonnull %4) #8
  %30 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %30) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_115WebrtcTaskQueue15PostDelayedTaskENSt3__110unique_ptrIN6webrtc10QueuedTaskENS1_14default_deleteIS4_EEEEj(%"class.(anonymous namespace)::WebrtcTaskQueue"*, %"class.webrtc::QueuedTask"*, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::Location", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = ptrtoint %"class.webrtc::QueuedTask"* %1 to i64
  %7 = getelementptr inbounds %"class.(anonymous namespace)::WebrtcTaskQueue", %"class.(anonymous namespace)::WebrtcTaskQueue"* %0, i64 0, i32 1, i32 0
  %8 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %7, align 8
  %9 = bitcast %"class.base::SequencedTaskRunner"* %8 to %"class.base::TaskRunner"*
  %10 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #8
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.1, i64 0, i64 0), i32 90) #8
  %11 = ptrtoint %"class.(anonymous namespace)::WebrtcTaskQueue"* %0 to i64
  %12 = call i8* @_Znwm(i64 64) #7, !noalias !24
  %13 = bitcast i8* %12 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %13, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvPN12_GLOBAL__N_115WebrtcTaskQueueE13scoped_refptrINS_14RefCountedDataIbEEENSt3__110unique_ptrIN6webrtc10QueuedTaskENSA_14default_deleteISD_EEEEEJNS0_17UnretainedWrapperIS4_EES9_SG_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvPN12_GLOBAL__N_115WebrtcTaskQueueE13scoped_refptrINS_14RefCountedDataIbEEENSt3__110unique_ptrIN6webrtc10QueuedTaskENS9_14default_deleteISC_EEEEEJNS0_17UnretainedWrapperIS3_EES8_SF_EE7DestroyEPKNS0_13BindStateBaseE) #8, !noalias !24
  %14 = getelementptr inbounds i8, i8* %12, i64 32
  %15 = bitcast i8* %14 to i64*
  store i64 ptrtoint (void (%"class.(anonymous namespace)::WebrtcTaskQueue"*, %"class.base::RefCountedData"*, %"class.webrtc::QueuedTask"*)* @_ZN12_GLOBAL__N_115WebrtcTaskQueue7RunTaskEPS0_13scoped_refptrIN4base14RefCountedDataIbEEENSt3__110unique_ptrIN6webrtc10QueuedTaskENS7_14default_deleteISA_EEEE to i64), i64* %15, align 8, !noalias !24
  %16 = getelementptr inbounds i8, i8* %12, i64 40
  %17 = bitcast i8* %16 to i64*
  store i64 %11, i64* %17, align 8, !noalias !24
  %18 = getelementptr inbounds %"class.(anonymous namespace)::WebrtcTaskQueue", %"class.(anonymous namespace)::WebrtcTaskQueue"* %0, i64 0, i32 2, i32 0
  %19 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %18, align 8, !noalias !24
  %20 = getelementptr inbounds i8, i8* %12, i64 48
  %21 = bitcast i8* %20 to %"class.base::RefCountedData"**
  store %"class.base::RefCountedData"* %19, %"class.base::RefCountedData"** %21, align 8, !noalias !24
  %22 = icmp eq %"class.base::RefCountedData"* %19, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 1 monotonic, !noalias !24
  br label %26

26:                                               ; preds = %23, %3
  %27 = getelementptr inbounds i8, i8* %12, i64 56
  %28 = bitcast i8* %27 to i64*
  store i64 %6, i64* %28, align 8, !noalias !24
  %29 = bitcast %"class.base::OnceCallback"* %5 to i8**
  store i8* %12, i8** %29, align 8, !alias.scope !24
  %30 = zext i32 %2 to i64
  %31 = mul nuw nsw i64 %30, 1000
  %32 = bitcast %"class.base::SequencedTaskRunner"* %8 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %33 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %32, align 8
  %34 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %33, align 8
  %35 = call zeroext i1 %34(%"class.base::TaskRunner"* %9, %"class.base::Location"* nonnull dereferenceable(32) %4, %"class.base::OnceCallback"* nonnull %5, i64 %31) #8
  %36 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %36) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_115WebrtcTaskQueueD2Ev(%"class.(anonymous namespace)::WebrtcTaskQueue"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::WebrtcTaskQueue", %"class.(anonymous namespace)::WebrtcTaskQueue"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN12_GLOBAL__N_115WebrtcTaskQueueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::WebrtcTaskQueue", %"class.(anonymous namespace)::WebrtcTaskQueue"* %0, i64 0, i32 2, i32 0
  %4 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %3, align 8
  %5 = icmp eq %"class.base::RefCountedData"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = bitcast %"class.base::RefCountedData"* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #7
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = getelementptr inbounds %"class.(anonymous namespace)::WebrtcTaskQueue", %"class.(anonymous namespace)::WebrtcTaskQueue"* %0, i64 0, i32 1, i32 0
  %14 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %13, align 8
  %15 = icmp eq %"class.base::SequencedTaskRunner"* %14, null
  br i1 %15, label %24, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %14, i64 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw sub i32* %18, i32 1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %24

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %17, i64 -2
  %23 = bitcast %"class.base::RefCountedThreadSafe"* %22 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %23) #8
  br label %24

24:                                               ; preds = %12, %16, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_115WebrtcTaskQueueD0Ev(%"class.(anonymous namespace)::WebrtcTaskQueue"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::WebrtcTaskQueue", %"class.(anonymous namespace)::WebrtcTaskQueue"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN12_GLOBAL__N_115WebrtcTaskQueueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::WebrtcTaskQueue", %"class.(anonymous namespace)::WebrtcTaskQueue"* %0, i64 0, i32 2, i32 0
  %4 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %3, align 8
  %5 = icmp eq %"class.base::RefCountedData"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = bitcast %"class.base::RefCountedData"* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #7
  br label %12

12:                                               ; preds = %10, %6, %1
  %13 = getelementptr inbounds %"class.(anonymous namespace)::WebrtcTaskQueue", %"class.(anonymous namespace)::WebrtcTaskQueue"* %0, i64 0, i32 1, i32 0
  %14 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %13, align 8
  %15 = icmp eq %"class.base::SequencedTaskRunner"* %14, null
  br i1 %15, label %24, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %14, i64 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw sub i32* %18, i32 1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %24

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %17, i64 -2
  %23 = bitcast %"class.base::RefCountedThreadSafe"* %22 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %23) #8
  br label %24

24:                                               ; preds = %12, %16, %21
  %25 = bitcast %"class.(anonymous namespace)::WebrtcTaskQueue"* %0 to i8*
  tail call void @_ZdlPv(i8* %25) #7
  ret void
}

declare void @_ZN4base13WaitableEventC1ENS0_11ResetPolicyENS0_12InitialStateE(%"class.base::WaitableEvent"*, i32, i32) unnamed_addr #3

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #3

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_110DeactivateE13scoped_refptrIN4base14RefCountedDataIbEEEPNS1_13WaitableEventE(%"class.base::RefCountedData"*, %"class.base::WaitableEvent"*) #0 {
  %3 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %0, i64 0, i32 1
  store i8 0, i8* %3, align 4
  tail call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %1) #8
  %4 = icmp eq %"class.base::RefCountedData"* %0, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw sub i32* %6, i32 1 acq_rel
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %11

9:                                                ; preds = %5
  %10 = bitcast %"class.base::RefCountedData"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #7
  br label %11

11:                                               ; preds = %2, %5, %9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

declare void @_ZN4base13WaitableEvent4WaitEv(%"class.base::WaitableEvent"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFv13scoped_refptrINS_14RefCountedDataIbEEEPNS_13WaitableEventEEJS6_S8_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = bitcast %"class.base::internal::BindStateBase"* %2 to void (%"class.base::RefCountedData"*, %"class.base::WaitableEvent"*)**
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %6 = bitcast void ()** %5 to %"class.base::WaitableEvent"**
  %7 = load void (%"class.base::RefCountedData"*, %"class.base::WaitableEvent"*)*, void (%"class.base::RefCountedData"*, %"class.base::WaitableEvent"*)** %3, align 8
  %8 = bitcast void ()** %4 to %"class.base::RefCountedData"**
  %9 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %8, align 8
  store %"class.base::RefCountedData"* null, %"class.base::RefCountedData"** %8, align 8
  %10 = load %"class.base::WaitableEvent"*, %"class.base::WaitableEvent"** %6, align 8
  tail call void %7(%"class.base::RefCountedData"* %9, %"class.base::WaitableEvent"* %10) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFv13scoped_refptrINS_14RefCountedDataIbEEEPNS_13WaitableEventEEJS5_S7_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %16, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::RefCountedData"**
  %6 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %5, align 8
  %7 = icmp eq %"class.base::RefCountedData"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw sub i32* %9, i32 1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %14

12:                                               ; preds = %8
  %13 = bitcast %"class.base::RefCountedData"* %6 to i8*
  tail call void @_ZdlPv(i8* %13) #7
  br label %14

14:                                               ; preds = %3, %8, %12
  %15 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %15) #7
  br label %16

16:                                               ; preds = %14, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_115WebrtcTaskQueue7RunTaskEPS0_13scoped_refptrIN4base14RefCountedDataIbEEENSt3__110unique_ptrIN6webrtc10QueuedTaskENS7_14default_deleteISA_EEEE(%"class.(anonymous namespace)::WebrtcTaskQueue"*, %"class.base::RefCountedData"*, %"class.webrtc::QueuedTask"*) #0 align 2 {
  %4 = alloca %"class.webrtc::TaskQueueBase::CurrentTaskQueueSetter", align 8
  %5 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %1, i64 0, i32 1
  %6 = load i8, i8* %5, align 4, !range !29
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %26, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.webrtc::TaskQueueBase::CurrentTaskQueueSetter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.webrtc::TaskQueueBase::CurrentTaskQueueSetter", %"class.webrtc::TaskQueueBase::CurrentTaskQueueSetter"* %4, i64 0, i32 0
  store %"class.webrtc::TaskQueueBase"* inttoptr (i64 -6148914691236517206 to %"class.webrtc::TaskQueueBase"*), %"class.webrtc::TaskQueueBase"** %10, align 8
  %11 = getelementptr inbounds %"class.(anonymous namespace)::WebrtcTaskQueue", %"class.(anonymous namespace)::WebrtcTaskQueue"* %0, i64 0, i32 0
  call void @_ZN6webrtc13TaskQueueBase22CurrentTaskQueueSetterC1EPS0_(%"class.webrtc::TaskQueueBase::CurrentTaskQueueSetter"* nonnull %4, %"class.webrtc::TaskQueueBase"* %11) #8
  %12 = bitcast %"class.webrtc::QueuedTask"* %2 to i1 (%"class.webrtc::QueuedTask"*)***
  %13 = load i1 (%"class.webrtc::QueuedTask"*)**, i1 (%"class.webrtc::QueuedTask"*)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.webrtc::QueuedTask"*)*, i1 (%"class.webrtc::QueuedTask"*)** %13, i64 2
  %15 = load i1 (%"class.webrtc::QueuedTask"*)*, i1 (%"class.webrtc::QueuedTask"*)** %14, align 8
  %16 = call zeroext i1 %15(%"class.webrtc::QueuedTask"* %2) #8
  %17 = xor i1 %16, true
  %18 = icmp eq %"class.webrtc::QueuedTask"* %2, null
  %19 = or i1 %18, %17
  br i1 %19, label %25, label %20

20:                                               ; preds = %8
  %21 = bitcast %"class.webrtc::QueuedTask"* %2 to void (%"class.webrtc::QueuedTask"*)***
  %22 = load void (%"class.webrtc::QueuedTask"*)**, void (%"class.webrtc::QueuedTask"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.webrtc::QueuedTask"*)*, void (%"class.webrtc::QueuedTask"*)** %22, i64 1
  %24 = load void (%"class.webrtc::QueuedTask"*)*, void (%"class.webrtc::QueuedTask"*)** %23, align 8
  call void %24(%"class.webrtc::QueuedTask"* nonnull %2) #8
  br label %25

25:                                               ; preds = %20, %8
  call void @_ZN6webrtc13TaskQueueBase22CurrentTaskQueueSetterD1Ev(%"class.webrtc::TaskQueueBase::CurrentTaskQueueSetter"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8
  br label %33

26:                                               ; preds = %3
  %27 = icmp eq %"class.webrtc::QueuedTask"* %2, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %26
  %29 = bitcast %"class.webrtc::QueuedTask"* %2 to void (%"class.webrtc::QueuedTask"*)***
  %30 = load void (%"class.webrtc::QueuedTask"*)**, void (%"class.webrtc::QueuedTask"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.webrtc::QueuedTask"*)*, void (%"class.webrtc::QueuedTask"*)** %30, i64 1
  %32 = load void (%"class.webrtc::QueuedTask"*)*, void (%"class.webrtc::QueuedTask"*)** %31, align 8
  tail call void %32(%"class.webrtc::QueuedTask"* nonnull %2) #8
  br label %33

33:                                               ; preds = %25, %26, %28
  %34 = icmp eq %"class.base::RefCountedData"* %1, null
  br i1 %34, label %41, label %35

35:                                               ; preds = %33
  %36 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw sub i32* %36, i32 1 acq_rel
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %41

39:                                               ; preds = %35
  %40 = bitcast %"class.base::RefCountedData"* %1 to i8*
  call void @_ZdlPv(i8* %40) #7
  br label %41

41:                                               ; preds = %33, %35, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIPFvPN12_GLOBAL__N_115WebrtcTaskQueueE13scoped_refptrINS_14RefCountedDataIbEEENSt3__110unique_ptrIN6webrtc10QueuedTaskENSA_14default_deleteISD_EEEEEJNS0_17UnretainedWrapperIS4_EES9_SG_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"* nocapture) #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = bitcast %"class.base::internal::BindStateBase"* %2 to void (%"class.(anonymous namespace)::WebrtcTaskQueue"*, %"class.base::RefCountedData"*, %"class.webrtc::QueuedTask"*)**
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.(anonymous namespace)::WebrtcTaskQueue"**
  %6 = load %"class.(anonymous namespace)::WebrtcTaskQueue"*, %"class.(anonymous namespace)::WebrtcTaskQueue"** %5, align 8
  %7 = load void (%"class.(anonymous namespace)::WebrtcTaskQueue"*, %"class.base::RefCountedData"*, %"class.webrtc::QueuedTask"*)*, void (%"class.(anonymous namespace)::WebrtcTaskQueue"*, %"class.base::RefCountedData"*, %"class.webrtc::QueuedTask"*)** %3, align 8
  %8 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %9 = bitcast void ()** %8 to %"class.base::RefCountedData"**
  %10 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %9, align 8
  store %"class.base::RefCountedData"* null, %"class.base::RefCountedData"** %9, align 8
  %11 = getelementptr inbounds void ()*, void ()** %4, i64 2
  %12 = bitcast void ()** %11 to %"class.webrtc::QueuedTask"**
  %13 = load %"class.webrtc::QueuedTask"*, %"class.webrtc::QueuedTask"** %12, align 8
  store %"class.webrtc::QueuedTask"* null, %"class.webrtc::QueuedTask"** %12, align 8
  tail call void %7(%"class.(anonymous namespace)::WebrtcTaskQueue"* %6, %"class.base::RefCountedData"* %10, %"class.webrtc::QueuedTask"* %13) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIPFvPN12_GLOBAL__N_115WebrtcTaskQueueE13scoped_refptrINS_14RefCountedDataIbEEENSt3__110unique_ptrIN6webrtc10QueuedTaskENS9_14default_deleteISC_EEEEEJNS0_17UnretainedWrapperIS3_EES8_SF_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %26, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.webrtc::QueuedTask"**
  %6 = load %"class.webrtc::QueuedTask"*, %"class.webrtc::QueuedTask"** %5, align 8
  store %"class.webrtc::QueuedTask"* null, %"class.webrtc::QueuedTask"** %5, align 8
  %7 = icmp eq %"class.webrtc::QueuedTask"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.webrtc::QueuedTask"* %6 to void (%"class.webrtc::QueuedTask"*)***
  %10 = load void (%"class.webrtc::QueuedTask"*)**, void (%"class.webrtc::QueuedTask"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.webrtc::QueuedTask"*)*, void (%"class.webrtc::QueuedTask"*)** %10, i64 1
  %12 = load void (%"class.webrtc::QueuedTask"*)*, void (%"class.webrtc::QueuedTask"*)** %11, align 8
  tail call void %12(%"class.webrtc::QueuedTask"* nonnull %6) #8
  br label %13

13:                                               ; preds = %8, %3
  %14 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %15 = bitcast void (%"class.base::internal::BindStateBase"*)** %14 to %"class.base::RefCountedData"**
  %16 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %15, align 8
  %17 = icmp eq %"class.base::RefCountedData"* %16, null
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw sub i32* %19, i32 1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %24

22:                                               ; preds = %18
  %23 = bitcast %"class.base::RefCountedData"* %16 to i8*
  tail call void @_ZdlPv(i8* %23) #7
  br label %24

24:                                               ; preds = %13, %18, %22
  %25 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %25) #7
  br label %26

26:                                               ; preds = %24, %1
  ret void
}

declare void @_ZN6webrtc13TaskQueueBase22CurrentTaskQueueSetterC1EPS0_(%"class.webrtc::TaskQueueBase::CurrentTaskQueueSetter"*, %"class.webrtc::TaskQueueBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6webrtc13TaskQueueBase22CurrentTaskQueueSetterD1Ev(%"class.webrtc::TaskQueueBase::CurrentTaskQueueSetter"*) unnamed_addr #4

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_122WebrtcTaskQueueFactoryD0Ev(%"class.(anonymous namespace)::WebrtcTaskQueueFactory"*) unnamed_addr #6 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::WebrtcTaskQueueFactory"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.webrtc::TaskQueueBase"* @_ZNK12_GLOBAL__N_122WebrtcTaskQueueFactory15CreateTaskQueueEN4absl11string_viewEN6webrtc16TaskQueueFactory8PriorityE(%"class.(anonymous namespace)::WebrtcTaskQueueFactory"* nocapture readnone, i8* nocapture readnone, i64, i32) unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::TaskTraits", align 1
  %6 = tail call i8* @_Znwm(i64 24) #7
  %7 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %5, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %7) #8
  switch i32 %3, label %24 [
    i32 1, label %8
    i32 2, label %15
  ]

8:                                                ; preds = %4
  store i8 0, i8* %7, align 1, !alias.scope !30
  %9 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %5, i64 0, i32 0, i32 1, i32 0, i64 0
  %10 = bitcast i8* %9 to i64*
  store i64 0, i64* %10, align 1, !alias.scope !30
  %11 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %5, i64 0, i32 1
  store i8 2, i8* %11, align 1, !alias.scope !35
  %12 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %5, i64 0, i32 2
  store i8 1, i8* %12, align 1, !alias.scope !35
  %13 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %5, i64 0, i32 3
  %14 = bitcast i8* %13 to i32*
  store i32 0, i32* %14, align 1, !alias.scope !35
  br label %31

15:                                               ; preds = %4
  store i8 0, i8* %7, align 1, !alias.scope !36
  %16 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %5, i64 0, i32 0, i32 1, i32 0, i64 0
  %17 = bitcast i8* %16 to i64*
  store i64 0, i64* %17, align 1, !alias.scope !36
  %18 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %5, i64 0, i32 1
  store i8 0, i8* %18, align 1, !alias.scope !35
  %19 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %5, i64 0, i32 2
  store i8 1, i8* %19, align 1, !alias.scope !35
  %20 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %5, i64 0, i32 3
  store i8 0, i8* %20, align 1, !alias.scope !35
  %21 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %5, i64 0, i32 4
  store i8 1, i8* %21, align 1, !alias.scope !35
  %22 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %5, i64 0, i32 5
  store i8 0, i8* %22, align 1, !alias.scope !35
  %23 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %5, i64 0, i32 6
  store i8 0, i8* %23, align 1, !alias.scope !35
  br label %31

24:                                               ; preds = %4
  store i8 0, i8* %7, align 1, !alias.scope !39
  %25 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %5, i64 0, i32 0, i32 1, i32 0, i64 0
  %26 = bitcast i8* %25 to i64*
  store i64 0, i64* %26, align 1, !alias.scope !39
  %27 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %5, i64 0, i32 1
  store i8 2, i8* %27, align 1, !alias.scope !35
  %28 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %5, i64 0, i32 2
  store i8 1, i8* %28, align 1, !alias.scope !35
  %29 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %5, i64 0, i32 3
  %30 = bitcast i8* %29 to i32*
  store i32 0, i32* %30, align 1, !alias.scope !35
  br label %31

31:                                               ; preds = %8, %15, %24
  %32 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN12_GLOBAL__N_115WebrtcTaskQueueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %33 = call %"class.base::SequencedTaskRunner"* @_ZN4base10ThreadPool25CreateSequencedTaskRunnerERKNS_10TaskTraitsE(%"class.base::TaskTraits"* nonnull dereferenceable(15) %5) #8
  %34 = getelementptr inbounds i8, i8* %6, i64 8
  %35 = bitcast i8* %34 to %"class.base::SequencedTaskRunner"**
  store %"class.base::SequencedTaskRunner"* %33, %"class.base::SequencedTaskRunner"** %35, align 8
  %36 = call i8* @_Znwm(i64 8) #7
  %37 = bitcast i8* %36 to i32*
  store i32 0, i32* %37, align 4
  %38 = getelementptr inbounds i8, i8* %36, i64 4
  store i8 1, i8* %38, align 4
  %39 = getelementptr inbounds i8, i8* %6, i64 16
  %40 = bitcast i8* %39 to i8**
  store i8* %36, i8** %40, align 8
  %41 = atomicrmw add i32* %37, i32 1 monotonic
  %42 = bitcast i8* %6 to %"class.webrtc::TaskQueueBase"*
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %7) #8
  ret %"class.webrtc::TaskQueueBase"* %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc16TaskQueueFactoryD2Ev(%"class.webrtc::TaskQueueFactory"*) unnamed_addr #0 comdat align 2 {
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base13trait_helpers22GetTaskTraitsExtensionIJNS_12TaskPriorityEEEENS_26TaskTraitsExtensionStorageENSt3__117integral_constantIbLb1EEEDpT_: argument 0"}
!4 = distinct !{!4, !"_ZN4base13trait_helpers22GetTaskTraitsExtensionIJNS_12TaskPriorityEEEENS_26TaskTraitsExtensionStorageENSt3__117integral_constantIbLb1EEEDpT_"}
!5 = distinct !{!5, !6, !"_ZN12_GLOBAL__N_124TaskQueuePriority2TraitsEN6webrtc16TaskQueueFactory8PriorityE: argument 0"}
!6 = distinct !{!6, !"_ZN12_GLOBAL__N_124TaskQueuePriority2TraitsEN6webrtc16TaskQueueFactory8PriorityE"}
!7 = !{!5}
!8 = !{!9, !5}
!9 = distinct !{!9, !10, !"_ZN4base13trait_helpers22GetTaskTraitsExtensionIJNS_8MayBlockENS_12TaskPriorityEEEENS_26TaskTraitsExtensionStorageENSt3__117integral_constantIbLb1EEEDpT_: argument 0"}
!10 = distinct !{!10, !"_ZN4base13trait_helpers22GetTaskTraitsExtensionIJNS_8MayBlockENS_12TaskPriorityEEEENS_26TaskTraitsExtensionStorageENSt3__117integral_constantIbLb1EEEDpT_"}
!11 = !{!12, !5}
!12 = distinct !{!12, !13, !"_ZN4base13trait_helpers22GetTaskTraitsExtensionIJEEENS_26TaskTraitsExtensionStorageENSt3__117integral_constantIbLb1EEEDpT_: argument 0"}
!13 = distinct !{!13, !"_ZN4base13trait_helpers22GetTaskTraitsExtensionIJEEENS_26TaskTraitsExtensionStorageENSt3__117integral_constantIbLb1EEEDpT_"}
!14 = !{!15, !17}
!15 = distinct !{!15, !16, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFv13scoped_refptrINS_14RefCountedDataIbEEEPNS_13WaitableEventEEJRKS6_S8_EEEDcOT0_DpOT1_: argument 0"}
!16 = distinct !{!16, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFv13scoped_refptrINS_14RefCountedDataIbEEEPNS_13WaitableEventEEJRKS6_S8_EEEDcOT0_DpOT1_"}
!17 = distinct !{!17, !18, !"_ZN4base8BindOnceIPFv13scoped_refptrINS_14RefCountedDataIbEEEPNS_13WaitableEventEEJRKS4_S6_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!18 = distinct !{!18, !"_ZN4base8BindOnceIPFv13scoped_refptrINS_14RefCountedDataIbEEEPNS_13WaitableEventEEJRKS4_S6_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!19 = !{!20, !22}
!20 = distinct !{!20, !21, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvPN12_GLOBAL__N_115WebrtcTaskQueueE13scoped_refptrINS_14RefCountedDataIbEEENSt3__110unique_ptrIN6webrtc10QueuedTaskENSA_14default_deleteISD_EEEEEJNS0_17UnretainedWrapperIS4_EERKS9_SG_EEEDcOT0_DpOT1_: argument 0"}
!21 = distinct !{!21, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvPN12_GLOBAL__N_115WebrtcTaskQueueE13scoped_refptrINS_14RefCountedDataIbEEENSt3__110unique_ptrIN6webrtc10QueuedTaskENSA_14default_deleteISD_EEEEEJNS0_17UnretainedWrapperIS4_EERKS9_SG_EEEDcOT0_DpOT1_"}
!22 = distinct !{!22, !23, !"_ZN4base8BindOnceIPFvPN12_GLOBAL__N_115WebrtcTaskQueueE13scoped_refptrINS_14RefCountedDataIbEEENSt3__110unique_ptrIN6webrtc10QueuedTaskENS8_14default_deleteISB_EEEEEJNS_8internal17UnretainedWrapperIS2_EERKS7_SE_EEENS_12OnceCallbackINSH_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSO_DpOSP_: argument 0"}
!23 = distinct !{!23, !"_ZN4base8BindOnceIPFvPN12_GLOBAL__N_115WebrtcTaskQueueE13scoped_refptrINS_14RefCountedDataIbEEENSt3__110unique_ptrIN6webrtc10QueuedTaskENS8_14default_deleteISB_EEEEEJNS_8internal17UnretainedWrapperIS2_EERKS7_SE_EEENS_12OnceCallbackINSH_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSO_DpOSP_"}
!24 = !{!25, !27}
!25 = distinct !{!25, !26, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvPN12_GLOBAL__N_115WebrtcTaskQueueE13scoped_refptrINS_14RefCountedDataIbEEENSt3__110unique_ptrIN6webrtc10QueuedTaskENSA_14default_deleteISD_EEEEEJNS0_17UnretainedWrapperIS4_EERKS9_SG_EEEDcOT0_DpOT1_: argument 0"}
!26 = distinct !{!26, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvPN12_GLOBAL__N_115WebrtcTaskQueueE13scoped_refptrINS_14RefCountedDataIbEEENSt3__110unique_ptrIN6webrtc10QueuedTaskENSA_14default_deleteISD_EEEEEJNS0_17UnretainedWrapperIS4_EERKS9_SG_EEEDcOT0_DpOT1_"}
!27 = distinct !{!27, !28, !"_ZN4base8BindOnceIPFvPN12_GLOBAL__N_115WebrtcTaskQueueE13scoped_refptrINS_14RefCountedDataIbEEENSt3__110unique_ptrIN6webrtc10QueuedTaskENS8_14default_deleteISB_EEEEEJNS_8internal17UnretainedWrapperIS2_EERKS7_SE_EEENS_12OnceCallbackINSH_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSO_DpOSP_: argument 0"}
!28 = distinct !{!28, !"_ZN4base8BindOnceIPFvPN12_GLOBAL__N_115WebrtcTaskQueueE13scoped_refptrINS_14RefCountedDataIbEEENSt3__110unique_ptrIN6webrtc10QueuedTaskENS8_14default_deleteISB_EEEEEJNS_8internal17UnretainedWrapperIS2_EERKS7_SE_EEENS_12OnceCallbackINSH_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSO_DpOSP_"}
!29 = !{i8 0, i8 2}
!30 = !{!31, !33}
!31 = distinct !{!31, !32, !"_ZN4base13trait_helpers22GetTaskTraitsExtensionIJNS_12TaskPriorityEEEENS_26TaskTraitsExtensionStorageENSt3__117integral_constantIbLb1EEEDpT_: argument 0"}
!32 = distinct !{!32, !"_ZN4base13trait_helpers22GetTaskTraitsExtensionIJNS_12TaskPriorityEEEENS_26TaskTraitsExtensionStorageENSt3__117integral_constantIbLb1EEEDpT_"}
!33 = distinct !{!33, !34, !"_ZN12_GLOBAL__N_124TaskQueuePriority2TraitsEN6webrtc16TaskQueueFactory8PriorityE: argument 0"}
!34 = distinct !{!34, !"_ZN12_GLOBAL__N_124TaskQueuePriority2TraitsEN6webrtc16TaskQueueFactory8PriorityE"}
!35 = !{!33}
!36 = !{!37, !33}
!37 = distinct !{!37, !38, !"_ZN4base13trait_helpers22GetTaskTraitsExtensionIJNS_8MayBlockENS_12TaskPriorityEEEENS_26TaskTraitsExtensionStorageENSt3__117integral_constantIbLb1EEEDpT_: argument 0"}
!38 = distinct !{!38, !"_ZN4base13trait_helpers22GetTaskTraitsExtensionIJNS_8MayBlockENS_12TaskPriorityEEEENS_26TaskTraitsExtensionStorageENSt3__117integral_constantIbLb1EEEDpT_"}
!39 = !{!40, !33}
!40 = distinct !{!40, !41, !"_ZN4base13trait_helpers22GetTaskTraitsExtensionIJEEENS_26TaskTraitsExtensionStorageENSt3__117integral_constantIbLb1EEEDpT_: argument 0"}
!41 = distinct !{!41, !"_ZN4base13trait_helpers22GetTaskTraitsExtensionIJEEENS_26TaskTraitsExtensionStorageENSt3__117integral_constantIbLb1EEEDpT_"}
