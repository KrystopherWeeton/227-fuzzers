; ModuleID = '../../third_party/pdfium/fpdfsdk/pwl/cpwl_scroll_bar.cpp'
source_filename = "../../third_party/pdfium/fpdfsdk/pwl/cpwl_scroll_bar.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.CPWL_Wnd::CreateParams" = type <{ %class.CFX_FloatRect, %"class.fxcrt::ObservedPtr", %"class.fxcrt::UnownedPtr", %"class.fxcrt::UnownedPtr.4", %"class.fxcrt::ObservedPtr.5", %"class.fxcrt::UnownedPtr.6", i32, %struct.CFX_Color, i32, i32, %struct.CFX_Color, %struct.CFX_Color, i32, float, %struct.CPWL_Dash, [4 x i8], %class.CPWL_MsgControl*, i32, [4 x i8] }>
%class.CFX_FloatRect = type { float, float, float, float }
%"class.fxcrt::ObservedPtr" = type { %"class.fxcrt::Observable::ObserverIface", %"class.CFX_Timer::HandlerIface"* }
%"class.fxcrt::Observable::ObserverIface" = type { i32 (...)** }
%"class.CFX_Timer::HandlerIface" = type { i32 (...)**, %"class.fxcrt::Observable" }
%"class.fxcrt::Observable" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.fxcrt::UnownedPtr" = type { %class.IPWL_SystemHandler* }
%class.IPWL_SystemHandler = type { i32 (...)** }
%"class.fxcrt::UnownedPtr.4" = type { %class.IPVT_FontMap* }
%class.IPVT_FontMap = type opaque
%"class.fxcrt::ObservedPtr.5" = type { %"class.fxcrt::Observable::ObserverIface", %"class.CPWL_Wnd::ProviderIface"* }
%"class.CPWL_Wnd::ProviderIface" = type { i32 (...)**, %"class.fxcrt::Observable" }
%"class.fxcrt::UnownedPtr.6" = type { %"class.CPWL_Wnd::FocusHandlerIface"* }
%"class.CPWL_Wnd::FocusHandlerIface" = type { i32 (...)** }
%struct.CFX_Color = type { i32, float, float, float, float }
%struct.CPWL_Dash = type { i32, i32, i32 }
%class.CPWL_MsgControl = type opaque
%struct.PWL_SCROLL_PRIVATEDATA = type { %struct.PWL_FLOATRANGE, float, float, float, float }
%struct.PWL_FLOATRANGE = type { float, float }
%class.CPWL_ScrollBar = type <{ %class.CPWL_Wnd.base, [5 x i8], %"class.CFX_Timer::CallbackIface", %struct.PWL_SCROLL_INFO, [4 x i8], %"class.fxcrt::UnownedPtr.18", %"class.fxcrt::UnownedPtr.18", %"class.fxcrt::UnownedPtr.18", %"class.std::__1::unique_ptr.19", %struct.PWL_SCROLL_PRIVATEDATA, i8, i8, [2 x i8], float, float, [4 x i8] }>
%class.CPWL_Wnd.base = type <{ i32 (...)**, %"class.fxcrt::Observable", %"class.CPWL_Wnd::CreateParams", %"class.std::__1::unique_ptr", %"class.fxcrt::UnownedPtr.10", %"class.std::__1::vector", %"class.fxcrt::UnownedPtr.17", %class.CFX_FloatRect, %class.CFX_FloatRect, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.IPWL_SystemHandler::PerWindowData"* }
%"class.fxcrt::UnownedPtr.10" = type { %class.CPWL_Wnd* }
%class.CPWL_Wnd = type <{ i32 (...)**, %"class.fxcrt::Observable", %"class.CPWL_Wnd::CreateParams", %"class.std::__1::unique_ptr", %"class.fxcrt::UnownedPtr.10", %"class.std::__1::vector", %"class.fxcrt::UnownedPtr.17", %class.CFX_FloatRect, %class.CFX_FloatRect, i8, i8, i8, [5 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.11"*, %"class.std::__1::unique_ptr.11"*, %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %class.CPWL_Wnd* }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.std::__1::unique_ptr.11"* }
%"class.fxcrt::UnownedPtr.17" = type { %class.CPWL_ScrollBar* }
%"class.CFX_Timer::CallbackIface" = type { i32 (...)** }
%struct.PWL_SCROLL_INFO = type { float, float, float, float, float }
%"class.fxcrt::UnownedPtr.18" = type { %class.CPWL_SBButton* }
%class.CPWL_SBButton = type { %class.CPWL_Wnd.base, i8, i8, [3 x i8] }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %class.CFX_Timer* }
%class.CFX_Timer = type { i32, %"class.fxcrt::ObservedPtr", %"class.fxcrt::UnownedPtr.22" }
%"class.fxcrt::UnownedPtr.22" = type { %"class.CFX_Timer::CallbackIface"* }
%"class.IPWL_SystemHandler::PerWindowData" = type { i32 (...)** }
%"class.fxcrt::ObservedPtr.26" = type { %"class.fxcrt::Observable::ObserverIface", %class.CPWL_ScrollBar* }
%class.CFX_RenderDevice = type { i32 (...)**, %"class.fxcrt::RetainPtr", i32, i32, i32, i32, i8, %struct.FX_RECT, %"class.std::__1::unique_ptr.31" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr.27" }
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %class.CFX_DIBitmap* }
%class.CFX_DIBitmap = type opaque
%struct.FX_RECT = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %class.RenderDeviceDriverIface* }
%class.RenderDeviceDriverIface = type { i32 (...)** }
%class.CFX_Matrix = type { float, float, float, float, float, float }
%class.CFX_PTemplate = type { float, float }
%class.CFX_VTemplate = type opaque
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr.48" }
%"class.fxcrt::RetainPtr.48" = type { %"class.std::__1::unique_ptr.49" }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>

$_ZN5fxcrt11ObservedPtrI14CPWL_ScrollBarED2Ev = comdat any

$_ZN5fxcrt11ObservedPtrI14CPWL_ScrollBarED0Ev = comdat any

$_ZN5fxcrt11ObservedPtrI14CPWL_ScrollBarE21OnObservableDestroyedEv = comdat any

$_ZTVN5fxcrt11ObservedPtrI14CPWL_ScrollBarEE = comdat any

@_ZTV14CPWL_ScrollBar = hidden unnamed_addr constant { [44 x i8*], [5 x i8*] } { [44 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CPWL_ScrollBar*)* @_ZN14CPWL_ScrollBarD2Ev to i8*), i8* bitcast (void (%class.CPWL_ScrollBar*)* @_ZN14CPWL_ScrollBarD0Ev to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*, %class.CFX_FloatRect*)* @_ZN8CPWL_Wnd14InvalidateRectEPK13CFX_FloatRect to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*, i16, i32)* @_ZN8CPWL_Wnd9OnKeyDownEtj to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*, i16, i32)* @_ZN8CPWL_Wnd6OnCharEtj to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)* @_ZN8CPWL_Wnd15OnLButtonDblClkEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CPWL_ScrollBar*, i32, %class.CFX_PTemplate*)* @_ZN14CPWL_ScrollBar13OnLButtonDownEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CPWL_ScrollBar*, i32, %class.CFX_PTemplate*)* @_ZN14CPWL_ScrollBar11OnLButtonUpEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)* @_ZN8CPWL_Wnd13OnRButtonDownEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)* @_ZN8CPWL_Wnd11OnRButtonUpEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)* @_ZN8CPWL_Wnd11OnMouseMoveEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*, %class.CFX_VTemplate*)* @_ZN8CPWL_Wnd12OnMouseWheelEjRK13CFX_PTemplateIfERK13CFX_VTemplateIiE to i8*), i8* bitcast (void (%class.CPWL_ScrollBar*, %struct.PWL_SCROLL_INFO*)* @_ZN14CPWL_ScrollBar13SetScrollInfoERK15PWL_SCROLL_INFO to i8*), i8* bitcast (void (%class.CPWL_ScrollBar*, float)* @_ZN14CPWL_ScrollBar17SetScrollPositionEf to i8*), i8* bitcast (void (%class.CPWL_Wnd*, float)* @_ZN8CPWL_Wnd22ScrollWindowVerticallyEf to i8*), i8* bitcast (void (%class.CPWL_ScrollBar*, %class.CPWL_Wnd*, %class.CFX_PTemplate*)* @_ZN14CPWL_ScrollBar17NotifyLButtonDownEP8CPWL_WndRK13CFX_PTemplateIfE to i8*), i8* bitcast (void (%class.CPWL_ScrollBar*, %class.CPWL_Wnd*, %class.CFX_PTemplate*)* @_ZN14CPWL_ScrollBar15NotifyLButtonUpEP8CPWL_WndRK13CFX_PTemplateIfE to i8*), i8* bitcast (void (%class.CPWL_ScrollBar*, %class.CPWL_Wnd*, %class.CFX_PTemplate*)* @_ZN14CPWL_ScrollBar15NotifyMouseMoveEP8CPWL_WndRK13CFX_PTemplateIfE to i8*), i8* bitcast (void (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd8SetFocusEv to i8*), i8* bitcast (void (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd9KillFocusEv to i8*), i8* bitcast (void (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd9SetCursorEv to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*, i1)* @_ZN8CPWL_Wnd10SetVisibleEb to i8*), i8* bitcast (void (%class.CPWL_Wnd*, float)* @_ZN8CPWL_Wnd11SetFontSizeEf to i8*), i8* bitcast (float (%class.CPWL_Wnd*)* @_ZNK8CPWL_Wnd11GetFontSizeEv to i8*), i8* bitcast (void (%"class.fxcrt::WideString"*, %class.CPWL_Wnd*)* @_ZN8CPWL_Wnd7GetTextEv to i8*), i8* bitcast (void (%"class.fxcrt::WideString"*, %class.CPWL_Wnd*)* @_ZN8CPWL_Wnd15GetSelectedTextEv to i8*), i8* bitcast (void (%class.CPWL_Wnd*, %"class.fxcrt::WideString"*)* @_ZN8CPWL_Wnd16ReplaceSelectionERKN5fxcrt10WideStringE to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd13SelectAllTextEv to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd7CanUndoEv to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd7CanRedoEv to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd4UndoEv to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd4RedoEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.CPWL_Wnd*)* @_ZNK8CPWL_Wnd12GetFocusRectEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.CPWL_Wnd*)* @_ZNK8CPWL_Wnd13GetClientRectEv to i8*), i8* bitcast (void (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd10OnSetFocusEv to i8*), i8* bitcast (void (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd11OnKillFocusEv to i8*), i8* bitcast (void (%class.CPWL_ScrollBar*, %"class.CPWL_Wnd::CreateParams"*)* @_ZN14CPWL_ScrollBar14CreateChildWndERKN8CPWL_Wnd12CreateParamsE to i8*), i8* bitcast (i1 (%class.CPWL_ScrollBar*)* @_ZN14CPWL_ScrollBar13RePosChildWndEv to i8*), i8* bitcast (void (%class.CPWL_ScrollBar*, %class.CFX_RenderDevice*, %class.CFX_Matrix*)* @_ZN14CPWL_ScrollBar18DrawThisAppearanceEP16CFX_RenderDeviceRK10CFX_Matrix to i8*), i8* bitcast (void (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd9OnCreatedEv to i8*), i8* bitcast (void (%class.CPWL_ScrollBar*)* @_ZN14CPWL_ScrollBar9OnDestroyEv to i8*), i8* bitcast (void (%class.CPWL_ScrollBar*)* @_ZN14CPWL_ScrollBar12OnTimerFiredEv to i8*)], [5 x i8*] [i8* inttoptr (i64 -304 to i8*), i8* null, i8* bitcast (void (%class.CPWL_ScrollBar*)* @_ZThn304_N14CPWL_ScrollBarD1Ev to i8*), i8* bitcast (void (%class.CPWL_ScrollBar*)* @_ZThn304_N14CPWL_ScrollBarD0Ev to i8*), i8* bitcast (void (%class.CPWL_ScrollBar*)* @_ZThn304_N14CPWL_ScrollBar12OnTimerFiredEv to i8*)] }, align 8
@__const._ZN14CPWL_ScrollBar13CreateButtonsERKN8CPWL_Wnd12CreateParamsE.scp = private unnamed_addr constant %"class.CPWL_Wnd::CreateParams" <{ %class.CFX_FloatRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.fxcrt::ObservedPtr" { %"class.fxcrt::Observable::ObserverIface" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, %"class.CFX_Timer::HandlerIface"* inttoptr (i64 -6148914691236517206 to %"class.CFX_Timer::HandlerIface"*) }, %"class.fxcrt::UnownedPtr" { %class.IPWL_SystemHandler* inttoptr (i64 -6148914691236517206 to %class.IPWL_SystemHandler*) }, %"class.fxcrt::UnownedPtr.4" { %class.IPVT_FontMap* inttoptr (i64 -6148914691236517206 to %class.IPVT_FontMap*) }, %"class.fxcrt::ObservedPtr.5" { %"class.fxcrt::Observable::ObserverIface" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, %"class.CPWL_Wnd::ProviderIface"* inttoptr (i64 -6148914691236517206 to %"class.CPWL_Wnd::ProviderIface"*) }, %"class.fxcrt::UnownedPtr.6" { %"class.CPWL_Wnd::FocusHandlerIface"* inttoptr (i64 -6148914691236517206 to %"class.CPWL_Wnd::FocusHandlerIface"*) }, i32 -1431655766, %struct.CFX_Color { i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766, i32 -1431655766, %struct.CFX_Color { i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.CFX_Color { i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766, float 0xFFFFFFFFE0000000, %struct.CPWL_Dash { i32 -1431655766, i32 -1431655766, i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA", %class.CPWL_MsgControl* inttoptr (i64 -6148914691236517206 to %class.CPWL_MsgControl*), i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@_ZTVN5fxcrt11ObservedPtrI14CPWL_ScrollBarEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.fxcrt::ObservedPtr.26"*)* @_ZN5fxcrt11ObservedPtrI14CPWL_ScrollBarED2Ev to i8*), i8* bitcast (void (%"class.fxcrt::ObservedPtr.26"*)* @_ZN5fxcrt11ObservedPtrI14CPWL_ScrollBarED0Ev to i8*), i8* bitcast (void (%"class.fxcrt::ObservedPtr.26"*)* @_ZN5fxcrt11ObservedPtrI14CPWL_ScrollBarE21OnObservableDestroyedEv to i8*)] }, comdat, align 8

@_ZN22PWL_SCROLL_PRIVATEDATAC1Ev = hidden unnamed_addr alias void (%struct.PWL_SCROLL_PRIVATEDATA*), void (%struct.PWL_SCROLL_PRIVATEDATA*)* @_ZN22PWL_SCROLL_PRIVATEDATAC2Ev
@_ZN14CPWL_ScrollBarC1ERKN8CPWL_Wnd12CreateParamsENSt3__110unique_ptrIN18IPWL_SystemHandler13PerWindowDataENS4_14default_deleteIS7_EEEE = hidden unnamed_addr alias void (%class.CPWL_ScrollBar*, %"class.CPWL_Wnd::CreateParams"*, %"class.IPWL_SystemHandler::PerWindowData"*), void (%class.CPWL_ScrollBar*, %"class.CPWL_Wnd::CreateParams"*, %"class.IPWL_SystemHandler::PerWindowData"*)* @_ZN14CPWL_ScrollBarC2ERKN8CPWL_Wnd12CreateParamsENSt3__110unique_ptrIN18IPWL_SystemHandler13PerWindowDataENS4_14default_deleteIS7_EEEE
@_ZN14CPWL_ScrollBarD1Ev = hidden unnamed_addr alias void (%class.CPWL_ScrollBar*), void (%class.CPWL_ScrollBar*)* @_ZN14CPWL_ScrollBarD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN14PWL_FLOATRANGE5ResetEv(%struct.PWL_FLOATRANGE* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %struct.PWL_FLOATRANGE, %struct.PWL_FLOATRANGE* %0, i64 0, i32 0
  store float 0.000000e+00, float* %2, align 4
  %3 = getelementptr inbounds %struct.PWL_FLOATRANGE, %struct.PWL_FLOATRANGE* %0, i64 0, i32 1
  store float 0.000000e+00, float* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN14PWL_FLOATRANGE3SetEff(%struct.PWL_FLOATRANGE* nocapture, float, float) local_unnamed_addr #0 align 2 {
  %4 = alloca float, align 4
  %5 = alloca float, align 4
  store float %1, float* %4, align 4
  store float %2, float* %5, align 4
  %6 = fcmp olt float %2, %1
  %7 = select i1 %6, float* %5, float* %4
  %8 = bitcast float* %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %struct.PWL_FLOATRANGE* %0 to i32*
  store i32 %9, i32* %10, align 4
  %11 = fcmp olt float %1, %2
  %12 = select i1 %11, float* %5, float* %4
  %13 = bitcast float* %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %struct.PWL_FLOATRANGE, %struct.PWL_FLOATRANGE* %0, i64 0, i32 1
  %16 = bitcast float* %15 to i32*
  store i32 %14, i32* %16, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK14PWL_FLOATRANGE2InEf(%struct.PWL_FLOATRANGE* nocapture readonly, float) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %struct.PWL_FLOATRANGE, %struct.PWL_FLOATRANGE* %0, i64 0, i32 0
  %4 = load float, float* %3, align 4
  %5 = fcmp olt float %4, %1
  %6 = fsub float %1, %4
  %7 = fpext float %6 to double
  br i1 %5, label %8, label %12

8:                                                ; preds = %2
  %9 = fcmp olt double %7, 1.000000e-04
  %10 = fcmp ogt double %7, -1.000000e-04
  %11 = and i1 %9, %10
  br i1 %11, label %12, label %16

12:                                               ; preds = %2, %8
  %13 = fcmp olt double %7, 1.000000e-04
  %14 = fcmp ogt double %7, -1.000000e-04
  %15 = and i1 %13, %14
  br i1 %15, label %16, label %30

16:                                               ; preds = %12, %8
  %17 = getelementptr inbounds %struct.PWL_FLOATRANGE, %struct.PWL_FLOATRANGE* %0, i64 0, i32 1
  %18 = load float, float* %17, align 4
  %19 = fcmp ogt float %18, %1
  %20 = fsub float %1, %18
  %21 = fpext float %20 to double
  br i1 %19, label %22, label %26

22:                                               ; preds = %16
  %23 = fcmp olt double %21, 1.000000e-04
  %24 = fcmp ogt double %21, -1.000000e-04
  %25 = and i1 %23, %24
  br i1 %25, label %26, label %30

26:                                               ; preds = %16, %22
  %27 = fcmp olt double %21, 1.000000e-04
  br i1 %27, label %28, label %30

28:                                               ; preds = %26
  %29 = fcmp ogt double %21, -1.000000e-04
  br label %30

30:                                               ; preds = %22, %28, %26, %12
  %31 = phi i1 [ false, %12 ], [ true, %22 ], [ false, %26 ], [ %29, %28 ]
  ret i1 %31
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK14PWL_FLOATRANGE8GetWidthEv(%struct.PWL_FLOATRANGE* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %struct.PWL_FLOATRANGE, %struct.PWL_FLOATRANGE* %0, i64 0, i32 1
  %3 = load float, float* %2, align 4
  %4 = getelementptr inbounds %struct.PWL_FLOATRANGE, %struct.PWL_FLOATRANGE* %0, i64 0, i32 0
  %5 = load float, float* %4, align 4
  %6 = fsub float %3, %5
  ret float %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22PWL_SCROLL_PRIVATEDATAC2Ev(%struct.PWL_SCROLL_PRIVATEDATA* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %struct.PWL_SCROLL_PRIVATEDATA, %struct.PWL_SCROLL_PRIVATEDATA* %0, i64 0, i32 3
  %3 = bitcast %struct.PWL_SCROLL_PRIVATEDATA* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 16, i1 false)
  store float 1.000000e+01, float* %2, align 4
  %4 = getelementptr inbounds %struct.PWL_SCROLL_PRIVATEDATA, %struct.PWL_SCROLL_PRIVATEDATA* %0, i64 0, i32 4
  store float 1.000000e+00, float* %4, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN22PWL_SCROLL_PRIVATEDATA7DefaultEv(%struct.PWL_SCROLL_PRIVATEDATA* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %struct.PWL_SCROLL_PRIVATEDATA, %struct.PWL_SCROLL_PRIVATEDATA* %0, i64 0, i32 3
  %3 = bitcast %struct.PWL_SCROLL_PRIVATEDATA* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 16, i1 false)
  store float 1.000000e+01, float* %2, align 4
  %4 = getelementptr inbounds %struct.PWL_SCROLL_PRIVATEDATA, %struct.PWL_SCROLL_PRIVATEDATA* %0, i64 0, i32 4
  store float 1.000000e+00, float* %4, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22PWL_SCROLL_PRIVATEDATA14SetScrollRangeEff(%struct.PWL_SCROLL_PRIVATEDATA* nocapture, float, float) local_unnamed_addr #2 align 2 {
  %4 = alloca float, align 4
  %5 = alloca float, align 4
  %6 = bitcast float* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6)
  %7 = bitcast float* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7)
  store float %1, float* %4, align 4
  store float %2, float* %5, align 4
  %8 = fcmp olt float %2, %1
  %9 = select i1 %8, float* %5, float* %4
  %10 = bitcast float* %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = bitcast %struct.PWL_SCROLL_PRIVATEDATA* %0 to i32*
  store i32 %11, i32* %12, align 4
  %13 = fcmp olt float %1, %2
  %14 = select i1 %13, float* %5, float* %4
  %15 = bitcast float* %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %struct.PWL_SCROLL_PRIVATEDATA, %struct.PWL_SCROLL_PRIVATEDATA* %0, i64 0, i32 0, i32 1
  %18 = bitcast float* %17 to i32*
  store i32 %16, i32* %18, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7)
  %19 = getelementptr inbounds %struct.PWL_SCROLL_PRIVATEDATA, %struct.PWL_SCROLL_PRIVATEDATA* %0, i64 0, i32 2
  %20 = load float, float* %19, align 4
  %21 = bitcast i32 %11 to float
  %22 = fcmp olt float %20, %21
  %23 = bitcast i32 %16 to float
  br i1 %22, label %24, label %32

24:                                               ; preds = %3
  %25 = fsub float %20, %21
  %26 = fpext float %25 to double
  %27 = fcmp olt double %26, 1.000000e-04
  %28 = fcmp ogt double %26, -1.000000e-04
  %29 = and i1 %27, %28
  br i1 %29, label %32, label %30

30:                                               ; preds = %24
  %31 = bitcast float* %19 to i32*
  store i32 %11, i32* %31, align 4
  br label %32

32:                                               ; preds = %24, %30, %3
  %33 = phi float [ %20, %24 ], [ %21, %30 ], [ %20, %3 ]
  %34 = fcmp ogt float %33, %23
  br i1 %34, label %35, label %43

35:                                               ; preds = %32
  %36 = fsub float %33, %23
  %37 = fpext float %36 to double
  %38 = fcmp olt double %37, 1.000000e-04
  %39 = fcmp ogt double %37, -1.000000e-04
  %40 = and i1 %38, %39
  br i1 %40, label %43, label %41

41:                                               ; preds = %35
  %42 = bitcast float* %19 to i32*
  store i32 %16, i32* %42, align 4
  br label %43

43:                                               ; preds = %35, %41, %32
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN22PWL_SCROLL_PRIVATEDATA14SetClientWidthEf(%struct.PWL_SCROLL_PRIVATEDATA* nocapture, float) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.PWL_SCROLL_PRIVATEDATA, %struct.PWL_SCROLL_PRIVATEDATA* %0, i64 0, i32 1
  store float %1, float* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN22PWL_SCROLL_PRIVATEDATA12SetSmallStepEf(%struct.PWL_SCROLL_PRIVATEDATA* nocapture, float) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.PWL_SCROLL_PRIVATEDATA, %struct.PWL_SCROLL_PRIVATEDATA* %0, i64 0, i32 4
  store float %1, float* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN22PWL_SCROLL_PRIVATEDATA10SetBigStepEf(%struct.PWL_SCROLL_PRIVATEDATA* nocapture, float) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.PWL_SCROLL_PRIVATEDATA, %struct.PWL_SCROLL_PRIVATEDATA* %0, i64 0, i32 3
  store float %1, float* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN22PWL_SCROLL_PRIVATEDATA6SetPosEf(%struct.PWL_SCROLL_PRIVATEDATA* nocapture, float) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %struct.PWL_SCROLL_PRIVATEDATA, %struct.PWL_SCROLL_PRIVATEDATA* %0, i64 0, i32 0, i32 0
  %4 = load float, float* %3, align 4
  %5 = fcmp olt float %4, %1
  %6 = fsub float %1, %4
  %7 = fpext float %6 to double
  br i1 %5, label %8, label %12

8:                                                ; preds = %2
  %9 = fcmp olt double %7, 1.000000e-04
  %10 = fcmp ogt double %7, -1.000000e-04
  %11 = and i1 %9, %10
  br i1 %11, label %12, label %16

12:                                               ; preds = %2, %8
  %13 = fcmp olt double %7, 1.000000e-04
  %14 = fcmp ogt double %7, -1.000000e-04
  %15 = and i1 %13, %14
  br i1 %15, label %16, label %32

16:                                               ; preds = %12, %8
  %17 = getelementptr inbounds %struct.PWL_SCROLL_PRIVATEDATA, %struct.PWL_SCROLL_PRIVATEDATA* %0, i64 0, i32 0, i32 1
  %18 = load float, float* %17, align 4
  %19 = fcmp ogt float %18, %1
  %20 = fsub float %1, %18
  %21 = fpext float %20 to double
  br i1 %19, label %22, label %26

22:                                               ; preds = %16
  %23 = fcmp olt double %21, 1.000000e-04
  %24 = fcmp ogt double %21, -1.000000e-04
  %25 = and i1 %23, %24
  br i1 %25, label %26, label %30

26:                                               ; preds = %16, %22
  %27 = fcmp olt double %21, 1.000000e-04
  %28 = fcmp ogt double %21, -1.000000e-04
  %29 = and i1 %27, %28
  br i1 %29, label %30, label %32

30:                                               ; preds = %26, %22
  %31 = getelementptr inbounds %struct.PWL_SCROLL_PRIVATEDATA, %struct.PWL_SCROLL_PRIVATEDATA* %0, i64 0, i32 2
  store float %1, float* %31, align 4
  br label %32

32:                                               ; preds = %26, %12, %30
  %33 = phi i1 [ true, %30 ], [ false, %12 ], [ false, %26 ]
  ret i1 %33
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN22PWL_SCROLL_PRIVATEDATA8AddSmallEv(%struct.PWL_SCROLL_PRIVATEDATA* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %struct.PWL_SCROLL_PRIVATEDATA, %struct.PWL_SCROLL_PRIVATEDATA* %0, i64 0, i32 2
  %3 = load float, float* %2, align 4
  %4 = getelementptr inbounds %struct.PWL_SCROLL_PRIVATEDATA, %struct.PWL_SCROLL_PRIVATEDATA* %0, i64 0, i32 4
  %5 = load float, float* %4, align 4
  %6 = fadd float %3, %5
  %7 = getelementptr inbounds %struct.PWL_SCROLL_PRIVATEDATA, %struct.PWL_SCROLL_PRIVATEDATA* %0, i64 0, i32 0, i32 0
  %8 = load float, float* %7, align 4
  %9 = fcmp olt float %8, %6
  %10 = fsub float %6, %8
  %11 = fpext float %10 to double
  br i1 %9, label %12, label %16

12:                                               ; preds = %1
  %13 = fcmp olt double %11, 1.000000e-04
  %14 = fcmp ogt double %11, -1.000000e-04
  %15 = and i1 %13, %14
  br i1 %15, label %16, label %23

16:                                               ; preds = %1, %12
  %17 = fcmp olt double %11, 1.000000e-04
  %18 = fcmp ogt double %11, -1.000000e-04
  %19 = and i1 %17, %18
  br i1 %19, label %23, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.PWL_SCROLL_PRIVATEDATA, %struct.PWL_SCROLL_PRIVATEDATA* %0, i64 0, i32 0, i32 1
  %22 = load float, float* %21, align 4
  br label %38

23:                                               ; preds = %16, %12
  %24 = getelementptr inbounds %struct.PWL_SCROLL_PRIVATEDATA, %struct.PWL_SCROLL_PRIVATEDATA* %0, i64 0, i32 0, i32 1
  %25 = load float, float* %24, align 4
  %26 = fcmp ogt float %25, %6
  %27 = fsub float %6, %25
  %28 = fpext float %27 to double
  br i1 %26, label %29, label %33

29:                                               ; preds = %23
  %30 = fcmp olt double %28, 1.000000e-04
  %31 = fcmp ogt double %28, -1.000000e-04
  %32 = and i1 %30, %31
  br i1 %32, label %33, label %37

33:                                               ; preds = %23, %29
  %34 = fcmp olt double %28, 1.000000e-04
  %35 = fcmp ogt double %28, -1.000000e-04
  %36 = and i1 %34, %35
  br i1 %36, label %37, label %38

37:                                               ; preds = %29, %33
  store float %6, float* %2, align 4
  br label %58

38:                                               ; preds = %20, %33
  %39 = phi float [ %22, %20 ], [ %25, %33 ]
  %40 = fcmp olt float %8, %39
  %41 = fsub float %39, %8
  %42 = fpext float %41 to double
  br i1 %40, label %43, label %47

43:                                               ; preds = %38
  %44 = fcmp olt double %42, 1.000000e-04
  %45 = fcmp ogt double %42, -1.000000e-04
  %46 = and i1 %44, %45
  br i1 %46, label %47, label %51

47:                                               ; preds = %38, %43
  %48 = fcmp olt double %42, 1.000000e-04
  %49 = fcmp ogt double %42, -1.000000e-04
  %50 = and i1 %48, %49
  br i1 %50, label %51, label %58

51:                                               ; preds = %43, %47
  %52 = fsub float %39, %39
  %53 = fpext float %52 to double
  %54 = fcmp olt double %53, 1.000000e-04
  %55 = fcmp ogt double %53, -1.000000e-04
  %56 = and i1 %54, %55
  br i1 %56, label %57, label %58

57:                                               ; preds = %51
  store float %39, float* %2, align 4
  br label %58

58:                                               ; preds = %57, %51, %47, %37
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN22PWL_SCROLL_PRIVATEDATA8SubSmallEv(%struct.PWL_SCROLL_PRIVATEDATA* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %struct.PWL_SCROLL_PRIVATEDATA, %struct.PWL_SCROLL_PRIVATEDATA* %0, i64 0, i32 2
  %3 = load float, float* %2, align 4
  %4 = getelementptr inbounds %struct.PWL_SCROLL_PRIVATEDATA, %struct.PWL_SCROLL_PRIVATEDATA* %0, i64 0, i32 4
  %5 = load float, float* %4, align 4
  %6 = fsub float %3, %5
  %7 = getelementptr inbounds %struct.PWL_SCROLL_PRIVATEDATA, %struct.PWL_SCROLL_PRIVATEDATA* %0, i64 0, i32 0, i32 0
  %8 = load float, float* %7, align 4
  %9 = fcmp olt float %8, %6
  %10 = fsub float %6, %8
  %11 = fpext float %10 to double
  br i1 %9, label %12, label %16

12:                                               ; preds = %1
  %13 = fcmp olt double %11, 1.000000e-04
  %14 = fcmp ogt double %11, -1.000000e-04
  %15 = and i1 %13, %14
  br i1 %15, label %16, label %20

16:                                               ; preds = %1, %12
  %17 = fcmp olt double %11, 1.000000e-04
  %18 = fcmp ogt double %11, -1.000000e-04
  %19 = and i1 %17, %18
  br i1 %19, label %20, label %35

20:                                               ; preds = %16, %12
  %21 = getelementptr inbounds %struct.PWL_SCROLL_PRIVATEDATA, %struct.PWL_SCROLL_PRIVATEDATA* %0, i64 0, i32 0, i32 1
  %22 = load float, float* %21, align 4
  %23 = fcmp ogt float %22, %6
  %24 = fsub float %6, %22
  %25 = fpext float %24 to double
  br i1 %23, label %26, label %30

26:                                               ; preds = %20
  %27 = fcmp olt double %25, 1.000000e-04
  %28 = fcmp ogt double %25, -1.000000e-04
  %29 = and i1 %27, %28
  br i1 %29, label %30, label %34

30:                                               ; preds = %20, %26
  %31 = fcmp olt double %25, 1.000000e-04
  %32 = fcmp ogt double %25, -1.000000e-04
  %33 = and i1 %31, %32
  br i1 %33, label %34, label %35

34:                                               ; preds = %26, %30
  store float %6, float* %2, align 4
  br label %56

35:                                               ; preds = %30, %16
  %36 = fsub float %8, %8
  %37 = fpext float %36 to double
  %38 = fcmp olt double %37, 1.000000e-04
  %39 = fcmp ogt double %37, -1.000000e-04
  %40 = and i1 %38, %39
  br i1 %40, label %41, label %56

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.PWL_SCROLL_PRIVATEDATA, %struct.PWL_SCROLL_PRIVATEDATA* %0, i64 0, i32 0, i32 1
  %43 = load float, float* %42, align 4
  %44 = fcmp ogt float %43, %8
  %45 = fsub float %8, %43
  %46 = fpext float %45 to double
  br i1 %44, label %47, label %51

47:                                               ; preds = %41
  %48 = fcmp olt double %46, 1.000000e-04
  %49 = fcmp ogt double %46, -1.000000e-04
  %50 = and i1 %48, %49
  br i1 %50, label %51, label %55

51:                                               ; preds = %41, %47
  %52 = fcmp olt double %46, 1.000000e-04
  %53 = fcmp ogt double %46, -1.000000e-04
  %54 = and i1 %52, %53
  br i1 %54, label %55, label %56

55:                                               ; preds = %51, %47
  store float %8, float* %2, align 4
  br label %56

56:                                               ; preds = %55, %51, %35, %34
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN22PWL_SCROLL_PRIVATEDATA6AddBigEv(%struct.PWL_SCROLL_PRIVATEDATA* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %struct.PWL_SCROLL_PRIVATEDATA, %struct.PWL_SCROLL_PRIVATEDATA* %0, i64 0, i32 2
  %3 = load float, float* %2, align 4
  %4 = getelementptr inbounds %struct.PWL_SCROLL_PRIVATEDATA, %struct.PWL_SCROLL_PRIVATEDATA* %0, i64 0, i32 3
  %5 = load float, float* %4, align 4
  %6 = fadd float %3, %5
  %7 = getelementptr inbounds %struct.PWL_SCROLL_PRIVATEDATA, %struct.PWL_SCROLL_PRIVATEDATA* %0, i64 0, i32 0, i32 0
  %8 = load float, float* %7, align 4
  %9 = fcmp olt float %8, %6
  %10 = fsub float %6, %8
  %11 = fpext float %10 to double
  br i1 %9, label %12, label %16

12:                                               ; preds = %1
  %13 = fcmp olt double %11, 1.000000e-04
  %14 = fcmp ogt double %11, -1.000000e-04
  %15 = and i1 %13, %14
  br i1 %15, label %16, label %23

16:                                               ; preds = %1, %12
  %17 = fcmp olt double %11, 1.000000e-04
  %18 = fcmp ogt double %11, -1.000000e-04
  %19 = and i1 %17, %18
  br i1 %19, label %23, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.PWL_SCROLL_PRIVATEDATA, %struct.PWL_SCROLL_PRIVATEDATA* %0, i64 0, i32 0, i32 1
  %22 = load float, float* %21, align 4
  br label %38

23:                                               ; preds = %16, %12
  %24 = getelementptr inbounds %struct.PWL_SCROLL_PRIVATEDATA, %struct.PWL_SCROLL_PRIVATEDATA* %0, i64 0, i32 0, i32 1
  %25 = load float, float* %24, align 4
  %26 = fcmp ogt float %25, %6
  %27 = fsub float %6, %25
  %28 = fpext float %27 to double
  br i1 %26, label %29, label %33

29:                                               ; preds = %23
  %30 = fcmp olt double %28, 1.000000e-04
  %31 = fcmp ogt double %28, -1.000000e-04
  %32 = and i1 %30, %31
  br i1 %32, label %33, label %37

33:                                               ; preds = %23, %29
  %34 = fcmp olt double %28, 1.000000e-04
  %35 = fcmp ogt double %28, -1.000000e-04
  %36 = and i1 %34, %35
  br i1 %36, label %37, label %38

37:                                               ; preds = %29, %33
  store float %6, float* %2, align 4
  br label %58

38:                                               ; preds = %20, %33
  %39 = phi float [ %22, %20 ], [ %25, %33 ]
  %40 = fcmp olt float %8, %39
  %41 = fsub float %39, %8
  %42 = fpext float %41 to double
  br i1 %40, label %43, label %47

43:                                               ; preds = %38
  %44 = fcmp olt double %42, 1.000000e-04
  %45 = fcmp ogt double %42, -1.000000e-04
  %46 = and i1 %44, %45
  br i1 %46, label %47, label %51

47:                                               ; preds = %38, %43
  %48 = fcmp olt double %42, 1.000000e-04
  %49 = fcmp ogt double %42, -1.000000e-04
  %50 = and i1 %48, %49
  br i1 %50, label %51, label %58

51:                                               ; preds = %43, %47
  %52 = fsub float %39, %39
  %53 = fpext float %52 to double
  %54 = fcmp olt double %53, 1.000000e-04
  %55 = fcmp ogt double %53, -1.000000e-04
  %56 = and i1 %54, %55
  br i1 %56, label %57, label %58

57:                                               ; preds = %51
  store float %39, float* %2, align 4
  br label %58

58:                                               ; preds = %57, %51, %47, %37
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN22PWL_SCROLL_PRIVATEDATA6SubBigEv(%struct.PWL_SCROLL_PRIVATEDATA* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %struct.PWL_SCROLL_PRIVATEDATA, %struct.PWL_SCROLL_PRIVATEDATA* %0, i64 0, i32 2
  %3 = load float, float* %2, align 4
  %4 = getelementptr inbounds %struct.PWL_SCROLL_PRIVATEDATA, %struct.PWL_SCROLL_PRIVATEDATA* %0, i64 0, i32 3
  %5 = load float, float* %4, align 4
  %6 = fsub float %3, %5
  %7 = getelementptr inbounds %struct.PWL_SCROLL_PRIVATEDATA, %struct.PWL_SCROLL_PRIVATEDATA* %0, i64 0, i32 0, i32 0
  %8 = load float, float* %7, align 4
  %9 = fcmp olt float %8, %6
  %10 = fsub float %6, %8
  %11 = fpext float %10 to double
  br i1 %9, label %12, label %16

12:                                               ; preds = %1
  %13 = fcmp olt double %11, 1.000000e-04
  %14 = fcmp ogt double %11, -1.000000e-04
  %15 = and i1 %13, %14
  br i1 %15, label %16, label %20

16:                                               ; preds = %1, %12
  %17 = fcmp olt double %11, 1.000000e-04
  %18 = fcmp ogt double %11, -1.000000e-04
  %19 = and i1 %17, %18
  br i1 %19, label %20, label %35

20:                                               ; preds = %16, %12
  %21 = getelementptr inbounds %struct.PWL_SCROLL_PRIVATEDATA, %struct.PWL_SCROLL_PRIVATEDATA* %0, i64 0, i32 0, i32 1
  %22 = load float, float* %21, align 4
  %23 = fcmp ogt float %22, %6
  %24 = fsub float %6, %22
  %25 = fpext float %24 to double
  br i1 %23, label %26, label %30

26:                                               ; preds = %20
  %27 = fcmp olt double %25, 1.000000e-04
  %28 = fcmp ogt double %25, -1.000000e-04
  %29 = and i1 %27, %28
  br i1 %29, label %30, label %34

30:                                               ; preds = %20, %26
  %31 = fcmp olt double %25, 1.000000e-04
  %32 = fcmp ogt double %25, -1.000000e-04
  %33 = and i1 %31, %32
  br i1 %33, label %34, label %35

34:                                               ; preds = %26, %30
  store float %6, float* %2, align 4
  br label %56

35:                                               ; preds = %30, %16
  %36 = fsub float %8, %8
  %37 = fpext float %36 to double
  %38 = fcmp olt double %37, 1.000000e-04
  %39 = fcmp ogt double %37, -1.000000e-04
  %40 = and i1 %38, %39
  br i1 %40, label %41, label %56

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.PWL_SCROLL_PRIVATEDATA, %struct.PWL_SCROLL_PRIVATEDATA* %0, i64 0, i32 0, i32 1
  %43 = load float, float* %42, align 4
  %44 = fcmp ogt float %43, %8
  %45 = fsub float %8, %43
  %46 = fpext float %45 to double
  br i1 %44, label %47, label %51

47:                                               ; preds = %41
  %48 = fcmp olt double %46, 1.000000e-04
  %49 = fcmp ogt double %46, -1.000000e-04
  %50 = and i1 %48, %49
  br i1 %50, label %51, label %55

51:                                               ; preds = %41, %47
  %52 = fcmp olt double %46, 1.000000e-04
  %53 = fcmp ogt double %46, -1.000000e-04
  %54 = and i1 %52, %53
  br i1 %54, label %55, label %56

55:                                               ; preds = %51, %47
  store float %8, float* %2, align 4
  br label %56

56:                                               ; preds = %55, %51, %35, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CPWL_ScrollBarC2ERKN8CPWL_Wnd12CreateParamsENSt3__110unique_ptrIN18IPWL_SystemHandler13PerWindowDataENS4_14default_deleteIS7_EEEE(%class.CPWL_ScrollBar*, %"class.CPWL_Wnd::CreateParams"* dereferenceable(184), %"class.IPWL_SystemHandler::PerWindowData"*) unnamed_addr #2 align 2 {
  %4 = bitcast %class.CPWL_ScrollBar* %0 to %class.CPWL_Wnd*
  tail call void @_ZN8CPWL_WndC2ERKNS_12CreateParamsENSt3__110unique_ptrIN18IPWL_SystemHandler13PerWindowDataENS3_14default_deleteIS6_EEEE(%class.CPWL_Wnd* %4, %"class.CPWL_Wnd::CreateParams"* dereferenceable(184) %1, %"class.IPWL_SystemHandler::PerWindowData"* %2) #11
  %5 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 2, i32 0
  %6 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [44 x i8*], [5 x i8*] }, { [44 x i8*], [5 x i8*] }* @_ZTV14CPWL_ScrollBar, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [44 x i8*], [5 x i8*] }, { [44 x i8*], [5 x i8*] }* @_ZTV14CPWL_ScrollBar, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %7 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 3
  %8 = bitcast %struct.PWL_SCROLL_INFO* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %8, i8 0, i64 20, i1 false) #11
  %9 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 5, i32 0
  %10 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 3
  %11 = bitcast %class.CPWL_SBButton** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 48, i1 false)
  store float 1.000000e+01, float* %10, align 4
  %12 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 4
  store float 1.000000e+00, float* %12, align 4
  %13 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 10
  store i8 0, i8* %13, align 8
  %14 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 11
  store i8 0, i8* %14, align 1
  %15 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 13
  store float 0.000000e+00, float* %15, align 4
  %16 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 14
  store float 0.000000e+00, float* %16, align 8
  %17 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 0, i32 2, i32 17
  store i32 0, i32* %17, align 8
  ret void
}

declare void @_ZN8CPWL_WndC2ERKNS_12CreateParamsENSt3__110unique_ptrIN18IPWL_SystemHandler13PerWindowDataENS3_14default_deleteIS6_EEEE(%class.CPWL_Wnd*, %"class.CPWL_Wnd::CreateParams"* dereferenceable(184), %"class.IPWL_SystemHandler::PerWindowData"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CPWL_ScrollBarD2Ev(%class.CPWL_ScrollBar*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [44 x i8*], [5 x i8*] }, { [44 x i8*], [5 x i8*] }* @_ZTV14CPWL_ScrollBar, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 2, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [44 x i8*], [5 x i8*] }, { [44 x i8*], [5 x i8*] }* @_ZTV14CPWL_ScrollBar, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %5 = load %class.CFX_Timer*, %class.CFX_Timer** %4, align 8
  store %class.CFX_Timer* null, %class.CFX_Timer** %4, align 8
  %6 = icmp eq %class.CFX_Timer* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  tail call void @_ZN9CFX_TimerD1Ev(%class.CFX_Timer* nonnull %5) #11
  %8 = bitcast %class.CFX_Timer* %5 to i8*
  tail call void @_ZdlPv(i8* %8) #12
  br label %9

9:                                                ; preds = %1, %7
  %10 = bitcast %class.CPWL_ScrollBar* %0 to %class.CPWL_Wnd*
  tail call void @_ZN8CPWL_WndD2Ev(%class.CPWL_Wnd* %10) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8CPWL_WndD2Ev(%class.CPWL_Wnd*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn304_N14CPWL_ScrollBarD1Ev(%class.CPWL_ScrollBar*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 -1, i32 0, i32 2, i32 6
  %3 = bitcast i32* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [44 x i8*], [5 x i8*] }, { [44 x i8*], [5 x i8*] }* @_ZTV14CPWL_ScrollBar, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i32, i32* %2, i64 76
  %5 = bitcast i32* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [44 x i8*], [5 x i8*] }, { [44 x i8*], [5 x i8*] }* @_ZTV14CPWL_ScrollBar, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i32, i32* %2, i64 90
  %7 = bitcast i32* %6 to %class.CFX_Timer**
  %8 = load %class.CFX_Timer*, %class.CFX_Timer** %7, align 8
  store %class.CFX_Timer* null, %class.CFX_Timer** %7, align 8
  %9 = icmp eq %class.CFX_Timer* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %1
  tail call void @_ZN9CFX_TimerD1Ev(%class.CFX_Timer* nonnull %8) #11
  %11 = bitcast %class.CFX_Timer* %8 to i8*
  tail call void @_ZdlPv(i8* %11) #12
  br label %12

12:                                               ; preds = %1, %10
  %13 = bitcast i32* %2 to %class.CPWL_Wnd*
  tail call void @_ZN8CPWL_WndD2Ev(%class.CPWL_Wnd* %13) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CPWL_ScrollBarD0Ev(%class.CPWL_ScrollBar*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [44 x i8*], [5 x i8*] }, { [44 x i8*], [5 x i8*] }* @_ZTV14CPWL_ScrollBar, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 2, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [44 x i8*], [5 x i8*] }, { [44 x i8*], [5 x i8*] }* @_ZTV14CPWL_ScrollBar, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %5 = load %class.CFX_Timer*, %class.CFX_Timer** %4, align 8
  store %class.CFX_Timer* null, %class.CFX_Timer** %4, align 8
  %6 = icmp eq %class.CFX_Timer* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  tail call void @_ZN9CFX_TimerD1Ev(%class.CFX_Timer* nonnull %5) #11
  %8 = bitcast %class.CFX_Timer* %5 to i8*
  tail call void @_ZdlPv(i8* %8) #12
  br label %9

9:                                                ; preds = %1, %7
  %10 = bitcast %class.CPWL_ScrollBar* %0 to %class.CPWL_Wnd*
  tail call void @_ZN8CPWL_WndD2Ev(%class.CPWL_Wnd* %10) #11
  %11 = bitcast %class.CPWL_ScrollBar* %0 to i8*
  tail call void @_ZdlPv(i8* %11) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn304_N14CPWL_ScrollBarD0Ev(%class.CPWL_ScrollBar*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 -1, i32 0, i32 2, i32 6
  %3 = bitcast i32* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [44 x i8*], [5 x i8*] }, { [44 x i8*], [5 x i8*] }* @_ZTV14CPWL_ScrollBar, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i32, i32* %2, i64 76
  %5 = bitcast i32* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [44 x i8*], [5 x i8*] }, { [44 x i8*], [5 x i8*] }* @_ZTV14CPWL_ScrollBar, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i32, i32* %2, i64 90
  %7 = bitcast i32* %6 to %class.CFX_Timer**
  %8 = load %class.CFX_Timer*, %class.CFX_Timer** %7, align 8
  store %class.CFX_Timer* null, %class.CFX_Timer** %7, align 8
  %9 = icmp eq %class.CFX_Timer* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %1
  tail call void @_ZN9CFX_TimerD1Ev(%class.CFX_Timer* nonnull %8) #11
  %11 = bitcast %class.CFX_Timer* %8 to i8*
  tail call void @_ZdlPv(i8* %11) #12
  br label %12

12:                                               ; preds = %1, %10
  %13 = bitcast i32* %2 to %class.CPWL_Wnd*
  tail call void @_ZN8CPWL_WndD2Ev(%class.CPWL_Wnd* %13) #11
  %14 = bitcast i32* %2 to i8*
  tail call void @_ZdlPv(i8* %14) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CPWL_ScrollBar9OnDestroyEv(%class.CPWL_ScrollBar*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 5
  %3 = bitcast %class.CPWL_ScrollBar* %0 to %class.CPWL_Wnd*
  %4 = bitcast %"class.fxcrt::UnownedPtr.18"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false)
  tail call void @_ZN8CPWL_Wnd9OnDestroyEv(%class.CPWL_Wnd* %3) #11
  ret void
}

declare void @_ZN8CPWL_Wnd9OnDestroyEv(%class.CPWL_Wnd*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN14CPWL_ScrollBar13RePosChildWndEv(%class.CPWL_ScrollBar*) unnamed_addr #2 align 2 {
  %2 = alloca %class.CFX_FloatRect, align 4
  %3 = alloca %class.CFX_FloatRect, align 4
  %4 = alloca %"class.fxcrt::ObservedPtr.26", align 8
  %5 = bitcast %class.CPWL_ScrollBar* %0 to %class.CPWL_Wnd*
  %6 = tail call { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd13GetClientRectEv(%class.CPWL_Wnd* %5) #11
  %7 = extractvalue { <2 x float>, <2 x float> } %6, 0
  %8 = extractvalue { <2 x float>, <2 x float> } %6, 1
  %9 = bitcast %class.CFX_FloatRect* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #11
  %10 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %2, i64 0, i32 0
  %11 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %2, i64 0, i32 1
  %12 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %2, i64 0, i32 2
  %13 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %2, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %9, i8 0, i64 16, i1 false) #11
  %14 = bitcast %class.CFX_FloatRect* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #11
  %15 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %3, i64 0, i32 0
  %16 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %3, i64 0, i32 1
  %17 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %3, i64 0, i32 2
  %18 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %3, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 0, i64 16, i1 false) #11
  %19 = extractelement <2 x float> %8, i32 1
  %20 = extractelement <2 x float> %7, i32 1
  %21 = fsub float %19, %20
  %22 = fcmp ogt float %21, 2.200000e+01
  br i1 %22, label %23, label %32

23:                                               ; preds = %1
  %24 = fadd float %21, -2.200000e+01
  %25 = fpext float %24 to double
  %26 = fcmp olt double %25, 1.000000e-04
  %27 = fcmp ogt double %25, -1.000000e-04
  %28 = and i1 %26, %27
  br i1 %28, label %32, label %29

29:                                               ; preds = %23
  %30 = extractelement <2 x float> %7, i32 0
  %31 = fadd float %19, -9.000000e+00
  br label %47

32:                                               ; preds = %23, %1
  %33 = fadd float %21, -2.000000e+00
  %34 = fadd float %33, -2.000000e+00
  %35 = fmul float %34, 5.000000e-01
  %36 = fcmp ogt float %35, 0.000000e+00
  br i1 %36, label %37, label %45

37:                                               ; preds = %32
  %38 = fpext float %35 to double
  %39 = fcmp olt double %38, 1.000000e-04
  %40 = fcmp ogt double %38, -1.000000e-04
  %41 = and i1 %39, %40
  br i1 %41, label %45, label %42

42:                                               ; preds = %37
  %43 = extractelement <2 x float> %7, i32 0
  %44 = fsub float %19, %35
  br label %47

45:                                               ; preds = %37, %32
  %46 = tail call zeroext i1 @_ZN8CPWL_Wnd10SetVisibleEb(%class.CPWL_Wnd* %5, i1 zeroext false) #11
  br i1 %46, label %53, label %89

47:                                               ; preds = %29, %42
  %48 = phi float [ %43, %42 ], [ %30, %29 ]
  %49 = phi float [ %44, %42 ], [ %31, %29 ]
  %50 = phi float [ %35, %42 ], [ 9.000000e+00, %29 ]
  %51 = extractelement <2 x float> %8, i32 0
  store float %48, float* %10, align 4
  store float %49, float* %11, align 4
  store float %51, float* %12, align 4
  store float %19, float* %13, align 4
  %52 = fadd float %20, %50
  store float %48, float* %15, align 4
  store float %20, float* %16, align 4
  store float %51, float* %17, align 4
  store float %52, float* %18, align 4
  br label %53

53:                                               ; preds = %47, %45
  %54 = bitcast %"class.fxcrt::ObservedPtr.26"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #11
  %55 = getelementptr inbounds %"class.fxcrt::ObservedPtr.26", %"class.fxcrt::ObservedPtr.26"* %4, i64 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.fxcrt::ObservedPtr.26", %"class.fxcrt::ObservedPtr.26"* %4, i64 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI14CPWL_ScrollBarEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %55, align 8
  store %class.CPWL_ScrollBar* %0, %class.CPWL_ScrollBar** %56, align 8
  %57 = icmp eq %class.CPWL_ScrollBar* %0, null
  br i1 %57, label %61, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.fxcrt::ObservedPtr.26", %"class.fxcrt::ObservedPtr.26"* %4, i64 0, i32 0
  %60 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 0, i32 1
  call void @_ZN5fxcrt10Observable11AddObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %60, %"class.fxcrt::Observable::ObserverIface"* nonnull %59) #11
  br label %61

61:                                               ; preds = %53, %58
  %62 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 5, i32 0
  %63 = load %class.CPWL_SBButton*, %class.CPWL_SBButton** %62, align 8
  %64 = icmp eq %class.CPWL_SBButton* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %61
  %66 = bitcast %class.CPWL_SBButton* %63 to %class.CPWL_Wnd*
  %67 = call zeroext i1 @_ZN8CPWL_Wnd4MoveERK13CFX_FloatRectbb(%class.CPWL_Wnd* nonnull %66, %class.CFX_FloatRect* nonnull dereferenceable(16) %2, i1 zeroext true, i1 zeroext false) #11
  %68 = load %class.CPWL_ScrollBar*, %class.CPWL_ScrollBar** %56, align 8
  %69 = icmp eq %class.CPWL_ScrollBar* %68, null
  br i1 %69, label %79, label %70

70:                                               ; preds = %65, %61
  %71 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 6, i32 0
  %72 = load %class.CPWL_SBButton*, %class.CPWL_SBButton** %71, align 8
  %73 = icmp eq %class.CPWL_SBButton* %72, null
  br i1 %73, label %80, label %74

74:                                               ; preds = %70
  %75 = bitcast %class.CPWL_SBButton* %72 to %class.CPWL_Wnd*
  %76 = call zeroext i1 @_ZN8CPWL_Wnd4MoveERK13CFX_FloatRectbb(%class.CPWL_Wnd* nonnull %75, %class.CFX_FloatRect* nonnull dereferenceable(16) %3, i1 zeroext true, i1 zeroext false) #11
  %77 = load %class.CPWL_ScrollBar*, %class.CPWL_ScrollBar** %56, align 8
  %78 = icmp eq %class.CPWL_ScrollBar* %77, null
  br i1 %78, label %79, label %80

79:                                               ; preds = %65, %74
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI14CPWL_ScrollBarEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %55, align 8
  br label %87

80:                                               ; preds = %74, %70
  %81 = call zeroext i1 @_ZN14CPWL_ScrollBar13MovePosButtonEb(%class.CPWL_ScrollBar* %0, i1 zeroext false)
  %82 = load %class.CPWL_ScrollBar*, %class.CPWL_ScrollBar** %56, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI14CPWL_ScrollBarEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %55, align 8
  %83 = icmp eq %class.CPWL_ScrollBar* %82, null
  br i1 %83, label %87, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %82, i64 0, i32 0, i32 1
  %86 = getelementptr inbounds %"class.fxcrt::ObservedPtr.26", %"class.fxcrt::ObservedPtr.26"* %4, i64 0, i32 0
  call void @_ZN5fxcrt10Observable14RemoveObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %85, %"class.fxcrt::Observable::ObserverIface"* nonnull %86) #11
  br label %87

87:                                               ; preds = %79, %80, %84
  %88 = phi i1 [ false, %79 ], [ %81, %80 ], [ %81, %84 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #11
  br label %89

89:                                               ; preds = %45, %87
  %90 = phi i1 [ %88, %87 ], [ false, %45 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #11
  ret i1 %90
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #7

declare { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd13GetClientRectEv(%class.CPWL_Wnd*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #7

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #7

declare zeroext i1 @_ZN8CPWL_Wnd10SetVisibleEb(%class.CPWL_Wnd*, i1 zeroext) unnamed_addr #4

declare zeroext i1 @_ZN8CPWL_Wnd4MoveERK13CFX_FloatRectbb(%class.CPWL_Wnd*, %class.CFX_FloatRect* dereferenceable(16), i1 zeroext, i1 zeroext) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN14CPWL_ScrollBar13MovePosButtonEb(%class.CPWL_ScrollBar*, i1 zeroext) local_unnamed_addr #2 align 2 {
  %3 = alloca %class.CFX_FloatRect, align 8
  %4 = alloca %class.CFX_FloatRect, align 8
  %5 = alloca %class.CFX_FloatRect, align 8
  %6 = alloca %class.CFX_FloatRect, align 4
  %7 = alloca %"class.fxcrt::ObservedPtr.26", align 8
  %8 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 7, i32 0
  %9 = bitcast %class.CPWL_SBButton** %8 to %class.CPWL_Wnd**
  %10 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %9, align 8
  %11 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %10, i64 0, i32 10
  %12 = load i8, i8* %11, align 1, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %248, label %14

14:                                               ; preds = %2
  %15 = bitcast %class.CPWL_ScrollBar* %0 to %class.CPWL_Wnd*
  %16 = tail call { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd13GetClientRectEv(%class.CPWL_Wnd* %15) #11
  %17 = extractvalue { <2 x float>, <2 x float> } %16, 0
  %18 = extractvalue { <2 x float>, <2 x float> } %16, 1
  %19 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 5, i32 0
  %20 = load %class.CPWL_SBButton*, %class.CPWL_SBButton** %19, align 8
  %21 = icmp eq %class.CPWL_SBButton* %20, null
  br i1 %21, label %63, label %22

22:                                               ; preds = %14
  %23 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 6, i32 0
  %24 = load %class.CPWL_SBButton*, %class.CPWL_SBButton** %23, align 8
  %25 = icmp eq %class.CPWL_SBButton* %24, null
  br i1 %25, label %63, label %26

26:                                               ; preds = %22
  %27 = bitcast %class.CPWL_SBButton* %20 to %class.CPWL_Wnd*
  %28 = tail call { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd13GetWindowRectEv(%class.CPWL_Wnd* nonnull %27) #11
  %29 = extractvalue { <2 x float>, <2 x float> } %28, 0
  %30 = extractvalue { <2 x float>, <2 x float> } %28, 1
  %31 = bitcast %class.CPWL_SBButton** %23 to %class.CPWL_Wnd**
  %32 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %31, align 8
  %33 = tail call { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd13GetWindowRectEv(%class.CPWL_Wnd* %32) #11
  %34 = extractvalue { <2 x float>, <2 x float> } %33, 0
  %35 = extractvalue { <2 x float>, <2 x float> } %33, 1
  %36 = shufflevector <2 x float> %30, <2 x float> %35, <2 x i32> <i32 1, i32 3>
  %37 = shufflevector <2 x float> %29, <2 x float> %34, <2 x i32> <i32 1, i32 3>
  %38 = fsub <2 x float> %36, %37
  %39 = bitcast %class.CFX_FloatRect* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #11
  %40 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %5, i64 0, i32 0
  %41 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %5, i64 0, i32 1
  %42 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %5, i64 0, i32 2
  %43 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %5, i64 0, i32 3
  %44 = extractelement <2 x float> %18, i32 1
  %45 = extractelement <2 x float> %17, i32 1
  %46 = fsub float %44, %45
  %47 = extractelement <2 x float> %38, i32 0
  %48 = extractelement <2 x float> %38, i32 1
  %49 = fadd float %47, %48
  %50 = fadd float %49, 2.000000e+00
  %51 = fcmp ogt float %46, %50
  %52 = extractelement <2 x float> %17, i32 0
  %53 = fadd float %45, %47
  %54 = fadd float %53, 1.000000e+00
  %55 = extractelement <2 x float> %18, i32 0
  %56 = fsub float %44, %48
  %57 = fadd float %56, -1.000000e+00
  %58 = select i1 %51, float %57, float %54
  store float %52, float* %40, align 8
  store float %54, float* %41, align 4
  store float %55, float* %42, align 8
  store float %58, float* %43, align 4
  call void @_ZN13CFX_FloatRect9NormalizeEv(%class.CFX_FloatRect* nonnull %5) #11
  %59 = bitcast %class.CFX_FloatRect* %5 to <2 x float>*
  %60 = load <2 x float>, <2 x float>* %59, align 8
  %61 = bitcast float* %42 to <2 x float>*
  %62 = load <2 x float>, <2 x float>* %61, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #11
  br label %63

63:                                               ; preds = %14, %22, %26
  %64 = phi <2 x float> [ %60, %26 ], [ %17, %22 ], [ %17, %14 ]
  %65 = phi <2 x float> [ %62, %26 ], [ %18, %22 ], [ %18, %14 ]
  %66 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 2
  %67 = load float, float* %66, align 4
  %68 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 1
  %69 = load float, float* %68, align 8
  %70 = fadd float %67, %69
  %71 = call { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd13GetClientRectEv(%class.CPWL_Wnd* %15) #11
  %72 = extractvalue { <2 x float>, <2 x float> } %71, 0
  %73 = extractvalue { <2 x float>, <2 x float> } %71, 1
  %74 = load %class.CPWL_SBButton*, %class.CPWL_SBButton** %19, align 8
  %75 = icmp eq %class.CPWL_SBButton* %74, null
  br i1 %75, label %117, label %76

76:                                               ; preds = %63
  %77 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 6, i32 0
  %78 = load %class.CPWL_SBButton*, %class.CPWL_SBButton** %77, align 8
  %79 = icmp eq %class.CPWL_SBButton* %78, null
  br i1 %79, label %117, label %80

80:                                               ; preds = %76
  %81 = bitcast %class.CPWL_SBButton* %74 to %class.CPWL_Wnd*
  %82 = call { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd13GetWindowRectEv(%class.CPWL_Wnd* nonnull %81) #11
  %83 = extractvalue { <2 x float>, <2 x float> } %82, 0
  %84 = extractvalue { <2 x float>, <2 x float> } %82, 1
  %85 = bitcast %class.CPWL_SBButton** %77 to %class.CPWL_Wnd**
  %86 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %85, align 8
  %87 = call { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd13GetWindowRectEv(%class.CPWL_Wnd* %86) #11
  %88 = extractvalue { <2 x float>, <2 x float> } %87, 0
  %89 = extractvalue { <2 x float>, <2 x float> } %87, 1
  %90 = shufflevector <2 x float> %84, <2 x float> %89, <2 x i32> <i32 1, i32 3>
  %91 = shufflevector <2 x float> %83, <2 x float> %88, <2 x i32> <i32 1, i32 3>
  %92 = fsub <2 x float> %90, %91
  %93 = bitcast %class.CFX_FloatRect* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %93) #11
  %94 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %4, i64 0, i32 0
  %95 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %4, i64 0, i32 1
  %96 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %4, i64 0, i32 2
  %97 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %4, i64 0, i32 3
  %98 = extractelement <2 x float> %73, i32 1
  %99 = extractelement <2 x float> %72, i32 1
  %100 = fsub float %98, %99
  %101 = extractelement <2 x float> %92, i32 0
  %102 = extractelement <2 x float> %92, i32 1
  %103 = fadd float %101, %102
  %104 = fadd float %103, 2.000000e+00
  %105 = fcmp ogt float %100, %104
  %106 = extractelement <2 x float> %72, i32 0
  %107 = fadd float %99, %101
  %108 = fadd float %107, 1.000000e+00
  %109 = extractelement <2 x float> %73, i32 0
  %110 = fsub float %98, %102
  %111 = fadd float %110, -1.000000e+00
  %112 = select i1 %105, float %111, float %108
  store float %106, float* %94, align 8
  store float %108, float* %95, align 4
  store float %109, float* %96, align 8
  store float %112, float* %97, align 4
  call void @_ZN13CFX_FloatRect9NormalizeEv(%class.CFX_FloatRect* nonnull %4) #11
  %113 = bitcast %class.CFX_FloatRect* %4 to <2 x float>*
  %114 = load <2 x float>, <2 x float>* %113, align 8
  %115 = bitcast float* %96 to <2 x float>*
  %116 = load <2 x float>, <2 x float>* %115, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %93) #11
  br label %117

117:                                              ; preds = %63, %76, %80
  %118 = phi <2 x float> [ %114, %80 ], [ %72, %76 ], [ %72, %63 ]
  %119 = phi <2 x float> [ %116, %80 ], [ %73, %76 ], [ %73, %63 ]
  %120 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 0, i32 1
  %121 = load float, float* %120, align 4
  %122 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 0, i32 0
  %123 = load float, float* %122, align 4
  %124 = fsub float %121, %123
  %125 = load float, float* %68, align 8
  %126 = fadd float %124, %125
  %127 = fcmp oeq float %126, 0.000000e+00
  %128 = select i1 %127, float 1.000000e+00, float %126
  %129 = extractelement <2 x float> %119, i32 1
  %130 = extractelement <2 x float> %118, i32 1
  %131 = fsub float %129, %130
  %132 = fmul float %70, %131
  %133 = fdiv float %132, %128
  %134 = fsub float %129, %133
  %135 = load float, float* %66, align 4
  %136 = call { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd13GetClientRectEv(%class.CPWL_Wnd* %15) #11
  %137 = extractvalue { <2 x float>, <2 x float> } %136, 0
  %138 = extractvalue { <2 x float>, <2 x float> } %136, 1
  %139 = load %class.CPWL_SBButton*, %class.CPWL_SBButton** %19, align 8
  %140 = icmp eq %class.CPWL_SBButton* %139, null
  br i1 %140, label %182, label %141

141:                                              ; preds = %117
  %142 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 6, i32 0
  %143 = load %class.CPWL_SBButton*, %class.CPWL_SBButton** %142, align 8
  %144 = icmp eq %class.CPWL_SBButton* %143, null
  br i1 %144, label %182, label %145

145:                                              ; preds = %141
  %146 = bitcast %class.CPWL_SBButton* %139 to %class.CPWL_Wnd*
  %147 = call { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd13GetWindowRectEv(%class.CPWL_Wnd* nonnull %146) #11
  %148 = extractvalue { <2 x float>, <2 x float> } %147, 0
  %149 = extractvalue { <2 x float>, <2 x float> } %147, 1
  %150 = bitcast %class.CPWL_SBButton** %142 to %class.CPWL_Wnd**
  %151 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %150, align 8
  %152 = call { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd13GetWindowRectEv(%class.CPWL_Wnd* %151) #11
  %153 = extractvalue { <2 x float>, <2 x float> } %152, 0
  %154 = extractvalue { <2 x float>, <2 x float> } %152, 1
  %155 = shufflevector <2 x float> %149, <2 x float> %154, <2 x i32> <i32 1, i32 3>
  %156 = shufflevector <2 x float> %148, <2 x float> %153, <2 x i32> <i32 1, i32 3>
  %157 = fsub <2 x float> %155, %156
  %158 = bitcast %class.CFX_FloatRect* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %158) #11
  %159 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %3, i64 0, i32 0
  %160 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %3, i64 0, i32 1
  %161 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %3, i64 0, i32 2
  %162 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %3, i64 0, i32 3
  %163 = extractelement <2 x float> %138, i32 1
  %164 = extractelement <2 x float> %137, i32 1
  %165 = fsub float %163, %164
  %166 = extractelement <2 x float> %157, i32 0
  %167 = extractelement <2 x float> %157, i32 1
  %168 = fadd float %166, %167
  %169 = fadd float %168, 2.000000e+00
  %170 = fcmp ogt float %165, %169
  %171 = extractelement <2 x float> %137, i32 0
  %172 = fadd float %164, %166
  %173 = fadd float %172, 1.000000e+00
  %174 = extractelement <2 x float> %138, i32 0
  %175 = fsub float %163, %167
  %176 = fadd float %175, -1.000000e+00
  %177 = select i1 %170, float %176, float %173
  store float %171, float* %159, align 8
  store float %173, float* %160, align 4
  store float %174, float* %161, align 8
  store float %177, float* %162, align 4
  call void @_ZN13CFX_FloatRect9NormalizeEv(%class.CFX_FloatRect* nonnull %3) #11
  %178 = bitcast %class.CFX_FloatRect* %3 to <2 x float>*
  %179 = load <2 x float>, <2 x float>* %178, align 8
  %180 = bitcast float* %161 to <2 x float>*
  %181 = load <2 x float>, <2 x float>* %180, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %158) #11
  br label %182

182:                                              ; preds = %117, %141, %145
  %183 = phi <2 x float> [ %179, %145 ], [ %137, %141 ], [ %137, %117 ]
  %184 = phi <2 x float> [ %181, %145 ], [ %138, %141 ], [ %138, %117 ]
  %185 = load float, float* %120, align 4
  %186 = load float, float* %122, align 4
  %187 = fsub float %185, %186
  %188 = load float, float* %68, align 8
  %189 = fadd float %187, %188
  %190 = fcmp oeq float %189, 0.000000e+00
  %191 = select i1 %190, float 1.000000e+00, float %189
  %192 = extractelement <2 x float> %184, i32 1
  %193 = extractelement <2 x float> %183, i32 1
  %194 = fsub float %192, %193
  %195 = fmul float %135, %194
  %196 = fdiv float %195, %191
  %197 = fsub float %192, %196
  %198 = fsub float %197, %134
  %199 = fcmp olt float %198, 2.000000e+00
  br i1 %199, label %200, label %208

200:                                              ; preds = %182
  %201 = fadd float %198, -2.000000e+00
  %202 = fpext float %201 to double
  %203 = fcmp olt double %202, 1.000000e-04
  %204 = fcmp ogt double %202, -1.000000e-04
  %205 = and i1 %203, %204
  %206 = fadd float %197, -2.000000e+00
  %207 = select i1 %205, float %134, float %206
  br label %208

208:                                              ; preds = %200, %182
  %209 = phi float [ %134, %182 ], [ %207, %200 ]
  %210 = extractelement <2 x float> %64, i32 1
  %211 = fcmp olt float %209, %210
  br i1 %211, label %212, label %221

212:                                              ; preds = %208
  %213 = fsub float %209, %210
  %214 = fpext float %213 to double
  %215 = fcmp olt double %214, 1.000000e-04
  %216 = fcmp ogt double %214, -1.000000e-04
  %217 = and i1 %215, %216
  %218 = fadd float %210, 2.000000e+00
  %219 = select i1 %217, float %209, float %210
  %220 = select i1 %217, float %197, float %218
  br label %221

221:                                              ; preds = %212, %208
  %222 = phi float [ %209, %208 ], [ %219, %212 ]
  %223 = phi float [ %197, %208 ], [ %220, %212 ]
  %224 = bitcast %class.CFX_FloatRect* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %224) #11
  %225 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %6, i64 0, i32 0
  %226 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %6, i64 0, i32 1
  %227 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %6, i64 0, i32 2
  %228 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %6, i64 0, i32 3
  %229 = extractelement <2 x float> %64, i32 0
  %230 = extractelement <2 x float> %65, i32 0
  store float %229, float* %225, align 4
  store float %222, float* %226, align 4
  store float %230, float* %227, align 4
  store float %223, float* %228, align 4
  %231 = bitcast %"class.fxcrt::ObservedPtr.26"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %231) #11
  %232 = getelementptr inbounds %"class.fxcrt::ObservedPtr.26", %"class.fxcrt::ObservedPtr.26"* %7, i64 0, i32 0, i32 0
  %233 = getelementptr inbounds %"class.fxcrt::ObservedPtr.26", %"class.fxcrt::ObservedPtr.26"* %7, i64 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI14CPWL_ScrollBarEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %232, align 8
  store %class.CPWL_ScrollBar* %0, %class.CPWL_ScrollBar** %233, align 8
  %234 = icmp eq %class.CPWL_ScrollBar* %0, null
  br i1 %234, label %238, label %235

235:                                              ; preds = %221
  %236 = getelementptr inbounds %"class.fxcrt::ObservedPtr.26", %"class.fxcrt::ObservedPtr.26"* %7, i64 0, i32 0
  %237 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 0, i32 1
  call void @_ZN5fxcrt10Observable11AddObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %237, %"class.fxcrt::Observable::ObserverIface"* nonnull %236) #11
  br label %238

238:                                              ; preds = %221, %235
  %239 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %9, align 8
  %240 = call zeroext i1 @_ZN8CPWL_Wnd4MoveERK13CFX_FloatRectbb(%class.CPWL_Wnd* %239, %class.CFX_FloatRect* nonnull dereferenceable(16) %6, i1 zeroext true, i1 zeroext %1) #11
  %241 = load %class.CPWL_ScrollBar*, %class.CPWL_ScrollBar** %233, align 8
  %242 = icmp eq %class.CPWL_ScrollBar* %241, null
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI14CPWL_ScrollBarEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %232, align 8
  br i1 %242, label %246, label %243

243:                                              ; preds = %238
  %244 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %241, i64 0, i32 0, i32 1
  %245 = getelementptr inbounds %"class.fxcrt::ObservedPtr.26", %"class.fxcrt::ObservedPtr.26"* %7, i64 0, i32 0
  call void @_ZN5fxcrt10Observable14RemoveObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %244, %"class.fxcrt::Observable::ObserverIface"* nonnull %245) #11
  br label %246

246:                                              ; preds = %238, %243
  %247 = phi i1 [ true, %243 ], [ false, %238 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %231) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %224) #11
  br label %248

248:                                              ; preds = %246, %2
  %249 = phi i1 [ true, %2 ], [ %247, %246 ]
  ret i1 %249
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5fxcrt11ObservedPtrI14CPWL_ScrollBarED2Ev(%"class.fxcrt::ObservedPtr.26"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.fxcrt::ObservedPtr.26", %"class.fxcrt::ObservedPtr.26"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI14CPWL_ScrollBarEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.fxcrt::ObservedPtr.26", %"class.fxcrt::ObservedPtr.26"* %0, i64 0, i32 1
  %4 = load %class.CPWL_ScrollBar*, %class.CPWL_ScrollBar** %3, align 8
  %5 = icmp eq %class.CPWL_ScrollBar* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %4, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.fxcrt::ObservedPtr.26", %"class.fxcrt::ObservedPtr.26"* %0, i64 0, i32 0
  tail call void @_ZN5fxcrt10Observable14RemoveObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %7, %"class.fxcrt::Observable::ObserverIface"* %8) #11
  br label %9

9:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CPWL_ScrollBar18DrawThisAppearanceEP16CFX_RenderDeviceRK10CFX_Matrix(%class.CPWL_ScrollBar*, %class.CFX_RenderDevice*, %class.CFX_Matrix* dereferenceable(24)) unnamed_addr #2 align 2 {
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = bitcast { <2 x float>, <2 x float> }* %4 to %class.CFX_FloatRect*
  %6 = alloca %struct.CFX_Color, align 4
  %7 = alloca %class.CFX_PTemplate, align 4
  %8 = alloca %class.CFX_PTemplate, align 4
  %9 = alloca i32, align 4
  %10 = alloca %class.CFX_PTemplate, align 4
  %11 = alloca %class.CFX_PTemplate, align 4
  %12 = alloca i32, align 4
  %13 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #11
  %14 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0, i64 0
  %15 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %5, i64 0, i32 1
  %16 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1, i64 0
  %17 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %5, i64 0, i32 3
  %18 = bitcast %class.CPWL_ScrollBar* %0 to %class.CPWL_Wnd*
  %19 = tail call { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd13GetWindowRectEv(%class.CPWL_Wnd* %18) #11
  %20 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  %21 = extractvalue { <2 x float>, <2 x float> } %19, 0
  store <2 x float> %21, <2 x float>* %20, align 8
  %22 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  %23 = extractvalue { <2 x float>, <2 x float> } %19, 1
  store <2 x float> %23, <2 x float>* %22, align 8
  %24 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 0, i32 10
  %25 = load i8, i8* %24, align 1, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %70, label %27

27:                                               ; preds = %3
  %28 = extractelement <2 x float> %23, i32 1
  %29 = extractelement <2 x float> %21, i32 1
  %30 = extractelement <2 x float> %23, i32 0
  %31 = extractelement <2 x float> %21, i32 0
  %32 = fcmp ult float %31, %30
  %33 = fcmp ult float %29, %28
  %34 = and i1 %32, %33
  br i1 %34, label %35, label %70

35:                                               ; preds = %27
  %36 = bitcast %struct.CFX_Color* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %36) #11
  call void @_ZNK8CPWL_Wnd18GetBackgroundColorEv(%struct.CFX_Color* nonnull sret %6, %class.CPWL_Wnd* %18) #11
  %37 = call i32 @_ZN8CPWL_Wnd15GetTransparencyEv(%class.CPWL_Wnd* %18) #11
  call void @_ZN16CFX_RenderDevice12DrawFillRectEPK10CFX_MatrixRK13CFX_FloatRectRK9CFX_Colori(%class.CFX_RenderDevice* %1, %class.CFX_Matrix* %2, %class.CFX_FloatRect* nonnull dereferenceable(16) %5, %struct.CFX_Color* nonnull dereferenceable(20) %6, i32 %37) #11
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %36) #11
  %38 = bitcast %class.CFX_PTemplate* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #11
  %39 = load float, float* %14, align 8
  %40 = fadd float %39, 2.000000e+00
  %41 = load float, float* %17, align 4
  %42 = fadd float %41, -2.000000e+00
  %43 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %7, i64 0, i32 0
  store float %40, float* %43, align 4
  %44 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %7, i64 0, i32 1
  store float %42, float* %44, align 4
  %45 = bitcast %class.CFX_PTemplate* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #11
  %46 = load float, float* %15, align 4
  %47 = fadd float %46, 2.000000e+00
  %48 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %8, i64 0, i32 0
  store float %40, float* %48, align 4
  %49 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %8, i64 0, i32 1
  store float %47, float* %49, align 4
  %50 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %50) #11
  %51 = call i32 @_ZN8CPWL_Wnd15GetTransparencyEv(%class.CPWL_Wnd* %18) #11
  %52 = shl i32 %51, 24
  %53 = or i32 %52, 6579300
  store i32 %53, i32* %9, align 4
  call void @_ZN16CFX_RenderDevice14DrawStrokeLineEPK10CFX_MatrixRK13CFX_PTemplateIfES6_RKjf(%class.CFX_RenderDevice* %1, %class.CFX_Matrix* %2, %class.CFX_PTemplate* nonnull dereferenceable(8) %7, %class.CFX_PTemplate* nonnull dereferenceable(8) %8, i32* nonnull dereferenceable(4) %9, float 1.000000e+00) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %50) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #11
  %54 = bitcast %class.CFX_PTemplate* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #11
  %55 = load float, float* %16, align 8
  %56 = fadd float %55, -2.000000e+00
  %57 = load float, float* %17, align 4
  %58 = fadd float %57, -2.000000e+00
  %59 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %10, i64 0, i32 0
  store float %56, float* %59, align 4
  %60 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %10, i64 0, i32 1
  store float %58, float* %60, align 4
  %61 = bitcast %class.CFX_PTemplate* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #11
  %62 = load float, float* %15, align 4
  %63 = fadd float %62, 2.000000e+00
  %64 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %11, i64 0, i32 0
  store float %56, float* %64, align 4
  %65 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %11, i64 0, i32 1
  store float %63, float* %65, align 4
  %66 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %66) #11
  %67 = call i32 @_ZN8CPWL_Wnd15GetTransparencyEv(%class.CPWL_Wnd* %18) #11
  %68 = shl i32 %67, 24
  %69 = or i32 %68, 6579300
  store i32 %69, i32* %12, align 4
  call void @_ZN16CFX_RenderDevice14DrawStrokeLineEPK10CFX_MatrixRK13CFX_PTemplateIfES6_RKjf(%class.CFX_RenderDevice* %1, %class.CFX_Matrix* %2, %class.CFX_PTemplate* nonnull dereferenceable(8) %10, %class.CFX_PTemplate* nonnull dereferenceable(8) %11, i32* nonnull dereferenceable(4) %12, float 1.000000e+00) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %66) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #11
  br label %70

70:                                               ; preds = %3, %27, %35
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #11
  ret void
}

declare { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd13GetWindowRectEv(%class.CPWL_Wnd*) local_unnamed_addr #4

declare void @_ZN16CFX_RenderDevice12DrawFillRectEPK10CFX_MatrixRK13CFX_FloatRectRK9CFX_Colori(%class.CFX_RenderDevice*, %class.CFX_Matrix*, %class.CFX_FloatRect* dereferenceable(16), %struct.CFX_Color* dereferenceable(20), i32) local_unnamed_addr #4

declare void @_ZNK8CPWL_Wnd18GetBackgroundColorEv(%struct.CFX_Color* sret, %class.CPWL_Wnd*) local_unnamed_addr #4

declare i32 @_ZN8CPWL_Wnd15GetTransparencyEv(%class.CPWL_Wnd*) local_unnamed_addr #4

declare void @_ZN16CFX_RenderDevice14DrawStrokeLineEPK10CFX_MatrixRK13CFX_PTemplateIfES6_RKjf(%class.CFX_RenderDevice*, %class.CFX_Matrix*, %class.CFX_PTemplate* dereferenceable(8), %class.CFX_PTemplate* dereferenceable(8), i32* dereferenceable(4), float) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN14CPWL_ScrollBar13OnLButtonDownEjRK13CFX_PTemplateIfE(%class.CPWL_ScrollBar*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #2 align 2 {
  %4 = alloca %class.CFX_FloatRect, align 4
  %5 = alloca %class.CFX_FloatRect, align 4
  %6 = bitcast %class.CPWL_ScrollBar* %0 to %class.CPWL_Wnd*
  %7 = tail call zeroext i1 @_ZN8CPWL_Wnd13OnLButtonDownEjRK13CFX_PTemplateIfE(%class.CPWL_Wnd* %6, i32 %1, %class.CFX_PTemplate* dereferenceable(8) %2) #11
  %8 = tail call zeroext i1 @_ZNK8CPWL_Wnd7HasFlagEj(%class.CPWL_Wnd* %6, i32 4194304) #11
  br i1 %8, label %9, label %14

9:                                                ; preds = %3
  %10 = tail call i32 @_ZN8CPWL_Wnd15GetTransparencyEv(%class.CPWL_Wnd* %6) #11
  %11 = icmp eq i32 %10, 255
  br i1 %11, label %14, label %12

12:                                               ; preds = %9
  tail call void @_ZN8CPWL_Wnd15SetTransparencyEi(%class.CPWL_Wnd* %6, i32 255) #11
  %13 = tail call zeroext i1 @_ZN8CPWL_Wnd14InvalidateRectEPK13CFX_FloatRect(%class.CPWL_Wnd* %6, %class.CFX_FloatRect* null) #11
  br i1 %13, label %14, label %197

14:                                               ; preds = %9, %12, %3
  %15 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 7, i32 0
  %16 = load %class.CPWL_SBButton*, %class.CPWL_SBButton** %15, align 8
  %17 = icmp eq %class.CPWL_SBButton* %16, null
  br i1 %17, label %197, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %class.CPWL_SBButton, %class.CPWL_SBButton* %16, i64 0, i32 0, i32 10
  %20 = load i8, i8* %19, align 1, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %197, label %22

22:                                               ; preds = %18
  %23 = tail call { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd13GetClientRectEv(%class.CPWL_Wnd* %6) #11
  %24 = extractvalue { <2 x float>, <2 x float> } %23, 0
  %25 = extractvalue { <2 x float>, <2 x float> } %23, 1
  %26 = bitcast %class.CPWL_SBButton** %15 to %class.CPWL_Wnd**
  %27 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %26, align 8
  %28 = tail call { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd13GetWindowRectEv(%class.CPWL_Wnd* %27) #11
  %29 = extractvalue { <2 x float>, <2 x float> } %28, 0
  %30 = extractvalue { <2 x float>, <2 x float> } %28, 1
  %31 = bitcast %class.CFX_FloatRect* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #11
  %32 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %4, i64 0, i32 0
  %33 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %4, i64 0, i32 1
  %34 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %4, i64 0, i32 2
  %35 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %4, i64 0, i32 3
  %36 = extractelement <2 x float> %24, i32 0
  %37 = extractelement <2 x float> %30, i32 1
  %38 = extractelement <2 x float> %25, i32 0
  %39 = extractelement <2 x float> %25, i32 1
  %40 = fadd float %39, -9.000000e+00
  store float %36, float* %32, align 4
  store float %37, float* %33, align 4
  store float %38, float* %34, align 4
  store float %40, float* %35, align 4
  %41 = bitcast %class.CFX_FloatRect* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #11
  %42 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %5, i64 0, i32 0
  %43 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %5, i64 0, i32 1
  %44 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %5, i64 0, i32 2
  %45 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %5, i64 0, i32 3
  %46 = extractelement <2 x float> %24, i32 1
  %47 = fadd float %46, 9.000000e+00
  %48 = extractelement <2 x float> %29, i32 1
  store float %36, float* %42, align 4
  store float %47, float* %43, align 4
  store float %38, float* %44, align 4
  store float %48, float* %45, align 4
  call void @_ZN13CFX_FloatRect9NormalizeEv(%class.CFX_FloatRect* nonnull %4) #11
  call void @_ZN13CFX_FloatRect9NormalizeEv(%class.CFX_FloatRect* nonnull %5) #11
  %49 = call zeroext i1 @_ZNK13CFX_FloatRect8ContainsERK13CFX_PTemplateIfE(%class.CFX_FloatRect* nonnull %4, %class.CFX_PTemplate* dereferenceable(8) %2) #11
  br i1 %49, label %50, label %120

50:                                               ; preds = %22
  %51 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 2
  %52 = load float, float* %51, align 4
  %53 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 3
  %54 = load float, float* %53, align 4
  %55 = fsub float %52, %54
  %56 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 0, i32 0
  %57 = load float, float* %56, align 4
  %58 = fcmp olt float %57, %55
  %59 = fsub float %55, %57
  %60 = fpext float %59 to double
  br i1 %58, label %61, label %65

61:                                               ; preds = %50
  %62 = fcmp olt double %60, 1.000000e-04
  %63 = fcmp ogt double %60, -1.000000e-04
  %64 = and i1 %62, %63
  br i1 %64, label %65, label %69

65:                                               ; preds = %50, %61
  %66 = fcmp olt double %60, 1.000000e-04
  %67 = fcmp ogt double %60, -1.000000e-04
  %68 = and i1 %66, %67
  br i1 %68, label %69, label %84

69:                                               ; preds = %65, %61
  %70 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 0, i32 1
  %71 = load float, float* %70, align 4
  %72 = fcmp ogt float %71, %55
  %73 = fsub float %55, %71
  %74 = fpext float %73 to double
  br i1 %72, label %75, label %79

75:                                               ; preds = %69
  %76 = fcmp olt double %74, 1.000000e-04
  %77 = fcmp ogt double %74, -1.000000e-04
  %78 = and i1 %76, %77
  br i1 %78, label %79, label %83

79:                                               ; preds = %69, %75
  %80 = fcmp olt double %74, 1.000000e-04
  %81 = fcmp ogt double %74, -1.000000e-04
  %82 = and i1 %80, %81
  br i1 %82, label %83, label %84

83:                                               ; preds = %79, %75
  store float %55, float* %51, align 4
  br label %105

84:                                               ; preds = %79, %65
  %85 = fsub float %57, %57
  %86 = fpext float %85 to double
  %87 = fcmp olt double %86, 1.000000e-04
  %88 = fcmp ogt double %86, -1.000000e-04
  %89 = and i1 %87, %88
  br i1 %89, label %90, label %105

90:                                               ; preds = %84
  %91 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 0, i32 1
  %92 = load float, float* %91, align 4
  %93 = fcmp ogt float %92, %57
  %94 = fsub float %57, %92
  %95 = fpext float %94 to double
  br i1 %93, label %96, label %100

96:                                               ; preds = %90
  %97 = fcmp olt double %95, 1.000000e-04
  %98 = fcmp ogt double %95, -1.000000e-04
  %99 = and i1 %97, %98
  br i1 %99, label %100, label %104

100:                                              ; preds = %90, %96
  %101 = fcmp olt double %95, 1.000000e-04
  %102 = fcmp ogt double %95, -1.000000e-04
  %103 = and i1 %101, %102
  br i1 %103, label %104, label %105

104:                                              ; preds = %100, %96
  store float %57, float* %51, align 4
  br label %105

105:                                              ; preds = %83, %84, %100, %104
  %106 = call zeroext i1 @_ZN14CPWL_ScrollBar13MovePosButtonEb(%class.CPWL_ScrollBar* %0, i1 zeroext true)
  br i1 %106, label %107, label %195

107:                                              ; preds = %105
  %108 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 0, i32 4, i32 0
  %109 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %108, align 8
  %110 = icmp eq %class.CPWL_Wnd* %109, null
  br i1 %110, label %120, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 3, i32 1
  %113 = load float, float* %112, align 4
  %114 = load float, float* %51, align 4
  %115 = fsub float %113, %114
  %116 = bitcast %class.CPWL_Wnd* %109 to void (%class.CPWL_Wnd*, float)***
  %117 = load void (%class.CPWL_Wnd*, float)**, void (%class.CPWL_Wnd*, float)*** %116, align 8
  %118 = getelementptr inbounds void (%class.CPWL_Wnd*, float)*, void (%class.CPWL_Wnd*, float)** %117, i64 14
  %119 = load void (%class.CPWL_Wnd*, float)*, void (%class.CPWL_Wnd*, float)** %118, align 8
  call void %119(%class.CPWL_Wnd* nonnull %109, float %115) #11
  br label %120

120:                                              ; preds = %111, %107, %22
  %121 = call zeroext i1 @_ZNK13CFX_FloatRect8ContainsERK13CFX_PTemplateIfE(%class.CFX_FloatRect* nonnull %5, %class.CFX_PTemplate* dereferenceable(8) %2) #11
  br i1 %121, label %122, label %194

122:                                              ; preds = %120
  %123 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 2
  %124 = load float, float* %123, align 4
  %125 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 3
  %126 = load float, float* %125, align 4
  %127 = fadd float %124, %126
  %128 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 0, i32 0
  %129 = load float, float* %128, align 4
  %130 = fcmp olt float %129, %127
  %131 = fsub float %127, %129
  %132 = fpext float %131 to double
  br i1 %130, label %133, label %137

133:                                              ; preds = %122
  %134 = fcmp olt double %132, 1.000000e-04
  %135 = fcmp ogt double %132, -1.000000e-04
  %136 = and i1 %134, %135
  br i1 %136, label %137, label %144

137:                                              ; preds = %122, %133
  %138 = fcmp olt double %132, 1.000000e-04
  %139 = fcmp ogt double %132, -1.000000e-04
  %140 = and i1 %138, %139
  br i1 %140, label %144, label %141

141:                                              ; preds = %137
  %142 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 0, i32 1
  %143 = load float, float* %142, align 4
  br label %159

144:                                              ; preds = %137, %133
  %145 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 0, i32 1
  %146 = load float, float* %145, align 4
  %147 = fcmp ogt float %146, %127
  %148 = fsub float %127, %146
  %149 = fpext float %148 to double
  br i1 %147, label %150, label %154

150:                                              ; preds = %144
  %151 = fcmp olt double %149, 1.000000e-04
  %152 = fcmp ogt double %149, -1.000000e-04
  %153 = and i1 %151, %152
  br i1 %153, label %154, label %158

154:                                              ; preds = %144, %150
  %155 = fcmp olt double %149, 1.000000e-04
  %156 = fcmp ogt double %149, -1.000000e-04
  %157 = and i1 %155, %156
  br i1 %157, label %158, label %159

158:                                              ; preds = %154, %150
  store float %127, float* %123, align 4
  br label %179

159:                                              ; preds = %154, %141
  %160 = phi float [ %143, %141 ], [ %146, %154 ]
  %161 = fcmp olt float %129, %160
  %162 = fsub float %160, %129
  %163 = fpext float %162 to double
  br i1 %161, label %164, label %168

164:                                              ; preds = %159
  %165 = fcmp olt double %163, 1.000000e-04
  %166 = fcmp ogt double %163, -1.000000e-04
  %167 = and i1 %165, %166
  br i1 %167, label %168, label %172

168:                                              ; preds = %159, %164
  %169 = fcmp olt double %163, 1.000000e-04
  %170 = fcmp ogt double %163, -1.000000e-04
  %171 = and i1 %169, %170
  br i1 %171, label %172, label %179

172:                                              ; preds = %168, %164
  %173 = fsub float %160, %160
  %174 = fpext float %173 to double
  %175 = fcmp olt double %174, 1.000000e-04
  %176 = fcmp ogt double %174, -1.000000e-04
  %177 = and i1 %175, %176
  br i1 %177, label %178, label %179

178:                                              ; preds = %172
  store float %160, float* %123, align 4
  br label %179

179:                                              ; preds = %158, %168, %172, %178
  %180 = call zeroext i1 @_ZN14CPWL_ScrollBar13MovePosButtonEb(%class.CPWL_ScrollBar* %0, i1 zeroext true)
  br i1 %180, label %181, label %196

181:                                              ; preds = %179
  %182 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 0, i32 4, i32 0
  %183 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %182, align 8
  %184 = icmp eq %class.CPWL_Wnd* %183, null
  br i1 %184, label %194, label %185

185:                                              ; preds = %181
  %186 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 3, i32 1
  %187 = load float, float* %186, align 4
  %188 = load float, float* %123, align 4
  %189 = fsub float %187, %188
  %190 = bitcast %class.CPWL_Wnd* %183 to void (%class.CPWL_Wnd*, float)***
  %191 = load void (%class.CPWL_Wnd*, float)**, void (%class.CPWL_Wnd*, float)*** %190, align 8
  %192 = getelementptr inbounds void (%class.CPWL_Wnd*, float)*, void (%class.CPWL_Wnd*, float)** %191, i64 14
  %193 = load void (%class.CPWL_Wnd*, float)*, void (%class.CPWL_Wnd*, float)** %192, align 8
  call void %193(%class.CPWL_Wnd* nonnull %183, float %189) #11
  br label %194

194:                                              ; preds = %185, %181, %120
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #11
  br label %197

195:                                              ; preds = %105
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #11
  br label %197

196:                                              ; preds = %179
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #11
  br label %197

197:                                              ; preds = %18, %14, %194, %196, %195, %12
  ret i1 true
}

declare zeroext i1 @_ZN8CPWL_Wnd13OnLButtonDownEjRK13CFX_PTemplateIfE(%class.CPWL_Wnd*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #4

declare zeroext i1 @_ZNK8CPWL_Wnd7HasFlagEj(%class.CPWL_Wnd*, i32) local_unnamed_addr #4

declare void @_ZN8CPWL_Wnd15SetTransparencyEi(%class.CPWL_Wnd*, i32) local_unnamed_addr #4

declare zeroext i1 @_ZN8CPWL_Wnd14InvalidateRectEPK13CFX_FloatRect(%class.CPWL_Wnd*, %class.CFX_FloatRect*) unnamed_addr #4

declare void @_ZN13CFX_FloatRect9NormalizeEv(%class.CFX_FloatRect*) local_unnamed_addr #4

declare zeroext i1 @_ZNK13CFX_FloatRect8ContainsERK13CFX_PTemplateIfE(%class.CFX_FloatRect*, %class.CFX_PTemplate* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CPWL_ScrollBar18NotifyScrollWindowEv(%class.CPWL_ScrollBar* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 0, i32 4, i32 0
  %3 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %2, align 8
  %4 = icmp eq %class.CPWL_Wnd* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 3, i32 1
  %7 = load float, float* %6, align 4
  %8 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 2
  %9 = load float, float* %8, align 4
  %10 = fsub float %7, %9
  %11 = bitcast %class.CPWL_Wnd* %3 to void (%class.CPWL_Wnd*, float)***
  %12 = load void (%class.CPWL_Wnd*, float)**, void (%class.CPWL_Wnd*, float)*** %11, align 8
  %13 = getelementptr inbounds void (%class.CPWL_Wnd*, float)*, void (%class.CPWL_Wnd*, float)** %12, i64 14
  %14 = load void (%class.CPWL_Wnd*, float)*, void (%class.CPWL_Wnd*, float)** %13, align 8
  tail call void %14(%class.CPWL_Wnd* nonnull %3, float %10) #11
  br label %15

15:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN14CPWL_ScrollBar11OnLButtonUpEjRK13CFX_PTemplateIfE(%class.CPWL_ScrollBar*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #2 align 2 {
  %4 = bitcast %class.CPWL_ScrollBar* %0 to %class.CPWL_Wnd*
  %5 = tail call zeroext i1 @_ZN8CPWL_Wnd11OnLButtonUpEjRK13CFX_PTemplateIfE(%class.CPWL_Wnd* %4, i32 %1, %class.CFX_PTemplate* dereferenceable(8) %2) #11
  %6 = tail call zeroext i1 @_ZNK8CPWL_Wnd7HasFlagEj(%class.CPWL_Wnd* %4, i32 4194304) #11
  br i1 %6, label %7, label %12

7:                                                ; preds = %3
  %8 = tail call i32 @_ZN8CPWL_Wnd15GetTransparencyEv(%class.CPWL_Wnd* %4) #11
  %9 = icmp eq i32 %8, 150
  br i1 %9, label %12, label %10

10:                                               ; preds = %7
  tail call void @_ZN8CPWL_Wnd15SetTransparencyEi(%class.CPWL_Wnd* %4, i32 150) #11
  %11 = tail call zeroext i1 @_ZN8CPWL_Wnd14InvalidateRectEPK13CFX_FloatRect(%class.CPWL_Wnd* %4, %class.CFX_FloatRect* null) #11
  br i1 %11, label %12, label %20

12:                                               ; preds = %7, %10, %3
  %13 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %14 = load %class.CFX_Timer*, %class.CFX_Timer** %13, align 8
  store %class.CFX_Timer* null, %class.CFX_Timer** %13, align 8
  %15 = icmp eq %class.CFX_Timer* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  tail call void @_ZN9CFX_TimerD1Ev(%class.CFX_Timer* nonnull %14) #11
  %17 = bitcast %class.CFX_Timer* %14 to i8*
  tail call void @_ZdlPv(i8* %17) #12
  br label %18

18:                                               ; preds = %12, %16
  %19 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 10
  store i8 0, i8* %19, align 8
  br label %20

20:                                               ; preds = %10, %18
  ret i1 true
}

declare zeroext i1 @_ZN8CPWL_Wnd11OnLButtonUpEjRK13CFX_PTemplateIfE(%class.CPWL_Wnd*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CPWL_ScrollBar13SetScrollInfoERK15PWL_SCROLL_INFO(%class.CPWL_ScrollBar*, %struct.PWL_SCROLL_INFO* nocapture readonly dereferenceable(20)) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 3
  %4 = getelementptr inbounds %struct.PWL_SCROLL_INFO, %struct.PWL_SCROLL_INFO* %1, i64 0, i32 0
  %5 = load float, float* %4, align 4
  %6 = getelementptr inbounds %struct.PWL_SCROLL_INFO, %struct.PWL_SCROLL_INFO* %3, i64 0, i32 0
  %7 = load float, float* %6, align 4
  %8 = fcmp oeq float %5, %7
  br i1 %8, label %9, label %33

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.PWL_SCROLL_INFO, %struct.PWL_SCROLL_INFO* %1, i64 0, i32 1
  %11 = load float, float* %10, align 4
  %12 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 3, i32 1
  %13 = load float, float* %12, align 4
  %14 = fcmp oeq float %11, %13
  br i1 %14, label %15, label %33

15:                                               ; preds = %9
  %16 = getelementptr inbounds %struct.PWL_SCROLL_INFO, %struct.PWL_SCROLL_INFO* %1, i64 0, i32 2
  %17 = load float, float* %16, align 4
  %18 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 3, i32 2
  %19 = load float, float* %18, align 4
  %20 = fcmp oeq float %17, %19
  br i1 %20, label %21, label %33

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.PWL_SCROLL_INFO, %struct.PWL_SCROLL_INFO* %1, i64 0, i32 3
  %23 = load float, float* %22, align 4
  %24 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 3, i32 3
  %25 = load float, float* %24, align 4
  %26 = fcmp oeq float %23, %25
  br i1 %26, label %27, label %33

27:                                               ; preds = %21
  %28 = getelementptr inbounds %struct.PWL_SCROLL_INFO, %struct.PWL_SCROLL_INFO* %1, i64 0, i32 4
  %29 = load float, float* %28, align 4
  %30 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 3, i32 4
  %31 = load float, float* %30, align 4
  %32 = fcmp oeq float %29, %31
  br i1 %32, label %54, label %33

33:                                               ; preds = %2, %9, %15, %21, %27
  %34 = bitcast %struct.PWL_SCROLL_INFO* %3 to i8*
  %35 = bitcast %struct.PWL_SCROLL_INFO* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 4 %35, i64 20, i1 false)
  %36 = getelementptr inbounds %struct.PWL_SCROLL_INFO, %struct.PWL_SCROLL_INFO* %1, i64 0, i32 1
  %37 = load float, float* %36, align 4
  %38 = fsub float %37, %5
  %39 = getelementptr inbounds %struct.PWL_SCROLL_INFO, %struct.PWL_SCROLL_INFO* %1, i64 0, i32 2
  %40 = load float, float* %39, align 4
  %41 = fsub float %38, %40
  %42 = fcmp ogt float %41, 0.000000e+00
  %43 = select i1 %42, float %41, float 0.000000e+00
  tail call void @_ZN14CPWL_ScrollBar14SetScrollRangeEfff(%class.CPWL_ScrollBar* %0, float 0.000000e+00, float %43, float %40)
  %44 = getelementptr inbounds %struct.PWL_SCROLL_INFO, %struct.PWL_SCROLL_INFO* %1, i64 0, i32 3
  %45 = bitcast float* %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %struct.PWL_SCROLL_INFO, %struct.PWL_SCROLL_INFO* %1, i64 0, i32 4
  %48 = bitcast float* %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 3
  %51 = bitcast float* %50 to i32*
  store i32 %46, i32* %51, align 4
  %52 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 4
  %53 = bitcast float* %52 to i32*
  store i32 %49, i32* %53, align 4
  br label %54

54:                                               ; preds = %27, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CPWL_ScrollBar14SetScrollRangeEfff(%class.CPWL_ScrollBar*, float, float, float) local_unnamed_addr #2 align 2 {
  %5 = alloca float, align 4
  %6 = alloca float, align 4
  %7 = alloca %"class.fxcrt::ObservedPtr.26", align 8
  %8 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 7, i32 0
  %9 = load %class.CPWL_SBButton*, %class.CPWL_SBButton** %8, align 8
  %10 = icmp eq %class.CPWL_SBButton* %9, null
  br i1 %10, label %88, label %11

11:                                               ; preds = %4
  %12 = bitcast %"class.fxcrt::ObservedPtr.26"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #11
  %13 = getelementptr inbounds %"class.fxcrt::ObservedPtr.26", %"class.fxcrt::ObservedPtr.26"* %7, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.fxcrt::ObservedPtr.26", %"class.fxcrt::ObservedPtr.26"* %7, i64 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI14CPWL_ScrollBarEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  store %class.CPWL_ScrollBar* %0, %class.CPWL_ScrollBar** %14, align 8
  %15 = icmp eq %class.CPWL_ScrollBar* %0, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.fxcrt::ObservedPtr.26", %"class.fxcrt::ObservedPtr.26"* %7, i64 0, i32 0
  %18 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 0, i32 1
  call void @_ZN5fxcrt10Observable11AddObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %18, %"class.fxcrt::Observable::ObserverIface"* nonnull %17) #11
  br label %19

19:                                               ; preds = %11, %16
  %20 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9
  %21 = bitcast float* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21)
  %22 = bitcast float* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22)
  store float %1, float* %5, align 4
  store float %2, float* %6, align 4
  %23 = fcmp olt float %2, %1
  %24 = select i1 %23, float* %6, float* %5
  %25 = bitcast float* %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = bitcast %struct.PWL_SCROLL_PRIVATEDATA* %20 to i32*
  store i32 %26, i32* %27, align 4
  %28 = fcmp olt float %1, %2
  %29 = select i1 %28, float* %6, float* %5
  %30 = bitcast float* %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 0, i32 1
  %33 = bitcast float* %32 to i32*
  store i32 %31, i32* %33, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22)
  %34 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 2
  %35 = load float, float* %34, align 4
  %36 = bitcast i32 %26 to float
  %37 = fcmp olt float %35, %36
  %38 = bitcast i32 %31 to float
  br i1 %37, label %39, label %47

39:                                               ; preds = %19
  %40 = fsub float %35, %36
  %41 = fpext float %40 to double
  %42 = fcmp olt double %41, 1.000000e-04
  %43 = fcmp ogt double %41, -1.000000e-04
  %44 = and i1 %42, %43
  br i1 %44, label %47, label %45

45:                                               ; preds = %39
  %46 = bitcast float* %34 to i32*
  store i32 %26, i32* %46, align 4
  br label %47

47:                                               ; preds = %45, %39, %19
  %48 = phi float [ %35, %39 ], [ %36, %45 ], [ %35, %19 ]
  %49 = fcmp ogt float %48, %38
  br i1 %49, label %50, label %58

50:                                               ; preds = %47
  %51 = fsub float %48, %38
  %52 = fpext float %51 to double
  %53 = fcmp olt double %52, 1.000000e-04
  %54 = fcmp ogt double %52, -1.000000e-04
  %55 = and i1 %53, %54
  br i1 %55, label %58, label %56

56:                                               ; preds = %50
  %57 = bitcast float* %34 to i32*
  store i32 %31, i32* %57, align 4
  br label %58

58:                                               ; preds = %47, %50, %56
  %59 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 1
  store float %3, float* %59, align 4
  %60 = fsub float %38, %36
  %61 = fcmp olt float %60, 0.000000e+00
  br i1 %61, label %62, label %71

62:                                               ; preds = %58
  %63 = fpext float %60 to double
  %64 = fcmp olt double %63, 1.000000e-04
  %65 = fcmp ogt double %63, -1.000000e-04
  %66 = and i1 %64, %65
  br i1 %66, label %71, label %67

67:                                               ; preds = %62
  %68 = bitcast %class.CPWL_SBButton** %8 to %class.CPWL_Wnd**
  %69 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %68, align 8
  %70 = call zeroext i1 @_ZN8CPWL_Wnd10SetVisibleEb(%class.CPWL_Wnd* %69, i1 zeroext false) #11
  br label %81

71:                                               ; preds = %62, %58
  %72 = bitcast %class.CPWL_SBButton** %8 to %class.CPWL_Wnd**
  %73 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %72, align 8
  %74 = call zeroext i1 @_ZN8CPWL_Wnd10SetVisibleEb(%class.CPWL_Wnd* %73, i1 zeroext true) #11
  br i1 %74, label %75, label %81

75:                                               ; preds = %71
  %76 = load %class.CPWL_ScrollBar*, %class.CPWL_ScrollBar** %14, align 8
  %77 = icmp eq %class.CPWL_ScrollBar* %76, null
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI14CPWL_ScrollBarEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  br label %87

79:                                               ; preds = %75
  %80 = call zeroext i1 @_ZN14CPWL_ScrollBar13MovePosButtonEb(%class.CPWL_ScrollBar* %0, i1 zeroext true)
  br label %81

81:                                               ; preds = %71, %79, %67
  %82 = load %class.CPWL_ScrollBar*, %class.CPWL_ScrollBar** %14, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI14CPWL_ScrollBarEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %83 = icmp eq %class.CPWL_ScrollBar* %82, null
  br i1 %83, label %87, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %82, i64 0, i32 0, i32 1
  %86 = getelementptr inbounds %"class.fxcrt::ObservedPtr.26", %"class.fxcrt::ObservedPtr.26"* %7, i64 0, i32 0
  call void @_ZN5fxcrt10Observable14RemoveObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %85, %"class.fxcrt::Observable::ObserverIface"* nonnull %86) #11
  br label %87

87:                                               ; preds = %78, %81, %84
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #11
  br label %88

88:                                               ; preds = %4, %87
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN14CPWL_ScrollBar13SetScrollStepEff(%class.CPWL_ScrollBar* nocapture, float, float) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 3
  store float %1, float* %4, align 4
  %5 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 4
  store float %2, float* %5, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CPWL_ScrollBar17SetScrollPositionEf(%class.CPWL_ScrollBar*, float) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 3, i32 1
  %4 = load float, float* %3, align 4
  %5 = fsub float %4, %1
  %6 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 2
  %7 = load float, float* %6, align 4
  %8 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 0, i32 0
  %9 = load float, float* %8, align 4
  %10 = fcmp olt float %9, %5
  %11 = fsub float %5, %9
  %12 = fpext float %11 to double
  br i1 %10, label %13, label %17

13:                                               ; preds = %2
  %14 = fcmp olt double %12, 1.000000e-04
  %15 = fcmp ogt double %12, -1.000000e-04
  %16 = and i1 %14, %15
  br i1 %16, label %17, label %21

17:                                               ; preds = %2, %13
  %18 = fcmp olt double %12, 1.000000e-04
  %19 = fcmp ogt double %12, -1.000000e-04
  %20 = and i1 %18, %19
  br i1 %20, label %21, label %36

21:                                               ; preds = %17, %13
  %22 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 0, i32 1
  %23 = load float, float* %22, align 4
  %24 = fcmp ogt float %23, %5
  %25 = fsub float %5, %23
  %26 = fpext float %25 to double
  br i1 %24, label %27, label %31

27:                                               ; preds = %21
  %28 = fcmp olt double %26, 1.000000e-04
  %29 = fcmp ogt double %26, -1.000000e-04
  %30 = and i1 %28, %29
  br i1 %30, label %31, label %35

31:                                               ; preds = %21, %27
  %32 = fcmp olt double %26, 1.000000e-04
  %33 = fcmp ogt double %26, -1.000000e-04
  %34 = and i1 %32, %33
  br i1 %34, label %35, label %36

35:                                               ; preds = %31, %27
  store float %5, float* %6, align 4
  br label %36

36:                                               ; preds = %35, %31, %17
  %37 = phi float [ %7, %17 ], [ %7, %31 ], [ %5, %35 ]
  %38 = fsub float %37, %7
  %39 = fpext float %38 to double
  %40 = fcmp olt double %39, 1.000000e-04
  %41 = fcmp ogt double %39, -1.000000e-04
  %42 = and i1 %40, %41
  br i1 %42, label %45, label %43

43:                                               ; preds = %36
  %44 = tail call zeroext i1 @_ZN14CPWL_ScrollBar13MovePosButtonEb(%class.CPWL_ScrollBar* %0, i1 zeroext true) #11
  br label %45

45:                                               ; preds = %36, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CPWL_ScrollBar12SetScrollPosEf(%class.CPWL_ScrollBar*, float) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 2
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = fcmp olt float %6, %1
  %8 = fsub float %1, %6
  %9 = fpext float %8 to double
  br i1 %7, label %10, label %14

10:                                               ; preds = %2
  %11 = fcmp olt double %9, 1.000000e-04
  %12 = fcmp ogt double %9, -1.000000e-04
  %13 = and i1 %11, %12
  br i1 %13, label %14, label %18

14:                                               ; preds = %2, %10
  %15 = fcmp olt double %9, 1.000000e-04
  %16 = fcmp ogt double %9, -1.000000e-04
  %17 = and i1 %15, %16
  br i1 %17, label %18, label %33

18:                                               ; preds = %14, %10
  %19 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 0, i32 1
  %20 = load float, float* %19, align 4
  %21 = fcmp ogt float %20, %1
  %22 = fsub float %1, %20
  %23 = fpext float %22 to double
  br i1 %21, label %24, label %28

24:                                               ; preds = %18
  %25 = fcmp olt double %23, 1.000000e-04
  %26 = fcmp ogt double %23, -1.000000e-04
  %27 = and i1 %25, %26
  br i1 %27, label %28, label %32

28:                                               ; preds = %18, %24
  %29 = fcmp olt double %23, 1.000000e-04
  %30 = fcmp ogt double %23, -1.000000e-04
  %31 = and i1 %29, %30
  br i1 %31, label %32, label %33

32:                                               ; preds = %28, %24
  store float %1, float* %3, align 4
  br label %33

33:                                               ; preds = %14, %28, %32
  %34 = phi float [ %4, %14 ], [ %4, %28 ], [ %1, %32 ]
  %35 = fsub float %34, %4
  %36 = fpext float %35 to double
  %37 = fcmp olt double %36, 1.000000e-04
  %38 = fcmp ogt double %36, -1.000000e-04
  %39 = and i1 %37, %38
  br i1 %39, label %42, label %40

40:                                               ; preds = %33
  %41 = tail call zeroext i1 @_ZN14CPWL_ScrollBar13MovePosButtonEb(%class.CPWL_ScrollBar* %0, i1 zeroext true)
  br label %42

42:                                               ; preds = %33, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CPWL_ScrollBar17NotifyLButtonDownEP8CPWL_WndRK13CFX_PTemplateIfE(%class.CPWL_ScrollBar*, %class.CPWL_Wnd* readnone, %class.CFX_PTemplate* nocapture readonly dereferenceable(8)) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 5, i32 0
  %5 = bitcast %class.CPWL_SBButton** %4 to %class.CPWL_Wnd**
  %6 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %5, align 8
  %7 = icmp eq %class.CPWL_Wnd* %6, %1
  br i1 %7, label %8, label %9

8:                                                ; preds = %3
  tail call void @_ZN14CPWL_ScrollBar17OnMinButtonLBDownERK13CFX_PTemplateIfE(%class.CPWL_ScrollBar* %0, %class.CFX_PTemplate* dereferenceable(8) undef)
  br label %33

9:                                                ; preds = %3
  %10 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 6, i32 0
  %11 = bitcast %class.CPWL_SBButton** %10 to %class.CPWL_Wnd**
  %12 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %11, align 8
  %13 = icmp eq %class.CPWL_Wnd* %12, %1
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZN14CPWL_ScrollBar17OnMaxButtonLBDownERK13CFX_PTemplateIfE(%class.CPWL_ScrollBar* %0, %class.CFX_PTemplate* dereferenceable(8) undef)
  br label %33

15:                                               ; preds = %9
  %16 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 7, i32 0
  %17 = bitcast %class.CPWL_SBButton** %16 to %class.CPWL_Wnd**
  %18 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %17, align 8
  %19 = icmp eq %class.CPWL_Wnd* %18, %1
  br i1 %19, label %20, label %33

20:                                               ; preds = %15
  %21 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 10
  store i8 1, i8* %21, align 8
  %22 = icmp eq %class.CPWL_Wnd* %18, null
  br i1 %22, label %33, label %23

23:                                               ; preds = %20
  %24 = tail call { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd13GetWindowRectEv(%class.CPWL_Wnd* nonnull %1) #11
  %25 = extractvalue { <2 x float>, <2 x float> } %24, 1
  %26 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %2, i64 0, i32 1
  %27 = bitcast float* %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 13
  %30 = bitcast float* %29 to i32*
  store i32 %28, i32* %30, align 4
  %31 = extractelement <2 x float> %25, i32 1
  %32 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 14
  store float %31, float* %32, align 8
  br label %33

33:                                               ; preds = %23, %20, %14, %15, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CPWL_ScrollBar17OnMinButtonLBDownERK13CFX_PTemplateIfE(%class.CPWL_ScrollBar*, %class.CFX_PTemplate* nocapture readnone dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 2
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 4
  %6 = load float, float* %5, align 4
  %7 = fsub float %4, %6
  %8 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 0, i32 0
  %9 = load float, float* %8, align 4
  %10 = fcmp olt float %9, %7
  %11 = fsub float %7, %9
  %12 = fpext float %11 to double
  br i1 %10, label %13, label %17

13:                                               ; preds = %2
  %14 = fcmp olt double %12, 1.000000e-04
  %15 = fcmp ogt double %12, -1.000000e-04
  %16 = and i1 %14, %15
  br i1 %16, label %17, label %21

17:                                               ; preds = %2, %13
  %18 = fcmp olt double %12, 1.000000e-04
  %19 = fcmp ogt double %12, -1.000000e-04
  %20 = and i1 %18, %19
  br i1 %20, label %21, label %36

21:                                               ; preds = %17, %13
  %22 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 0, i32 1
  %23 = load float, float* %22, align 4
  %24 = fcmp ogt float %23, %7
  %25 = fsub float %7, %23
  %26 = fpext float %25 to double
  br i1 %24, label %27, label %31

27:                                               ; preds = %21
  %28 = fcmp olt double %26, 1.000000e-04
  %29 = fcmp ogt double %26, -1.000000e-04
  %30 = and i1 %28, %29
  br i1 %30, label %31, label %35

31:                                               ; preds = %21, %27
  %32 = fcmp olt double %26, 1.000000e-04
  %33 = fcmp ogt double %26, -1.000000e-04
  %34 = and i1 %32, %33
  br i1 %34, label %35, label %36

35:                                               ; preds = %31, %27
  store float %7, float* %3, align 4
  br label %57

36:                                               ; preds = %31, %17
  %37 = fsub float %9, %9
  %38 = fpext float %37 to double
  %39 = fcmp olt double %38, 1.000000e-04
  %40 = fcmp ogt double %38, -1.000000e-04
  %41 = and i1 %39, %40
  br i1 %41, label %42, label %57

42:                                               ; preds = %36
  %43 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 0, i32 1
  %44 = load float, float* %43, align 4
  %45 = fcmp ogt float %44, %9
  %46 = fsub float %9, %44
  %47 = fpext float %46 to double
  br i1 %45, label %48, label %52

48:                                               ; preds = %42
  %49 = fcmp olt double %47, 1.000000e-04
  %50 = fcmp ogt double %47, -1.000000e-04
  %51 = and i1 %49, %50
  br i1 %51, label %52, label %56

52:                                               ; preds = %42, %48
  %53 = fcmp olt double %47, 1.000000e-04
  %54 = fcmp ogt double %47, -1.000000e-04
  %55 = and i1 %53, %54
  br i1 %55, label %56, label %57

56:                                               ; preds = %52, %48
  store float %9, float* %3, align 4
  br label %57

57:                                               ; preds = %35, %36, %52, %56
  %58 = tail call zeroext i1 @_ZN14CPWL_ScrollBar13MovePosButtonEb(%class.CPWL_ScrollBar* %0, i1 zeroext true)
  br i1 %58, label %59, label %89

59:                                               ; preds = %57
  %60 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 0, i32 4, i32 0
  %61 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %60, align 8
  %62 = icmp eq %class.CPWL_Wnd* %61, null
  br i1 %62, label %72, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 3, i32 1
  %65 = load float, float* %64, align 4
  %66 = load float, float* %3, align 4
  %67 = fsub float %65, %66
  %68 = bitcast %class.CPWL_Wnd* %61 to void (%class.CPWL_Wnd*, float)***
  %69 = load void (%class.CPWL_Wnd*, float)**, void (%class.CPWL_Wnd*, float)*** %68, align 8
  %70 = getelementptr inbounds void (%class.CPWL_Wnd*, float)*, void (%class.CPWL_Wnd*, float)** %69, i64 14
  %71 = load void (%class.CPWL_Wnd*, float)*, void (%class.CPWL_Wnd*, float)** %70, align 8
  tail call void %71(%class.CPWL_Wnd* nonnull %61, float %67) #11
  br label %72

72:                                               ; preds = %59, %63
  %73 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 11
  store i8 1, i8* %73, align 1
  %74 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 0, i32 2, i32 1, i32 1
  %75 = load %"class.CFX_Timer::HandlerIface"*, %"class.CFX_Timer::HandlerIface"** %74, align 8
  %76 = tail call i8* @_Znwm(i64 32) #12
  %77 = bitcast i8* %76 to %class.CFX_Timer*
  %78 = icmp eq %class.CPWL_ScrollBar* %0, null
  %79 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 2
  %80 = select i1 %78, %"class.CFX_Timer::CallbackIface"* null, %"class.CFX_Timer::CallbackIface"* %79
  tail call void @_ZN9CFX_TimerC1EPNS_12HandlerIfaceEPNS_13CallbackIfaceEi(%class.CFX_Timer* nonnull %77, %"class.CFX_Timer::HandlerIface"* %75, %"class.CFX_Timer::CallbackIface"* %80, i32 100) #11
  %81 = ptrtoint i8* %76 to i64
  %82 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 8
  %83 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %82, i64 0, i32 0, i32 0, i32 0
  %84 = load %class.CFX_Timer*, %class.CFX_Timer** %83, align 8
  %85 = bitcast %"class.std::__1::unique_ptr.19"* %82 to i64*
  store i64 %81, i64* %85, align 8
  %86 = icmp eq %class.CFX_Timer* %84, null
  br i1 %86, label %89, label %87

87:                                               ; preds = %72
  tail call void @_ZN9CFX_TimerD1Ev(%class.CFX_Timer* nonnull %84) #11
  %88 = bitcast %class.CFX_Timer* %84 to i8*
  tail call void @_ZdlPv(i8* %88) #12
  br label %89

89:                                               ; preds = %72, %87, %57
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CPWL_ScrollBar17OnMaxButtonLBDownERK13CFX_PTemplateIfE(%class.CPWL_ScrollBar*, %class.CFX_PTemplate* nocapture readnone dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 2
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 4
  %6 = load float, float* %5, align 4
  %7 = fadd float %4, %6
  %8 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 0, i32 0
  %9 = load float, float* %8, align 4
  %10 = fcmp olt float %9, %7
  %11 = fsub float %7, %9
  %12 = fpext float %11 to double
  br i1 %10, label %13, label %17

13:                                               ; preds = %2
  %14 = fcmp olt double %12, 1.000000e-04
  %15 = fcmp ogt double %12, -1.000000e-04
  %16 = and i1 %14, %15
  br i1 %16, label %17, label %24

17:                                               ; preds = %2, %13
  %18 = fcmp olt double %12, 1.000000e-04
  %19 = fcmp ogt double %12, -1.000000e-04
  %20 = and i1 %18, %19
  br i1 %20, label %24, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 0, i32 1
  %23 = load float, float* %22, align 4
  br label %39

24:                                               ; preds = %17, %13
  %25 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 0, i32 1
  %26 = load float, float* %25, align 4
  %27 = fcmp ogt float %26, %7
  %28 = fsub float %7, %26
  %29 = fpext float %28 to double
  br i1 %27, label %30, label %34

30:                                               ; preds = %24
  %31 = fcmp olt double %29, 1.000000e-04
  %32 = fcmp ogt double %29, -1.000000e-04
  %33 = and i1 %31, %32
  br i1 %33, label %34, label %38

34:                                               ; preds = %24, %30
  %35 = fcmp olt double %29, 1.000000e-04
  %36 = fcmp ogt double %29, -1.000000e-04
  %37 = and i1 %35, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %34, %30
  store float %7, float* %3, align 4
  br label %59

39:                                               ; preds = %34, %21
  %40 = phi float [ %23, %21 ], [ %26, %34 ]
  %41 = fcmp olt float %9, %40
  %42 = fsub float %40, %9
  %43 = fpext float %42 to double
  br i1 %41, label %44, label %48

44:                                               ; preds = %39
  %45 = fcmp olt double %43, 1.000000e-04
  %46 = fcmp ogt double %43, -1.000000e-04
  %47 = and i1 %45, %46
  br i1 %47, label %48, label %52

48:                                               ; preds = %39, %44
  %49 = fcmp olt double %43, 1.000000e-04
  %50 = fcmp ogt double %43, -1.000000e-04
  %51 = and i1 %49, %50
  br i1 %51, label %52, label %59

52:                                               ; preds = %48, %44
  %53 = fsub float %40, %40
  %54 = fpext float %53 to double
  %55 = fcmp olt double %54, 1.000000e-04
  %56 = fcmp ogt double %54, -1.000000e-04
  %57 = and i1 %55, %56
  br i1 %57, label %58, label %59

58:                                               ; preds = %52
  store float %40, float* %3, align 4
  br label %59

59:                                               ; preds = %38, %48, %52, %58
  %60 = tail call zeroext i1 @_ZN14CPWL_ScrollBar13MovePosButtonEb(%class.CPWL_ScrollBar* %0, i1 zeroext true)
  br i1 %60, label %61, label %91

61:                                               ; preds = %59
  %62 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 0, i32 4, i32 0
  %63 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %62, align 8
  %64 = icmp eq %class.CPWL_Wnd* %63, null
  br i1 %64, label %74, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 3, i32 1
  %67 = load float, float* %66, align 4
  %68 = load float, float* %3, align 4
  %69 = fsub float %67, %68
  %70 = bitcast %class.CPWL_Wnd* %63 to void (%class.CPWL_Wnd*, float)***
  %71 = load void (%class.CPWL_Wnd*, float)**, void (%class.CPWL_Wnd*, float)*** %70, align 8
  %72 = getelementptr inbounds void (%class.CPWL_Wnd*, float)*, void (%class.CPWL_Wnd*, float)** %71, i64 14
  %73 = load void (%class.CPWL_Wnd*, float)*, void (%class.CPWL_Wnd*, float)** %72, align 8
  tail call void %73(%class.CPWL_Wnd* nonnull %63, float %69) #11
  br label %74

74:                                               ; preds = %61, %65
  %75 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 11
  store i8 0, i8* %75, align 1
  %76 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 0, i32 2, i32 1, i32 1
  %77 = load %"class.CFX_Timer::HandlerIface"*, %"class.CFX_Timer::HandlerIface"** %76, align 8
  %78 = tail call i8* @_Znwm(i64 32) #12
  %79 = bitcast i8* %78 to %class.CFX_Timer*
  %80 = icmp eq %class.CPWL_ScrollBar* %0, null
  %81 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 2
  %82 = select i1 %80, %"class.CFX_Timer::CallbackIface"* null, %"class.CFX_Timer::CallbackIface"* %81
  tail call void @_ZN9CFX_TimerC1EPNS_12HandlerIfaceEPNS_13CallbackIfaceEi(%class.CFX_Timer* nonnull %79, %"class.CFX_Timer::HandlerIface"* %77, %"class.CFX_Timer::CallbackIface"* %82, i32 100) #11
  %83 = ptrtoint i8* %78 to i64
  %84 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %84, i64 0, i32 0, i32 0, i32 0
  %86 = load %class.CFX_Timer*, %class.CFX_Timer** %85, align 8
  %87 = bitcast %"class.std::__1::unique_ptr.19"* %84 to i64*
  store i64 %83, i64* %87, align 8
  %88 = icmp eq %class.CFX_Timer* %86, null
  br i1 %88, label %91, label %89

89:                                               ; preds = %74
  tail call void @_ZN9CFX_TimerD1Ev(%class.CFX_Timer* nonnull %86) #11
  %90 = bitcast %class.CFX_Timer* %86 to i8*
  tail call void @_ZdlPv(i8* %90) #12
  br label %91

91:                                               ; preds = %74, %89, %59
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CPWL_ScrollBar17OnPosButtonLBDownERK13CFX_PTemplateIfE(%class.CPWL_ScrollBar* nocapture, %class.CFX_PTemplate* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 10
  store i8 1, i8* %3, align 8
  %4 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 7, i32 0
  %5 = load %class.CPWL_SBButton*, %class.CPWL_SBButton** %4, align 8
  %6 = icmp eq %class.CPWL_SBButton* %5, null
  br i1 %6, label %18, label %7

7:                                                ; preds = %2
  %8 = bitcast %class.CPWL_SBButton* %5 to %class.CPWL_Wnd*
  %9 = tail call { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd13GetWindowRectEv(%class.CPWL_Wnd* nonnull %8) #11
  %10 = extractvalue { <2 x float>, <2 x float> } %9, 1
  %11 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %1, i64 0, i32 1
  %12 = bitcast float* %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 13
  %15 = bitcast float* %14 to i32*
  store i32 %13, i32* %15, align 4
  %16 = extractelement <2 x float> %10, i32 1
  %17 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 14
  store float %16, float* %17, align 8
  br label %18

18:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN14CPWL_ScrollBar15NotifyLButtonUpEP8CPWL_WndRK13CFX_PTemplateIfE(%class.CPWL_ScrollBar* nocapture, %class.CPWL_Wnd* readnone, %class.CFX_PTemplate* nocapture readnone dereferenceable(8)) unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 5, i32 0
  %5 = bitcast %class.CPWL_SBButton** %4 to %class.CPWL_Wnd**
  %6 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %5, align 8
  %7 = icmp eq %class.CPWL_Wnd* %6, %1
  br i1 %7, label %20, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 6, i32 0
  %10 = bitcast %class.CPWL_SBButton** %9 to %class.CPWL_Wnd**
  %11 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %10, align 8
  %12 = icmp eq %class.CPWL_Wnd* %11, %1
  br i1 %12, label %20, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 7, i32 0
  %15 = bitcast %class.CPWL_SBButton** %14 to %class.CPWL_Wnd**
  %16 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %15, align 8
  %17 = icmp eq %class.CPWL_Wnd* %16, %1
  br i1 %17, label %18, label %20

18:                                               ; preds = %13
  %19 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 10
  store i8 0, i8* %19, align 8
  br label %20

20:                                               ; preds = %8, %3, %18, %13
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN14CPWL_ScrollBar15OnMinButtonLBUpERK13CFX_PTemplateIfE(%class.CPWL_ScrollBar* nocapture, %class.CFX_PTemplate* nocapture dereferenceable(8)) local_unnamed_addr #8 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN14CPWL_ScrollBar15OnMaxButtonLBUpERK13CFX_PTemplateIfE(%class.CPWL_ScrollBar* nocapture, %class.CFX_PTemplate* nocapture dereferenceable(8)) local_unnamed_addr #8 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN14CPWL_ScrollBar15OnPosButtonLBUpERK13CFX_PTemplateIfE(%class.CPWL_ScrollBar* nocapture, %class.CFX_PTemplate* nocapture readnone dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 10
  store i8 0, i8* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CPWL_ScrollBar15NotifyMouseMoveEP8CPWL_WndRK13CFX_PTemplateIfE(%class.CPWL_ScrollBar*, %class.CPWL_Wnd* readnone, %class.CFX_PTemplate* nocapture readonly dereferenceable(8)) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 5, i32 0
  %5 = bitcast %class.CPWL_SBButton** %4 to %class.CPWL_Wnd**
  %6 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %5, align 8
  %7 = icmp eq %class.CPWL_Wnd* %6, %1
  br i1 %7, label %19, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 6, i32 0
  %10 = bitcast %class.CPWL_SBButton** %9 to %class.CPWL_Wnd**
  %11 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %10, align 8
  %12 = icmp eq %class.CPWL_Wnd* %11, %1
  br i1 %12, label %19, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 7, i32 0
  %15 = bitcast %class.CPWL_SBButton** %14 to %class.CPWL_Wnd**
  %16 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %15, align 8
  %17 = icmp eq %class.CPWL_Wnd* %16, %1
  br i1 %17, label %18, label %19

18:                                               ; preds = %13
  tail call void @_ZN14CPWL_ScrollBar20OnPosButtonMouseMoveERK13CFX_PTemplateIfE(%class.CPWL_ScrollBar* %0, %class.CFX_PTemplate* dereferenceable(8) %2)
  br label %19

19:                                               ; preds = %8, %3, %18, %13
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN14CPWL_ScrollBar20OnMinButtonMouseMoveERK13CFX_PTemplateIfE(%class.CPWL_ScrollBar* nocapture, %class.CFX_PTemplate* nocapture dereferenceable(8)) local_unnamed_addr #8 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN14CPWL_ScrollBar20OnMaxButtonMouseMoveERK13CFX_PTemplateIfE(%class.CPWL_ScrollBar* nocapture, %class.CFX_PTemplate* nocapture dereferenceable(8)) local_unnamed_addr #8 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CPWL_ScrollBar20OnPosButtonMouseMoveERK13CFX_PTemplateIfE(%class.CPWL_ScrollBar*, %class.CFX_PTemplate* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = alloca %class.CFX_FloatRect, align 8
  %4 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %1, i64 0, i32 1
  %5 = load float, float* %4, align 4
  %6 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 13
  %7 = load float, float* %6, align 4
  %8 = fsub float %5, %7
  %9 = tail call float @llvm.fabs.f32(float %8) #11
  %10 = fcmp olt float %9, 1.000000e+00
  br i1 %10, label %155, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 2
  %13 = load float, float* %12, align 4
  %14 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 14
  %15 = load float, float* %14, align 8
  %16 = fadd float %5, %15
  %17 = fsub float %16, %7
  %18 = bitcast %class.CPWL_ScrollBar* %0 to %class.CPWL_Wnd*
  %19 = tail call { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd13GetClientRectEv(%class.CPWL_Wnd* %18) #11
  %20 = extractvalue { <2 x float>, <2 x float> } %19, 0
  %21 = extractvalue { <2 x float>, <2 x float> } %19, 1
  %22 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 5, i32 0
  %23 = load %class.CPWL_SBButton*, %class.CPWL_SBButton** %22, align 8
  %24 = icmp eq %class.CPWL_SBButton* %23, null
  br i1 %24, label %66, label %25

25:                                               ; preds = %11
  %26 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 6, i32 0
  %27 = load %class.CPWL_SBButton*, %class.CPWL_SBButton** %26, align 8
  %28 = icmp eq %class.CPWL_SBButton* %27, null
  br i1 %28, label %66, label %29

29:                                               ; preds = %25
  %30 = bitcast %class.CPWL_SBButton* %23 to %class.CPWL_Wnd*
  %31 = tail call { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd13GetWindowRectEv(%class.CPWL_Wnd* nonnull %30) #11
  %32 = extractvalue { <2 x float>, <2 x float> } %31, 0
  %33 = extractvalue { <2 x float>, <2 x float> } %31, 1
  %34 = bitcast %class.CPWL_SBButton** %26 to %class.CPWL_Wnd**
  %35 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %34, align 8
  %36 = tail call { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd13GetWindowRectEv(%class.CPWL_Wnd* %35) #11
  %37 = extractvalue { <2 x float>, <2 x float> } %36, 0
  %38 = extractvalue { <2 x float>, <2 x float> } %36, 1
  %39 = shufflevector <2 x float> %33, <2 x float> %38, <2 x i32> <i32 1, i32 3>
  %40 = shufflevector <2 x float> %32, <2 x float> %37, <2 x i32> <i32 1, i32 3>
  %41 = fsub <2 x float> %39, %40
  %42 = bitcast %class.CFX_FloatRect* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #11
  %43 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %3, i64 0, i32 0
  %44 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %3, i64 0, i32 1
  %45 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %3, i64 0, i32 2
  %46 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %3, i64 0, i32 3
  %47 = extractelement <2 x float> %21, i32 1
  %48 = extractelement <2 x float> %20, i32 1
  %49 = fsub float %47, %48
  %50 = extractelement <2 x float> %41, i32 0
  %51 = extractelement <2 x float> %41, i32 1
  %52 = fadd float %50, %51
  %53 = fadd float %52, 2.000000e+00
  %54 = fcmp ogt float %49, %53
  %55 = extractelement <2 x float> %20, i32 0
  %56 = fadd float %48, %50
  %57 = fadd float %56, 1.000000e+00
  %58 = extractelement <2 x float> %21, i32 0
  %59 = fsub float %47, %51
  %60 = fadd float %59, -1.000000e+00
  %61 = select i1 %54, float %60, float %57
  store float %55, float* %43, align 8
  store float %57, float* %44, align 4
  store float %58, float* %45, align 8
  store float %61, float* %46, align 4
  call void @_ZN13CFX_FloatRect9NormalizeEv(%class.CFX_FloatRect* nonnull %3) #11
  %62 = bitcast %class.CFX_FloatRect* %3 to <2 x float>*
  %63 = load <2 x float>, <2 x float>* %62, align 8
  %64 = bitcast float* %45 to <2 x float>*
  %65 = load <2 x float>, <2 x float>* %64, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #11
  br label %66

66:                                               ; preds = %11, %25, %29
  %67 = phi <2 x float> [ %63, %29 ], [ %20, %25 ], [ %20, %11 ]
  %68 = phi <2 x float> [ %65, %29 ], [ %21, %25 ], [ %21, %11 ]
  %69 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 0, i32 1
  %70 = load float, float* %69, align 4
  %71 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 0, i32 0
  %72 = load float, float* %71, align 4
  %73 = fsub float %70, %72
  %74 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 1
  %75 = load float, float* %74, align 8
  %76 = fadd float %73, %75
  %77 = fcmp oeq float %76, 0.000000e+00
  %78 = select i1 %77, float 1.000000e+00, float %76
  %79 = extractelement <2 x float> %68, i32 1
  %80 = fsub float %79, %17
  %81 = fmul float %80, %78
  %82 = extractelement <2 x float> %67, i32 1
  %83 = fsub float %79, %82
  %84 = fdiv float %81, %83
  %85 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 10
  %86 = load i8, i8* %85, align 8, !range !2
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %155, label %88

88:                                               ; preds = %66
  %89 = fcmp olt float %84, %72
  br i1 %89, label %90, label %97

90:                                               ; preds = %88
  %91 = fsub float %84, %72
  %92 = fpext float %91 to double
  %93 = fcmp olt double %92, 1.000000e-04
  %94 = fcmp ogt double %92, -1.000000e-04
  %95 = and i1 %93, %94
  %96 = select i1 %95, float %84, float %72
  br label %97

97:                                               ; preds = %90, %88
  %98 = phi float [ %84, %88 ], [ %96, %90 ]
  %99 = fcmp ogt float %98, %70
  br i1 %99, label %100, label %107

100:                                              ; preds = %97
  %101 = fsub float %98, %70
  %102 = fpext float %101 to double
  %103 = fcmp olt double %102, 1.000000e-04
  %104 = fcmp ogt double %102, -1.000000e-04
  %105 = and i1 %103, %104
  %106 = select i1 %105, float %98, float %70
  br label %107

107:                                              ; preds = %100, %97
  %108 = phi float [ %98, %97 ], [ %106, %100 ]
  %109 = fcmp olt float %72, %108
  %110 = fsub float %108, %72
  %111 = fpext float %110 to double
  br i1 %109, label %112, label %116

112:                                              ; preds = %107
  %113 = fcmp olt double %111, 1.000000e-04
  %114 = fcmp ogt double %111, -1.000000e-04
  %115 = and i1 %113, %114
  br i1 %115, label %116, label %120

116:                                              ; preds = %107, %112
  %117 = fcmp olt double %111, 1.000000e-04
  %118 = fcmp ogt double %111, -1.000000e-04
  %119 = and i1 %117, %118
  br i1 %119, label %120, label %133

120:                                              ; preds = %116, %112
  %121 = fcmp ogt float %70, %108
  %122 = fsub float %108, %70
  %123 = fpext float %122 to double
  br i1 %121, label %124, label %128

124:                                              ; preds = %120
  %125 = fcmp olt double %123, 1.000000e-04
  %126 = fcmp ogt double %123, -1.000000e-04
  %127 = and i1 %125, %126
  br i1 %127, label %128, label %132

128:                                              ; preds = %120, %124
  %129 = fcmp olt double %123, 1.000000e-04
  %130 = fcmp ogt double %123, -1.000000e-04
  %131 = and i1 %129, %130
  br i1 %131, label %132, label %133

132:                                              ; preds = %128, %124
  store float %108, float* %12, align 4
  br label %133

133:                                              ; preds = %116, %128, %132
  %134 = load float, float* %12, align 4
  %135 = fsub float %13, %134
  %136 = fpext float %135 to double
  %137 = fcmp olt double %136, 1.000000e-04
  %138 = fcmp ogt double %136, -1.000000e-04
  %139 = and i1 %137, %138
  br i1 %139, label %155, label %140

140:                                              ; preds = %133
  %141 = call zeroext i1 @_ZN14CPWL_ScrollBar13MovePosButtonEb(%class.CPWL_ScrollBar* %0, i1 zeroext true)
  br i1 %141, label %142, label %155

142:                                              ; preds = %140
  %143 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 0, i32 4, i32 0
  %144 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %143, align 8
  %145 = icmp eq %class.CPWL_Wnd* %144, null
  br i1 %145, label %155, label %146

146:                                              ; preds = %142
  %147 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 3, i32 1
  %148 = load float, float* %147, align 4
  %149 = load float, float* %12, align 4
  %150 = fsub float %148, %149
  %151 = bitcast %class.CPWL_Wnd* %144 to void (%class.CPWL_Wnd*, float)***
  %152 = load void (%class.CPWL_Wnd*, float)**, void (%class.CPWL_Wnd*, float)*** %151, align 8
  %153 = getelementptr inbounds void (%class.CPWL_Wnd*, float)*, void (%class.CPWL_Wnd*, float)** %152, i64 14
  %154 = load void (%class.CPWL_Wnd*, float)*, void (%class.CPWL_Wnd*, float)** %153, align 8
  call void %154(%class.CPWL_Wnd* nonnull %144, float %150) #11
  br label %155

155:                                              ; preds = %146, %142, %140, %133, %66, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CPWL_ScrollBar13CreateButtonsERKN8CPWL_Wnd12CreateParamsE(%class.CPWL_ScrollBar*, %"class.CPWL_Wnd::CreateParams"* dereferenceable(184)) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.CPWL_Wnd::CreateParams", align 8
  %4 = alloca %"class.fxcrt::ObservedPtr.26", align 8
  %5 = bitcast %"class.CPWL_Wnd::CreateParams"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %5) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 bitcast (%"class.CPWL_Wnd::CreateParams"* @__const._ZN14CPWL_ScrollBar13CreateButtonsERKN8CPWL_Wnd12CreateParamsE.scp to i8*), i64 184, i1 false)
  call void @_ZN8CPWL_Wnd12CreateParamsC1ERKS0_(%"class.CPWL_Wnd::CreateParams"* nonnull %3, %"class.CPWL_Wnd::CreateParams"* dereferenceable(184) %1) #11
  %6 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %3, i64 0, i32 9
  store i32 2, i32* %6, align 4
  %7 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %3, i64 0, i32 8
  store i32 2, i32* %7, align 8
  %8 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %3, i64 0, i32 6
  store i32 1679818752, i32* %8, align 8
  %9 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 5, i32 0
  %10 = load %class.CPWL_SBButton*, %class.CPWL_SBButton** %9, align 8
  %11 = icmp eq %class.CPWL_SBButton* %10, null
  br i1 %11, label %12, label %21

12:                                               ; preds = %2
  %13 = bitcast %class.CPWL_ScrollBar* %0 to %class.CPWL_Wnd*
  %14 = call %"class.IPWL_SystemHandler::PerWindowData"* @_ZNK8CPWL_Wnd17CloneAttachedDataEv(%class.CPWL_Wnd* %13) #11
  %15 = call i8* @_Znwm(i64 304) #12
  %16 = bitcast i8* %15 to %class.CPWL_SBButton*
  call void @_ZN13CPWL_SBButtonC1ERKN8CPWL_Wnd12CreateParamsENSt3__110unique_ptrIN18IPWL_SystemHandler13PerWindowDataENS4_14default_deleteIS7_EEEENS_4TypeE(%class.CPWL_SBButton* nonnull %16, %"class.CPWL_Wnd::CreateParams"* nonnull dereferenceable(184) %3, %"class.IPWL_SystemHandler::PerWindowData"* %14, i8 zeroext 0) #11
  %17 = bitcast %class.CPWL_SBButton** %9 to i8**
  store i8* %15, i8** %17, align 8
  %18 = bitcast i8* %15 to %class.CPWL_Wnd*
  call void @_ZN8CPWL_Wnd8AddChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.CPWL_Wnd* %13, %class.CPWL_Wnd* nonnull %18) #11
  %19 = bitcast %class.CPWL_SBButton** %9 to %class.CPWL_Wnd**
  %20 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %19, align 8
  call void @_ZN8CPWL_Wnd7RealizeEv(%class.CPWL_Wnd* %20) #11
  br label %21

21:                                               ; preds = %2, %12
  %22 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 6, i32 0
  %23 = load %class.CPWL_SBButton*, %class.CPWL_SBButton** %22, align 8
  %24 = icmp eq %class.CPWL_SBButton* %23, null
  br i1 %24, label %25, label %34

25:                                               ; preds = %21
  %26 = bitcast %class.CPWL_ScrollBar* %0 to %class.CPWL_Wnd*
  %27 = call %"class.IPWL_SystemHandler::PerWindowData"* @_ZNK8CPWL_Wnd17CloneAttachedDataEv(%class.CPWL_Wnd* %26) #11
  %28 = call i8* @_Znwm(i64 304) #12
  %29 = bitcast i8* %28 to %class.CPWL_SBButton*
  call void @_ZN13CPWL_SBButtonC1ERKN8CPWL_Wnd12CreateParamsENSt3__110unique_ptrIN18IPWL_SystemHandler13PerWindowDataENS4_14default_deleteIS7_EEEENS_4TypeE(%class.CPWL_SBButton* nonnull %29, %"class.CPWL_Wnd::CreateParams"* nonnull dereferenceable(184) %3, %"class.IPWL_SystemHandler::PerWindowData"* %27, i8 zeroext 1) #11
  %30 = bitcast %class.CPWL_SBButton** %22 to i8**
  store i8* %28, i8** %30, align 8
  %31 = bitcast i8* %28 to %class.CPWL_Wnd*
  call void @_ZN8CPWL_Wnd8AddChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.CPWL_Wnd* %26, %class.CPWL_Wnd* nonnull %31) #11
  %32 = bitcast %class.CPWL_SBButton** %22 to %class.CPWL_Wnd**
  %33 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %32, align 8
  call void @_ZN8CPWL_Wnd7RealizeEv(%class.CPWL_Wnd* %33) #11
  br label %34

34:                                               ; preds = %21, %25
  %35 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 7, i32 0
  %36 = load %class.CPWL_SBButton*, %class.CPWL_SBButton** %35, align 8
  %37 = icmp eq %class.CPWL_SBButton* %36, null
  br i1 %37, label %38, label %83

38:                                               ; preds = %34
  %39 = bitcast %class.CPWL_ScrollBar* %0 to %class.CPWL_Wnd*
  %40 = call %"class.IPWL_SystemHandler::PerWindowData"* @_ZNK8CPWL_Wnd17CloneAttachedDataEv(%class.CPWL_Wnd* %39) #11
  %41 = call i8* @_Znwm(i64 304) #12
  %42 = bitcast i8* %41 to %class.CPWL_SBButton*
  call void @_ZN13CPWL_SBButtonC1ERKN8CPWL_Wnd12CreateParamsENSt3__110unique_ptrIN18IPWL_SystemHandler13PerWindowDataENS4_14default_deleteIS7_EEEENS_4TypeE(%class.CPWL_SBButton* nonnull %42, %"class.CPWL_Wnd::CreateParams"* nonnull dereferenceable(184) %3, %"class.IPWL_SystemHandler::PerWindowData"* %40, i8 zeroext 2) #11
  %43 = ptrtoint i8* %41 to i64
  %44 = bitcast %class.CPWL_SBButton** %35 to i8**
  store i8* %41, i8** %44, align 8
  %45 = bitcast %"class.fxcrt::ObservedPtr.26"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #11
  %46 = getelementptr inbounds %"class.fxcrt::ObservedPtr.26", %"class.fxcrt::ObservedPtr.26"* %4, i64 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.fxcrt::ObservedPtr.26", %"class.fxcrt::ObservedPtr.26"* %4, i64 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI14CPWL_ScrollBarEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  store %class.CPWL_ScrollBar* %0, %class.CPWL_ScrollBar** %47, align 8
  %48 = icmp eq %class.CPWL_ScrollBar* %0, null
  %49 = bitcast i8* %41 to %class.CPWL_Wnd*
  br i1 %48, label %50, label %52

50:                                               ; preds = %38
  %51 = bitcast %class.CPWL_SBButton** %35 to %class.CPWL_Wnd**
  br label %57

52:                                               ; preds = %38
  %53 = getelementptr inbounds %"class.fxcrt::ObservedPtr.26", %"class.fxcrt::ObservedPtr.26"* %4, i64 0, i32 0
  %54 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 0, i32 1
  call void @_ZN5fxcrt10Observable11AddObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %54, %"class.fxcrt::Observable::ObserverIface"* nonnull %53) #11
  %55 = bitcast %class.CPWL_SBButton** %35 to %class.CPWL_Wnd**
  %56 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %55, align 8
  br label %57

57:                                               ; preds = %50, %52
  %58 = phi %class.CPWL_Wnd** [ %51, %50 ], [ %55, %52 ]
  %59 = phi %class.CPWL_Wnd* [ %49, %50 ], [ %56, %52 ]
  %60 = call zeroext i1 @_ZN8CPWL_Wnd10SetVisibleEb(%class.CPWL_Wnd* %59, i1 zeroext false) #11
  br i1 %60, label %61, label %67

61:                                               ; preds = %57
  %62 = load %class.CPWL_ScrollBar*, %class.CPWL_ScrollBar** %47, align 8
  %63 = icmp eq %class.CPWL_ScrollBar* %62, null
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #11
  br label %76

65:                                               ; preds = %61
  call void @_ZN8CPWL_Wnd8AddChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.CPWL_Wnd* %39, %class.CPWL_Wnd* nonnull %49) #11
  %66 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %58, align 8
  call void @_ZN8CPWL_Wnd7RealizeEv(%class.CPWL_Wnd* %66) #11
  br label %67

67:                                               ; preds = %65, %57
  %68 = phi i64 [ %43, %57 ], [ 0, %65 ]
  %69 = load %class.CPWL_ScrollBar*, %class.CPWL_ScrollBar** %47, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI14CPWL_ScrollBarEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  %70 = icmp eq %class.CPWL_ScrollBar* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %69, i64 0, i32 0, i32 1
  %73 = getelementptr inbounds %"class.fxcrt::ObservedPtr.26", %"class.fxcrt::ObservedPtr.26"* %4, i64 0, i32 0
  call void @_ZN5fxcrt10Observable14RemoveObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %72, %"class.fxcrt::Observable::ObserverIface"* nonnull %73) #11
  br label %74

74:                                               ; preds = %67, %71
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #11
  %75 = icmp eq i64 %68, 0
  br i1 %75, label %83, label %76

76:                                               ; preds = %64, %74
  %77 = phi i64 [ %43, %64 ], [ %68, %74 ]
  %78 = inttoptr i64 %77 to %class.CPWL_SBButton*
  %79 = inttoptr i64 %77 to void (%class.CPWL_SBButton*)***
  %80 = load void (%class.CPWL_SBButton*)**, void (%class.CPWL_SBButton*)*** %79, align 8
  %81 = getelementptr inbounds void (%class.CPWL_SBButton*)*, void (%class.CPWL_SBButton*)** %80, i64 1
  %82 = load void (%class.CPWL_SBButton*)*, void (%class.CPWL_SBButton*)** %81, align 8
  call void %82(%class.CPWL_SBButton* nonnull %78) #11
  br label %83

83:                                               ; preds = %34, %76, %74
  call void @_ZN8CPWL_Wnd12CreateParamsD1Ev(%"class.CPWL_Wnd::CreateParams"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %5) #11
  ret void
}

declare void @_ZN8CPWL_Wnd12CreateParamsC1ERKS0_(%"class.CPWL_Wnd::CreateParams"*, %"class.CPWL_Wnd::CreateParams"* dereferenceable(184)) unnamed_addr #4

declare %"class.IPWL_SystemHandler::PerWindowData"* @_ZNK8CPWL_Wnd17CloneAttachedDataEv(%class.CPWL_Wnd*) local_unnamed_addr #4

declare void @_ZN8CPWL_Wnd8AddChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.CPWL_Wnd*, %class.CPWL_Wnd*) local_unnamed_addr #4

declare void @_ZN8CPWL_Wnd7RealizeEv(%class.CPWL_Wnd*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN8CPWL_Wnd12CreateParamsD1Ev(%"class.CPWL_Wnd::CreateParams"*) unnamed_addr #5

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK14CPWL_ScrollBar17GetScrollBarWidthEv(%class.CPWL_ScrollBar* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 0, i32 10
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  %5 = select i1 %4, float 0.000000e+00, float 1.200000e+01
  ret float %5
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK14CPWL_ScrollBar13GetScrollAreaEv(%class.CPWL_ScrollBar*) local_unnamed_addr #2 align 2 {
  %2 = alloca %class.CFX_FloatRect, align 8
  %3 = bitcast %class.CPWL_ScrollBar* %0 to %class.CPWL_Wnd*
  %4 = tail call { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd13GetClientRectEv(%class.CPWL_Wnd* %3) #11
  %5 = extractvalue { <2 x float>, <2 x float> } %4, 0
  %6 = extractvalue { <2 x float>, <2 x float> } %4, 1
  %7 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 5, i32 0
  %8 = load %class.CPWL_SBButton*, %class.CPWL_SBButton** %7, align 8
  %9 = icmp eq %class.CPWL_SBButton* %8, null
  br i1 %9, label %51, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 6, i32 0
  %12 = load %class.CPWL_SBButton*, %class.CPWL_SBButton** %11, align 8
  %13 = icmp eq %class.CPWL_SBButton* %12, null
  br i1 %13, label %51, label %14

14:                                               ; preds = %10
  %15 = bitcast %class.CPWL_SBButton* %8 to %class.CPWL_Wnd*
  %16 = tail call { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd13GetWindowRectEv(%class.CPWL_Wnd* nonnull %15) #11
  %17 = extractvalue { <2 x float>, <2 x float> } %16, 0
  %18 = extractvalue { <2 x float>, <2 x float> } %16, 1
  %19 = bitcast %class.CPWL_SBButton** %11 to %class.CPWL_Wnd**
  %20 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %19, align 8
  %21 = tail call { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd13GetWindowRectEv(%class.CPWL_Wnd* %20) #11
  %22 = extractvalue { <2 x float>, <2 x float> } %21, 0
  %23 = extractvalue { <2 x float>, <2 x float> } %21, 1
  %24 = shufflevector <2 x float> %18, <2 x float> %23, <2 x i32> <i32 1, i32 3>
  %25 = shufflevector <2 x float> %17, <2 x float> %22, <2 x i32> <i32 1, i32 3>
  %26 = fsub <2 x float> %24, %25
  %27 = bitcast %class.CFX_FloatRect* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #11
  %28 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %2, i64 0, i32 0
  %29 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %2, i64 0, i32 1
  %30 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %2, i64 0, i32 2
  %31 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %2, i64 0, i32 3
  %32 = extractelement <2 x float> %6, i32 1
  %33 = extractelement <2 x float> %5, i32 1
  %34 = fsub float %32, %33
  %35 = extractelement <2 x float> %26, i32 0
  %36 = extractelement <2 x float> %26, i32 1
  %37 = fadd float %35, %36
  %38 = fadd float %37, 2.000000e+00
  %39 = fcmp ogt float %34, %38
  %40 = extractelement <2 x float> %5, i32 0
  %41 = fadd float %33, %35
  %42 = fadd float %41, 1.000000e+00
  %43 = extractelement <2 x float> %6, i32 0
  %44 = fsub float %32, %36
  %45 = fadd float %44, -1.000000e+00
  %46 = select i1 %39, float %45, float %42
  store float %40, float* %28, align 8
  store float %42, float* %29, align 4
  store float %43, float* %30, align 8
  store float %46, float* %31, align 4
  call void @_ZN13CFX_FloatRect9NormalizeEv(%class.CFX_FloatRect* nonnull %2) #11
  %47 = bitcast %class.CFX_FloatRect* %2 to <2 x float>*
  %48 = load <2 x float>, <2 x float>* %47, align 8
  %49 = bitcast float* %30 to <2 x float>*
  %50 = load <2 x float>, <2 x float>* %49, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #11
  br label %51

51:                                               ; preds = %10, %1, %14
  %52 = phi <2 x float> [ %48, %14 ], [ %5, %10 ], [ %5, %1 ]
  %53 = phi <2 x float> [ %50, %14 ], [ %6, %10 ], [ %6, %1 ]
  %54 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %52, 0
  %55 = insertvalue { <2 x float>, <2 x float> } %54, <2 x float> %53, 1
  ret { <2 x float>, <2 x float> } %55
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN14CPWL_ScrollBar10TrueToFaceEf(%class.CPWL_ScrollBar*, float) local_unnamed_addr #2 align 2 {
  %3 = alloca %class.CFX_FloatRect, align 8
  %4 = bitcast %class.CPWL_ScrollBar* %0 to %class.CPWL_Wnd*
  %5 = tail call { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd13GetClientRectEv(%class.CPWL_Wnd* %4) #11
  %6 = extractvalue { <2 x float>, <2 x float> } %5, 0
  %7 = extractvalue { <2 x float>, <2 x float> } %5, 1
  %8 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 5, i32 0
  %9 = load %class.CPWL_SBButton*, %class.CPWL_SBButton** %8, align 8
  %10 = icmp eq %class.CPWL_SBButton* %9, null
  br i1 %10, label %52, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 6, i32 0
  %13 = load %class.CPWL_SBButton*, %class.CPWL_SBButton** %12, align 8
  %14 = icmp eq %class.CPWL_SBButton* %13, null
  br i1 %14, label %52, label %15

15:                                               ; preds = %11
  %16 = bitcast %class.CPWL_SBButton* %9 to %class.CPWL_Wnd*
  %17 = tail call { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd13GetWindowRectEv(%class.CPWL_Wnd* nonnull %16) #11
  %18 = extractvalue { <2 x float>, <2 x float> } %17, 0
  %19 = extractvalue { <2 x float>, <2 x float> } %17, 1
  %20 = bitcast %class.CPWL_SBButton** %12 to %class.CPWL_Wnd**
  %21 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %20, align 8
  %22 = tail call { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd13GetWindowRectEv(%class.CPWL_Wnd* %21) #11
  %23 = extractvalue { <2 x float>, <2 x float> } %22, 0
  %24 = extractvalue { <2 x float>, <2 x float> } %22, 1
  %25 = shufflevector <2 x float> %19, <2 x float> %24, <2 x i32> <i32 1, i32 3>
  %26 = shufflevector <2 x float> %18, <2 x float> %23, <2 x i32> <i32 1, i32 3>
  %27 = fsub <2 x float> %25, %26
  %28 = bitcast %class.CFX_FloatRect* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #11
  %29 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %3, i64 0, i32 0
  %30 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %3, i64 0, i32 1
  %31 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %3, i64 0, i32 2
  %32 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %3, i64 0, i32 3
  %33 = extractelement <2 x float> %7, i32 1
  %34 = extractelement <2 x float> %6, i32 1
  %35 = fsub float %33, %34
  %36 = extractelement <2 x float> %27, i32 0
  %37 = extractelement <2 x float> %27, i32 1
  %38 = fadd float %36, %37
  %39 = fadd float %38, 2.000000e+00
  %40 = fcmp ogt float %35, %39
  %41 = extractelement <2 x float> %6, i32 0
  %42 = fadd float %34, %36
  %43 = fadd float %42, 1.000000e+00
  %44 = extractelement <2 x float> %7, i32 0
  %45 = fsub float %33, %37
  %46 = fadd float %45, -1.000000e+00
  %47 = select i1 %40, float %46, float %43
  store float %41, float* %29, align 8
  store float %43, float* %30, align 4
  store float %44, float* %31, align 8
  store float %47, float* %32, align 4
  call void @_ZN13CFX_FloatRect9NormalizeEv(%class.CFX_FloatRect* nonnull %3) #11
  %48 = bitcast %class.CFX_FloatRect* %3 to <2 x float>*
  %49 = load <2 x float>, <2 x float>* %48, align 8
  %50 = bitcast float* %31 to <2 x float>*
  %51 = load <2 x float>, <2 x float>* %50, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #11
  br label %52

52:                                               ; preds = %2, %11, %15
  %53 = phi <2 x float> [ %49, %15 ], [ %6, %11 ], [ %6, %2 ]
  %54 = phi <2 x float> [ %51, %15 ], [ %7, %11 ], [ %7, %2 ]
  %55 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 0, i32 1
  %56 = load float, float* %55, align 4
  %57 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 0, i32 0
  %58 = load float, float* %57, align 4
  %59 = fsub float %56, %58
  %60 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 1
  %61 = load float, float* %60, align 8
  %62 = fadd float %59, %61
  %63 = fcmp oeq float %62, 0.000000e+00
  %64 = select i1 %63, float 1.000000e+00, float %62
  %65 = extractelement <2 x float> %54, i32 1
  %66 = extractelement <2 x float> %53, i32 1
  %67 = fsub float %65, %66
  %68 = fmul float %67, %1
  %69 = fdiv float %68, %64
  %70 = fsub float %65, %69
  ret float %70
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN14CPWL_ScrollBar10FaceToTrueEf(%class.CPWL_ScrollBar*, float) local_unnamed_addr #2 align 2 {
  %3 = alloca %class.CFX_FloatRect, align 8
  %4 = bitcast %class.CPWL_ScrollBar* %0 to %class.CPWL_Wnd*
  %5 = tail call { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd13GetClientRectEv(%class.CPWL_Wnd* %4) #11
  %6 = extractvalue { <2 x float>, <2 x float> } %5, 0
  %7 = extractvalue { <2 x float>, <2 x float> } %5, 1
  %8 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 5, i32 0
  %9 = load %class.CPWL_SBButton*, %class.CPWL_SBButton** %8, align 8
  %10 = icmp eq %class.CPWL_SBButton* %9, null
  br i1 %10, label %52, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 6, i32 0
  %13 = load %class.CPWL_SBButton*, %class.CPWL_SBButton** %12, align 8
  %14 = icmp eq %class.CPWL_SBButton* %13, null
  br i1 %14, label %52, label %15

15:                                               ; preds = %11
  %16 = bitcast %class.CPWL_SBButton* %9 to %class.CPWL_Wnd*
  %17 = tail call { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd13GetWindowRectEv(%class.CPWL_Wnd* nonnull %16) #11
  %18 = extractvalue { <2 x float>, <2 x float> } %17, 0
  %19 = extractvalue { <2 x float>, <2 x float> } %17, 1
  %20 = bitcast %class.CPWL_SBButton** %12 to %class.CPWL_Wnd**
  %21 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %20, align 8
  %22 = tail call { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd13GetWindowRectEv(%class.CPWL_Wnd* %21) #11
  %23 = extractvalue { <2 x float>, <2 x float> } %22, 0
  %24 = extractvalue { <2 x float>, <2 x float> } %22, 1
  %25 = shufflevector <2 x float> %19, <2 x float> %24, <2 x i32> <i32 1, i32 3>
  %26 = shufflevector <2 x float> %18, <2 x float> %23, <2 x i32> <i32 1, i32 3>
  %27 = fsub <2 x float> %25, %26
  %28 = bitcast %class.CFX_FloatRect* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #11
  %29 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %3, i64 0, i32 0
  %30 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %3, i64 0, i32 1
  %31 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %3, i64 0, i32 2
  %32 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %3, i64 0, i32 3
  %33 = extractelement <2 x float> %7, i32 1
  %34 = extractelement <2 x float> %6, i32 1
  %35 = fsub float %33, %34
  %36 = extractelement <2 x float> %27, i32 0
  %37 = extractelement <2 x float> %27, i32 1
  %38 = fadd float %36, %37
  %39 = fadd float %38, 2.000000e+00
  %40 = fcmp ogt float %35, %39
  %41 = extractelement <2 x float> %6, i32 0
  %42 = fadd float %34, %36
  %43 = fadd float %42, 1.000000e+00
  %44 = extractelement <2 x float> %7, i32 0
  %45 = fsub float %33, %37
  %46 = fadd float %45, -1.000000e+00
  %47 = select i1 %40, float %46, float %43
  store float %41, float* %29, align 8
  store float %43, float* %30, align 4
  store float %44, float* %31, align 8
  store float %47, float* %32, align 4
  call void @_ZN13CFX_FloatRect9NormalizeEv(%class.CFX_FloatRect* nonnull %3) #11
  %48 = bitcast %class.CFX_FloatRect* %3 to <2 x float>*
  %49 = load <2 x float>, <2 x float>* %48, align 8
  %50 = bitcast float* %31 to <2 x float>*
  %51 = load <2 x float>, <2 x float>* %50, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #11
  br label %52

52:                                               ; preds = %2, %11, %15
  %53 = phi <2 x float> [ %49, %15 ], [ %6, %11 ], [ %6, %2 ]
  %54 = phi <2 x float> [ %51, %15 ], [ %7, %11 ], [ %7, %2 ]
  %55 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 0, i32 1
  %56 = load float, float* %55, align 4
  %57 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 0, i32 0
  %58 = load float, float* %57, align 4
  %59 = fsub float %56, %58
  %60 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 1
  %61 = load float, float* %60, align 8
  %62 = fadd float %59, %61
  %63 = fcmp oeq float %62, 0.000000e+00
  %64 = select i1 %63, float 1.000000e+00, float %62
  %65 = extractelement <2 x float> %54, i32 1
  %66 = fsub float %65, %1
  %67 = fmul float %66, %64
  %68 = extractelement <2 x float> %53, i32 1
  %69 = fsub float %65, %68
  %70 = fdiv float %67, %69
  ret float %70
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CPWL_ScrollBar14CreateChildWndERKN8CPWL_Wnd12CreateParamsE(%class.CPWL_ScrollBar*, %"class.CPWL_Wnd::CreateParams"* dereferenceable(184)) unnamed_addr #2 align 2 {
  tail call void @_ZN14CPWL_ScrollBar13CreateButtonsERKN8CPWL_Wnd12CreateParamsE(%class.CPWL_ScrollBar* %0, %"class.CPWL_Wnd::CreateParams"* dereferenceable(184) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CPWL_ScrollBar12OnTimerFiredEv(%class.CPWL_ScrollBar*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 0, i32 0
  %3 = load float, float* %2, align 8
  %4 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 0, i32 1
  %5 = load float, float* %4, align 4
  %6 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 1
  %7 = load float, float* %6, align 8
  %8 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 2
  %9 = load float, float* %8, align 4
  %10 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 3
  %11 = load float, float* %10, align 8
  %12 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 9, i32 4
  %13 = load float, float* %12, align 4
  %14 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 11
  %15 = load i8, i8* %14, align 1, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %62, label %17

17:                                               ; preds = %1
  %18 = fsub float %9, %13
  %19 = fcmp olt float %3, %18
  %20 = fsub float %18, %3
  %21 = fpext float %20 to double
  br i1 %19, label %22, label %26

22:                                               ; preds = %17
  %23 = fcmp olt double %21, 1.000000e-04
  %24 = fcmp ogt double %21, -1.000000e-04
  %25 = and i1 %23, %24
  br i1 %25, label %26, label %30

26:                                               ; preds = %17, %22
  %27 = fcmp olt double %21, 1.000000e-04
  %28 = fcmp ogt double %21, -1.000000e-04
  %29 = and i1 %27, %28
  br i1 %29, label %30, label %43

30:                                               ; preds = %26, %22
  %31 = fcmp ogt float %5, %18
  %32 = fsub float %18, %5
  %33 = fpext float %32 to double
  br i1 %31, label %34, label %38

34:                                               ; preds = %30
  %35 = fcmp olt double %33, 1.000000e-04
  %36 = fcmp ogt double %33, -1.000000e-04
  %37 = and i1 %35, %36
  br i1 %37, label %38, label %42

38:                                               ; preds = %30, %34
  %39 = fcmp olt double %33, 1.000000e-04
  %40 = fcmp ogt double %33, -1.000000e-04
  %41 = and i1 %39, %40
  br i1 %41, label %42, label %43

42:                                               ; preds = %38, %34
  store float %18, float* %8, align 4
  br label %107

43:                                               ; preds = %38, %26
  %44 = fsub float %3, %3
  %45 = fpext float %44 to double
  %46 = fcmp olt double %45, 1.000000e-04
  %47 = fcmp ogt double %45, -1.000000e-04
  %48 = and i1 %46, %47
  br i1 %48, label %49, label %107

49:                                               ; preds = %43
  %50 = fcmp ogt float %5, %3
  %51 = fsub float %3, %5
  %52 = fpext float %51 to double
  br i1 %50, label %53, label %57

53:                                               ; preds = %49
  %54 = fcmp olt double %52, 1.000000e-04
  %55 = fcmp ogt double %52, -1.000000e-04
  %56 = and i1 %54, %55
  br i1 %56, label %57, label %61

57:                                               ; preds = %49, %53
  %58 = fcmp olt double %52, 1.000000e-04
  %59 = fcmp ogt double %52, -1.000000e-04
  %60 = and i1 %58, %59
  br i1 %60, label %61, label %107

61:                                               ; preds = %57, %53
  store float %3, float* %8, align 4
  br label %107

62:                                               ; preds = %1
  %63 = fadd float %9, %13
  %64 = fcmp olt float %3, %63
  %65 = fsub float %63, %3
  %66 = fpext float %65 to double
  br i1 %64, label %67, label %71

67:                                               ; preds = %62
  %68 = fcmp olt double %66, 1.000000e-04
  %69 = fcmp ogt double %66, -1.000000e-04
  %70 = and i1 %68, %69
  br i1 %70, label %71, label %75

71:                                               ; preds = %62, %67
  %72 = fcmp olt double %66, 1.000000e-04
  %73 = fcmp ogt double %66, -1.000000e-04
  %74 = and i1 %72, %73
  br i1 %74, label %75, label %88

75:                                               ; preds = %71, %67
  %76 = fcmp ogt float %5, %63
  %77 = fsub float %63, %5
  %78 = fpext float %77 to double
  br i1 %76, label %79, label %83

79:                                               ; preds = %75
  %80 = fcmp olt double %78, 1.000000e-04
  %81 = fcmp ogt double %78, -1.000000e-04
  %82 = and i1 %80, %81
  br i1 %82, label %83, label %87

83:                                               ; preds = %75, %79
  %84 = fcmp olt double %78, 1.000000e-04
  %85 = fcmp ogt double %78, -1.000000e-04
  %86 = and i1 %84, %85
  br i1 %86, label %87, label %88

87:                                               ; preds = %83, %79
  store float %63, float* %8, align 4
  br label %107

88:                                               ; preds = %71, %83
  %89 = fcmp olt float %3, %5
  %90 = fsub float %5, %3
  %91 = fpext float %90 to double
  br i1 %89, label %92, label %96

92:                                               ; preds = %88
  %93 = fcmp olt double %91, 1.000000e-04
  %94 = fcmp ogt double %91, -1.000000e-04
  %95 = and i1 %93, %94
  br i1 %95, label %96, label %100

96:                                               ; preds = %88, %92
  %97 = fcmp olt double %91, 1.000000e-04
  %98 = fcmp ogt double %91, -1.000000e-04
  %99 = and i1 %97, %98
  br i1 %99, label %100, label %107

100:                                              ; preds = %96, %92
  %101 = fsub float %5, %5
  %102 = fpext float %101 to double
  %103 = fcmp olt double %102, 1.000000e-04
  %104 = fcmp ogt double %102, -1.000000e-04
  %105 = and i1 %103, %104
  br i1 %105, label %106, label %107

106:                                              ; preds = %100
  store float %5, float* %8, align 4
  br label %107

107:                                              ; preds = %106, %100, %96, %87, %61, %57, %43, %42
  %108 = phi float [ %5, %106 ], [ %9, %100 ], [ %9, %96 ], [ %63, %87 ], [ %3, %61 ], [ %9, %57 ], [ %9, %43 ], [ %18, %42 ]
  %109 = fcmp ord float %3, %5
  %110 = fcmp ord float %7, 0.000000e+00
  %111 = and i1 %109, %110
  %112 = fcmp oeq float %9, %108
  %113 = and i1 %111, %112
  %114 = fcmp ord float %13, %11
  %115 = and i1 %114, %113
  br i1 %115, label %131, label %116

116:                                              ; preds = %107
  %117 = tail call zeroext i1 @_ZN14CPWL_ScrollBar13MovePosButtonEb(%class.CPWL_ScrollBar* %0, i1 zeroext true)
  br i1 %117, label %118, label %131

118:                                              ; preds = %116
  %119 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 0, i32 4, i32 0
  %120 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %119, align 8
  %121 = icmp eq %class.CPWL_Wnd* %120, null
  br i1 %121, label %131, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 0, i32 3, i32 1
  %124 = load float, float* %123, align 4
  %125 = load float, float* %8, align 4
  %126 = fsub float %124, %125
  %127 = bitcast %class.CPWL_Wnd* %120 to void (%class.CPWL_Wnd*, float)***
  %128 = load void (%class.CPWL_Wnd*, float)**, void (%class.CPWL_Wnd*, float)*** %127, align 8
  %129 = getelementptr inbounds void (%class.CPWL_Wnd*, float)*, void (%class.CPWL_Wnd*, float)** %128, i64 14
  %130 = load void (%class.CPWL_Wnd*, float)*, void (%class.CPWL_Wnd*, float)** %129, align 8
  tail call void %130(%class.CPWL_Wnd* nonnull %120, float %126) #11
  br label %131

131:                                              ; preds = %107, %122, %118, %116
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn304_N14CPWL_ScrollBar12OnTimerFiredEv(%class.CPWL_ScrollBar*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %0, i64 -1, i32 0, i32 2, i32 6
  %3 = bitcast i32* %2 to %class.CPWL_ScrollBar*
  tail call void @_ZN14CPWL_ScrollBar12OnTimerFiredEv(%class.CPWL_ScrollBar* %3)
  ret void
}

declare zeroext i1 @_ZN8CPWL_Wnd9OnKeyDownEtj(%class.CPWL_Wnd*, i16 zeroext, i32) unnamed_addr #4

declare zeroext i1 @_ZN8CPWL_Wnd6OnCharEtj(%class.CPWL_Wnd*, i16 zeroext, i32) unnamed_addr #4

declare zeroext i1 @_ZN8CPWL_Wnd15OnLButtonDblClkEjRK13CFX_PTemplateIfE(%class.CPWL_Wnd*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #4

declare zeroext i1 @_ZN8CPWL_Wnd13OnRButtonDownEjRK13CFX_PTemplateIfE(%class.CPWL_Wnd*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #4

declare zeroext i1 @_ZN8CPWL_Wnd11OnRButtonUpEjRK13CFX_PTemplateIfE(%class.CPWL_Wnd*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #4

declare zeroext i1 @_ZN8CPWL_Wnd11OnMouseMoveEjRK13CFX_PTemplateIfE(%class.CPWL_Wnd*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #4

declare zeroext i1 @_ZN8CPWL_Wnd12OnMouseWheelEjRK13CFX_PTemplateIfERK13CFX_VTemplateIiE(%class.CPWL_Wnd*, i32, %class.CFX_PTemplate* dereferenceable(8), %class.CFX_VTemplate*) unnamed_addr #4

declare void @_ZN8CPWL_Wnd22ScrollWindowVerticallyEf(%class.CPWL_Wnd*, float) unnamed_addr #4

declare void @_ZN8CPWL_Wnd8SetFocusEv(%class.CPWL_Wnd*) unnamed_addr #4

declare void @_ZN8CPWL_Wnd9KillFocusEv(%class.CPWL_Wnd*) unnamed_addr #4

declare void @_ZN8CPWL_Wnd9SetCursorEv(%class.CPWL_Wnd*) unnamed_addr #4

declare void @_ZN8CPWL_Wnd11SetFontSizeEf(%class.CPWL_Wnd*, float) unnamed_addr #4

declare float @_ZNK8CPWL_Wnd11GetFontSizeEv(%class.CPWL_Wnd*) unnamed_addr #4

declare void @_ZN8CPWL_Wnd7GetTextEv(%"class.fxcrt::WideString"* sret, %class.CPWL_Wnd*) unnamed_addr #4

declare void @_ZN8CPWL_Wnd15GetSelectedTextEv(%"class.fxcrt::WideString"* sret, %class.CPWL_Wnd*) unnamed_addr #4

declare void @_ZN8CPWL_Wnd16ReplaceSelectionERKN5fxcrt10WideStringE(%class.CPWL_Wnd*, %"class.fxcrt::WideString"* dereferenceable(8)) unnamed_addr #4

declare zeroext i1 @_ZN8CPWL_Wnd13SelectAllTextEv(%class.CPWL_Wnd*) unnamed_addr #4

declare zeroext i1 @_ZN8CPWL_Wnd7CanUndoEv(%class.CPWL_Wnd*) unnamed_addr #4

declare zeroext i1 @_ZN8CPWL_Wnd7CanRedoEv(%class.CPWL_Wnd*) unnamed_addr #4

declare zeroext i1 @_ZN8CPWL_Wnd4UndoEv(%class.CPWL_Wnd*) unnamed_addr #4

declare zeroext i1 @_ZN8CPWL_Wnd4RedoEv(%class.CPWL_Wnd*) unnamed_addr #4

declare { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd12GetFocusRectEv(%class.CPWL_Wnd*) unnamed_addr #4

declare void @_ZN8CPWL_Wnd10OnSetFocusEv(%class.CPWL_Wnd*) unnamed_addr #4

declare void @_ZN8CPWL_Wnd11OnKillFocusEv(%class.CPWL_Wnd*) unnamed_addr #4

declare void @_ZN8CPWL_Wnd9OnCreatedEv(%class.CPWL_Wnd*) unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #9

declare void @_ZN5fxcrt10Observable11AddObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"*, %"class.fxcrt::Observable::ObserverIface"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5fxcrt11ObservedPtrI14CPWL_ScrollBarED0Ev(%"class.fxcrt::ObservedPtr.26"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.fxcrt::ObservedPtr.26", %"class.fxcrt::ObservedPtr.26"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI14CPWL_ScrollBarEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.fxcrt::ObservedPtr.26", %"class.fxcrt::ObservedPtr.26"* %0, i64 0, i32 1
  %4 = load %class.CPWL_ScrollBar*, %class.CPWL_ScrollBar** %3, align 8
  %5 = icmp eq %class.CPWL_ScrollBar* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %4, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.fxcrt::ObservedPtr.26", %"class.fxcrt::ObservedPtr.26"* %0, i64 0, i32 0
  tail call void @_ZN5fxcrt10Observable14RemoveObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %7, %"class.fxcrt::Observable::ObserverIface"* %8) #11
  br label %9

9:                                                ; preds = %1, %6
  %10 = bitcast %"class.fxcrt::ObservedPtr.26"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5fxcrt11ObservedPtrI14CPWL_ScrollBarE21OnObservableDestroyedEv(%"class.fxcrt::ObservedPtr.26"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.fxcrt::ObservedPtr.26", %"class.fxcrt::ObservedPtr.26"* %0, i64 0, i32 1
  store %class.CPWL_ScrollBar* null, %class.CPWL_ScrollBar** %2, align 8
  ret void
}

declare void @_ZN5fxcrt10Observable14RemoveObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"*, %"class.fxcrt::Observable::ObserverIface"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN9CFX_TimerD1Ev(%class.CFX_Timer*) unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare void @_ZN13CPWL_SBButtonC1ERKN8CPWL_Wnd12CreateParamsENSt3__110unique_ptrIN18IPWL_SystemHandler13PerWindowDataENS4_14default_deleteIS7_EEEENS_4TypeE(%class.CPWL_SBButton*, %"class.CPWL_Wnd::CreateParams"* dereferenceable(184), %"class.IPWL_SystemHandler::PerWindowData"*, i8 zeroext) unnamed_addr #4

declare void @_ZN9CFX_TimerC1EPNS_12HandlerIfaceEPNS_13CallbackIfaceEi(%class.CFX_Timer*, %"class.CFX_Timer::HandlerIface"*, %"class.CFX_Timer::CallbackIface"*, i32) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind }
attributes #8 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
