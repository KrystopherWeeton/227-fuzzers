; ModuleID = '../../third_party/blink/renderer/platform/exported/web_content_decryption_module_result.cc'
source_filename = "../../third_party/blink/renderer/platform/exported/web_content_decryption_module_result.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::WebContentDecryptionModuleResult" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::ContentDecryptionModuleResult" = type { i32 (...)** }
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ContentDecryptionModuleResult"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.126", %"class.std::__1::unique_ptr.126", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.136", %"class.std::__1::unique_ptr.142", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.154", %"class.std::__1::unique_ptr.160", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.166", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.111", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, {}* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.31" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.31" = type { %"struct.std::__1::__atomic_base.32" }
%"struct.std::__1::__atomic_base.32" = type { %"struct.std::__1::__atomic_base.33" }
%"struct.std::__1::__atomic_base.33" = type { %"struct.std::__1::__cxx_atomic_impl.34" }
%"struct.std::__1::__cxx_atomic_impl.34" = type { %"struct.std::__1::__cxx_atomic_base_impl.35" }
%"struct.std::__1::__cxx_atomic_base_impl.35" = type { i64 }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.blink::Worklist.42"* }
%"class.blink::Worklist.42" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.31" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::Worklist.49"* }
%"class.blink::Worklist.49" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.31" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::Worklist.56"* }
%"class.blink::Worklist.56" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.31" }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.blink::Worklist.63"* }
%"class.blink::Worklist.63" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.31" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::Worklist.70"* }
%"class.blink::Worklist.70" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.31" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::Worklist.77"* }
%"class.blink::Worklist.77" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.31" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::Worklist.84"* }
%"class.blink::Worklist.84" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.31" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.91", %"class.std::__1::__compressed_pair.98", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.105", [4 x i8] }>
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93", %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { i64 }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { float }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.114", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.134" }
%"class.WTF::VectorBuffer.134" = type { %"class.WTF::VectorBufferBase.135" }
%"class.WTF::VectorBufferBase.135" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.148" }
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.42"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.49"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.56"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.63"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.70"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.170" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.166" = type { %"struct.std::__1::__atomic_base.167" }
%"struct.std::__1::__atomic_base.167" = type { %"struct.std::__1::__cxx_atomic_impl.168" }
%"struct.std::__1::__cxx_atomic_impl.168" = type { %"struct.std::__1::__cxx_atomic_base_impl.169" }
%"struct.std::__1::__cxx_atomic_base_impl.169" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::CrossThreadPersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::WebContentDecryptionModule" = type opaque
%"class.blink::WebString" = type opaque
%"class.blink::PtrStorageImpl" = type { %"class.blink::CrossThreadPersistent"* }
%"class.blink::PersistentLocation" = type { %"class.base::Location" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }

$_ZN5blink14PtrStorageImplINS_29ContentDecryptionModuleResultELNS_24WebPrivatePtrDestructionE1ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE1EE6AssignEPS1_ = comdat any

$_ZN5blink14PersistentBaseINS_29ContentDecryptionModuleResultELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_29ContentDecryptionModuleResultELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_29ContentDecryptionModuleResultEE5TraceEPNS_7VisitorEPKv = comdat any

@_ZN5blink32WebContentDecryptionModuleResultC1EPNS_29ContentDecryptionModuleResultE = hidden unnamed_addr alias void (%"class.blink::WebContentDecryptionModuleResult"*, %"class.blink::ContentDecryptionModuleResult"*), void (%"class.blink::WebContentDecryptionModuleResult"*, %"class.blink::ContentDecryptionModuleResult"*)* @_ZN5blink32WebContentDecryptionModuleResultC2EPNS_29ContentDecryptionModuleResultE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink32WebContentDecryptionModuleResult8CompleteEv(%"class.blink::WebContentDecryptionModuleResult"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebContentDecryptionModuleResult"* %0 to %"class.blink::CrossThreadPersistent"**
  %3 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %2, align 8
  %4 = icmp eq %"class.blink::CrossThreadPersistent"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::ContentDecryptionModuleResult"*, %"class.blink::ContentDecryptionModuleResult"** %6, align 8
  %8 = bitcast %"class.blink::ContentDecryptionModuleResult"* %7 to void (%"class.blink::ContentDecryptionModuleResult"*)***
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi void (%"class.blink::ContentDecryptionModuleResult"*)*** [ %8, %5 ], [ null, %1 ]
  %11 = phi %"class.blink::ContentDecryptionModuleResult"* [ %7, %5 ], [ null, %1 ]
  %12 = load void (%"class.blink::ContentDecryptionModuleResult"*)**, void (%"class.blink::ContentDecryptionModuleResult"*)*** %10, align 8
  %13 = getelementptr inbounds void (%"class.blink::ContentDecryptionModuleResult"*)*, void (%"class.blink::ContentDecryptionModuleResult"*)** %12, i64 2
  %14 = load void (%"class.blink::ContentDecryptionModuleResult"*)*, void (%"class.blink::ContentDecryptionModuleResult"*)** %13, align 8
  tail call void %14(%"class.blink::ContentDecryptionModuleResult"* %11) #5
  %15 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %2, align 8
  %16 = icmp eq %"class.blink::CrossThreadPersistent"* %15, null
  br i1 %16, label %38, label %17

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %15, i64 0, i32 0, i32 1
  %19 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %18 to i64*
  %20 = load atomic i64, i64* %19 acquire, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %36, label %22

22:                                               ; preds = %17
  %23 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #5
  %24 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %23, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %24) #5
  %25 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #5
  %26 = load atomic i64, i64* %19 monotonic, align 8
  %27 = inttoptr i64 %26 to %"class.blink::PersistentNode"*
  %28 = icmp eq i64 %26, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %25, i64 0, i32 0, i32 0
  %31 = bitcast %"class.blink::CrossThreadPersistentRegion"* %25 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = inttoptr i64 %26 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %27, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %34, align 8
  store %"class.blink::PersistentNode"* %27, %"class.blink::PersistentNode"** %30, align 8
  br label %35

35:                                               ; preds = %29, %22
  store atomic i64 0, i64* %19 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %24) #5
  br label %36

36:                                               ; preds = %35, %17
  %37 = bitcast %"class.blink::CrossThreadPersistent"* %15 to i8*
  tail call void @free(i8* %37) #5
  br label %38

38:                                               ; preds = %9, %36
  store %"class.blink::CrossThreadPersistent"* null, %"class.blink::CrossThreadPersistent"** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink32WebContentDecryptionModuleResult5ResetEv(%"class.blink::WebContentDecryptionModuleResult"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WebContentDecryptionModuleResult"* %0 to %"class.blink::CrossThreadPersistent"**
  %3 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %2, align 8
  %4 = icmp eq %"class.blink::CrossThreadPersistent"* %3, null
  br i1 %4, label %26, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %3, i64 0, i32 0, i32 1
  %7 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %6 to i64*
  %8 = load atomic i64, i64* %7 acquire, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %24, label %10

10:                                               ; preds = %5
  %11 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #5
  %12 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %11, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %12) #5
  %13 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #5
  %14 = load atomic i64, i64* %7 monotonic, align 8
  %15 = inttoptr i64 %14 to %"class.blink::PersistentNode"*
  %16 = icmp eq i64 %14, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %13, i64 0, i32 0, i32 0
  %19 = bitcast %"class.blink::CrossThreadPersistentRegion"* %13 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = inttoptr i64 %14 to i64*
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %15, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %22, align 8
  store %"class.blink::PersistentNode"* %15, %"class.blink::PersistentNode"** %18, align 8
  br label %23

23:                                               ; preds = %17, %10
  store atomic i64 0, i64* %7 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %12) #5
  br label %24

24:                                               ; preds = %23, %5
  %25 = bitcast %"class.blink::CrossThreadPersistent"* %3 to i8*
  tail call void @free(i8* %25) #5
  br label %26

26:                                               ; preds = %1, %24
  store %"class.blink::CrossThreadPersistent"* null, %"class.blink::CrossThreadPersistent"** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink32WebContentDecryptionModuleResult35CompleteWithContentDecryptionModuleEPNS_26WebContentDecryptionModuleE(%"class.blink::WebContentDecryptionModuleResult"* nocapture, %"class.blink::WebContentDecryptionModule"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::WebContentDecryptionModuleResult"* %0 to %"class.blink::CrossThreadPersistent"**
  %4 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %3, align 8
  %5 = icmp eq %"class.blink::CrossThreadPersistent"* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.blink::ContentDecryptionModuleResult"*, %"class.blink::ContentDecryptionModuleResult"** %7, align 8
  %9 = bitcast %"class.blink::ContentDecryptionModuleResult"* %8 to void (%"class.blink::ContentDecryptionModuleResult"*, %"class.blink::WebContentDecryptionModule"*)***
  br label %10

10:                                               ; preds = %2, %6
  %11 = phi void (%"class.blink::ContentDecryptionModuleResult"*, %"class.blink::WebContentDecryptionModule"*)*** [ %9, %6 ], [ null, %2 ]
  %12 = phi %"class.blink::ContentDecryptionModuleResult"* [ %8, %6 ], [ null, %2 ]
  %13 = load void (%"class.blink::ContentDecryptionModuleResult"*, %"class.blink::WebContentDecryptionModule"*)**, void (%"class.blink::ContentDecryptionModuleResult"*, %"class.blink::WebContentDecryptionModule"*)*** %11, align 8
  %14 = getelementptr inbounds void (%"class.blink::ContentDecryptionModuleResult"*, %"class.blink::WebContentDecryptionModule"*)*, void (%"class.blink::ContentDecryptionModuleResult"*, %"class.blink::WebContentDecryptionModule"*)** %13, i64 3
  %15 = load void (%"class.blink::ContentDecryptionModuleResult"*, %"class.blink::WebContentDecryptionModule"*)*, void (%"class.blink::ContentDecryptionModuleResult"*, %"class.blink::WebContentDecryptionModule"*)** %14, align 8
  tail call void %15(%"class.blink::ContentDecryptionModuleResult"* %12, %"class.blink::WebContentDecryptionModule"* %1) #5
  %16 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %3, align 8
  %17 = icmp eq %"class.blink::CrossThreadPersistent"* %16, null
  br i1 %17, label %39, label %18

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %16, i64 0, i32 0, i32 1
  %20 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %19 to i64*
  %21 = load atomic i64, i64* %20 acquire, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %37, label %23

23:                                               ; preds = %18
  %24 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #5
  %25 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %24, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %25) #5
  %26 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #5
  %27 = load atomic i64, i64* %20 monotonic, align 8
  %28 = inttoptr i64 %27 to %"class.blink::PersistentNode"*
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %36, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %26, i64 0, i32 0, i32 0
  %32 = bitcast %"class.blink::CrossThreadPersistentRegion"* %26 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = inttoptr i64 %27 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %28, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %35, align 8
  store %"class.blink::PersistentNode"* %28, %"class.blink::PersistentNode"** %31, align 8
  br label %36

36:                                               ; preds = %30, %23
  store atomic i64 0, i64* %20 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %25) #5
  br label %37

37:                                               ; preds = %36, %18
  %38 = bitcast %"class.blink::CrossThreadPersistent"* %16 to i8*
  tail call void @free(i8* %38) #5
  br label %39

39:                                               ; preds = %10, %37
  store %"class.blink::CrossThreadPersistent"* null, %"class.blink::CrossThreadPersistent"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink32WebContentDecryptionModuleResult19CompleteWithSessionENS0_13SessionStatusE(%"class.blink::WebContentDecryptionModuleResult"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::WebContentDecryptionModuleResult"* %0 to %"class.blink::CrossThreadPersistent"**
  %4 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %3, align 8
  %5 = icmp eq %"class.blink::CrossThreadPersistent"* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.blink::ContentDecryptionModuleResult"*, %"class.blink::ContentDecryptionModuleResult"** %7, align 8
  %9 = bitcast %"class.blink::ContentDecryptionModuleResult"* %8 to void (%"class.blink::ContentDecryptionModuleResult"*, i32)***
  br label %10

10:                                               ; preds = %2, %6
  %11 = phi void (%"class.blink::ContentDecryptionModuleResult"*, i32)*** [ %9, %6 ], [ null, %2 ]
  %12 = phi %"class.blink::ContentDecryptionModuleResult"* [ %8, %6 ], [ null, %2 ]
  %13 = load void (%"class.blink::ContentDecryptionModuleResult"*, i32)**, void (%"class.blink::ContentDecryptionModuleResult"*, i32)*** %11, align 8
  %14 = getelementptr inbounds void (%"class.blink::ContentDecryptionModuleResult"*, i32)*, void (%"class.blink::ContentDecryptionModuleResult"*, i32)** %13, i64 4
  %15 = load void (%"class.blink::ContentDecryptionModuleResult"*, i32)*, void (%"class.blink::ContentDecryptionModuleResult"*, i32)** %14, align 8
  tail call void %15(%"class.blink::ContentDecryptionModuleResult"* %12, i32 %1) #5
  %16 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %3, align 8
  %17 = icmp eq %"class.blink::CrossThreadPersistent"* %16, null
  br i1 %17, label %39, label %18

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %16, i64 0, i32 0, i32 1
  %20 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %19 to i64*
  %21 = load atomic i64, i64* %20 acquire, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %37, label %23

23:                                               ; preds = %18
  %24 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #5
  %25 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %24, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %25) #5
  %26 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #5
  %27 = load atomic i64, i64* %20 monotonic, align 8
  %28 = inttoptr i64 %27 to %"class.blink::PersistentNode"*
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %36, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %26, i64 0, i32 0, i32 0
  %32 = bitcast %"class.blink::CrossThreadPersistentRegion"* %26 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = inttoptr i64 %27 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %28, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %35, align 8
  store %"class.blink::PersistentNode"* %28, %"class.blink::PersistentNode"** %31, align 8
  br label %36

36:                                               ; preds = %30, %23
  store atomic i64 0, i64* %20 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %25) #5
  br label %37

37:                                               ; preds = %36, %18
  %38 = bitcast %"class.blink::CrossThreadPersistent"* %16 to i8*
  tail call void @free(i8* %38) #5
  br label %39

39:                                               ; preds = %10, %37
  store %"class.blink::CrossThreadPersistent"* null, %"class.blink::CrossThreadPersistent"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink32WebContentDecryptionModuleResult21CompleteWithKeyStatusENS_31WebEncryptedMediaKeyInformation9KeyStatusE(%"class.blink::WebContentDecryptionModuleResult"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::WebContentDecryptionModuleResult"* %0 to %"class.blink::CrossThreadPersistent"**
  %4 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %3, align 8
  %5 = icmp eq %"class.blink::CrossThreadPersistent"* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.blink::ContentDecryptionModuleResult"*, %"class.blink::ContentDecryptionModuleResult"** %7, align 8
  %9 = bitcast %"class.blink::ContentDecryptionModuleResult"* %8 to void (%"class.blink::ContentDecryptionModuleResult"*, i32)***
  br label %10

10:                                               ; preds = %2, %6
  %11 = phi void (%"class.blink::ContentDecryptionModuleResult"*, i32)*** [ %9, %6 ], [ null, %2 ]
  %12 = phi %"class.blink::ContentDecryptionModuleResult"* [ %8, %6 ], [ null, %2 ]
  %13 = load void (%"class.blink::ContentDecryptionModuleResult"*, i32)**, void (%"class.blink::ContentDecryptionModuleResult"*, i32)*** %11, align 8
  %14 = getelementptr inbounds void (%"class.blink::ContentDecryptionModuleResult"*, i32)*, void (%"class.blink::ContentDecryptionModuleResult"*, i32)** %13, i64 5
  %15 = load void (%"class.blink::ContentDecryptionModuleResult"*, i32)*, void (%"class.blink::ContentDecryptionModuleResult"*, i32)** %14, align 8
  tail call void %15(%"class.blink::ContentDecryptionModuleResult"* %12, i32 %1) #5
  %16 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %3, align 8
  %17 = icmp eq %"class.blink::CrossThreadPersistent"* %16, null
  br i1 %17, label %39, label %18

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %16, i64 0, i32 0, i32 1
  %20 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %19 to i64*
  %21 = load atomic i64, i64* %20 acquire, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %37, label %23

23:                                               ; preds = %18
  %24 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #5
  %25 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %24, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %25) #5
  %26 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #5
  %27 = load atomic i64, i64* %20 monotonic, align 8
  %28 = inttoptr i64 %27 to %"class.blink::PersistentNode"*
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %36, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %26, i64 0, i32 0, i32 0
  %32 = bitcast %"class.blink::CrossThreadPersistentRegion"* %26 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = inttoptr i64 %27 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %28, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %35, align 8
  store %"class.blink::PersistentNode"* %28, %"class.blink::PersistentNode"** %31, align 8
  br label %36

36:                                               ; preds = %30, %23
  store atomic i64 0, i64* %20 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %25) #5
  br label %37

37:                                               ; preds = %36, %18
  %38 = bitcast %"class.blink::CrossThreadPersistent"* %16 to i8*
  tail call void @free(i8* %38) #5
  br label %39

39:                                               ; preds = %10, %37
  store %"class.blink::CrossThreadPersistent"* null, %"class.blink::CrossThreadPersistent"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink32WebContentDecryptionModuleResult17CompleteWithErrorENS_35WebContentDecryptionModuleExceptionEjRKNS_9WebStringE(%"class.blink::WebContentDecryptionModuleResult"* nocapture, i32, i32, %"class.blink::WebString"*) local_unnamed_addr #0 align 2 {
  %5 = bitcast %"class.blink::WebContentDecryptionModuleResult"* %0 to %"class.blink::CrossThreadPersistent"**
  %6 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %5, align 8
  %7 = icmp eq %"class.blink::CrossThreadPersistent"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %6, i64 0, i32 0, i32 0
  %10 = load %"class.blink::ContentDecryptionModuleResult"*, %"class.blink::ContentDecryptionModuleResult"** %9, align 8
  %11 = bitcast %"class.blink::ContentDecryptionModuleResult"* %10 to void (%"class.blink::ContentDecryptionModuleResult"*, i32, i32, %"class.blink::WebString"*)***
  br label %12

12:                                               ; preds = %4, %8
  %13 = phi void (%"class.blink::ContentDecryptionModuleResult"*, i32, i32, %"class.blink::WebString"*)*** [ %11, %8 ], [ null, %4 ]
  %14 = phi %"class.blink::ContentDecryptionModuleResult"* [ %10, %8 ], [ null, %4 ]
  %15 = load void (%"class.blink::ContentDecryptionModuleResult"*, i32, i32, %"class.blink::WebString"*)**, void (%"class.blink::ContentDecryptionModuleResult"*, i32, i32, %"class.blink::WebString"*)*** %13, align 8
  %16 = getelementptr inbounds void (%"class.blink::ContentDecryptionModuleResult"*, i32, i32, %"class.blink::WebString"*)*, void (%"class.blink::ContentDecryptionModuleResult"*, i32, i32, %"class.blink::WebString"*)** %15, i64 6
  %17 = load void (%"class.blink::ContentDecryptionModuleResult"*, i32, i32, %"class.blink::WebString"*)*, void (%"class.blink::ContentDecryptionModuleResult"*, i32, i32, %"class.blink::WebString"*)** %16, align 8
  tail call void %17(%"class.blink::ContentDecryptionModuleResult"* %14, i32 %1, i32 %2, %"class.blink::WebString"* %3) #5
  %18 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %5, align 8
  %19 = icmp eq %"class.blink::CrossThreadPersistent"* %18, null
  br i1 %19, label %41, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %18, i64 0, i32 0, i32 1
  %22 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %21 to i64*
  %23 = load atomic i64, i64* %22 acquire, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %39, label %25

25:                                               ; preds = %20
  %26 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #5
  %27 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %26, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %27) #5
  %28 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #5
  %29 = load atomic i64, i64* %22 monotonic, align 8
  %30 = inttoptr i64 %29 to %"class.blink::PersistentNode"*
  %31 = icmp eq i64 %29, 0
  br i1 %31, label %38, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %28, i64 0, i32 0, i32 0
  %34 = bitcast %"class.blink::CrossThreadPersistentRegion"* %28 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = inttoptr i64 %29 to i64*
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %30, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %37, align 8
  store %"class.blink::PersistentNode"* %30, %"class.blink::PersistentNode"** %33, align 8
  br label %38

38:                                               ; preds = %32, %25
  store atomic i64 0, i64* %22 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %27) #5
  br label %39

39:                                               ; preds = %38, %20
  %40 = bitcast %"class.blink::CrossThreadPersistent"* %18 to i8*
  tail call void @free(i8* %40) #5
  br label %41

41:                                               ; preds = %12, %39
  store %"class.blink::CrossThreadPersistent"* null, %"class.blink::CrossThreadPersistent"** %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink32WebContentDecryptionModuleResultC2EPNS_29ContentDecryptionModuleResultE(%"class.blink::WebContentDecryptionModuleResult"*, %"class.blink::ContentDecryptionModuleResult"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebContentDecryptionModuleResult", %"class.blink::WebContentDecryptionModuleResult"* %0, i64 0, i32 0, i32 0
  store i8* null, i8** %3, align 8
  %4 = bitcast %"class.blink::WebContentDecryptionModuleResult"* %0 to %"class.blink::PtrStorageImpl"*
  tail call void @_ZN5blink14PtrStorageImplINS_29ContentDecryptionModuleResultELNS_24WebPrivatePtrDestructionE1ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE1EE6AssignEPS1_(%"class.blink::PtrStorageImpl"* %4, %"class.blink::ContentDecryptionModuleResult"* %1) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink32WebContentDecryptionModuleResult6AssignERKS0_(%"class.blink::WebContentDecryptionModuleResult"*, %"class.blink::WebContentDecryptionModuleResult"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::WebContentDecryptionModuleResult"* %0 to %"class.blink::PtrStorageImpl"*
  %4 = bitcast %"class.blink::WebContentDecryptionModuleResult"* %1 to %"class.blink::CrossThreadPersistent"**
  %5 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %4, align 8
  %6 = icmp eq %"class.blink::CrossThreadPersistent"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %5, i64 0, i32 0, i32 0
  %9 = load %"class.blink::ContentDecryptionModuleResult"*, %"class.blink::ContentDecryptionModuleResult"** %8, align 8
  br label %10

10:                                               ; preds = %2, %7
  %11 = phi %"class.blink::ContentDecryptionModuleResult"* [ %9, %7 ], [ null, %2 ]
  tail call void @_ZN5blink14PtrStorageImplINS_29ContentDecryptionModuleResultELNS_24WebPrivatePtrDestructionE1ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE1EE6AssignEPS1_(%"class.blink::PtrStorageImpl"* %3, %"class.blink::ContentDecryptionModuleResult"* %11) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PtrStorageImplINS_29ContentDecryptionModuleResultELNS_24WebPrivatePtrDestructionE1ELNS_21WebPrivatePtrStrengthE0ELNS_22LifetimeManagementTypeE1EE6AssignEPS1_(%"class.blink::PtrStorageImpl"*, %"class.blink::ContentDecryptionModuleResult"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.blink::PersistentLocation", align 8
  %4 = icmp eq %"class.blink::ContentDecryptionModuleResult"* %1, null
  %5 = getelementptr inbounds %"class.blink::PtrStorageImpl", %"class.blink::PtrStorageImpl"* %0, i64 0, i32 0
  %6 = load %"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"** %5, align 8
  %7 = icmp eq %"class.blink::CrossThreadPersistent"* %6, null
  br i1 %4, label %8, label %31

8:                                                ; preds = %2
  br i1 %7, label %30, label %9

9:                                                ; preds = %8
  %10 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %6, i64 0, i32 0, i32 1
  %11 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %10 to i64*
  %12 = load atomic i64, i64* %11 acquire, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %28, label %14

14:                                               ; preds = %9
  %15 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #5
  %16 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %15, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %16) #5
  %17 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #5
  %18 = load atomic i64, i64* %11 monotonic, align 8
  %19 = inttoptr i64 %18 to %"class.blink::PersistentNode"*
  %20 = icmp eq i64 %18, 0
  br i1 %20, label %27, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %17, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::CrossThreadPersistentRegion"* %17 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = inttoptr i64 %18 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %19, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %26, align 8
  store %"class.blink::PersistentNode"* %19, %"class.blink::PersistentNode"** %22, align 8
  br label %27

27:                                               ; preds = %21, %14
  store atomic i64 0, i64* %11 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %16) #5
  br label %28

28:                                               ; preds = %27, %9
  %29 = bitcast %"class.blink::CrossThreadPersistent"* %6 to i8*
  tail call void @free(i8* %29) #5
  br label %30

30:                                               ; preds = %8, %28
  store %"class.blink::CrossThreadPersistent"* null, %"class.blink::CrossThreadPersistent"** %5, align 8
  br label %43

31:                                               ; preds = %2
  br i1 %7, label %32, label %38

32:                                               ; preds = %31
  %33 = tail call noalias i8* @malloc(i64 16) #5
  %34 = bitcast %"class.blink::PersistentLocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %34) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 0, i64 32, i1 false) #5
  %35 = getelementptr inbounds %"class.blink::PersistentLocation", %"class.blink::PersistentLocation"* %3, i64 0, i32 0
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %35) #5
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 16, i1 false) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %34) #5
  %36 = bitcast %"class.blink::PtrStorageImpl"* %0 to i8**
  store i8* %33, i8** %36, align 8
  %37 = bitcast i8* %33 to %"class.blink::CrossThreadPersistent"*
  br label %38

38:                                               ; preds = %31, %32
  %39 = phi %"class.blink::CrossThreadPersistent"* [ %6, %31 ], [ %37, %32 ]
  %40 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %39, i64 0, i32 0
  %41 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #5
  %42 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %41, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %42) #5
  call void @_ZN5blink14PersistentBaseINS_29ContentDecryptionModuleResultELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase"* %40, %"class.blink::ContentDecryptionModuleResult"* nonnull %1) #5
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %42) #5
  br label %43

43:                                               ; preds = %38, %30
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() local_unnamed_addr #2

declare void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #2

declare dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() local_unnamed_addr #2

declare void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #4

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_29ContentDecryptionModuleResultELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase"*, %"class.blink::ContentDecryptionModuleResult"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 0
  store %"class.blink::ContentDecryptionModuleResult"* %1, %"class.blink::ContentDecryptionModuleResult"** %3, align 8
  %4 = ptrtoint %"class.blink::ContentDecryptionModuleResult"* %1 to i64
  switch i64 %4, label %5 [
    i64 0, label %29
    i64 -1, label %29
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 1
  %7 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %6 to i64*
  %8 = load atomic i64, i64* %7 acquire, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %46

10:                                               ; preds = %5
  %11 = bitcast %"class.blink::PersistentBase"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  switch i64 %12, label %13 [
    i64 0, label %46
    i64 -1, label %46
  ]

13:                                               ; preds = %10
  %14 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #5
  %15 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  %17 = icmp eq %"class.blink::PersistentNode"* %16, null
  br i1 %17, label %18, label %21, !prof !2

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %19) #5
  %20 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  br label %21

21:                                               ; preds = %18, %13
  %22 = phi %"class.blink::PersistentNode"* [ %20, %18 ], [ %16, %13 ]
  %23 = bitcast %"class.blink::PersistentNode"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::CrossThreadPersistentRegion"* %14 to i64*
  store i64 %24, i64* %25, align 8
  %26 = bitcast %"class.blink::PersistentNode"* %22 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %0, %"class.blink::PersistentBase"** %26, align 8
  %27 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %22, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_29ContentDecryptionModuleResultELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %27, align 8
  %28 = ptrtoint %"class.blink::PersistentNode"* %22 to i64
  store atomic i64 %28, i64* %7 release, align 8
  br label %46

29:                                               ; preds = %2, %2
  %30 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 1
  %31 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %30 to i64*
  %32 = load atomic i64, i64* %31 acquire, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %46, label %34

34:                                               ; preds = %29
  %35 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #5
  %36 = load atomic i64, i64* %31 monotonic, align 8
  %37 = inttoptr i64 %36 to %"class.blink::PersistentNode"*
  %38 = icmp eq i64 %36, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %35, i64 0, i32 0, i32 0
  %41 = bitcast %"class.blink::CrossThreadPersistentRegion"* %35 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = inttoptr i64 %36 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %37, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %44, align 8
  store %"class.blink::PersistentNode"* %37, %"class.blink::PersistentNode"** %40, align 8
  br label %45

45:                                               ; preds = %39, %34
  store atomic i64 0, i64* %31 release, align 8
  br label %46

46:                                               ; preds = %5, %45, %29, %21, %10, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_29ContentDecryptionModuleResultELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::ContentDecryptionModuleResult"**
  %5 = load %"class.blink::ContentDecryptionModuleResult"*, %"class.blink::ContentDecryptionModuleResult"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #5
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #5
  %7 = icmp eq %"class.blink::ContentDecryptionModuleResult"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::ContentDecryptionModuleResult"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, {}*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, {}*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, {}*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, {}*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, {}*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, {}*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, {}*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, {}* bitcast (void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_29ContentDecryptionModuleResultEE5TraceEPNS_7VisitorEPKv to {}*), %"class.base::Location"* nonnull dereferenceable(32) %3) #5
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_29ContentDecryptionModuleResultEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ContentDecryptionModuleResult"*
  %4 = bitcast i8* %1 to void (%"class.blink::ContentDecryptionModuleResult"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ContentDecryptionModuleResult"*, %"class.blink::Visitor"*)**, void (%"class.blink::ContentDecryptionModuleResult"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ContentDecryptionModuleResult"*, %"class.blink::Visitor"*)*, void (%"class.blink::ContentDecryptionModuleResult"*, %"class.blink::Visitor"*)** %5, i64 7
  %7 = load void (%"class.blink::ContentDecryptionModuleResult"*, %"class.blink::Visitor"*)*, void (%"class.blink::ContentDecryptionModuleResult"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ContentDecryptionModuleResult"* %3, %"class.blink::Visitor"* %0) #5
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
