; ModuleID = '../../third_party/webrtc/p2p/base/async_stun_tcp_socket.cc'
source_filename = "../../third_party/webrtc/p2p/base/async_stun_tcp_socket.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.cricket::AsyncStunTCPSocket" = type { %"class.rtc::AsyncTCPSocketBase" }
%"class.rtc::AsyncTCPSocketBase" = type { %"class.rtc::AsyncPacketSocket", %"class.std::__1::unique_ptr", i8, %"class.rtc::BufferT", %"class.rtc::BufferT", i64, i64 }
%"class.rtc::AsyncPacketSocket" = type { %"class.sigslot::has_slots", %"class.sigslot::signal_with_thread_policy", %"class.sigslot::signal_with_thread_policy.8", %"class.sigslot::signal_with_thread_policy.10", %"class.sigslot::signal_with_thread_policy.12", %"class.sigslot::signal_with_thread_policy.10", %"class.sigslot::signal_with_thread_policy.14", %"class.sigslot::signal_with_thread_policy.16" }
%"class.sigslot::has_slots" = type { %"class.sigslot::has_slots_interface", %"class.std::__1::set" }
%"class.sigslot::has_slots_interface" = type { i32 (...)**, void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)*, void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)*, void (%"class.sigslot::has_slots_interface"*)* }
%"class.sigslot::_signal_base_interface" = type { void (%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*)*, void (%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*, %"class.sigslot::has_slots_interface"*)* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.sigslot::signal_with_thread_policy" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::_signal_base.base" = type <{ %"class.sigslot::_signal_base_interface", %"class.std::__1::list", %"class.std::__1::__list_iterator", i8 }>
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.4" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__list_iterator" = type { %"struct.std::__1::__list_node_base"* }
%"class.sigslot::signal_with_thread_policy.8" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::signal_with_thread_policy.12" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::signal_with_thread_policy.10" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::signal_with_thread_policy.14" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::signal_with_thread_policy.16" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.rtc::AsyncSocket"* }
%"class.rtc::BufferT" = type { i64, i64, %"class.std::__1::unique_ptr.29" }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { i8* }
%"class.rtc::AsyncSocket" = type { %"class.rtc::Socket", %"class.sigslot::signal_with_thread_policy.20", %"class.sigslot::signal_with_thread_policy.20", %"class.sigslot::signal_with_thread_policy.24", %"class.sigslot::signal_with_thread_policy.26" }
%"class.rtc::Socket" = type { i32 (...)** }
%"class.sigslot::signal_with_thread_policy.20" = type { %"class.sigslot::_signal_base.base.22", [7 x i8] }
%"class.sigslot::_signal_base.base.22" = type <{ %"class.sigslot::_signal_base_interface", %"class.sigslot::multi_threaded_local", %"class.std::__1::list", %"class.std::__1::__list_iterator", i8 }>
%"class.sigslot::multi_threaded_local" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.sigslot::signal_with_thread_policy.24" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::signal_with_thread_policy.26" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.rtc::SocketAddress" = type <{ %"class.std::__1::basic_string", %"class.rtc::IPAddress", i16, [2 x i8], i32, i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.rtc::IPAddress" = type <{ i32 (...)**, i32, %union.anon.40, [4 x i8] }>
%union.anon.40 = type { %struct.in6_addr }
%struct.in6_addr = type { %union.anon.41 }
%union.anon.41 = type { [4 x i32] }
%"struct.rtc::PacketOptions" = type { i32, i64, %"struct.rtc::PacketTimeUpdateParams", %"struct.rtc::PacketInfo" }
%"struct.rtc::PacketTimeUpdateParams" = type { i32, %"class.std::__1::vector", i32, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { i8* }
%"struct.rtc::PacketInfo" = type { i8, i8, i32, i32, %"class.absl::optional", i64, i64, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.44 }
%union.anon.44 = type { i16 }
%"struct.rtc::SentPacket" = type { i64, i64, %"struct.rtc::PacketInfo" }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"class.sigslot::_opaque_connection" }
%"class.sigslot::_opaque_connection" = type { void (%"class.sigslot::_opaque_connection"*)*, %"class.sigslot::has_slots_interface"*, [16 x i8] }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN7cricket18AsyncStunTCPSocketD0Ev = comdat any

@_ZTVN7cricket18AsyncStunTCPSocketE = hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.rtc::AsyncTCPSocketBase"*)* @_ZN3rtc18AsyncTCPSocketBaseD2Ev to i8*), i8* bitcast (void (%"class.cricket::AsyncStunTCPSocket"*)* @_ZN7cricket18AsyncStunTCPSocketD0Ev to i8*), i8* bitcast (void (%"class.rtc::SocketAddress"*, %"class.rtc::AsyncTCPSocketBase"*)* @_ZNK3rtc18AsyncTCPSocketBase15GetLocalAddressEv to i8*), i8* bitcast (void (%"class.rtc::SocketAddress"*, %"class.rtc::AsyncTCPSocketBase"*)* @_ZNK3rtc18AsyncTCPSocketBase16GetRemoteAddressEv to i8*), i8* bitcast (i32 (%"class.cricket::AsyncStunTCPSocket"*, i8*, i64, %"struct.rtc::PacketOptions"*)* @_ZN7cricket18AsyncStunTCPSocket4SendEPKvmRKN3rtc13PacketOptionsE to i8*), i8* bitcast (i32 (%"class.rtc::AsyncTCPSocketBase"*, i8*, i64, %"class.rtc::SocketAddress"*, %"struct.rtc::PacketOptions"*)* @_ZN3rtc18AsyncTCPSocketBase6SendToEPKvmRKNS_13SocketAddressERKNS_13PacketOptionsE to i8*), i8* bitcast (i32 (%"class.rtc::AsyncTCPSocketBase"*)* @_ZN3rtc18AsyncTCPSocketBase5CloseEv to i8*), i8* bitcast (i32 (%"class.rtc::AsyncTCPSocketBase"*)* @_ZNK3rtc18AsyncTCPSocketBase8GetStateEv to i8*), i8* bitcast (i32 (%"class.rtc::AsyncTCPSocketBase"*, i32, i32*)* @_ZN3rtc18AsyncTCPSocketBase9GetOptionENS_6Socket6OptionEPi to i8*), i8* bitcast (i32 (%"class.rtc::AsyncTCPSocketBase"*, i32, i32)* @_ZN3rtc18AsyncTCPSocketBase9SetOptionENS_6Socket6OptionEi to i8*), i8* bitcast (i32 (%"class.rtc::AsyncTCPSocketBase"*)* @_ZNK3rtc18AsyncTCPSocketBase8GetErrorEv to i8*), i8* bitcast (void (%"class.rtc::AsyncTCPSocketBase"*, i32)* @_ZN3rtc18AsyncTCPSocketBase8SetErrorEi to i8*), i8* bitcast (void (%"class.cricket::AsyncStunTCPSocket"*, i8*, i64*)* @_ZN7cricket18AsyncStunTCPSocket12ProcessInputEPcPm to i8*), i8* bitcast (void (%"class.cricket::AsyncStunTCPSocket"*, %"class.rtc::AsyncSocket"*)* @_ZN7cricket18AsyncStunTCPSocket24HandleIncomingConnectionEPN3rtc11AsyncSocketE to i8*)] }, align 8

@_ZN7cricket18AsyncStunTCPSocketC1EPN3rtc11AsyncSocketEb = hidden unnamed_addr alias void (%"class.cricket::AsyncStunTCPSocket"*, %"class.rtc::AsyncSocket"*, i1), void (%"class.cricket::AsyncStunTCPSocket"*, %"class.rtc::AsyncSocket"*, i1)* @_ZN7cricket18AsyncStunTCPSocketC2EPN3rtc11AsyncSocketEb

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.cricket::AsyncStunTCPSocket"* @_ZN7cricket18AsyncStunTCPSocket6CreateEPN3rtc11AsyncSocketERKNS1_13SocketAddressES6_(%"class.rtc::AsyncSocket"*, %"class.rtc::SocketAddress"* dereferenceable(72), %"class.rtc::SocketAddress"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 528) #9
  %5 = bitcast i8* %4 to %"class.cricket::AsyncStunTCPSocket"*
  %6 = tail call %"class.rtc::AsyncSocket"* @_ZN3rtc18AsyncTCPSocketBase13ConnectSocketEPNS_11AsyncSocketERKNS_13SocketAddressES5_(%"class.rtc::AsyncSocket"* %0, %"class.rtc::SocketAddress"* dereferenceable(72) %1, %"class.rtc::SocketAddress"* dereferenceable(72) %2) #10
  %7 = bitcast i8* %4 to %"class.rtc::AsyncTCPSocketBase"*
  tail call void @_ZN3rtc18AsyncTCPSocketBaseC2EPNS_11AsyncSocketEbm(%"class.rtc::AsyncTCPSocketBase"* nonnull %7, %"class.rtc::AsyncSocket"* %6, i1 zeroext false, i64 65556) #10
  %8 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN7cricket18AsyncStunTCPSocketE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  ret %"class.cricket::AsyncStunTCPSocket"* %5
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

declare %"class.rtc::AsyncSocket"* @_ZN3rtc18AsyncTCPSocketBase13ConnectSocketEPNS_11AsyncSocketERKNS_13SocketAddressES5_(%"class.rtc::AsyncSocket"*, %"class.rtc::SocketAddress"* dereferenceable(72), %"class.rtc::SocketAddress"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7cricket18AsyncStunTCPSocketC2EPN3rtc11AsyncSocketEb(%"class.cricket::AsyncStunTCPSocket"*, %"class.rtc::AsyncSocket"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cricket::AsyncStunTCPSocket", %"class.cricket::AsyncStunTCPSocket"* %0, i64 0, i32 0
  tail call void @_ZN3rtc18AsyncTCPSocketBaseC2EPNS_11AsyncSocketEbm(%"class.rtc::AsyncTCPSocketBase"* %4, %"class.rtc::AsyncSocket"* %1, i1 zeroext %2, i64 65556) #10
  %5 = getelementptr inbounds %"class.cricket::AsyncStunTCPSocket", %"class.cricket::AsyncStunTCPSocket"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN7cricket18AsyncStunTCPSocketE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  ret void
}

declare void @_ZN3rtc18AsyncTCPSocketBaseC2EPNS_11AsyncSocketEbm(%"class.rtc::AsyncTCPSocketBase"*, %"class.rtc::AsyncSocket"*, i1 zeroext, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7cricket18AsyncStunTCPSocket4SendEPKvmRKN3rtc13PacketOptionsE(%"class.cricket::AsyncStunTCPSocket"*, i8*, i64, %"struct.rtc::PacketOptions"* nocapture readonly dereferenceable(104)) unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca %"struct.rtc::SentPacket", align 8
  %7 = add i64 %2, -4
  %8 = icmp ugt i64 %7, 65552
  %9 = getelementptr inbounds %"class.cricket::AsyncStunTCPSocket", %"class.cricket::AsyncStunTCPSocket"* %0, i64 0, i32 0
  br i1 %8, label %10, label %15

10:                                               ; preds = %4
  %11 = bitcast %"class.cricket::AsyncStunTCPSocket"* %0 to void (%"class.rtc::AsyncTCPSocketBase"*, i32)***
  %12 = load void (%"class.rtc::AsyncTCPSocketBase"*, i32)**, void (%"class.rtc::AsyncTCPSocketBase"*, i32)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.rtc::AsyncTCPSocketBase"*, i32)*, void (%"class.rtc::AsyncTCPSocketBase"*, i32)** %12, i64 11
  %14 = load void (%"class.rtc::AsyncTCPSocketBase"*, i32)*, void (%"class.rtc::AsyncTCPSocketBase"*, i32)** %13, align 8
  tail call void %14(%"class.rtc::AsyncTCPSocketBase"* %9, i32 90) #10
  br label %84

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.cricket::AsyncStunTCPSocket", %"class.cricket::AsyncStunTCPSocket"* %0, i64 0, i32 0, i32 4, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %15
  %20 = trunc i64 %2 to i32
  br label %84

21:                                               ; preds = %15
  %22 = getelementptr inbounds i8, i8* %1, i64 2
  %23 = bitcast i8* %22 to i16*
  %24 = load i16, i16* %23, align 2
  %25 = tail call i16 @llvm.bswap.i16(i16 %24) #10
  %26 = bitcast i8* %1 to i16*
  %27 = load i16, i16* %26, align 2
  %28 = and i16 %27, 192
  %29 = icmp eq i16 %28, 0
  %30 = zext i16 %25 to i64
  br i1 %29, label %31, label %33

31:                                               ; preds = %21
  %32 = add nuw nsw i64 %30, 20
  br label %39

33:                                               ; preds = %21
  %34 = add nuw nsw i64 %30, 4
  %35 = and i64 %34, 3
  %36 = icmp eq i64 %35, 0
  %37 = sub nuw nsw i64 4, %35
  %38 = select i1 %36, i64 0, i64 %37
  br label %39

39:                                               ; preds = %33, %31
  %40 = phi i64 [ 0, %31 ], [ %38, %33 ]
  %41 = phi i64 [ %32, %31 ], [ %34, %33 ]
  %42 = icmp eq i64 %41, %2
  br i1 %42, label %43, label %84

43:                                               ; preds = %39
  tail call void @_ZN3rtc18AsyncTCPSocketBase17AppendToOutBufferEPKvm(%"class.rtc::AsyncTCPSocketBase"* %9, i8* %1, i64 %2) #10
  %44 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %44) #10
  store i32 0, i32* %5, align 4
  call void @_ZN3rtc18AsyncTCPSocketBase17AppendToOutBufferEPKvm(%"class.rtc::AsyncTCPSocketBase"* %9, i8* nonnull %44, i64 %40) #10
  %45 = call i32 @_ZN3rtc18AsyncTCPSocketBase14FlushOutBufferEv(%"class.rtc::AsyncTCPSocketBase"* %9) #10
  %46 = icmp slt i32 %45, 1
  br i1 %46, label %47, label %48

47:                                               ; preds = %43
  store i64 0, i64* %16, align 8
  br label %82

48:                                               ; preds = %43
  %49 = bitcast %"struct.rtc::SentPacket"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %49) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 56, i1 false)
  %50 = getelementptr inbounds %"struct.rtc::PacketOptions", %"struct.rtc::PacketOptions"* %3, i64 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = call i64 @_ZN3rtc10TimeMillisEv() #10
  call void @_ZN3rtc10SentPacketC1Ell(%"struct.rtc::SentPacket"* nonnull %6, i64 %51, i64 %52) #10
  %53 = getelementptr inbounds %"class.cricket::AsyncStunTCPSocket", %"class.cricket::AsyncStunTCPSocket"* %0, i64 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.cricket::AsyncStunTCPSocket", %"class.cricket::AsyncStunTCPSocket"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 1
  %55 = bitcast %"struct.std::__1::__list_node_base"** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"class.cricket::AsyncStunTCPSocket", %"class.cricket::AsyncStunTCPSocket"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 2, i32 0
  %58 = bitcast %"struct.std::__1::__list_node_base"** %57 to i64*
  store i64 %56, i64* %58, align 8
  %59 = getelementptr inbounds %"class.cricket::AsyncStunTCPSocket", %"class.cricket::AsyncStunTCPSocket"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %60 = getelementptr inbounds %"class.cricket::AsyncStunTCPSocket", %"class.cricket::AsyncStunTCPSocket"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %61 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %59, i64 0, i32 0
  %62 = inttoptr i64 %56 to %"struct.std::__1::__list_node_base"*
  %63 = icmp eq %"struct.std::__1::__list_node_base"* %60, %62
  br i1 %63, label %79, label %64

64:                                               ; preds = %48
  %65 = inttoptr i64 %56 to %"struct.std::__1::__list_node"*
  %66 = bitcast %"class.std::__1::__list_iterator"* %59 to i64*
  br label %67

67:                                               ; preds = %67, %64
  %68 = phi %"struct.std::__1::__list_node"* [ %65, %64 ], [ %78, %67 ]
  %69 = phi %"struct.std::__1::__list_node_base"* [ %62, %64 ], [ %76, %67 ]
  %70 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %68, i64 0, i32 1
  %71 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %69, i64 0, i32 1
  %72 = bitcast %"struct.std::__1::__list_node_base"** %71 to i64*
  %73 = load i64, i64* %72, align 8
  store i64 %73, i64* %66, align 8
  %74 = bitcast %"class.sigslot::_opaque_connection"* %70 to void (%"class.sigslot::_opaque_connection"*, %"class.rtc::AsyncPacketSocket"*, %"struct.rtc::SentPacket"*)**
  %75 = load void (%"class.sigslot::_opaque_connection"*, %"class.rtc::AsyncPacketSocket"*, %"struct.rtc::SentPacket"*)*, void (%"class.sigslot::_opaque_connection"*, %"class.rtc::AsyncPacketSocket"*, %"struct.rtc::SentPacket"*)** %74, align 8
  call void %75(%"class.sigslot::_opaque_connection"* %70, %"class.rtc::AsyncPacketSocket"* %53, %"struct.rtc::SentPacket"* nonnull dereferenceable(56) %6) #10
  %76 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %61, align 8
  %77 = icmp eq %"struct.std::__1::__list_node_base"* %76, %60
  %78 = bitcast %"struct.std::__1::__list_node_base"* %76 to %"struct.std::__1::__list_node"*
  br i1 %77, label %79, label %67

79:                                               ; preds = %67, %48
  %80 = trunc i64 %2 to i32
  %81 = getelementptr inbounds %"struct.rtc::SentPacket", %"struct.rtc::SentPacket"* %6, i64 0, i32 2
  call void @_ZN3rtc10PacketInfoD1Ev(%"struct.rtc::PacketInfo"* %81) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %49) #10
  br label %82

82:                                               ; preds = %79, %47
  %83 = phi i32 [ %45, %47 ], [ %80, %79 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %44) #10
  br label %84

84:                                               ; preds = %82, %39, %19, %10
  %85 = phi i32 [ -1, %10 ], [ %20, %19 ], [ %83, %82 ], [ -1, %39 ]
  ret i32 %85
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nounwind ssp uwtable
define hidden i64 @_ZN7cricket18AsyncStunTCPSocket17GetExpectedLengthEPKvmPi(%"class.cricket::AsyncStunTCPSocket"* nocapture readnone, i8* nocapture readonly, i64, i32* nocapture) local_unnamed_addr #4 align 2 {
  store i32 0, i32* %3, align 4
  %5 = getelementptr inbounds i8, i8* %1, i64 2
  %6 = bitcast i8* %5 to i16*
  %7 = load i16, i16* %6, align 2
  %8 = tail call i16 @llvm.bswap.i16(i16 %7) #10
  %9 = bitcast i8* %1 to i16*
  %10 = load i16, i16* %9, align 2
  %11 = and i16 %10, 192
  %12 = icmp eq i16 %11, 0
  %13 = zext i16 %8 to i64
  br i1 %12, label %14, label %16

14:                                               ; preds = %4
  %15 = add nuw nsw i64 %13, 20
  br label %23

16:                                               ; preds = %4
  %17 = add nuw nsw i64 %13, 4
  %18 = and i64 %17, 3
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %16
  %21 = trunc i64 %18 to i32
  %22 = sub nuw nsw i32 4, %21
  store i32 %22, i32* %3, align 4
  br label %23

23:                                               ; preds = %16, %20, %14
  %24 = phi i64 [ %15, %14 ], [ %17, %20 ], [ %17, %16 ]
  ret i64 %24
}

declare void @_ZN3rtc18AsyncTCPSocketBase17AppendToOutBufferEPKvm(%"class.rtc::AsyncTCPSocketBase"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare i32 @_ZN3rtc18AsyncTCPSocketBase14FlushOutBufferEv(%"class.rtc::AsyncTCPSocketBase"*) local_unnamed_addr #2

declare i64 @_ZN3rtc10TimeMillisEv() local_unnamed_addr #2

declare void @_ZN3rtc10SentPacketC1Ell(%"struct.rtc::SentPacket"*, i64, i64) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7cricket18AsyncStunTCPSocket12ProcessInputEPcPm(%"class.cricket::AsyncStunTCPSocket"*, i8*, i64* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.rtc::SocketAddress", align 8
  %5 = alloca i64, align 8
  %6 = bitcast %"class.rtc::SocketAddress"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 72, i1 false)
  %7 = getelementptr inbounds %"class.cricket::AsyncStunTCPSocket", %"class.cricket::AsyncStunTCPSocket"* %0, i64 0, i32 0
  %8 = bitcast %"class.cricket::AsyncStunTCPSocket"* %0 to void (%"class.rtc::SocketAddress"*, %"class.rtc::AsyncTCPSocketBase"*)***
  %9 = load void (%"class.rtc::SocketAddress"*, %"class.rtc::AsyncTCPSocketBase"*)**, void (%"class.rtc::SocketAddress"*, %"class.rtc::AsyncTCPSocketBase"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.rtc::SocketAddress"*, %"class.rtc::AsyncTCPSocketBase"*)*, void (%"class.rtc::SocketAddress"*, %"class.rtc::AsyncTCPSocketBase"*)** %9, i64 3
  %11 = load void (%"class.rtc::SocketAddress"*, %"class.rtc::AsyncTCPSocketBase"*)*, void (%"class.rtc::SocketAddress"*, %"class.rtc::AsyncTCPSocketBase"*)** %10, align 8
  call void %11(%"class.rtc::SocketAddress"* nonnull sret %4, %"class.rtc::AsyncTCPSocketBase"* %7) #10
  %12 = load i64, i64* %2, align 8
  %13 = icmp ult i64 %12, 4
  br i1 %13, label %76, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds i8, i8* %1, i64 2
  %16 = bitcast i8* %15 to i16*
  %17 = bitcast i8* %1 to i16*
  %18 = getelementptr inbounds %"class.cricket::AsyncStunTCPSocket", %"class.cricket::AsyncStunTCPSocket"* %0, i64 0, i32 0, i32 0
  %19 = bitcast i64* %5 to i8*
  %20 = getelementptr inbounds %"class.cricket::AsyncStunTCPSocket", %"class.cricket::AsyncStunTCPSocket"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 1
  %21 = bitcast %"struct.std::__1::__list_node_base"** %20 to i64*
  %22 = getelementptr inbounds %"class.cricket::AsyncStunTCPSocket", %"class.cricket::AsyncStunTCPSocket"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0
  %23 = bitcast %"struct.std::__1::__list_node_base"** %22 to i64*
  %24 = getelementptr inbounds %"class.cricket::AsyncStunTCPSocket", %"class.cricket::AsyncStunTCPSocket"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %25 = getelementptr inbounds %"class.cricket::AsyncStunTCPSocket", %"class.cricket::AsyncStunTCPSocket"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %26 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %24, i64 0, i32 0
  %27 = bitcast %"class.std::__1::__list_iterator"* %24 to i64*
  br label %28

28:                                               ; preds = %14, %72
  %29 = phi i64 [ %12, %14 ], [ %74, %72 ]
  %30 = load i16, i16* %16, align 2
  %31 = call i16 @llvm.bswap.i16(i16 %30) #10
  %32 = load i16, i16* %17, align 2
  %33 = and i16 %32, 192
  %34 = icmp eq i16 %33, 0
  %35 = zext i16 %31 to i64
  br i1 %34, label %36, label %38

36:                                               ; preds = %28
  %37 = add nuw nsw i64 %35, 20
  br label %44

38:                                               ; preds = %28
  %39 = add nuw nsw i64 %35, 4
  %40 = and i64 %39, 3
  %41 = icmp eq i64 %40, 0
  %42 = sub nuw nsw i64 4, %40
  %43 = select i1 %41, i64 0, i64 %42
  br label %44

44:                                               ; preds = %38, %36
  %45 = phi i64 [ 0, %36 ], [ %43, %38 ]
  %46 = phi i64 [ %37, %36 ], [ %39, %38 ]
  %47 = add nuw nsw i64 %46, %45
  %48 = icmp ult i64 %29, %47
  br i1 %48, label %76, label %49

49:                                               ; preds = %44
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #10
  %50 = call i64 @_ZN3rtc10TimeMicrosEv() #10
  store i64 %50, i64* %5, align 8
  %51 = load i64, i64* %21, align 8
  store i64 %51, i64* %23, align 8
  %52 = inttoptr i64 %51 to %"struct.std::__1::__list_node_base"*
  %53 = icmp eq %"struct.std::__1::__list_node_base"* %25, %52
  br i1 %53, label %68, label %54

54:                                               ; preds = %49
  %55 = inttoptr i64 %51 to %"struct.std::__1::__list_node"*
  br label %56

56:                                               ; preds = %56, %54
  %57 = phi %"struct.std::__1::__list_node"* [ %55, %54 ], [ %67, %56 ]
  %58 = phi %"struct.std::__1::__list_node_base"* [ %52, %54 ], [ %65, %56 ]
  %59 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %57, i64 0, i32 1
  %60 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %58, i64 0, i32 1
  %61 = bitcast %"struct.std::__1::__list_node_base"** %60 to i64*
  %62 = load i64, i64* %61, align 8
  store i64 %62, i64* %27, align 8
  %63 = bitcast %"class.sigslot::_opaque_connection"* %59 to void (%"class.sigslot::_opaque_connection"*, %"class.rtc::AsyncPacketSocket"*, i8*, i64, %"class.rtc::SocketAddress"*, i64*)**
  %64 = load void (%"class.sigslot::_opaque_connection"*, %"class.rtc::AsyncPacketSocket"*, i8*, i64, %"class.rtc::SocketAddress"*, i64*)*, void (%"class.sigslot::_opaque_connection"*, %"class.rtc::AsyncPacketSocket"*, i8*, i64, %"class.rtc::SocketAddress"*, i64*)** %63, align 8
  call void %64(%"class.sigslot::_opaque_connection"* %59, %"class.rtc::AsyncPacketSocket"* %18, i8* %1, i64 %46, %"class.rtc::SocketAddress"* nonnull dereferenceable(72) %4, i64* nonnull dereferenceable(8) %5) #10
  %65 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %26, align 8
  %66 = icmp eq %"struct.std::__1::__list_node_base"* %65, %25
  %67 = bitcast %"struct.std::__1::__list_node_base"* %65 to %"struct.std::__1::__list_node"*
  br i1 %66, label %68, label %56

68:                                               ; preds = %56, %49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #10
  %69 = load i64, i64* %2, align 8
  %70 = sub i64 %69, %47
  store i64 %70, i64* %2, align 8
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %76, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds i8, i8* %1, i64 %47
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %73, i64 %70, i1 false)
  %74 = load i64, i64* %2, align 8
  %75 = icmp ult i64 %74, 4
  br i1 %75, label %76, label %28

76:                                               ; preds = %68, %72, %44, %3
  %77 = bitcast %"class.rtc::SocketAddress"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  %79 = load i8, i8* %78, align 1
  %80 = icmp slt i8 %79, 0
  br i1 %80, label %81, label %84

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.rtc::SocketAddress", %"class.rtc::SocketAddress"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  call void @_ZdlPv(i8* %83) #9
  br label %84

84:                                               ; preds = %76, %81
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %6) #10
  ret void
}

declare i64 @_ZN3rtc10TimeMicrosEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7cricket18AsyncStunTCPSocket24HandleIncomingConnectionEPN3rtc11AsyncSocketE(%"class.cricket::AsyncStunTCPSocket"*, %"class.rtc::AsyncSocket"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cricket::AsyncStunTCPSocket", %"class.cricket::AsyncStunTCPSocket"* %0, i64 0, i32 0, i32 0
  %4 = tail call i8* @_Znwm(i64 528) #9
  %5 = bitcast i8* %4 to %"class.rtc::AsyncTCPSocketBase"*
  tail call void @_ZN3rtc18AsyncTCPSocketBaseC2EPNS_11AsyncSocketEbm(%"class.rtc::AsyncTCPSocketBase"* nonnull %5, %"class.rtc::AsyncSocket"* %1, i1 zeroext false, i64 65556) #10
  %6 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN7cricket18AsyncStunTCPSocketE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = bitcast i8* %4 to %"class.rtc::AsyncPacketSocket"*
  %8 = getelementptr inbounds %"class.cricket::AsyncStunTCPSocket", %"class.cricket::AsyncStunTCPSocket"* %0, i64 0, i32 0, i32 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 1
  %9 = bitcast %"struct.std::__1::__list_node_base"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.cricket::AsyncStunTCPSocket", %"class.cricket::AsyncStunTCPSocket"* %0, i64 0, i32 0, i32 0, i32 7, i32 0, i32 2, i32 0
  %12 = bitcast %"struct.std::__1::__list_node_base"** %11 to i64*
  store i64 %10, i64* %12, align 8
  %13 = getelementptr inbounds %"class.cricket::AsyncStunTCPSocket", %"class.cricket::AsyncStunTCPSocket"* %0, i64 0, i32 0, i32 0, i32 7, i32 0, i32 2
  %14 = getelementptr inbounds %"class.cricket::AsyncStunTCPSocket", %"class.cricket::AsyncStunTCPSocket"* %0, i64 0, i32 0, i32 0, i32 7, i32 0, i32 1, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %13, i64 0, i32 0
  %16 = inttoptr i64 %10 to %"struct.std::__1::__list_node_base"*
  %17 = icmp eq %"struct.std::__1::__list_node_base"* %14, %16
  br i1 %17, label %33, label %18

18:                                               ; preds = %2
  %19 = inttoptr i64 %10 to %"struct.std::__1::__list_node"*
  %20 = bitcast %"class.std::__1::__list_iterator"* %13 to i64*
  br label %21

21:                                               ; preds = %21, %18
  %22 = phi %"struct.std::__1::__list_node"* [ %19, %18 ], [ %32, %21 ]
  %23 = phi %"struct.std::__1::__list_node_base"* [ %16, %18 ], [ %30, %21 ]
  %24 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %22, i64 0, i32 1
  %25 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %23, i64 0, i32 1
  %26 = bitcast %"struct.std::__1::__list_node_base"** %25 to i64*
  %27 = load i64, i64* %26, align 8
  store i64 %27, i64* %20, align 8
  %28 = bitcast %"class.sigslot::_opaque_connection"* %24 to void (%"class.sigslot::_opaque_connection"*, %"class.rtc::AsyncPacketSocket"*, %"class.rtc::AsyncPacketSocket"*)**
  %29 = load void (%"class.sigslot::_opaque_connection"*, %"class.rtc::AsyncPacketSocket"*, %"class.rtc::AsyncPacketSocket"*)*, void (%"class.sigslot::_opaque_connection"*, %"class.rtc::AsyncPacketSocket"*, %"class.rtc::AsyncPacketSocket"*)** %28, align 8
  tail call void %29(%"class.sigslot::_opaque_connection"* %24, %"class.rtc::AsyncPacketSocket"* %3, %"class.rtc::AsyncPacketSocket"* nonnull %7) #10
  %30 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %15, align 8
  %31 = icmp eq %"struct.std::__1::__list_node_base"* %30, %14
  %32 = bitcast %"struct.std::__1::__list_node_base"* %30 to %"struct.std::__1::__list_node"*
  br i1 %31, label %33, label %21

33:                                               ; preds = %21, %2
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3rtc18AsyncTCPSocketBaseD2Ev(%"class.rtc::AsyncTCPSocketBase"*) unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7cricket18AsyncStunTCPSocketD0Ev(%"class.cricket::AsyncStunTCPSocket"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.cricket::AsyncStunTCPSocket", %"class.cricket::AsyncStunTCPSocket"* %0, i64 0, i32 0
  tail call void @_ZN3rtc18AsyncTCPSocketBaseD2Ev(%"class.rtc::AsyncTCPSocketBase"* %2) #10
  %3 = bitcast %"class.cricket::AsyncStunTCPSocket"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #9
  ret void
}

declare void @_ZNK3rtc18AsyncTCPSocketBase15GetLocalAddressEv(%"class.rtc::SocketAddress"* sret, %"class.rtc::AsyncTCPSocketBase"*) unnamed_addr #2

declare void @_ZNK3rtc18AsyncTCPSocketBase16GetRemoteAddressEv(%"class.rtc::SocketAddress"* sret, %"class.rtc::AsyncTCPSocketBase"*) unnamed_addr #2

declare i32 @_ZN3rtc18AsyncTCPSocketBase6SendToEPKvmRKNS_13SocketAddressERKNS_13PacketOptionsE(%"class.rtc::AsyncTCPSocketBase"*, i8*, i64, %"class.rtc::SocketAddress"* dereferenceable(72), %"struct.rtc::PacketOptions"* dereferenceable(104)) unnamed_addr #2

declare i32 @_ZN3rtc18AsyncTCPSocketBase5CloseEv(%"class.rtc::AsyncTCPSocketBase"*) unnamed_addr #2

declare i32 @_ZNK3rtc18AsyncTCPSocketBase8GetStateEv(%"class.rtc::AsyncTCPSocketBase"*) unnamed_addr #2

declare i32 @_ZN3rtc18AsyncTCPSocketBase9GetOptionENS_6Socket6OptionEPi(%"class.rtc::AsyncTCPSocketBase"*, i32, i32*) unnamed_addr #2

declare i32 @_ZN3rtc18AsyncTCPSocketBase9SetOptionENS_6Socket6OptionEi(%"class.rtc::AsyncTCPSocketBase"*, i32, i32) unnamed_addr #2

declare i32 @_ZNK3rtc18AsyncTCPSocketBase8GetErrorEv(%"class.rtc::AsyncTCPSocketBase"*) unnamed_addr #2

declare void @_ZN3rtc18AsyncTCPSocketBase8SetErrorEi(%"class.rtc::AsyncTCPSocketBase"*, i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3rtc10PacketInfoD1Ev(%"struct.rtc::PacketInfo"*) unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.bswap.i16(i16) #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
