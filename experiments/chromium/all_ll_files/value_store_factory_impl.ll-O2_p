; ModuleID = '../../extensions/browser/value_store/value_store_factory_impl.cc'
source_filename = "../../extensions/browser/value_store/value_store_factory_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.extensions::ValueStoreFactoryImpl" = type { %"class.extensions::ValueStoreFactory.base", %class.scoped_refptr }
%"class.extensions::ValueStoreFactory.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr = type { %"class.extensions::LegacyValueStoreFactory"* }
%"class.extensions::LegacyValueStoreFactory" = type { %"class.extensions::ValueStoreFactory.base", %"class.base::FilePath", %"class.extensions::LegacyValueStoreFactory::SettingsRoot", %"class.extensions::LegacyValueStoreFactory::SettingsRoot", %"class.extensions::LegacyValueStoreFactory::SettingsRoot" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.extensions::LegacyValueStoreFactory::SettingsRoot" = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.extensions::LegacyValueStoreFactory::ModelSettings"* }
%"class.extensions::LegacyValueStoreFactory::ModelSettings" = type { %"class.base::FilePath" }
%"class.extensions::ValueStoreFactory" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%class.ValueStore = type { i32 (...)** }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.11", %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { i64 }

@_ZTVN10extensions21ValueStoreFactoryImplE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (%class.ValueStore* (%"class.extensions::ValueStoreFactoryImpl"*)* @_ZN10extensions21ValueStoreFactoryImpl16CreateRulesStoreEv to i8*), i8* bitcast (%class.ValueStore* (%"class.extensions::ValueStoreFactoryImpl"*)* @_ZN10extensions21ValueStoreFactoryImpl16CreateStateStoreEv to i8*), i8* bitcast (%class.ValueStore* (%"class.extensions::ValueStoreFactoryImpl"*, i32, i32, %"class.std::__1::basic_string"*)* @_ZN10extensions21ValueStoreFactoryImpl19CreateSettingsStoreENS_18settings_namespace9NamespaceENS_17ValueStoreFactory9ModelTypeERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE to i8*), i8* bitcast (void (%"class.extensions::ValueStoreFactoryImpl"*, i32, i32, %"class.std::__1::basic_string"*)* @_ZN10extensions21ValueStoreFactoryImpl14DeleteSettingsENS_18settings_namespace9NamespaceENS_17ValueStoreFactory9ModelTypeERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE to i8*), i8* bitcast (i1 (%"class.extensions::ValueStoreFactoryImpl"*, i32, i32, %"class.std::__1::basic_string"*)* @_ZN10extensions21ValueStoreFactoryImpl11HasSettingsENS_18settings_namespace9NamespaceENS_17ValueStoreFactory9ModelTypeERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE to i8*), i8* bitcast (void (%"class.std::__1::set"*, %"class.extensions::ValueStoreFactoryImpl"*, i32, i32)* @_ZNK10extensions21ValueStoreFactoryImpl20GetKnownExtensionIDsENS_18settings_namespace9NamespaceENS_17ValueStoreFactory9ModelTypeE to i8*), i8* bitcast (void (%"class.extensions::ValueStoreFactoryImpl"*)* @_ZN10extensions21ValueStoreFactoryImplD2Ev to i8*), i8* bitcast (void (%"class.extensions::ValueStoreFactoryImpl"*)* @_ZN10extensions21ValueStoreFactoryImplD0Ev to i8*)] }, align 8

@_ZN10extensions21ValueStoreFactoryImplC1ERKN4base8FilePathE = hidden unnamed_addr alias void (%"class.extensions::ValueStoreFactoryImpl"*, %"class.base::FilePath"*), void (%"class.extensions::ValueStoreFactoryImpl"*, %"class.base::FilePath"*)* @_ZN10extensions21ValueStoreFactoryImplC2ERKN4base8FilePathE
@_ZN10extensions21ValueStoreFactoryImplD1Ev = hidden unnamed_addr alias void (%"class.extensions::ValueStoreFactoryImpl"*), void (%"class.extensions::ValueStoreFactoryImpl"*)* @_ZN10extensions21ValueStoreFactoryImplD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions21ValueStoreFactoryImplC2ERKN4base8FilePathE(%"class.extensions::ValueStoreFactoryImpl"* nocapture, %"class.base::FilePath"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.extensions::ValueStoreFactoryImpl", %"class.extensions::ValueStoreFactoryImpl"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds %"class.extensions::ValueStoreFactoryImpl", %"class.extensions::ValueStoreFactoryImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN10extensions21ValueStoreFactoryImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = tail call i8* @_Znwm(i64 88) #4
  %6 = bitcast i8* %5 to %"class.extensions::LegacyValueStoreFactory"*
  tail call void @_ZN10extensions23LegacyValueStoreFactoryC1ERKN4base8FilePathE(%"class.extensions::LegacyValueStoreFactory"* nonnull %6, %"class.base::FilePath"* dereferenceable(24) %1) #5
  %7 = getelementptr inbounds i8, i8* %5, i64 8
  %8 = bitcast i8* %7 to i32*
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  %10 = getelementptr inbounds %"class.extensions::ValueStoreFactoryImpl", %"class.extensions::ValueStoreFactoryImpl"* %0, i64 0, i32 1, i32 0
  %11 = bitcast %"class.extensions::LegacyValueStoreFactory"** %10 to i8**
  store i8* %5, i8** %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions21ValueStoreFactoryImplD2Ev(%"class.extensions::ValueStoreFactoryImpl"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::ValueStoreFactoryImpl", %"class.extensions::ValueStoreFactoryImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN10extensions21ValueStoreFactoryImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.extensions::ValueStoreFactoryImpl", %"class.extensions::ValueStoreFactoryImpl"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.extensions::LegacyValueStoreFactory"*, %"class.extensions::LegacyValueStoreFactory"** %3, align 8
  %5 = icmp eq %"class.extensions::LegacyValueStoreFactory"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.extensions::LegacyValueStoreFactory", %"class.extensions::LegacyValueStoreFactory"* %4, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.extensions::ValueStoreFactory"*
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %12 to void (%"class.extensions::ValueStoreFactory"*)***
  %15 = load void (%"class.extensions::ValueStoreFactory"*)**, void (%"class.extensions::ValueStoreFactory"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.extensions::ValueStoreFactory"*)*, void (%"class.extensions::ValueStoreFactory"*)** %15, i64 7
  %17 = load void (%"class.extensions::ValueStoreFactory"*)*, void (%"class.extensions::ValueStoreFactory"*)** %16, align 8
  tail call void %17(%"class.extensions::ValueStoreFactory"* nonnull %13) #5
  br label %18

18:                                               ; preds = %1, %6, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions21ValueStoreFactoryImplD0Ev(%"class.extensions::ValueStoreFactoryImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::ValueStoreFactoryImpl", %"class.extensions::ValueStoreFactoryImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN10extensions21ValueStoreFactoryImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.extensions::ValueStoreFactoryImpl", %"class.extensions::ValueStoreFactoryImpl"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.extensions::LegacyValueStoreFactory"*, %"class.extensions::LegacyValueStoreFactory"** %3, align 8
  %5 = icmp eq %"class.extensions::LegacyValueStoreFactory"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.extensions::LegacyValueStoreFactory", %"class.extensions::LegacyValueStoreFactory"* %4, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.extensions::ValueStoreFactory"*
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %12 to void (%"class.extensions::ValueStoreFactory"*)***
  %15 = load void (%"class.extensions::ValueStoreFactory"*)**, void (%"class.extensions::ValueStoreFactory"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.extensions::ValueStoreFactory"*)*, void (%"class.extensions::ValueStoreFactory"*)** %15, i64 7
  %17 = load void (%"class.extensions::ValueStoreFactory"*)*, void (%"class.extensions::ValueStoreFactory"*)** %16, align 8
  tail call void %17(%"class.extensions::ValueStoreFactory"* nonnull %13) #5
  br label %18

18:                                               ; preds = %1, %6, %11
  %19 = bitcast %"class.extensions::ValueStoreFactoryImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #4
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %class.ValueStore* @_ZN10extensions21ValueStoreFactoryImpl16CreateRulesStoreEv(%"class.extensions::ValueStoreFactoryImpl"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::ValueStoreFactoryImpl", %"class.extensions::ValueStoreFactoryImpl"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.extensions::LegacyValueStoreFactory"*, %"class.extensions::LegacyValueStoreFactory"** %2, align 8
  %4 = bitcast %"class.extensions::LegacyValueStoreFactory"* %3 to %class.ValueStore* (%"class.extensions::LegacyValueStoreFactory"*)***
  %5 = load %class.ValueStore* (%"class.extensions::LegacyValueStoreFactory"*)**, %class.ValueStore* (%"class.extensions::LegacyValueStoreFactory"*)*** %4, align 8
  %6 = load %class.ValueStore* (%"class.extensions::LegacyValueStoreFactory"*)*, %class.ValueStore* (%"class.extensions::LegacyValueStoreFactory"*)** %5, align 8
  %7 = tail call %class.ValueStore* %6(%"class.extensions::LegacyValueStoreFactory"* %3) #5
  ret %class.ValueStore* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.ValueStore* @_ZN10extensions21ValueStoreFactoryImpl16CreateStateStoreEv(%"class.extensions::ValueStoreFactoryImpl"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::ValueStoreFactoryImpl", %"class.extensions::ValueStoreFactoryImpl"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.extensions::LegacyValueStoreFactory"*, %"class.extensions::LegacyValueStoreFactory"** %2, align 8
  %4 = bitcast %"class.extensions::LegacyValueStoreFactory"* %3 to %class.ValueStore* (%"class.extensions::LegacyValueStoreFactory"*)***
  %5 = load %class.ValueStore* (%"class.extensions::LegacyValueStoreFactory"*)**, %class.ValueStore* (%"class.extensions::LegacyValueStoreFactory"*)*** %4, align 8
  %6 = getelementptr inbounds %class.ValueStore* (%"class.extensions::LegacyValueStoreFactory"*)*, %class.ValueStore* (%"class.extensions::LegacyValueStoreFactory"*)** %5, i64 1
  %7 = load %class.ValueStore* (%"class.extensions::LegacyValueStoreFactory"*)*, %class.ValueStore* (%"class.extensions::LegacyValueStoreFactory"*)** %6, align 8
  %8 = tail call %class.ValueStore* %7(%"class.extensions::LegacyValueStoreFactory"* %3) #5
  ret %class.ValueStore* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.ValueStore* @_ZN10extensions21ValueStoreFactoryImpl19CreateSettingsStoreENS_18settings_namespace9NamespaceENS_17ValueStoreFactory9ModelTypeERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.extensions::ValueStoreFactoryImpl"* nocapture readonly, i32, i32, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.extensions::ValueStoreFactoryImpl", %"class.extensions::ValueStoreFactoryImpl"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.extensions::LegacyValueStoreFactory"*, %"class.extensions::LegacyValueStoreFactory"** %5, align 8
  %7 = bitcast %"class.extensions::LegacyValueStoreFactory"* %6 to %class.ValueStore* (%"class.extensions::LegacyValueStoreFactory"*, i32, i32, %"class.std::__1::basic_string"*)***
  %8 = load %class.ValueStore* (%"class.extensions::LegacyValueStoreFactory"*, i32, i32, %"class.std::__1::basic_string"*)**, %class.ValueStore* (%"class.extensions::LegacyValueStoreFactory"*, i32, i32, %"class.std::__1::basic_string"*)*** %7, align 8
  %9 = getelementptr inbounds %class.ValueStore* (%"class.extensions::LegacyValueStoreFactory"*, i32, i32, %"class.std::__1::basic_string"*)*, %class.ValueStore* (%"class.extensions::LegacyValueStoreFactory"*, i32, i32, %"class.std::__1::basic_string"*)** %8, i64 2
  %10 = load %class.ValueStore* (%"class.extensions::LegacyValueStoreFactory"*, i32, i32, %"class.std::__1::basic_string"*)*, %class.ValueStore* (%"class.extensions::LegacyValueStoreFactory"*, i32, i32, %"class.std::__1::basic_string"*)** %9, align 8
  %11 = tail call %class.ValueStore* %10(%"class.extensions::LegacyValueStoreFactory"* %6, i32 %1, i32 %2, %"class.std::__1::basic_string"* dereferenceable(24) %3) #5
  ret %class.ValueStore* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions21ValueStoreFactoryImpl14DeleteSettingsENS_18settings_namespace9NamespaceENS_17ValueStoreFactory9ModelTypeERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.extensions::ValueStoreFactoryImpl"* nocapture readonly, i32, i32, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.extensions::ValueStoreFactoryImpl", %"class.extensions::ValueStoreFactoryImpl"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.extensions::LegacyValueStoreFactory"*, %"class.extensions::LegacyValueStoreFactory"** %5, align 8
  %7 = bitcast %"class.extensions::LegacyValueStoreFactory"* %6 to void (%"class.extensions::LegacyValueStoreFactory"*, i32, i32, %"class.std::__1::basic_string"*)***
  %8 = load void (%"class.extensions::LegacyValueStoreFactory"*, i32, i32, %"class.std::__1::basic_string"*)**, void (%"class.extensions::LegacyValueStoreFactory"*, i32, i32, %"class.std::__1::basic_string"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.extensions::LegacyValueStoreFactory"*, i32, i32, %"class.std::__1::basic_string"*)*, void (%"class.extensions::LegacyValueStoreFactory"*, i32, i32, %"class.std::__1::basic_string"*)** %8, i64 3
  %10 = load void (%"class.extensions::LegacyValueStoreFactory"*, i32, i32, %"class.std::__1::basic_string"*)*, void (%"class.extensions::LegacyValueStoreFactory"*, i32, i32, %"class.std::__1::basic_string"*)** %9, align 8
  tail call void %10(%"class.extensions::LegacyValueStoreFactory"* %6, i32 %1, i32 %2, %"class.std::__1::basic_string"* dereferenceable(24) %3) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10extensions21ValueStoreFactoryImpl11HasSettingsENS_18settings_namespace9NamespaceENS_17ValueStoreFactory9ModelTypeERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.extensions::ValueStoreFactoryImpl"* nocapture readonly, i32, i32, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.extensions::ValueStoreFactoryImpl", %"class.extensions::ValueStoreFactoryImpl"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.extensions::LegacyValueStoreFactory"*, %"class.extensions::LegacyValueStoreFactory"** %5, align 8
  %7 = bitcast %"class.extensions::LegacyValueStoreFactory"* %6 to i1 (%"class.extensions::LegacyValueStoreFactory"*, i32, i32, %"class.std::__1::basic_string"*)***
  %8 = load i1 (%"class.extensions::LegacyValueStoreFactory"*, i32, i32, %"class.std::__1::basic_string"*)**, i1 (%"class.extensions::LegacyValueStoreFactory"*, i32, i32, %"class.std::__1::basic_string"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.extensions::LegacyValueStoreFactory"*, i32, i32, %"class.std::__1::basic_string"*)*, i1 (%"class.extensions::LegacyValueStoreFactory"*, i32, i32, %"class.std::__1::basic_string"*)** %8, i64 4
  %10 = load i1 (%"class.extensions::LegacyValueStoreFactory"*, i32, i32, %"class.std::__1::basic_string"*)*, i1 (%"class.extensions::LegacyValueStoreFactory"*, i32, i32, %"class.std::__1::basic_string"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.extensions::LegacyValueStoreFactory"* %6, i32 %1, i32 %2, %"class.std::__1::basic_string"* dereferenceable(24) %3) #5
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions21ValueStoreFactoryImpl20GetKnownExtensionIDsENS_18settings_namespace9NamespaceENS_17ValueStoreFactory9ModelTypeE(%"class.std::__1::set"* noalias sret, %"class.extensions::ValueStoreFactoryImpl"* nocapture readonly, i32, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.extensions::ValueStoreFactoryImpl", %"class.extensions::ValueStoreFactoryImpl"* %1, i64 0, i32 1, i32 0
  %6 = load %"class.extensions::LegacyValueStoreFactory"*, %"class.extensions::LegacyValueStoreFactory"** %5, align 8
  %7 = bitcast %"class.extensions::LegacyValueStoreFactory"* %6 to void (%"class.std::__1::set"*, %"class.extensions::LegacyValueStoreFactory"*, i32, i32)***
  %8 = load void (%"class.std::__1::set"*, %"class.extensions::LegacyValueStoreFactory"*, i32, i32)**, void (%"class.std::__1::set"*, %"class.extensions::LegacyValueStoreFactory"*, i32, i32)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.std::__1::set"*, %"class.extensions::LegacyValueStoreFactory"*, i32, i32)*, void (%"class.std::__1::set"*, %"class.extensions::LegacyValueStoreFactory"*, i32, i32)** %8, i64 5
  %10 = load void (%"class.std::__1::set"*, %"class.extensions::LegacyValueStoreFactory"*, i32, i32)*, void (%"class.std::__1::set"*, %"class.extensions::LegacyValueStoreFactory"*, i32, i32)** %9, align 8
  tail call void %10(%"class.std::__1::set"* sret %0, %"class.extensions::LegacyValueStoreFactory"* %6, i32 %2, i32 %3) #5
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

declare void @_ZN10extensions23LegacyValueStoreFactoryC1ERKN4base8FilePathE(%"class.extensions::LegacyValueStoreFactory"*, %"class.base::FilePath"* dereferenceable(24)) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { builtin nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
