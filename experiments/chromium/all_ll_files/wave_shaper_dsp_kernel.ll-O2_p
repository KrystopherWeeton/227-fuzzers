; ModuleID = '../../third_party/blink/renderer/modules/webaudio/wave_shaper_dsp_kernel.cc'
source_filename = "../../third_party/blink/renderer/modules/webaudio/wave_shaper_dsp_kernel.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::WaveShaperDSPKernel" = type { %"class.blink::AudioDSPKernel", %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.20", double, %"class.blink::AudioArray", %"class.blink::AudioArray", %"class.blink::AudioArray", %"class.blink::AudioArray", %"class.blink::AudioArray" }
%"class.blink::AudioDSPKernel" = type { i32 (...)**, %"class.blink::AudioDSPKernelProcessor"*, float, i32 }
%"class.blink::AudioDSPKernelProcessor" = type <{ %"class.blink::AudioProcessor", %"class.WTF::Vector", %"class.WTF::Mutex", i8, [7 x i8] }>
%"class.blink::AudioProcessor" = type { i32 (...)**, i8, i32, float, i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.std::__1::unique_ptr" = type opaque
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::AudioArray"* }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.blink::UpSampler"* }
%"class.blink::UpSampler" = type { i64, %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.11", %"class.blink::AudioArray", %"class.blink::AudioArray" }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.blink::DirectConvolver"* }
%"class.blink::DirectConvolver" = type { i64, %"class.blink::AudioArray", %"class.std::__1::unique_ptr.0", %"class.blink::AudioArray" }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.blink::SimpleFFTConvolver"* }
%"class.blink::SimpleFFTConvolver" = type { i64, %"class.blink::FFTFrame", %"class.blink::FFTFrame", %"class.blink::AudioArray", %"class.blink::AudioArray", %"class.blink::AudioArray" }
%"class.blink::FFTFrame" = type { i32, i32, %"class.blink::AudioArray", %"class.blink::AudioArray", %"class.blink::AudioArray", %"class.blink::AudioArray" }
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.blink::DownSampler"* }
%"class.blink::DownSampler" = type { i64, %"class.blink::SimpleFFTConvolver", %"class.blink::AudioArray", %"class.blink::AudioArray" }
%"class.blink::AudioArray" = type <{ float*, float*, i32, [4 x i8] }>
%"class.blink::WaveShaperProcessor" = type <{ %"class.blink::AudioDSPKernelProcessor.base", [7 x i8], %"class.std::__1::unique_ptr.26", i32, [4 x i8] }>
%"class.blink::AudioDSPKernelProcessor.base" = type <{ %"class.blink::AudioProcessor", %"class.WTF::Vector", %"class.WTF::Mutex", i8 }>
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.WTF::Vector.29"* }
%"class.WTF::Vector.29" = type { %"class.WTF::VectorBuffer.30" }
%"class.WTF::VectorBuffer.30" = type { %"class.WTF::VectorBufferBase.31" }
%"class.WTF::VectorBufferBase.31" = type { float*, i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN5blink19WaveShaperDSPKernelD2Ev = comdat any

$_ZN5blink19WaveShaperDSPKernelD0Ev = comdat any

$_ZN5blink14AudioDSPKernel22ProcessOnlyAudioParamsEj = comdat any

$_ZN5blink10AudioArrayIfE8AllocateEm = comdat any

$_ZN5blink9UpSamplerD2Ev = comdat any

@_ZTVN5blink19WaveShaperDSPKernelE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::WaveShaperDSPKernel"*)* @_ZN5blink19WaveShaperDSPKernelD2Ev to i8*), i8* bitcast (void (%"class.blink::WaveShaperDSPKernel"*)* @_ZN5blink19WaveShaperDSPKernelD0Ev to i8*), i8* bitcast (void (%"class.blink::WaveShaperDSPKernel"*, float*, float*, i32)* @_ZN5blink19WaveShaperDSPKernel7ProcessEPKfPfj to i8*), i8* bitcast (void (%"class.blink::AudioDSPKernel"*, i32)* @_ZN5blink14AudioDSPKernel22ProcessOnlyAudioParamsEj to i8*), i8* bitcast (void (%"class.blink::WaveShaperDSPKernel"*)* @_ZN5blink19WaveShaperDSPKernel5ResetEv to i8*), i8* bitcast (double (%"class.blink::WaveShaperDSPKernel"*)* @_ZNK5blink19WaveShaperDSPKernel8TailTimeEv to i8*), i8* bitcast (double (%"class.blink::WaveShaperDSPKernel"*)* @_ZNK5blink19WaveShaperDSPKernel11LatencyTimeEv to i8*), i8* bitcast (i1 (%"class.blink::WaveShaperDSPKernel"*)* @_ZNK5blink19WaveShaperDSPKernel22RequiresTailProcessingEv to i8*)] }, align 8
@_ZTVN5blink14AudioDSPKernelE = external unnamed_addr constant { [10 x i8*] }, align 8
@.str = private unnamed_addr constant [54 x i8] c"n <= std::numeric_limits<unsigned>::max() / sizeof(T)\00", align 1
@.str.1 = private unnamed_addr constant [62 x i8] c"../../third_party/blink/renderer/platform/audio/audio_array.h\00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"allocation_\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10AudioArrayIfEEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::AudioArray<float>]\00", align 1

@_ZN5blink19WaveShaperDSPKernelC1EPNS_19WaveShaperProcessorE = hidden unnamed_addr alias void (%"class.blink::WaveShaperDSPKernel"*, %"class.blink::WaveShaperProcessor"*), void (%"class.blink::WaveShaperDSPKernel"*, %"class.blink::WaveShaperProcessor"*)* @_ZN5blink19WaveShaperDSPKernelC2EPNS_19WaveShaperProcessorE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19WaveShaperDSPKernelC2EPNS_19WaveShaperProcessorE(%"class.blink::WaveShaperDSPKernel"*, %"class.blink::WaveShaperProcessor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink14AudioDSPKernelE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"class.blink::AudioDSPKernelProcessor"** %4 to %"class.blink::WaveShaperProcessor"**
  store %"class.blink::WaveShaperProcessor"* %1, %"class.blink::WaveShaperProcessor"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 0, i32 2
  %7 = getelementptr inbounds %"class.blink::WaveShaperProcessor", %"class.blink::WaveShaperProcessor"* %1, i64 0, i32 0, i32 0, i32 3
  %8 = bitcast float* %7 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = bitcast float* %6 to i32*
  store i32 %9, i32* %10, align 8
  %11 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 0, i32 3
  %12 = getelementptr inbounds %"class.blink::WaveShaperProcessor", %"class.blink::WaveShaperProcessor"* %1, i64 0, i32 0, i32 0, i32 4
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %11, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink19WaveShaperDSPKernelE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %14 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 8
  %16 = shl i32 %13, 2
  %17 = zext i32 %16 to i64
  %18 = bitcast %"class.std::__1::unique_ptr.0"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 76, i1 false)
  tail call void @_ZN5blink10AudioArrayIfE8AllocateEm(%"class.blink::AudioArray"* %15, i64 %17) #12
  %19 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 9
  %20 = load i32, i32* %11, align 4
  %21 = shl i32 %20, 2
  %22 = zext i32 %21 to i64
  %23 = bitcast %"class.blink::AudioArray"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 20, i1 false) #12
  tail call void @_ZN5blink10AudioArrayIfE8AllocateEm(%"class.blink::AudioArray"* %19, i64 %22) #12
  %24 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 10
  %25 = load i32, i32* %11, align 4
  %26 = shl i32 %25, 2
  %27 = zext i32 %26 to i64
  %28 = bitcast %"class.blink::AudioArray"* %24 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 20, i1 false) #12
  tail call void @_ZN5blink10AudioArrayIfE8AllocateEm(%"class.blink::AudioArray"* %24, i64 %27) #12
  %29 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 11
  %30 = load i32, i32* %11, align 4
  %31 = shl i32 %30, 2
  %32 = zext i32 %31 to i64
  %33 = bitcast %"class.blink::AudioArray"* %29 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 20, i1 false) #12
  tail call void @_ZN5blink10AudioArrayIfE8AllocateEm(%"class.blink::AudioArray"* %29, i64 %32) #12
  %34 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 12
  %35 = load i32, i32* %11, align 4
  %36 = shl i32 %35, 2
  %37 = zext i32 %36 to i64
  %38 = bitcast %"class.blink::AudioArray"* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 20, i1 false) #12
  tail call void @_ZN5blink10AudioArrayIfE8AllocateEm(%"class.blink::AudioArray"* %34, i64 %37) #12
  %39 = getelementptr inbounds %"class.blink::WaveShaperProcessor", %"class.blink::WaveShaperProcessor"* %1, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %43, label %42

42:                                               ; preds = %2
  tail call void @_ZN5blink19WaveShaperDSPKernel26LazyInitializeOversamplingEv(%"class.blink::WaveShaperDSPKernel"* %0)
  br label %43

43:                                               ; preds = %2, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19WaveShaperDSPKernel26LazyInitializeOversamplingEv(%"class.blink::WaveShaperDSPKernel"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %3, align 8
  %5 = icmp eq %"class.blink::AudioArray"* %4, null
  br i1 %5, label %6, label %126

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = shl i32 %8, 1
  %10 = tail call noalias i8* @malloc(i64 24) #12
  %11 = bitcast i8* %10 to %"class.blink::AudioArray"*
  %12 = zext i32 %9 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 20, i1 false) #12
  tail call void @_ZN5blink10AudioArrayIfE8AllocateEm(%"class.blink::AudioArray"* %11, i64 %12) #12
  %13 = ptrtoint i8* %10 to i64
  %14 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %3, align 8
  %15 = bitcast %"class.std::__1::unique_ptr.0"* %2 to i64*
  store i64 %13, i64* %15, align 8
  %16 = icmp eq %"class.blink::AudioArray"* %14, null
  br i1 %16, label %21, label %17

17:                                               ; preds = %6
  %18 = bitcast %"class.blink::AudioArray"* %14 to i8**
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %19) #12
  %20 = bitcast %"class.blink::AudioArray"* %14 to i8*
  tail call void @free(i8* %20) #12
  br label %21

21:                                               ; preds = %17, %6
  %22 = load i32, i32* %7, align 4
  %23 = shl i32 %22, 2
  %24 = tail call noalias i8* @malloc(i64 24) #12
  %25 = bitcast i8* %24 to %"class.blink::AudioArray"*
  %26 = zext i32 %23 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 20, i1 false) #12
  tail call void @_ZN5blink10AudioArrayIfE8AllocateEm(%"class.blink::AudioArray"* %25, i64 %26) #12
  %27 = ptrtoint i8* %24 to i64
  %28 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 2
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %29, align 8
  %31 = bitcast %"class.std::__1::unique_ptr.0"* %28 to i64*
  store i64 %27, i64* %31, align 8
  %32 = icmp eq %"class.blink::AudioArray"* %30, null
  br i1 %32, label %37, label %33

33:                                               ; preds = %21
  %34 = bitcast %"class.blink::AudioArray"* %30 to i8**
  %35 = load i8*, i8** %34, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %35) #12
  %36 = bitcast %"class.blink::AudioArray"* %30 to i8*
  tail call void @free(i8* %36) #12
  br label %37

37:                                               ; preds = %33, %21
  %38 = load i32, i32* %7, align 4
  %39 = tail call noalias i8* @malloc(i64 72) #12
  %40 = bitcast i8* %39 to %"class.blink::UpSampler"*
  %41 = zext i32 %38 to i64
  tail call void @_ZN5blink9UpSamplerC1Em(%"class.blink::UpSampler"* %40, i64 %41) #12
  %42 = ptrtoint i8* %39 to i64
  %43 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 3
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.blink::UpSampler"*, %"class.blink::UpSampler"** %44, align 8
  %46 = bitcast %"class.std::__1::unique_ptr.2"* %43 to i64*
  store i64 %42, i64* %46, align 8
  %47 = icmp eq %"class.blink::UpSampler"* %45, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %37
  tail call void @_ZN5blink9UpSamplerD2Ev(%"class.blink::UpSampler"* nonnull %45) #12
  %49 = bitcast %"class.blink::UpSampler"* %45 to i8*
  tail call void @free(i8* %49) #12
  br label %50

50:                                               ; preds = %48, %37
  %51 = load i32, i32* %7, align 4
  %52 = shl i32 %51, 1
  %53 = tail call noalias i8* @malloc(i64 344) #12
  %54 = bitcast i8* %53 to %"class.blink::DownSampler"*
  %55 = zext i32 %52 to i64
  tail call void @_ZN5blink11DownSamplerC1Em(%"class.blink::DownSampler"* %54, i64 %55) #12
  %56 = ptrtoint i8* %53 to i64
  %57 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 4
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.blink::DownSampler"*, %"class.blink::DownSampler"** %58, align 8
  %60 = bitcast %"class.std::__1::unique_ptr.20"* %57 to i64*
  store i64 %56, i64* %60, align 8
  %61 = icmp eq %"class.blink::DownSampler"* %59, null
  br i1 %61, label %81, label %62

62:                                               ; preds = %50
  %63 = getelementptr inbounds %"class.blink::DownSampler", %"class.blink::DownSampler"* %59, i64 0, i32 3
  %64 = bitcast %"class.blink::AudioArray"* %63 to i8**
  %65 = load i8*, i8** %64, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %65) #12
  %66 = getelementptr inbounds %"class.blink::DownSampler", %"class.blink::DownSampler"* %59, i64 0, i32 2
  %67 = bitcast %"class.blink::AudioArray"* %66 to i8**
  %68 = load i8*, i8** %67, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %68) #12
  %69 = getelementptr inbounds %"class.blink::DownSampler", %"class.blink::DownSampler"* %59, i64 0, i32 1, i32 5
  %70 = bitcast %"class.blink::AudioArray"* %69 to i8**
  %71 = load i8*, i8** %70, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %71) #12
  %72 = getelementptr inbounds %"class.blink::DownSampler", %"class.blink::DownSampler"* %59, i64 0, i32 1, i32 4
  %73 = bitcast %"class.blink::AudioArray"* %72 to i8**
  %74 = load i8*, i8** %73, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %74) #12
  %75 = getelementptr inbounds %"class.blink::DownSampler", %"class.blink::DownSampler"* %59, i64 0, i32 1, i32 3
  %76 = bitcast %"class.blink::AudioArray"* %75 to i8**
  %77 = load i8*, i8** %76, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %77) #12
  %78 = getelementptr inbounds %"class.blink::DownSampler", %"class.blink::DownSampler"* %59, i64 0, i32 1, i32 2
  tail call void @_ZN5blink8FFTFrameD1Ev(%"class.blink::FFTFrame"* %78) #12
  %79 = getelementptr inbounds %"class.blink::DownSampler", %"class.blink::DownSampler"* %59, i64 0, i32 1, i32 1
  tail call void @_ZN5blink8FFTFrameD1Ev(%"class.blink::FFTFrame"* %79) #12
  %80 = bitcast %"class.blink::DownSampler"* %59 to i8*
  tail call void @free(i8* %80) #12
  br label %81

81:                                               ; preds = %62, %50
  %82 = load i32, i32* %7, align 4
  %83 = shl i32 %82, 1
  %84 = tail call noalias i8* @malloc(i64 72) #12
  %85 = bitcast i8* %84 to %"class.blink::UpSampler"*
  %86 = zext i32 %83 to i64
  tail call void @_ZN5blink9UpSamplerC1Em(%"class.blink::UpSampler"* %85, i64 %86) #12
  %87 = ptrtoint i8* %84 to i64
  %88 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 5
  %89 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %88, i64 0, i32 0, i32 0, i32 0
  %90 = load %"class.blink::UpSampler"*, %"class.blink::UpSampler"** %89, align 8
  %91 = bitcast %"class.std::__1::unique_ptr.2"* %88 to i64*
  store i64 %87, i64* %91, align 8
  %92 = icmp eq %"class.blink::UpSampler"* %90, null
  br i1 %92, label %95, label %93

93:                                               ; preds = %81
  tail call void @_ZN5blink9UpSamplerD2Ev(%"class.blink::UpSampler"* nonnull %90) #12
  %94 = bitcast %"class.blink::UpSampler"* %90 to i8*
  tail call void @free(i8* %94) #12
  br label %95

95:                                               ; preds = %93, %81
  %96 = load i32, i32* %7, align 4
  %97 = shl i32 %96, 2
  %98 = tail call noalias i8* @malloc(i64 344) #12
  %99 = bitcast i8* %98 to %"class.blink::DownSampler"*
  %100 = zext i32 %97 to i64
  tail call void @_ZN5blink11DownSamplerC1Em(%"class.blink::DownSampler"* %99, i64 %100) #12
  %101 = ptrtoint i8* %98 to i64
  %102 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 6
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %102, i64 0, i32 0, i32 0, i32 0
  %104 = load %"class.blink::DownSampler"*, %"class.blink::DownSampler"** %103, align 8
  %105 = bitcast %"class.std::__1::unique_ptr.20"* %102 to i64*
  store i64 %101, i64* %105, align 8
  %106 = icmp eq %"class.blink::DownSampler"* %104, null
  br i1 %106, label %126, label %107

107:                                              ; preds = %95
  %108 = getelementptr inbounds %"class.blink::DownSampler", %"class.blink::DownSampler"* %104, i64 0, i32 3
  %109 = bitcast %"class.blink::AudioArray"* %108 to i8**
  %110 = load i8*, i8** %109, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %110) #12
  %111 = getelementptr inbounds %"class.blink::DownSampler", %"class.blink::DownSampler"* %104, i64 0, i32 2
  %112 = bitcast %"class.blink::AudioArray"* %111 to i8**
  %113 = load i8*, i8** %112, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %113) #12
  %114 = getelementptr inbounds %"class.blink::DownSampler", %"class.blink::DownSampler"* %104, i64 0, i32 1, i32 5
  %115 = bitcast %"class.blink::AudioArray"* %114 to i8**
  %116 = load i8*, i8** %115, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %116) #12
  %117 = getelementptr inbounds %"class.blink::DownSampler", %"class.blink::DownSampler"* %104, i64 0, i32 1, i32 4
  %118 = bitcast %"class.blink::AudioArray"* %117 to i8**
  %119 = load i8*, i8** %118, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %119) #12
  %120 = getelementptr inbounds %"class.blink::DownSampler", %"class.blink::DownSampler"* %104, i64 0, i32 1, i32 3
  %121 = bitcast %"class.blink::AudioArray"* %120 to i8**
  %122 = load i8*, i8** %121, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %122) #12
  %123 = getelementptr inbounds %"class.blink::DownSampler", %"class.blink::DownSampler"* %104, i64 0, i32 1, i32 2
  tail call void @_ZN5blink8FFTFrameD1Ev(%"class.blink::FFTFrame"* %123) #12
  %124 = getelementptr inbounds %"class.blink::DownSampler", %"class.blink::DownSampler"* %104, i64 0, i32 1, i32 1
  tail call void @_ZN5blink8FFTFrameD1Ev(%"class.blink::FFTFrame"* %124) #12
  %125 = bitcast %"class.blink::DownSampler"* %104 to i8*
  tail call void @free(i8* %125) #12
  br label %126

126:                                              ; preds = %1, %95, %107
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19WaveShaperDSPKernel7ProcessEPKfPfj(%"class.blink::WaveShaperDSPKernel"* nocapture readonly, float*, float*, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 0, i32 1
  %6 = bitcast %"class.blink::AudioDSPKernelProcessor"** %5 to %"class.blink::WaveShaperProcessor"**
  %7 = load %"class.blink::WaveShaperProcessor"*, %"class.blink::WaveShaperProcessor"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::WaveShaperProcessor", %"class.blink::WaveShaperProcessor"* %7, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  switch i32 %9, label %60 [
    i32 0, label %10
    i32 1, label %33
    i32 2, label %59
  ]

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.blink::WaveShaperProcessor", %"class.blink::WaveShaperProcessor"* %7, i64 0, i32 2, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::Vector.29"*, %"class.WTF::Vector.29"** %11, align 8
  %13 = icmp eq %"class.WTF::Vector.29"* %12, null
  br i1 %13, label %14, label %19

14:                                               ; preds = %10
  %15 = bitcast float* %2 to i8*
  %16 = bitcast float* %1 to i8*
  %17 = zext i32 %3 to i64
  %18 = shl nuw nsw i64 %17, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %15, i8* align 4 %16, i64 %18, i1 false) #12
  br label %60

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"class.WTF::Vector.29", %"class.WTF::Vector.29"* %12, i64 0, i32 0, i32 0, i32 0
  %21 = load float*, float** %20, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.29", %"class.WTF::Vector.29"* %12, i64 0, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp ne float* %21, null
  %25 = icmp ne i32 %23, 0
  %26 = and i1 %24, %25
  br i1 %26, label %32, label %27

27:                                               ; preds = %19
  %28 = bitcast float* %2 to i8*
  %29 = bitcast float* %1 to i8*
  %30 = zext i32 %3 to i64
  %31 = shl nuw nsw i64 %30, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %28, i8* align 4 %29, i64 %31, i1 false) #12
  br label %60

32:                                               ; preds = %19
  tail call void @_ZNK5blink19WaveShaperDSPKernel21WaveShaperCurveValuesEPfPKfjS3_i(%"class.blink::WaveShaperDSPKernel"* %0, float* %2, float* %1, i32 %3, float* nonnull %21, i32 %23) #12
  br label %60

33:                                               ; preds = %4
  %34 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %35 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %35, i64 0, i32 1
  %37 = load float*, float** %36, align 8
  %38 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %39 = load %"class.blink::UpSampler"*, %"class.blink::UpSampler"** %38, align 8
  %40 = zext i32 %3 to i64
  tail call void @_ZN5blink9UpSampler7ProcessEPKfPfm(%"class.blink::UpSampler"* %39, float* %1, float* %37, i64 %40) #12
  %41 = shl i32 %3, 1
  %42 = load %"class.blink::WaveShaperProcessor"*, %"class.blink::WaveShaperProcessor"** %6, align 8
  %43 = getelementptr inbounds %"class.blink::WaveShaperProcessor", %"class.blink::WaveShaperProcessor"* %42, i64 0, i32 2, i32 0, i32 0, i32 0
  %44 = load %"class.WTF::Vector.29"*, %"class.WTF::Vector.29"** %43, align 8
  %45 = icmp eq %"class.WTF::Vector.29"* %44, null
  br i1 %45, label %55, label %46

46:                                               ; preds = %33
  %47 = getelementptr inbounds %"class.WTF::Vector.29", %"class.WTF::Vector.29"* %44, i64 0, i32 0, i32 0, i32 0
  %48 = load float*, float** %47, align 8
  %49 = getelementptr inbounds %"class.WTF::Vector.29", %"class.WTF::Vector.29"* %44, i64 0, i32 0, i32 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = icmp ne float* %48, null
  %52 = icmp ne i32 %50, 0
  %53 = and i1 %51, %52
  br i1 %53, label %54, label %55

54:                                               ; preds = %46
  tail call void @_ZNK5blink19WaveShaperDSPKernel21WaveShaperCurveValuesEPfPKfjS3_i(%"class.blink::WaveShaperDSPKernel"* %0, float* %37, float* %37, i32 %41, float* nonnull %48, i32 %50) #12
  br label %55

55:                                               ; preds = %33, %46, %54
  %56 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %57 = load %"class.blink::DownSampler"*, %"class.blink::DownSampler"** %56, align 8
  %58 = zext i32 %41 to i64
  tail call void @_ZN5blink11DownSampler7ProcessEPKfPfm(%"class.blink::DownSampler"* %57, float* %37, float* %2, i64 %58) #12
  br label %60

59:                                               ; preds = %4
  tail call void @_ZN5blink19WaveShaperDSPKernel14ProcessCurve4xEPKfPfj(%"class.blink::WaveShaperDSPKernel"* %0, float* %1, float* %2, i32 %3)
  br label %60

60:                                               ; preds = %32, %27, %14, %4, %59, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19WaveShaperDSPKernel12ProcessCurveEPKfPfj(%"class.blink::WaveShaperDSPKernel"* nocapture readonly, float*, float*, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 0, i32 1
  %6 = bitcast %"class.blink::AudioDSPKernelProcessor"** %5 to %"class.blink::WaveShaperProcessor"**
  %7 = load %"class.blink::WaveShaperProcessor"*, %"class.blink::WaveShaperProcessor"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::WaveShaperProcessor", %"class.blink::WaveShaperProcessor"* %7, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::Vector.29"*, %"class.WTF::Vector.29"** %8, align 8
  %10 = icmp eq %"class.WTF::Vector.29"* %9, null
  br i1 %10, label %11, label %16

11:                                               ; preds = %4
  %12 = bitcast float* %2 to i8*
  %13 = bitcast float* %1 to i8*
  %14 = zext i32 %3 to i64
  %15 = shl nuw nsw i64 %14, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 %13, i64 %15, i1 false)
  br label %30

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.29", %"class.WTF::Vector.29"* %9, i64 0, i32 0, i32 0, i32 0
  %18 = load float*, float** %17, align 8
  %19 = getelementptr inbounds %"class.WTF::Vector.29", %"class.WTF::Vector.29"* %9, i64 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp ne float* %18, null
  %22 = icmp ne i32 %20, 0
  %23 = and i1 %21, %22
  br i1 %23, label %29, label %24

24:                                               ; preds = %16
  %25 = bitcast float* %2 to i8*
  %26 = bitcast float* %1 to i8*
  %27 = zext i32 %3 to i64
  %28 = shl nuw nsw i64 %27, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %25, i8* align 4 %26, i64 %28, i1 false)
  br label %30

29:                                               ; preds = %16
  tail call void @_ZNK5blink19WaveShaperDSPKernel21WaveShaperCurveValuesEPfPKfjS3_i(%"class.blink::WaveShaperDSPKernel"* %0, float* %2, float* %1, i32 %3, float* nonnull %18, i32 %20)
  br label %30

30:                                               ; preds = %24, %29, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19WaveShaperDSPKernel14ProcessCurve2xEPKfPfj(%"class.blink::WaveShaperDSPKernel"* nocapture readonly, float*, float*, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %6, i64 0, i32 1
  %8 = load float*, float** %7, align 8
  %9 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %10 = load %"class.blink::UpSampler"*, %"class.blink::UpSampler"** %9, align 8
  %11 = zext i32 %3 to i64
  tail call void @_ZN5blink9UpSampler7ProcessEPKfPfm(%"class.blink::UpSampler"* %10, float* %1, float* %8, i64 %11) #12
  %12 = shl i32 %3, 1
  %13 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.blink::AudioDSPKernelProcessor"** %13 to %"class.blink::WaveShaperProcessor"**
  %15 = load %"class.blink::WaveShaperProcessor"*, %"class.blink::WaveShaperProcessor"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::WaveShaperProcessor", %"class.blink::WaveShaperProcessor"* %15, i64 0, i32 2, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::Vector.29"*, %"class.WTF::Vector.29"** %16, align 8
  %18 = icmp eq %"class.WTF::Vector.29"* %17, null
  br i1 %18, label %28, label %19

19:                                               ; preds = %4
  %20 = getelementptr inbounds %"class.WTF::Vector.29", %"class.WTF::Vector.29"* %17, i64 0, i32 0, i32 0, i32 0
  %21 = load float*, float** %20, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.29", %"class.WTF::Vector.29"* %17, i64 0, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp ne float* %21, null
  %25 = icmp ne i32 %23, 0
  %26 = and i1 %24, %25
  br i1 %26, label %27, label %28

27:                                               ; preds = %19
  tail call void @_ZNK5blink19WaveShaperDSPKernel21WaveShaperCurveValuesEPfPKfjS3_i(%"class.blink::WaveShaperDSPKernel"* %0, float* %8, float* %8, i32 %12, float* nonnull %21, i32 %23) #12
  br label %28

28:                                               ; preds = %19, %4, %27
  %29 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %30 = load %"class.blink::DownSampler"*, %"class.blink::DownSampler"** %29, align 8
  %31 = zext i32 %12 to i64
  tail call void @_ZN5blink11DownSampler7ProcessEPKfPfm(%"class.blink::DownSampler"* %30, float* %8, float* %2, i64 %31) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19WaveShaperDSPKernel14ProcessCurve4xEPKfPfj(%"class.blink::WaveShaperDSPKernel"* nocapture readonly, float*, float*, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %6, i64 0, i32 1
  %8 = load float*, float** %7, align 8
  %9 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %10 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %10, i64 0, i32 1
  %12 = load float*, float** %11, align 8
  %13 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %14 = load %"class.blink::UpSampler"*, %"class.blink::UpSampler"** %13, align 8
  %15 = zext i32 %3 to i64
  tail call void @_ZN5blink9UpSampler7ProcessEPKfPfm(%"class.blink::UpSampler"* %14, float* %1, float* %8, i64 %15) #12
  %16 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %17 = load %"class.blink::UpSampler"*, %"class.blink::UpSampler"** %16, align 8
  %18 = shl i32 %3, 1
  %19 = zext i32 %18 to i64
  tail call void @_ZN5blink9UpSampler7ProcessEPKfPfm(%"class.blink::UpSampler"* %17, float* %8, float* %12, i64 %19) #12
  %20 = shl i32 %3, 2
  %21 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 0, i32 1
  %22 = bitcast %"class.blink::AudioDSPKernelProcessor"** %21 to %"class.blink::WaveShaperProcessor"**
  %23 = load %"class.blink::WaveShaperProcessor"*, %"class.blink::WaveShaperProcessor"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::WaveShaperProcessor", %"class.blink::WaveShaperProcessor"* %23, i64 0, i32 2, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::Vector.29"*, %"class.WTF::Vector.29"** %24, align 8
  %26 = icmp eq %"class.WTF::Vector.29"* %25, null
  br i1 %26, label %36, label %27

27:                                               ; preds = %4
  %28 = getelementptr inbounds %"class.WTF::Vector.29", %"class.WTF::Vector.29"* %25, i64 0, i32 0, i32 0, i32 0
  %29 = load float*, float** %28, align 8
  %30 = getelementptr inbounds %"class.WTF::Vector.29", %"class.WTF::Vector.29"* %25, i64 0, i32 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = icmp ne float* %29, null
  %33 = icmp ne i32 %31, 0
  %34 = and i1 %32, %33
  br i1 %34, label %35, label %36

35:                                               ; preds = %27
  tail call void @_ZNK5blink19WaveShaperDSPKernel21WaveShaperCurveValuesEPfPKfjS3_i(%"class.blink::WaveShaperDSPKernel"* %0, float* %12, float* %12, i32 %20, float* nonnull %29, i32 %31) #12
  br label %36

36:                                               ; preds = %27, %4, %35
  %37 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %38 = load %"class.blink::DownSampler"*, %"class.blink::DownSampler"** %37, align 8
  %39 = zext i32 %20 to i64
  tail call void @_ZN5blink11DownSampler7ProcessEPKfPfm(%"class.blink::DownSampler"* %38, float* %12, float* %8, i64 %39) #12
  %40 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %41 = load %"class.blink::DownSampler"*, %"class.blink::DownSampler"** %40, align 8
  tail call void @_ZN5blink11DownSampler7ProcessEPKfPfm(%"class.blink::DownSampler"* %41, float* %8, float* %2, i64 %19) #12
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden double @_ZNK5blink19WaveShaperDSPKernel20WaveShaperCurveValueEfPKfi(%"class.blink::WaveShaperDSPKernel"* nocapture readnone, float, float* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %5 = fadd float %1, 1.000000e+00
  %6 = fpext float %5 to double
  %7 = fmul double %6, 5.000000e-01
  %8 = add nsw i32 %3, -1
  %9 = sitofp i32 %8 to double
  %10 = fmul double %7, %9
  %11 = fcmp olt double %10, 0.000000e+00
  br i1 %11, label %12, label %15

12:                                               ; preds = %4
  %13 = load float, float* %2, align 4
  %14 = fpext float %13 to double
  br label %39

15:                                               ; preds = %4
  %16 = fcmp ult double %10, %9
  br i1 %16, label %22, label %17

17:                                               ; preds = %15
  %18 = sext i32 %8 to i64
  %19 = getelementptr inbounds float, float* %2, i64 %18
  %20 = load float, float* %19, align 4
  %21 = fpext float %20 to double
  br label %39

22:                                               ; preds = %15
  %23 = fptoui double %10 to i32
  %24 = add i32 %23, 1
  %25 = uitofp i32 %23 to double
  %26 = fsub double %10, %25
  %27 = zext i32 %23 to i64
  %28 = getelementptr inbounds float, float* %2, i64 %27
  %29 = load float, float* %28, align 4
  %30 = fpext float %29 to double
  %31 = zext i32 %24 to i64
  %32 = getelementptr inbounds float, float* %2, i64 %31
  %33 = load float, float* %32, align 4
  %34 = fpext float %33 to double
  %35 = fsub double 1.000000e+00, %26
  %36 = fmul double %35, %30
  %37 = fmul double %26, %34
  %38 = fadd double %36, %37
  br label %39

39:                                               ; preds = %17, %22, %12
  %40 = phi double [ %14, %12 ], [ %21, %17 ], [ %38, %22 ]
  ret double %40
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink19WaveShaperDSPKernel21WaveShaperCurveValuesEPfPKfjS3_i(%"class.blink::WaveShaperDSPKernel"* nocapture readonly, float*, float*, i32, float* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %7 = alloca <2 x i64>, align 16
  %8 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 8, i32 1
  %9 = load float*, float** %8, align 8
  tail call void @_ZN5blink11vector_math5VsaddEPKfifPfij(float* %2, i32 1, float 1.000000e+00, float* %9, i32 1, i32 %3) #12
  %10 = add nsw i32 %5, -1
  %11 = sitofp i32 %10 to double
  %12 = fmul double %11, 5.000000e-01
  %13 = fptrunc double %12 to float
  tail call void @_ZN5blink11vector_math5VsmulEPKfifPfij(float* %9, i32 1, float %13, float* %9, i32 1, i32 %3) #12
  %14 = sitofp i32 %10 to float
  tail call void @_ZN5blink11vector_math5VclipEPKfiffPfij(float* %9, i32 1, float 0.000000e+00, float %14, float* %9, i32 1, i32 %3) #12
  %15 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 9, i32 1
  %16 = load float*, float** %15, align 8
  %17 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 10, i32 1
  %18 = load float*, float** %17, align 8
  %19 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 11, i32 1
  %20 = load float*, float** %19, align 8
  %21 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 12, i32 1
  %22 = load float*, float** %21, align 8
  %23 = lshr i32 %3, 2
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %36, label %25

25:                                               ; preds = %6
  %26 = bitcast <2 x i64>* %7 to i8*
  %27 = bitcast <2 x i64>* %7 to <4 x i32>*
  %28 = getelementptr inbounds i8, i8* %26, i64 12
  %29 = bitcast i8* %28 to i32*
  %30 = insertelement <4 x i32> undef, i32 %10, i32 0
  %31 = shufflevector <4 x i32> %30, <4 x i32> undef, <4 x i32> zeroinitializer
  %32 = insertelement <4 x i32> undef, i32 %10, i32 0
  %33 = shufflevector <4 x i32> %32, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %42

34:                                               ; preds = %42
  %35 = trunc i64 %134 to i32
  br label %36

36:                                               ; preds = %34, %6
  %37 = phi i32 [ 0, %6 ], [ %35, %34 ]
  %38 = icmp ult i32 %37, %3
  br i1 %38, label %39, label %164

39:                                               ; preds = %36
  %40 = zext i32 %37 to i64
  %41 = zext i32 %3 to i64
  br label %136

42:                                               ; preds = %42, %25
  %43 = phi i64 [ 0, %25 ], [ %134, %42 ]
  %44 = phi i32 [ 0, %25 ], [ %133, %42 ]
  %45 = getelementptr inbounds float, float* %9, i64 %43
  %46 = bitcast float* %45 to <4 x float>*
  %47 = load <4 x float>, <4 x float>* %46, align 1
  %48 = tail call <4 x i32> @llvm.x86.sse2.cvttps2dq(<4 x float> %47) #12
  %49 = sitofp <4 x i32> %48 to <4 x float>
  %50 = getelementptr inbounds float, float* %16, i64 %43
  %51 = bitcast float* %50 to <4 x float>*
  store <4 x float> %49, <4 x float>* %51, align 1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26)
  %52 = add <4 x i32> %48, <i32 1, i32 1, i32 1, i32 1>
  store <4 x i32> %52, <4 x i32>* %27, align 16
  %53 = shufflevector <4 x i32> %48, <4 x i32> %52, <4 x i32> <i32 0, i32 4, i32 1, i32 5>
  %54 = icmp sgt <4 x i32> %31, %53
  %55 = icmp sgt <4 x i32> %53, zeroinitializer
  %56 = select <4 x i1> %55, <4 x i32> %53, <4 x i32> zeroinitializer
  %57 = select <4 x i1> %54, <4 x i32> %56, <4 x i32> %33
  %58 = extractelement <4 x i32> %57, i32 0
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds float, float* %4, i64 %59
  %61 = bitcast float* %60 to i32*
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds float, float* %18, i64 %43
  %64 = bitcast float* %63 to i32*
  store i32 %62, i32* %64, align 4
  %65 = extractelement <4 x i32> %57, i32 1
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds float, float* %4, i64 %66
  %68 = bitcast float* %67 to i32*
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds float, float* %20, i64 %43
  %71 = bitcast float* %70 to i32*
  store i32 %69, i32* %71, align 4
  %72 = extractelement <4 x i32> %57, i32 2
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds float, float* %4, i64 %73
  %75 = bitcast float* %74 to i32*
  %76 = load i32, i32* %75, align 4
  %77 = or i64 %43, 1
  %78 = getelementptr inbounds float, float* %18, i64 %77
  %79 = bitcast float* %78 to i32*
  store i32 %76, i32* %79, align 4
  %80 = extractelement <4 x i32> %57, i32 3
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds float, float* %4, i64 %81
  %83 = bitcast float* %82 to i32*
  %84 = load i32, i32* %83, align 4
  %85 = getelementptr inbounds float, float* %20, i64 %77
  %86 = bitcast float* %85 to i32*
  store i32 %84, i32* %86, align 4
  %87 = extractelement <4 x i32> %48, i32 2
  %88 = icmp slt i32 %87, %10
  %89 = icmp sgt i32 %87, 0
  %90 = select i1 %89, i32 %87, i32 0
  %91 = select i1 %88, i32 %90, i32 %10
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds float, float* %4, i64 %92
  %94 = bitcast float* %93 to i32*
  %95 = load i32, i32* %94, align 4
  %96 = or i64 %43, 2
  %97 = getelementptr inbounds float, float* %18, i64 %96
  %98 = bitcast float* %97 to i32*
  store i32 %95, i32* %98, align 4
  %99 = extractelement <4 x i32> %52, i32 2
  %100 = icmp slt i32 %99, %10
  %101 = icmp sgt i32 %99, 0
  %102 = select i1 %101, i32 %99, i32 0
  %103 = select i1 %100, i32 %102, i32 %10
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds float, float* %4, i64 %104
  %106 = bitcast float* %105 to i32*
  %107 = load i32, i32* %106, align 4
  %108 = getelementptr inbounds float, float* %20, i64 %96
  %109 = bitcast float* %108 to i32*
  store i32 %107, i32* %109, align 4
  %110 = extractelement <4 x i32> %48, i32 3
  %111 = icmp slt i32 %110, %10
  %112 = icmp sgt i32 %110, 0
  %113 = select i1 %112, i32 %110, i32 0
  %114 = select i1 %111, i32 %113, i32 %10
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds float, float* %4, i64 %115
  %117 = bitcast float* %116 to i32*
  %118 = load i32, i32* %117, align 4
  %119 = or i64 %43, 3
  %120 = getelementptr inbounds float, float* %18, i64 %119
  %121 = bitcast float* %120 to i32*
  store i32 %118, i32* %121, align 4
  %122 = load i32, i32* %29, align 4
  %123 = icmp slt i32 %122, %10
  %124 = icmp sgt i32 %122, 0
  %125 = select i1 %124, i32 %122, i32 0
  %126 = select i1 %123, i32 %125, i32 %10
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds float, float* %4, i64 %127
  %129 = bitcast float* %128 to i32*
  %130 = load i32, i32* %129, align 4
  %131 = getelementptr inbounds float, float* %20, i64 %119
  %132 = bitcast float* %131 to i32*
  store i32 %130, i32* %132, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26)
  %133 = add nuw nsw i32 %44, 1
  %134 = add nuw nsw i64 %43, 4
  %135 = icmp eq i32 %133, %23
  br i1 %135, label %34, label %42

136:                                              ; preds = %136, %39
  %137 = phi i64 [ %40, %39 ], [ %162, %136 ]
  %138 = getelementptr inbounds float, float* %9, i64 %137
  %139 = load float, float* %138, align 4
  %140 = fptoui float %139 to i32
  %141 = uitofp i32 %140 to double
  %142 = fcmp ult double %141, %11
  %143 = select i1 %142, i32 %140, i32 %10
  %144 = add i32 %143, 1
  %145 = uitofp i32 %144 to double
  %146 = fcmp ult double %145, %11
  %147 = select i1 %146, i32 %144, i32 %10
  %148 = uitofp i32 %143 to float
  %149 = getelementptr inbounds float, float* %16, i64 %137
  store float %148, float* %149, align 4
  %150 = zext i32 %143 to i64
  %151 = getelementptr inbounds float, float* %4, i64 %150
  %152 = bitcast float* %151 to i32*
  %153 = load i32, i32* %152, align 4
  %154 = getelementptr inbounds float, float* %18, i64 %137
  %155 = bitcast float* %154 to i32*
  store i32 %153, i32* %155, align 4
  %156 = zext i32 %147 to i64
  %157 = getelementptr inbounds float, float* %4, i64 %156
  %158 = bitcast float* %157 to i32*
  %159 = load i32, i32* %158, align 4
  %160 = getelementptr inbounds float, float* %20, i64 %137
  %161 = bitcast float* %160 to i32*
  store i32 %159, i32* %161, align 4
  %162 = add nuw nsw i64 %137, 1
  %163 = icmp eq i64 %162, %41
  br i1 %163, label %164, label %136

164:                                              ; preds = %136, %36
  tail call void @_ZN5blink11vector_math4VsubEPKfiS2_iPfij(float* %9, i32 1, float* %16, i32 1, float* %22, i32 1, i32 %3) #12
  tail call void @_ZN5blink11vector_math4VsubEPKfiS2_iPfij(float* %20, i32 1, float* %18, i32 1, float* %20, i32 1, i32 %3) #12
  tail call void @_ZN5blink11vector_math4VmulEPKfiS2_iPfij(float* %22, i32 1, float* %20, i32 1, float* %20, i32 1, i32 %3) #12
  tail call void @_ZN5blink11vector_math4VaddEPKfiS2_iPfij(float* %20, i32 1, float* %18, i32 1, float* %1, i32 1, i32 %3) #12
  ret void
}

declare void @_ZN5blink11vector_math5VsaddEPKfifPfij(float*, i32, float, float*, i32, i32) local_unnamed_addr #4

declare void @_ZN5blink11vector_math5VsmulEPKfifPfij(float*, i32, float, float*, i32, i32) local_unnamed_addr #4

declare void @_ZN5blink11vector_math5VclipEPKfiffPfij(float*, i32, float, float, float*, i32, i32) local_unnamed_addr #4

declare void @_ZN5blink11vector_math4VsubEPKfiS2_iPfij(float*, i32, float*, i32, float*, i32, i32) local_unnamed_addr #4

declare void @_ZN5blink11vector_math4VmulEPKfiS2_iPfij(float*, i32, float*, i32, float*, i32, i32) local_unnamed_addr #4

declare void @_ZN5blink11vector_math4VaddEPKfiS2_iPfij(float*, i32, float*, i32, float*, i32, i32) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN5blink9UpSampler7ProcessEPKfPfm(%"class.blink::UpSampler"*, float*, float*, i64) local_unnamed_addr #4

declare void @_ZN5blink11DownSampler7ProcessEPKfPfm(%"class.blink::DownSampler"*, float*, float*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19WaveShaperDSPKernel5ResetEv(%"class.blink::WaveShaperDSPKernel"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.blink::UpSampler"*, %"class.blink::UpSampler"** %2, align 8
  %4 = icmp eq %"class.blink::UpSampler"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  tail call void @_ZN5blink9UpSampler5ResetEv(%"class.blink::UpSampler"* nonnull %3) #12
  %6 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %7 = load %"class.blink::DownSampler"*, %"class.blink::DownSampler"** %6, align 8
  tail call void @_ZN5blink11DownSampler5ResetEv(%"class.blink::DownSampler"* %7) #12
  %8 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %9 = load %"class.blink::UpSampler"*, %"class.blink::UpSampler"** %8, align 8
  tail call void @_ZN5blink9UpSampler5ResetEv(%"class.blink::UpSampler"* %9) #12
  %10 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %11 = load %"class.blink::DownSampler"*, %"class.blink::DownSampler"** %10, align 8
  tail call void @_ZN5blink11DownSampler5ResetEv(%"class.blink::DownSampler"* %11) #12
  br label %12

12:                                               ; preds = %1, %5
  ret void
}

declare void @_ZN5blink9UpSampler5ResetEv(%"class.blink::UpSampler"*) local_unnamed_addr #4

declare void @_ZN5blink11DownSampler5ResetEv(%"class.blink::DownSampler"*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink19WaveShaperDSPKernel22RequiresTailProcessingEv(%"class.blink::WaveShaperDSPKernel"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden double @_ZNK5blink19WaveShaperDSPKernel8TailTimeEv(%"class.blink::WaveShaperDSPKernel"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 7
  %3 = load double, double* %2, align 8
  ret double %3
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink19WaveShaperDSPKernel11LatencyTimeEv(%"class.blink::WaveShaperDSPKernel"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 0, i32 1
  %3 = bitcast %"class.blink::AudioDSPKernelProcessor"** %2 to %"class.blink::WaveShaperProcessor"**
  %4 = load %"class.blink::WaveShaperProcessor"*, %"class.blink::WaveShaperProcessor"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::WaveShaperProcessor", %"class.blink::WaveShaperProcessor"* %4, i64 0, i32 3
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %32 [
    i32 2, label %15
    i32 1, label %7
  ]

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %9 = load %"class.blink::UpSampler"*, %"class.blink::UpSampler"** %8, align 8
  %10 = tail call i64 @_ZNK5blink9UpSampler13LatencyFramesEv(%"class.blink::UpSampler"* %9) #12
  %11 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %12 = load %"class.blink::DownSampler"*, %"class.blink::DownSampler"** %11, align 8
  %13 = tail call i64 @_ZNK5blink11DownSampler13LatencyFramesEv(%"class.blink::DownSampler"* %12) #12
  %14 = add i64 %13, %10
  br label %32

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.blink::UpSampler"*, %"class.blink::UpSampler"** %16, align 8
  %18 = tail call i64 @_ZNK5blink9UpSampler13LatencyFramesEv(%"class.blink::UpSampler"* %17) #12
  %19 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %20 = load %"class.blink::DownSampler"*, %"class.blink::DownSampler"** %19, align 8
  %21 = tail call i64 @_ZNK5blink11DownSampler13LatencyFramesEv(%"class.blink::DownSampler"* %20) #12
  %22 = add i64 %21, %18
  %23 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %24 = load %"class.blink::UpSampler"*, %"class.blink::UpSampler"** %23, align 8
  %25 = tail call i64 @_ZNK5blink9UpSampler13LatencyFramesEv(%"class.blink::UpSampler"* %24) #12
  %26 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %27 = load %"class.blink::DownSampler"*, %"class.blink::DownSampler"** %26, align 8
  %28 = tail call i64 @_ZNK5blink11DownSampler13LatencyFramesEv(%"class.blink::DownSampler"* %27) #12
  %29 = add i64 %28, %25
  %30 = lshr i64 %29, 1
  %31 = add i64 %22, %30
  br label %32

32:                                               ; preds = %1, %15, %7
  %33 = phi i64 [ 0, %1 ], [ %14, %7 ], [ %31, %15 ]
  %34 = uitofp i64 %33 to double
  %35 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 0, i32 2
  %36 = load float, float* %35, align 8
  %37 = fpext float %36 to double
  %38 = fdiv double %34, %37
  ret double %38
}

declare i64 @_ZNK5blink9UpSampler13LatencyFramesEv(%"class.blink::UpSampler"*) local_unnamed_addr #4

declare i64 @_ZNK5blink11DownSampler13LatencyFramesEv(%"class.blink::DownSampler"*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19WaveShaperDSPKernelD2Ev(%"class.blink::WaveShaperDSPKernel"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink19WaveShaperDSPKernelE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 12
  %4 = bitcast %"class.blink::AudioArray"* %3 to i8**
  %5 = load i8*, i8** %4, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %5) #12
  %6 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 11
  %7 = bitcast %"class.blink::AudioArray"* %6 to i8**
  %8 = load i8*, i8** %7, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %8) #12
  %9 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 10
  %10 = bitcast %"class.blink::AudioArray"* %9 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %11) #12
  %12 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 9
  %13 = bitcast %"class.blink::AudioArray"* %12 to i8**
  %14 = load i8*, i8** %13, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %14) #12
  %15 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 8
  %16 = bitcast %"class.blink::AudioArray"* %15 to i8**
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %17) #12
  %18 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %19 = load %"class.blink::DownSampler"*, %"class.blink::DownSampler"** %18, align 8
  store %"class.blink::DownSampler"* null, %"class.blink::DownSampler"** %18, align 8
  %20 = icmp eq %"class.blink::DownSampler"* %19, null
  br i1 %20, label %40, label %21

21:                                               ; preds = %1
  %22 = getelementptr inbounds %"class.blink::DownSampler", %"class.blink::DownSampler"* %19, i64 0, i32 3
  %23 = bitcast %"class.blink::AudioArray"* %22 to i8**
  %24 = load i8*, i8** %23, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %24) #12
  %25 = getelementptr inbounds %"class.blink::DownSampler", %"class.blink::DownSampler"* %19, i64 0, i32 2
  %26 = bitcast %"class.blink::AudioArray"* %25 to i8**
  %27 = load i8*, i8** %26, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %27) #12
  %28 = getelementptr inbounds %"class.blink::DownSampler", %"class.blink::DownSampler"* %19, i64 0, i32 1, i32 5
  %29 = bitcast %"class.blink::AudioArray"* %28 to i8**
  %30 = load i8*, i8** %29, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %30) #12
  %31 = getelementptr inbounds %"class.blink::DownSampler", %"class.blink::DownSampler"* %19, i64 0, i32 1, i32 4
  %32 = bitcast %"class.blink::AudioArray"* %31 to i8**
  %33 = load i8*, i8** %32, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %33) #12
  %34 = getelementptr inbounds %"class.blink::DownSampler", %"class.blink::DownSampler"* %19, i64 0, i32 1, i32 3
  %35 = bitcast %"class.blink::AudioArray"* %34 to i8**
  %36 = load i8*, i8** %35, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %36) #12
  %37 = getelementptr inbounds %"class.blink::DownSampler", %"class.blink::DownSampler"* %19, i64 0, i32 1, i32 2
  tail call void @_ZN5blink8FFTFrameD1Ev(%"class.blink::FFTFrame"* %37) #12
  %38 = getelementptr inbounds %"class.blink::DownSampler", %"class.blink::DownSampler"* %19, i64 0, i32 1, i32 1
  tail call void @_ZN5blink8FFTFrameD1Ev(%"class.blink::FFTFrame"* %38) #12
  %39 = bitcast %"class.blink::DownSampler"* %19 to i8*
  tail call void @free(i8* %39) #12
  br label %40

40:                                               ; preds = %1, %21
  %41 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %42 = load %"class.blink::UpSampler"*, %"class.blink::UpSampler"** %41, align 8
  store %"class.blink::UpSampler"* null, %"class.blink::UpSampler"** %41, align 8
  %43 = icmp eq %"class.blink::UpSampler"* %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %40
  tail call void @_ZN5blink9UpSamplerD2Ev(%"class.blink::UpSampler"* nonnull %42) #12
  %45 = bitcast %"class.blink::UpSampler"* %42 to i8*
  tail call void @free(i8* %45) #12
  br label %46

46:                                               ; preds = %40, %44
  %47 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %48 = load %"class.blink::DownSampler"*, %"class.blink::DownSampler"** %47, align 8
  store %"class.blink::DownSampler"* null, %"class.blink::DownSampler"** %47, align 8
  %49 = icmp eq %"class.blink::DownSampler"* %48, null
  br i1 %49, label %69, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.blink::DownSampler", %"class.blink::DownSampler"* %48, i64 0, i32 3
  %52 = bitcast %"class.blink::AudioArray"* %51 to i8**
  %53 = load i8*, i8** %52, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %53) #12
  %54 = getelementptr inbounds %"class.blink::DownSampler", %"class.blink::DownSampler"* %48, i64 0, i32 2
  %55 = bitcast %"class.blink::AudioArray"* %54 to i8**
  %56 = load i8*, i8** %55, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %56) #12
  %57 = getelementptr inbounds %"class.blink::DownSampler", %"class.blink::DownSampler"* %48, i64 0, i32 1, i32 5
  %58 = bitcast %"class.blink::AudioArray"* %57 to i8**
  %59 = load i8*, i8** %58, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %59) #12
  %60 = getelementptr inbounds %"class.blink::DownSampler", %"class.blink::DownSampler"* %48, i64 0, i32 1, i32 4
  %61 = bitcast %"class.blink::AudioArray"* %60 to i8**
  %62 = load i8*, i8** %61, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %62) #12
  %63 = getelementptr inbounds %"class.blink::DownSampler", %"class.blink::DownSampler"* %48, i64 0, i32 1, i32 3
  %64 = bitcast %"class.blink::AudioArray"* %63 to i8**
  %65 = load i8*, i8** %64, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %65) #12
  %66 = getelementptr inbounds %"class.blink::DownSampler", %"class.blink::DownSampler"* %48, i64 0, i32 1, i32 2
  tail call void @_ZN5blink8FFTFrameD1Ev(%"class.blink::FFTFrame"* %66) #12
  %67 = getelementptr inbounds %"class.blink::DownSampler", %"class.blink::DownSampler"* %48, i64 0, i32 1, i32 1
  tail call void @_ZN5blink8FFTFrameD1Ev(%"class.blink::FFTFrame"* %67) #12
  %68 = bitcast %"class.blink::DownSampler"* %48 to i8*
  tail call void @free(i8* %68) #12
  br label %69

69:                                               ; preds = %46, %50
  %70 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %71 = load %"class.blink::UpSampler"*, %"class.blink::UpSampler"** %70, align 8
  store %"class.blink::UpSampler"* null, %"class.blink::UpSampler"** %70, align 8
  %72 = icmp eq %"class.blink::UpSampler"* %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %69
  tail call void @_ZN5blink9UpSamplerD2Ev(%"class.blink::UpSampler"* nonnull %71) #12
  %74 = bitcast %"class.blink::UpSampler"* %71 to i8*
  tail call void @free(i8* %74) #12
  br label %75

75:                                               ; preds = %69, %73
  %76 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %77 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %76, align 8
  store %"class.blink::AudioArray"* null, %"class.blink::AudioArray"** %76, align 8
  %78 = icmp eq %"class.blink::AudioArray"* %77, null
  br i1 %78, label %83, label %79

79:                                               ; preds = %75
  %80 = bitcast %"class.blink::AudioArray"* %77 to i8**
  %81 = load i8*, i8** %80, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %81) #12
  %82 = bitcast %"class.blink::AudioArray"* %77 to i8*
  tail call void @free(i8* %82) #12
  br label %83

83:                                               ; preds = %75, %79
  %84 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %85 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %84, align 8
  store %"class.blink::AudioArray"* null, %"class.blink::AudioArray"** %84, align 8
  %86 = icmp eq %"class.blink::AudioArray"* %85, null
  br i1 %86, label %91, label %87

87:                                               ; preds = %83
  %88 = bitcast %"class.blink::AudioArray"* %85 to i8**
  %89 = load i8*, i8** %88, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %89) #12
  %90 = bitcast %"class.blink::AudioArray"* %85 to i8*
  tail call void @free(i8* %90) #12
  br label %91

91:                                               ; preds = %83, %87
  %92 = getelementptr inbounds %"class.blink::WaveShaperDSPKernel", %"class.blink::WaveShaperDSPKernel"* %0, i64 0, i32 0
  tail call void @_ZN5blink14AudioDSPKernelD2Ev(%"class.blink::AudioDSPKernel"* %92) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19WaveShaperDSPKernelD0Ev(%"class.blink::WaveShaperDSPKernel"*) unnamed_addr #6 comdat align 2 {
  tail call void @_ZN5blink19WaveShaperDSPKernelD2Ev(%"class.blink::WaveShaperDSPKernel"* %0) #12
  %2 = bitcast %"class.blink::WaveShaperDSPKernel"* %0 to i8*
  tail call void @free(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14AudioDSPKernel22ProcessOnlyAudioParamsEj(%"class.blink::AudioDSPKernel"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.x86.sse2.cvttps2dq(<4 x float>) #7

; Function Attrs: nounwind
declare void @_ZN5blink14AudioDSPKernelD2Ev(%"class.blink::AudioDSPKernel"*) unnamed_addr #8

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10AudioArrayIfE8AllocateEm(%"class.blink::AudioArray"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = icmp ugt i64 %1, 1073741823
  br i1 %10, label %12, label %11

11:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %8, align 8
  br label %21

12:                                               ; preds = %2
  %13 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #12
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1073741823) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i8* %13, i8* %14) #12
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %16, i8** %8, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1, i64 0, i64 0), i32 63, %"class.logging::CheckOpResult"* nonnull %4) #12
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #12
  br label %21

21:                                               ; preds = %11, %12, %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  %22 = trunc i64 %1 to i32
  %23 = shl i32 %22, 2
  %24 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %0, i64 0, i32 0
  %25 = load float*, float** %24, align 8
  %26 = icmp eq float* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  %28 = bitcast float* %25 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %28) #12
  br label %29

29:                                               ; preds = %21, %27
  %30 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %23, i32 32) #12
  %31 = extractvalue { i32, i1 } %30, 1
  br i1 %31, label %32, label %33, !prof !2

32:                                               ; preds = %29
  call void @llvm.trap() #12
  unreachable

33:                                               ; preds = %29
  %34 = extractvalue { i32, i1 } %30, 0
  %35 = zext i32 %34 to i64
  %36 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 %35, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10AudioArrayIfEEEEPKcv, i64 0, i64 0)) #12
  %37 = bitcast %"class.blink::AudioArray"* %0 to i8**
  store i8* %36, i8** %37, align 8
  %38 = icmp eq i8* %36, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %33
  %40 = ptrtoint i8* %36 to i64
  br label %46

41:                                               ; preds = %33
  %42 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0)) #12
  %43 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #12
  %44 = bitcast %"class.blink::AudioArray"* %0 to i64*
  %45 = load i64, i64* %44, align 8
  br label %46

46:                                               ; preds = %39, %41
  %47 = phi i64 [ %40, %39 ], [ %45, %41 ]
  %48 = add i64 %47, 31
  %49 = and i64 %48, -32
  %50 = inttoptr i64 %49 to float*
  %51 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %0, i64 0, i32 1
  store float* %50, float** %51, align 8
  %52 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %0, i64 0, i32 2
  store i32 %22, i32* %52, align 8
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #8

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #4

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #9

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9UpSamplerD2Ev(%"class.blink::UpSampler"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::UpSampler", %"class.blink::UpSampler"* %0, i64 0, i32 4
  %3 = bitcast %"class.blink::AudioArray"* %2 to i8**
  %4 = load i8*, i8** %3, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %4) #12
  %5 = getelementptr inbounds %"class.blink::UpSampler", %"class.blink::UpSampler"* %0, i64 0, i32 3
  %6 = bitcast %"class.blink::AudioArray"* %5 to i8**
  %7 = load i8*, i8** %6, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %7) #12
  %8 = getelementptr inbounds %"class.blink::UpSampler", %"class.blink::UpSampler"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.blink::SimpleFFTConvolver"*, %"class.blink::SimpleFFTConvolver"** %8, align 8
  store %"class.blink::SimpleFFTConvolver"* null, %"class.blink::SimpleFFTConvolver"** %8, align 8
  %10 = icmp eq %"class.blink::SimpleFFTConvolver"* %9, null
  br i1 %10, label %24, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::SimpleFFTConvolver", %"class.blink::SimpleFFTConvolver"* %9, i64 0, i32 5
  %13 = bitcast %"class.blink::AudioArray"* %12 to i8**
  %14 = load i8*, i8** %13, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %14) #12
  %15 = getelementptr inbounds %"class.blink::SimpleFFTConvolver", %"class.blink::SimpleFFTConvolver"* %9, i64 0, i32 4
  %16 = bitcast %"class.blink::AudioArray"* %15 to i8**
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %17) #12
  %18 = getelementptr inbounds %"class.blink::SimpleFFTConvolver", %"class.blink::SimpleFFTConvolver"* %9, i64 0, i32 3
  %19 = bitcast %"class.blink::AudioArray"* %18 to i8**
  %20 = load i8*, i8** %19, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %20) #12
  %21 = getelementptr inbounds %"class.blink::SimpleFFTConvolver", %"class.blink::SimpleFFTConvolver"* %9, i64 0, i32 2
  tail call void @_ZN5blink8FFTFrameD1Ev(%"class.blink::FFTFrame"* %21) #12
  %22 = getelementptr inbounds %"class.blink::SimpleFFTConvolver", %"class.blink::SimpleFFTConvolver"* %9, i64 0, i32 1
  tail call void @_ZN5blink8FFTFrameD1Ev(%"class.blink::FFTFrame"* %22) #12
  %23 = bitcast %"class.blink::SimpleFFTConvolver"* %9 to i8*
  tail call void @free(i8* %23) #12
  br label %24

24:                                               ; preds = %1, %11
  %25 = getelementptr inbounds %"class.blink::UpSampler", %"class.blink::UpSampler"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %26 = load %"class.blink::DirectConvolver"*, %"class.blink::DirectConvolver"** %25, align 8
  store %"class.blink::DirectConvolver"* null, %"class.blink::DirectConvolver"** %25, align 8
  %27 = icmp eq %"class.blink::DirectConvolver"* %26, null
  br i1 %27, label %44, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::DirectConvolver", %"class.blink::DirectConvolver"* %26, i64 0, i32 3
  %30 = bitcast %"class.blink::AudioArray"* %29 to i8**
  %31 = load i8*, i8** %30, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %31) #12
  %32 = getelementptr inbounds %"class.blink::DirectConvolver", %"class.blink::DirectConvolver"* %26, i64 0, i32 2, i32 0, i32 0, i32 0
  %33 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %32, align 8
  store %"class.blink::AudioArray"* null, %"class.blink::AudioArray"** %32, align 8
  %34 = icmp eq %"class.blink::AudioArray"* %33, null
  br i1 %34, label %39, label %35

35:                                               ; preds = %28
  %36 = bitcast %"class.blink::AudioArray"* %33 to i8**
  %37 = load i8*, i8** %36, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %37) #12
  %38 = bitcast %"class.blink::AudioArray"* %33 to i8*
  tail call void @free(i8* %38) #12
  br label %39

39:                                               ; preds = %35, %28
  %40 = getelementptr inbounds %"class.blink::DirectConvolver", %"class.blink::DirectConvolver"* %26, i64 0, i32 1
  %41 = bitcast %"class.blink::AudioArray"* %40 to i8**
  %42 = load i8*, i8** %41, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %42) #12
  %43 = bitcast %"class.blink::DirectConvolver"* %26 to i8*
  tail call void @free(i8* %43) #12
  br label %44

44:                                               ; preds = %24, %39
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink8FFTFrameD1Ev(%"class.blink::FFTFrame"*) unnamed_addr #8

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #11

declare void @_ZN5blink9UpSamplerC1Em(%"class.blink::UpSampler"*, i64) unnamed_addr #4

declare void @_ZN5blink11DownSamplerC1Em(%"class.blink::DownSampler"*, i64) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
