; ModuleID = '../../third_party/nasm/asm/exprdump.c'
source_filename = "../../third_party/nasm/asm/exprdump.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.location = type { i64, i32, i32 }
%struct.expr = type { i32, i64 }

@.str.1 = private unnamed_addr constant [13 x i8] c"<%s(%d),%ld>\00", align 1
@expr_type.seg_str = internal global [64 x i8] zeroinitializer, align 16
@.str.4 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.5 = private unnamed_addr constant [7 x i8] c"simple\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"wrt\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"sae\00", align 1
@nasm_reg_names = external local_unnamed_addr constant [0 x i8*], align 8
@.str.8 = private unnamed_addr constant [9 x i8] c"%sseg %d\00", align 1
@location = external local_unnamed_addr global %struct.location, align 8
@.str.9 = private unnamed_addr constant [6 x i8] c"this \00", align 1
@.str.10 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.11 = private unnamed_addr constant [4 x i8] c"ERR\00", align 1
@str = private unnamed_addr constant [2 x i8] c"]\00", align 1

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @dump_expr(%struct.expr* nocapture readonly) local_unnamed_addr #0 {
  %2 = tail call i32 @putchar(i32 91)
  br label %3

3:                                                ; preds = %26, %1
  %4 = phi %struct.expr* [ %0, %1 ], [ %32, %26 ]
  %5 = getelementptr inbounds %struct.expr, %struct.expr* %4, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %10 [
    i32 0, label %33
    i32 244, label %9
    i32 241, label %26
    i32 242, label %7
    i32 243, label %8
  ]

7:                                                ; preds = %3
  br label %26

8:                                                ; preds = %3
  br label %26

9:                                                ; preds = %3
  br label %26

10:                                               ; preds = %3
  %11 = add i32 %6, -1
  %12 = icmp ult i32 %11, 240
  br i1 %12, label %13, label %17

13:                                               ; preds = %10
  %14 = sext i32 %11 to i64
  %15 = getelementptr inbounds [0 x i8*], [0 x i8*]* @nasm_reg_names, i64 0, i64 %14
  %16 = load i8*, i8** %15, align 8
  br label %26

17:                                               ; preds = %10
  %18 = icmp sgt i32 %6, 244
  br i1 %18, label %19, label %26

19:                                               ; preds = %17
  %20 = add nsw i32 %6, -245
  %21 = load i32, i32* getelementptr inbounds (%struct.location, %struct.location* @location, i64 0, i32 1), align 8
  %22 = icmp eq i32 %20, %21
  %23 = select i1 %22, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0)
  %24 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @expr_type.seg_str, i64 0, i64 0), i64 64, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0), i8* %23, i32 %20) #3
  %25 = load i32, i32* %5, align 8
  br label %26

26:                                               ; preds = %3, %7, %8, %9, %13, %17, %19
  %27 = phi i32 [ %6, %13 ], [ %25, %19 ], [ %6, %9 ], [ %6, %8 ], [ %6, %7 ], [ %6, %17 ], [ %6, %3 ]
  %28 = phi i8* [ %16, %13 ], [ getelementptr inbounds ([64 x i8], [64 x i8]* @expr_type.seg_str, i64 0, i64 0), %19 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0), %9 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), %8 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), %7 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11, i64 0, i64 0), %17 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0), %3 ]
  %29 = getelementptr inbounds %struct.expr, %struct.expr* %4, i64 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i8* %28, i32 %27, i64 %30)
  %32 = getelementptr inbounds %struct.expr, %struct.expr* %4, i64 1
  br label %3

33:                                               ; preds = %3
  %34 = tail call i32 @puts(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str, i64 0, i64 0))
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @printf(i8* nocapture readonly, ...) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare i32 @snprintf(i8* nocapture, i64, i8* nocapture readonly, ...) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare i32 @putchar(i32) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #2

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
