; ModuleID = '../../third_party/blink/renderer/modules/webgpu/gpu_swap_chain.cc'
source_filename = "../../third_party/blink/renderer/modules/webgpu/gpu_swap_chain.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.util::IdType.259" = type { %"class.base::StrongAlias.260" }
%"class.base::StrongAlias.260" = type { i32 }
%"class.gfx::Size" = type { i32, i32 }
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%union.anon.265 = type { %"struct.gfx::HDRMetadata" }
%"struct.gfx::HDRMetadata" = type { %"struct.gfx::MasteringMetadata", i32, i32 }
%"struct.gfx::MasteringMetadata" = type { %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", float, float }
%"class.gfx::PointF" = type { float, float }
%"class.absl::optional.266" = type { %"class.absl::optional_internal::optional_data.267" }
%"class.absl::optional_internal::optional_data.267" = type { %"class.absl::optional_internal::optional_data_base.268" }
%"class.absl::optional_internal::optional_data_base.268" = type { %"class.absl::optional_internal::optional_data_dtor_base.269" }
%"class.absl::optional_internal::optional_data_dtor_base.269" = type { i8, [7 x i8], %union.anon.270 }
%union.anon.270 = type { %"struct.gpu::VulkanYCbCrInfo" }
%"struct.gpu::VulkanYCbCrInfo" = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.626", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.626" = type { %"class.base::RefCounted.627" }
%"class.base::RefCounted.627" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.628" }
%"class.blink::PersistentBase.628" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.640" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.631" }
%"class.blink::HeapHashMap.631" = type { %"class.WTF::HashMap.634" }
%"class.WTF::HashMap.634" = type { %"class.WTF::HashTable.635" }
%"class.WTF::HashTable.635" = type <{ %"struct.WTF::KeyValuePair.637"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.637" = type { %"class.blink::WeakMember.638", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.638" = type { %"class.blink::MemberBase.639" }
%"class.blink::MemberBase.639" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr.640" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.387", i32, [4 x i8], %"class.std::__1::unique_ptr.525", %"class.std::__1::unique_ptr.525", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.531", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.537", %"class.std::__1::unique_ptr.543", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.555", %"class.std::__1::unique_ptr.561", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.568", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.387" = type { %"class.std::__1::__compressed_pair.388" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.390", %"class.std::__1::unique_ptr.396", %"class.std::__1::unique_ptr.402", %"class.std::__1::unique_ptr.408", %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.420", %"class.std::__1::unique_ptr.431", %"class.std::__1::unique_ptr.438", %"class.std::__1::unique_ptr.438", %"class.std::__1::unique_ptr.445", %"class.std::__1::unique_ptr.452", %"class.std::__1::unique_ptr.459", %"class.std::__1::unique_ptr.459", %"class.std::__1::unique_ptr.466", %"class.std::__1::unique_ptr.473", %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.505", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.390" = type { %"class.std::__1::__compressed_pair.391" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.392" }
%"struct.std::__1::__compressed_pair_elem.392" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.396" = type { %"class.std::__1::__compressed_pair.397" }
%"class.std::__1::__compressed_pair.397" = type { %"struct.std::__1::__compressed_pair_elem.398" }
%"struct.std::__1::__compressed_pair_elem.398" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.402" = type { %"class.std::__1::__compressed_pair.403" }
%"class.std::__1::__compressed_pair.403" = type { %"struct.std::__1::__compressed_pair_elem.404" }
%"struct.std::__1::__compressed_pair_elem.404" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.410" }
%"struct.std::__1::__compressed_pair_elem.410" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.414" = type { %"class.std::__1::__compressed_pair.415" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.420" = type { %"class.std::__1::__compressed_pair.421" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.422" }
%"struct.std::__1::__compressed_pair_elem.422" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.423" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.423" = type { %"struct.std::__1::__atomic_base.424" }
%"struct.std::__1::__atomic_base.424" = type { %"struct.std::__1::__atomic_base.425" }
%"struct.std::__1::__atomic_base.425" = type { %"struct.std::__1::__cxx_atomic_impl.426" }
%"struct.std::__1::__cxx_atomic_impl.426" = type { %"struct.std::__1::__cxx_atomic_base_impl.427" }
%"struct.std::__1::__cxx_atomic_base_impl.427" = type { i64 }
%"class.std::__1::unique_ptr.431" = type { %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.433" }
%"struct.std::__1::__compressed_pair_elem.433" = type { %"class.blink::Worklist.434"* }
%"class.blink::Worklist.434" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.423" }
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"class.blink::Worklist.441"* }
%"class.blink::Worklist.441" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.423" }
%"class.std::__1::unique_ptr.445" = type { %"class.std::__1::__compressed_pair.446" }
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.447" }
%"struct.std::__1::__compressed_pair_elem.447" = type { %"class.blink::Worklist.448"* }
%"class.blink::Worklist.448" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.423" }
%"class.std::__1::unique_ptr.452" = type { %"class.std::__1::__compressed_pair.453" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"class.blink::Worklist.455"* }
%"class.blink::Worklist.455" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.423" }
%"class.std::__1::unique_ptr.459" = type { %"class.std::__1::__compressed_pair.460" }
%"class.std::__1::__compressed_pair.460" = type { %"struct.std::__1::__compressed_pair_elem.461" }
%"struct.std::__1::__compressed_pair_elem.461" = type { %"class.blink::Worklist.462"* }
%"class.blink::Worklist.462" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.423" }
%"class.std::__1::unique_ptr.466" = type { %"class.std::__1::__compressed_pair.467" }
%"class.std::__1::__compressed_pair.467" = type { %"struct.std::__1::__compressed_pair_elem.468" }
%"struct.std::__1::__compressed_pair_elem.468" = type { %"class.blink::Worklist.469"* }
%"class.blink::Worklist.469" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.423" }
%"class.std::__1::unique_ptr.473" = type { %"class.std::__1::__compressed_pair.474" }
%"class.std::__1::__compressed_pair.474" = type { %"struct.std::__1::__compressed_pair_elem.475" }
%"struct.std::__1::__compressed_pair_elem.475" = type { %"class.blink::Worklist.476"* }
%"class.blink::Worklist.476" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.423" }
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.483", %"class.std::__1::__compressed_pair.491", %"class.std::__1::__compressed_pair.496", %"class.std::__1::__compressed_pair.498", [4 x i8] }>
%"class.std::__1::unique_ptr.483" = type { %"class.std::__1::__compressed_pair.484" }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.485", %"struct.std::__1::__compressed_pair_elem.486" }
%"struct.std::__1::__compressed_pair_elem.485" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.486" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.487" }
%"class.std::__1::__compressed_pair.487" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { i64 }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.492" }
%"struct.std::__1::__compressed_pair_elem.492" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.496" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"class.std::__1::__compressed_pair.498" = type { %"struct.std::__1::__compressed_pair_elem.499" }
%"struct.std::__1::__compressed_pair_elem.499" = type { float }
%"class.std::__1::unique_ptr.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.508", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.508" = type { %"class.std::__1::__compressed_pair.509" }
%"class.std::__1::__compressed_pair.509" = type { %"struct.std::__1::__compressed_pair_elem.510" }
%"struct.std::__1::__compressed_pair_elem.510" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.517" }
%"class.WTF::Vector.517" = type { %"class.WTF::VectorBuffer.518" }
%"class.WTF::VectorBuffer.518" = type { %"class.WTF::VectorBufferBase.519" }
%"class.WTF::VectorBufferBase.519" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.525" = type { %"class.std::__1::__compressed_pair.526" }
%"class.std::__1::__compressed_pair.526" = type { %"struct.std::__1::__compressed_pair_elem.527" }
%"struct.std::__1::__compressed_pair_elem.527" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.531" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.534" }
%"class.WTF::VectorBuffer.534" = type { %"class.WTF::VectorBufferBase.535" }
%"class.WTF::VectorBufferBase.535" = type { %"struct.std::__1::pair.536"*, i32, i32 }
%"struct.std::__1::pair.536" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.537" = type { %"class.std::__1::__compressed_pair.538" }
%"class.std::__1::__compressed_pair.538" = type { %"struct.std::__1::__compressed_pair_elem.539" }
%"struct.std::__1::__compressed_pair_elem.539" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.543" = type { %"class.std::__1::__compressed_pair.544" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.545" }
%"struct.std::__1::__compressed_pair_elem.545" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.549" }
%"class.std::__1::unique_ptr.549" = type { %"class.std::__1::__compressed_pair.550" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.551" }
%"struct.std::__1::__compressed_pair_elem.551" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.434"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.441"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.448"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.455"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.462"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.572", i64 }
%"class.std::__1::vector.572" = type { %"class.std::__1::__vector_base.573" }
%"class.std::__1::__vector_base.573" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.574" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.575" }
%"struct.std::__1::__compressed_pair_elem.575" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.561" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.563" }
%"struct.std::__1::__compressed_pair_elem.563" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.567 }
%class.scoped_refptr.567 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.568" = type { %"struct.std::__1::__atomic_base.569" }
%"struct.std::__1::__atomic_base.569" = type { %"struct.std::__1::__cxx_atomic_impl.570" }
%"struct.std::__1::__cxx_atomic_impl.570" = type { %"struct.std::__1::__cxx_atomic_base_impl.571" }
%"struct.std::__1::__cxx_atomic_base_impl.571" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::GPUSwapChain" = type { %"class.blink::DawnObjectImpl", %"class.blink::WebGPUSwapBufferProvider::Client", %class.scoped_refptr.162, %"class.blink::Member.303", i32, i32, %"class.blink::Member.309" }
%"class.blink::DawnObjectImpl" = type { %"class.blink::ScriptWrappable", %"class.blink::DawnObjectBase", %"class.blink::Member" }
%"class.blink::DawnObjectBase" = type { %class.scoped_refptr, %"class.WTF::String" }
%class.scoped_refptr = type { %"class.blink::DawnControlClientHolder"* }
%"class.blink::DawnControlClientHolder" = type { %"class.WTF::RefCounted", %"class.std::__1::unique_ptr", %"class.gpu::webgpu::WebGPUInterface"*, %struct.DawnProcTable, i8, %"class.blink::WebGPURecyclableResourceCache" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::WebGraphicsContext3DProviderWrapper"* }
%"class.blink::WebGraphicsContext3DProviderWrapper" = type { %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.11", %"class.base::ObserverList", %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.blink::GraphicsContext3DUtils"* }
%"class.blink::GraphicsContext3DUtils" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.3 }
%class.scoped_refptr.3 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.5" }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl.8" }
%"struct.std::__1::__cxx_atomic_impl.8" = type { %"struct.std::__1::__cxx_atomic_base_impl.9" }
%"struct.std::__1::__cxx_atomic_base_impl.9" = type { i8 }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.blink::WebGraphicsContext3DProvider"* }
%"class.blink::WebGraphicsContext3DProvider" = type { i32 (...)** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.17" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.20 }
%class.scoped_refptr.20 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.gpu::webgpu::WebGPUInterface" = type { %"class.gpu::InterfaceBase" }
%"class.gpu::InterfaceBase" = type { i32 (...)** }
%struct.DawnProcTable = type { void ()* (%struct.WGPUDeviceImpl*, i8*)*, %struct.WGPUInstanceImpl* (%struct.WGPUInstanceDescriptor*)*, void (%struct.WGPUBindGroupImpl*)*, void (%struct.WGPUBindGroupImpl*)*, void (%struct.WGPUBindGroupLayoutImpl*)*, void (%struct.WGPUBindGroupLayoutImpl*)*, void (%struct.WGPUBufferImpl*)*, i8* (%struct.WGPUBufferImpl*, i64, i64)*, i8* (%struct.WGPUBufferImpl*, i64, i64)*, void (%struct.WGPUBufferImpl*, i32, i64, i64, void (i32, i8*)*, i8*)*, void (%struct.WGPUBufferImpl*)*, void (%struct.WGPUBufferImpl*)*, void (%struct.WGPUBufferImpl*)*, void (%struct.WGPUCommandBufferImpl*)*, void (%struct.WGPUCommandBufferImpl*)*, %struct.WGPUComputePassEncoderImpl* (%struct.WGPUCommandEncoderImpl*, %struct.WGPUComputePassDescriptor*)*, %struct.WGPURenderPassEncoderImpl* (%struct.WGPUCommandEncoderImpl*, %struct.WGPURenderPassDescriptor*)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUBufferImpl*, i64, %struct.WGPUBufferImpl*, i64, i64)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUImageCopyBuffer*, %struct.WGPUImageCopyTexture*, %struct.WGPUExtent3D*)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUImageCopyTexture*, %struct.WGPUImageCopyBuffer*, %struct.WGPUExtent3D*)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUImageCopyTexture*, %struct.WGPUImageCopyTexture*, %struct.WGPUExtent3D*)*, %struct.WGPUCommandBufferImpl* (%struct.WGPUCommandEncoderImpl*, %struct.WGPUCommandBufferDescriptor*)*, void (%struct.WGPUCommandEncoderImpl*, i8*)*, void (%struct.WGPUCommandEncoderImpl*, i8*)*, void (%struct.WGPUCommandEncoderImpl*)*, void (%struct.WGPUCommandEncoderImpl*, i8*)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUQuerySetImpl*, i32, i32, %struct.WGPUBufferImpl*, i64)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUQuerySetImpl*, i32)*, void (%struct.WGPUCommandEncoderImpl*)*, void (%struct.WGPUCommandEncoderImpl*)*, void (%struct.WGPUComputePassEncoderImpl*, i32, i32, i32)*, void (%struct.WGPUComputePassEncoderImpl*, %struct.WGPUBufferImpl*, i64)*, void (%struct.WGPUComputePassEncoderImpl*)*, void (%struct.WGPUComputePassEncoderImpl*, i8*)*, void (%struct.WGPUComputePassEncoderImpl*)*, void (%struct.WGPUComputePassEncoderImpl*, i8*)*, void (%struct.WGPUComputePassEncoderImpl*, i32, %struct.WGPUBindGroupImpl*, i32, i32*)*, void (%struct.WGPUComputePassEncoderImpl*, %struct.WGPUComputePipelineImpl*)*, void (%struct.WGPUComputePassEncoderImpl*, %struct.WGPUQuerySetImpl*, i32)*, void (%struct.WGPUComputePassEncoderImpl*)*, void (%struct.WGPUComputePassEncoderImpl*)*, %struct.WGPUBindGroupLayoutImpl* (%struct.WGPUComputePipelineImpl*, i32)*, void (%struct.WGPUComputePipelineImpl*)*, void (%struct.WGPUComputePipelineImpl*)*, %struct.WGPUBindGroupImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUBindGroupDescriptor*)*, %struct.WGPUBindGroupLayoutImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUBindGroupLayoutDescriptor*)*, %struct.WGPUBufferImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUBufferDescriptor*)*, %struct.WGPUCommandEncoderImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUCommandEncoderDescriptor*)*, %struct.WGPUComputePipelineImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUComputePipelineDescriptor*)*, void (%struct.WGPUDeviceImpl*, %struct.WGPUComputePipelineDescriptor*, void (i32, %struct.WGPUComputePipelineImpl*, i8*, i8*)*, i8*)*, %struct.WGPUBufferImpl* (%struct.WGPUDeviceImpl*)*, %struct.WGPUExternalTextureImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUExternalTextureDescriptor*)*, %struct.WGPUPipelineLayoutImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUPipelineLayoutDescriptor*)*, %struct.WGPUQuerySetImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUQuerySetDescriptor*)*, %struct.WGPURenderBundleEncoderImpl* (%struct.WGPUDeviceImpl*, %struct.WGPURenderBundleEncoderDescriptor*)*, %struct.WGPURenderPipelineImpl* (%struct.WGPUDeviceImpl*, %struct.WGPURenderPipelineDescriptor*)*, %struct.WGPURenderPipelineImpl* (%struct.WGPUDeviceImpl*, %struct.WGPURenderPipelineDescriptor*)*, void (%struct.WGPUDeviceImpl*, %struct.WGPURenderPipelineDescriptor*, void (i32, %struct.WGPURenderPipelineImpl*, i8*, i8*)*, i8*)*, %struct.WGPUSamplerImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUSamplerDescriptor*)*, %struct.WGPUShaderModuleImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUShaderModuleDescriptor*)*, %struct.WGPUSwapChainImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUSurfaceImpl*, %struct.WGPUSwapChainDescriptor*)*, %struct.WGPUTextureImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUTextureDescriptor*)*, %struct.WGPUQueueImpl* (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUDeviceImpl*, i32, i8*)*, void (%struct.WGPUDeviceImpl*)*, i1 (%struct.WGPUDeviceImpl*, void (i32, i8*, i8*)*, i8*)*, void (%struct.WGPUDeviceImpl*, i32)*, void (%struct.WGPUDeviceImpl*, void (i8*, i8*)*, i8*)*, void (%struct.WGPUDeviceImpl*, void (i32, i8*, i8*)*, i8*)*, void (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUExternalTextureImpl*)*, void (%struct.WGPUExternalTextureImpl*)*, void (%struct.WGPUExternalTextureImpl*)*, %struct.WGPUSurfaceImpl* (%struct.WGPUInstanceImpl*, %struct.WGPUSurfaceDescriptor*)*, void (%struct.WGPUInstanceImpl*)*, void (%struct.WGPUInstanceImpl*)*, void (%struct.WGPUPipelineLayoutImpl*)*, void (%struct.WGPUPipelineLayoutImpl*)*, void (%struct.WGPUQuerySetImpl*)*, void (%struct.WGPUQuerySetImpl*)*, void (%struct.WGPUQuerySetImpl*)*, void (%struct.WGPUQueueImpl*, %struct.WGPUImageCopyTexture*, %struct.WGPUImageCopyTexture*, %struct.WGPUExtent3D*, %struct.WGPUCopyTextureForBrowserOptions*)*, void (%struct.WGPUQueueImpl*, i64, void (i32, i8*)*, i8*)*, void (%struct.WGPUQueueImpl*, i32, %struct.WGPUCommandBufferImpl**)*, void (%struct.WGPUQueueImpl*, %struct.WGPUBufferImpl*, i64, i8*, i64)*, void (%struct.WGPUQueueImpl*, %struct.WGPUImageCopyTexture*, i8*, i64, %struct.WGPUTextureDataLayout*, %struct.WGPUExtent3D*)*, void (%struct.WGPUQueueImpl*)*, void (%struct.WGPUQueueImpl*)*, void (%struct.WGPURenderBundleImpl*)*, void (%struct.WGPURenderBundleImpl*)*, void (%struct.WGPURenderBundleEncoderImpl*, i32, i32, i32, i32)*, void (%struct.WGPURenderBundleEncoderImpl*, i32, i32, i32, i32, i32)*, void (%struct.WGPURenderBundleEncoderImpl*, %struct.WGPUBufferImpl*, i64)*, void (%struct.WGPURenderBundleEncoderImpl*, %struct.WGPUBufferImpl*, i64)*, %struct.WGPURenderBundleImpl* (%struct.WGPURenderBundleEncoderImpl*, %struct.WGPURenderBundleDescriptor*)*, void (%struct.WGPURenderBundleEncoderImpl*, i8*)*, void (%struct.WGPURenderBundleEncoderImpl*)*, void (%struct.WGPURenderBundleEncoderImpl*, i8*)*, void (%struct.WGPURenderBundleEncoderImpl*, i32, %struct.WGPUBindGroupImpl*, i32, i32*)*, void (%struct.WGPURenderBundleEncoderImpl*, %struct.WGPUBufferImpl*, i32, i64, i64)*, void (%struct.WGPURenderBundleEncoderImpl*, %struct.WGPURenderPipelineImpl*)*, void (%struct.WGPURenderBundleEncoderImpl*, i32, %struct.WGPUBufferImpl*, i64, i64)*, void (%struct.WGPURenderBundleEncoderImpl*)*, void (%struct.WGPURenderBundleEncoderImpl*)*, void (%struct.WGPURenderPassEncoderImpl*, i32)*, void (%struct.WGPURenderPassEncoderImpl*, i32, i32, i32, i32)*, void (%struct.WGPURenderPassEncoderImpl*, i32, i32, i32, i32, i32)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUBufferImpl*, i64)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUBufferImpl*, i64)*, void (%struct.WGPURenderPassEncoderImpl*)*, void (%struct.WGPURenderPassEncoderImpl*)*, void (%struct.WGPURenderPassEncoderImpl*, i32, %struct.WGPURenderBundleImpl**)*, void (%struct.WGPURenderPassEncoderImpl*, i8*)*, void (%struct.WGPURenderPassEncoderImpl*)*, void (%struct.WGPURenderPassEncoderImpl*, i8*)*, void (%struct.WGPURenderPassEncoderImpl*, i32, %struct.WGPUBindGroupImpl*, i32, i32*)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUColor*)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUColor*)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUBufferImpl*, i32, i64, i64)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPURenderPipelineImpl*)*, void (%struct.WGPURenderPassEncoderImpl*, i32, i32, i32, i32)*, void (%struct.WGPURenderPassEncoderImpl*, i32)*, void (%struct.WGPURenderPassEncoderImpl*, i32, %struct.WGPUBufferImpl*, i64, i64)*, void (%struct.WGPURenderPassEncoderImpl*, float, float, float, float, float, float)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUQuerySetImpl*, i32)*, void (%struct.WGPURenderPassEncoderImpl*)*, void (%struct.WGPURenderPassEncoderImpl*)*, %struct.WGPUBindGroupLayoutImpl* (%struct.WGPURenderPipelineImpl*, i32)*, void (%struct.WGPURenderPipelineImpl*)*, void (%struct.WGPURenderPipelineImpl*)*, void (%struct.WGPUSamplerImpl*)*, void (%struct.WGPUSamplerImpl*)*, void (%struct.WGPUShaderModuleImpl*, void (i32, %struct.WGPUCompilationInfo*, i8*)*, i8*)*, void (%struct.WGPUShaderModuleImpl*)*, void (%struct.WGPUShaderModuleImpl*)*, void (%struct.WGPUSurfaceImpl*)*, void (%struct.WGPUSurfaceImpl*)*, void (%struct.WGPUSwapChainImpl*, i32, i32, i32, i32)*, %struct.WGPUTextureViewImpl* (%struct.WGPUSwapChainImpl*)*, void (%struct.WGPUSwapChainImpl*)*, void (%struct.WGPUSwapChainImpl*)*, void (%struct.WGPUSwapChainImpl*)*, %struct.WGPUTextureViewImpl* (%struct.WGPUTextureImpl*, %struct.WGPUTextureViewDescriptor*)*, void (%struct.WGPUTextureImpl*)*, void (%struct.WGPUTextureImpl*)*, void (%struct.WGPUTextureImpl*)*, void (%struct.WGPUTextureViewImpl*)*, void (%struct.WGPUTextureViewImpl*)* }
%struct.WGPUDeviceImpl = type opaque
%struct.WGPUInstanceImpl = type opaque
%struct.WGPUInstanceDescriptor = type { %struct.WGPUChainedStruct* }
%struct.WGPUChainedStruct = type { %struct.WGPUChainedStruct*, i32 }
%struct.WGPUBindGroupImpl = type opaque
%struct.WGPUBindGroupLayoutImpl = type opaque
%struct.WGPUBufferImpl = type opaque
%struct.WGPUCommandBufferImpl = type opaque
%struct.WGPUComputePassEncoderImpl = type opaque
%struct.WGPUCommandEncoderImpl = type opaque
%struct.WGPUComputePassDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPURenderPassEncoderImpl = type opaque
%struct.WGPURenderPassDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, %struct.WGPURenderPassColorAttachment*, %struct.WGPURenderPassDepthStencilAttachment*, %struct.WGPUQuerySetImpl* }
%struct.WGPURenderPassColorAttachment = type { %struct.WGPUTextureViewImpl*, %struct.WGPUTextureViewImpl*, i32, i32, %struct.WGPUColor, %struct.WGPUTextureViewImpl* }
%struct.WGPUColor = type { double, double, double, double }
%struct.WGPUTextureViewImpl = type opaque
%struct.WGPURenderPassDepthStencilAttachment = type { %struct.WGPUTextureViewImpl*, i32, i32, float, i8, i32, i32, i32, i8, %struct.WGPUTextureViewImpl* }
%struct.WGPUQuerySetImpl = type opaque
%struct.WGPUImageCopyBuffer = type { %struct.WGPUChainedStruct*, %struct.WGPUTextureDataLayout, %struct.WGPUBufferImpl* }
%struct.WGPUTextureDataLayout = type { %struct.WGPUChainedStruct*, i64, i32, i32 }
%struct.WGPUImageCopyTexture = type { %struct.WGPUChainedStruct*, %struct.WGPUTextureImpl*, i32, %struct.WGPUOrigin3D, i32 }
%struct.WGPUTextureImpl = type opaque
%struct.WGPUOrigin3D = type { i32, i32, i32 }
%struct.WGPUExtent3D = type { i32, i32, i32 }
%struct.WGPUCommandBufferDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPUComputePipelineImpl = type opaque
%struct.WGPUBindGroupDescriptor = type { %struct.WGPUChainedStruct*, i8*, %struct.WGPUBindGroupLayoutImpl*, i32, %struct.WGPUBindGroupEntry* }
%struct.WGPUBindGroupEntry = type { i32, %struct.WGPUBufferImpl*, i64, i64, %struct.WGPUSamplerImpl*, %struct.WGPUTextureViewImpl* }
%struct.WGPUSamplerImpl = type opaque
%struct.WGPUBindGroupLayoutDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, %struct.WGPUBindGroupLayoutEntry* }
%struct.WGPUBindGroupLayoutEntry = type { %struct.WGPUChainedStruct*, i32, i32, %struct.WGPUBufferBindingLayout, %struct.WGPUSamplerBindingLayout, %struct.WGPUTextureBindingLayout, %struct.WGPUStorageTextureBindingLayout }
%struct.WGPUBufferBindingLayout = type { %struct.WGPUChainedStruct*, i32, i8, i64 }
%struct.WGPUSamplerBindingLayout = type { %struct.WGPUChainedStruct*, i32 }
%struct.WGPUTextureBindingLayout = type { %struct.WGPUChainedStruct*, i32, i32, i8 }
%struct.WGPUStorageTextureBindingLayout = type { %struct.WGPUChainedStruct*, i32, i32, i32 }
%struct.WGPUBufferDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i64, i8 }
%struct.WGPUCommandEncoderDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPUComputePipelineDescriptor = type { %struct.WGPUChainedStruct*, i8*, %struct.WGPUPipelineLayoutImpl*, %struct.WGPUProgrammableStageDescriptor }
%struct.WGPUPipelineLayoutImpl = type opaque
%struct.WGPUProgrammableStageDescriptor = type { %struct.WGPUChainedStruct*, %struct.WGPUShaderModuleImpl*, i8* }
%struct.WGPUShaderModuleImpl = type opaque
%struct.WGPUExternalTextureImpl = type opaque
%struct.WGPUExternalTextureDescriptor = type { %struct.WGPUChainedStruct*, %struct.WGPUTextureViewImpl*, i32 }
%struct.WGPUPipelineLayoutDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, %struct.WGPUBindGroupLayoutImpl** }
%struct.WGPUQuerySetDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32, i32*, i32 }
%struct.WGPURenderBundleEncoderImpl = type opaque
%struct.WGPURenderBundleEncoderDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32*, i32, i32 }
%struct.WGPURenderPipelineImpl = type opaque
%struct.WGPURenderPipelineDescriptor = type { %struct.WGPUChainedStruct*, i8*, %struct.WGPUPipelineLayoutImpl*, %struct.WGPUVertexState, %struct.WGPUPrimitiveState, %struct.WGPUDepthStencilState*, %struct.WGPUMultisampleState, %struct.WGPUFragmentState* }
%struct.WGPUVertexState = type { %struct.WGPUChainedStruct*, %struct.WGPUShaderModuleImpl*, i8*, i32, %struct.WGPUVertexBufferLayout* }
%struct.WGPUVertexBufferLayout = type { i64, i32, i32, %struct.WGPUVertexAttribute* }
%struct.WGPUVertexAttribute = type { i32, i64, i32 }
%struct.WGPUPrimitiveState = type { %struct.WGPUChainedStruct*, i32, i32, i32, i32 }
%struct.WGPUDepthStencilState = type { %struct.WGPUChainedStruct*, i32, i8, i32, %struct.WGPUStencilFaceState, %struct.WGPUStencilFaceState, i32, i32, i32, float, float }
%struct.WGPUStencilFaceState = type { i32, i32, i32, i32 }
%struct.WGPUMultisampleState = type { %struct.WGPUChainedStruct*, i32, i32, i8 }
%struct.WGPUFragmentState = type { %struct.WGPUChainedStruct*, %struct.WGPUShaderModuleImpl*, i8*, i32, %struct.WGPUColorTargetState* }
%struct.WGPUColorTargetState = type { %struct.WGPUChainedStruct*, i32, %struct.WGPUBlendState*, i32 }
%struct.WGPUBlendState = type { %struct.WGPUBlendComponent, %struct.WGPUBlendComponent }
%struct.WGPUBlendComponent = type { i32, i32, i32 }
%struct.WGPUSamplerDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32, i32, i32, i32, i32, float, float, i32, i16 }
%struct.WGPUShaderModuleDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPUSwapChainImpl = type opaque
%struct.WGPUSurfaceImpl = type opaque
%struct.WGPUSwapChainDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32, i32, i32, i32, i64 }
%struct.WGPUTextureDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32, %struct.WGPUExtent3D, i32, i32, i32 }
%struct.WGPUQueueImpl = type opaque
%struct.WGPUSurfaceDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPUCopyTextureForBrowserOptions = type { %struct.WGPUChainedStruct*, i8 }
%struct.WGPURenderBundleImpl = type opaque
%struct.WGPURenderBundleDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPUCompilationInfo = type { i32, %struct.WGPUCompilationMessage* }
%struct.WGPUCompilationMessage = type { i8*, i32, i64, i64, i64, i64 }
%struct.WGPUTextureViewDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::WebGPURecyclableResourceCache" = type { %"class.WTF::Deque", i64, i64, i32, %"class.gpu::webgpu::WebGPUInterface"*, %class.scoped_refptr.83, %"class.base::RepeatingCallback", i8, i32, %"class.base::WeakPtr.112", %"class.base::WeakPtrFactory.113" }
%"class.WTF::Deque" = type { %"class.WTF::Deque<blink::WebGPURecyclableResourceCache::Resource, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::WebGPURecyclableResourceCache::Resource, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"struct.blink::WebGPURecyclableResourceCache::Resource"*, i32, i32 }
%"struct.blink::WebGPURecyclableResourceCache::Resource" = type { %"class.std::__1::unique_ptr.24", i32, i32 }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.blink::CanvasResourceProvider"* }
%"class.blink::CanvasResourceProvider" = type { %"class.blink::WebGraphicsContext3DProviderWrapper::DestructionObserver", %"class.base::CheckedObserver", %"class.blink::CanvasMemoryDumpClient", i32, %class.sk_sp, i32, %"class.base::WeakPtr", %"class.base::WeakPtr.28", %"class.blink::IntSize", i32, %"class.blink::CanvasResourceParams", i8, %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.64", i8, i32, i32, i32, %"class.WTF::Vector", i8, i8, i64, i64, %"class.base::RepeatingCallback.88", %"class.blink::IdentifiabilityPaintOpDigest", %"class.base::WeakPtrFactory.108" }
%"class.blink::WebGraphicsContext3DProviderWrapper::DestructionObserver" = type { i32 (...)** }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory.27" }
%"class.base::WeakPtrFactory.27" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::CanvasMemoryDumpClient" = type { i32 (...)** }
%class.sk_sp = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.SkSurfaceProps = type { i32, i32 }
%"class.base::WeakPtr.28" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::CanvasResourceParams" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.blink::CanvasResourceProvider::CanvasImageProvider"* }
%"class.blink::CanvasResourceProvider::CanvasImageProvider" = type opaque
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.cc::SkiaPaintCanvas"* }
%"class.cc::SkiaPaintCanvas" = type <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.55", %"class.cc::ImageProvider"*, %"struct.cc::SkiaPaintCanvas::ContextFlushes", i32, [4 x i8] }>
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.38, [384 x i64], %class.sk_sp.39, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.40", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.46" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.38 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.39 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%class.SkBitmap = type { %class.sk_sp.52, %class.SkPixmap, %class.sk_sp.54 }
%class.sk_sp.52 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.53, i32, i32 }
%class.sk_sp.53 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.5" }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.54 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %class.SkCanvas* }
%"class.cc::ImageProvider" = type { i32 (...)** }
%"struct.cc::SkiaPaintCanvas::ContextFlushes" = type { i8, i32 }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.blink::MemoryManagedPaintRecorder"* }
%"class.blink::MemoryManagedPaintRecorder" = type { %"class.cc::PaintRecorder", %"class.base::RepeatingCallback" }
%"class.cc::PaintRecorder" = type { i32 (...)**, %class.scoped_refptr.67, %"class.std::__1::unique_ptr.68" }
%class.scoped_refptr.67 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.cc::RecordPaintCanvas"* }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional", %struct.SkRect }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer.79" }
%"class.WTF::VectorBuffer.79" = type { %"class.WTF::VectorBufferBase.80" }
%"class.WTF::VectorBufferBase.80" = type { %class.scoped_refptr.81*, i32, i32 }
%class.scoped_refptr.81 = type { %"class.blink::CanvasResource"* }
%"class.blink::CanvasResource" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", %"class.base::PlatformThreadRef", %class.scoped_refptr.83, %"struct.gpu::SyncToken", %"class.base::WeakPtr.85", i32, %"class.blink::CanvasResourceParams" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.82" }
%"class.base::RefCountedThreadSafe.82" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::PlatformThreadRef" = type { i64 }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType", i64 }
%"class.base::WeakPtr.85" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::RepeatingCallback.88" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.74 }
%class.scoped_refptr.74 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.75", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.75" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::IdentifiabilityPaintOpDigest" = type <{ i32, [4 x i8], %"class.blink::IdentifiableTokenBuilder", i32, [4 x i8], i64, %"class.blink::IntSize", %"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider", %"class.cc::ClientPaintCache", %"struct.cc::PaintOp::SerializeOptions", i8, i8, [6 x i8] }>
%"class.blink::IdentifiableTokenBuilder" = type { %"struct.std::__1::array", i8*, i64 }
%"struct.std::__1::array" = type { [64 x i8] }
%"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider" = type { %"class.cc::ImageProvider", %"class.blink::IdentifiabilityPaintOpDigest"* }
%"class.cc::ClientPaintCache" = type { %"class.base::MRUCache", i64, i64, %"class.base::StackVector" }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::map", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.89" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.94", %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"class.base::StackVector" = type { %"class.base::StackContainer" }
%"class.base::StackContainer" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source", %"class.base::StackAllocator", %"class.std::__1::vector.103" }
%"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source" = type { [8 x i8], i8, [3 x i8] }
%"class.base::StackAllocator" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source"* }
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.105" }
%"struct.std::__1::pair" = type { i32, i32 }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106", %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"struct.std::__1::pair"* }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.base::StackAllocator" }
%"struct.cc::PaintOp::SerializeOptions" = type <{ %"class.cc::ImageProvider"*, %"class.cc::TransferCacheSerializeHelper"*, %"class.cc::ClientPaintCache"*, %class.SkStrikeServer*, %class.sk_sp.53, i8, i8, [2 x i8], i32, i8, [7 x i8] }>
%"class.cc::TransferCacheSerializeHelper" = type opaque
%class.SkStrikeServer = type opaque
%"class.base::WeakPtrFactory.108" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.scoped_refptr.83 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.84" }>
%"class.base::RefCountedThreadSafe.84" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr.112" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.113" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.WTF::String" = type { %class.scoped_refptr.114 }
%class.scoped_refptr.114 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.115" }
%"struct.std::__1::atomic.115" = type { %"struct.std::__1::__atomic_base.116" }
%"struct.std::__1::__atomic_base.116" = type { %"struct.std::__1::__atomic_base.117" }
%"struct.std::__1::__atomic_base.117" = type { %"struct.std::__1::__cxx_atomic_impl.118" }
%"struct.std::__1::__cxx_atomic_impl.118" = type { %"struct.std::__1::__cxx_atomic_base_impl.119" }
%"struct.std::__1::__cxx_atomic_base_impl.119" = type { i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::GPUDevice"* }
%"class.blink::WebGPUSwapBufferProvider::Client" = type { i32 (...)** }
%class.scoped_refptr.162 = type { %"class.blink::WebGPUSwapBufferProvider"* }
%"class.blink::WebGPUSwapBufferProvider" = type <{ %"class.cc::TextureLayerClient", %"class.WTF::RefCounted.163", [4 x i8], %class.scoped_refptr, %"class.blink::WebGPUSwapBufferProvider::Client"*, %struct.WGPUDeviceImpl*, %class.scoped_refptr.165, i8, [3 x i8], i32, %"class.WTF::Vector.292", i32, i32, %"class.std::__1::unique_ptr.295", i32, [4 x i8] }>
%"class.cc::TextureLayerClient" = type { i32 (...)** }
%"class.WTF::RefCounted.163" = type { %"class.base::RefCounted.164" }
%"class.base::RefCounted.164" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.165 = type { %"class.cc::TextureLayer"* }
%"class.cc::TextureLayer" = type { %"class.cc::Layer", %"class.cc::SharedBitmapIdRegistrar", %"class.cc::TextureLayerClient"*, i8, i8, %"class.gfx::PointF", %"class.gfx::PointF", i8, i8, i8, %"class.std::__1::unique_ptr.254", i8, %"class.base::flat_map.274", %"class.base::flat_map.274", %"class.std::__1::vector.284", %"class.base::WeakPtrFactory.291" }
%"class.cc::Layer" = type <{ i32 (...)**, %"class.base::RefCounted.166", [4 x i8], %"class.cc::Layer"*, %"class.cc::LayerTreeHost"*, %"struct.cc::Layer::Inputs", %"class.std::__1::unique_ptr.183", i32, i32, i32, i32, i32, i32, %"class.gfx::Vector2dF", i8, i16, [5 x i8], %"class.std::__1::unique_ptr.228" }>
%"class.base::RefCounted.166" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::LayerTreeHost" = type opaque
%"struct.cc::Layer::Inputs" = type { %"class.std::__1::vector.167", %"class.gfx::Rect", %"class.gfx::Size", i32, i8, i32, %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", %"struct.cc::ElementId" }
%"class.std::__1::vector.167" = type { %"class.std::__1::__vector_base.168" }
%"class.std::__1::__vector_base.168" = type { %class.scoped_refptr.169*, %class.scoped_refptr.169*, %"class.std::__1::__compressed_pair.170" }
%class.scoped_refptr.169 = type opaque
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %class.scoped_refptr.169* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.175" }
%"class.std::__1::vector.175" = type { %"class.std::__1::__vector_base.176" }
%"class.std::__1::__vector_base.176" = type { %"struct.std::__1::pair.177"*, %"struct.std::__1::pair.177"*, %"class.std::__1::__compressed_pair.178" }
%"struct.std::__1::pair.177" = type opaque
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"struct.std::__1::pair.177"* }
%"class.cc::Region" = type { %class.SkRegion }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%"struct.SkRegion::RunHead" = type opaque
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"struct.cc::Layer::LayerTreeInputs"* }
%"struct.cc::Layer::LayerTreeInputs" = type { %"class.gfx::Rect", %"class.cc::PictureLayer"*, float, i32, i8, %"class.gfx::PointF", %"class.gfx::Transform", %"class.gfx::Point3F", %"class.viz::SubtreeCaptureId", i32, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.211", float, i32, %"class.gfx::ScrollOffset", %"class.gfx::Size", %"class.gfx::RoundedCornersF", %"class.base::RepeatingCallback.216", %"class.std::__1::vector.217" }
%"class.cc::PictureLayer" = type opaque
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.gfx::Point3F" = type { float, float, float }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.186" }
%"class.std::__1::vector.186" = type { %"class.std::__1::__vector_base.187" }
%"class.std::__1::__vector_base.187" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.206" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.188, [20 x float], i32, [4 x i8], %"class.std::__1::vector.199", i32, [4 x i8] }>
%class.sk_sp.188 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.189, i32, %"class.absl::optional.190", i8, i32 }
%class.sk_sp.189 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.190" = type { %"class.absl::optional_internal::optional_data.191" }
%"class.absl::optional_internal::optional_data.191" = type { %"class.absl::optional_internal::optional_data_base.192" }
%"class.absl::optional_internal::optional_data_base.192" = type { %"class.absl::optional_internal::optional_data_dtor_base.193" }
%"class.absl::optional_internal::optional_data_dtor_base.193" = type { i8, %union.anon.194 }
%union.anon.194 = type { %struct.SkRect }
%"class.std::__1::vector.199" = type { %"class.std::__1::__vector_base.200" }
%"class.std::__1::__vector_base.200" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.211" = type { %"class.absl::optional_internal::optional_data.212" }
%"class.absl::optional_internal::optional_data.212" = type { %"class.absl::optional_internal::optional_data_base.213" }
%"class.absl::optional_internal::optional_data_base.213" = type { %"class.absl::optional_internal::optional_data_dtor_base.214" }
%"class.absl::optional_internal::optional_data_dtor_base.214" = type { i8, %union.anon.215 }
%union.anon.215 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.gfx::RoundedCornersF" = type { float, float, float, float }
%"class.base::RepeatingCallback.216" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::vector.217" = type { %"class.std::__1::__vector_base.218" }
%"class.std::__1::__vector_base.218" = type { %"class.std::__1::unique_ptr.219"*, %"class.std::__1::unique_ptr.219"*, %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::unique_ptr.219" = type opaque
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.std::__1::unique_ptr.219"* }
%"class.gfx::Vector2dF" = type { float, float }
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.237", %"class.std::__1::vector.237", %"class.std::__1::vector.244" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.233 }
%union.anon.233 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.237" = type { %"class.std::__1::__vector_base.238" }
%"class.std::__1::__vector_base.238" = type { i8**, i8**, %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { i8** }
%"class.std::__1::vector.244" = type { %"class.std::__1::__vector_base.245" }
%"class.std::__1::__vector_base.245" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.246" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%"class.cc::SharedBitmapIdRegistrar" = type { i32 (...)** }
%"class.std::__1::unique_ptr.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"class.cc::TextureLayer::TransferableResourceHolder::MainThreadReference"* }
%"class.cc::TextureLayer::TransferableResourceHolder::MainThreadReference" = type { %class.scoped_refptr.257 }
%class.scoped_refptr.257 = type { %"class.cc::TextureLayer::TransferableResourceHolder"* }
%"class.cc::TextureLayer::TransferableResourceHolder" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.258", i32, %"struct.viz::TransferableResource", %"class.base::OnceCallback", %"class.base::Lock", %"struct.gpu::SyncToken", i8, %"class.base::ThreadChecker", [6 x i8] }>
%"class.base::RefCountedThreadSafe.258" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.viz::TransferableResource" = type { %"class.util::IdType.259", i8, %"class.gfx::Size", i32, [4 x i8], %"struct.gpu::MailboxHolder", %"class.gfx::ColorSpace", %"class.absl::optional.261", i8, i32, i8, [7 x i8], %"class.absl::optional.266" }
%"struct.gpu::MailboxHolder" = type <{ %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", i32, [4 x i8] }>
%"class.absl::optional.261" = type { %"class.absl::optional_internal::optional_data.262" }
%"class.absl::optional_internal::optional_data.262" = type { %"class.absl::optional_internal::optional_data_base.263" }
%"class.absl::optional_internal::optional_data_base.263" = type { %"class.absl::optional_internal::optional_data_dtor_base.264" }
%"class.absl::optional_internal::optional_data_dtor_base.264" = type { i8, %union.anon.265 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::flat_map.274" = type { %"class.base::internal::flat_tree.275" }
%"class.base::internal::flat_tree.275" = type { %"class.std::__1::vector.276" }
%"class.std::__1::vector.276" = type { %"class.std::__1::__vector_base.277" }
%"class.std::__1::__vector_base.277" = type { %"struct.std::__1::pair.278"*, %"struct.std::__1::pair.278"*, %"class.std::__1::__compressed_pair.279" }
%"struct.std::__1::pair.278" = type opaque
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.std::__1::pair.278"* }
%"class.std::__1::vector.284" = type { %"class.std::__1::__vector_base.285" }
%"class.std::__1::__vector_base.285" = type { %"struct.gpu::Mailbox"*, %"struct.gpu::Mailbox"*, %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"struct.gpu::Mailbox"* }
%"class.base::WeakPtrFactory.291" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"class.std::__1::unique_ptr.295"*, i32, i32 }
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"struct.blink::WebGPUSwapBufferProvider::SwapBuffer"* }
%"struct.blink::WebGPUSwapBufferProvider::SwapBuffer" = type { %"class.gfx::Size", %"struct.gpu::Mailbox", %"class.blink::WebGPUSwapBufferProvider"*, %"struct.gpu::SyncToken" }
%"class.blink::Member.303" = type { %"class.blink::MemberBase.304" }
%"class.blink::MemberBase.304" = type { %"class.blink::GPUCanvasContext"* }
%"class.blink::Member.309" = type { %"class.blink::MemberBase.310" }
%"class.blink::MemberBase.310" = type { %"class.blink::GPUTexture"* }
%"class.blink::GPUTexture" = type { %"class.blink::DawnObject.311", i32, %class.scoped_refptr.312 }
%"class.blink::DawnObject.311" = type { %"class.blink::DawnObjectImpl", %struct.WGPUTextureImpl*, %struct.WGPUDeviceImpl* }
%class.scoped_refptr.312 = type { %"class.blink::WebGPUMailboxTexture"* }
%"class.blink::WebGPUMailboxTexture" = type { %"class.WTF::RefCounted.313", %class.scoped_refptr, %struct.WGPUDeviceImpl*, %"class.base::OnceCallback.315", %struct.WGPUTextureImpl*, i32, i32, %"class.std::__1::unique_ptr.316" }
%"class.WTF::RefCounted.313" = type { %"class.base::RefCounted.314" }
%"class.base::RefCounted.314" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::OnceCallback.315" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.316" = type { %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"class.blink::RecyclableCanvasResource"* }
%"class.blink::RecyclableCanvasResource" = type { %"class.std::__1::unique_ptr.24", %"struct.blink::ResourceCacheKey", %"class.base::WeakPtr.112" }
%"struct.blink::ResourceCacheKey" = type <{ %"class.blink::IntSize", %"class.blink::CanvasResourceParams", i8, [3 x i8] }>
%"class.blink::GPUCanvasContext" = type <{ %"class.blink::CanvasRenderingContext.base", [3 x i8], i32, %"class.blink::Member.307", i8, [7 x i8] }>
%"class.blink::CanvasRenderingContext.base" = type <{ %"class.blink::ScriptWrappable", %"class.base::TaskObserver", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.blink::Member.305", %"class.blink::CanvasColorParams", [4 x i8], %"class.blink::CanvasContextCreationAttributesCore", i8 }>
%"class.base::TaskObserver" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.305" = type { %"class.blink::MemberBase.306" }
%"class.blink::MemberBase.306" = type { %"class.blink::CanvasRenderingContextHost"* }
%"class.blink::CanvasRenderingContextHost" = type { %"class.blink::CanvasResourceHost.base", %"class.blink::CanvasImageSource", %"class.blink::GarbageCollectedMixin", i8, i8, i32 }
%"class.blink::CanvasResourceHost.base" = type <{ i32 (...)**, %"class.std::__1::unique_ptr.24", i32 }>
%"class.blink::CanvasImageSource" = type { i32 (...)** }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::CanvasColorParams" = type { i32, i32, i32 }
%"class.blink::CanvasContextCreationAttributesCore" = type <{ i32 (...)**, i8, i8, [6 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8], %"class.WTF::String", i8, i8, [6 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.blink::Member.307" = type { %"class.blink::MemberBase.308" }
%"class.blink::MemberBase.308" = type { %"class.blink::GPUSwapChain"* }
%"class.blink::GPUDevice" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ExecutionContextClient", %"class.blink::DawnObject", %"class.blink::Member.141", %"class.blink::Member.143", %"class.blink::Member.145", %"class.blink::Member.147", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.155", i32, [4 x i8] }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.133" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.124" }
%"class.WTF::Vector.124" = type { %"class.WTF::VectorBuffer.125" }
%"class.WTF::VectorBuffer.125" = type { %"class.WTF::VectorBufferBase.126", [32 x i8] }
%"class.WTF::VectorBufferBase.126" = type { %"struct.std::__1::pair.127"*, i32, i32 }
%"struct.std::__1::pair.127" = type { %"class.WTF::AtomicString", %"class.blink::Member.128" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member.128" = type { %"class.blink::MemberBase.129" }
%"class.blink::MemberBase.129" = type { %"class.blink::HeapVector.130"* }
%"class.blink::HeapVector.130" = type opaque
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.WTF::Vector.136"* }
%"class.WTF::Vector.136" = type opaque
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.140" }
%"class.blink::MemberBase.140" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.356", i32, i8, [3 x i8], %"class.blink::HeapVector.358", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.366", %"class.blink::Member.368", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.377", %"class.blink::Member.383", %"class.blink::Member.385", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.330" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.327" }
%"class.WTF::HashTable.327" = type <{ %"class.blink::WeakMember.329"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.329" = type opaque
%"class.blink::Supplementable.330" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.331" }
%"class.blink::HeapHashMap.331" = type { %"class.WTF::HashMap.334" }
%"class.WTF::HashMap.334" = type { %"class.WTF::HashTable.335" }
%"class.WTF::HashTable.335" = type <{ %"struct.WTF::KeyValuePair.337"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.337" = type { i8*, %"class.blink::Member.651" }
%"class.blink::Member.651" = type { %"class.blink::MemberBase.652" }
%"class.blink::MemberBase.652" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.653" }
%"class.blink::Member.653" = type { %"class.blink::MemberBase.654" }
%"class.blink::MemberBase.654" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.338, %"class.std::__1::unique_ptr.339", %"class.std::__1::unique_ptr.339", %"class.std::__1::unique_ptr.345", %"class.std::__1::unique_ptr.345", %"class.blink::Member.351", i32, [4 x i8], %"class.WTF::HashSet.352", i32, i32 }
%class.scoped_refptr.338 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.339" = type { %"class.std::__1::__compressed_pair.340" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.345" = type { %"class.std::__1::__compressed_pair.346" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"struct.std::__1::__compressed_pair_elem.347" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.351" = type { %"class.blink::MemberBase.140" }
%"class.WTF::HashSet.352" = type { %"class.WTF::HashTable.353" }
%"class.WTF::HashTable.353" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.356" = type { %"class.blink::MemberBase.357" }
%"class.blink::MemberBase.357" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.358" = type { %"class.WTF::Vector.361" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.363" }
%"class.WTF::VectorBufferBase.363" = type { %"class.blink::Member.364"*, i32, i32 }
%"class.blink::Member.364" = type opaque
%"class.blink::Member.366" = type { %"class.blink::MemberBase.367" }
%"class.blink::MemberBase.367" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.368" = type { %"class.blink::MemberBase.369" }
%"class.blink::MemberBase.369" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.370", i32, i32 }
%"class.blink::HeapHashMap.370" = type { %"class.WTF::HashMap.373" }
%"class.WTF::HashMap.373" = type { %"class.WTF::HashTable.374" }
%"class.WTF::HashTable.374" = type <{ %"struct.WTF::KeyValuePair.376"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.376" = type opaque
%"class.std::__1::unique_ptr.377" = type { %"class.std::__1::__compressed_pair.378" }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.383" = type { %"class.blink::MemberBase.384" }
%"class.blink::MemberBase.384" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.385" = type { %"class.blink::MemberBase.386" }
%"class.blink::MemberBase.386" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::DawnObject" = type { %"class.blink::DawnObjectBase", %struct.WGPUDeviceImpl* }
%"class.blink::Member.141" = type { %"class.blink::MemberBase.142" }
%"class.blink::MemberBase.142" = type { %"class.blink::GPUAdapter"* }
%"class.blink::GPUAdapter" = type opaque
%"class.blink::Member.143" = type { %"class.blink::MemberBase.144" }
%"class.blink::MemberBase.144" = type { %"class.blink::GPUSupportedFeatures"* }
%"class.blink::GPUSupportedFeatures" = type opaque
%"class.blink::Member.145" = type { %"class.blink::MemberBase.146" }
%"class.blink::MemberBase.146" = type { %"class.blink::GPUQueue"* }
%"class.blink::GPUQueue" = type opaque
%"class.blink::Member.147" = type { %"class.blink::MemberBase.148" }
%"class.blink::MemberBase.148" = type { %"class.blink::ScriptPromiseProperty"* }
%"class.blink::ScriptPromiseProperty" = type opaque
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::DawnCallback"* }
%"class.blink::DawnCallback" = type opaque
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::DawnCallback.158"* }
%"class.blink::DawnCallback.158" = type opaque
%"class.blink::StaticBitmapImage" = type <{ %"class.blink::Image", %"class.blink::ImageOrientation", i8, [6 x i8] }>
%"class.blink::Image" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted.580", i8, %class.scoped_refptr.582, %"class.blink::WeakPersistent", i32, i8, %"class.std::__1::unique_ptr.596" }
%"class.WTF::ThreadSafeRefCounted.580" = type { %"class.base::RefCountedThreadSafe.581" }
%"class.base::RefCountedThreadSafe.581" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.582 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.583", i64, %"class.WTF::Vector.585", %"class.WTF::Vector.590" }
%"class.WTF::RefCounted.583" = type { %"class.base::RefCounted.584" }
%"class.base::RefCounted.584" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.585" = type { %"class.WTF::VectorBuffer.586" }
%"class.WTF::VectorBuffer.586" = type { %"class.WTF::VectorBufferBase.587" }
%"class.WTF::VectorBufferBase.587" = type { i8*, i32, i32 }
%"class.WTF::Vector.590" = type { %"class.WTF::VectorBuffer.591" }
%"class.WTF::VectorBuffer.591" = type { %"class.WTF::VectorBufferBase.592" }
%"class.WTF::VectorBufferBase.592" = type { %"class.std::__1::unique_ptr.593"*, i32, i32 }
%"class.std::__1::unique_ptr.593" = type opaque
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ImageObserver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ImageObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.std::__1::unique_ptr.596" = type { %"class.std::__1::__compressed_pair.597" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.598" }
%"struct.std::__1::__compressed_pair_elem.598" = type { %"class.blink::DarkModeImageCache"* }
%"class.blink::DarkModeImageCache" = type opaque
%"class.blink::ImageOrientation" = type { i8 }
%class.sk_sp.603 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%"class.blink::UnacceleratedStaticBitmapImage" = type { %"class.blink::StaticBitmapImage.base", %"class.cc::PaintImage", %class.sk_sp.603, %class.scoped_refptr.83 }
%"class.blink::StaticBitmapImage.base" = type <{ %"class.blink::Image", %"class.blink::ImageOrientation", i8 }>
%"class.cc::PaintImage" = type { %class.sk_sp.603, %class.sk_sp.604, %"class.gfx::Rect", i32, %class.sk_sp.609, %class.sk_sp.617, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.603, %class.scoped_refptr.618 }
%class.sk_sp.604 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.605", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.605" = type { %"class.std::__1::__compressed_pair.606" }
%"class.std::__1::__compressed_pair.606" = type { %"struct.std::__1::__compressed_pair_elem.607" }
%"struct.std::__1::__compressed_pair_elem.607" = type { i8* }
%class.sk_sp.609 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.610" }
%"class.std::__1::vector.610" = type { %"class.std::__1::__vector_base.611" }
%"class.std::__1::__vector_base.611" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.612" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.613" }
%"struct.std::__1::__compressed_pair_elem.613" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.617 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type { %class.SkRefCnt.base, [4 x i8] }
%class.scoped_refptr.618 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.619", [4 x i8] }>
%"class.base::RefCountedThreadSafe.619" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.blink::Thread" = type { i32 (...)** }
%"class.blink::AcceleratedStaticBitmapImage" = type <{ %"class.blink::StaticBitmapImage.base", %"struct.gpu::Mailbox", [6 x i8], %struct.SkImageInfo, i32, i8, [3 x i8], %"class.base::WeakPtr", %class.scoped_refptr.621, %"class.base::WeakPtr", %class.sk_sp.624, i32, [4 x i8] }>
%class.scoped_refptr.621 = type { %"class.blink::MailboxRef"* }
%"class.blink::MailboxRef" = type { %"class.WTF::ThreadSafeRefCounted.622", %"struct.gpu::SyncToken", %"class.base::PlatformThreadRef", %class.scoped_refptr.83, %"class.base::OnceCallback" }
%"class.WTF::ThreadSafeRefCounted.622" = type { %"class.base::RefCountedThreadSafe.623" }
%"class.base::RefCountedThreadSafe.623" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.sk_sp.624 = type { %"class.blink::MailboxTextureBacking"* }
%"class.blink::MailboxTextureBacking" = type opaque
%"class.blink::ExternalCanvasResource" = type <{ %"class.blink::CanvasResource", %"class.base::WeakPtr", %"class.blink::IntSize", %"struct.gpu::Mailbox", i32, [4 x i8], %"class.base::OnceCallback", %"struct.gpu::SyncToken", i8, i8, i8, i8, [4 x i8] }>
%"class.blink::CanvasRenderingContext" = type <{ %"class.blink::ScriptWrappable", %"class.base::TaskObserver", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.blink::Member.305", %"class.blink::CanvasColorParams", [4 x i8], %"class.blink::CanvasContextCreationAttributesCore", i8, [7 x i8] }>
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.645, %"class.blink::Member.646", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.645 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.646" = type { %"class.blink::MemberBase.647" }
%"class.blink::MemberBase.647" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.648" }
%"class.blink::Persistent.648" = type { %"class.blink::PersistentBase.649" }
%"class.blink::PersistentBase.649" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr.640" }
%"class.util::TokenType" = type { %"class.base::StrongAlias.650" }
%"class.base::StrongAlias.650" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink12GPUSwapChain18GetWrapperTypeInfoEv = comdat any

$_ZN5blink10TraceTraitINS_16GPUCanvasContextEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_10GPUTextureEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink12GPUSwapChainE = hidden unnamed_addr constant { [12 x i8*], [3 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::GPUSwapChain"*)* @_ZN5blink12GPUSwapChainD2Ev to i8*), i8* bitcast (void (%"class.blink::GPUSwapChain"*)* @_ZN5blink12GPUSwapChainD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::GPUSwapChain"*, %"class.blink::Visitor"*)* @_ZNK5blink12GPUSwapChain5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::GPUSwapChain"*)* @_ZNK5blink12GPUSwapChain18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (void (%"class.blink::GPUSwapChain"*)* @_ZN5blink12GPUSwapChain20OnTextureTransferredEv to i8*)], [3 x i8*] [i8* inttoptr (i64 -40 to i8*), i8* null, i8* bitcast (void (%"class.blink::GPUSwapChain"*)* @_ZThn40_N5blink12GPUSwapChain20OnTextureTransferredEv to i8*)] }, align 8
@__const._ZN5blink12GPUSwapChain20ExportCanvasResourceEv.transferable_resource = private unnamed_addr constant { %"class.util::IdType.259", i8, [3 x i8], %"class.gfx::Size", i32, [4 x i8], <{ %"struct.gpu::Mailbox", { i8, i8, [6 x i8], %"class.util::IdType", i64 }, i32, [4 x i8] }>, %"class.gfx::ColorSpace", { { { { i8, [3 x i8], %union.anon.265 } } } }, i8, [3 x i8], i32, i8, [7 x i8], %"class.absl::optional.266" } { %"class.util::IdType.259" { %"class.base::StrongAlias.260" { i32 -1431655766 } }, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", <{ %"struct.gpu::Mailbox", { i8, i8, [6 x i8], %"class.util::IdType", i64 }, i32, [4 x i8] }> <{ %"struct.gpu::Mailbox" { [16 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" }, { i8, i8, [6 x i8], %"class.util::IdType", i64 } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.util::IdType" { %"class.base::StrongAlias" { i64 -6148914691236517206 } }, i64 -6148914691236517206 }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }>, %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, { { { { i8, [3 x i8], %union.anon.265 } } } } { { { { i8, [3 x i8], %union.anon.265 } } } { { { i8, [3 x i8], %union.anon.265 } } { { i8, [3 x i8], %union.anon.265 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.265 { %"struct.gfx::HDRMetadata" { %"struct.gfx::MasteringMetadata" { %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766, i32 -1431655766 } } } } } }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"class.absl::optional.266" { %"class.absl::optional_internal::optional_data.267" { %"class.absl::optional_internal::optional_data_base.268" { %"class.absl::optional_internal::optional_data_dtor_base.269" { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.270 { %"struct.gpu::VulkanYCbCrInfo" <{ i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i64 -6148914691236517206, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }> } } } } } }, align 8
@_ZN5blink12GPUSwapChain18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4

@_ZN5blink12GPUSwapChainC1EPNS_16GPUCanvasContextEPNS_9GPUDeviceE16WGPUTextureUsage17WGPUTextureFormat15SkFilterQuality = hidden unnamed_addr alias void (%"class.blink::GPUSwapChain"*, %"class.blink::GPUCanvasContext"*, %"class.blink::GPUDevice"*, i32, i32, i32), void (%"class.blink::GPUSwapChain"*, %"class.blink::GPUCanvasContext"*, %"class.blink::GPUDevice"*, i32, i32, i32)* @_ZN5blink12GPUSwapChainC2EPNS_16GPUCanvasContextEPNS_9GPUDeviceE16WGPUTextureUsage17WGPUTextureFormat15SkFilterQuality
@_ZN5blink12GPUSwapChainD1Ev = hidden unnamed_addr alias void (%"class.blink::GPUSwapChain"*), void (%"class.blink::GPUSwapChain"*)* @_ZN5blink12GPUSwapChainD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12GPUSwapChainC2EPNS_16GPUCanvasContextEPNS_9GPUDeviceE16WGPUTextureUsage17WGPUTextureFormat15SkFilterQuality(%"class.blink::GPUSwapChain"*, %"class.blink::GPUCanvasContext"*, %"class.blink::GPUDevice"*, i32, i32, i32) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::GPUSwapChain", %"class.blink::GPUSwapChain"* %0, i64 0, i32 0
  tail call void @_ZN5blink14DawnObjectImplC2EPNS_9GPUDeviceE(%"class.blink::DawnObjectImpl"* %7, %"class.blink::GPUDevice"* %2) #7
  %8 = getelementptr inbounds %"class.blink::GPUSwapChain", %"class.blink::GPUSwapChain"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.blink::WebGPUSwapBufferProvider::Client", %"class.blink::WebGPUSwapBufferProvider::Client"* %8, i64 0, i32 0
  %10 = getelementptr inbounds %"class.blink::GPUSwapChain", %"class.blink::GPUSwapChain"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [3 x i8*] }, { [12 x i8*], [3 x i8*] }* @_ZTVN5blink12GPUSwapChainE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [3 x i8*] }, { [12 x i8*], [3 x i8*] }* @_ZTVN5blink12GPUSwapChainE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %11 = getelementptr inbounds %"class.blink::GPUSwapChain", %"class.blink::GPUSwapChain"* %0, i64 0, i32 2
  %12 = getelementptr inbounds %class.scoped_refptr.162, %class.scoped_refptr.162* %11, i64 0, i32 0
  store %"class.blink::WebGPUSwapBufferProvider"* null, %"class.blink::WebGPUSwapBufferProvider"** %12, align 8
  %13 = getelementptr inbounds %"class.blink::GPUSwapChain", %"class.blink::GPUSwapChain"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::GPUCanvasContext"* %1, %"class.blink::GPUCanvasContext"** %13, align 8
  %14 = getelementptr inbounds %"class.blink::GPUSwapChain", %"class.blink::GPUSwapChain"* %0, i64 0, i32 4
  store i32 %3, i32* %14, align 8
  %15 = getelementptr inbounds %"class.blink::GPUSwapChain", %"class.blink::GPUSwapChain"* %0, i64 0, i32 5
  store i32 %4, i32* %15, align 4
  %16 = getelementptr inbounds %"class.blink::GPUSwapChain", %"class.blink::GPUSwapChain"* %0, i64 0, i32 6, i32 0, i32 0
  store %"class.blink::GPUTexture"* null, %"class.blink::GPUTexture"** %16, align 8
  %17 = tail call noalias i8* @malloc(i64 96) #7
  %18 = bitcast i8* %17 to %"class.blink::WebGPUSwapBufferProvider"*
  %19 = getelementptr inbounds %"class.blink::GPUSwapChain", %"class.blink::GPUSwapChain"* %0, i64 0, i32 0, i32 1
  %20 = tail call dereferenceable(8) %class.scoped_refptr* @_ZNK5blink14DawnObjectBase20GetDawnControlClientEv(%"class.blink::DawnObjectBase"* %19) #7
  %21 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %20, i64 0, i32 0
  %22 = load %"class.blink::DawnControlClientHolder"*, %"class.blink::DawnControlClientHolder"** %21, align 8
  %23 = icmp eq %"class.blink::DawnControlClientHolder"* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %6
  %25 = getelementptr inbounds %"class.blink::DawnControlClientHolder", %"class.blink::DawnControlClientHolder"* %22, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %25) #7
  br label %26

26:                                               ; preds = %6, %24
  %27 = getelementptr inbounds %"class.blink::GPUDevice", %"class.blink::GPUDevice"* %2, i64 0, i32 2, i32 1
  %28 = load %struct.WGPUDeviceImpl*, %struct.WGPUDeviceImpl** %27, align 8
  %29 = load i32, i32* %14, align 8
  tail call void @_ZN5blink24WebGPUSwapBufferProviderC1EPNS0_6ClientE13scoped_refptrINS_23DawnControlClientHolderEEP14WGPUDeviceImpl16WGPUTextureUsage17WGPUTextureFormat(%"class.blink::WebGPUSwapBufferProvider"* %18, %"class.blink::WebGPUSwapBufferProvider::Client"* %8, %"class.blink::DawnControlClientHolder"* %22, %struct.WGPUDeviceImpl* %28, i32 %29, i32 %4) #7
  %30 = ptrtoint i8* %17 to i64
  %31 = bitcast %class.scoped_refptr.162* %11 to i64*
  %32 = load %"class.blink::WebGPUSwapBufferProvider"*, %"class.blink::WebGPUSwapBufferProvider"** %12, align 8
  store i64 %30, i64* %31, align 8
  %33 = icmp eq %"class.blink::WebGPUSwapBufferProvider"* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %26
  %35 = getelementptr inbounds %"class.blink::WebGPUSwapBufferProvider", %"class.blink::WebGPUSwapBufferProvider"* %32, i64 0, i32 1, i32 0
  %36 = getelementptr inbounds %"class.base::RefCounted.164", %"class.base::RefCounted.164"* %35, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %36) #7
  %37 = getelementptr inbounds %"class.base::RefCounted.164", %"class.base::RefCounted.164"* %35, i64 0, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %47

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.base::RefCounted.164", %"class.base::RefCounted.164"* %35, i64 -2
  %42 = bitcast %"class.base::RefCounted.164"* %41 to %"class.blink::WebGPUSwapBufferProvider"*
  %43 = bitcast %"class.base::RefCounted.164"* %41 to void (%"class.blink::WebGPUSwapBufferProvider"*)***
  %44 = load void (%"class.blink::WebGPUSwapBufferProvider"*)**, void (%"class.blink::WebGPUSwapBufferProvider"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::WebGPUSwapBufferProvider"*)*, void (%"class.blink::WebGPUSwapBufferProvider"*)** %44, i64 2
  %46 = load void (%"class.blink::WebGPUSwapBufferProvider"*)*, void (%"class.blink::WebGPUSwapBufferProvider"*)** %45, align 8
  tail call void %46(%"class.blink::WebGPUSwapBufferProvider"* nonnull %42) #7
  br label %47

47:                                               ; preds = %26, %34, %40
  %48 = load %"class.blink::WebGPUSwapBufferProvider"*, %"class.blink::WebGPUSwapBufferProvider"** %12, align 8
  tail call void @_ZN5blink24WebGPUSwapBufferProvider16SetFilterQualityE15SkFilterQuality(%"class.blink::WebGPUSwapBufferProvider"* %48, i32 %5) #7
  ret void
}

declare void @_ZN5blink14DawnObjectImplC2EPNS_9GPUDeviceE(%"class.blink::DawnObjectImpl"*, %"class.blink::GPUDevice"*) unnamed_addr #1

declare dereferenceable(8) %class.scoped_refptr* @_ZNK5blink14DawnObjectBase20GetDawnControlClientEv(%"class.blink::DawnObjectBase"*) local_unnamed_addr #1

declare void @_ZN5blink24WebGPUSwapBufferProviderC1EPNS0_6ClientE13scoped_refptrINS_23DawnControlClientHolderEEP14WGPUDeviceImpl16WGPUTextureUsage17WGPUTextureFormat(%"class.blink::WebGPUSwapBufferProvider"*, %"class.blink::WebGPUSwapBufferProvider::Client"*, %"class.blink::DawnControlClientHolder"*, %struct.WGPUDeviceImpl*, i32, i32) unnamed_addr #1

declare void @_ZN5blink24WebGPUSwapBufferProvider16SetFilterQualityE15SkFilterQuality(%"class.blink::WebGPUSwapBufferProvider"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12GPUSwapChainD2Ev(%"class.blink::GPUSwapChain"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::GPUSwapChain", %"class.blink::GPUSwapChain"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [3 x i8*] }, { [12 x i8*], [3 x i8*] }* @_ZTVN5blink12GPUSwapChainE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::GPUSwapChain", %"class.blink::GPUSwapChain"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [3 x i8*] }, { [12 x i8*], [3 x i8*] }* @_ZTVN5blink12GPUSwapChainE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::GPUSwapChain", %"class.blink::GPUSwapChain"* %0, i64 0, i32 6
  %5 = bitcast %"class.blink::Member.309"* %4 to i64*
  store atomic i64 0, i64* %5 monotonic, align 8
  %6 = getelementptr inbounds %"class.blink::GPUSwapChain", %"class.blink::GPUSwapChain"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %class.scoped_refptr.162, %class.scoped_refptr.162* %6, i64 0, i32 0
  %8 = load %"class.blink::WebGPUSwapBufferProvider"*, %"class.blink::WebGPUSwapBufferProvider"** %7, align 8
  %9 = icmp eq %"class.blink::WebGPUSwapBufferProvider"* %8, null
  br i1 %9, label %43, label %10

10:                                               ; preds = %1
  tail call void @_ZN5blink24WebGPUSwapBufferProvider6NeuterEv(%"class.blink::WebGPUSwapBufferProvider"* nonnull %8) #7
  %11 = bitcast %class.scoped_refptr.162* %6 to i64*
  %12 = load %"class.blink::WebGPUSwapBufferProvider"*, %"class.blink::WebGPUSwapBufferProvider"** %7, align 8
  store i64 0, i64* %11, align 8
  %13 = icmp eq %"class.blink::WebGPUSwapBufferProvider"* %12, null
  br i1 %13, label %43, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::WebGPUSwapBufferProvider", %"class.blink::WebGPUSwapBufferProvider"* %12, i64 0, i32 1, i32 0
  %16 = getelementptr inbounds %"class.base::RefCounted.164", %"class.base::RefCounted.164"* %15, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %16) #7
  %17 = getelementptr inbounds %"class.base::RefCounted.164", %"class.base::RefCounted.164"* %15, i64 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %27

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.base::RefCounted.164", %"class.base::RefCounted.164"* %15, i64 -2
  %22 = bitcast %"class.base::RefCounted.164"* %21 to %"class.blink::WebGPUSwapBufferProvider"*
  %23 = bitcast %"class.base::RefCounted.164"* %21 to void (%"class.blink::WebGPUSwapBufferProvider"*)***
  %24 = load void (%"class.blink::WebGPUSwapBufferProvider"*)**, void (%"class.blink::WebGPUSwapBufferProvider"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::WebGPUSwapBufferProvider"*)*, void (%"class.blink::WebGPUSwapBufferProvider"*)** %24, i64 2
  %26 = load void (%"class.blink::WebGPUSwapBufferProvider"*)*, void (%"class.blink::WebGPUSwapBufferProvider"*)** %25, align 8
  tail call void %26(%"class.blink::WebGPUSwapBufferProvider"* nonnull %22) #7
  br label %27

27:                                               ; preds = %14, %20
  %28 = load %"class.blink::WebGPUSwapBufferProvider"*, %"class.blink::WebGPUSwapBufferProvider"** %7, align 8
  %29 = icmp eq %"class.blink::WebGPUSwapBufferProvider"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"class.blink::WebGPUSwapBufferProvider", %"class.blink::WebGPUSwapBufferProvider"* %28, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.base::RefCounted.164", %"class.base::RefCounted.164"* %31, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %32) #7
  %33 = getelementptr inbounds %"class.base::RefCounted.164", %"class.base::RefCounted.164"* %31, i64 0, i32 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %43

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.base::RefCounted.164", %"class.base::RefCounted.164"* %31, i64 -2
  %38 = bitcast %"class.base::RefCounted.164"* %37 to %"class.blink::WebGPUSwapBufferProvider"*
  %39 = bitcast %"class.base::RefCounted.164"* %37 to void (%"class.blink::WebGPUSwapBufferProvider"*)***
  %40 = load void (%"class.blink::WebGPUSwapBufferProvider"*)**, void (%"class.blink::WebGPUSwapBufferProvider"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::WebGPUSwapBufferProvider"*)*, void (%"class.blink::WebGPUSwapBufferProvider"*)** %40, i64 2
  %42 = load void (%"class.blink::WebGPUSwapBufferProvider"*)*, void (%"class.blink::WebGPUSwapBufferProvider"*)** %41, align 8
  tail call void %42(%"class.blink::WebGPUSwapBufferProvider"* nonnull %38) #7
  br label %43

43:                                               ; preds = %10, %1, %27, %30, %36
  %44 = getelementptr inbounds %"class.blink::GPUSwapChain", %"class.blink::GPUSwapChain"* %0, i64 0, i32 0
  tail call void @_ZN5blink14DawnObjectImplD2Ev(%"class.blink::DawnObjectImpl"* %44) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12GPUSwapChain6NeuterEv(%"class.blink::GPUSwapChain"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::GPUSwapChain", %"class.blink::GPUSwapChain"* %0, i64 0, i32 6
  %3 = bitcast %"class.blink::Member.309"* %2 to i64*
  store atomic i64 0, i64* %3 monotonic, align 8
  %4 = getelementptr inbounds %"class.blink::GPUSwapChain", %"class.blink::GPUSwapChain"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %class.scoped_refptr.162, %class.scoped_refptr.162* %4, i64 0, i32 0
  %6 = load %"class.blink::WebGPUSwapBufferProvider"*, %"class.blink::WebGPUSwapBufferProvider"** %5, align 8
  %7 = icmp eq %"class.blink::WebGPUSwapBufferProvider"* %6, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %1
  tail call void @_ZN5blink24WebGPUSwapBufferProvider6NeuterEv(%"class.blink::WebGPUSwapBufferProvider"* nonnull %6) #7
  %9 = bitcast %class.scoped_refptr.162* %4 to i64*
  %10 = load %"class.blink::WebGPUSwapBufferProvider"*, %"class.blink::WebGPUSwapBufferProvider"** %5, align 8
  store i64 0, i64* %9, align 8
  %11 = icmp eq %"class.blink::WebGPUSwapBufferProvider"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::WebGPUSwapBufferProvider", %"class.blink::WebGPUSwapBufferProvider"* %10, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.base::RefCounted.164", %"class.base::RefCounted.164"* %13, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %14) #7
  %15 = getelementptr inbounds %"class.base::RefCounted.164", %"class.base::RefCounted.164"* %13, i64 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %25

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.base::RefCounted.164", %"class.base::RefCounted.164"* %13, i64 -2
  %20 = bitcast %"class.base::RefCounted.164"* %19 to %"class.blink::WebGPUSwapBufferProvider"*
  %21 = bitcast %"class.base::RefCounted.164"* %19 to void (%"class.blink::WebGPUSwapBufferProvider"*)***
  %22 = load void (%"class.blink::WebGPUSwapBufferProvider"*)**, void (%"class.blink::WebGPUSwapBufferProvider"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::WebGPUSwapBufferProvider"*)*, void (%"class.blink::WebGPUSwapBufferProvider"*)** %22, i64 2
  %24 = load void (%"class.blink::WebGPUSwapBufferProvider"*)*, void (%"class.blink::WebGPUSwapBufferProvider"*)** %23, align 8
  tail call void %24(%"class.blink::WebGPUSwapBufferProvider"* nonnull %20) #7
  br label %25

25:                                               ; preds = %1, %18, %12, %8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink14DawnObjectImplD2Ev(%"class.blink::DawnObjectImpl"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12GPUSwapChainD0Ev(%"class.blink::GPUSwapChain"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink12GPUSwapChainD2Ev(%"class.blink::GPUSwapChain"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12GPUSwapChain5TraceEPNS_7VisitorE(%"class.blink::GPUSwapChain"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::GPUSwapChain", %"class.blink::GPUSwapChain"* %0, i64 0, i32 3
  %4 = bitcast %"class.blink::Member.303"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16GPUCanvasContextEE5TraceEPNS_7VisitorEPKv) #7
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::GPUSwapChain", %"class.blink::GPUSwapChain"* %0, i64 0, i32 6
  %15 = bitcast %"class.blink::Member.309"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10GPUTextureEE5TraceEPNS_7VisitorEPKv) #7
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::GPUSwapChain", %"class.blink::GPUSwapChain"* %0, i64 0, i32 0
  tail call void @_ZNK5blink14DawnObjectImpl5TraceEPNS_7VisitorE(%"class.blink::DawnObjectImpl"* %25, %"class.blink::Visitor"* %1) #7
  ret void
}

declare void @_ZNK5blink14DawnObjectImpl5TraceEPNS_7VisitorE(%"class.blink::DawnObjectImpl"*, %"class.blink::Visitor"*) unnamed_addr #1

declare void @_ZN5blink24WebGPUSwapBufferProvider6NeuterEv(%"class.blink::WebGPUSwapBufferProvider"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.cc::Layer"* @_ZN5blink12GPUSwapChain7CcLayerEv(%"class.blink::GPUSwapChain"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::GPUSwapChain", %"class.blink::GPUSwapChain"* %0, i64 0, i32 2, i32 0
  %3 = load %"class.blink::WebGPUSwapBufferProvider"*, %"class.blink::WebGPUSwapBufferProvider"** %2, align 8
  %4 = tail call %"class.cc::Layer"* @_ZN5blink24WebGPUSwapBufferProvider7CcLayerEv(%"class.blink::WebGPUSwapBufferProvider"* %3) #7
  ret %"class.cc::Layer"* %4
}

declare %"class.cc::Layer"* @_ZN5blink24WebGPUSwapBufferProvider7CcLayerEv(%"class.blink::WebGPUSwapBufferProvider"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12GPUSwapChain16SetFilterQualityE15SkFilterQuality(%"class.blink::GPUSwapChain"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::GPUSwapChain", %"class.blink::GPUSwapChain"* %0, i64 0, i32 2, i32 0
  %4 = load %"class.blink::WebGPUSwapBufferProvider"*, %"class.blink::WebGPUSwapBufferProvider"** %3, align 8
  %5 = icmp eq %"class.blink::WebGPUSwapBufferProvider"* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @_ZN5blink24WebGPUSwapBufferProvider16SetFilterQualityE15SkFilterQuality(%"class.blink::WebGPUSwapBufferProvider"* nonnull %4, i32 %1) #7
  br label %7

7:                                                ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::StaticBitmapImage"* @_ZN5blink12GPUSwapChain27TransferToStaticBitmapImageEv(%"class.blink::GPUSwapChain"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.viz::TransferableResource", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %class.SkBitmap, align 8
  %5 = alloca %class.sk_sp.603, align 8
  %6 = alloca %struct.SkImageInfo, align 16
  %7 = alloca %"class.base::WeakPtr", align 8
  %8 = alloca %"class.base::OnceCallback", align 8
  %9 = bitcast %"struct.viz::TransferableResource"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %9) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 bitcast ({ %"class.util::IdType.259", i8, [3 x i8], %"class.gfx::Size", i32, [4 x i8], <{ %"struct.gpu::Mailbox", { i8, i8, [6 x i8], %"class.util::IdType", i64 }, i32, [4 x i8] }>, %"class.gfx::ColorSpace", { { { { i8, [3 x i8], %union.anon.265 } } } }, i8, [3 x i8], i32, i8, [7 x i8], %"class.absl::optional.266" }* @__const._ZN5blink12GPUSwapChain20ExportCanvasResourceEv.transferable_resource to i8*), i64 256, i1 false)
  call void @_ZN3viz20TransferableResourceC1Ev(%"struct.viz::TransferableResource"* nonnull %2) #7
  %10 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #7
  %11 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  %12 = getelementptr inbounds %"class.blink::GPUSwapChain", %"class.blink::GPUSwapChain"* %0, i64 0, i32 2, i32 0
  %13 = load %"class.blink::WebGPUSwapBufferProvider"*, %"class.blink::WebGPUSwapBufferProvider"** %12, align 8
  %14 = bitcast %"class.blink::WebGPUSwapBufferProvider"* %13 to i1 (%"class.blink::WebGPUSwapBufferProvider"*, %"class.cc::SharedBitmapIdRegistrar"*, %"struct.viz::TransferableResource"*, %"class.base::OnceCallback"*)***
  %15 = load i1 (%"class.blink::WebGPUSwapBufferProvider"*, %"class.cc::SharedBitmapIdRegistrar"*, %"struct.viz::TransferableResource"*, %"class.base::OnceCallback"*)**, i1 (%"class.blink::WebGPUSwapBufferProvider"*, %"class.cc::SharedBitmapIdRegistrar"*, %"struct.viz::TransferableResource"*, %"class.base::OnceCallback"*)*** %14, align 8
  %16 = load i1 (%"class.blink::WebGPUSwapBufferProvider"*, %"class.cc::SharedBitmapIdRegistrar"*, %"struct.viz::TransferableResource"*, %"class.base::OnceCallback"*)*, i1 (%"class.blink::WebGPUSwapBufferProvider"*, %"class.cc::SharedBitmapIdRegistrar"*, %"struct.viz::TransferableResource"*, %"class.base::OnceCallback"*)** %15, align 8
  %17 = call zeroext i1 %16(%"class.blink::WebGPUSwapBufferProvider"* %13, %"class.cc::SharedBitmapIdRegistrar"* null, %"struct.viz::TransferableResource"* nonnull %2, %"class.base::OnceCallback"* nonnull %3) #7
  br i1 %17, label %40, label %18

18:                                               ; preds = %1
  %19 = bitcast %class.SkBitmap* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %19) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %4) #7
  %20 = getelementptr inbounds %"struct.viz::TransferableResource", %"struct.viz::TransferableResource"* %2, i64 0, i32 2, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = getelementptr inbounds %"struct.viz::TransferableResource", %"struct.viz::TransferableResource"* %2, i64 0, i32 2, i32 1
  %23 = load i32, i32* %22, align 4
  call void @_ZN8SkBitmap14allocN32PixelsEiib(%class.SkBitmap* nonnull %4, i32 %21, i32 %23, i1 zeroext false) #7
  call void @_ZNK8SkBitmap10eraseColorEj(%class.SkBitmap* nonnull %4, i32 0) #7
  call void @_ZN7SkImage14MakeFromBitmapERK8SkBitmap(%class.sk_sp.603* nonnull sret %5, %class.SkBitmap* nonnull dereferenceable(56) %4) #7
  %24 = call %"class.blink::UnacceleratedStaticBitmapImage"* @_ZN5blink30UnacceleratedStaticBitmapImage6CreateE5sk_spI7SkImageENS_16ImageOrientationE(%class.sk_sp.603* nonnull %5, i8 1) #7
  %25 = ptrtoint %"class.blink::UnacceleratedStaticBitmapImage"* %24 to i64
  %26 = getelementptr inbounds %class.sk_sp.603, %class.sk_sp.603* %5, i64 0, i32 0
  %27 = load %class.SkImage*, %class.SkImage** %26, align 8
  %28 = icmp eq %class.SkImage* %27, null
  br i1 %28, label %39, label %29

29:                                               ; preds = %18
  %30 = getelementptr inbounds %class.SkImage, %class.SkImage* %27, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw add i32* %30, i32 -1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %39

33:                                               ; preds = %29
  %34 = bitcast %class.SkImage* %27 to %class.SkRefCntBase*
  %35 = bitcast %class.SkImage* %27 to void (%class.SkRefCntBase*)***
  %36 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %35, align 8
  %37 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %36, i64 2
  %38 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %37, align 8
  call void %38(%class.SkRefCntBase* nonnull %34) #7
  br label %39

39:                                               ; preds = %18, %29, %33
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %19) #7
  br label %83

40:                                               ; preds = %1
  %41 = getelementptr inbounds %"struct.viz::TransferableResource", %"struct.viz::TransferableResource"* %2, i64 0, i32 5, i32 0
  %42 = getelementptr inbounds %"struct.viz::TransferableResource", %"struct.viz::TransferableResource"* %2, i64 0, i32 5, i32 1
  %43 = bitcast %struct.SkImageInfo* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #7
  %44 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 0, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.viz::TransferableResource", %"struct.viz::TransferableResource"* %2, i64 0, i32 2, i32 0
  %46 = load i32, i32* %45, align 8
  %47 = getelementptr inbounds %"struct.viz::TransferableResource", %"struct.viz::TransferableResource"* %2, i64 0, i32 2, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i64
  %50 = shl nuw i64 %49, 32
  %51 = zext i32 %46 to i64
  %52 = or i64 %50, %51
  %53 = bitcast %struct.SkImageInfo* %6 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8589934598>, <2 x i64>* %53, align 16, !alias.scope !2
  %54 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 1
  %55 = bitcast %struct.SkISize* %54 to i64*
  store i64 %52, i64* %55, align 16, !alias.scope !2
  %56 = getelementptr inbounds %"struct.viz::TransferableResource", %"struct.viz::TransferableResource"* %2, i64 0, i32 5, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = load %"class.blink::WebGPUSwapBufferProvider"*, %"class.blink::WebGPUSwapBufferProvider"** %12, align 8
  call void @_ZNK5blink24WebGPUSwapBufferProvider25GetContextProviderWeakPtrEv(%"class.base::WeakPtr"* nonnull sret %7, %"class.blink::WebGPUSwapBufferProvider"* %58) #7
  %59 = call i64 @_ZN4base14PlatformThread10CurrentRefEv() #7
  %60 = call %"class.blink::Thread"* @_ZN5blink6Thread7CurrentEv() #7
  %61 = bitcast %"class.blink::Thread"* %60 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)***
  %62 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*** %61, align 8
  %63 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %62, i64 3
  %64 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %63, align 8
  %65 = call %"class.base::SingleThreadTaskRunner"* %64(%"class.blink::Thread"* %60) #7
  %66 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.base::OnceCallback"* %8 to i64*
  store i64 %67, i64* %68, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  %69 = ptrtoint %"class.base::SingleThreadTaskRunner"* %65 to i64
  %70 = call %"class.blink::AcceleratedStaticBitmapImage"* @_ZN5blink28AcceleratedStaticBitmapImage23CreateFromCanvasMailboxERKN3gpu7MailboxERKNS1_9SyncTokenEjRK11SkImageInfojbN4base7WeakPtrINS_35WebGraphicsContext3DProviderWrapperEEENSB_17PlatformThreadRefE13scoped_refptrINSB_22SingleThreadTaskRunnerEENSB_12OnceCallbackIFvS7_bEEE(%"struct.gpu::Mailbox"* dereferenceable(16) %41, %"struct.gpu::SyncToken"* dereferenceable(24) %42, i32 0, %struct.SkImageInfo* nonnull dereferenceable(24) %6, i32 %57, i1 zeroext true, %"class.base::WeakPtr"* nonnull %7, i64 %59, i64 %69, %"class.base::OnceCallback"* nonnull %8) #7
  %71 = ptrtoint %"class.blink::AcceleratedStaticBitmapImage"* %70 to i64
  %72 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %72) #7
  %73 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %7, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %73) #7
  %74 = load %class.SkColorSpace*, %class.SkColorSpace** %44, align 16
  %75 = icmp eq %class.SkColorSpace* %74, null
  br i1 %75, label %82, label %76

76:                                               ; preds = %40
  %77 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = atomicrmw add i32* %77, i32 -1 acq_rel
  %79 = icmp eq i32 %78, 1
  br i1 %79, label %80, label %82

80:                                               ; preds = %76
  %81 = bitcast %class.SkColorSpace* %74 to i8*
  call void @_ZdlPv(i8* %81) #8
  br label %82

82:                                               ; preds = %40, %76, %80
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #7
  br label %83

83:                                               ; preds = %82, %39
  %84 = phi i64 [ %71, %82 ], [ %25, %39 ]
  %85 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %85) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #7
  call void @_ZN3viz20TransferableResourceD1Ev(%"struct.viz::TransferableResource"* nonnull %2) #7
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %9) #7
  %86 = inttoptr i64 %84 to %"class.blink::StaticBitmapImage"*
  ret %"class.blink::StaticBitmapImage"* %86
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN3viz20TransferableResourceC1Ev(%"struct.viz::TransferableResource"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #1

declare void @_ZN8SkBitmap14allocN32PixelsEiib(%class.SkBitmap*, i32, i32, i1 zeroext) local_unnamed_addr #1

declare %"class.blink::UnacceleratedStaticBitmapImage"* @_ZN5blink30UnacceleratedStaticBitmapImage6CreateE5sk_spI7SkImageENS_16ImageOrientationE(%class.sk_sp.603*, i8) local_unnamed_addr #1

declare void @_ZN7SkImage14MakeFromBitmapERK8SkBitmap(%class.sk_sp.603* sret, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #2

declare %"class.blink::AcceleratedStaticBitmapImage"* @_ZN5blink28AcceleratedStaticBitmapImage23CreateFromCanvasMailboxERKN3gpu7MailboxERKNS1_9SyncTokenEjRK11SkImageInfojbN4base7WeakPtrINS_35WebGraphicsContext3DProviderWrapperEEENSB_17PlatformThreadRefE13scoped_refptrINSB_22SingleThreadTaskRunnerEENSB_12OnceCallbackIFvS7_bEEE(%"struct.gpu::Mailbox"* dereferenceable(16), %"struct.gpu::SyncToken"* dereferenceable(24), i32, %struct.SkImageInfo* dereferenceable(24), i32, i1 zeroext, %"class.base::WeakPtr"*, i64, i64, %"class.base::OnceCallback"*) local_unnamed_addr #1

declare void @_ZNK5blink24WebGPUSwapBufferProvider25GetContextProviderWeakPtrEv(%"class.base::WeakPtr"* sret, %"class.blink::WebGPUSwapBufferProvider"*) local_unnamed_addr #1

declare i64 @_ZN4base14PlatformThread10CurrentRefEv() local_unnamed_addr #1

declare %"class.blink::Thread"* @_ZN5blink6Thread7CurrentEv() local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3viz20TransferableResourceD1Ev(%"struct.viz::TransferableResource"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CanvasResource"* @_ZN5blink12GPUSwapChain20ExportCanvasResourceEv(%"class.blink::GPUSwapChain"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.viz::TransferableResource", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.blink::CanvasResourceParams", align 4
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"struct.gpu::SyncToken", align 8
  %7 = alloca %"class.blink::IntSize", align 4
  %8 = alloca %"class.base::WeakPtr", align 8
  %9 = alloca %"class.base::WeakPtr.85", align 8
  %10 = bitcast %"struct.viz::TransferableResource"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %10) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 bitcast ({ %"class.util::IdType.259", i8, [3 x i8], %"class.gfx::Size", i32, [4 x i8], <{ %"struct.gpu::Mailbox", { i8, i8, [6 x i8], %"class.util::IdType", i64 }, i32, [4 x i8] }>, %"class.gfx::ColorSpace", { { { { i8, [3 x i8], %union.anon.265 } } } }, i8, [3 x i8], i32, i8, [7 x i8], %"class.absl::optional.266" }* @__const._ZN5blink12GPUSwapChain20ExportCanvasResourceEv.transferable_resource to i8*), i64 256, i1 false)
  call void @_ZN3viz20TransferableResourceC1Ev(%"struct.viz::TransferableResource"* nonnull %2) #7
  %11 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #7
  %12 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %12, align 8
  %13 = getelementptr inbounds %"class.blink::GPUSwapChain", %"class.blink::GPUSwapChain"* %0, i64 0, i32 2, i32 0
  %14 = load %"class.blink::WebGPUSwapBufferProvider"*, %"class.blink::WebGPUSwapBufferProvider"** %13, align 8
  %15 = bitcast %"class.blink::WebGPUSwapBufferProvider"* %14 to i1 (%"class.blink::WebGPUSwapBufferProvider"*, %"class.cc::SharedBitmapIdRegistrar"*, %"struct.viz::TransferableResource"*, %"class.base::OnceCallback"*)***
  %16 = load i1 (%"class.blink::WebGPUSwapBufferProvider"*, %"class.cc::SharedBitmapIdRegistrar"*, %"struct.viz::TransferableResource"*, %"class.base::OnceCallback"*)**, i1 (%"class.blink::WebGPUSwapBufferProvider"*, %"class.cc::SharedBitmapIdRegistrar"*, %"struct.viz::TransferableResource"*, %"class.base::OnceCallback"*)*** %15, align 8
  %17 = load i1 (%"class.blink::WebGPUSwapBufferProvider"*, %"class.cc::SharedBitmapIdRegistrar"*, %"struct.viz::TransferableResource"*, %"class.base::OnceCallback"*)*, i1 (%"class.blink::WebGPUSwapBufferProvider"*, %"class.cc::SharedBitmapIdRegistrar"*, %"struct.viz::TransferableResource"*, %"class.base::OnceCallback"*)** %16, align 8
  %18 = call zeroext i1 %17(%"class.blink::WebGPUSwapBufferProvider"* %14, %"class.cc::SharedBitmapIdRegistrar"* null, %"struct.viz::TransferableResource"* nonnull %2, %"class.base::OnceCallback"* nonnull %3) #7
  br i1 %18, label %19, label %50

19:                                               ; preds = %1
  %20 = bitcast %"class.blink::CanvasResourceParams"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %20) #7
  %21 = getelementptr inbounds %"class.blink::CanvasResourceParams", %"class.blink::CanvasResourceParams"* %4, i64 0, i32 0
  store i32 -1431655766, i32* %21, align 4
  %22 = getelementptr inbounds %"class.blink::CanvasResourceParams", %"class.blink::CanvasResourceParams"* %4, i64 0, i32 1
  store i32 -1431655766, i32* %22, align 4
  %23 = getelementptr inbounds %"class.blink::CanvasResourceParams", %"class.blink::CanvasResourceParams"* %4, i64 0, i32 2
  store i32 -1431655766, i32* %23, align 4
  call void @_ZN5blink20CanvasResourceParamsC1Ev(%"class.blink::CanvasResourceParams"* nonnull %4) #7
  %24 = getelementptr inbounds %"struct.viz::TransferableResource", %"struct.viz::TransferableResource"* %2, i64 0, i32 3
  %25 = load i32, i32* %24, align 8
  %26 = call i32 @_ZN3viz34ResourceFormatToClosestSkColorTypeEbNS_14ResourceFormatE(i1 zeroext true, i32 %25) #7
  store i32 %26, i32* %22, align 4
  %27 = getelementptr inbounds %"struct.viz::TransferableResource", %"struct.viz::TransferableResource"* %2, i64 0, i32 5, i32 0
  %28 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %29, i64* %30, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %12, align 8
  %31 = getelementptr inbounds %"struct.viz::TransferableResource", %"struct.viz::TransferableResource"* %2, i64 0, i32 5, i32 1
  call void @_ZN3gpu9SyncTokenC1ERKS0_(%"struct.gpu::SyncToken"* nonnull %6, %"struct.gpu::SyncToken"* dereferenceable(24) %31) #7
  %32 = bitcast %"class.blink::IntSize"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #7
  %33 = getelementptr inbounds %"struct.viz::TransferableResource", %"struct.viz::TransferableResource"* %2, i64 0, i32 2, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = getelementptr inbounds %"struct.viz::TransferableResource", %"struct.viz::TransferableResource"* %2, i64 0, i32 2, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.blink::IntSize", %"class.blink::IntSize"* %7, i64 0, i32 0
  store i32 %34, i32* %37, align 4
  %38 = getelementptr inbounds %"class.blink::IntSize", %"class.blink::IntSize"* %7, i64 0, i32 1
  store i32 %36, i32* %38, align 4
  %39 = getelementptr inbounds %"struct.viz::TransferableResource", %"struct.viz::TransferableResource"* %2, i64 0, i32 5, i32 2
  %40 = load i32, i32* %39, align 8
  %41 = load %"class.blink::WebGPUSwapBufferProvider"*, %"class.blink::WebGPUSwapBufferProvider"** %13, align 8
  call void @_ZNK5blink24WebGPUSwapBufferProvider25GetContextProviderWeakPtrEv(%"class.base::WeakPtr"* nonnull sret %8, %"class.blink::WebGPUSwapBufferProvider"* %41) #7
  %42 = getelementptr inbounds %"class.base::WeakPtr.85", %"class.base::WeakPtr.85"* %9, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"* nonnull %42) #7
  %43 = getelementptr inbounds %"struct.viz::TransferableResource", %"struct.viz::TransferableResource"* %2, i64 0, i32 8
  %44 = load i8, i8* %43, align 8, !range !7
  %45 = icmp ne i8 %44, 0
  %46 = call %"class.blink::ExternalCanvasResource"* @_ZN5blink22ExternalCanvasResource6CreateERKN3gpu7MailboxEN4base12OnceCallbackIFvRKNS1_9SyncTokenEbEEES7_RKNS_7IntSizeEjRKNS_20CanvasResourceParamsENS5_7WeakPtrINS_35WebGraphicsContext3DProviderWrapperEEENSI_INS_22CanvasResourceProviderEEE15SkFilterQualitybb(%"struct.gpu::Mailbox"* dereferenceable(16) %27, %"class.base::OnceCallback"* nonnull %5, %"struct.gpu::SyncToken"* nonnull %6, %"class.blink::IntSize"* nonnull dereferenceable(8) %7, i32 %40, %"class.blink::CanvasResourceParams"* nonnull dereferenceable(12) %4, %"class.base::WeakPtr"* nonnull %8, %"class.base::WeakPtr.85"* nonnull %9, i32 1, i1 zeroext true, i1 zeroext %45) #7
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %42) #7
  %47 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %8, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %47) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #7
  %48 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %48) #7
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %20) #7
  %49 = getelementptr inbounds %"class.blink::ExternalCanvasResource", %"class.blink::ExternalCanvasResource"* %46, i64 0, i32 0
  br label %50

50:                                               ; preds = %1, %19
  %51 = phi %"class.blink::CanvasResource"* [ %49, %19 ], [ null, %1 ]
  %52 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %52) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #7
  call void @_ZN3viz20TransferableResourceD1Ev(%"struct.viz::TransferableResource"* nonnull %2) #7
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %10) #7
  ret %"class.blink::CanvasResource"* %51
}

declare void @_ZN5blink20CanvasResourceParamsC1Ev(%"class.blink::CanvasResourceParams"*) unnamed_addr #1

declare i32 @_ZN3viz34ResourceFormatToClosestSkColorTypeEbNS_14ResourceFormatE(i1 zeroext, i32) local_unnamed_addr #1

declare %"class.blink::ExternalCanvasResource"* @_ZN5blink22ExternalCanvasResource6CreateERKN3gpu7MailboxEN4base12OnceCallbackIFvRKNS1_9SyncTokenEbEEES7_RKNS_7IntSizeEjRKNS_20CanvasResourceParamsENS5_7WeakPtrINS_35WebGraphicsContext3DProviderWrapperEEENSI_INS_22CanvasResourceProviderEEE15SkFilterQualitybb(%"struct.gpu::Mailbox"* dereferenceable(16), %"class.base::OnceCallback"*, %"struct.gpu::SyncToken"*, %"class.blink::IntSize"* dereferenceable(8), i32, %"class.blink::CanvasResourceParams"* dereferenceable(12), %"class.base::WeakPtr"*, %"class.base::WeakPtr.85"*, i32, i1 zeroext, i1 zeroext) local_unnamed_addr #1

declare void @_ZN3gpu9SyncTokenC1ERKS0_(%"struct.gpu::SyncToken"*, %"struct.gpu::SyncToken"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::GPUTexture"* @_ZN5blink12GPUSwapChain17getCurrentTextureEv(%"class.blink::GPUSwapChain"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::GPUSwapChain", %"class.blink::GPUSwapChain"* %0, i64 0, i32 2, i32 0
  %3 = load %"class.blink::WebGPUSwapBufferProvider"*, %"class.blink::WebGPUSwapBufferProvider"** %2, align 8
  %4 = icmp eq %"class.blink::WebGPUSwapBufferProvider"* %3, null
  br i1 %4, label %52, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::GPUSwapChain", %"class.blink::GPUSwapChain"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::GPUCanvasContext"*, %"class.blink::GPUCanvasContext"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::GPUCanvasContext", %"class.blink::GPUCanvasContext"* %7, i64 0, i32 0, i32 4, i32 0, i32 0
  %9 = load %"class.blink::CanvasRenderingContextHost"*, %"class.blink::CanvasRenderingContextHost"** %8, align 8
  %10 = icmp eq %"class.blink::CanvasRenderingContextHost"* %9, null
  br i1 %10, label %24, label %11

11:                                               ; preds = %5
  %12 = bitcast %"class.blink::CanvasRenderingContextHost"* %9 to i1 (%"class.blink::CanvasRenderingContextHost"*)***
  %13 = load i1 (%"class.blink::CanvasRenderingContextHost"*)**, i1 (%"class.blink::CanvasRenderingContextHost"*)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::CanvasRenderingContextHost"*)*, i1 (%"class.blink::CanvasRenderingContextHost"*)** %13, i64 34
  %15 = load i1 (%"class.blink::CanvasRenderingContextHost"*)*, i1 (%"class.blink::CanvasRenderingContextHost"*)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.blink::CanvasRenderingContextHost"* nonnull %9) #7
  br i1 %16, label %17, label %24

17:                                               ; preds = %11
  %18 = load %"class.blink::GPUCanvasContext"*, %"class.blink::GPUCanvasContext"** %6, align 8
  %19 = bitcast %"class.blink::GPUCanvasContext"* %18 to %"class.blink::CanvasRenderingContext"*
  %20 = bitcast %"class.blink::GPUCanvasContext"* %18 to void (%"class.blink::CanvasRenderingContext"*)***
  %21 = load void (%"class.blink::CanvasRenderingContext"*)**, void (%"class.blink::CanvasRenderingContext"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::CanvasRenderingContext"*)*, void (%"class.blink::CanvasRenderingContext"*)** %21, i64 23
  %23 = load void (%"class.blink::CanvasRenderingContext"*)*, void (%"class.blink::CanvasRenderingContext"*)** %22, align 8
  tail call void %23(%"class.blink::CanvasRenderingContext"* %19) #7
  br label %24

24:                                               ; preds = %5, %17, %11
  %25 = getelementptr inbounds %"class.blink::GPUSwapChain", %"class.blink::GPUSwapChain"* %0, i64 0, i32 6
  %26 = getelementptr inbounds %"class.blink::Member.309", %"class.blink::Member.309"* %25, i64 0, i32 0, i32 0
  %27 = load %"class.blink::GPUTexture"*, %"class.blink::GPUTexture"** %26, align 8
  %28 = icmp eq %"class.blink::GPUTexture"* %27, null
  br i1 %28, label %29, label %52

29:                                               ; preds = %24
  %30 = load %"class.blink::WebGPUSwapBufferProvider"*, %"class.blink::WebGPUSwapBufferProvider"** %2, align 8
  %31 = load %"class.blink::GPUCanvasContext"*, %"class.blink::GPUCanvasContext"** %6, align 8
  %32 = tail call dereferenceable(8) %"class.blink::IntSize"* @_ZNK5blink16GPUCanvasContext10CanvasSizeEv(%"class.blink::GPUCanvasContext"* %31) #7
  %33 = tail call %struct.WGPUTextureImpl* @_ZN5blink24WebGPUSwapBufferProvider13GetNewTextureERKNS_7IntSizeE(%"class.blink::WebGPUSwapBufferProvider"* %30, %"class.blink::IntSize"* dereferenceable(8) %32) #7
  %34 = getelementptr inbounds %"class.blink::GPUSwapChain", %"class.blink::GPUSwapChain"* %0, i64 0, i32 5
  %35 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 72) #7
  %36 = bitcast i8* %35 to %"class.blink::GPUTexture"*
  %37 = getelementptr inbounds %"class.blink::GPUSwapChain", %"class.blink::GPUSwapChain"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %38 = load %"class.blink::GPUDevice"*, %"class.blink::GPUDevice"** %37, align 8
  %39 = load i32, i32* %34, align 4
  tail call void @_ZN5blink10GPUTextureC1EPNS_9GPUDeviceEP15WGPUTextureImpl17WGPUTextureFormat(%"class.blink::GPUTexture"* %36, %"class.blink::GPUDevice"* %38, %struct.WGPUTextureImpl* %33, i32 %39) #7
  %40 = getelementptr inbounds i8, i8* %35, i64 -4
  %41 = bitcast i8* %40 to i16*
  %42 = load atomic i16, i16* %41 monotonic, align 2
  %43 = or i16 %42, 1
  store atomic i16 %43, i16* %41 release, align 2
  %44 = ptrtoint i8* %35 to i64
  %45 = bitcast %"class.blink::Member.309"* %25 to i64*
  store atomic i64 %44, i64* %45 monotonic, align 8
  %46 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %47 = icmp eq i32 %46, 0
  %48 = bitcast i8* %35 to %"class.blink::GPUTexture"*
  br i1 %47, label %52, label %49

49:                                               ; preds = %29
  %50 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %35) #7
  %51 = load %"class.blink::GPUTexture"*, %"class.blink::GPUTexture"** %26, align 8
  br label %52

52:                                               ; preds = %49, %29, %24, %1
  %53 = phi %"class.blink::GPUTexture"* [ null, %1 ], [ %27, %24 ], [ %48, %29 ], [ %51, %49 ]
  ret %"class.blink::GPUTexture"* %53
}

declare %struct.WGPUTextureImpl* @_ZN5blink24WebGPUSwapBufferProvider13GetNewTextureERKNS_7IntSizeE(%"class.blink::WebGPUSwapBufferProvider"*, %"class.blink::IntSize"* dereferenceable(8)) local_unnamed_addr #1

declare dereferenceable(8) %"class.blink::IntSize"* @_ZNK5blink16GPUCanvasContext10CanvasSizeEv(%"class.blink::GPUCanvasContext"*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink12GPUSwapChain20OnTextureTransferredEv(%"class.blink::GPUSwapChain"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::GPUSwapChain", %"class.blink::GPUSwapChain"* %0, i64 0, i32 6
  %3 = bitcast %"class.blink::Member.309"* %2 to i64*
  store atomic i64 0, i64* %3 monotonic, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZThn40_N5blink12GPUSwapChain20OnTextureTransferredEv(%"class.blink::GPUSwapChain"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::GPUSwapChain", %"class.blink::GPUSwapChain"* %0, i64 -1, i32 1
  %3 = getelementptr inbounds %"class.blink::WebGPUSwapBufferProvider::Client", %"class.blink::WebGPUSwapBufferProvider::Client"* %2, i64 9
  %4 = bitcast %"class.blink::WebGPUSwapBufferProvider::Client"* %3 to i64*
  store atomic i64 0, i64* %4 monotonic, align 8
  ret void
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink12GPUSwapChain18GetWrapperTypeInfoEv(%"class.blink::GPUSwapChain"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink12GPUSwapChain18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #1

declare void @_ZNK8SkBitmap10eraseColorEj(%class.SkBitmap*, i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16GPUCanvasContextEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::GPUCanvasContext"*
  %4 = bitcast i8* %1 to void (%"class.blink::GPUCanvasContext"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::GPUCanvasContext"*, %"class.blink::Visitor"*)**, void (%"class.blink::GPUCanvasContext"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::GPUCanvasContext"*, %"class.blink::Visitor"*)*, void (%"class.blink::GPUCanvasContext"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::GPUCanvasContext"*, %"class.blink::Visitor"*)*, void (%"class.blink::GPUCanvasContext"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::GPUCanvasContext"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10GPUTextureEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::DawnObjectImpl"*
  %4 = bitcast i8* %1 to void (%"class.blink::DawnObjectImpl"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::DawnObjectImpl"*, %"class.blink::Visitor"*)**, void (%"class.blink::DawnObjectImpl"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::DawnObjectImpl"*, %"class.blink::Visitor"*)*, void (%"class.blink::DawnObjectImpl"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::DawnObjectImpl"*, %"class.blink::Visitor"*)*, void (%"class.blink::DawnObjectImpl"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::DawnObjectImpl"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

declare void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #1

declare void @_ZN5blink10GPUTextureC1EPNS_9GPUDeviceEP15WGPUTextureImpl17WGPUTextureFormat(%"class.blink::GPUTexture"*, %"class.blink::GPUDevice"*, %struct.WGPUTextureImpl*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #7
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !8

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #7
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.115"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.115"*)) #7
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #7
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #7
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #7
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %40, i8* %41) #7
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #7
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #7
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #7
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !8

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #7
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #7
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.115"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!4 = distinct !{!4, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!5 = distinct !{!5, !6, !"_ZN11SkImageInfo13MakeN32PremulEii5sk_spI12SkColorSpaceE: argument 0"}
!6 = distinct !{!6, !"_ZN11SkImageInfo13MakeN32PremulEii5sk_spI12SkColorSpaceE"}
!7 = !{i8 0, i8 2}
!8 = !{!"branch_weights", i32 1, i32 2000}
