; ModuleID = '../../third_party/pdfium/core/fpdfapi/page/cpdf_meshstream.cpp'
source_filename = "../../third_party/pdfium/core/fpdfapi/page/cpdf_meshstream.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CPDF_MeshVertex = type { %class.CFX_PTemplate, float, float, float }
%class.CFX_PTemplate = type { float, float }
%class.CPDF_MeshStream = type { i32, %"class.std::__1::vector"*, %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr.35", i32, i32, i32, i32, i32, i32, float, float, float, float, %"class.fxcrt::RetainPtr.69", %"class.std::__1::unique_ptr.88", [8 x float], [8 x float] }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr.1" }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %class.CPDF_Stream* }
%"class.fxcrt::RetainPtr.35" = type { %"class.std::__1::unique_ptr.36" }
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %class.CPDF_ColorSpace* }
%class.CPDF_ColorSpace = type <{ %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr", %"class.fxcrt::RetainPtr.48", i32, i32, i32, [4 x i8] }>
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.fxcrt::Observable" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.39" }
%"class.std::__1::__tree.39" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.40", %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { i64 }
%"class.fxcrt::UnownedPtr" = type { %class.CPDF_Document* }
%class.CPDF_Document = type opaque
%"class.fxcrt::RetainPtr.48" = type { %"class.std::__1::unique_ptr.49" }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %class.CPDF_Array* }
%class.CPDF_Array = type <{ %class.CPDF_Object, %"class.std::__1::vector.52", %"class.fxcrt::WeakPtr", i32, [4 x i8] }>
%class.CPDF_Object = type { %"class.fxcrt::Retainable", i32, i32 }
%"class.std::__1::vector.52" = type { %"class.std::__1::__vector_base.53" }
%"class.std::__1::__vector_base.53" = type { %"class.fxcrt::RetainPtr.54"*, %"class.fxcrt::RetainPtr.54"*, %"class.std::__1::__compressed_pair.60" }
%"class.fxcrt::RetainPtr.54" = type { %"class.std::__1::unique_ptr.55" }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %class.CPDF_Object* }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.fxcrt::RetainPtr.54"* }
%"class.fxcrt::WeakPtr" = type { %"class.fxcrt::RetainPtr.8" }
%"class.fxcrt::RetainPtr.8" = type { %"class.std::__1::unique_ptr.9" }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* }
%"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle" = type { i64, %"class.std::__1::unique_ptr.121" }
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.fxcrt::StringPoolTemplate"* }
%"class.fxcrt::StringPoolTemplate" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.124", %"class.std::__1::__compressed_pair.132", %"class.std::__1::__compressed_pair.137", %"class.std::__1::__compressed_pair.139", [4 x i8] }>
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126", %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { float }
%"class.fxcrt::RetainPtr.69" = type { %"class.std::__1::unique_ptr.70" }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %class.CPDF_StreamAcc* }
%class.CPDF_StreamAcc = type { %"class.fxcrt::Retainable", %"class.fxcrt::MaybeOwned", i32, %"class.fxcrt::ByteString", %"class.fxcrt::RetainPtr.80", %"class.fxcrt::RetainPtr" }
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.23", %"class.fxcrt::UnownedPtr.73" }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { i8* }
%"class.fxcrt::UnownedPtr.73" = type { i8* }
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.74" }
%"class.fxcrt::RetainPtr.74" = type { %"class.std::__1::unique_ptr.75" }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%"class.fxcrt::RetainPtr.80" = type { %"class.std::__1::unique_ptr.81" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %class.CPDF_Dictionary* }
%class.CPDF_Dictionary = type { %class.CPDF_Object, i32, %"class.fxcrt::WeakPtr", %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.13", %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %class.CFX_BitStream* }
%class.CFX_BitStream = type { i32, i32, %"class.fxcrt::UnownedPtr.91" }
%"class.fxcrt::UnownedPtr.91" = type { i8* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %class.CPDF_Function* }
%class.CPDF_Function = type { i32 (...)**, i32, i32, i32, %"class.std::__1::vector.95", %"class.std::__1::vector.95" }
%"class.std::__1::vector.95" = type { %"class.std::__1::__vector_base.96" }
%"class.std::__1::__vector_base.96" = type { float*, float*, %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { float* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::unique_ptr"* }
%class.CPDF_Stream = type { %class.CPDF_Object, i8, i32, %"class.fxcrt::RetainPtr.4", %"class.std::__1::unique_ptr.23", %"class.fxcrt::RetainPtr.27" }
%"class.fxcrt::RetainPtr.4" = type { %"class.std::__1::unique_ptr.5" }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %class.CPDF_Dictionary* }
%"class.fxcrt::RetainPtr.27" = type { %"class.std::__1::unique_ptr.28" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %class.IFX_SeekableReadStream* }
%class.IFX_SeekableReadStream = type { %class.IFX_StreamWithSize, %"class.fxcrt::Retainable" }
%class.IFX_StreamWithSize = type { i32 (...)** }
%"class.pdfium::span.148" = type { %"class.fxcrt::UnownedPtr.91", i64 }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.73", i64 }
%"class.pdfium::span.107" = type { %"class.fxcrt::UnownedPtr.108", i64 }
%"class.fxcrt::UnownedPtr.108" = type { float* }
%class.CFX_Matrix = type { float, float, float, float, float, float }
%"class.std::__1::vector.114" = type { %"class.std::__1::__vector_base.115" }
%"class.std::__1::__vector_base.115" = type { %class.CPDF_MeshVertex*, %class.CPDF_MeshVertex*, %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %class.CPDF_MeshVertex* }
%"class.std::__1::__vector_base_common" = type { i8 }

@.str = private unnamed_addr constant [18 x i8] c"BitsPerCoordinate\00", align 1
@.str.1 = private unnamed_addr constant [17 x i8] c"BitsPerComponent\00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"BitsPerFlag\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"Decode\00", align 1

@_ZN15CPDF_MeshVertexC1Ev = hidden unnamed_addr alias void (%class.CPDF_MeshVertex*), void (%class.CPDF_MeshVertex*)* @_ZN15CPDF_MeshVertexC2Ev
@_ZN15CPDF_MeshVertexC1ERKS_ = hidden unnamed_addr alias void (%class.CPDF_MeshVertex*, %class.CPDF_MeshVertex*), void (%class.CPDF_MeshVertex*, %class.CPDF_MeshVertex*)* @_ZN15CPDF_MeshVertexC2ERKS_
@_ZN15CPDF_MeshVertexD1Ev = hidden unnamed_addr alias void (%class.CPDF_MeshVertex*), void (%class.CPDF_MeshVertex*)* @_ZN15CPDF_MeshVertexD2Ev
@_ZN15CPDF_MeshStreamC1E11ShadingTypeRKNSt3__16vectorINS1_10unique_ptrI13CPDF_FunctionNS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEEPK11CPDF_StreamRKN5fxcrt9RetainPtrI15CPDF_ColorSpaceEE = hidden unnamed_addr alias void (%class.CPDF_MeshStream*, i32, %"class.std::__1::vector"*, %class.CPDF_Stream*, %"class.fxcrt::RetainPtr.35"*), void (%class.CPDF_MeshStream*, i32, %"class.std::__1::vector"*, %class.CPDF_Stream*, %"class.fxcrt::RetainPtr.35"*)* @_ZN15CPDF_MeshStreamC2E11ShadingTypeRKNSt3__16vectorINS1_10unique_ptrI13CPDF_FunctionNS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEEPK11CPDF_StreamRKN5fxcrt9RetainPtrI15CPDF_ColorSpaceEE
@_ZN15CPDF_MeshStreamD1Ev = hidden unnamed_addr alias void (%class.CPDF_MeshStream*), void (%class.CPDF_MeshStream*)* @_ZN15CPDF_MeshStreamD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN15CPDF_MeshVertexC2Ev(%class.CPDF_MeshVertex* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %class.CPDF_MeshVertex* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 20, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_MeshVertexC2ERKS_(%class.CPDF_MeshVertex* nocapture, %class.CPDF_MeshVertex* nocapture readonly dereferenceable(20)) unnamed_addr #1 align 2 {
  %3 = bitcast %class.CPDF_MeshVertex* %1 to i32*
  %4 = load i32, i32* %3, align 4
  %5 = bitcast %class.CPDF_MeshVertex* %0 to i32*
  store i32 %4, i32* %5, align 4
  %6 = getelementptr inbounds %class.CPDF_MeshVertex, %class.CPDF_MeshVertex* %0, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %class.CPDF_MeshVertex, %class.CPDF_MeshVertex* %1, i64 0, i32 0, i32 1
  %8 = bitcast float* %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = bitcast float* %6 to i32*
  store i32 %9, i32* %10, align 4
  %11 = getelementptr inbounds %class.CPDF_MeshVertex, %class.CPDF_MeshVertex* %0, i64 0, i32 1
  %12 = getelementptr inbounds %class.CPDF_MeshVertex, %class.CPDF_MeshVertex* %1, i64 0, i32 1
  %13 = bitcast float* %11 to i8*
  %14 = bitcast float* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 4 %14, i64 12, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN15CPDF_MeshVertexD2Ev(%class.CPDF_MeshVertex* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_MeshStreamC2E11ShadingTypeRKNSt3__16vectorINS1_10unique_ptrI13CPDF_FunctionNS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEEPK11CPDF_StreamRKN5fxcrt9RetainPtrI15CPDF_ColorSpaceEE(%class.CPDF_MeshStream*, i32, %"class.std::__1::vector"* dereferenceable(24), %class.CPDF_Stream*, %"class.fxcrt::RetainPtr.35"* nocapture readonly dereferenceable(8)) unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 0
  store i32 %1, i32* %6, align 8
  %7 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 1
  store %"class.std::__1::vector"* %2, %"class.std::__1::vector"** %7, align 8
  %8 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 2
  %9 = ptrtoint %class.CPDF_Stream* %3 to i64
  %10 = bitcast %"class.fxcrt::RetainPtr"* %8 to i64*
  store i64 %9, i64* %10, align 8
  %11 = icmp eq %class.CPDF_Stream* %3, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %class.CPDF_Stream, %class.CPDF_Stream* %3, i64 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = add nsw i64 %14, 1
  store i64 %15, i64* %13, align 8
  br label %16

16:                                               ; preds = %5, %12
  %17 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 3
  %18 = getelementptr inbounds %"class.fxcrt::RetainPtr.35", %"class.fxcrt::RetainPtr.35"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %18, align 8
  %20 = ptrtoint %class.CPDF_ColorSpace* %19 to i64
  %21 = bitcast %"class.fxcrt::RetainPtr.35"* %17 to i64*
  store i64 %20, i64* %21, align 8
  %22 = icmp eq %class.CPDF_ColorSpace* %19, null
  br i1 %22, label %27, label %23

23:                                               ; preds = %16
  %24 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %19, i64 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = add nsw i64 %25, 1
  store i64 %26, i64* %24, align 8
  br label %27

27:                                               ; preds = %16, %23
  %28 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 4
  %29 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 14
  %30 = bitcast i32* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 40, i1 false)
  %31 = tail call i8* @_Znwm(i64 64) #11, !noalias !2
  %32 = bitcast i8* %31 to %class.CPDF_StreamAcc*
  tail call void @_ZN14CPDF_StreamAccC1EPK11CPDF_Stream(%class.CPDF_StreamAcc* nonnull %32, %class.CPDF_Stream* %3) #12, !noalias !2
  %33 = ptrtoint i8* %31 to i64
  %34 = bitcast %"class.fxcrt::RetainPtr.69"* %29 to i64*
  store i64 %33, i64* %34, align 8, !alias.scope !2
  %35 = getelementptr inbounds i8, i8* %31, i64 8
  %36 = bitcast i8* %35 to i64*
  %37 = load i64, i64* %36, align 8, !noalias !2
  %38 = add nsw i64 %37, 1
  store i64 %38, i64* %36, align 8, !noalias !2
  %39 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 15
  %40 = bitcast %"class.std::__1::unique_ptr.88"* %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 72, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_MeshStreamD2Ev(%class.CPDF_MeshStream* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3 = load %class.CFX_BitStream*, %class.CFX_BitStream** %2, align 8
  store %class.CFX_BitStream* null, %class.CFX_BitStream** %2, align 8
  %4 = icmp eq %class.CFX_BitStream* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN13CFX_BitStreamD1Ev(%class.CFX_BitStream* nonnull %3) #12
  %6 = bitcast %class.CFX_BitStream* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #11
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %9 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %8, align 8
  store %class.CPDF_StreamAcc* null, %class.CPDF_StreamAcc** %8, align 8
  %10 = icmp eq %class.CPDF_StreamAcc* %9, null
  br i1 %10, label %22, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %9, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = add nsw i64 %13, -1
  store i64 %14, i64* %12, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %22

16:                                               ; preds = %11
  %17 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %9, i64 0, i32 0
  %18 = bitcast %class.CPDF_StreamAcc* %9 to void (%"class.fxcrt::Retainable"*)***
  %19 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %19, i64 1
  %21 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %20, align 8
  tail call void %21(%"class.fxcrt::Retainable"* nonnull %17) #12
  br label %22

22:                                               ; preds = %7, %11, %16
  %23 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %24 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %23, align 8
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %23, align 8
  %25 = icmp eq %class.CPDF_ColorSpace* %24, null
  br i1 %25, label %37, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %24, i64 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = add nsw i64 %28, -1
  store i64 %29, i64* %27, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %31, label %37

31:                                               ; preds = %26
  %32 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %24, i64 0, i32 0
  %33 = bitcast %class.CPDF_ColorSpace* %24 to void (%"class.fxcrt::Retainable"*)***
  %34 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %34, i64 1
  %36 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %35, align 8
  tail call void %36(%"class.fxcrt::Retainable"* nonnull %32) #12
  br label %37

37:                                               ; preds = %22, %26, %31
  %38 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %39 = load %class.CPDF_Stream*, %class.CPDF_Stream** %38, align 8
  store %class.CPDF_Stream* null, %class.CPDF_Stream** %38, align 8
  %40 = icmp eq %class.CPDF_Stream* %39, null
  br i1 %40, label %52, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %class.CPDF_Stream, %class.CPDF_Stream* %39, i64 0, i32 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = add nsw i64 %43, -1
  store i64 %44, i64* %42, align 8
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %46, label %52

46:                                               ; preds = %41
  %47 = getelementptr inbounds %class.CPDF_Stream, %class.CPDF_Stream* %39, i64 0, i32 0, i32 0
  %48 = bitcast %class.CPDF_Stream* %39 to void (%"class.fxcrt::Retainable"*)***
  %49 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %49, i64 1
  %51 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %50, align 8
  tail call void %51(%"class.fxcrt::Retainable"* nonnull %47) #12
  br label %52

52:                                               ; preds = %37, %41, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15CPDF_MeshStream4LoadEv(%class.CPDF_MeshStream* nocapture) local_unnamed_addr #1 align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"class.pdfium::span.148"*
  %4 = alloca <2 x i64>, align 16
  %5 = bitcast <2 x i64>* %4 to %"class.pdfium::span"*
  %6 = alloca %"class.fxcrt::ByteString", align 8
  %7 = alloca %"class.fxcrt::ByteString", align 8
  %8 = alloca %"class.fxcrt::ByteString", align 8
  %9 = alloca %"class.fxcrt::ByteString", align 8
  %10 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %11 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %10, align 8
  tail call void @_ZN14CPDF_StreamAcc19LoadAllDataFilteredEv(%class.CPDF_StreamAcc* %11) #12
  %12 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #12
  %13 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %10, align 8
  call void @_ZN14CPDF_StreamAcc7GetSpanEv(%"class.pdfium::span"* nonnull sret %5, %class.CPDF_StreamAcc* %13) #12
  %14 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14)
  %15 = call i8* @_Znwm(i64 16) #11
  %16 = bitcast i8* %15 to %class.CFX_BitStream*
  %17 = load <2 x i64>, <2 x i64>* %4, align 16
  store <2 x i64> %17, <2 x i64>* %2, align 16
  call void @_ZN13CFX_BitStreamC1EN6pdfium4spanIKhEE(%class.CFX_BitStream* nonnull %16, %"class.pdfium::span.148"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14)
  %18 = ptrtoint i8* %15 to i64
  %19 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 15
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.88"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %class.CFX_BitStream*, %class.CFX_BitStream** %20, align 8
  %22 = bitcast %"class.std::__1::unique_ptr.88"* %19 to i64*
  store i64 %18, i64* %22, align 8
  %23 = icmp eq %class.CFX_BitStream* %21, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %1
  call void @_ZN13CFX_BitStreamD1Ev(%class.CFX_BitStream* nonnull %21) #12
  %25 = bitcast %class.CFX_BitStream* %21 to i8*
  call void @_ZdlPv(i8* %25) #11
  br label %26

26:                                               ; preds = %24, %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #12
  %27 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %28 = load %class.CPDF_Stream*, %class.CPDF_Stream** %27, align 8
  %29 = call %class.CPDF_Dictionary* @_ZNK11CPDF_Stream7GetDictEv(%class.CPDF_Stream* %28) #12
  %30 = bitcast %"class.fxcrt::ByteString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #12
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %6, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0)) #12
  %31 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %29, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %6) #12
  %32 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 4
  store i32 %31, i32* %32, align 8
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #12
  %33 = bitcast %"class.fxcrt::ByteString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %7, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0)) #12
  %34 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %29, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %7) #12
  %35 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 5
  store i32 %34, i32* %35, align 4
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %36 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 0
  %37 = load i32, i32* %36, align 8
  %38 = and i32 %37, -4
  %39 = icmp eq i32 %38, 4
  br i1 %39, label %40, label %44

40:                                               ; preds = %26
  %41 = load i32, i32* %32, align 8
  switch i32 %41, label %125 [
    i32 1, label %42
    i32 2, label %42
    i32 4, label %42
    i32 8, label %42
    i32 12, label %42
    i32 16, label %42
    i32 24, label %42
    i32 32, label %42
  ]

42:                                               ; preds = %40, %40, %40, %40, %40, %40, %40, %40
  %43 = load i32, i32* %35, align 4
  switch i32 %43, label %125 [
    i32 1, label %44
    i32 2, label %44
    i32 4, label %44
    i32 8, label %44
    i32 12, label %44
    i32 16, label %44
  ]

44:                                               ; preds = %42, %42, %42, %42, %42, %42, %26
  %45 = bitcast %"class.fxcrt::ByteString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #12
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0)) #12
  %46 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %29, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %8) #12
  %47 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 6
  store i32 %46, i32* %47, align 8
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #12
  %48 = load i32, i32* %36, align 8
  switch i32 %48, label %51 [
    i32 4, label %49
    i32 6, label %49
    i32 7, label %49
  ]

49:                                               ; preds = %44, %44, %44
  %50 = load i32, i32* %47, align 8
  switch i32 %50, label %125 [
    i32 2, label %51
    i32 4, label %51
    i32 8, label %51
  ]

51:                                               ; preds = %49, %49, %49, %44
  %52 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %53 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %52, align 8
  %54 = call i32 @_ZNK15CPDF_ColorSpace15CountComponentsEv(%class.CPDF_ColorSpace* %53) #12
  %55 = icmp ugt i32 %54, 8
  br i1 %55, label %125, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 1
  %58 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %57, align 8
  %59 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %58, i64 0, i32 0, i32 0
  %60 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %59, align 8
  %61 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %58, i64 0, i32 0, i32 1
  %62 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %61, align 8
  %63 = icmp eq %"class.std::__1::unique_ptr"* %60, %62
  %64 = select i1 %63, i32 %54, i32 1
  %65 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 7
  store i32 %64, i32* %65, align 4
  %66 = bitcast %"class.fxcrt::ByteString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #12
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0)) #12
  %67 = call %class.CPDF_Array* @_ZNK15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %29, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %9) #12
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #12
  %68 = icmp eq %class.CPDF_Array* %67, null
  br i1 %68, label %125, label %69

69:                                               ; preds = %56
  %70 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %67, i64 0, i32 1
  %71 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %67, i64 0, i32 1, i32 0, i32 1
  %72 = bitcast %"class.fxcrt::RetainPtr.54"** %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"class.std::__1::vector.52"* %70 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = sub i64 %73, %75
  %77 = ashr exact i64 %76, 3
  %78 = load i32, i32* %65, align 4
  %79 = shl i32 %78, 1
  %80 = add i32 %79, 4
  %81 = zext i32 %80 to i64
  %82 = icmp eq i64 %77, %81
  br i1 %82, label %83, label %125

83:                                               ; preds = %69
  %84 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %67, i64 0) #12
  %85 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 10
  store float %84, float* %85, align 8
  %86 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %67, i64 1) #12
  %87 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 11
  store float %86, float* %87, align 4
  %88 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %67, i64 2) #12
  %89 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 12
  store float %88, float* %89, align 8
  %90 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %67, i64 3) #12
  %91 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 13
  store float %90, float* %91, align 4
  %92 = load i32, i32* %65, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %98

94:                                               ; preds = %98, %83
  %95 = load i32, i32* %36, align 8
  %96 = and i32 %95, -4
  %97 = icmp eq i32 %96, 4
  br i1 %97, label %114, label %125

98:                                               ; preds = %83, %98
  %99 = phi i64 [ %110, %98 ], [ 0, %83 ]
  %100 = trunc i64 %99 to i32
  %101 = shl i32 %100, 1
  %102 = add i32 %101, 4
  %103 = zext i32 %102 to i64
  %104 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %67, i64 %103) #12
  %105 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 16, i64 %99
  store float %104, float* %105, align 4
  %106 = add i32 %101, 5
  %107 = zext i32 %106 to i64
  %108 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %67, i64 %107) #12
  %109 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 17, i64 %99
  store float %108, float* %109, align 4
  %110 = add nuw nsw i64 %99, 1
  %111 = load i32, i32* %65, align 4
  %112 = zext i32 %111 to i64
  %113 = icmp ult i64 %110, %112
  br i1 %113, label %98, label %94

114:                                              ; preds = %94
  %115 = load i32, i32* %32, align 8
  %116 = icmp eq i32 %115, 32
  %117 = shl nsw i32 -1, %115
  %118 = xor i32 %117, -1
  %119 = select i1 %116, i32 -1, i32 %118
  %120 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 8
  store i32 %119, i32* %120, align 8
  %121 = load i32, i32* %35, align 4
  %122 = shl nsw i32 -1, %121
  %123 = xor i32 %122, -1
  %124 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 9
  store i32 %123, i32* %124, align 4
  br label %125

125:                                              ; preds = %49, %42, %40, %51, %94, %114, %56, %69
  %126 = phi i1 [ false, %51 ], [ false, %69 ], [ false, %56 ], [ true, %114 ], [ true, %94 ], [ false, %40 ], [ false, %42 ], [ false, %49 ]
  ret i1 %126
}

declare void @_ZN14CPDF_StreamAcc19LoadAllDataFilteredEv(%class.CPDF_StreamAcc*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN14CPDF_StreamAcc7GetSpanEv(%"class.pdfium::span"* sret, %class.CPDF_StreamAcc*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare %class.CPDF_Dictionary* @_ZNK11CPDF_Stream7GetDictEv(%class.CPDF_Stream*) unnamed_addr #4

declare i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #4

declare void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"*, i8*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #5

declare i32 @_ZNK15CPDF_ColorSpace15CountComponentsEv(%class.CPDF_ColorSpace*) local_unnamed_addr #4

declare %class.CPDF_Array* @_ZNK15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #4

declare float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array*, i64) local_unnamed_addr #4

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK15CPDF_MeshStream11CanReadFlagEv(%class.CPDF_MeshStream* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3 = load %class.CFX_BitStream*, %class.CFX_BitStream** %2, align 8
  %4 = getelementptr inbounds %class.CFX_BitStream, %class.CFX_BitStream* %3, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %class.CFX_BitStream, %class.CFX_BitStream* %3, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = tail call i32 @llvm.usub.sat.i32(i32 %5, i32 %7) #12
  %9 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 6
  %10 = load i32, i32* %9, align 8
  %11 = icmp uge i32 %8, %10
  ret i1 %11
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK15CPDF_MeshStream13CanReadCoordsEv(%class.CPDF_MeshStream* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3 = load %class.CFX_BitStream*, %class.CFX_BitStream** %2, align 8
  %4 = getelementptr inbounds %class.CFX_BitStream, %class.CFX_BitStream* %3, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %class.CFX_BitStream, %class.CFX_BitStream* %3, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = tail call i32 @llvm.usub.sat.i32(i32 %5, i32 %7) #12
  %9 = lshr i32 %8, 1
  %10 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 4
  %11 = load i32, i32* %10, align 8
  %12 = icmp uge i32 %9, %11
  ret i1 %12
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK15CPDF_MeshStream12CanReadColorEv(%class.CPDF_MeshStream* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3 = load %class.CFX_BitStream*, %class.CFX_BitStream** %2, align 8
  %4 = getelementptr inbounds %class.CFX_BitStream, %class.CFX_BitStream* %3, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %class.CFX_BitStream, %class.CFX_BitStream* %3, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = tail call i32 @llvm.usub.sat.i32(i32 %5, i32 %7) #12
  %9 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 5
  %10 = load i32, i32* %9, align 4
  %11 = udiv i32 %8, %10
  %12 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 7
  %13 = load i32, i32* %12, align 4
  %14 = icmp uge i32 %11, %13
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN15CPDF_MeshStream8ReadFlagEv(%class.CPDF_MeshStream* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %3 = load %class.CFX_BitStream*, %class.CFX_BitStream** %2, align 8
  %4 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 6
  %5 = load i32, i32* %4, align 8
  %6 = tail call i32 @_ZN13CFX_BitStream7GetBitsEj(%class.CFX_BitStream* %3, i32 %5) #12
  %7 = and i32 %6, 3
  ret i32 %7
}

declare i32 @_ZN13CFX_BitStream7GetBitsEj(%class.CFX_BitStream*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_MeshStream10ReadCoordsEv(%class.CFX_PTemplate* noalias nocapture sret, %class.CPDF_MeshStream* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %0, i64 0, i32 0
  %4 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %0, i64 0, i32 1
  store float 0.000000e+00, float* %3, align 4
  store float 0.000000e+00, float* %4, align 4
  %5 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %1, i64 0, i32 4
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 32
  %8 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %1, i64 0, i32 10
  %9 = load float, float* %8, align 8
  br i1 %7, label %10, label %46

10:                                               ; preds = %2
  %11 = fpext float %9 to double
  %12 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %1, i64 0, i32 15, i32 0, i32 0, i32 0
  %13 = load %class.CFX_BitStream*, %class.CFX_BitStream** %12, align 8
  %14 = tail call i32 @_ZN13CFX_BitStream7GetBitsEj(%class.CFX_BitStream* %13, i32 32) #12
  %15 = uitofp i32 %14 to float
  %16 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %1, i64 0, i32 11
  %17 = load float, float* %16, align 4
  %18 = load float, float* %8, align 8
  %19 = fsub float %17, %18
  %20 = fmul float %19, %15
  %21 = fpext float %20 to double
  %22 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %1, i64 0, i32 8
  %23 = load i32, i32* %22, align 8
  %24 = uitofp i32 %23 to double
  %25 = fdiv double %21, %24
  %26 = fadd double %25, %11
  %27 = fptrunc double %26 to float
  store float %27, float* %3, align 4
  %28 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %1, i64 0, i32 12
  %29 = load float, float* %28, align 8
  %30 = fpext float %29 to double
  %31 = load %class.CFX_BitStream*, %class.CFX_BitStream** %12, align 8
  %32 = load i32, i32* %5, align 8
  %33 = tail call i32 @_ZN13CFX_BitStream7GetBitsEj(%class.CFX_BitStream* %31, i32 %32) #12
  %34 = uitofp i32 %33 to float
  %35 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %1, i64 0, i32 13
  %36 = load float, float* %35, align 4
  %37 = load float, float* %28, align 8
  %38 = fsub float %36, %37
  %39 = fmul float %38, %34
  %40 = fpext float %39 to double
  %41 = load i32, i32* %22, align 8
  %42 = uitofp i32 %41 to double
  %43 = fdiv double %40, %42
  %44 = fadd double %43, %30
  %45 = fptrunc double %44 to float
  br label %76

46:                                               ; preds = %2
  %47 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %1, i64 0, i32 15, i32 0, i32 0, i32 0
  %48 = load %class.CFX_BitStream*, %class.CFX_BitStream** %47, align 8
  %49 = tail call i32 @_ZN13CFX_BitStream7GetBitsEj(%class.CFX_BitStream* %48, i32 %6) #12
  %50 = uitofp i32 %49 to float
  %51 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %1, i64 0, i32 11
  %52 = load float, float* %51, align 4
  %53 = load float, float* %8, align 8
  %54 = fsub float %52, %53
  %55 = fmul float %54, %50
  %56 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %1, i64 0, i32 8
  %57 = load i32, i32* %56, align 8
  %58 = uitofp i32 %57 to float
  %59 = fdiv float %55, %58
  %60 = fadd float %9, %59
  store float %60, float* %3, align 4
  %61 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %1, i64 0, i32 12
  %62 = load float, float* %61, align 8
  %63 = load %class.CFX_BitStream*, %class.CFX_BitStream** %47, align 8
  %64 = load i32, i32* %5, align 8
  %65 = tail call i32 @_ZN13CFX_BitStream7GetBitsEj(%class.CFX_BitStream* %63, i32 %64) #12
  %66 = uitofp i32 %65 to float
  %67 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %1, i64 0, i32 13
  %68 = load float, float* %67, align 4
  %69 = load float, float* %61, align 8
  %70 = fsub float %68, %69
  %71 = fmul float %70, %66
  %72 = load i32, i32* %56, align 8
  %73 = uitofp i32 %72 to float
  %74 = fdiv float %71, %73
  %75 = fadd float %62, %74
  br label %76

76:                                               ; preds = %46, %10
  %77 = phi float [ %75, %46 ], [ %45, %10 ]
  store float %77, float* %4, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, float } @_ZN15CPDF_MeshStream9ReadColorEv(%class.CPDF_MeshStream* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = alloca [8 x float], align 16
  %3 = alloca float, align 4
  %4 = alloca float, align 4
  %5 = alloca float, align 4
  %6 = alloca %"class.pdfium::span.107", align 8
  %7 = alloca [8 x float], align 16
  %8 = alloca i32, align 4
  %9 = alloca %"class.pdfium::span.107", align 8
  %10 = bitcast [8 x float]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #12
  %11 = getelementptr inbounds [8 x float], [8 x float]* %2, i64 0, i64 0
  %12 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 7
  %13 = bitcast [8 x float]* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 -1, i64 32, i1 false)
  %14 = load i32, i32* %12, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %20, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 5
  %19 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 9
  br label %31

20:                                               ; preds = %31, %1
  %21 = bitcast float* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #12
  store float 0.000000e+00, float* %3, align 4
  %22 = bitcast float* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #12
  store float 0.000000e+00, float* %4, align 4
  %23 = bitcast float* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23) #12
  store float 0.000000e+00, float* %5, align 4
  %24 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 1
  %25 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %25, i64 0, i32 0, i32 0
  %27 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %25, i64 0, i32 0, i32 1
  %29 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %28, align 8
  %30 = icmp eq %"class.std::__1::unique_ptr"* %27, %29
  br i1 %30, label %53, label %68

31:                                               ; preds = %16, %31
  %32 = phi i64 [ 0, %16 ], [ %49, %31 ]
  %33 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 16, i64 %32
  %34 = load float, float* %33, align 4
  %35 = load %class.CFX_BitStream*, %class.CFX_BitStream** %17, align 8
  %36 = load i32, i32* %18, align 4
  %37 = tail call i32 @_ZN13CFX_BitStream7GetBitsEj(%class.CFX_BitStream* %35, i32 %36) #12
  %38 = uitofp i32 %37 to float
  %39 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 17, i64 %32
  %40 = load float, float* %39, align 4
  %41 = load float, float* %33, align 4
  %42 = fsub float %40, %41
  %43 = fmul float %42, %38
  %44 = load i32, i32* %19, align 4
  %45 = uitofp i32 %44 to float
  %46 = fdiv float %43, %45
  %47 = fadd float %34, %46
  %48 = getelementptr inbounds [8 x float], [8 x float]* %2, i64 0, i64 %32
  store float %47, float* %48, align 4
  %49 = add nuw nsw i64 %32, 1
  %50 = load i32, i32* %12, align 4
  %51 = zext i32 %50 to i64
  %52 = icmp ult i64 %49, %51
  br i1 %52, label %31, label %20

53:                                               ; preds = %20
  %54 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %55 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %54, align 8
  %56 = getelementptr inbounds %"class.pdfium::span.107", %"class.pdfium::span.107"* %6, i64 0, i32 0, i32 0
  store float* %11, float** %56, align 8
  %57 = getelementptr inbounds %"class.pdfium::span.107", %"class.pdfium::span.107"* %6, i64 0, i32 1
  store i64 8, i64* %57, align 8
  %58 = bitcast %class.CPDF_ColorSpace* %55 to i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.107"*, float*, float*, float*)***
  %59 = load i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.107"*, float*, float*, float*)**, i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.107"*, float*, float*, float*)*** %58, align 8
  %60 = getelementptr inbounds i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.107"*, float*, float*, float*)*, i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.107"*, float*, float*, float*)** %59, i64 2
  %61 = load i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.107"*, float*, float*, float*)*, i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.107"*, float*, float*, float*)** %60, align 8
  %62 = call zeroext i1 %61(%class.CPDF_ColorSpace* %55, %"class.pdfium::span.107"* nonnull %6, float* nonnull %3, float* nonnull %4, float* nonnull %5) #12
  %63 = load float, float* %3, align 4
  %64 = insertelement <2 x float> undef, float %63, i32 0
  %65 = load float, float* %4, align 4
  %66 = insertelement <2 x float> %64, float %65, i32 1
  %67 = load float, float* %5, align 4
  br label %106

68:                                               ; preds = %20
  %69 = bitcast [8 x float]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %69) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %69, i8 0, i64 32, i1 false)
  %70 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %70) #12
  store i32 -1431655766, i32* %8, align 4
  %71 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %26, align 8
  %72 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %28, align 8
  %73 = icmp eq %"class.std::__1::unique_ptr"* %71, %72
  br i1 %73, label %76, label %74

74:                                               ; preds = %68
  %75 = getelementptr inbounds [8 x float], [8 x float]* %7, i64 0, i64 0
  br label %92

76:                                               ; preds = %103, %68
  %77 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %78 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %77, align 8
  %79 = getelementptr inbounds [8 x float], [8 x float]* %7, i64 0, i64 0
  %80 = getelementptr inbounds %"class.pdfium::span.107", %"class.pdfium::span.107"* %9, i64 0, i32 0, i32 0
  store float* %79, float** %80, align 8
  %81 = getelementptr inbounds %"class.pdfium::span.107", %"class.pdfium::span.107"* %9, i64 0, i32 1
  store i64 8, i64* %81, align 8
  %82 = bitcast %class.CPDF_ColorSpace* %78 to i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.107"*, float*, float*, float*)***
  %83 = load i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.107"*, float*, float*, float*)**, i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.107"*, float*, float*, float*)*** %82, align 8
  %84 = getelementptr inbounds i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.107"*, float*, float*, float*)*, i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.107"*, float*, float*, float*)** %83, i64 2
  %85 = load i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.107"*, float*, float*, float*)*, i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span.107"*, float*, float*, float*)** %84, align 8
  %86 = call zeroext i1 %85(%class.CPDF_ColorSpace* %78, %"class.pdfium::span.107"* nonnull %9, float* nonnull %3, float* nonnull %4, float* nonnull %5) #12
  %87 = load float, float* %3, align 4
  %88 = insertelement <2 x float> undef, float %87, i32 0
  %89 = load float, float* %4, align 4
  %90 = insertelement <2 x float> %88, float %89, i32 1
  %91 = load float, float* %5, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %70) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %69) #12
  br label %106

92:                                               ; preds = %74, %103
  %93 = phi %"class.std::__1::unique_ptr"* [ %71, %74 ], [ %104, %103 ]
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %93, i64 0, i32 0, i32 0, i32 0
  %95 = load %class.CPDF_Function*, %class.CPDF_Function** %94, align 8
  %96 = icmp eq %class.CPDF_Function* %95, null
  br i1 %96, label %103, label %97

97:                                               ; preds = %92
  %98 = getelementptr inbounds %class.CPDF_Function, %class.CPDF_Function* %95, i64 0, i32 3
  %99 = load i32, i32* %98, align 8
  %100 = icmp ult i32 %99, 9
  br i1 %100, label %101, label %103

101:                                              ; preds = %97
  %102 = call zeroext i1 @_ZNK13CPDF_Function4CallEPKfjPfPi(%class.CPDF_Function* nonnull %95, float* nonnull %11, i32 1, float* nonnull %75, i32* nonnull %8) #12
  br label %103

103:                                              ; preds = %92, %101, %97
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %93, i64 1
  %105 = icmp eq %"class.std::__1::unique_ptr"* %104, %72
  br i1 %105, label %76, label %92

106:                                              ; preds = %76, %53
  %107 = phi float [ %67, %53 ], [ %91, %76 ]
  %108 = phi <2 x float> [ %66, %53 ], [ %90, %76 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #12
  %109 = insertvalue { <2 x float>, float } undef, <2 x float> %108, 0
  %110 = insertvalue { <2 x float>, float } %109, float %107, 1
  ret { <2 x float>, float } %110
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare zeroext i1 @_ZNK13CPDF_Function4CallEPKfjPfPi(%class.CPDF_Function*, float*, i32, float*, i32*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15CPDF_MeshStream10ReadVertexERK10CFX_MatrixP15CPDF_MeshVertexPj(%class.CPDF_MeshStream* nocapture readonly, %class.CFX_Matrix* dereferenceable(24), %class.CPDF_MeshVertex*, i32* nocapture) local_unnamed_addr #1 align 2 {
  %5 = alloca %class.CFX_PTemplate, align 4
  %6 = alloca %class.CFX_PTemplate, align 4
  %7 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %8 = load %class.CFX_BitStream*, %class.CFX_BitStream** %7, align 8
  %9 = getelementptr inbounds %class.CFX_BitStream, %class.CFX_BitStream* %8, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %class.CFX_BitStream, %class.CFX_BitStream* %8, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = tail call i32 @llvm.usub.sat.i32(i32 %10, i32 %12) #12
  %14 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 6
  %15 = load i32, i32* %14, align 8
  %16 = icmp ult i32 %13, %15
  br i1 %16, label %70, label %17

17:                                               ; preds = %4
  %18 = tail call i32 @_ZN13CFX_BitStream7GetBitsEj(%class.CFX_BitStream* %8, i32 %15) #12
  %19 = and i32 %18, 3
  store i32 %19, i32* %3, align 4
  %20 = load %class.CFX_BitStream*, %class.CFX_BitStream** %7, align 8
  %21 = getelementptr inbounds %class.CFX_BitStream, %class.CFX_BitStream* %20, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %class.CFX_BitStream, %class.CFX_BitStream* %20, i64 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = tail call i32 @llvm.usub.sat.i32(i32 %22, i32 %24) #12
  %26 = lshr i32 %25, 1
  %27 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 4
  %28 = load i32, i32* %27, align 8
  %29 = icmp ult i32 %26, %28
  br i1 %29, label %70, label %30

30:                                               ; preds = %17
  %31 = bitcast %class.CFX_PTemplate* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #12
  %32 = bitcast %class.CFX_PTemplate* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #12
  call void @_ZN15CPDF_MeshStream10ReadCoordsEv(%class.CFX_PTemplate* nonnull sret %6, %class.CPDF_MeshStream* %0)
  call void @_ZNK10CFX_Matrix9TransformERK13CFX_PTemplateIfE(%class.CFX_PTemplate* nonnull sret %5, %class.CFX_Matrix* %1, %class.CFX_PTemplate* nonnull dereferenceable(8) %6) #12
  %33 = getelementptr inbounds %class.CPDF_MeshVertex, %class.CPDF_MeshVertex* %2, i64 0, i32 0
  %34 = icmp eq %class.CFX_PTemplate* %33, %5
  br i1 %34, label %44, label %35

35:                                               ; preds = %30
  %36 = bitcast %class.CFX_PTemplate* %5 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = bitcast %class.CPDF_MeshVertex* %2 to i32*
  store i32 %37, i32* %38, align 4
  %39 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %5, i64 0, i32 1
  %40 = bitcast float* %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %class.CPDF_MeshVertex, %class.CPDF_MeshVertex* %2, i64 0, i32 0, i32 1
  %43 = bitcast float* %42 to i32*
  store i32 %41, i32* %43, align 4
  br label %44

44:                                               ; preds = %30, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #12
  %45 = load %class.CFX_BitStream*, %class.CFX_BitStream** %7, align 8
  %46 = getelementptr inbounds %class.CFX_BitStream, %class.CFX_BitStream* %45, i64 0, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %class.CFX_BitStream, %class.CFX_BitStream* %45, i64 0, i32 0
  %49 = load i32, i32* %48, align 8
  %50 = call i32 @llvm.usub.sat.i32(i32 %47, i32 %49) #12
  %51 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 5
  %52 = load i32, i32* %51, align 4
  %53 = udiv i32 %50, %52
  %54 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %0, i64 0, i32 7
  %55 = load i32, i32* %54, align 4
  %56 = icmp ult i32 %53, %55
  br i1 %56, label %70, label %57

57:                                               ; preds = %44
  %58 = call { <2 x float>, float } @_ZN15CPDF_MeshStream9ReadColorEv(%class.CPDF_MeshStream* %0)
  %59 = extractvalue { <2 x float>, float } %58, 0
  %60 = extractvalue { <2 x float>, float } %58, 1
  %61 = getelementptr inbounds %class.CPDF_MeshVertex, %class.CPDF_MeshVertex* %2, i64 0, i32 1
  %62 = getelementptr inbounds %class.CPDF_MeshVertex, %class.CPDF_MeshVertex* %2, i64 0, i32 2
  %63 = getelementptr inbounds %class.CPDF_MeshVertex, %class.CPDF_MeshVertex* %2, i64 0, i32 3
  %64 = bitcast <2 x float> %59 to <2 x i32>
  %65 = extractelement <2 x i32> %64, i32 0
  %66 = bitcast float* %61 to i32*
  store i32 %65, i32* %66, align 4
  %67 = extractelement <2 x i32> %64, i32 1
  %68 = bitcast float* %62 to i32*
  store i32 %67, i32* %68, align 4
  store float %60, float* %63, align 4
  %69 = load %class.CFX_BitStream*, %class.CFX_BitStream** %7, align 8
  call void @_ZN13CFX_BitStream9ByteAlignEv(%class.CFX_BitStream* %69) #12
  br label %70

70:                                               ; preds = %44, %17, %4, %57
  %71 = phi i1 [ true, %57 ], [ false, %4 ], [ false, %17 ], [ false, %44 ]
  ret i1 %71
}

declare void @_ZNK10CFX_Matrix9TransformERK13CFX_PTemplateIfE(%class.CFX_PTemplate* sret, %class.CFX_Matrix*, %class.CFX_PTemplate* dereferenceable(8)) local_unnamed_addr #4

declare void @_ZN13CFX_BitStream9ByteAlignEv(%class.CFX_BitStream*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_MeshStream13ReadVertexRowERK10CFX_Matrixi(%"class.std::__1::vector.114"* noalias nocapture sret, %class.CPDF_MeshStream* nocapture readonly, %class.CFX_Matrix* dereferenceable(24), i32) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.std::__1::vector.114", align 16
  %6 = alloca { float, float, float }, align 8
  %7 = alloca %class.CFX_PTemplate, align 4
  %8 = alloca %class.CFX_PTemplate, align 4
  %9 = bitcast %"class.std::__1::vector.114"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.std::__1::vector.114", %"class.std::__1::vector.114"* %5, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::vector.114", %"class.std::__1::vector.114"* %5, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::vector.114", %"class.std::__1::vector.114"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 0, i64 24, i1 false) #12
  %13 = icmp sgt i32 %3, 0
  br i1 %13, label %14, label %165

14:                                               ; preds = %4
  %15 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %1, i64 0, i32 15, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %1, i64 0, i32 4
  %17 = bitcast { float, float, float }* %6 to i8*
  %18 = bitcast %class.CPDF_MeshVertex** %11 to i64*
  %19 = bitcast %"class.std::__1::vector.114"* %5 to i64*
  %20 = bitcast %class.CPDF_MeshVertex** %12 to i64*
  %21 = bitcast %class.CFX_PTemplate* %7 to i8*
  %22 = bitcast %class.CFX_PTemplate* %8 to i8*
  %23 = bitcast %class.CFX_PTemplate* %7 to i32*
  %24 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %7, i64 0, i32 1
  %25 = bitcast float* %24 to i32*
  %26 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %1, i64 0, i32 5
  %27 = getelementptr inbounds %class.CPDF_MeshStream, %class.CPDF_MeshStream* %1, i64 0, i32 7
  br label %28

28:                                               ; preds = %146, %14
  %29 = phi i32 [ 0, %14 ], [ %159, %146 ]
  %30 = load %class.CFX_BitStream*, %class.CFX_BitStream** %15, align 8
  %31 = getelementptr inbounds %class.CFX_BitStream, %class.CFX_BitStream* %30, i64 0, i32 0
  %32 = load i32, i32* %31, align 8
  %33 = getelementptr inbounds %class.CFX_BitStream, %class.CFX_BitStream* %30, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = icmp ult i32 %32, %34
  br i1 %35, label %36, label %41

36:                                               ; preds = %28
  %37 = call i32 @llvm.usub.sat.i32(i32 %34, i32 %32) #12
  %38 = lshr i32 %37, 1
  %39 = load i32, i32* %16, align 8
  %40 = icmp ult i32 %38, %39
  br i1 %40, label %41, label %43

41:                                               ; preds = %36, %28
  %42 = bitcast %"class.std::__1::vector.114"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 24, i1 false) #12
  br label %171

43:                                               ; preds = %36
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %17)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 12, i1 false)
  %44 = load %class.CPDF_MeshVertex*, %class.CPDF_MeshVertex** %11, align 8
  %45 = load %class.CPDF_MeshVertex*, %class.CPDF_MeshVertex** %12, align 16
  %46 = icmp ult %class.CPDF_MeshVertex* %44, %45
  %47 = ptrtoint %class.CPDF_MeshVertex* %44 to i64
  %48 = ptrtoint %class.CPDF_MeshVertex* %45 to i64
  br i1 %46, label %49, label %57

49:                                               ; preds = %43
  %50 = bitcast %class.CPDF_MeshVertex* %44 to i32*
  store i32 0, i32* %50, align 4
  %51 = getelementptr inbounds %class.CPDF_MeshVertex, %class.CPDF_MeshVertex* %44, i64 0, i32 0, i32 1
  %52 = bitcast float* %51 to i32*
  store i32 0, i32* %52, align 4
  %53 = getelementptr inbounds %class.CPDF_MeshVertex, %class.CPDF_MeshVertex* %44, i64 0, i32 1
  %54 = bitcast float* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %54, i8* nonnull align 8 %17, i64 12, i1 false)
  %55 = getelementptr inbounds %class.CPDF_MeshVertex, %class.CPDF_MeshVertex* %44, i64 1
  %56 = ptrtoint %class.CPDF_MeshVertex* %55 to i64
  store i64 %56, i64* %18, align 8
  br label %122

57:                                               ; preds = %43
  %58 = load i64, i64* %19, align 16
  %59 = sub i64 %47, %58
  %60 = sdiv exact i64 %59, 20
  %61 = add nsw i64 %60, 1
  %62 = icmp ugt i64 %61, 922337203685477580
  %63 = inttoptr i64 %58 to %class.CPDF_MeshVertex*
  br i1 %62, label %64, label %66

64:                                               ; preds = %57
  %65 = bitcast %"class.std::__1::vector.114"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %65) #13
  unreachable

66:                                               ; preds = %57
  %67 = sub i64 %48, %58
  %68 = sdiv exact i64 %67, 20
  %69 = icmp ult i64 %68, 461168601842738790
  br i1 %69, label %70, label %75

70:                                               ; preds = %66
  %71 = shl nsw i64 %68, 1
  %72 = icmp ult i64 %71, %61
  %73 = select i1 %72, i64 %61, i64 %71
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %80, label %75

75:                                               ; preds = %70, %66
  %76 = phi i64 [ %73, %70 ], [ 922337203685477580, %66 ]
  %77 = mul i64 %76, 20
  %78 = call i8* @_Znwm(i64 %77) #11
  %79 = bitcast i8* %78 to %class.CPDF_MeshVertex*
  br label %80

80:                                               ; preds = %75, %70
  %81 = phi i64 [ %76, %75 ], [ 0, %70 ]
  %82 = phi %class.CPDF_MeshVertex* [ %79, %75 ], [ null, %70 ]
  %83 = getelementptr inbounds %class.CPDF_MeshVertex, %class.CPDF_MeshVertex* %82, i64 %60
  %84 = getelementptr inbounds %class.CPDF_MeshVertex, %class.CPDF_MeshVertex* %82, i64 %81
  %85 = ptrtoint %class.CPDF_MeshVertex* %84 to i64
  %86 = bitcast %class.CPDF_MeshVertex* %83 to i32*
  store i32 0, i32* %86, align 4
  %87 = getelementptr inbounds %class.CPDF_MeshVertex, %class.CPDF_MeshVertex* %82, i64 %60, i32 0, i32 1
  %88 = bitcast float* %87 to i32*
  store i32 0, i32* %88, align 4
  %89 = getelementptr inbounds %class.CPDF_MeshVertex, %class.CPDF_MeshVertex* %82, i64 %60, i32 1
  %90 = bitcast float* %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %90, i8* nonnull align 8 %17, i64 12, i1 false)
  %91 = getelementptr inbounds %class.CPDF_MeshVertex, %class.CPDF_MeshVertex* %83, i64 1
  %92 = ptrtoint %class.CPDF_MeshVertex* %91 to i64
  %93 = icmp eq %class.CPDF_MeshVertex* %44, %63
  br i1 %93, label %114, label %94

94:                                               ; preds = %80, %94
  %95 = phi %class.CPDF_MeshVertex* [ %97, %94 ], [ %83, %80 ]
  %96 = phi %class.CPDF_MeshVertex* [ %98, %94 ], [ %44, %80 ]
  %97 = getelementptr inbounds %class.CPDF_MeshVertex, %class.CPDF_MeshVertex* %95, i64 -1
  %98 = getelementptr inbounds %class.CPDF_MeshVertex, %class.CPDF_MeshVertex* %96, i64 -1
  %99 = bitcast %class.CPDF_MeshVertex* %98 to i32*
  %100 = load i32, i32* %99, align 4
  %101 = bitcast %class.CPDF_MeshVertex* %97 to i32*
  store i32 %100, i32* %101, align 4
  %102 = getelementptr inbounds %class.CPDF_MeshVertex, %class.CPDF_MeshVertex* %95, i64 -1, i32 0, i32 1
  %103 = getelementptr inbounds %class.CPDF_MeshVertex, %class.CPDF_MeshVertex* %96, i64 -1, i32 0, i32 1
  %104 = bitcast float* %103 to i32*
  %105 = load i32, i32* %104, align 4
  %106 = bitcast float* %102 to i32*
  store i32 %105, i32* %106, align 4
  %107 = getelementptr inbounds %class.CPDF_MeshVertex, %class.CPDF_MeshVertex* %95, i64 -1, i32 1
  %108 = getelementptr inbounds %class.CPDF_MeshVertex, %class.CPDF_MeshVertex* %96, i64 -1, i32 1
  %109 = bitcast float* %107 to i8*
  %110 = bitcast float* %108 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %109, i8* align 4 %110, i64 12, i1 false) #12
  %111 = icmp eq %class.CPDF_MeshVertex* %98, %63
  br i1 %111, label %112, label %94

112:                                              ; preds = %94
  %113 = load i64, i64* %19, align 16
  br label %114

114:                                              ; preds = %80, %112
  %115 = phi %class.CPDF_MeshVertex* [ %97, %112 ], [ %83, %80 ]
  %116 = phi i64 [ %113, %112 ], [ %47, %80 ]
  %117 = ptrtoint %class.CPDF_MeshVertex* %115 to i64
  store i64 %117, i64* %19, align 16
  store i64 %92, i64* %18, align 8
  store i64 %85, i64* %20, align 16
  %118 = icmp eq i64 %116, 0
  br i1 %118, label %122, label %119

119:                                              ; preds = %114
  %120 = inttoptr i64 %116 to i8*
  call void @_ZdlPv(i8* %120) #11
  %121 = load %class.CPDF_MeshVertex*, %class.CPDF_MeshVertex** %11, align 8
  br label %122

122:                                              ; preds = %119, %114, %49
  %123 = phi %class.CPDF_MeshVertex* [ %121, %119 ], [ %91, %114 ], [ %55, %49 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %17)
  %124 = getelementptr inbounds %class.CPDF_MeshVertex, %class.CPDF_MeshVertex* %123, i64 -1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12
  call void @_ZN15CPDF_MeshStream10ReadCoordsEv(%class.CFX_PTemplate* nonnull sret %8, %class.CPDF_MeshStream* %1)
  call void @_ZNK10CFX_Matrix9TransformERK13CFX_PTemplateIfE(%class.CFX_PTemplate* nonnull sret %7, %class.CFX_Matrix* %2, %class.CFX_PTemplate* nonnull dereferenceable(8) %8) #12
  %125 = getelementptr inbounds %class.CPDF_MeshVertex, %class.CPDF_MeshVertex* %124, i64 0, i32 0
  %126 = icmp eq %class.CFX_PTemplate* %125, %7
  br i1 %126, label %133, label %127

127:                                              ; preds = %122
  %128 = load i32, i32* %23, align 4
  %129 = bitcast %class.CPDF_MeshVertex* %124 to i32*
  store i32 %128, i32* %129, align 4
  %130 = load i32, i32* %25, align 4
  %131 = getelementptr inbounds %class.CPDF_MeshVertex, %class.CPDF_MeshVertex* %123, i64 -1, i32 0, i32 1
  %132 = bitcast float* %131 to i32*
  store i32 %130, i32* %132, align 4
  br label %133

133:                                              ; preds = %122, %127
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  %134 = load %class.CFX_BitStream*, %class.CFX_BitStream** %15, align 8
  %135 = getelementptr inbounds %class.CFX_BitStream, %class.CFX_BitStream* %134, i64 0, i32 1
  %136 = load i32, i32* %135, align 4
  %137 = getelementptr inbounds %class.CFX_BitStream, %class.CFX_BitStream* %134, i64 0, i32 0
  %138 = load i32, i32* %137, align 8
  %139 = call i32 @llvm.usub.sat.i32(i32 %136, i32 %138) #12
  %140 = load i32, i32* %26, align 4
  %141 = udiv i32 %139, %140
  %142 = load i32, i32* %27, align 4
  %143 = icmp ult i32 %141, %142
  br i1 %143, label %144, label %146

144:                                              ; preds = %133
  %145 = bitcast %"class.std::__1::vector.114"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %145, i8 0, i64 24, i1 false) #12
  br label %171

146:                                              ; preds = %133
  %147 = call { <2 x float>, float } @_ZN15CPDF_MeshStream9ReadColorEv(%class.CPDF_MeshStream* %1)
  %148 = extractvalue { <2 x float>, float } %147, 0
  %149 = extractvalue { <2 x float>, float } %147, 1
  %150 = getelementptr inbounds %class.CPDF_MeshVertex, %class.CPDF_MeshVertex* %123, i64 -1, i32 1
  %151 = getelementptr inbounds %class.CPDF_MeshVertex, %class.CPDF_MeshVertex* %123, i64 -1, i32 2
  %152 = getelementptr inbounds %class.CPDF_MeshVertex, %class.CPDF_MeshVertex* %123, i64 -1, i32 3
  %153 = bitcast <2 x float> %148 to <2 x i32>
  %154 = extractelement <2 x i32> %153, i32 0
  %155 = bitcast float* %150 to i32*
  store i32 %154, i32* %155, align 4
  %156 = extractelement <2 x i32> %153, i32 1
  %157 = bitcast float* %151 to i32*
  store i32 %156, i32* %157, align 4
  store float %149, float* %152, align 4
  %158 = load %class.CFX_BitStream*, %class.CFX_BitStream** %15, align 8
  call void @_ZN13CFX_BitStream9ByteAlignEv(%class.CFX_BitStream* %158) #12
  %159 = add nuw nsw i32 %29, 1
  %160 = icmp eq i32 %159, %3
  br i1 %160, label %161, label %28

161:                                              ; preds = %146
  %162 = bitcast %"class.std::__1::vector.114"* %5 to <2 x i64>*
  %163 = load <2 x i64>, <2 x i64>* %162, align 16
  %164 = load i64, i64* %20, align 16
  br label %165

165:                                              ; preds = %4, %161
  %166 = phi i64 [ %164, %161 ], [ 0, %4 ]
  %167 = phi <2 x i64> [ %163, %161 ], [ zeroinitializer, %4 ]
  %168 = bitcast %"class.std::__1::vector.114"* %0 to <2 x i64>*
  store <2 x i64> %167, <2 x i64>* %168, align 8
  %169 = getelementptr inbounds %"class.std::__1::vector.114", %"class.std::__1::vector.114"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %170 = bitcast %class.CPDF_MeshVertex** %169 to i64*
  store i64 %166, i64* %170, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 0, i64 24, i1 false) #12
  br label %171

171:                                              ; preds = %144, %41, %165
  %172 = load %class.CPDF_MeshVertex*, %class.CPDF_MeshVertex** %10, align 16
  %173 = icmp eq %class.CPDF_MeshVertex* %172, null
  br i1 %173, label %178, label %174

174:                                              ; preds = %171
  %175 = ptrtoint %class.CPDF_MeshVertex* %172 to i64
  %176 = bitcast %class.CPDF_MeshVertex** %11 to i64*
  store i64 %175, i64* %176, align 8
  %177 = bitcast %class.CPDF_MeshVertex* %172 to i8*
  call void @_ZdlPv(i8* %177) #11
  br label %178

178:                                              ; preds = %171, %174
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #12
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN14CPDF_StreamAccC1EPK11CPDF_Stream(%class.CPDF_StreamAcc*, %class.CPDF_Stream*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN13CFX_BitStreamD1Ev(%class.CFX_BitStream*) unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZN13CFX_BitStreamC1EN6pdfium4spanIKhEE(%class.CFX_BitStream*, %"class.pdfium::span.148"*) unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.usub.sat.i32(i32, i32) #10

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN6pdfium10MakeRetainI14CPDF_StreamAccJRPK11CPDF_StreamEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!4 = distinct !{!4, !"_ZN6pdfium10MakeRetainI14CPDF_StreamAccJRPK11CPDF_StreamEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
