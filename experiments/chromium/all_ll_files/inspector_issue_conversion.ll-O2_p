; ModuleID = '../../third_party/blink/renderer/core/inspector/inspector_issue_conversion.cc'
source_filename = "../../third_party/blink/renderer/core/inspector/inspector_issue_conversion.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::protocol::Audits::InspectorIssue" = type { %"class.crdtp::ProtocolObject", %"class.WTF::String", %"class.std::__1::unique_ptr.1" }
%"class.crdtp::ProtocolObject" = type { %"class.crdtp::Serializable" }
%"class.crdtp::Serializable" = type { i32 (...)** }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.blink::protocol::Audits::InspectorIssueDetails"* }
%"class.blink::protocol::Audits::InspectorIssueDetails" = type { %"class.crdtp::ProtocolObject.4", %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::PtrMaybe.43", %"class.crdtp::detail::PtrMaybe.63", %"class.crdtp::detail::PtrMaybe.73", %"class.crdtp::detail::PtrMaybe.83", %"class.crdtp::detail::PtrMaybe.104", %"class.crdtp::detail::PtrMaybe.114", %"class.crdtp::detail::PtrMaybe.124", %"class.crdtp::detail::PtrMaybe.134", %"class.crdtp::detail::PtrMaybe.163", %"class.crdtp::detail::PtrMaybe.173", %"class.crdtp::detail::PtrMaybe.183" }
%"class.crdtp::ProtocolObject.4" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe" = type { %"class.std::__1::unique_ptr.7" }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.blink::protocol::Audits::SameSiteCookieIssueDetails"* }
%"class.blink::protocol::Audits::SameSiteCookieIssueDetails" = type { %"class.crdtp::ProtocolObject.10", %"class.crdtp::detail::PtrMaybe.13", %"class.crdtp::detail::ValueMaybe", %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::PtrMaybe.30" }
%"class.crdtp::ProtocolObject.10" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.13" = type { %"class.std::__1::unique_ptr.14" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.blink::protocol::Audits::AffectedCookie"* }
%"class.blink::protocol::Audits::AffectedCookie" = type { %"class.crdtp::ProtocolObject.17", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.17" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.std::__1::vector"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.WTF::String"*, %"class.WTF::String"*, %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.WTF::String"* }
%"class.crdtp::detail::ValueMaybe" = type { i8, %"class.WTF::String" }
%"class.crdtp::detail::PtrMaybe.30" = type { %"class.std::__1::unique_ptr.31" }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.blink::protocol::Audits::AffectedRequest"* }
%"class.blink::protocol::Audits::AffectedRequest" = type { %"class.crdtp::ProtocolObject.34", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.34" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.43" = type { %"class.std::__1::unique_ptr.44" }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.blink::protocol::Audits::MixedContentIssueDetails"* }
%"class.blink::protocol::Audits::MixedContentIssueDetails" = type { %"class.crdtp::ProtocolObject.47", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.30", %"class.crdtp::detail::PtrMaybe.50" }
%"class.crdtp::ProtocolObject.47" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.50" = type { %"class.std::__1::unique_ptr.51" }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.blink::protocol::Audits::AffectedFrame"* }
%"class.blink::protocol::Audits::AffectedFrame" = type { %"class.crdtp::ProtocolObject.54", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.54" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.63" = type { %"class.std::__1::unique_ptr.64" }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.blink::protocol::Audits::BlockedByResponseIssueDetails"* }
%"class.blink::protocol::Audits::BlockedByResponseIssueDetails" = type { %"class.crdtp::ProtocolObject.67", %"class.std::__1::unique_ptr.31", %"class.crdtp::detail::PtrMaybe.50", %"class.crdtp::detail::PtrMaybe.50", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.67" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.73" = type { %"class.std::__1::unique_ptr.74" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::protocol::Audits::HeavyAdIssueDetails"* }
%"class.blink::protocol::Audits::HeavyAdIssueDetails" = type { %"class.crdtp::ProtocolObject.77", %"class.WTF::String", %"class.WTF::String", %"class.std::__1::unique_ptr.51" }
%"class.crdtp::ProtocolObject.77" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.83" = type { %"class.std::__1::unique_ptr.84" }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.blink::protocol::Audits::ContentSecurityPolicyIssueDetails"* }
%"class.blink::protocol::Audits::ContentSecurityPolicyIssueDetails" = type { %"class.crdtp::ProtocolObject.87", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", i8, %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.50", %"class.crdtp::detail::PtrMaybe.90", %"class.crdtp::detail::ValueMaybe.100" }
%"class.crdtp::ProtocolObject.87" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.90" = type { %"class.std::__1::unique_ptr.91" }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.blink::protocol::Audits::SourceCodeLocation"* }
%"class.blink::protocol::Audits::SourceCodeLocation" = type { %"class.crdtp::ProtocolObject.94", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", i32, i32 }
%"class.crdtp::ProtocolObject.94" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::ValueMaybe.100" = type { i8, i32 }
%"class.crdtp::detail::PtrMaybe.104" = type { %"class.std::__1::unique_ptr.105" }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.blink::protocol::Audits::SharedArrayBufferIssueDetails"* }
%"class.blink::protocol::Audits::SharedArrayBufferIssueDetails" = type { %"class.crdtp::ProtocolObject.108", %"class.std::__1::unique_ptr.91", i8, %"class.WTF::String" }
%"class.crdtp::ProtocolObject.108" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.114" = type { %"class.std::__1::unique_ptr.115" }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.blink::protocol::Audits::TrustedWebActivityIssueDetails"* }
%"class.blink::protocol::Audits::TrustedWebActivityIssueDetails" = type { %"class.crdtp::ProtocolObject.118", %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe.100", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.118" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.124" = type { %"class.std::__1::unique_ptr.125" }
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.blink::protocol::Audits::LowTextContrastIssueDetails"* }
%"class.blink::protocol::Audits::LowTextContrastIssueDetails" = type { %"class.crdtp::ProtocolObject.128", i32, %"class.WTF::String", double, double, double, %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.128" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.134" = type { %"class.std::__1::unique_ptr.135" }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.blink::protocol::Audits::CorsIssueDetails"* }
%"class.blink::protocol::Audits::CorsIssueDetails" = type { %"class.crdtp::ProtocolObject.138", %"class.std::__1::unique_ptr.141", i8, %"class.std::__1::unique_ptr.31", %"class.crdtp::detail::PtrMaybe.90", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::PtrMaybe.150" }
%"class.crdtp::ProtocolObject.138" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.blink::protocol::Network::CorsErrorStatus"* }
%"class.blink::protocol::Network::CorsErrorStatus" = type { %"class.crdtp::ProtocolObject.144", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.144" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.150" = type { %"class.std::__1::unique_ptr.151" }
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.blink::protocol::Network::ClientSecurityState"* }
%"class.blink::protocol::Network::ClientSecurityState" = type { %"class.crdtp::ProtocolObject.154", i8, %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.154" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.163" = type { %"class.std::__1::unique_ptr.164" }
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.blink::protocol::Audits::AttributionReportingIssueDetails"* }
%"class.blink::protocol::Audits::AttributionReportingIssueDetails" = type { %"class.crdtp::ProtocolObject.167", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.50", %"class.crdtp::detail::PtrMaybe.30", %"class.crdtp::detail::ValueMaybe.100", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.167" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.173" = type { %"class.std::__1::unique_ptr.174" }
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.blink::protocol::Audits::QuirksModeIssueDetails"* }
%"class.blink::protocol::Audits::QuirksModeIssueDetails" = type { %"class.crdtp::ProtocolObject.177", i8, i32, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.177" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.183" = type { %"class.std::__1::unique_ptr.184" }
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.blink::protocol::Audits::NavigatorUserAgentIssueDetails"* }
%"class.blink::protocol::Audits::NavigatorUserAgentIssueDetails" = type { %"class.crdtp::ProtocolObject.187", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.90" }
%"class.crdtp::ProtocolObject.187" = type { %"class.crdtp::Serializable" }
%"class.blink::InspectorIssue" = type { i32, %"class.mojo::StructPtr" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.199" }
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.blink::mojom::blink::InspectorIssueDetails"* }
%"class.blink::mojom::blink::InspectorIssueDetails" = type { %"class.mojo::StructPtr.202", %"class.mojo::StructPtr.222", %"class.mojo::StructPtr.231", %"class.mojo::StructPtr.238", %"class.mojo::StructPtr.247", %"class.mojo::StructPtr.254", %"class.mojo::StructPtr.261", %"class.mojo::StructPtr.268" }
%"class.mojo::StructPtr.202" = type { %"class.std::__1::unique_ptr.203" }
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.blink::mojom::blink::SameSiteCookieIssueDetails"* }
%"class.blink::mojom::blink::SameSiteCookieIssueDetails" = type { %"class.mojo::InlinedStructPtr", %"class.WTF::Vector", %"class.WTF::Vector.206", i32, %"class.absl::optional", %"class.absl::optional", %"class.mojo::InlinedStructPtr.217" }
%"class.mojo::InlinedStructPtr" = type <{ %"class.blink::mojom::blink::AffectedCookie", i32, [4 x i8] }>
%"class.blink::mojom::blink::AffectedCookie" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i32*, i32, i32 }
%"class.WTF::Vector.206" = type { %"class.WTF::VectorBuffer.207" }
%"class.WTF::VectorBuffer.207" = type { %"class.WTF::VectorBufferBase.208" }
%"class.WTF::VectorBufferBase.208" = type { i32*, i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.blink::KURL" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.211" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.blink::KURL"* }
%"class.mojo::InlinedStructPtr.217" = type <{ %"class.blink::mojom::blink::AffectedRequest", i32, [4 x i8] }>
%"class.blink::mojom::blink::AffectedRequest" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.mojo::StructPtr.222" = type { %"class.std::__1::unique_ptr.223" }
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.blink::mojom::blink::MixedContentIssueDetails"* }
%"class.blink::mojom::blink::MixedContentIssueDetails" = type { i32, i32, %"class.WTF::String", %"class.WTF::String", %"class.mojo::InlinedStructPtr.217", %"class.mojo::InlinedStructPtr.226" }
%"class.mojo::InlinedStructPtr.226" = type <{ %"class.blink::mojom::blink::AffectedFrame", i32, [4 x i8] }>
%"class.blink::mojom::blink::AffectedFrame" = type { %"class.WTF::String" }
%"class.mojo::StructPtr.231" = type { %"class.std::__1::unique_ptr.232" }
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"class.blink::mojom::blink::BlockedByResponseIssueDetails"* }
%"class.blink::mojom::blink::BlockedByResponseIssueDetails" = type { %"class.mojo::InlinedStructPtr.217", %"class.mojo::InlinedStructPtr.226", %"class.mojo::InlinedStructPtr.226", i32, [4 x i8] }
%"class.mojo::StructPtr.238" = type { %"class.std::__1::unique_ptr.239" }
%"class.std::__1::unique_ptr.239" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"class.blink::mojom::blink::ContentSecurityPolicyIssueDetails"* }
%"class.blink::mojom::blink::ContentSecurityPolicyIssueDetails" = type <{ %"class.absl::optional", %"class.WTF::String", i8, [3 x i8], i32, %"class.mojo::InlinedStructPtr.226", %"class.mojo::InlinedStructPtr.242", i32, [4 x i8] }>
%"class.mojo::InlinedStructPtr.242" = type <{ %"class.blink::mojom::blink::AffectedLocation", i32, [4 x i8] }>
%"class.blink::mojom::blink::AffectedLocation" = type { %"class.WTF::String", %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.247" = type { %"class.std::__1::unique_ptr.248" }
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"class.blink::mojom::blink::SharedArrayBufferIssueDetails"* }
%"class.blink::mojom::blink::SharedArrayBufferIssueDetails" = type { %"class.mojo::InlinedStructPtr.242", i8, i32 }
%"class.mojo::StructPtr.254" = type { %"class.std::__1::unique_ptr.255" }
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.blink::mojom::blink::TrustedWebActivityIssueDetails"* }
%"class.blink::mojom::blink::TrustedWebActivityIssueDetails" = type { %"class.blink::KURL", i32, i32, %"class.WTF::String", %"class.WTF::String" }
%"class.mojo::StructPtr.261" = type { %"class.std::__1::unique_ptr.262" }
%"class.std::__1::unique_ptr.262" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.blink::mojom::blink::HeavyAdIssueDetails"* }
%"class.blink::mojom::blink::HeavyAdIssueDetails" = type { i32, i32, %"class.mojo::InlinedStructPtr.226" }
%"class.mojo::StructPtr.268" = type { %"class.std::__1::unique_ptr.269" }
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"class.blink::mojom::blink::LowTextContrastIssue"* }
%"class.blink::mojom::blink::LowTextContrastIssue" = type { i32, %"class.WTF::String", float, float, float, %"class.WTF::String", %"class.WTF::String" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.313 }
%union.anon.313 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_ = comdat any

@_ZTVN5blink8protocol6Audits21InspectorIssueDetailsE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink8protocol6Audits26SameSiteCookieIssueDetailsE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink8protocol6Audits14AffectedCookieE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZN5blink8protocol6Audits33SameSiteCookieExclusionReasonEnum38ExcludeSameSiteUnspecifiedTreatedAsLaxE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits33SameSiteCookieExclusionReasonEnum27ExcludeSameSiteNoneInsecureE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits33SameSiteCookieExclusionReasonEnum18ExcludeSameSiteLaxE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits33SameSiteCookieExclusionReasonEnum21ExcludeSameSiteStrictE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits31SameSiteCookieWarningReasonEnum39WarnSameSiteUnspecifiedCrossSiteContextE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits31SameSiteCookieWarningReasonEnum24WarnSameSiteNoneInsecureE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits31SameSiteCookieWarningReasonEnum37WarnSameSiteUnspecifiedLaxAllowUnsafeE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits31SameSiteCookieWarningReasonEnum36WarnSameSiteStrictLaxDowngradeStrictE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits31SameSiteCookieWarningReasonEnum38WarnSameSiteStrictCrossDowngradeStrictE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits31SameSiteCookieWarningReasonEnum35WarnSameSiteStrictCrossDowngradeLaxE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits31SameSiteCookieWarningReasonEnum35WarnSameSiteLaxCrossDowngradeStrictE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits31SameSiteCookieWarningReasonEnum32WarnSameSiteLaxCrossDowngradeLaxE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits27SameSiteCookieOperationEnum9SetCookieE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits27SameSiteCookieOperationEnum10ReadCookieE = external constant [0 x i8], align 1
@_ZTVN5blink8protocol6Audits15AffectedRequestE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink8protocol6Audits24MixedContentIssueDetailsE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum5AudioE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum6BeaconE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum9CSPReportE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum8DownloadE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum14PluginResourceE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum11EventSourceE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum7FaviconE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum8ResourceE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum4FontE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum4FormE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum5FrameE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum5ImageE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum8ManifestE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum4PingE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum10PluginDataE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum8PrefetchE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum6ScriptE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum13ServiceWorkerE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum12SharedWorkerE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum10StylesheetE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum5TrackE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum5VideoE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum6WorkerE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum14XMLHttpRequestE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum4XSLTE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits32MixedContentResolutionStatusEnum19MixedContentBlockedE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits32MixedContentResolutionStatusEnum33MixedContentAutomaticallyUpgradedE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits32MixedContentResolutionStatusEnum19MixedContentWarningE = external constant [0 x i8], align 1
@_ZTVN5blink8protocol6Audits13AffectedFrameE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink8protocol6Audits29BlockedByResponseIssueDetailsE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZN5blink8protocol6Audits27BlockedByResponseReasonEnum32CoepFrameResourceNeedsCoepHeaderE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits27BlockedByResponseReasonEnum43CoopSandboxedIFrameCannotNavigateToCoopPageE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits27BlockedByResponseReasonEnum17CorpNotSameOriginE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits27BlockedByResponseReasonEnum49CorpNotSameOriginAfterDefaultedToSameOriginByCoepE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits27BlockedByResponseReasonEnum15CorpNotSameSiteE = external constant [0 x i8], align 1
@_ZTVN5blink8protocol6Audits33ContentSecurityPolicyIssueDetailsE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZN5blink8protocol6Audits38ContentSecurityPolicyViolationTypeEnum16KInlineViolationE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits38ContentSecurityPolicyViolationTypeEnum14KEvalViolationE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits38ContentSecurityPolicyViolationTypeEnum13KURLViolationE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits38ContentSecurityPolicyViolationTypeEnum26KTrustedTypesSinkViolationE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits38ContentSecurityPolicyViolationTypeEnum28KTrustedTypesPolicyViolationE = external constant [0 x i8], align 1
@_ZTVN5blink8protocol6Audits18SourceCodeLocationE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink8protocol6Audits29SharedArrayBufferIssueDetailsE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZN5blink8protocol6Audits30SharedArrayBufferIssueTypeEnum13TransferIssueE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits30SharedArrayBufferIssueTypeEnum13CreationIssueE = external constant [0 x i8], align 1
@_ZTVN5blink8protocol6Audits27LowTextContrastIssueDetailsE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink8protocol6Audits14InspectorIssueE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZN5blink8protocol6Audits22InspectorIssueCodeEnum19SameSiteCookieIssueE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits22InspectorIssueCodeEnum17MixedContentIssueE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits22InspectorIssueCodeEnum22BlockedByResponseIssueE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits22InspectorIssueCodeEnum26ContentSecurityPolicyIssueE = external constant [0 x i8], align 1
@_ZN5blink8protocol6Audits22InspectorIssueCodeEnum22SharedArrayBufferIssueE = external constant [0 x i8], align 1
@.str.1 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/core/inspector/inspector_issue_conversion.cc\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.3 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZN5blink8protocol6Audits22InspectorIssueCodeEnum20LowTextContrastIssueE = external constant [0 x i8], align 1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::protocol::Audits::InspectorIssue"* @_ZN5blink37ConvertInspectorIssueToProtocolFormatEPNS_14InspectorIssueE(%"class.blink::InspectorIssue"*) local_unnamed_addr #0 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = tail call i8* @_Znwm(i64 104) #12
  %16 = bitcast i8* %15 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol6Audits21InspectorIssueDetailsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %17 = getelementptr inbounds i8, i8* %15, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 96, i1 false) #13
  %18 = tail call dereferenceable(8) %"class.mojo::StructPtr"* @_ZNK5blink14InspectorIssue7DetailsEv(%"class.blink::InspectorIssue"* %0) #13
  %19 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::mojom::blink::InspectorIssueDetails"*, %"class.blink::mojom::blink::InspectorIssueDetails"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::mojom::blink::InspectorIssueDetails", %"class.blink::mojom::blink::InspectorIssueDetails"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"class.blink::mojom::blink::SameSiteCookieIssueDetails"*, %"class.blink::mojom::blink::SameSiteCookieIssueDetails"** %21, align 8
  %23 = icmp eq %"class.blink::mojom::blink::SameSiteCookieIssueDetails"* %22, null
  br i1 %23, label %477, label %24

24:                                               ; preds = %1
  %25 = tail call dereferenceable(8) %"class.mojo::StructPtr"* @_ZNK5blink14InspectorIssue7DetailsEv(%"class.blink::InspectorIssue"* %0) #13
  %26 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %25, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"class.blink::mojom::blink::InspectorIssueDetails"*, %"class.blink::mojom::blink::InspectorIssueDetails"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::mojom::blink::InspectorIssueDetails", %"class.blink::mojom::blink::InspectorIssueDetails"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::mojom::blink::SameSiteCookieIssueDetails"*, %"class.blink::mojom::blink::SameSiteCookieIssueDetails"** %28, align 8
  %30 = tail call i8* @_Znwm(i64 96) #12
  %31 = bitcast i8* %30 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol6Audits26SameSiteCookieIssueDetailsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %31, align 8
  %32 = getelementptr inbounds i8, i8* %30, i64 8
  %33 = bitcast i8* %32 to i64*
  store i64 0, i64* %33, align 8
  %34 = getelementptr inbounds i8, i8* %30, i64 16
  store i8 0, i8* %34, align 8
  %35 = getelementptr inbounds i8, i8* %30, i64 24
  %36 = getelementptr inbounds i8, i8* %30, i64 64
  %37 = bitcast i8* %36 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %37, align 8
  %38 = getelementptr inbounds i8, i8* %30, i64 72
  store i8 0, i8* %38, align 8
  %39 = getelementptr inbounds i8, i8* %30, i64 80
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 33, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 16, i1 false) #13
  %40 = ptrtoint i8* %30 to i64
  %41 = tail call i8* @_Znwm(i64 32) #12
  %42 = bitcast i8* %41 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol6Audits14AffectedCookieE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds i8, i8* %41, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false) #13
  %44 = getelementptr inbounds %"class.blink::mojom::blink::SameSiteCookieIssueDetails", %"class.blink::mojom::blink::SameSiteCookieIssueDetails"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %64, label %47

47:                                               ; preds = %24
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i33
  %56 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %55, i33 1) #13
  %57 = extractvalue { i33, i1 } %56, 1
  %58 = extractvalue { i33, i1 } %56, 0
  %59 = icmp slt i33 %58, 0
  %60 = or i1 %57, %59
  br i1 %60, label %61, label %62, !prof !2

61:                                               ; preds = %52
  tail call void @llvm.trap() #13
  unreachable

62:                                               ; preds = %52
  %63 = trunc i33 %58 to i32
  store i32 %63, i32* %53, align 4
  br label %64

64:                                               ; preds = %62, %47, %24
  %65 = ptrtoint %"class.WTF::StringImpl"* %45 to i64
  %66 = bitcast i8* %43 to i64*
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds i8, i8* %41, i64 16
  %68 = getelementptr inbounds %"class.blink::mojom::blink::SameSiteCookieIssueDetails", %"class.blink::mojom::blink::SameSiteCookieIssueDetails"* %29, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %88, label %71

71:                                               ; preds = %64
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %88

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = zext i32 %78 to i33
  %80 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %79, i33 1) #13
  %81 = extractvalue { i33, i1 } %80, 1
  %82 = extractvalue { i33, i1 } %80, 0
  %83 = icmp slt i33 %82, 0
  %84 = or i1 %81, %83
  br i1 %84, label %85, label %86, !prof !2

85:                                               ; preds = %76
  tail call void @llvm.trap() #13
  unreachable

86:                                               ; preds = %76
  %87 = trunc i33 %82 to i32
  store i32 %87, i32* %77, align 4
  br label %88

88:                                               ; preds = %86, %71, %64
  %89 = ptrtoint %"class.WTF::StringImpl"* %69 to i64
  %90 = bitcast i8* %67 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds i8, i8* %41, i64 24
  %92 = getelementptr inbounds %"class.blink::mojom::blink::SameSiteCookieIssueDetails", %"class.blink::mojom::blink::SameSiteCookieIssueDetails"* %29, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %112, label %95

95:                                               ; preds = %88
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %112

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  %103 = zext i32 %102 to i33
  %104 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %103, i33 1) #13
  %105 = extractvalue { i33, i1 } %104, 1
  %106 = extractvalue { i33, i1 } %104, 0
  %107 = icmp slt i33 %106, 0
  %108 = or i1 %105, %107
  br i1 %108, label %109, label %110, !prof !2

109:                                              ; preds = %100
  tail call void @llvm.trap() #13
  unreachable

110:                                              ; preds = %100
  %111 = trunc i33 %106 to i32
  store i32 %111, i32* %101, align 4
  br label %112

112:                                              ; preds = %88, %95, %110
  %113 = ptrtoint %"class.WTF::StringImpl"* %93 to i64
  %114 = bitcast i8* %91 to i64*
  store i64 %113, i64* %114, align 8
  %115 = ptrtoint i8* %41 to i64
  %116 = bitcast i8* %32 to %"class.blink::protocol::Audits::AffectedCookie"**
  %117 = load %"class.blink::protocol::Audits::AffectedCookie"*, %"class.blink::protocol::Audits::AffectedCookie"** %116, align 8
  store i64 %115, i64* %33, align 8
  %118 = icmp eq %"class.blink::protocol::Audits::AffectedCookie"* %117, null
  br i1 %118, label %124, label %119

119:                                              ; preds = %112
  %120 = bitcast %"class.blink::protocol::Audits::AffectedCookie"* %117 to void (%"class.blink::protocol::Audits::AffectedCookie"*)***
  %121 = load void (%"class.blink::protocol::Audits::AffectedCookie"*)**, void (%"class.blink::protocol::Audits::AffectedCookie"*)*** %120, align 8
  %122 = getelementptr inbounds void (%"class.blink::protocol::Audits::AffectedCookie"*)*, void (%"class.blink::protocol::Audits::AffectedCookie"*)** %121, i64 2
  %123 = load void (%"class.blink::protocol::Audits::AffectedCookie"*)*, void (%"class.blink::protocol::Audits::AffectedCookie"*)** %122, align 8
  tail call void %123(%"class.blink::protocol::Audits::AffectedCookie"* nonnull %117) #13
  br label %124

124:                                              ; preds = %112, %119
  %125 = tail call i8* @_Znwm(i64 24) #12
  %126 = bitcast i8* %125 to %"class.std::__1::vector"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %125, i8 0, i64 24, i1 false) #13
  %127 = getelementptr inbounds %"class.blink::mojom::blink::SameSiteCookieIssueDetails", %"class.blink::mojom::blink::SameSiteCookieIssueDetails"* %29, i64 0, i32 1, i32 0, i32 0, i32 0
  %128 = load i32*, i32** %127, align 8
  %129 = getelementptr inbounds %"class.blink::mojom::blink::SameSiteCookieIssueDetails", %"class.blink::mojom::blink::SameSiteCookieIssueDetails"* %29, i64 0, i32 1, i32 0, i32 0, i32 2
  %130 = load i32, i32* %129, align 4
  %131 = zext i32 %130 to i64
  %132 = getelementptr inbounds i32, i32* %128, i64 %131
  %133 = icmp eq i32 %130, 0
  br i1 %133, label %182, label %134

134:                                              ; preds = %124
  %135 = bitcast %"class.WTF::String"* %14 to i8*
  %136 = bitcast %"class.WTF::String"* %13 to i8*
  %137 = bitcast %"class.WTF::String"* %13 to i64*
  %138 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %139 = bitcast %"class.WTF::String"* %14 to i64*
  %140 = getelementptr inbounds i8, i8* %125, i64 8
  %141 = bitcast i8* %140 to %"class.WTF::String"**
  %142 = getelementptr inbounds i8, i8* %125, i64 16
  %143 = bitcast i8* %142 to %"class.WTF::String"**
  %144 = bitcast i8* %140 to i64*
  br label %145

145:                                              ; preds = %179, %134
  %146 = phi i32* [ %128, %134 ], [ %180, %179 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %135) #13
  %147 = load i32, i32* %146, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %136) #13
  switch i32 %147, label %151 [
    i32 0, label %152
    i32 1, label %148
    i32 2, label %149
    i32 3, label %150
  ]

148:                                              ; preds = %145
  br label %152

149:                                              ; preds = %145
  br label %152

150:                                              ; preds = %145
  br label %152

151:                                              ; preds = %145
  unreachable

152:                                              ; preds = %145, %150, %149, %148
  %153 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits33SameSiteCookieExclusionReasonEnum21ExcludeSameSiteStrictE, i64 0, i64 0), %150 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits33SameSiteCookieExclusionReasonEnum18ExcludeSameSiteLaxE, i64 0, i64 0), %149 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits33SameSiteCookieExclusionReasonEnum27ExcludeSameSiteNoneInsecureE, i64 0, i64 0), %148 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits33SameSiteCookieExclusionReasonEnum38ExcludeSameSiteUnspecifiedTreatedAsLaxE, i64 0, i64 0), %145 ]
  %154 = call i64 @strlen(i8* nonnull %153) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %13, i8* %153, i64 %154) #13
  %155 = load i64, i64* %137, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %136) #13
  store i64 %155, i64* %139, align 8
  %156 = load %"class.WTF::String"*, %"class.WTF::String"** %141, align 8
  %157 = load %"class.WTF::String"*, %"class.WTF::String"** %143, align 8
  %158 = icmp ult %"class.WTF::String"* %156, %157
  br i1 %158, label %159, label %163

159:                                              ; preds = %152
  %160 = bitcast %"class.WTF::String"* %156 to i64*
  store i64 %155, i64* %160, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %138, align 8
  %161 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %156, i64 1
  %162 = ptrtoint %"class.WTF::String"* %161 to i64
  store i64 %162, i64* %144, align 8
  br label %179

163:                                              ; preds = %152
  call void @_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"* nonnull %126, %"class.WTF::String"* nonnull dereferenceable(8) %14) #13
  %164 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %138, align 8
  %165 = icmp eq %"class.WTF::StringImpl"* %164, null
  br i1 %165, label %179, label %166

166:                                              ; preds = %163
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = load atomic i32, i32* %167 monotonic, align 4
  %169 = and i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 0
  %172 = load i32, i32* %171, align 4
  br i1 %170, label %173, label %175

173:                                              ; preds = %166
  %174 = add i32 %172, -1
  store i32 %174, i32* %171, align 4
  br label %175

175:                                              ; preds = %173, %166
  %176 = phi i32 [ %174, %173 ], [ %172, %166 ]
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %179

178:                                              ; preds = %175
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %164) #13
  br label %179

179:                                              ; preds = %178, %175, %163, %159
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %135) #13
  %180 = getelementptr inbounds i32, i32* %146, i64 1
  %181 = icmp eq i32* %180, %132
  br i1 %181, label %182, label %145

182:                                              ; preds = %179, %124
  %183 = ptrtoint i8* %125 to i64
  %184 = getelementptr inbounds i8, i8* %30, i64 40
  %185 = bitcast i8* %184 to %"class.std::__1::vector"**
  %186 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %185, align 8
  %187 = bitcast i8* %184 to i64*
  store i64 %183, i64* %187, align 8
  %188 = icmp eq %"class.std::__1::vector"* %186, null
  br i1 %188, label %226, label %189

189:                                              ; preds = %182
  %190 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %186, i64 0, i32 0, i32 0
  %191 = load %"class.WTF::String"*, %"class.WTF::String"** %190, align 8
  %192 = icmp eq %"class.WTF::String"* %191, null
  br i1 %192, label %224, label %193

193:                                              ; preds = %189
  %194 = bitcast %"class.WTF::String"* %191 to i8*
  %195 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %186, i64 0, i32 0, i32 1
  %196 = load %"class.WTF::String"*, %"class.WTF::String"** %195, align 8
  %197 = icmp eq %"class.WTF::String"* %196, %191
  br i1 %197, label %222, label %198

198:                                              ; preds = %193, %217
  %199 = phi %"class.WTF::String"* [ %200, %217 ], [ %196, %193 ]
  %200 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %199, i64 -1
  %201 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %200, i64 0, i32 0, i32 0
  %202 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %201, align 8
  %203 = icmp eq %"class.WTF::StringImpl"* %202, null
  br i1 %203, label %217, label %204

204:                                              ; preds = %198
  %205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %202, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %206 = load atomic i32, i32* %205 monotonic, align 4
  %207 = and i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %202, i64 0, i32 0
  %210 = load i32, i32* %209, align 4
  br i1 %208, label %211, label %213

211:                                              ; preds = %204
  %212 = add i32 %210, -1
  store i32 %212, i32* %209, align 4
  br label %213

213:                                              ; preds = %211, %204
  %214 = phi i32 [ %212, %211 ], [ %210, %204 ]
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %216, label %217

216:                                              ; preds = %213
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %202) #13
  br label %217

217:                                              ; preds = %216, %213, %198
  %218 = icmp eq %"class.WTF::String"* %200, %191
  br i1 %218, label %219, label %198

219:                                              ; preds = %217
  %220 = bitcast %"class.std::__1::vector"* %186 to i8**
  %221 = load i8*, i8** %220, align 8
  br label %222

222:                                              ; preds = %219, %193
  %223 = phi i8* [ %221, %219 ], [ %194, %193 ]
  store %"class.WTF::String"* %191, %"class.WTF::String"** %195, align 8
  call void @_ZdlPv(i8* %223) #12
  br label %224

224:                                              ; preds = %222, %189
  %225 = bitcast %"class.std::__1::vector"* %186 to i8*
  call void @_ZdlPv(i8* %225) #12
  br label %226

226:                                              ; preds = %182, %224
  %227 = call i8* @_Znwm(i64 24) #12
  %228 = bitcast i8* %227 to %"class.std::__1::vector"*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %227, i8 0, i64 24, i1 false) #13
  %229 = getelementptr inbounds %"class.blink::mojom::blink::SameSiteCookieIssueDetails", %"class.blink::mojom::blink::SameSiteCookieIssueDetails"* %29, i64 0, i32 2, i32 0, i32 0, i32 0
  %230 = load i32*, i32** %229, align 8
  %231 = getelementptr inbounds %"class.blink::mojom::blink::SameSiteCookieIssueDetails", %"class.blink::mojom::blink::SameSiteCookieIssueDetails"* %29, i64 0, i32 2, i32 0, i32 0, i32 2
  %232 = load i32, i32* %231, align 4
  %233 = zext i32 %232 to i64
  %234 = getelementptr inbounds i32, i32* %230, i64 %233
  %235 = icmp eq i32 %232, 0
  br i1 %235, label %288, label %236

236:                                              ; preds = %226
  %237 = bitcast %"class.WTF::String"* %12 to i8*
  %238 = bitcast %"class.WTF::String"* %11 to i8*
  %239 = bitcast %"class.WTF::String"* %11 to i64*
  %240 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %241 = bitcast %"class.WTF::String"* %12 to i64*
  %242 = getelementptr inbounds i8, i8* %227, i64 8
  %243 = bitcast i8* %242 to %"class.WTF::String"**
  %244 = getelementptr inbounds i8, i8* %227, i64 16
  %245 = bitcast i8* %244 to %"class.WTF::String"**
  %246 = bitcast i8* %242 to i64*
  br label %247

247:                                              ; preds = %285, %236
  %248 = phi i32* [ %230, %236 ], [ %286, %285 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %237) #13
  %249 = load i32, i32* %248, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %238) #13
  switch i32 %249, label %257 [
    i32 0, label %258
    i32 1, label %250
    i32 2, label %251
    i32 3, label %252
    i32 4, label %253
    i32 5, label %254
    i32 6, label %255
    i32 7, label %256
  ]

250:                                              ; preds = %247
  br label %258

251:                                              ; preds = %247
  br label %258

252:                                              ; preds = %247
  br label %258

253:                                              ; preds = %247
  br label %258

254:                                              ; preds = %247
  br label %258

255:                                              ; preds = %247
  br label %258

256:                                              ; preds = %247
  br label %258

257:                                              ; preds = %247
  unreachable

258:                                              ; preds = %247, %256, %255, %254, %253, %252, %251, %250
  %259 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits31SameSiteCookieWarningReasonEnum32WarnSameSiteLaxCrossDowngradeLaxE, i64 0, i64 0), %256 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits31SameSiteCookieWarningReasonEnum35WarnSameSiteLaxCrossDowngradeStrictE, i64 0, i64 0), %255 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits31SameSiteCookieWarningReasonEnum35WarnSameSiteStrictCrossDowngradeLaxE, i64 0, i64 0), %254 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits31SameSiteCookieWarningReasonEnum38WarnSameSiteStrictCrossDowngradeStrictE, i64 0, i64 0), %253 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits31SameSiteCookieWarningReasonEnum36WarnSameSiteStrictLaxDowngradeStrictE, i64 0, i64 0), %252 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits31SameSiteCookieWarningReasonEnum37WarnSameSiteUnspecifiedLaxAllowUnsafeE, i64 0, i64 0), %251 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits31SameSiteCookieWarningReasonEnum24WarnSameSiteNoneInsecureE, i64 0, i64 0), %250 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits31SameSiteCookieWarningReasonEnum39WarnSameSiteUnspecifiedCrossSiteContextE, i64 0, i64 0), %247 ]
  %260 = call i64 @strlen(i8* nonnull %259) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %11, i8* %259, i64 %260) #13
  %261 = load i64, i64* %239, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %238) #13
  store i64 %261, i64* %241, align 8
  %262 = load %"class.WTF::String"*, %"class.WTF::String"** %243, align 8
  %263 = load %"class.WTF::String"*, %"class.WTF::String"** %245, align 8
  %264 = icmp ult %"class.WTF::String"* %262, %263
  br i1 %264, label %265, label %269

265:                                              ; preds = %258
  %266 = bitcast %"class.WTF::String"* %262 to i64*
  store i64 %261, i64* %266, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %240, align 8
  %267 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %262, i64 1
  %268 = ptrtoint %"class.WTF::String"* %267 to i64
  store i64 %268, i64* %246, align 8
  br label %285

269:                                              ; preds = %258
  call void @_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"* nonnull %228, %"class.WTF::String"* nonnull dereferenceable(8) %12) #13
  %270 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %240, align 8
  %271 = icmp eq %"class.WTF::StringImpl"* %270, null
  br i1 %271, label %285, label %272

272:                                              ; preds = %269
  %273 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %270, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %274 = load atomic i32, i32* %273 monotonic, align 4
  %275 = and i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %270, i64 0, i32 0
  %278 = load i32, i32* %277, align 4
  br i1 %276, label %279, label %281

279:                                              ; preds = %272
  %280 = add i32 %278, -1
  store i32 %280, i32* %277, align 4
  br label %281

281:                                              ; preds = %279, %272
  %282 = phi i32 [ %280, %279 ], [ %278, %272 ]
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %284, label %285

284:                                              ; preds = %281
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %270) #13
  br label %285

285:                                              ; preds = %284, %281, %269, %265
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %237) #13
  %286 = getelementptr inbounds i32, i32* %248, i64 1
  %287 = icmp eq i32* %286, %234
  br i1 %287, label %288, label %247

288:                                              ; preds = %285, %226
  %289 = ptrtoint i8* %227 to i64
  %290 = getelementptr inbounds i8, i8* %30, i64 32
  %291 = bitcast i8* %290 to %"class.std::__1::vector"**
  %292 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %291, align 8
  %293 = bitcast i8* %290 to i64*
  store i64 %289, i64* %293, align 8
  %294 = icmp eq %"class.std::__1::vector"* %292, null
  br i1 %294, label %332, label %295

295:                                              ; preds = %288
  %296 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %292, i64 0, i32 0, i32 0
  %297 = load %"class.WTF::String"*, %"class.WTF::String"** %296, align 8
  %298 = icmp eq %"class.WTF::String"* %297, null
  br i1 %298, label %330, label %299

299:                                              ; preds = %295
  %300 = bitcast %"class.WTF::String"* %297 to i8*
  %301 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %292, i64 0, i32 0, i32 1
  %302 = load %"class.WTF::String"*, %"class.WTF::String"** %301, align 8
  %303 = icmp eq %"class.WTF::String"* %302, %297
  br i1 %303, label %328, label %304

304:                                              ; preds = %299, %323
  %305 = phi %"class.WTF::String"* [ %306, %323 ], [ %302, %299 ]
  %306 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %305, i64 -1
  %307 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %306, i64 0, i32 0, i32 0
  %308 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %307, align 8
  %309 = icmp eq %"class.WTF::StringImpl"* %308, null
  br i1 %309, label %323, label %310

310:                                              ; preds = %304
  %311 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %308, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %312 = load atomic i32, i32* %311 monotonic, align 4
  %313 = and i32 %312, 2
  %314 = icmp eq i32 %313, 0
  %315 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %308, i64 0, i32 0
  %316 = load i32, i32* %315, align 4
  br i1 %314, label %317, label %319

317:                                              ; preds = %310
  %318 = add i32 %316, -1
  store i32 %318, i32* %315, align 4
  br label %319

319:                                              ; preds = %317, %310
  %320 = phi i32 [ %318, %317 ], [ %316, %310 ]
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %322, label %323

322:                                              ; preds = %319
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %308) #13
  br label %323

323:                                              ; preds = %322, %319, %304
  %324 = icmp eq %"class.WTF::String"* %306, %297
  br i1 %324, label %325, label %304

325:                                              ; preds = %323
  %326 = bitcast %"class.std::__1::vector"* %292 to i8**
  %327 = load i8*, i8** %326, align 8
  br label %328

328:                                              ; preds = %325, %299
  %329 = phi i8* [ %327, %325 ], [ %300, %299 ]
  store %"class.WTF::String"* %297, %"class.WTF::String"** %301, align 8
  call void @_ZdlPv(i8* %329) #12
  br label %330

330:                                              ; preds = %328, %295
  %331 = bitcast %"class.std::__1::vector"* %292 to i8*
  call void @_ZdlPv(i8* %331) #12
  br label %332

332:                                              ; preds = %288, %330
  %333 = getelementptr inbounds %"class.blink::mojom::blink::SameSiteCookieIssueDetails", %"class.blink::mojom::blink::SameSiteCookieIssueDetails"* %29, i64 0, i32 3
  %334 = load i32, i32* %333, align 8
  %335 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %335)
  %336 = icmp eq i32 %334, 0
  %337 = select i1 %336, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits27SameSiteCookieOperationEnum9SetCookieE, i64 0, i64 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits27SameSiteCookieOperationEnum10ReadCookieE, i64 0, i64 0)
  %338 = select i1 %336, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits27SameSiteCookieOperationEnum9SetCookieE, i64 0, i64 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits27SameSiteCookieOperationEnum10ReadCookieE, i64 0, i64 0)
  %339 = call i64 @strlen(i8* nonnull %337) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %10, i8* %338, i64 %339) #13
  %340 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %341 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %340, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %335)
  %342 = getelementptr inbounds i8, i8* %30, i64 48
  %343 = icmp eq %"class.WTF::StringImpl"* %341, null
  br i1 %343, label %361, label %344

344:                                              ; preds = %332
  %345 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %341, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %346 = load atomic i32, i32* %345 monotonic, align 4
  %347 = and i32 %346, 2
  %348 = icmp eq i32 %347, 0
  br i1 %348, label %349, label %361

349:                                              ; preds = %344
  %350 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %341, i64 0, i32 0
  %351 = load i32, i32* %350, align 4
  %352 = zext i32 %351 to i33
  %353 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %352, i33 1) #13
  %354 = extractvalue { i33, i1 } %353, 1
  %355 = extractvalue { i33, i1 } %353, 0
  %356 = icmp slt i33 %355, 0
  %357 = or i1 %354, %356
  br i1 %357, label %358, label %359, !prof !2

358:                                              ; preds = %349
  call void @llvm.trap() #13
  unreachable

359:                                              ; preds = %349
  %360 = trunc i33 %355 to i32
  store i32 %360, i32* %350, align 4
  br label %361

361:                                              ; preds = %359, %344, %332
  %362 = ptrtoint %"class.WTF::StringImpl"* %341 to i64
  %363 = bitcast i8* %342 to i64*
  %364 = bitcast i8* %342 to %"class.WTF::StringImpl"**
  %365 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %364, align 8
  store i64 %362, i64* %363, align 8
  %366 = icmp eq %"class.WTF::StringImpl"* %365, null
  br i1 %366, label %380, label %367

367:                                              ; preds = %361
  %368 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %365, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %369 = load atomic i32, i32* %368 monotonic, align 4
  %370 = and i32 %369, 2
  %371 = icmp eq i32 %370, 0
  %372 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %365, i64 0, i32 0
  %373 = load i32, i32* %372, align 4
  br i1 %371, label %374, label %376

374:                                              ; preds = %367
  %375 = add i32 %373, -1
  store i32 %375, i32* %372, align 4
  br label %376

376:                                              ; preds = %374, %367
  %377 = phi i32 [ %375, %374 ], [ %373, %367 ]
  %378 = icmp eq i32 %377, 0
  br i1 %378, label %379, label %380

379:                                              ; preds = %376
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %365) #13
  br label %380

380:                                              ; preds = %361, %376, %379
  br i1 %343, label %394, label %381

381:                                              ; preds = %380
  %382 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %341, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %383 = load atomic i32, i32* %382 monotonic, align 4
  %384 = and i32 %383, 2
  %385 = icmp eq i32 %384, 0
  %386 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %341, i64 0, i32 0
  %387 = load i32, i32* %386, align 4
  br i1 %385, label %388, label %390

388:                                              ; preds = %381
  %389 = add i32 %387, -1
  store i32 %389, i32* %386, align 4
  br label %390

390:                                              ; preds = %388, %381
  %391 = phi i32 [ %389, %388 ], [ %387, %381 ]
  %392 = icmp eq i32 %391, 0
  br i1 %392, label %393, label %394

393:                                              ; preds = %390
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %341) #13
  br label %394

394:                                              ; preds = %393, %390, %380
  %395 = getelementptr inbounds %"class.blink::mojom::blink::SameSiteCookieIssueDetails", %"class.blink::mojom::blink::SameSiteCookieIssueDetails"* %29, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %396 = load i8, i8* %395, align 8, !range !3
  %397 = icmp eq i8 %396, 0
  br i1 %397, label %422, label %398

398:                                              ; preds = %394
  %399 = getelementptr inbounds %"class.blink::mojom::blink::SameSiteCookieIssueDetails", %"class.blink::mojom::blink::SameSiteCookieIssueDetails"* %29, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4, i32 0, i32 0
  %400 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %399, align 8
  %401 = icmp eq %"class.WTF::StringImpl"* %400, null
  br i1 %401, label %419, label %402

402:                                              ; preds = %398
  %403 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %400, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %404 = load atomic i32, i32* %403 monotonic, align 4
  %405 = and i32 %404, 2
  %406 = icmp eq i32 %405, 0
  br i1 %406, label %407, label %419

407:                                              ; preds = %402
  %408 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %400, i64 0, i32 0
  %409 = load i32, i32* %408, align 4
  %410 = zext i32 %409 to i33
  %411 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %410, i33 1) #13
  %412 = extractvalue { i33, i1 } %411, 1
  %413 = extractvalue { i33, i1 } %411, 0
  %414 = icmp slt i33 %413, 0
  %415 = or i1 %412, %414
  br i1 %415, label %416, label %417, !prof !2

416:                                              ; preds = %407
  call void @llvm.trap() #13
  unreachable

417:                                              ; preds = %407
  %418 = trunc i33 %413 to i32
  store i32 %418, i32* %408, align 4
  br label %419

419:                                              ; preds = %398, %402, %417
  %420 = getelementptr inbounds i8, i8* %30, i64 56
  %421 = bitcast i8* %420 to %"class.crdtp::detail::ValueMaybe"*
  call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe"* %421, %"class.WTF::StringImpl"* %400) #13
  br label %422

422:                                              ; preds = %394, %419
  %423 = getelementptr inbounds %"class.blink::mojom::blink::SameSiteCookieIssueDetails", %"class.blink::mojom::blink::SameSiteCookieIssueDetails"* %29, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %424 = load i8, i8* %423, align 8, !range !3
  %425 = icmp eq i8 %424, 0
  br i1 %425, label %449, label %426

426:                                              ; preds = %422
  %427 = getelementptr inbounds %"class.blink::mojom::blink::SameSiteCookieIssueDetails", %"class.blink::mojom::blink::SameSiteCookieIssueDetails"* %29, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4, i32 0, i32 0
  %428 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %427, align 8
  %429 = icmp eq %"class.WTF::StringImpl"* %428, null
  br i1 %429, label %447, label %430

430:                                              ; preds = %426
  %431 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %428, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %432 = load atomic i32, i32* %431 monotonic, align 4
  %433 = and i32 %432, 2
  %434 = icmp eq i32 %433, 0
  br i1 %434, label %435, label %447

435:                                              ; preds = %430
  %436 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %428, i64 0, i32 0
  %437 = load i32, i32* %436, align 4
  %438 = zext i32 %437 to i33
  %439 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %438, i33 1) #13
  %440 = extractvalue { i33, i1 } %439, 1
  %441 = extractvalue { i33, i1 } %439, 0
  %442 = icmp slt i33 %441, 0
  %443 = or i1 %440, %442
  br i1 %443, label %444, label %445, !prof !2

444:                                              ; preds = %435
  call void @llvm.trap() #13
  unreachable

445:                                              ; preds = %435
  %446 = trunc i33 %441 to i32
  store i32 %446, i32* %436, align 4
  br label %447

447:                                              ; preds = %426, %430, %445
  %448 = bitcast i8* %38 to %"class.crdtp::detail::ValueMaybe"*
  call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe"* %448, %"class.WTF::StringImpl"* %428) #13
  br label %449

449:                                              ; preds = %422, %447
  %450 = getelementptr inbounds %"class.blink::mojom::blink::SameSiteCookieIssueDetails", %"class.blink::mojom::blink::SameSiteCookieIssueDetails"* %29, i64 0, i32 6, i32 1
  %451 = load i32, i32* %450, align 8
  %452 = icmp eq i32 %451, 0
  br i1 %452, label %467, label %453

453:                                              ; preds = %449
  %454 = getelementptr inbounds %"class.blink::mojom::blink::SameSiteCookieIssueDetails", %"class.blink::mojom::blink::SameSiteCookieIssueDetails"* %29, i64 0, i32 6
  %455 = call fastcc %"class.blink::protocol::Audits::AffectedRequest"* @_ZN5blink12_GLOBAL__N_120BuildAffectedRequestERKN4mojo16InlinedStructPtrINS_5mojom5blink15AffectedRequestEEE(%"class.mojo::InlinedStructPtr.217"* dereferenceable(24) %454)
  %456 = ptrtoint %"class.blink::protocol::Audits::AffectedRequest"* %455 to i64
  %457 = getelementptr inbounds i8, i8* %30, i64 88
  %458 = bitcast i8* %457 to %"class.blink::protocol::Audits::AffectedRequest"**
  %459 = load %"class.blink::protocol::Audits::AffectedRequest"*, %"class.blink::protocol::Audits::AffectedRequest"** %458, align 8
  %460 = bitcast i8* %457 to i64*
  store i64 %456, i64* %460, align 8
  %461 = icmp eq %"class.blink::protocol::Audits::AffectedRequest"* %459, null
  br i1 %461, label %467, label %462

462:                                              ; preds = %453
  %463 = bitcast %"class.blink::protocol::Audits::AffectedRequest"* %459 to void (%"class.blink::protocol::Audits::AffectedRequest"*)***
  %464 = load void (%"class.blink::protocol::Audits::AffectedRequest"*)**, void (%"class.blink::protocol::Audits::AffectedRequest"*)*** %463, align 8
  %465 = getelementptr inbounds void (%"class.blink::protocol::Audits::AffectedRequest"*)*, void (%"class.blink::protocol::Audits::AffectedRequest"*)** %464, i64 2
  %466 = load void (%"class.blink::protocol::Audits::AffectedRequest"*)*, void (%"class.blink::protocol::Audits::AffectedRequest"*)** %465, align 8
  call void %466(%"class.blink::protocol::Audits::AffectedRequest"* nonnull %459) #13
  br label %467

467:                                              ; preds = %449, %462, %453
  %468 = bitcast i8* %17 to %"class.blink::protocol::Audits::SameSiteCookieIssueDetails"**
  %469 = load %"class.blink::protocol::Audits::SameSiteCookieIssueDetails"*, %"class.blink::protocol::Audits::SameSiteCookieIssueDetails"** %468, align 8
  %470 = bitcast i8* %17 to i64*
  store i64 %40, i64* %470, align 8
  %471 = icmp eq %"class.blink::protocol::Audits::SameSiteCookieIssueDetails"* %469, null
  br i1 %471, label %477, label %472

472:                                              ; preds = %467
  %473 = bitcast %"class.blink::protocol::Audits::SameSiteCookieIssueDetails"* %469 to void (%"class.blink::protocol::Audits::SameSiteCookieIssueDetails"*)***
  %474 = load void (%"class.blink::protocol::Audits::SameSiteCookieIssueDetails"*)**, void (%"class.blink::protocol::Audits::SameSiteCookieIssueDetails"*)*** %473, align 8
  %475 = getelementptr inbounds void (%"class.blink::protocol::Audits::SameSiteCookieIssueDetails"*)*, void (%"class.blink::protocol::Audits::SameSiteCookieIssueDetails"*)** %474, i64 2
  %476 = load void (%"class.blink::protocol::Audits::SameSiteCookieIssueDetails"*)*, void (%"class.blink::protocol::Audits::SameSiteCookieIssueDetails"*)** %475, align 8
  call void %476(%"class.blink::protocol::Audits::SameSiteCookieIssueDetails"* nonnull %469) #13
  br label %477

477:                                              ; preds = %1, %467, %472
  %478 = call dereferenceable(8) %"class.mojo::StructPtr"* @_ZNK5blink14InspectorIssue7DetailsEv(%"class.blink::InspectorIssue"* %0) #13
  %479 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %478, i64 0, i32 0, i32 0, i32 0, i32 0
  %480 = load %"class.blink::mojom::blink::InspectorIssueDetails"*, %"class.blink::mojom::blink::InspectorIssueDetails"** %479, align 8
  %481 = getelementptr inbounds %"class.blink::mojom::blink::InspectorIssueDetails", %"class.blink::mojom::blink::InspectorIssueDetails"* %480, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %482 = load %"class.blink::mojom::blink::MixedContentIssueDetails"*, %"class.blink::mojom::blink::MixedContentIssueDetails"** %481, align 8
  %483 = icmp eq %"class.blink::mojom::blink::MixedContentIssueDetails"* %482, null
  br i1 %483, label %806, label %484

484:                                              ; preds = %477
  %485 = call dereferenceable(8) %"class.mojo::StructPtr"* @_ZNK5blink14InspectorIssue7DetailsEv(%"class.blink::InspectorIssue"* %0) #13
  %486 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %485, i64 0, i32 0, i32 0, i32 0, i32 0
  %487 = load %"class.blink::mojom::blink::InspectorIssueDetails"*, %"class.blink::mojom::blink::InspectorIssueDetails"** %486, align 8
  %488 = getelementptr inbounds %"class.blink::mojom::blink::InspectorIssueDetails", %"class.blink::mojom::blink::InspectorIssueDetails"* %487, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %489 = load %"class.blink::mojom::blink::MixedContentIssueDetails"*, %"class.blink::mojom::blink::MixedContentIssueDetails"** %488, align 8
  %490 = call i8* @_Znwm(i64 64) #12
  %491 = bitcast i8* %490 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol6Audits24MixedContentIssueDetailsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %491, align 8
  %492 = getelementptr inbounds i8, i8* %490, i64 8
  store i8 0, i8* %492, align 8
  %493 = getelementptr inbounds i8, i8* %490, i64 16
  call void @llvm.memset.p0i8.i64(i8* align 8 %493, i8 0, i64 48, i1 false) #13
  %494 = getelementptr inbounds %"class.blink::mojom::blink::MixedContentIssueDetails", %"class.blink::mojom::blink::MixedContentIssueDetails"* %489, i64 0, i32 0
  %495 = load i32, i32* %494, align 8
  %496 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %496)
  switch i32 %495, label %530 [
    i32 1, label %531
    i32 2, label %497
    i32 3, label %498
    i32 4, label %499
    i32 5, label %500
    i32 6, label %501
    i32 7, label %502
    i32 8, label %503
    i32 9, label %504
    i32 10, label %505
    i32 11, label %506
    i32 12, label %507
    i32 13, label %508
    i32 14, label %509
    i32 15, label %510
    i32 16, label %511
    i32 17, label %512
    i32 18, label %513
    i32 19, label %514
    i32 20, label %515
    i32 21, label %516
    i32 22, label %517
    i32 23, label %518
    i32 24, label %519
    i32 25, label %520
    i32 28, label %521
    i32 26, label %522
    i32 27, label %523
    i32 29, label %524
    i32 0, label %525
    i32 30, label %526
    i32 31, label %527
    i32 32, label %528
    i32 33, label %529
  ]

497:                                              ; preds = %484
  br label %531

498:                                              ; preds = %484
  br label %531

499:                                              ; preds = %484
  br label %531

500:                                              ; preds = %484
  br label %531

501:                                              ; preds = %484
  br label %531

502:                                              ; preds = %484
  br label %531

503:                                              ; preds = %484
  br label %531

504:                                              ; preds = %484
  br label %531

505:                                              ; preds = %484
  br label %531

506:                                              ; preds = %484
  br label %531

507:                                              ; preds = %484
  br label %531

508:                                              ; preds = %484
  br label %531

509:                                              ; preds = %484
  br label %531

510:                                              ; preds = %484
  br label %531

511:                                              ; preds = %484
  br label %531

512:                                              ; preds = %484
  br label %531

513:                                              ; preds = %484
  br label %531

514:                                              ; preds = %484
  br label %531

515:                                              ; preds = %484
  br label %531

516:                                              ; preds = %484
  br label %531

517:                                              ; preds = %484
  br label %531

518:                                              ; preds = %484
  br label %531

519:                                              ; preds = %484
  br label %531

520:                                              ; preds = %484
  br label %531

521:                                              ; preds = %484
  br label %531

522:                                              ; preds = %484
  br label %531

523:                                              ; preds = %484
  br label %531

524:                                              ; preds = %484
  br label %531

525:                                              ; preds = %484
  br label %531

526:                                              ; preds = %484
  br label %531

527:                                              ; preds = %484
  br label %531

528:                                              ; preds = %484
  br label %531

529:                                              ; preds = %484
  br label %531

530:                                              ; preds = %484
  unreachable

531:                                              ; preds = %484, %497, %498, %499, %500, %501, %502, %503, %504, %505, %506, %507, %508, %509, %510, %511, %512, %513, %514, %515, %516, %517, %518, %519, %520, %521, %522, %523, %524, %525, %526, %527, %528, %529
  %532 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum6BeaconE, i64 0, i64 0), %497 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum9CSPReportE, i64 0, i64 0), %498 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum8DownloadE, i64 0, i64 0), %499 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum14PluginResourceE, i64 0, i64 0), %500 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum11EventSourceE, i64 0, i64 0), %501 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum7FaviconE, i64 0, i64 0), %502 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum8ResourceE, i64 0, i64 0), %503 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum4FontE, i64 0, i64 0), %504 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum4FormE, i64 0, i64 0), %505 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum5FrameE, i64 0, i64 0), %506 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum8ResourceE, i64 0, i64 0), %507 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum5FrameE, i64 0, i64 0), %508 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum5ImageE, i64 0, i64 0), %509 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum5ImageE, i64 0, i64 0), %510 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum8ResourceE, i64 0, i64 0), %511 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum8ResourceE, i64 0, i64 0), %512 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum8ManifestE, i64 0, i64 0), %513 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum14PluginResourceE, i64 0, i64 0), %514 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum4PingE, i64 0, i64 0), %515 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum10PluginDataE, i64 0, i64 0), %516 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum8PrefetchE, i64 0, i64 0), %517 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum6ScriptE, i64 0, i64 0), %518 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum13ServiceWorkerE, i64 0, i64 0), %519 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum12SharedWorkerE, i64 0, i64 0), %520 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum10StylesheetE, i64 0, i64 0), %521 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum8ResourceE, i64 0, i64 0), %522 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum8ResourceE, i64 0, i64 0), %523 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum5TrackE, i64 0, i64 0), %524 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum8ResourceE, i64 0, i64 0), %525 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum5VideoE, i64 0, i64 0), %526 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum6WorkerE, i64 0, i64 0), %527 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum14XMLHttpRequestE, i64 0, i64 0), %528 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum4XSLTE, i64 0, i64 0), %529 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits28MixedContentResourceTypeEnum5AudioE, i64 0, i64 0), %484 ]
  %533 = call i64 @strlen(i8* nonnull %532) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %9, i8* %532, i64 %533) #13
  %534 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %535 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %534, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %496)
  %536 = icmp eq %"class.WTF::StringImpl"* %535, null
  br i1 %536, label %554, label %537

537:                                              ; preds = %531
  %538 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %535, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %539 = load atomic i32, i32* %538 monotonic, align 4
  %540 = and i32 %539, 2
  %541 = icmp eq i32 %540, 0
  br i1 %541, label %542, label %554

542:                                              ; preds = %537
  %543 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %535, i64 0, i32 0
  %544 = load i32, i32* %543, align 4
  %545 = zext i32 %544 to i33
  %546 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %545, i33 1) #13
  %547 = extractvalue { i33, i1 } %546, 1
  %548 = extractvalue { i33, i1 } %546, 0
  %549 = icmp slt i33 %548, 0
  %550 = or i1 %547, %549
  br i1 %550, label %551, label %552, !prof !2

551:                                              ; preds = %542
  call void @llvm.trap() #13
  unreachable

552:                                              ; preds = %542
  %553 = trunc i33 %548 to i32
  store i32 %553, i32* %543, align 4
  br label %554

554:                                              ; preds = %531, %537, %552
  %555 = bitcast i8* %492 to %"class.crdtp::detail::ValueMaybe"*
  call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe"* %555, %"class.WTF::StringImpl"* %535) #13
  %556 = getelementptr inbounds %"class.blink::mojom::blink::MixedContentIssueDetails", %"class.blink::mojom::blink::MixedContentIssueDetails"* %489, i64 0, i32 1
  %557 = load i32, i32* %556, align 4
  %558 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %558)
  switch i32 %557, label %561 [
    i32 0, label %562
    i32 1, label %559
    i32 2, label %560
  ]

559:                                              ; preds = %554
  br label %562

560:                                              ; preds = %554
  br label %562

561:                                              ; preds = %554
  unreachable

562:                                              ; preds = %554, %559, %560
  %563 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits32MixedContentResolutionStatusEnum33MixedContentAutomaticallyUpgradedE, i64 0, i64 0), %559 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits32MixedContentResolutionStatusEnum19MixedContentWarningE, i64 0, i64 0), %560 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits32MixedContentResolutionStatusEnum19MixedContentBlockedE, i64 0, i64 0), %554 ]
  %564 = call i64 @strlen(i8* nonnull %563) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* %563, i64 %564) #13
  %565 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %566 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %565, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %558)
  %567 = getelementptr inbounds i8, i8* %490, i64 24
  %568 = icmp eq %"class.WTF::StringImpl"* %566, null
  br i1 %568, label %586, label %569

569:                                              ; preds = %562
  %570 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %566, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %571 = load atomic i32, i32* %570 monotonic, align 4
  %572 = and i32 %571, 2
  %573 = icmp eq i32 %572, 0
  br i1 %573, label %574, label %586

574:                                              ; preds = %569
  %575 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %566, i64 0, i32 0
  %576 = load i32, i32* %575, align 4
  %577 = zext i32 %576 to i33
  %578 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %577, i33 1) #13
  %579 = extractvalue { i33, i1 } %578, 1
  %580 = extractvalue { i33, i1 } %578, 0
  %581 = icmp slt i33 %580, 0
  %582 = or i1 %579, %581
  br i1 %582, label %583, label %584, !prof !2

583:                                              ; preds = %574
  call void @llvm.trap() #13
  unreachable

584:                                              ; preds = %574
  %585 = trunc i33 %580 to i32
  store i32 %585, i32* %575, align 4
  br label %586

586:                                              ; preds = %584, %569, %562
  %587 = ptrtoint %"class.WTF::StringImpl"* %566 to i64
  %588 = bitcast i8* %567 to i64*
  %589 = bitcast i8* %567 to %"class.WTF::StringImpl"**
  %590 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %589, align 8
  store i64 %587, i64* %588, align 8
  %591 = icmp eq %"class.WTF::StringImpl"* %590, null
  br i1 %591, label %605, label %592

592:                                              ; preds = %586
  %593 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %590, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %594 = load atomic i32, i32* %593 monotonic, align 4
  %595 = and i32 %594, 2
  %596 = icmp eq i32 %595, 0
  %597 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %590, i64 0, i32 0
  %598 = load i32, i32* %597, align 4
  br i1 %596, label %599, label %601

599:                                              ; preds = %592
  %600 = add i32 %598, -1
  store i32 %600, i32* %597, align 4
  br label %601

601:                                              ; preds = %599, %592
  %602 = phi i32 [ %600, %599 ], [ %598, %592 ]
  %603 = icmp eq i32 %602, 0
  br i1 %603, label %604, label %605

604:                                              ; preds = %601
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %590) #13
  br label %605

605:                                              ; preds = %586, %601, %604
  %606 = getelementptr inbounds i8, i8* %490, i64 32
  %607 = getelementptr inbounds %"class.blink::mojom::blink::MixedContentIssueDetails", %"class.blink::mojom::blink::MixedContentIssueDetails"* %489, i64 0, i32 2, i32 0, i32 0
  %608 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %607, align 8
  %609 = icmp eq %"class.WTF::StringImpl"* %608, null
  br i1 %609, label %627, label %610

610:                                              ; preds = %605
  %611 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %608, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %612 = load atomic i32, i32* %611 monotonic, align 4
  %613 = and i32 %612, 2
  %614 = icmp eq i32 %613, 0
  br i1 %614, label %615, label %627

615:                                              ; preds = %610
  %616 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %608, i64 0, i32 0
  %617 = load i32, i32* %616, align 4
  %618 = zext i32 %617 to i33
  %619 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %618, i33 1) #13
  %620 = extractvalue { i33, i1 } %619, 1
  %621 = extractvalue { i33, i1 } %619, 0
  %622 = icmp slt i33 %621, 0
  %623 = or i1 %620, %622
  br i1 %623, label %624, label %625, !prof !2

624:                                              ; preds = %615
  call void @llvm.trap() #13
  unreachable

625:                                              ; preds = %615
  %626 = trunc i33 %621 to i32
  store i32 %626, i32* %616, align 4
  br label %627

627:                                              ; preds = %625, %610, %605
  %628 = ptrtoint %"class.WTF::StringImpl"* %608 to i64
  %629 = bitcast i8* %606 to i64*
  %630 = bitcast i8* %606 to %"class.WTF::StringImpl"**
  %631 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %630, align 8
  store i64 %628, i64* %629, align 8
  %632 = icmp eq %"class.WTF::StringImpl"* %631, null
  br i1 %632, label %646, label %633

633:                                              ; preds = %627
  %634 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %631, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %635 = load atomic i32, i32* %634 monotonic, align 4
  %636 = and i32 %635, 2
  %637 = icmp eq i32 %636, 0
  %638 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %631, i64 0, i32 0
  %639 = load i32, i32* %638, align 4
  br i1 %637, label %640, label %642

640:                                              ; preds = %633
  %641 = add i32 %639, -1
  store i32 %641, i32* %638, align 4
  br label %642

642:                                              ; preds = %640, %633
  %643 = phi i32 [ %641, %640 ], [ %639, %633 ]
  %644 = icmp eq i32 %643, 0
  br i1 %644, label %645, label %646

645:                                              ; preds = %642
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %631) #13
  br label %646

646:                                              ; preds = %627, %642, %645
  %647 = getelementptr inbounds i8, i8* %490, i64 40
  %648 = getelementptr inbounds %"class.blink::mojom::blink::MixedContentIssueDetails", %"class.blink::mojom::blink::MixedContentIssueDetails"* %489, i64 0, i32 3, i32 0, i32 0
  %649 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %648, align 8
  %650 = icmp eq %"class.WTF::StringImpl"* %649, null
  br i1 %650, label %668, label %651

651:                                              ; preds = %646
  %652 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %649, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %653 = load atomic i32, i32* %652 monotonic, align 4
  %654 = and i32 %653, 2
  %655 = icmp eq i32 %654, 0
  br i1 %655, label %656, label %668

656:                                              ; preds = %651
  %657 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %649, i64 0, i32 0
  %658 = load i32, i32* %657, align 4
  %659 = zext i32 %658 to i33
  %660 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %659, i33 1) #13
  %661 = extractvalue { i33, i1 } %660, 1
  %662 = extractvalue { i33, i1 } %660, 0
  %663 = icmp slt i33 %662, 0
  %664 = or i1 %661, %663
  br i1 %664, label %665, label %666, !prof !2

665:                                              ; preds = %656
  call void @llvm.trap() #13
  unreachable

666:                                              ; preds = %656
  %667 = trunc i33 %662 to i32
  store i32 %667, i32* %657, align 4
  br label %668

668:                                              ; preds = %666, %651, %646
  %669 = ptrtoint %"class.WTF::StringImpl"* %649 to i64
  %670 = bitcast i8* %647 to i64*
  %671 = bitcast i8* %647 to %"class.WTF::StringImpl"**
  %672 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %671, align 8
  store i64 %669, i64* %670, align 8
  %673 = icmp eq %"class.WTF::StringImpl"* %672, null
  br i1 %673, label %687, label %674

674:                                              ; preds = %668
  %675 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %672, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %676 = load atomic i32, i32* %675 monotonic, align 4
  %677 = and i32 %676, 2
  %678 = icmp eq i32 %677, 0
  %679 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %672, i64 0, i32 0
  %680 = load i32, i32* %679, align 4
  br i1 %678, label %681, label %683

681:                                              ; preds = %674
  %682 = add i32 %680, -1
  store i32 %682, i32* %679, align 4
  br label %683

683:                                              ; preds = %681, %674
  %684 = phi i32 [ %682, %681 ], [ %680, %674 ]
  %685 = icmp eq i32 %684, 0
  br i1 %685, label %686, label %687

686:                                              ; preds = %683
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %672) #13
  br label %687

687:                                              ; preds = %668, %683, %686
  %688 = ptrtoint i8* %490 to i64
  br i1 %568, label %702, label %689

689:                                              ; preds = %687
  %690 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %566, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %691 = load atomic i32, i32* %690 monotonic, align 4
  %692 = and i32 %691, 2
  %693 = icmp eq i32 %692, 0
  %694 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %566, i64 0, i32 0
  %695 = load i32, i32* %694, align 4
  br i1 %693, label %696, label %698

696:                                              ; preds = %689
  %697 = add i32 %695, -1
  store i32 %697, i32* %694, align 4
  br label %698

698:                                              ; preds = %696, %689
  %699 = phi i32 [ %697, %696 ], [ %695, %689 ]
  %700 = icmp eq i32 %699, 0
  br i1 %700, label %701, label %702

701:                                              ; preds = %698
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %566) #13
  br label %702

702:                                              ; preds = %687, %698, %701
  br i1 %536, label %716, label %703

703:                                              ; preds = %702
  %704 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %535, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %705 = load atomic i32, i32* %704 monotonic, align 4
  %706 = and i32 %705, 2
  %707 = icmp eq i32 %706, 0
  %708 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %535, i64 0, i32 0
  %709 = load i32, i32* %708, align 4
  br i1 %707, label %710, label %712

710:                                              ; preds = %703
  %711 = add i32 %709, -1
  store i32 %711, i32* %708, align 4
  br label %712

712:                                              ; preds = %710, %703
  %713 = phi i32 [ %711, %710 ], [ %709, %703 ]
  %714 = icmp eq i32 %713, 0
  br i1 %714, label %715, label %716

715:                                              ; preds = %712
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %535) #13
  br label %716

716:                                              ; preds = %715, %712, %702
  %717 = getelementptr inbounds %"class.blink::mojom::blink::MixedContentIssueDetails", %"class.blink::mojom::blink::MixedContentIssueDetails"* %489, i64 0, i32 4, i32 1
  %718 = load i32, i32* %717, align 8
  %719 = icmp eq i32 %718, 0
  br i1 %719, label %734, label %720

720:                                              ; preds = %716
  %721 = getelementptr inbounds %"class.blink::mojom::blink::MixedContentIssueDetails", %"class.blink::mojom::blink::MixedContentIssueDetails"* %489, i64 0, i32 4
  %722 = call fastcc %"class.blink::protocol::Audits::AffectedRequest"* @_ZN5blink12_GLOBAL__N_120BuildAffectedRequestERKN4mojo16InlinedStructPtrINS_5mojom5blink15AffectedRequestEEE(%"class.mojo::InlinedStructPtr.217"* dereferenceable(24) %721)
  %723 = ptrtoint %"class.blink::protocol::Audits::AffectedRequest"* %722 to i64
  %724 = getelementptr inbounds i8, i8* %490, i64 48
  %725 = bitcast i8* %724 to %"class.blink::protocol::Audits::AffectedRequest"**
  %726 = load %"class.blink::protocol::Audits::AffectedRequest"*, %"class.blink::protocol::Audits::AffectedRequest"** %725, align 8
  %727 = bitcast i8* %724 to i64*
  store i64 %723, i64* %727, align 8
  %728 = icmp eq %"class.blink::protocol::Audits::AffectedRequest"* %726, null
  br i1 %728, label %734, label %729

729:                                              ; preds = %720
  %730 = bitcast %"class.blink::protocol::Audits::AffectedRequest"* %726 to void (%"class.blink::protocol::Audits::AffectedRequest"*)***
  %731 = load void (%"class.blink::protocol::Audits::AffectedRequest"*)**, void (%"class.blink::protocol::Audits::AffectedRequest"*)*** %730, align 8
  %732 = getelementptr inbounds void (%"class.blink::protocol::Audits::AffectedRequest"*)*, void (%"class.blink::protocol::Audits::AffectedRequest"*)** %731, i64 2
  %733 = load void (%"class.blink::protocol::Audits::AffectedRequest"*)*, void (%"class.blink::protocol::Audits::AffectedRequest"*)** %732, align 8
  call void %733(%"class.blink::protocol::Audits::AffectedRequest"* nonnull %726) #13
  br label %734

734:                                              ; preds = %716, %729, %720
  %735 = getelementptr inbounds %"class.blink::mojom::blink::MixedContentIssueDetails", %"class.blink::mojom::blink::MixedContentIssueDetails"* %489, i64 0, i32 5, i32 1
  %736 = load i32, i32* %735, align 8
  %737 = icmp eq i32 %736, 0
  br i1 %737, label %795, label %738

738:                                              ; preds = %734
  %739 = call i8* @_Znwm(i64 16) #12
  %740 = bitcast i8* %739 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol6Audits13AffectedFrameE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %740, align 8
  %741 = getelementptr inbounds i8, i8* %739, i64 8
  %742 = bitcast i8* %741 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %742, align 8
  %743 = getelementptr inbounds %"class.blink::mojom::blink::MixedContentIssueDetails", %"class.blink::mojom::blink::MixedContentIssueDetails"* %489, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %744 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %743, align 8
  %745 = icmp eq %"class.WTF::StringImpl"* %744, null
  br i1 %745, label %761, label %746

746:                                              ; preds = %738
  %747 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %744, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %748 = load atomic i32, i32* %747 monotonic, align 4
  %749 = and i32 %748, 2
  %750 = icmp eq i32 %749, 0
  br i1 %750, label %751, label %761

751:                                              ; preds = %746
  %752 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %744, i64 0, i32 0
  %753 = load i32, i32* %752, align 4
  %754 = zext i32 %753 to i33
  %755 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %754, i33 1) #13
  %756 = extractvalue { i33, i1 } %755, 1
  %757 = extractvalue { i33, i1 } %755, 0
  %758 = icmp slt i33 %757, 0
  %759 = or i1 %756, %758
  br i1 %759, label %760, label %764, !prof !2

760:                                              ; preds = %751
  call void @llvm.trap() #13
  unreachable

761:                                              ; preds = %746, %738
  %762 = ptrtoint %"class.WTF::StringImpl"* %744 to i64
  %763 = bitcast i8* %741 to i64*
  store i64 %762, i64* %763, align 8
  br label %783

764:                                              ; preds = %751
  %765 = trunc i33 %757 to i32
  store i32 %765, i32* %752, align 4
  %766 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %742, align 8
  %767 = ptrtoint %"class.WTF::StringImpl"* %744 to i64
  %768 = bitcast i8* %741 to i64*
  store i64 %767, i64* %768, align 8
  %769 = icmp eq %"class.WTF::StringImpl"* %766, null
  br i1 %769, label %783, label %770

770:                                              ; preds = %764
  %771 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %766, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %772 = load atomic i32, i32* %771 monotonic, align 4
  %773 = and i32 %772, 2
  %774 = icmp eq i32 %773, 0
  %775 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %766, i64 0, i32 0
  %776 = load i32, i32* %775, align 4
  br i1 %774, label %777, label %779

777:                                              ; preds = %770
  %778 = add i32 %776, -1
  store i32 %778, i32* %775, align 4
  br label %779

779:                                              ; preds = %777, %770
  %780 = phi i32 [ %778, %777 ], [ %776, %770 ]
  %781 = icmp eq i32 %780, 0
  br i1 %781, label %782, label %783

782:                                              ; preds = %779
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %766) #13
  br label %783

783:                                              ; preds = %761, %782, %779, %764
  %784 = ptrtoint i8* %739 to i64
  %785 = getelementptr inbounds i8, i8* %490, i64 56
  %786 = bitcast i8* %785 to %"class.blink::protocol::Audits::AffectedFrame"**
  %787 = load %"class.blink::protocol::Audits::AffectedFrame"*, %"class.blink::protocol::Audits::AffectedFrame"** %786, align 8
  %788 = bitcast i8* %785 to i64*
  store i64 %784, i64* %788, align 8
  %789 = icmp eq %"class.blink::protocol::Audits::AffectedFrame"* %787, null
  br i1 %789, label %795, label %790

790:                                              ; preds = %783
  %791 = bitcast %"class.blink::protocol::Audits::AffectedFrame"* %787 to void (%"class.blink::protocol::Audits::AffectedFrame"*)***
  %792 = load void (%"class.blink::protocol::Audits::AffectedFrame"*)**, void (%"class.blink::protocol::Audits::AffectedFrame"*)*** %791, align 8
  %793 = getelementptr inbounds void (%"class.blink::protocol::Audits::AffectedFrame"*)*, void (%"class.blink::protocol::Audits::AffectedFrame"*)** %792, i64 2
  %794 = load void (%"class.blink::protocol::Audits::AffectedFrame"*)*, void (%"class.blink::protocol::Audits::AffectedFrame"*)** %793, align 8
  call void %794(%"class.blink::protocol::Audits::AffectedFrame"* nonnull %787) #13
  br label %795

795:                                              ; preds = %734, %790, %783
  %796 = getelementptr inbounds i8, i8* %15, i64 16
  %797 = bitcast i8* %796 to %"class.blink::protocol::Audits::MixedContentIssueDetails"**
  %798 = load %"class.blink::protocol::Audits::MixedContentIssueDetails"*, %"class.blink::protocol::Audits::MixedContentIssueDetails"** %797, align 8
  %799 = bitcast i8* %796 to i64*
  store i64 %688, i64* %799, align 8
  %800 = icmp eq %"class.blink::protocol::Audits::MixedContentIssueDetails"* %798, null
  br i1 %800, label %806, label %801

801:                                              ; preds = %795
  %802 = bitcast %"class.blink::protocol::Audits::MixedContentIssueDetails"* %798 to void (%"class.blink::protocol::Audits::MixedContentIssueDetails"*)***
  %803 = load void (%"class.blink::protocol::Audits::MixedContentIssueDetails"*)**, void (%"class.blink::protocol::Audits::MixedContentIssueDetails"*)*** %802, align 8
  %804 = getelementptr inbounds void (%"class.blink::protocol::Audits::MixedContentIssueDetails"*)*, void (%"class.blink::protocol::Audits::MixedContentIssueDetails"*)** %803, i64 2
  %805 = load void (%"class.blink::protocol::Audits::MixedContentIssueDetails"*)*, void (%"class.blink::protocol::Audits::MixedContentIssueDetails"*)** %804, align 8
  call void %805(%"class.blink::protocol::Audits::MixedContentIssueDetails"* nonnull %798) #13
  br label %806

806:                                              ; preds = %477, %795, %801
  %807 = call dereferenceable(8) %"class.mojo::StructPtr"* @_ZNK5blink14InspectorIssue7DetailsEv(%"class.blink::InspectorIssue"* %0) #13
  %808 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %807, i64 0, i32 0, i32 0, i32 0, i32 0
  %809 = load %"class.blink::mojom::blink::InspectorIssueDetails"*, %"class.blink::mojom::blink::InspectorIssueDetails"** %808, align 8
  %810 = getelementptr inbounds %"class.blink::mojom::blink::InspectorIssueDetails", %"class.blink::mojom::blink::InspectorIssueDetails"* %809, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %811 = load %"class.blink::mojom::blink::BlockedByResponseIssueDetails"*, %"class.blink::mojom::blink::BlockedByResponseIssueDetails"** %810, align 8
  %812 = icmp eq %"class.blink::mojom::blink::BlockedByResponseIssueDetails"* %811, null
  br i1 %812, label %1034, label %813

813:                                              ; preds = %806
  %814 = call dereferenceable(8) %"class.mojo::StructPtr"* @_ZNK5blink14InspectorIssue7DetailsEv(%"class.blink::InspectorIssue"* %0) #13
  %815 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %814, i64 0, i32 0, i32 0, i32 0, i32 0
  %816 = load %"class.blink::mojom::blink::InspectorIssueDetails"*, %"class.blink::mojom::blink::InspectorIssueDetails"** %815, align 8
  %817 = getelementptr inbounds %"class.blink::mojom::blink::InspectorIssueDetails", %"class.blink::mojom::blink::InspectorIssueDetails"* %816, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %818 = load %"class.blink::mojom::blink::BlockedByResponseIssueDetails"*, %"class.blink::mojom::blink::BlockedByResponseIssueDetails"** %817, align 8
  %819 = call i8* @_Znwm(i64 40) #12
  %820 = bitcast i8* %819 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol6Audits29BlockedByResponseIssueDetailsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %820, align 8
  %821 = getelementptr inbounds i8, i8* %819, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %821, i8 0, i64 32, i1 false) #13
  %822 = getelementptr inbounds %"class.blink::mojom::blink::BlockedByResponseIssueDetails", %"class.blink::mojom::blink::BlockedByResponseIssueDetails"* %818, i64 0, i32 0
  %823 = call fastcc %"class.blink::protocol::Audits::AffectedRequest"* @_ZN5blink12_GLOBAL__N_120BuildAffectedRequestERKN4mojo16InlinedStructPtrINS_5mojom5blink15AffectedRequestEEE(%"class.mojo::InlinedStructPtr.217"* dereferenceable(24) %822)
  %824 = ptrtoint %"class.blink::protocol::Audits::AffectedRequest"* %823 to i64
  %825 = bitcast i8* %821 to %"class.blink::protocol::Audits::AffectedRequest"**
  %826 = load %"class.blink::protocol::Audits::AffectedRequest"*, %"class.blink::protocol::Audits::AffectedRequest"** %825, align 8
  %827 = bitcast i8* %821 to i64*
  store i64 %824, i64* %827, align 8
  %828 = icmp eq %"class.blink::protocol::Audits::AffectedRequest"* %826, null
  br i1 %828, label %834, label %829

829:                                              ; preds = %813
  %830 = bitcast %"class.blink::protocol::Audits::AffectedRequest"* %826 to void (%"class.blink::protocol::Audits::AffectedRequest"*)***
  %831 = load void (%"class.blink::protocol::Audits::AffectedRequest"*)**, void (%"class.blink::protocol::Audits::AffectedRequest"*)*** %830, align 8
  %832 = getelementptr inbounds void (%"class.blink::protocol::Audits::AffectedRequest"*)*, void (%"class.blink::protocol::Audits::AffectedRequest"*)** %831, i64 2
  %833 = load void (%"class.blink::protocol::Audits::AffectedRequest"*)*, void (%"class.blink::protocol::Audits::AffectedRequest"*)** %832, align 8
  call void %833(%"class.blink::protocol::Audits::AffectedRequest"* nonnull %826) #13
  br label %834

834:                                              ; preds = %813, %829
  %835 = getelementptr inbounds %"class.blink::mojom::blink::BlockedByResponseIssueDetails", %"class.blink::mojom::blink::BlockedByResponseIssueDetails"* %818, i64 0, i32 3
  %836 = load i32, i32* %835, align 8
  %837 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %837)
  switch i32 %836, label %842 [
    i32 0, label %843
    i32 1, label %838
    i32 2, label %839
    i32 3, label %840
    i32 4, label %841
  ]

838:                                              ; preds = %834
  br label %843

839:                                              ; preds = %834
  br label %843

840:                                              ; preds = %834
  br label %843

841:                                              ; preds = %834
  br label %843

842:                                              ; preds = %834
  unreachable

843:                                              ; preds = %834, %838, %839, %840, %841
  %844 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits27BlockedByResponseReasonEnum43CoopSandboxedIFrameCannotNavigateToCoopPageE, i64 0, i64 0), %838 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits27BlockedByResponseReasonEnum17CorpNotSameOriginE, i64 0, i64 0), %839 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits27BlockedByResponseReasonEnum49CorpNotSameOriginAfterDefaultedToSameOriginByCoepE, i64 0, i64 0), %840 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits27BlockedByResponseReasonEnum15CorpNotSameSiteE, i64 0, i64 0), %841 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits27BlockedByResponseReasonEnum32CoepFrameResourceNeedsCoepHeaderE, i64 0, i64 0), %834 ]
  %845 = call i64 @strlen(i8* nonnull %844) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* %844, i64 %845) #13
  %846 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %847 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %846, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %837)
  %848 = getelementptr inbounds i8, i8* %819, i64 32
  %849 = icmp eq %"class.WTF::StringImpl"* %847, null
  br i1 %849, label %867, label %850

850:                                              ; preds = %843
  %851 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %847, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %852 = load atomic i32, i32* %851 monotonic, align 4
  %853 = and i32 %852, 2
  %854 = icmp eq i32 %853, 0
  br i1 %854, label %855, label %867

855:                                              ; preds = %850
  %856 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %847, i64 0, i32 0
  %857 = load i32, i32* %856, align 4
  %858 = zext i32 %857 to i33
  %859 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %858, i33 1) #13
  %860 = extractvalue { i33, i1 } %859, 1
  %861 = extractvalue { i33, i1 } %859, 0
  %862 = icmp slt i33 %861, 0
  %863 = or i1 %860, %862
  br i1 %863, label %864, label %865, !prof !2

864:                                              ; preds = %855
  call void @llvm.trap() #13
  unreachable

865:                                              ; preds = %855
  %866 = trunc i33 %861 to i32
  store i32 %866, i32* %856, align 4
  br label %867

867:                                              ; preds = %865, %850, %843
  %868 = ptrtoint %"class.WTF::StringImpl"* %847 to i64
  %869 = bitcast i8* %848 to i64*
  %870 = bitcast i8* %848 to %"class.WTF::StringImpl"**
  %871 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %870, align 8
  store i64 %868, i64* %869, align 8
  %872 = icmp eq %"class.WTF::StringImpl"* %871, null
  br i1 %872, label %886, label %873

873:                                              ; preds = %867
  %874 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %871, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %875 = load atomic i32, i32* %874 monotonic, align 4
  %876 = and i32 %875, 2
  %877 = icmp eq i32 %876, 0
  %878 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %871, i64 0, i32 0
  %879 = load i32, i32* %878, align 4
  br i1 %877, label %880, label %882

880:                                              ; preds = %873
  %881 = add i32 %879, -1
  store i32 %881, i32* %878, align 4
  br label %882

882:                                              ; preds = %880, %873
  %883 = phi i32 [ %881, %880 ], [ %879, %873 ]
  %884 = icmp eq i32 %883, 0
  br i1 %884, label %885, label %886

885:                                              ; preds = %882
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %871) #13
  br label %886

886:                                              ; preds = %867, %882, %885
  %887 = ptrtoint i8* %819 to i64
  br i1 %849, label %901, label %888

888:                                              ; preds = %886
  %889 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %847, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %890 = load atomic i32, i32* %889 monotonic, align 4
  %891 = and i32 %890, 2
  %892 = icmp eq i32 %891, 0
  %893 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %847, i64 0, i32 0
  %894 = load i32, i32* %893, align 4
  br i1 %892, label %895, label %897

895:                                              ; preds = %888
  %896 = add i32 %894, -1
  store i32 %896, i32* %893, align 4
  br label %897

897:                                              ; preds = %895, %888
  %898 = phi i32 [ %896, %895 ], [ %894, %888 ]
  %899 = icmp eq i32 %898, 0
  br i1 %899, label %900, label %901

900:                                              ; preds = %897
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %847) #13
  br label %901

901:                                              ; preds = %900, %897, %886
  %902 = getelementptr inbounds %"class.blink::mojom::blink::BlockedByResponseIssueDetails", %"class.blink::mojom::blink::BlockedByResponseIssueDetails"* %818, i64 0, i32 1, i32 1
  %903 = load i32, i32* %902, align 8
  %904 = icmp eq i32 %903, 0
  br i1 %904, label %962, label %905

905:                                              ; preds = %901
  %906 = call i8* @_Znwm(i64 16) #12
  %907 = bitcast i8* %906 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol6Audits13AffectedFrameE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %907, align 8
  %908 = getelementptr inbounds i8, i8* %906, i64 8
  %909 = bitcast i8* %908 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %909, align 8
  %910 = getelementptr inbounds %"class.blink::mojom::blink::BlockedByResponseIssueDetails", %"class.blink::mojom::blink::BlockedByResponseIssueDetails"* %818, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %911 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %910, align 8
  %912 = icmp eq %"class.WTF::StringImpl"* %911, null
  br i1 %912, label %928, label %913

913:                                              ; preds = %905
  %914 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %911, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %915 = load atomic i32, i32* %914 monotonic, align 4
  %916 = and i32 %915, 2
  %917 = icmp eq i32 %916, 0
  br i1 %917, label %918, label %928

918:                                              ; preds = %913
  %919 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %911, i64 0, i32 0
  %920 = load i32, i32* %919, align 4
  %921 = zext i32 %920 to i33
  %922 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %921, i33 1) #13
  %923 = extractvalue { i33, i1 } %922, 1
  %924 = extractvalue { i33, i1 } %922, 0
  %925 = icmp slt i33 %924, 0
  %926 = or i1 %923, %925
  br i1 %926, label %927, label %931, !prof !2

927:                                              ; preds = %918
  call void @llvm.trap() #13
  unreachable

928:                                              ; preds = %913, %905
  %929 = ptrtoint %"class.WTF::StringImpl"* %911 to i64
  %930 = bitcast i8* %908 to i64*
  store i64 %929, i64* %930, align 8
  br label %950

931:                                              ; preds = %918
  %932 = trunc i33 %924 to i32
  store i32 %932, i32* %919, align 4
  %933 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %909, align 8
  %934 = ptrtoint %"class.WTF::StringImpl"* %911 to i64
  %935 = bitcast i8* %908 to i64*
  store i64 %934, i64* %935, align 8
  %936 = icmp eq %"class.WTF::StringImpl"* %933, null
  br i1 %936, label %950, label %937

937:                                              ; preds = %931
  %938 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %933, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %939 = load atomic i32, i32* %938 monotonic, align 4
  %940 = and i32 %939, 2
  %941 = icmp eq i32 %940, 0
  %942 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %933, i64 0, i32 0
  %943 = load i32, i32* %942, align 4
  br i1 %941, label %944, label %946

944:                                              ; preds = %937
  %945 = add i32 %943, -1
  store i32 %945, i32* %942, align 4
  br label %946

946:                                              ; preds = %944, %937
  %947 = phi i32 [ %945, %944 ], [ %943, %937 ]
  %948 = icmp eq i32 %947, 0
  br i1 %948, label %949, label %950

949:                                              ; preds = %946
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %933) #13
  br label %950

950:                                              ; preds = %928, %949, %946, %931
  %951 = ptrtoint i8* %906 to i64
  %952 = getelementptr inbounds i8, i8* %819, i64 16
  %953 = bitcast i8* %952 to %"class.blink::protocol::Audits::AffectedFrame"**
  %954 = load %"class.blink::protocol::Audits::AffectedFrame"*, %"class.blink::protocol::Audits::AffectedFrame"** %953, align 8
  %955 = bitcast i8* %952 to i64*
  store i64 %951, i64* %955, align 8
  %956 = icmp eq %"class.blink::protocol::Audits::AffectedFrame"* %954, null
  br i1 %956, label %962, label %957

957:                                              ; preds = %950
  %958 = bitcast %"class.blink::protocol::Audits::AffectedFrame"* %954 to void (%"class.blink::protocol::Audits::AffectedFrame"*)***
  %959 = load void (%"class.blink::protocol::Audits::AffectedFrame"*)**, void (%"class.blink::protocol::Audits::AffectedFrame"*)*** %958, align 8
  %960 = getelementptr inbounds void (%"class.blink::protocol::Audits::AffectedFrame"*)*, void (%"class.blink::protocol::Audits::AffectedFrame"*)** %959, i64 2
  %961 = load void (%"class.blink::protocol::Audits::AffectedFrame"*)*, void (%"class.blink::protocol::Audits::AffectedFrame"*)** %960, align 8
  call void %961(%"class.blink::protocol::Audits::AffectedFrame"* nonnull %954) #13
  br label %962

962:                                              ; preds = %901, %957, %950
  %963 = getelementptr inbounds %"class.blink::mojom::blink::BlockedByResponseIssueDetails", %"class.blink::mojom::blink::BlockedByResponseIssueDetails"* %818, i64 0, i32 2, i32 1
  %964 = load i32, i32* %963, align 8
  %965 = icmp eq i32 %964, 0
  br i1 %965, label %1023, label %966

966:                                              ; preds = %962
  %967 = call i8* @_Znwm(i64 16) #12
  %968 = bitcast i8* %967 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol6Audits13AffectedFrameE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %968, align 8
  %969 = getelementptr inbounds i8, i8* %967, i64 8
  %970 = bitcast i8* %969 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %970, align 8
  %971 = getelementptr inbounds %"class.blink::mojom::blink::BlockedByResponseIssueDetails", %"class.blink::mojom::blink::BlockedByResponseIssueDetails"* %818, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %972 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %971, align 8
  %973 = icmp eq %"class.WTF::StringImpl"* %972, null
  br i1 %973, label %989, label %974

974:                                              ; preds = %966
  %975 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %972, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %976 = load atomic i32, i32* %975 monotonic, align 4
  %977 = and i32 %976, 2
  %978 = icmp eq i32 %977, 0
  br i1 %978, label %979, label %989

979:                                              ; preds = %974
  %980 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %972, i64 0, i32 0
  %981 = load i32, i32* %980, align 4
  %982 = zext i32 %981 to i33
  %983 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %982, i33 1) #13
  %984 = extractvalue { i33, i1 } %983, 1
  %985 = extractvalue { i33, i1 } %983, 0
  %986 = icmp slt i33 %985, 0
  %987 = or i1 %984, %986
  br i1 %987, label %988, label %992, !prof !2

988:                                              ; preds = %979
  call void @llvm.trap() #13
  unreachable

989:                                              ; preds = %974, %966
  %990 = ptrtoint %"class.WTF::StringImpl"* %972 to i64
  %991 = bitcast i8* %969 to i64*
  store i64 %990, i64* %991, align 8
  br label %1011

992:                                              ; preds = %979
  %993 = trunc i33 %985 to i32
  store i32 %993, i32* %980, align 4
  %994 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %970, align 8
  %995 = ptrtoint %"class.WTF::StringImpl"* %972 to i64
  %996 = bitcast i8* %969 to i64*
  store i64 %995, i64* %996, align 8
  %997 = icmp eq %"class.WTF::StringImpl"* %994, null
  br i1 %997, label %1011, label %998

998:                                              ; preds = %992
  %999 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %994, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1000 = load atomic i32, i32* %999 monotonic, align 4
  %1001 = and i32 %1000, 2
  %1002 = icmp eq i32 %1001, 0
  %1003 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %994, i64 0, i32 0
  %1004 = load i32, i32* %1003, align 4
  br i1 %1002, label %1005, label %1007

1005:                                             ; preds = %998
  %1006 = add i32 %1004, -1
  store i32 %1006, i32* %1003, align 4
  br label %1007

1007:                                             ; preds = %1005, %998
  %1008 = phi i32 [ %1006, %1005 ], [ %1004, %998 ]
  %1009 = icmp eq i32 %1008, 0
  br i1 %1009, label %1010, label %1011

1010:                                             ; preds = %1007
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %994) #13
  br label %1011

1011:                                             ; preds = %989, %1010, %1007, %992
  %1012 = ptrtoint i8* %967 to i64
  %1013 = getelementptr inbounds i8, i8* %819, i64 24
  %1014 = bitcast i8* %1013 to %"class.blink::protocol::Audits::AffectedFrame"**
  %1015 = load %"class.blink::protocol::Audits::AffectedFrame"*, %"class.blink::protocol::Audits::AffectedFrame"** %1014, align 8
  %1016 = bitcast i8* %1013 to i64*
  store i64 %1012, i64* %1016, align 8
  %1017 = icmp eq %"class.blink::protocol::Audits::AffectedFrame"* %1015, null
  br i1 %1017, label %1023, label %1018

1018:                                             ; preds = %1011
  %1019 = bitcast %"class.blink::protocol::Audits::AffectedFrame"* %1015 to void (%"class.blink::protocol::Audits::AffectedFrame"*)***
  %1020 = load void (%"class.blink::protocol::Audits::AffectedFrame"*)**, void (%"class.blink::protocol::Audits::AffectedFrame"*)*** %1019, align 8
  %1021 = getelementptr inbounds void (%"class.blink::protocol::Audits::AffectedFrame"*)*, void (%"class.blink::protocol::Audits::AffectedFrame"*)** %1020, i64 2
  %1022 = load void (%"class.blink::protocol::Audits::AffectedFrame"*)*, void (%"class.blink::protocol::Audits::AffectedFrame"*)** %1021, align 8
  call void %1022(%"class.blink::protocol::Audits::AffectedFrame"* nonnull %1015) #13
  br label %1023

1023:                                             ; preds = %962, %1018, %1011
  %1024 = getelementptr inbounds i8, i8* %15, i64 24
  %1025 = bitcast i8* %1024 to %"class.blink::protocol::Audits::BlockedByResponseIssueDetails"**
  %1026 = load %"class.blink::protocol::Audits::BlockedByResponseIssueDetails"*, %"class.blink::protocol::Audits::BlockedByResponseIssueDetails"** %1025, align 8
  %1027 = bitcast i8* %1024 to i64*
  store i64 %887, i64* %1027, align 8
  %1028 = icmp eq %"class.blink::protocol::Audits::BlockedByResponseIssueDetails"* %1026, null
  br i1 %1028, label %1034, label %1029

1029:                                             ; preds = %1023
  %1030 = bitcast %"class.blink::protocol::Audits::BlockedByResponseIssueDetails"* %1026 to void (%"class.blink::protocol::Audits::BlockedByResponseIssueDetails"*)***
  %1031 = load void (%"class.blink::protocol::Audits::BlockedByResponseIssueDetails"*)**, void (%"class.blink::protocol::Audits::BlockedByResponseIssueDetails"*)*** %1030, align 8
  %1032 = getelementptr inbounds void (%"class.blink::protocol::Audits::BlockedByResponseIssueDetails"*)*, void (%"class.blink::protocol::Audits::BlockedByResponseIssueDetails"*)** %1031, i64 2
  %1033 = load void (%"class.blink::protocol::Audits::BlockedByResponseIssueDetails"*)*, void (%"class.blink::protocol::Audits::BlockedByResponseIssueDetails"*)** %1032, align 8
  call void %1033(%"class.blink::protocol::Audits::BlockedByResponseIssueDetails"* nonnull %1026) #13
  br label %1034

1034:                                             ; preds = %806, %1023, %1029
  %1035 = call dereferenceable(8) %"class.mojo::StructPtr"* @_ZNK5blink14InspectorIssue7DetailsEv(%"class.blink::InspectorIssue"* %0) #13
  %1036 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %1035, i64 0, i32 0, i32 0, i32 0, i32 0
  %1037 = load %"class.blink::mojom::blink::InspectorIssueDetails"*, %"class.blink::mojom::blink::InspectorIssueDetails"** %1036, align 8
  %1038 = getelementptr inbounds %"class.blink::mojom::blink::InspectorIssueDetails", %"class.blink::mojom::blink::InspectorIssueDetails"* %1037, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %1039 = load %"class.blink::mojom::blink::ContentSecurityPolicyIssueDetails"*, %"class.blink::mojom::blink::ContentSecurityPolicyIssueDetails"** %1038, align 8
  %1040 = icmp eq %"class.blink::mojom::blink::ContentSecurityPolicyIssueDetails"* %1039, null
  br i1 %1040, label %1288, label %1041

1041:                                             ; preds = %1034
  %1042 = call dereferenceable(8) %"class.mojo::StructPtr"* @_ZNK5blink14InspectorIssue7DetailsEv(%"class.blink::InspectorIssue"* %0) #13
  %1043 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %1042, i64 0, i32 0, i32 0, i32 0, i32 0
  %1044 = load %"class.blink::mojom::blink::InspectorIssueDetails"*, %"class.blink::mojom::blink::InspectorIssueDetails"** %1043, align 8
  %1045 = getelementptr inbounds %"class.blink::mojom::blink::InspectorIssueDetails", %"class.blink::mojom::blink::InspectorIssueDetails"* %1044, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %1046 = load %"class.blink::mojom::blink::ContentSecurityPolicyIssueDetails"*, %"class.blink::mojom::blink::ContentSecurityPolicyIssueDetails"** %1045, align 8
  %1047 = call i8* @_Znwm(i64 72) #12
  %1048 = bitcast i8* %1047 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol6Audits33ContentSecurityPolicyIssueDetailsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1048, align 8
  %1049 = getelementptr inbounds i8, i8* %1047, i64 8
  store i8 0, i8* %1049, align 8
  %1050 = getelementptr inbounds i8, i8* %1047, i64 16
  %1051 = getelementptr inbounds i8, i8* %1047, i64 40
  %1052 = getelementptr inbounds i8, i8* %1047, i64 68
  %1053 = bitcast i8* %1052 to i32*
  store i32 0, i32* %1053, align 4
  call void @llvm.memset.p0i8.i64(i8* align 8 %1050, i8 0, i64 17, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %1051, i8 0, i64 25, i1 false) #13
  %1054 = ptrtoint i8* %1047 to i64
  %1055 = getelementptr inbounds i8, i8* %1047, i64 24
  %1056 = getelementptr inbounds %"class.blink::mojom::blink::ContentSecurityPolicyIssueDetails", %"class.blink::mojom::blink::ContentSecurityPolicyIssueDetails"* %1046, i64 0, i32 1, i32 0, i32 0
  %1057 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1056, align 8
  %1058 = icmp eq %"class.WTF::StringImpl"* %1057, null
  br i1 %1058, label %1074, label %1059

1059:                                             ; preds = %1041
  %1060 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1057, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1061 = load atomic i32, i32* %1060 monotonic, align 4
  %1062 = and i32 %1061, 2
  %1063 = icmp eq i32 %1062, 0
  br i1 %1063, label %1064, label %1074

1064:                                             ; preds = %1059
  %1065 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1057, i64 0, i32 0
  %1066 = load i32, i32* %1065, align 4
  %1067 = zext i32 %1066 to i33
  %1068 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1067, i33 1) #13
  %1069 = extractvalue { i33, i1 } %1068, 1
  %1070 = extractvalue { i33, i1 } %1068, 0
  %1071 = icmp slt i33 %1070, 0
  %1072 = or i1 %1069, %1071
  br i1 %1072, label %1073, label %1077, !prof !2

1073:                                             ; preds = %1064
  call void @llvm.trap() #13
  unreachable

1074:                                             ; preds = %1059, %1041
  %1075 = ptrtoint %"class.WTF::StringImpl"* %1057 to i64
  %1076 = bitcast i8* %1055 to i64*
  store i64 %1075, i64* %1076, align 8
  br label %1097

1077:                                             ; preds = %1064
  %1078 = trunc i33 %1070 to i32
  store i32 %1078, i32* %1065, align 4
  %1079 = bitcast i8* %1055 to %"class.WTF::StringImpl"**
  %1080 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1079, align 8
  %1081 = ptrtoint %"class.WTF::StringImpl"* %1057 to i64
  %1082 = bitcast i8* %1055 to i64*
  store i64 %1081, i64* %1082, align 8
  %1083 = icmp eq %"class.WTF::StringImpl"* %1080, null
  br i1 %1083, label %1097, label %1084

1084:                                             ; preds = %1077
  %1085 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1080, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1086 = load atomic i32, i32* %1085 monotonic, align 4
  %1087 = and i32 %1086, 2
  %1088 = icmp eq i32 %1087, 0
  %1089 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1080, i64 0, i32 0
  %1090 = load i32, i32* %1089, align 4
  br i1 %1088, label %1091, label %1093

1091:                                             ; preds = %1084
  %1092 = add i32 %1090, -1
  store i32 %1092, i32* %1089, align 4
  br label %1093

1093:                                             ; preds = %1091, %1084
  %1094 = phi i32 [ %1092, %1091 ], [ %1090, %1084 ]
  %1095 = icmp eq i32 %1094, 0
  br i1 %1095, label %1096, label %1097

1096:                                             ; preds = %1093
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1080) #13
  br label %1097

1097:                                             ; preds = %1074, %1077, %1093, %1096
  %1098 = getelementptr inbounds %"class.blink::mojom::blink::ContentSecurityPolicyIssueDetails", %"class.blink::mojom::blink::ContentSecurityPolicyIssueDetails"* %1046, i64 0, i32 2
  %1099 = load i8, i8* %1098, align 8, !range !3
  %1100 = getelementptr inbounds i8, i8* %1047, i64 32
  store i8 %1099, i8* %1100, align 8
  %1101 = getelementptr inbounds %"class.blink::mojom::blink::ContentSecurityPolicyIssueDetails", %"class.blink::mojom::blink::ContentSecurityPolicyIssueDetails"* %1046, i64 0, i32 4
  %1102 = load i32, i32* %1101, align 4
  %1103 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1103)
  switch i32 %1102, label %1108 [
    i32 0, label %1109
    i32 1, label %1104
    i32 2, label %1105
    i32 3, label %1106
    i32 4, label %1107
  ]

1104:                                             ; preds = %1097
  br label %1109

1105:                                             ; preds = %1097
  br label %1109

1106:                                             ; preds = %1097
  br label %1109

1107:                                             ; preds = %1097
  br label %1109

1108:                                             ; preds = %1097
  unreachable

1109:                                             ; preds = %1097, %1104, %1105, %1106, %1107
  %1110 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits38ContentSecurityPolicyViolationTypeEnum14KEvalViolationE, i64 0, i64 0), %1104 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits38ContentSecurityPolicyViolationTypeEnum13KURLViolationE, i64 0, i64 0), %1105 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits38ContentSecurityPolicyViolationTypeEnum26KTrustedTypesSinkViolationE, i64 0, i64 0), %1106 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits38ContentSecurityPolicyViolationTypeEnum28KTrustedTypesPolicyViolationE, i64 0, i64 0), %1107 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits38ContentSecurityPolicyViolationTypeEnum16KInlineViolationE, i64 0, i64 0), %1097 ]
  %1111 = call i64 @strlen(i8* nonnull %1110) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* %1110, i64 %1111) #13
  %1112 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %1113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1112, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1103)
  %1114 = icmp eq %"class.WTF::StringImpl"* %1113, null
  br i1 %1114, label %1132, label %1115

1115:                                             ; preds = %1109
  %1116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1117 = load atomic i32, i32* %1116 monotonic, align 4
  %1118 = and i32 %1117, 2
  %1119 = icmp eq i32 %1118, 0
  br i1 %1119, label %1120, label %1132

1120:                                             ; preds = %1115
  %1121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1113, i64 0, i32 0
  %1122 = load i32, i32* %1121, align 4
  %1123 = zext i32 %1122 to i33
  %1124 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1123, i33 1) #13
  %1125 = extractvalue { i33, i1 } %1124, 1
  %1126 = extractvalue { i33, i1 } %1124, 0
  %1127 = icmp slt i33 %1126, 0
  %1128 = or i1 %1125, %1127
  br i1 %1128, label %1129, label %1130, !prof !2

1129:                                             ; preds = %1120
  call void @llvm.trap() #13
  unreachable

1130:                                             ; preds = %1120
  %1131 = trunc i33 %1126 to i32
  store i32 %1131, i32* %1121, align 4
  br label %1132

1132:                                             ; preds = %1130, %1115, %1109
  %1133 = ptrtoint %"class.WTF::StringImpl"* %1113 to i64
  %1134 = bitcast i8* %1051 to i64*
  %1135 = bitcast i8* %1051 to %"class.WTF::StringImpl"**
  %1136 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1135, align 8
  store i64 %1133, i64* %1134, align 8
  %1137 = icmp eq %"class.WTF::StringImpl"* %1136, null
  br i1 %1137, label %1151, label %1138

1138:                                             ; preds = %1132
  %1139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1136, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1140 = load atomic i32, i32* %1139 monotonic, align 4
  %1141 = and i32 %1140, 2
  %1142 = icmp eq i32 %1141, 0
  %1143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1136, i64 0, i32 0
  %1144 = load i32, i32* %1143, align 4
  br i1 %1142, label %1145, label %1147

1145:                                             ; preds = %1138
  %1146 = add i32 %1144, -1
  store i32 %1146, i32* %1143, align 4
  br label %1147

1147:                                             ; preds = %1145, %1138
  %1148 = phi i32 [ %1146, %1145 ], [ %1144, %1138 ]
  %1149 = icmp eq i32 %1148, 0
  br i1 %1149, label %1150, label %1151

1150:                                             ; preds = %1147
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1136) #13
  br label %1151

1151:                                             ; preds = %1132, %1147, %1150
  br i1 %1114, label %1165, label %1152

1152:                                             ; preds = %1151
  %1153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1154 = load atomic i32, i32* %1153 monotonic, align 4
  %1155 = and i32 %1154, 2
  %1156 = icmp eq i32 %1155, 0
  %1157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1113, i64 0, i32 0
  %1158 = load i32, i32* %1157, align 4
  br i1 %1156, label %1159, label %1161

1159:                                             ; preds = %1152
  %1160 = add i32 %1158, -1
  store i32 %1160, i32* %1157, align 4
  br label %1161

1161:                                             ; preds = %1159, %1152
  %1162 = phi i32 [ %1160, %1159 ], [ %1158, %1152 ]
  %1163 = icmp eq i32 %1162, 0
  br i1 %1163, label %1164, label %1165

1164:                                             ; preds = %1161
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1113) #13
  br label %1165

1165:                                             ; preds = %1164, %1161, %1151
  %1166 = getelementptr inbounds %"class.blink::mojom::blink::ContentSecurityPolicyIssueDetails", %"class.blink::mojom::blink::ContentSecurityPolicyIssueDetails"* %1046, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1167 = load i8, i8* %1166, align 8, !range !3
  %1168 = icmp eq i8 %1167, 0
  br i1 %1168, label %1192, label %1169

1169:                                             ; preds = %1165
  %1170 = getelementptr inbounds %"class.blink::mojom::blink::ContentSecurityPolicyIssueDetails", %"class.blink::mojom::blink::ContentSecurityPolicyIssueDetails"* %1046, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4, i32 0, i32 0
  %1171 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1170, align 8
  %1172 = icmp eq %"class.WTF::StringImpl"* %1171, null
  br i1 %1172, label %1190, label %1173

1173:                                             ; preds = %1169
  %1174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1171, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1175 = load atomic i32, i32* %1174 monotonic, align 4
  %1176 = and i32 %1175, 2
  %1177 = icmp eq i32 %1176, 0
  br i1 %1177, label %1178, label %1190

1178:                                             ; preds = %1173
  %1179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1171, i64 0, i32 0
  %1180 = load i32, i32* %1179, align 4
  %1181 = zext i32 %1180 to i33
  %1182 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1181, i33 1) #13
  %1183 = extractvalue { i33, i1 } %1182, 1
  %1184 = extractvalue { i33, i1 } %1182, 0
  %1185 = icmp slt i33 %1184, 0
  %1186 = or i1 %1183, %1185
  br i1 %1186, label %1187, label %1188, !prof !2

1187:                                             ; preds = %1178
  call void @llvm.trap() #13
  unreachable

1188:                                             ; preds = %1178
  %1189 = trunc i33 %1184 to i32
  store i32 %1189, i32* %1179, align 4
  br label %1190

1190:                                             ; preds = %1169, %1173, %1188
  %1191 = bitcast i8* %1049 to %"class.crdtp::detail::ValueMaybe"*
  call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe"* %1191, %"class.WTF::StringImpl"* %1171) #13
  br label %1192

1192:                                             ; preds = %1165, %1190
  %1193 = getelementptr inbounds %"class.blink::mojom::blink::ContentSecurityPolicyIssueDetails", %"class.blink::mojom::blink::ContentSecurityPolicyIssueDetails"* %1046, i64 0, i32 5, i32 1
  %1194 = load i32, i32* %1193, align 8
  %1195 = icmp eq i32 %1194, 0
  br i1 %1195, label %1253, label %1196

1196:                                             ; preds = %1192
  %1197 = call i8* @_Znwm(i64 16) #12
  %1198 = bitcast i8* %1197 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol6Audits13AffectedFrameE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1198, align 8
  %1199 = getelementptr inbounds i8, i8* %1197, i64 8
  %1200 = bitcast i8* %1199 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1200, align 8
  %1201 = getelementptr inbounds %"class.blink::mojom::blink::ContentSecurityPolicyIssueDetails", %"class.blink::mojom::blink::ContentSecurityPolicyIssueDetails"* %1046, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %1202 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1201, align 8
  %1203 = icmp eq %"class.WTF::StringImpl"* %1202, null
  br i1 %1203, label %1219, label %1204

1204:                                             ; preds = %1196
  %1205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1202, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1206 = load atomic i32, i32* %1205 monotonic, align 4
  %1207 = and i32 %1206, 2
  %1208 = icmp eq i32 %1207, 0
  br i1 %1208, label %1209, label %1219

1209:                                             ; preds = %1204
  %1210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1202, i64 0, i32 0
  %1211 = load i32, i32* %1210, align 4
  %1212 = zext i32 %1211 to i33
  %1213 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1212, i33 1) #13
  %1214 = extractvalue { i33, i1 } %1213, 1
  %1215 = extractvalue { i33, i1 } %1213, 0
  %1216 = icmp slt i33 %1215, 0
  %1217 = or i1 %1214, %1216
  br i1 %1217, label %1218, label %1222, !prof !2

1218:                                             ; preds = %1209
  call void @llvm.trap() #13
  unreachable

1219:                                             ; preds = %1204, %1196
  %1220 = ptrtoint %"class.WTF::StringImpl"* %1202 to i64
  %1221 = bitcast i8* %1199 to i64*
  store i64 %1220, i64* %1221, align 8
  br label %1241

1222:                                             ; preds = %1209
  %1223 = trunc i33 %1215 to i32
  store i32 %1223, i32* %1210, align 4
  %1224 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1200, align 8
  %1225 = ptrtoint %"class.WTF::StringImpl"* %1202 to i64
  %1226 = bitcast i8* %1199 to i64*
  store i64 %1225, i64* %1226, align 8
  %1227 = icmp eq %"class.WTF::StringImpl"* %1224, null
  br i1 %1227, label %1241, label %1228

1228:                                             ; preds = %1222
  %1229 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1224, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1230 = load atomic i32, i32* %1229 monotonic, align 4
  %1231 = and i32 %1230, 2
  %1232 = icmp eq i32 %1231, 0
  %1233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1224, i64 0, i32 0
  %1234 = load i32, i32* %1233, align 4
  br i1 %1232, label %1235, label %1237

1235:                                             ; preds = %1228
  %1236 = add i32 %1234, -1
  store i32 %1236, i32* %1233, align 4
  br label %1237

1237:                                             ; preds = %1235, %1228
  %1238 = phi i32 [ %1236, %1235 ], [ %1234, %1228 ]
  %1239 = icmp eq i32 %1238, 0
  br i1 %1239, label %1240, label %1241

1240:                                             ; preds = %1237
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1224) #13
  br label %1241

1241:                                             ; preds = %1219, %1240, %1237, %1222
  %1242 = ptrtoint i8* %1197 to i64
  %1243 = getelementptr inbounds i8, i8* %1047, i64 48
  %1244 = bitcast i8* %1243 to %"class.blink::protocol::Audits::AffectedFrame"**
  %1245 = load %"class.blink::protocol::Audits::AffectedFrame"*, %"class.blink::protocol::Audits::AffectedFrame"** %1244, align 8
  %1246 = bitcast i8* %1243 to i64*
  store i64 %1242, i64* %1246, align 8
  %1247 = icmp eq %"class.blink::protocol::Audits::AffectedFrame"* %1245, null
  br i1 %1247, label %1253, label %1248

1248:                                             ; preds = %1241
  %1249 = bitcast %"class.blink::protocol::Audits::AffectedFrame"* %1245 to void (%"class.blink::protocol::Audits::AffectedFrame"*)***
  %1250 = load void (%"class.blink::protocol::Audits::AffectedFrame"*)**, void (%"class.blink::protocol::Audits::AffectedFrame"*)*** %1249, align 8
  %1251 = getelementptr inbounds void (%"class.blink::protocol::Audits::AffectedFrame"*)*, void (%"class.blink::protocol::Audits::AffectedFrame"*)** %1250, i64 2
  %1252 = load void (%"class.blink::protocol::Audits::AffectedFrame"*)*, void (%"class.blink::protocol::Audits::AffectedFrame"*)** %1251, align 8
  call void %1252(%"class.blink::protocol::Audits::AffectedFrame"* nonnull %1245) #13
  br label %1253

1253:                                             ; preds = %1192, %1248, %1241
  %1254 = getelementptr inbounds %"class.blink::mojom::blink::ContentSecurityPolicyIssueDetails", %"class.blink::mojom::blink::ContentSecurityPolicyIssueDetails"* %1046, i64 0, i32 6, i32 1
  %1255 = load i32, i32* %1254, align 8
  %1256 = icmp eq i32 %1255, 0
  br i1 %1256, label %1271, label %1257

1257:                                             ; preds = %1253
  %1258 = getelementptr inbounds %"class.blink::mojom::blink::ContentSecurityPolicyIssueDetails", %"class.blink::mojom::blink::ContentSecurityPolicyIssueDetails"* %1046, i64 0, i32 6
  %1259 = call fastcc %"class.blink::protocol::Audits::SourceCodeLocation"* @_ZN5blink12_GLOBAL__N_121BuildAffectedLocationERKN4mojo16InlinedStructPtrINS_5mojom5blink16AffectedLocationEEE(%"class.mojo::InlinedStructPtr.242"* dereferenceable(32) %1258)
  %1260 = ptrtoint %"class.blink::protocol::Audits::SourceCodeLocation"* %1259 to i64
  %1261 = getelementptr inbounds i8, i8* %1047, i64 56
  %1262 = bitcast i8* %1261 to %"class.blink::protocol::Audits::SourceCodeLocation"**
  %1263 = load %"class.blink::protocol::Audits::SourceCodeLocation"*, %"class.blink::protocol::Audits::SourceCodeLocation"** %1262, align 8
  %1264 = bitcast i8* %1261 to i64*
  store i64 %1260, i64* %1264, align 8
  %1265 = icmp eq %"class.blink::protocol::Audits::SourceCodeLocation"* %1263, null
  br i1 %1265, label %1271, label %1266

1266:                                             ; preds = %1257
  %1267 = bitcast %"class.blink::protocol::Audits::SourceCodeLocation"* %1263 to void (%"class.blink::protocol::Audits::SourceCodeLocation"*)***
  %1268 = load void (%"class.blink::protocol::Audits::SourceCodeLocation"*)**, void (%"class.blink::protocol::Audits::SourceCodeLocation"*)*** %1267, align 8
  %1269 = getelementptr inbounds void (%"class.blink::protocol::Audits::SourceCodeLocation"*)*, void (%"class.blink::protocol::Audits::SourceCodeLocation"*)** %1268, i64 2
  %1270 = load void (%"class.blink::protocol::Audits::SourceCodeLocation"*)*, void (%"class.blink::protocol::Audits::SourceCodeLocation"*)** %1269, align 8
  call void %1270(%"class.blink::protocol::Audits::SourceCodeLocation"* nonnull %1263) #13
  br label %1271

1271:                                             ; preds = %1253, %1266, %1257
  %1272 = getelementptr inbounds %"class.blink::mojom::blink::ContentSecurityPolicyIssueDetails", %"class.blink::mojom::blink::ContentSecurityPolicyIssueDetails"* %1046, i64 0, i32 7
  %1273 = load i32, i32* %1272, align 8
  %1274 = icmp eq i32 %1273, 0
  br i1 %1274, label %1277, label %1275

1275:                                             ; preds = %1271
  store i32 %1273, i32* %1053, align 4
  %1276 = getelementptr inbounds i8, i8* %1047, i64 64
  store i8 1, i8* %1276, align 4
  br label %1277

1277:                                             ; preds = %1271, %1275
  %1278 = getelementptr inbounds i8, i8* %15, i64 40
  %1279 = bitcast i8* %1278 to %"class.blink::protocol::Audits::ContentSecurityPolicyIssueDetails"**
  %1280 = load %"class.blink::protocol::Audits::ContentSecurityPolicyIssueDetails"*, %"class.blink::protocol::Audits::ContentSecurityPolicyIssueDetails"** %1279, align 8
  %1281 = bitcast i8* %1278 to i64*
  store i64 %1054, i64* %1281, align 8
  %1282 = icmp eq %"class.blink::protocol::Audits::ContentSecurityPolicyIssueDetails"* %1280, null
  br i1 %1282, label %1288, label %1283

1283:                                             ; preds = %1277
  %1284 = bitcast %"class.blink::protocol::Audits::ContentSecurityPolicyIssueDetails"* %1280 to void (%"class.blink::protocol::Audits::ContentSecurityPolicyIssueDetails"*)***
  %1285 = load void (%"class.blink::protocol::Audits::ContentSecurityPolicyIssueDetails"*)**, void (%"class.blink::protocol::Audits::ContentSecurityPolicyIssueDetails"*)*** %1284, align 8
  %1286 = getelementptr inbounds void (%"class.blink::protocol::Audits::ContentSecurityPolicyIssueDetails"*)*, void (%"class.blink::protocol::Audits::ContentSecurityPolicyIssueDetails"*)** %1285, i64 2
  %1287 = load void (%"class.blink::protocol::Audits::ContentSecurityPolicyIssueDetails"*)*, void (%"class.blink::protocol::Audits::ContentSecurityPolicyIssueDetails"*)** %1286, align 8
  call void %1287(%"class.blink::protocol::Audits::ContentSecurityPolicyIssueDetails"* nonnull %1280) #13
  br label %1288

1288:                                             ; preds = %1034, %1277, %1283
  %1289 = call dereferenceable(8) %"class.mojo::StructPtr"* @_ZNK5blink14InspectorIssue7DetailsEv(%"class.blink::InspectorIssue"* %0) #13
  %1290 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %1289, i64 0, i32 0, i32 0, i32 0, i32 0
  %1291 = load %"class.blink::mojom::blink::InspectorIssueDetails"*, %"class.blink::mojom::blink::InspectorIssueDetails"** %1290, align 8
  %1292 = getelementptr inbounds %"class.blink::mojom::blink::InspectorIssueDetails", %"class.blink::mojom::blink::InspectorIssueDetails"* %1291, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %1293 = load %"class.blink::mojom::blink::SharedArrayBufferIssueDetails"*, %"class.blink::mojom::blink::SharedArrayBufferIssueDetails"** %1292, align 8
  %1294 = icmp eq %"class.blink::mojom::blink::SharedArrayBufferIssueDetails"* %1293, null
  br i1 %1294, label %1393, label %1295

1295:                                             ; preds = %1288
  %1296 = call dereferenceable(8) %"class.mojo::StructPtr"* @_ZNK5blink14InspectorIssue7DetailsEv(%"class.blink::InspectorIssue"* %0) #13
  %1297 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %1296, i64 0, i32 0, i32 0, i32 0, i32 0
  %1298 = load %"class.blink::mojom::blink::InspectorIssueDetails"*, %"class.blink::mojom::blink::InspectorIssueDetails"** %1297, align 8
  %1299 = getelementptr inbounds %"class.blink::mojom::blink::InspectorIssueDetails", %"class.blink::mojom::blink::InspectorIssueDetails"* %1298, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %1300 = load %"class.blink::mojom::blink::SharedArrayBufferIssueDetails"*, %"class.blink::mojom::blink::SharedArrayBufferIssueDetails"** %1299, align 8
  %1301 = call i8* @_Znwm(i64 32) #12
  %1302 = bitcast i8* %1301 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol6Audits29SharedArrayBufferIssueDetailsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1302, align 8
  %1303 = getelementptr inbounds i8, i8* %1301, i64 8
  %1304 = bitcast i8* %1303 to i64*
  store i64 0, i64* %1304, align 8
  %1305 = getelementptr inbounds i8, i8* %1301, i64 24
  %1306 = bitcast i8* %1305 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1306, align 8
  %1307 = getelementptr inbounds i8, i8* %1301, i64 16
  store i8 0, i8* %1307, align 8
  %1308 = getelementptr inbounds %"class.blink::mojom::blink::SharedArrayBufferIssueDetails", %"class.blink::mojom::blink::SharedArrayBufferIssueDetails"* %1300, i64 0, i32 1
  %1309 = load i8, i8* %1308, align 8, !range !3
  store i8 %1309, i8* %1307, align 8
  %1310 = getelementptr inbounds %"class.blink::mojom::blink::SharedArrayBufferIssueDetails", %"class.blink::mojom::blink::SharedArrayBufferIssueDetails"* %1300, i64 0, i32 2
  %1311 = load i32, i32* %1310, align 4
  %1312 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1312)
  %1313 = icmp eq i32 %1311, 0
  %1314 = select i1 %1313, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits30SharedArrayBufferIssueTypeEnum13TransferIssueE, i64 0, i64 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits30SharedArrayBufferIssueTypeEnum13CreationIssueE, i64 0, i64 0)
  %1315 = select i1 %1313, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits30SharedArrayBufferIssueTypeEnum13TransferIssueE, i64 0, i64 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits30SharedArrayBufferIssueTypeEnum13CreationIssueE, i64 0, i64 0)
  %1316 = call i64 @strlen(i8* nonnull %1314) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* %1315, i64 %1316) #13
  %1317 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %1318 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1317, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1312)
  %1319 = icmp eq %"class.WTF::StringImpl"* %1318, null
  br i1 %1319, label %1337, label %1320

1320:                                             ; preds = %1295
  %1321 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1318, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1322 = load atomic i32, i32* %1321 monotonic, align 4
  %1323 = and i32 %1322, 2
  %1324 = icmp eq i32 %1323, 0
  br i1 %1324, label %1325, label %1337

1325:                                             ; preds = %1320
  %1326 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1318, i64 0, i32 0
  %1327 = load i32, i32* %1326, align 4
  %1328 = zext i32 %1327 to i33
  %1329 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1328, i33 1) #13
  %1330 = extractvalue { i33, i1 } %1329, 1
  %1331 = extractvalue { i33, i1 } %1329, 0
  %1332 = icmp slt i33 %1331, 0
  %1333 = or i1 %1330, %1332
  br i1 %1333, label %1334, label %1335, !prof !2

1334:                                             ; preds = %1325
  call void @llvm.trap() #13
  unreachable

1335:                                             ; preds = %1325
  %1336 = trunc i33 %1331 to i32
  store i32 %1336, i32* %1326, align 4
  br label %1337

1337:                                             ; preds = %1335, %1320, %1295
  %1338 = ptrtoint %"class.WTF::StringImpl"* %1318 to i64
  %1339 = bitcast i8* %1305 to i64*
  %1340 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1306, align 8
  store i64 %1338, i64* %1339, align 8
  %1341 = icmp eq %"class.WTF::StringImpl"* %1340, null
  br i1 %1341, label %1355, label %1342

1342:                                             ; preds = %1337
  %1343 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1340, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1344 = load atomic i32, i32* %1343 monotonic, align 4
  %1345 = and i32 %1344, 2
  %1346 = icmp eq i32 %1345, 0
  %1347 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1340, i64 0, i32 0
  %1348 = load i32, i32* %1347, align 4
  br i1 %1346, label %1349, label %1351

1349:                                             ; preds = %1342
  %1350 = add i32 %1348, -1
  store i32 %1350, i32* %1347, align 4
  br label %1351

1351:                                             ; preds = %1349, %1342
  %1352 = phi i32 [ %1350, %1349 ], [ %1348, %1342 ]
  %1353 = icmp eq i32 %1352, 0
  br i1 %1353, label %1354, label %1355

1354:                                             ; preds = %1351
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1340) #13
  br label %1355

1355:                                             ; preds = %1337, %1351, %1354
  %1356 = getelementptr inbounds %"class.blink::mojom::blink::SharedArrayBufferIssueDetails", %"class.blink::mojom::blink::SharedArrayBufferIssueDetails"* %1300, i64 0, i32 0
  %1357 = call fastcc %"class.blink::protocol::Audits::SourceCodeLocation"* @_ZN5blink12_GLOBAL__N_121BuildAffectedLocationERKN4mojo16InlinedStructPtrINS_5mojom5blink16AffectedLocationEEE(%"class.mojo::InlinedStructPtr.242"* dereferenceable(32) %1356)
  %1358 = ptrtoint %"class.blink::protocol::Audits::SourceCodeLocation"* %1357 to i64
  %1359 = bitcast i8* %1303 to %"class.blink::protocol::Audits::SourceCodeLocation"**
  %1360 = load %"class.blink::protocol::Audits::SourceCodeLocation"*, %"class.blink::protocol::Audits::SourceCodeLocation"** %1359, align 8
  store i64 %1358, i64* %1304, align 8
  %1361 = icmp eq %"class.blink::protocol::Audits::SourceCodeLocation"* %1360, null
  br i1 %1361, label %1367, label %1362

1362:                                             ; preds = %1355
  %1363 = bitcast %"class.blink::protocol::Audits::SourceCodeLocation"* %1360 to void (%"class.blink::protocol::Audits::SourceCodeLocation"*)***
  %1364 = load void (%"class.blink::protocol::Audits::SourceCodeLocation"*)**, void (%"class.blink::protocol::Audits::SourceCodeLocation"*)*** %1363, align 8
  %1365 = getelementptr inbounds void (%"class.blink::protocol::Audits::SourceCodeLocation"*)*, void (%"class.blink::protocol::Audits::SourceCodeLocation"*)** %1364, i64 2
  %1366 = load void (%"class.blink::protocol::Audits::SourceCodeLocation"*)*, void (%"class.blink::protocol::Audits::SourceCodeLocation"*)** %1365, align 8
  call void %1366(%"class.blink::protocol::Audits::SourceCodeLocation"* nonnull %1360) #13
  br label %1367

1367:                                             ; preds = %1355, %1362
  %1368 = ptrtoint i8* %1301 to i64
  br i1 %1319, label %1382, label %1369

1369:                                             ; preds = %1367
  %1370 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1318, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1371 = load atomic i32, i32* %1370 monotonic, align 4
  %1372 = and i32 %1371, 2
  %1373 = icmp eq i32 %1372, 0
  %1374 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1318, i64 0, i32 0
  %1375 = load i32, i32* %1374, align 4
  br i1 %1373, label %1376, label %1378

1376:                                             ; preds = %1369
  %1377 = add i32 %1375, -1
  store i32 %1377, i32* %1374, align 4
  br label %1378

1378:                                             ; preds = %1376, %1369
  %1379 = phi i32 [ %1377, %1376 ], [ %1375, %1369 ]
  %1380 = icmp eq i32 %1379, 0
  br i1 %1380, label %1381, label %1382

1381:                                             ; preds = %1378
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1318) #13
  br label %1382

1382:                                             ; preds = %1381, %1378, %1367
  %1383 = getelementptr inbounds i8, i8* %15, i64 48
  %1384 = bitcast i8* %1383 to %"class.blink::protocol::Audits::SharedArrayBufferIssueDetails"**
  %1385 = load %"class.blink::protocol::Audits::SharedArrayBufferIssueDetails"*, %"class.blink::protocol::Audits::SharedArrayBufferIssueDetails"** %1384, align 8
  %1386 = bitcast i8* %1383 to i64*
  store i64 %1368, i64* %1386, align 8
  %1387 = icmp eq %"class.blink::protocol::Audits::SharedArrayBufferIssueDetails"* %1385, null
  br i1 %1387, label %1393, label %1388

1388:                                             ; preds = %1382
  %1389 = bitcast %"class.blink::protocol::Audits::SharedArrayBufferIssueDetails"* %1385 to void (%"class.blink::protocol::Audits::SharedArrayBufferIssueDetails"*)***
  %1390 = load void (%"class.blink::protocol::Audits::SharedArrayBufferIssueDetails"*)**, void (%"class.blink::protocol::Audits::SharedArrayBufferIssueDetails"*)*** %1389, align 8
  %1391 = getelementptr inbounds void (%"class.blink::protocol::Audits::SharedArrayBufferIssueDetails"*)*, void (%"class.blink::protocol::Audits::SharedArrayBufferIssueDetails"*)** %1390, i64 2
  %1392 = load void (%"class.blink::protocol::Audits::SharedArrayBufferIssueDetails"*)*, void (%"class.blink::protocol::Audits::SharedArrayBufferIssueDetails"*)** %1391, align 8
  call void %1392(%"class.blink::protocol::Audits::SharedArrayBufferIssueDetails"* nonnull %1385) #13
  br label %1393

1393:                                             ; preds = %1288, %1382, %1388
  %1394 = call dereferenceable(8) %"class.mojo::StructPtr"* @_ZNK5blink14InspectorIssue7DetailsEv(%"class.blink::InspectorIssue"* %0) #13
  %1395 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %1394, i64 0, i32 0, i32 0, i32 0, i32 0
  %1396 = load %"class.blink::mojom::blink::InspectorIssueDetails"*, %"class.blink::mojom::blink::InspectorIssueDetails"** %1395, align 8
  %1397 = getelementptr inbounds %"class.blink::mojom::blink::InspectorIssueDetails", %"class.blink::mojom::blink::InspectorIssueDetails"* %1396, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %1398 = load %"class.blink::mojom::blink::LowTextContrastIssue"*, %"class.blink::mojom::blink::LowTextContrastIssue"** %1397, align 8
  %1399 = icmp eq %"class.blink::mojom::blink::LowTextContrastIssue"* %1398, null
  br i1 %1399, label %1563, label %1400

1400:                                             ; preds = %1393
  %1401 = call dereferenceable(8) %"class.mojo::StructPtr"* @_ZNK5blink14InspectorIssue7DetailsEv(%"class.blink::InspectorIssue"* %0) #13
  %1402 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %1401, i64 0, i32 0, i32 0, i32 0, i32 0
  %1403 = load %"class.blink::mojom::blink::InspectorIssueDetails"*, %"class.blink::mojom::blink::InspectorIssueDetails"** %1402, align 8
  %1404 = getelementptr inbounds %"class.blink::mojom::blink::InspectorIssueDetails", %"class.blink::mojom::blink::InspectorIssueDetails"* %1403, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %1405 = load %"class.blink::mojom::blink::LowTextContrastIssue"*, %"class.blink::mojom::blink::LowTextContrastIssue"** %1404, align 8
  %1406 = call i8* @_Znwm(i64 64) #12
  %1407 = bitcast i8* %1406 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol6Audits27LowTextContrastIssueDetailsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1407, align 8
  %1408 = getelementptr inbounds i8, i8* %1406, i64 16
  %1409 = getelementptr inbounds i8, i8* %1406, i64 8
  %1410 = bitcast i8* %1409 to i32*
  store i32 0, i32* %1410, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %1408, i8 0, i64 48, i1 false) #13
  %1411 = getelementptr inbounds %"class.blink::mojom::blink::LowTextContrastIssue", %"class.blink::mojom::blink::LowTextContrastIssue"* %1405, i64 0, i32 3
  %1412 = load float, float* %1411, align 4
  %1413 = fpext float %1412 to double
  %1414 = getelementptr inbounds i8, i8* %1406, i64 32
  %1415 = bitcast i8* %1414 to double*
  store double %1413, double* %1415, align 8
  %1416 = getelementptr inbounds %"class.blink::mojom::blink::LowTextContrastIssue", %"class.blink::mojom::blink::LowTextContrastIssue"* %1405, i64 0, i32 4
  %1417 = load float, float* %1416, align 8
  %1418 = fpext float %1417 to double
  %1419 = getelementptr inbounds i8, i8* %1406, i64 40
  %1420 = bitcast i8* %1419 to double*
  store double %1418, double* %1420, align 8
  %1421 = getelementptr inbounds i8, i8* %1406, i64 48
  %1422 = getelementptr inbounds %"class.blink::mojom::blink::LowTextContrastIssue", %"class.blink::mojom::blink::LowTextContrastIssue"* %1405, i64 0, i32 5, i32 0, i32 0
  %1423 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1422, align 8
  %1424 = icmp eq %"class.WTF::StringImpl"* %1423, null
  br i1 %1424, label %1440, label %1425

1425:                                             ; preds = %1400
  %1426 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1423, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1427 = load atomic i32, i32* %1426 monotonic, align 4
  %1428 = and i32 %1427, 2
  %1429 = icmp eq i32 %1428, 0
  br i1 %1429, label %1430, label %1440

1430:                                             ; preds = %1425
  %1431 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1423, i64 0, i32 0
  %1432 = load i32, i32* %1431, align 4
  %1433 = zext i32 %1432 to i33
  %1434 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1433, i33 1) #13
  %1435 = extractvalue { i33, i1 } %1434, 1
  %1436 = extractvalue { i33, i1 } %1434, 0
  %1437 = icmp slt i33 %1436, 0
  %1438 = or i1 %1435, %1437
  br i1 %1438, label %1439, label %1443, !prof !2

1439:                                             ; preds = %1430
  call void @llvm.trap() #13
  unreachable

1440:                                             ; preds = %1425, %1400
  %1441 = ptrtoint %"class.WTF::StringImpl"* %1423 to i64
  %1442 = bitcast i8* %1421 to i64*
  store i64 %1441, i64* %1442, align 8
  br label %1463

1443:                                             ; preds = %1430
  %1444 = trunc i33 %1436 to i32
  store i32 %1444, i32* %1431, align 4
  %1445 = bitcast i8* %1421 to %"class.WTF::StringImpl"**
  %1446 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1445, align 8
  %1447 = ptrtoint %"class.WTF::StringImpl"* %1423 to i64
  %1448 = bitcast i8* %1421 to i64*
  store i64 %1447, i64* %1448, align 8
  %1449 = icmp eq %"class.WTF::StringImpl"* %1446, null
  br i1 %1449, label %1463, label %1450

1450:                                             ; preds = %1443
  %1451 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1446, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1452 = load atomic i32, i32* %1451 monotonic, align 4
  %1453 = and i32 %1452, 2
  %1454 = icmp eq i32 %1453, 0
  %1455 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1446, i64 0, i32 0
  %1456 = load i32, i32* %1455, align 4
  br i1 %1454, label %1457, label %1459

1457:                                             ; preds = %1450
  %1458 = add i32 %1456, -1
  store i32 %1458, i32* %1455, align 4
  br label %1459

1459:                                             ; preds = %1457, %1450
  %1460 = phi i32 [ %1458, %1457 ], [ %1456, %1450 ]
  %1461 = icmp eq i32 %1460, 0
  br i1 %1461, label %1462, label %1463

1462:                                             ; preds = %1459
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1446) #13
  br label %1463

1463:                                             ; preds = %1440, %1443, %1459, %1462
  %1464 = getelementptr inbounds i8, i8* %1406, i64 56
  %1465 = getelementptr inbounds %"class.blink::mojom::blink::LowTextContrastIssue", %"class.blink::mojom::blink::LowTextContrastIssue"* %1405, i64 0, i32 6, i32 0, i32 0
  %1466 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1465, align 8
  %1467 = icmp eq %"class.WTF::StringImpl"* %1466, null
  br i1 %1467, label %1485, label %1468

1468:                                             ; preds = %1463
  %1469 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1466, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1470 = load atomic i32, i32* %1469 monotonic, align 4
  %1471 = and i32 %1470, 2
  %1472 = icmp eq i32 %1471, 0
  br i1 %1472, label %1473, label %1485

1473:                                             ; preds = %1468
  %1474 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1466, i64 0, i32 0
  %1475 = load i32, i32* %1474, align 4
  %1476 = zext i32 %1475 to i33
  %1477 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1476, i33 1) #13
  %1478 = extractvalue { i33, i1 } %1477, 1
  %1479 = extractvalue { i33, i1 } %1477, 0
  %1480 = icmp slt i33 %1479, 0
  %1481 = or i1 %1478, %1480
  br i1 %1481, label %1482, label %1483, !prof !2

1482:                                             ; preds = %1473
  call void @llvm.trap() #13
  unreachable

1483:                                             ; preds = %1473
  %1484 = trunc i33 %1479 to i32
  store i32 %1484, i32* %1474, align 4
  br label %1485

1485:                                             ; preds = %1483, %1468, %1463
  %1486 = ptrtoint %"class.WTF::StringImpl"* %1466 to i64
  %1487 = bitcast i8* %1464 to i64*
  %1488 = bitcast i8* %1464 to %"class.WTF::StringImpl"**
  %1489 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1488, align 8
  store i64 %1486, i64* %1487, align 8
  %1490 = icmp eq %"class.WTF::StringImpl"* %1489, null
  br i1 %1490, label %1504, label %1491

1491:                                             ; preds = %1485
  %1492 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1489, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1493 = load atomic i32, i32* %1492 monotonic, align 4
  %1494 = and i32 %1493, 2
  %1495 = icmp eq i32 %1494, 0
  %1496 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1489, i64 0, i32 0
  %1497 = load i32, i32* %1496, align 4
  br i1 %1495, label %1498, label %1500

1498:                                             ; preds = %1491
  %1499 = add i32 %1497, -1
  store i32 %1499, i32* %1496, align 4
  br label %1500

1500:                                             ; preds = %1498, %1491
  %1501 = phi i32 [ %1499, %1498 ], [ %1497, %1491 ]
  %1502 = icmp eq i32 %1501, 0
  br i1 %1502, label %1503, label %1504

1503:                                             ; preds = %1500
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1489) #13
  br label %1504

1504:                                             ; preds = %1485, %1500, %1503
  %1505 = getelementptr inbounds %"class.blink::mojom::blink::LowTextContrastIssue", %"class.blink::mojom::blink::LowTextContrastIssue"* %1405, i64 0, i32 2
  %1506 = load float, float* %1505, align 8
  %1507 = fpext float %1506 to double
  %1508 = getelementptr inbounds i8, i8* %1406, i64 24
  %1509 = bitcast i8* %1508 to double*
  store double %1507, double* %1509, align 8
  %1510 = getelementptr inbounds %"class.blink::mojom::blink::LowTextContrastIssue", %"class.blink::mojom::blink::LowTextContrastIssue"* %1405, i64 0, i32 1, i32 0, i32 0
  %1511 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1510, align 8
  %1512 = icmp eq %"class.WTF::StringImpl"* %1511, null
  br i1 %1512, label %1530, label %1513

1513:                                             ; preds = %1504
  %1514 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1511, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1515 = load atomic i32, i32* %1514 monotonic, align 4
  %1516 = and i32 %1515, 2
  %1517 = icmp eq i32 %1516, 0
  br i1 %1517, label %1518, label %1530

1518:                                             ; preds = %1513
  %1519 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1511, i64 0, i32 0
  %1520 = load i32, i32* %1519, align 4
  %1521 = zext i32 %1520 to i33
  %1522 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1521, i33 1) #13
  %1523 = extractvalue { i33, i1 } %1522, 1
  %1524 = extractvalue { i33, i1 } %1522, 0
  %1525 = icmp slt i33 %1524, 0
  %1526 = or i1 %1523, %1525
  br i1 %1526, label %1527, label %1528, !prof !2

1527:                                             ; preds = %1518
  call void @llvm.trap() #13
  unreachable

1528:                                             ; preds = %1518
  %1529 = trunc i33 %1524 to i32
  store i32 %1529, i32* %1519, align 4
  br label %1530

1530:                                             ; preds = %1528, %1513, %1504
  %1531 = ptrtoint %"class.WTF::StringImpl"* %1511 to i64
  %1532 = bitcast i8* %1408 to i64*
  %1533 = bitcast i8* %1408 to %"class.WTF::StringImpl"**
  %1534 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1533, align 8
  store i64 %1531, i64* %1532, align 8
  %1535 = icmp eq %"class.WTF::StringImpl"* %1534, null
  br i1 %1535, label %1549, label %1536

1536:                                             ; preds = %1530
  %1537 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1534, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1538 = load atomic i32, i32* %1537 monotonic, align 4
  %1539 = and i32 %1538, 2
  %1540 = icmp eq i32 %1539, 0
  %1541 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1534, i64 0, i32 0
  %1542 = load i32, i32* %1541, align 4
  br i1 %1540, label %1543, label %1545

1543:                                             ; preds = %1536
  %1544 = add i32 %1542, -1
  store i32 %1544, i32* %1541, align 4
  br label %1545

1545:                                             ; preds = %1543, %1536
  %1546 = phi i32 [ %1544, %1543 ], [ %1542, %1536 ]
  %1547 = icmp eq i32 %1546, 0
  br i1 %1547, label %1548, label %1549

1548:                                             ; preds = %1545
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1534) #13
  br label %1549

1549:                                             ; preds = %1548, %1545, %1530
  %1550 = getelementptr inbounds %"class.blink::mojom::blink::LowTextContrastIssue", %"class.blink::mojom::blink::LowTextContrastIssue"* %1405, i64 0, i32 0
  %1551 = load i32, i32* %1550, align 8
  store i32 %1551, i32* %1410, align 8
  %1552 = ptrtoint i8* %1406 to i64
  %1553 = getelementptr inbounds i8, i8* %15, i64 64
  %1554 = bitcast i8* %1553 to %"class.blink::protocol::Audits::LowTextContrastIssueDetails"**
  %1555 = load %"class.blink::protocol::Audits::LowTextContrastIssueDetails"*, %"class.blink::protocol::Audits::LowTextContrastIssueDetails"** %1554, align 8
  %1556 = bitcast i8* %1553 to i64*
  store i64 %1552, i64* %1556, align 8
  %1557 = icmp eq %"class.blink::protocol::Audits::LowTextContrastIssueDetails"* %1555, null
  br i1 %1557, label %1563, label %1558

1558:                                             ; preds = %1549
  %1559 = bitcast %"class.blink::protocol::Audits::LowTextContrastIssueDetails"* %1555 to void (%"class.blink::protocol::Audits::LowTextContrastIssueDetails"*)***
  %1560 = load void (%"class.blink::protocol::Audits::LowTextContrastIssueDetails"*)**, void (%"class.blink::protocol::Audits::LowTextContrastIssueDetails"*)*** %1559, align 8
  %1561 = getelementptr inbounds void (%"class.blink::protocol::Audits::LowTextContrastIssueDetails"*)*, void (%"class.blink::protocol::Audits::LowTextContrastIssueDetails"*)** %1560, i64 2
  %1562 = load void (%"class.blink::protocol::Audits::LowTextContrastIssueDetails"*)*, void (%"class.blink::protocol::Audits::LowTextContrastIssueDetails"*)** %1561, align 8
  call void %1562(%"class.blink::protocol::Audits::LowTextContrastIssueDetails"* nonnull %1555) #13
  br label %1563

1563:                                             ; preds = %1393, %1549, %1558
  %1564 = call i8* @_Znwm(i64 24) #12
  %1565 = bitcast i8* %1564 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol6Audits14InspectorIssueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1565, align 8
  %1566 = getelementptr inbounds i8, i8* %1564, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %1566, i8 0, i64 16, i1 false) #13
  %1567 = bitcast i8* %1564 to %"class.blink::protocol::Audits::InspectorIssue"*
  %1568 = call i32 @_ZNK5blink14InspectorIssue4CodeEv(%"class.blink::InspectorIssue"* %0) #13
  %1569 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1569)
  switch i32 %1568, label %1588 [
    i32 0, label %1570
    i32 1, label %1572
    i32 2, label %1574
    i32 3, label %1576
    i32 4, label %1578
    i32 5, label %1580
    i32 6, label %1583
    i32 7, label %1586
  ]

1570:                                             ; preds = %1563
  %1571 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits22InspectorIssueCodeEnum19SameSiteCookieIssueE, i64 0, i64 0)) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits22InspectorIssueCodeEnum19SameSiteCookieIssueE, i64 0, i64 0), i64 %1571) #13
  br label %1589

1572:                                             ; preds = %1563
  %1573 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits22InspectorIssueCodeEnum17MixedContentIssueE, i64 0, i64 0)) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits22InspectorIssueCodeEnum17MixedContentIssueE, i64 0, i64 0), i64 %1573) #13
  br label %1589

1574:                                             ; preds = %1563
  %1575 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits22InspectorIssueCodeEnum22BlockedByResponseIssueE, i64 0, i64 0)) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits22InspectorIssueCodeEnum22BlockedByResponseIssueE, i64 0, i64 0), i64 %1575) #13
  br label %1589

1576:                                             ; preds = %1563
  %1577 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits22InspectorIssueCodeEnum26ContentSecurityPolicyIssueE, i64 0, i64 0)) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits22InspectorIssueCodeEnum26ContentSecurityPolicyIssueE, i64 0, i64 0), i64 %1577) #13
  br label %1589

1578:                                             ; preds = %1563
  %1579 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits22InspectorIssueCodeEnum22SharedArrayBufferIssueE, i64 0, i64 0)) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits22InspectorIssueCodeEnum22SharedArrayBufferIssueE, i64 0, i64 0), i64 %1579) #13
  br label %1589

1580:                                             ; preds = %1563
  %1581 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1581) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1, i64 0, i64 0), i32 55, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0)) #13
  %1582 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1581) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i64 0) #13
  br label %1589

1583:                                             ; preds = %1563
  %1584 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1584) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1, i64 0, i64 0), i32 58, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0)) #13
  %1585 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1584) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), i64 0) #13
  br label %1589

1586:                                             ; preds = %1563
  %1587 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits22InspectorIssueCodeEnum20LowTextContrastIssueE, i64 0, i64 0)) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol6Audits22InspectorIssueCodeEnum20LowTextContrastIssueE, i64 0, i64 0), i64 %1587) #13
  br label %1589

1588:                                             ; preds = %1563
  unreachable

1589:                                             ; preds = %1570, %1572, %1574, %1576, %1578, %1580, %1583, %1586
  %1590 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %1591 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1590, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1569)
  %1592 = icmp eq %"class.WTF::StringImpl"* %1591, null
  br i1 %1592, label %1610, label %1593

1593:                                             ; preds = %1589
  %1594 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1591, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1595 = load atomic i32, i32* %1594 monotonic, align 4
  %1596 = and i32 %1595, 2
  %1597 = icmp eq i32 %1596, 0
  br i1 %1597, label %1598, label %1616

1598:                                             ; preds = %1593
  %1599 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1591, i64 0, i32 0
  %1600 = load i32, i32* %1599, align 4
  %1601 = zext i32 %1600 to i33
  %1602 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1601, i33 1) #13
  %1603 = extractvalue { i33, i1 } %1602, 1
  %1604 = extractvalue { i33, i1 } %1602, 0
  %1605 = icmp slt i33 %1604, 0
  %1606 = or i1 %1603, %1605
  br i1 %1606, label %1607, label %1608, !prof !2

1607:                                             ; preds = %1598
  call void @llvm.trap() #13
  unreachable

1608:                                             ; preds = %1598
  %1609 = trunc i33 %1604 to i32
  store i32 %1609, i32* %1599, align 4
  br label %1616

1610:                                             ; preds = %1589
  %1611 = ptrtoint %"class.WTF::StringImpl"* %1591 to i64
  %1612 = bitcast i8* %1566 to i64*
  store i64 %1611, i64* %1612, align 8
  %1613 = ptrtoint i8* %15 to i64
  %1614 = getelementptr inbounds i8, i8* %1564, i64 16
  %1615 = bitcast i8* %1614 to i64*
  store i64 %1613, i64* %1615, align 8
  br label %1634

1616:                                             ; preds = %1608, %1593
  %1617 = ptrtoint %"class.WTF::StringImpl"* %1591 to i64
  %1618 = bitcast i8* %1566 to i64*
  store i64 %1617, i64* %1618, align 8
  %1619 = ptrtoint i8* %15 to i64
  %1620 = getelementptr inbounds i8, i8* %1564, i64 16
  %1621 = bitcast i8* %1620 to i64*
  store i64 %1619, i64* %1621, align 8
  %1622 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1591, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1623 = load atomic i32, i32* %1622 monotonic, align 4
  %1624 = and i32 %1623, 2
  %1625 = icmp eq i32 %1624, 0
  %1626 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1591, i64 0, i32 0
  %1627 = load i32, i32* %1626, align 4
  br i1 %1625, label %1628, label %1630

1628:                                             ; preds = %1616
  %1629 = add i32 %1627, -1
  store i32 %1629, i32* %1626, align 4
  br label %1630

1630:                                             ; preds = %1628, %1616
  %1631 = phi i32 [ %1629, %1628 ], [ %1627, %1616 ]
  %1632 = icmp eq i32 %1631, 0
  br i1 %1632, label %1633, label %1634

1633:                                             ; preds = %1630
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1591) #13
  br label %1634

1634:                                             ; preds = %1610, %1630, %1633
  ret %"class.blink::protocol::Audits::InspectorIssue"* %1567
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dereferenceable(8) %"class.mojo::StructPtr"* @_ZNK5blink14InspectorIssue7DetailsEv(%"class.blink::InspectorIssue"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::protocol::Audits::AffectedRequest"* @_ZN5blink12_GLOBAL__N_120BuildAffectedRequestERKN4mojo16InlinedStructPtrINS_5mojom5blink15AffectedRequestEEE(%"class.mojo::InlinedStructPtr.217"* nocapture readonly dereferenceable(24)) unnamed_addr #0 {
  %2 = tail call i8* @_Znwm(i64 32) #12
  %3 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol6Audits15AffectedRequestE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  %5 = bitcast i8* %4 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %5, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 16
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds i8, i8* %2, i64 24
  %8 = bitcast i8* %7 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %8, align 8
  %9 = bitcast i8* %2 to %"class.blink::protocol::Audits::AffectedRequest"*
  %10 = getelementptr inbounds %"class.mojo::InlinedStructPtr.217", %"class.mojo::InlinedStructPtr.217"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %28, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %28

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #13
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %31, !prof !2

27:                                               ; preds = %18
  tail call void @llvm.trap() #13
  unreachable

28:                                               ; preds = %13, %1
  %29 = ptrtoint %"class.WTF::StringImpl"* %11 to i64
  %30 = bitcast i8* %4 to i64*
  store i64 %29, i64* %30, align 8
  br label %50

31:                                               ; preds = %18
  %32 = trunc i33 %24 to i32
  store i32 %32, i32* %19, align 4
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %34 = ptrtoint %"class.WTF::StringImpl"* %11 to i64
  %35 = bitcast i8* %4 to i64*
  store i64 %34, i64* %35, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %36, label %50, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  br i1 %41, label %44, label %46

44:                                               ; preds = %37
  %45 = add i32 %43, -1
  store i32 %45, i32* %42, align 4
  br label %46

46:                                               ; preds = %44, %37
  %47 = phi i32 [ %45, %44 ], [ %43, %37 ]
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %46
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #13
  br label %50

50:                                               ; preds = %28, %49, %46, %31
  %51 = getelementptr inbounds %"class.mojo::InlinedStructPtr.217", %"class.mojo::InlinedStructPtr.217"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %77, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %77, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %75

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i33
  %67 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %66, i33 1) #13
  %68 = extractvalue { i33, i1 } %67, 1
  %69 = extractvalue { i33, i1 } %67, 0
  %70 = icmp slt i33 %69, 0
  %71 = or i1 %68, %70
  br i1 %71, label %72, label %73, !prof !2

72:                                               ; preds = %63
  tail call void @llvm.trap() #13
  unreachable

73:                                               ; preds = %63
  %74 = trunc i33 %69 to i32
  store i32 %74, i32* %64, align 4
  br label %75

75:                                               ; preds = %58, %73
  %76 = bitcast i8* %6 to %"class.crdtp::detail::ValueMaybe"*
  tail call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe"* %76, %"class.WTF::StringImpl"* nonnull %52) #13
  br label %77

77:                                               ; preds = %50, %54, %75
  ret %"class.blink::protocol::Audits::AffectedRequest"* %9
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::protocol::Audits::SourceCodeLocation"* @_ZN5blink12_GLOBAL__N_121BuildAffectedLocationERKN4mojo16InlinedStructPtrINS_5mojom5blink16AffectedLocationEEE(%"class.mojo::InlinedStructPtr.242"* nocapture readonly dereferenceable(32)) unnamed_addr #0 {
  %2 = tail call i8* @_Znwm(i64 40) #12
  %3 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol6Audits18SourceCodeLocationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds i8, i8* %2, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #13
  %6 = bitcast i8* %2 to %"class.blink::protocol::Audits::SourceCodeLocation"*
  %7 = getelementptr inbounds i8, i8* %2, i64 24
  %8 = getelementptr inbounds %"class.mojo::InlinedStructPtr.242", %"class.mojo::InlinedStructPtr.242"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %26, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %26

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #13
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %29, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #13
  unreachable

26:                                               ; preds = %11, %1
  %27 = ptrtoint %"class.WTF::StringImpl"* %9 to i64
  %28 = bitcast i8* %7 to i64*
  store i64 %27, i64* %28, align 8
  br label %49

29:                                               ; preds = %16
  %30 = trunc i33 %22 to i32
  store i32 %30, i32* %17, align 4
  %31 = bitcast i8* %7 to %"class.WTF::StringImpl"**
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = ptrtoint %"class.WTF::StringImpl"* %9 to i64
  %34 = bitcast i8* %7 to i64*
  store i64 %33, i64* %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #13
  br label %49

49:                                               ; preds = %26, %48, %45, %29
  %50 = getelementptr inbounds %"class.mojo::InlinedStructPtr.242", %"class.mojo::InlinedStructPtr.242"* %0, i64 0, i32 0, i32 3
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds i8, i8* %2, i64 36
  %53 = bitcast i8* %52 to i32*
  store i32 %51, i32* %53, align 4
  %54 = getelementptr inbounds %"class.mojo::InlinedStructPtr.242", %"class.mojo::InlinedStructPtr.242"* %0, i64 0, i32 0, i32 2
  %55 = load i32, i32* %54, align 8
  %56 = getelementptr inbounds i8, i8* %2, i64 32
  %57 = bitcast i8* %56 to i32*
  store i32 %55, i32* %57, align 8
  %58 = getelementptr inbounds %"class.mojo::InlinedStructPtr.242", %"class.mojo::InlinedStructPtr.242"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %84, label %61

61:                                               ; preds = %49
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %84, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %82

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = zext i32 %72 to i33
  %74 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %73, i33 1) #13
  %75 = extractvalue { i33, i1 } %74, 1
  %76 = extractvalue { i33, i1 } %74, 0
  %77 = icmp slt i33 %76, 0
  %78 = or i1 %75, %77
  br i1 %78, label %79, label %80, !prof !2

79:                                               ; preds = %70
  tail call void @llvm.trap() #13
  unreachable

80:                                               ; preds = %70
  %81 = trunc i33 %76 to i32
  store i32 %81, i32* %71, align 4
  br label %82

82:                                               ; preds = %65, %80
  %83 = bitcast i8* %4 to %"class.crdtp::detail::ValueMaybe"*
  tail call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe"* %83, %"class.WTF::StringImpl"* nonnull %59) #13
  br label %84

84:                                               ; preds = %49, %61, %82
  ret %"class.blink::protocol::Audits::SourceCodeLocation"* %6
}

declare i32 @_ZNK5blink14InspectorIssue4CodeEv(%"class.blink::InspectorIssue"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.WTF::String"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.WTF::String"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #15
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %"class.WTF::String"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.WTF::String"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 %9
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 %35
  %39 = ptrtoint %"class.WTF::String"* %38 to i64
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %41 = bitcast %"class.WTF::String"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.WTF::String"* %37 to i64*
  store i64 %42, i64* %43, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %40, align 8
  %44 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %37, i64 1
  %45 = ptrtoint %"class.WTF::String"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.WTF::String"*, %"class.WTF::String"** %46, align 8
  %48 = ptrtoint %"class.WTF::String"* %47 to i64
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %50 = icmp eq %"class.WTF::String"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.WTF::String", %"class.WTF::String"* %49, i64 -1, i32 0, i32 0
  %53 = ptrtoint %"class.WTF::StringImpl"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.WTF::String"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.WTF::String"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 -1
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %61, i64 -1
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 0, i32 0, i32 0
  %66 = bitcast %"class.WTF::String"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.WTF::String"* %63 to i64*
  store i64 %67, i64* %68, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %65, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !4

71:                                               ; preds = %59, %51
  %72 = phi %"class.WTF::String"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.WTF::String"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.WTF::String"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.WTF::String"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.WTF::String"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -1
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -1
  %81 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 0, i32 0, i32 0
  %82 = bitcast %"class.WTF::String"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.WTF::String"* %79 to i64*
  store i64 %83, i64* %84, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %81, align 8
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -2
  %86 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -2
  %87 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %86, i64 0, i32 0, i32 0
  %88 = bitcast %"class.WTF::String"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.WTF::String"* %85 to i64*
  store i64 %89, i64* %90, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %87, align 8
  %91 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -3
  %92 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -3
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %92, i64 0, i32 0, i32 0
  %94 = bitcast %"class.WTF::String"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %"class.WTF::String"* %91 to i64*
  store i64 %95, i64* %96, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %93, align 8
  %97 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -4
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -4
  %99 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %98, i64 0, i32 0, i32 0
  %100 = bitcast %"class.WTF::String"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %"class.WTF::String"* %97 to i64*
  store i64 %101, i64* %102, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %99, align 8
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -5
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -5
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %104, i64 0, i32 0, i32 0
  %106 = bitcast %"class.WTF::String"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.WTF::String"* %103 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %105, align 8
  %109 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -6
  %110 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -6
  %111 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %110, i64 0, i32 0, i32 0
  %112 = bitcast %"class.WTF::String"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.WTF::String"* %109 to i64*
  store i64 %113, i64* %114, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %111, align 8
  %115 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -7
  %116 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -7
  %117 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %116, i64 0, i32 0, i32 0
  %118 = bitcast %"class.WTF::String"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.WTF::String"* %115 to i64*
  store i64 %119, i64* %120, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %117, align 8
  %121 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -8
  %122 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -8
  %123 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %122, i64 0, i32 0, i32 0
  %124 = bitcast %"class.WTF::String"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast %"class.WTF::String"* %121 to i64*
  store i64 %125, i64* %126, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %123, align 8
  %127 = icmp eq %"class.WTF::String"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.WTF::String"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.WTF::String"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.WTF::String"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.WTF::String"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.WTF::String"*
  %138 = icmp eq %"class.WTF::String"* %133, %137
  br i1 %138, label %160, label %139

139:                                              ; preds = %132, %158
  %140 = phi %"class.WTF::String"* [ %141, %158 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %140, i64 -1
  %142 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %141, i64 0, i32 0, i32 0
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %142, align 8
  %144 = icmp eq %"class.WTF::StringImpl"* %143, null
  br i1 %144, label %158, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load atomic i32, i32* %146 monotonic, align 4
  %148 = and i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 0
  %151 = load i32, i32* %150, align 4
  br i1 %149, label %152, label %154

152:                                              ; preds = %145
  %153 = add i32 %151, -1
  store i32 %153, i32* %150, align 4
  br label %154

154:                                              ; preds = %152, %145
  %155 = phi i32 [ %153, %152 ], [ %151, %145 ]
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %154
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %143) #13
  br label %158

158:                                              ; preds = %157, %154, %139
  %159 = icmp eq %"class.WTF::String"* %141, %137
  br i1 %159, label %160, label %139

160:                                              ; preds = %158, %132
  %161 = icmp eq i64 %135, 0
  br i1 %161, label %164, label %162

162:                                              ; preds = %160
  %163 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %163) #12
  br label %164

164:                                              ; preds = %160, %162
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe"*, %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %0, i64 0, i32 1
  %4 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i33
  %14 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %13, i33 1) #13
  %15 = extractvalue { i33, i1 } %14, 1
  %16 = extractvalue { i33, i1 } %14, 0
  %17 = icmp slt i33 %16, 0
  %18 = or i1 %15, %17
  br i1 %18, label %19, label %20, !prof !2

19:                                               ; preds = %10
  tail call void @llvm.trap() #13
  unreachable

20:                                               ; preds = %10
  %21 = trunc i33 %16 to i32
  store i32 %21, i32* %11, align 4
  br label %22

22:                                               ; preds = %20, %5, %2
  %23 = ptrtoint %"class.WTF::StringImpl"* %1 to i64
  %24 = bitcast %"class.WTF::String"* %3 to i64*
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  store i64 %23, i64* %24, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #13
  br label %41

41:                                               ; preds = %22, %37, %40
  %42 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %0, i64 0, i32 0
  store i8 1, i8* %42, align 8
  br i1 %4, label %56, label %43

43:                                               ; preds = %41
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #13
  br label %56

56:                                               ; preds = %41, %52, %55
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { builtin nounwind }
attributes #13 = { nounwind }
attributes #14 = { nounwind readonly }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
