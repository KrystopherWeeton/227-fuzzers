; ModuleID = '../../components/payments/content/secure_payment_confirmation_model.cc'
source_filename = "../../components/payments/content/secure_payment_confirmation_model.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.payments::SecurePaymentConfirmationModel" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %class.SkBitmap*, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i8, i8, i8, i8, %"class.base::WeakPtrFactory" }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.8 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.1, i32, i32 }
%class.sk_sp.1 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.8 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.3" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.9 }
%class.scoped_refptr.9 = type { %"class.base::internal::WeakReference::Flag"* }

@_ZN8payments30SecurePaymentConfirmationModelC1Ev = hidden unnamed_addr alias void (%"class.payments::SecurePaymentConfirmationModel"*), void (%"class.payments::SecurePaymentConfirmationModel"*)* @_ZN8payments30SecurePaymentConfirmationModelC2Ev
@_ZN8payments30SecurePaymentConfirmationModelD1Ev = hidden unnamed_addr alias void (%"class.payments::SecurePaymentConfirmationModel"*), void (%"class.payments::SecurePaymentConfirmationModel"*)* @_ZN8payments30SecurePaymentConfirmationModelD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments30SecurePaymentConfirmationModelC2Ev(%"class.payments::SecurePaymentConfirmationModel"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.payments::SecurePaymentConfirmationModel", %"class.payments::SecurePaymentConfirmationModel"* %0, i64 0, i32 11
  %3 = bitcast %"class.payments::SecurePaymentConfirmationModel"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 225, i1 false)
  %4 = getelementptr inbounds %"class.payments::SecurePaymentConfirmationModel", %"class.payments::SecurePaymentConfirmationModel"* %0, i64 0, i32 15, i32 0
  %5 = ptrtoint %"class.payments::SecurePaymentConfirmationModel"* %0 to i64
  %6 = bitcast i8* %2 to i32*
  store i32 16843009, i32* %6, align 1
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %4, i64 %5) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments30SecurePaymentConfirmationModelD2Ev(%"class.payments::SecurePaymentConfirmationModel"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.payments::SecurePaymentConfirmationModel", %"class.payments::SecurePaymentConfirmationModel"* %0, i64 0, i32 15, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %2) #5
  %3 = getelementptr inbounds %"class.payments::SecurePaymentConfirmationModel", %"class.payments::SecurePaymentConfirmationModel"* %0, i64 0, i32 9
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::basic_string"* %3 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #6
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.payments::SecurePaymentConfirmationModel", %"class.payments::SecurePaymentConfirmationModel"* %0, i64 0, i32 8
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = bitcast %"class.std::__1::basic_string"* %12 to i8**
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #6
  br label %20

20:                                               ; preds = %11, %17
  %21 = getelementptr inbounds %"class.payments::SecurePaymentConfirmationModel", %"class.payments::SecurePaymentConfirmationModel"* %0, i64 0, i32 7
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %22, i64 0, i32 1, i32 1
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = bitcast %"class.std::__1::basic_string"* %21 to i8**
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #6
  br label %29

29:                                               ; preds = %20, %26
  %30 = getelementptr inbounds %"class.payments::SecurePaymentConfirmationModel", %"class.payments::SecurePaymentConfirmationModel"* %0, i64 0, i32 6
  %31 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %31, i64 0, i32 1, i32 1
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %29
  %36 = bitcast %"class.std::__1::basic_string"* %30 to i8**
  %37 = load i8*, i8** %36, align 8
  tail call void @_ZdlPv(i8* %37) #6
  br label %38

38:                                               ; preds = %29, %35
  %39 = getelementptr inbounds %"class.payments::SecurePaymentConfirmationModel", %"class.payments::SecurePaymentConfirmationModel"* %0, i64 0, i32 4
  %40 = bitcast %"class.std::__1::basic_string"* %39 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %40, i64 0, i32 1, i32 1
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %38
  %45 = bitcast %"class.std::__1::basic_string"* %39 to i8**
  %46 = load i8*, i8** %45, align 8
  tail call void @_ZdlPv(i8* %46) #6
  br label %47

47:                                               ; preds = %38, %44
  %48 = getelementptr inbounds %"class.payments::SecurePaymentConfirmationModel", %"class.payments::SecurePaymentConfirmationModel"* %0, i64 0, i32 3
  %49 = bitcast %"class.std::__1::basic_string"* %48 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %49, i64 0, i32 1, i32 1
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %47
  %54 = bitcast %"class.std::__1::basic_string"* %48 to i8**
  %55 = load i8*, i8** %54, align 8
  tail call void @_ZdlPv(i8* %55) #6
  br label %56

56:                                               ; preds = %47, %53
  %57 = getelementptr inbounds %"class.payments::SecurePaymentConfirmationModel", %"class.payments::SecurePaymentConfirmationModel"* %0, i64 0, i32 2
  %58 = bitcast %"class.std::__1::basic_string"* %57 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %58, i64 0, i32 1, i32 1
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %56
  %63 = bitcast %"class.std::__1::basic_string"* %57 to i8**
  %64 = load i8*, i8** %63, align 8
  tail call void @_ZdlPv(i8* %64) #6
  br label %65

65:                                               ; preds = %56, %62
  %66 = getelementptr inbounds %"class.payments::SecurePaymentConfirmationModel", %"class.payments::SecurePaymentConfirmationModel"* %0, i64 0, i32 1
  %67 = bitcast %"class.std::__1::basic_string"* %66 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %67, i64 0, i32 1, i32 1
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %65
  %72 = bitcast %"class.std::__1::basic_string"* %66 to i8**
  %73 = load i8*, i8** %72, align 8
  tail call void @_ZdlPv(i8* %73) #6
  br label %74

74:                                               ; preds = %65, %71
  %75 = bitcast %"class.payments::SecurePaymentConfirmationModel"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %75, i64 0, i32 1, i32 1
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %74
  %80 = bitcast %"class.payments::SecurePaymentConfirmationModel"* %0 to i8**
  %81 = load i8*, i8** %80, align 8
  tail call void @_ZdlPv(i8* %81) #6
  br label %82

82:                                               ; preds = %74, %79
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8payments30SecurePaymentConfirmationModel10GetWeakPtrEv(%"class.base::WeakPtr"* noalias sret, %"class.payments::SecurePaymentConfirmationModel"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #5, !noalias !2
  %5 = getelementptr inbounds %"class.payments::SecurePaymentConfirmationModel", %"class.payments::SecurePaymentConfirmationModel"* %1, i64 0, i32 15, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %5) #5, !noalias !2
  %6 = getelementptr inbounds %"class.payments::SecurePaymentConfirmationModel", %"class.payments::SecurePaymentConfirmationModel"* %1, i64 0, i32 15, i32 0, i32 1
  %7 = load i64, i64* %6, align 8, !noalias !2
  %8 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %0, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* %8, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %7) #5
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #5, !noalias !2
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #1

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4base14WeakPtrFactoryIN8payments30SecurePaymentConfirmationModelEE10GetWeakPtrEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base14WeakPtrFactoryIN8payments30SecurePaymentConfirmationModelEE10GetWeakPtrEv"}
