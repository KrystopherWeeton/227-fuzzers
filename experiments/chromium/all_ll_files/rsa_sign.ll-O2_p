; ModuleID = '../../components/webcrypto/algorithms/rsa_sign.cc'
source_filename = "../../components/webcrypto/algorithms/rsa_sign.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webcrypto::Status" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.blink::WebCryptoKey" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.webcrypto::CryptoData" = type <{ i8*, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.crypto::OpenSSLErrStackTracer" = type { %"class.base::Location" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.bssl::internal::StackAllocated" = type { %struct.env_md_ctx_st }
%struct.env_md_ctx_st = type { %struct.env_md_st*, i8*, %struct.evp_pkey_ctx_st*, %struct.evp_md_pctx_ops* }
%struct.env_md_st = type opaque
%struct.evp_pkey_ctx_st = type opaque
%struct.evp_md_pctx_ops = type opaque
%struct.evp_pkey_st = type { i32, i32, %union.anon.6, %struct.evp_pkey_asn1_method_st* }
%union.anon.6 = type { i8* }
%struct.evp_pkey_asn1_method_st = type opaque
%"class.blink::WebCryptoKeyAlgorithm" = type { %"class.blink::WebPrivatePtr.8" }
%"class.blink::WebPrivatePtr.8" = type { i8* }
%"class.blink::WebCryptoRsaHashedKeyAlgorithmParams" = type { %"class.blink::WebCryptoKeyAlgorithmParams", i32, %"class.blink::WebVector", %"class.blink::WebCryptoAlgorithm" }
%"class.blink::WebCryptoKeyAlgorithmParams" = type { i32 (...)** }
%"class.blink::WebVector" = type { %"class.std::__1::vector" }
%"class.blink::WebCryptoAlgorithm" = type { %"class.blink::WebPrivatePtr.7" }
%"class.blink::WebPrivatePtr.7" = type { i8* }
%struct.engine_st = type opaque
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm = comdat any

@.str = private unnamed_addr constant [8 x i8] c"RsaSign\00", align 1
@.str.1 = private unnamed_addr constant [50 x i8] c"../../components/webcrypto/algorithms/rsa_sign.cc\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"RsaVerify\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9webcrypto7RsaSignERKN5blink12WebCryptoKeyEjRKNS_10CryptoDataEPNSt3__16vectorIhNS7_9allocatorIhEEEE(%"class.webcrypto::Status"* noalias sret, %"class.blink::WebCryptoKey"* dereferenceable(8), i32, %"class.webcrypto::CryptoData"* nocapture readonly dereferenceable(16), %"class.std::__1::vector"*) local_unnamed_addr #0 {
  %6 = alloca %"class.crypto::OpenSSLErrStackTracer", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = alloca %"class.bssl::internal::StackAllocated", align 8
  %9 = alloca %struct.evp_pkey_ctx_st*, align 8
  %10 = alloca %"class.webcrypto::Status", align 8
  %11 = alloca i64, align 8
  %12 = alloca %"class.webcrypto::Status", align 8
  %13 = tail call i32 @_ZNK5blink12WebCryptoKey7GetTypeEv(%"class.blink::WebCryptoKey"* %1) #6
  %14 = icmp eq i32 %13, 2
  br i1 %14, label %16, label %15

15:                                               ; preds = %5
  tail call void @_ZN9webcrypto6Status22ErrorUnexpectedKeyTypeEv(%"class.webcrypto::Status"* sret %0) #6
  br label %133

16:                                               ; preds = %5
  %17 = bitcast %"class.crypto::OpenSSLErrStackTracer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 32, i1 false)
  %18 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #6
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.1, i64 0, i64 0), i32 79) #6
  %19 = getelementptr inbounds %"class.crypto::OpenSSLErrStackTracer", %"class.crypto::OpenSSLErrStackTracer"* %6, i64 0, i32 0
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* nonnull %19, %"class.base::Location"* nonnull dereferenceable(32) %7) #6
  call void @_ZN6crypto17EnsureOpenSSLInitEv() #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #6
  %20 = bitcast %"class.bssl::internal::StackAllocated"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #6
  %21 = getelementptr inbounds %"class.bssl::internal::StackAllocated", %"class.bssl::internal::StackAllocated"* %8, i64 0, i32 0
  %22 = bitcast %"class.bssl::internal::StackAllocated"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 32, i1 false)
  call void @EVP_MD_CTX_init(%struct.env_md_ctx_st* nonnull %21) #6
  %23 = bitcast %struct.evp_pkey_ctx_st** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #6
  store %struct.evp_pkey_ctx_st* null, %struct.evp_pkey_ctx_st** %9, align 8
  %24 = bitcast %"class.webcrypto::Status"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #6
  %25 = bitcast %"class.webcrypto::Status"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 32, i1 false)
  %26 = call %struct.evp_pkey_st* @_ZN9webcrypto11GetEVP_PKEYERKN5blink12WebCryptoKeyE(%"class.blink::WebCryptoKey"* dereferenceable(8) %1) #6, !noalias !2
  %27 = call dereferenceable(8) %"class.blink::WebCryptoKeyAlgorithm"* @_ZNK5blink12WebCryptoKey9AlgorithmEv(%"class.blink::WebCryptoKey"* %1) #6, !noalias !2
  %28 = call %"class.blink::WebCryptoRsaHashedKeyAlgorithmParams"* @_ZNK5blink21WebCryptoKeyAlgorithm15RsaHashedParamsEv(%"class.blink::WebCryptoKeyAlgorithm"* %27) #6, !noalias !2
  %29 = getelementptr inbounds %"class.blink::WebCryptoRsaHashedKeyAlgorithmParams", %"class.blink::WebCryptoRsaHashedKeyAlgorithmParams"* %28, i64 0, i32 3
  %30 = call %struct.env_md_st* @_ZN9webcrypto9GetDigestERKN5blink18WebCryptoAlgorithmE(%"class.blink::WebCryptoAlgorithm"* dereferenceable(8) %29) #6, !noalias !2
  %31 = icmp eq %struct.env_md_st* %30, null
  br i1 %31, label %32, label %33

32:                                               ; preds = %16
  call void @_ZN9webcrypto6Status16ErrorUnsupportedEv(%"class.webcrypto::Status"* nonnull sret %10) #6
  br label %34

33:                                               ; preds = %16
  call void @_ZN9webcrypto6Status7SuccessEv(%"class.webcrypto::Status"* nonnull sret %10) #6
  br label %34

34:                                               ; preds = %32, %33
  %35 = call zeroext i1 @_ZNK9webcrypto6Status7IsErrorEv(%"class.webcrypto::Status"* nonnull %10) #6
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = bitcast %"class.webcrypto::Status"* %10 to i64*
  %38 = bitcast %"class.webcrypto::Status"* %0 to i64*
  %39 = load i64, i64* %37, align 8
  store i64 %39, i64* %38, align 8
  %40 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %0, i64 0, i32 2
  %41 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %10, i64 0, i32 2
  %42 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #6
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false) #6
  br label %131

44:                                               ; preds = %34
  %45 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #6
  store i64 0, i64* %11, align 8
  %46 = call i32 @EVP_DigestSignInit(%struct.env_md_ctx_st* nonnull %21, %struct.evp_pkey_ctx_st** nonnull %9, %struct.env_md_st* %30, %struct.engine_st* null, %struct.evp_pkey_st* %26) #6
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %44
  call void @_ZN9webcrypto6Status14OperationErrorEv(%"class.webcrypto::Status"* sret %0) #6
  br label %122

49:                                               ; preds = %44
  %50 = bitcast %"class.webcrypto::Status"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %50) #6
  %51 = load %struct.evp_pkey_ctx_st*, %struct.evp_pkey_ctx_st** %9, align 8
  call fastcc void @_ZN9webcrypto12_GLOBAL__N_118ApplyRsaPssOptionsERKN5blink12WebCryptoKeyEPK9env_md_stjP15evp_pkey_ctx_st(%"class.webcrypto::Status"* nonnull sret %12, %"class.blink::WebCryptoKey"* dereferenceable(8) %1, %struct.env_md_st* %30, i32 %2, %struct.evp_pkey_ctx_st* %51)
  %52 = bitcast %"class.webcrypto::Status"* %12 to i64*
  %53 = bitcast %"class.webcrypto::Status"* %10 to i64*
  %54 = load i64, i64* %52, align 8
  store i64 %54, i64* %53, align 8
  %55 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %10, i64 0, i32 2
  %56 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %12, i64 0, i32 2
  %57 = bitcast %"class.std::__1::basic_string"* %55 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %49
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  call void @_ZdlPv(i8* %63) #7
  br label %64

64:                                               ; preds = %61, %49
  %65 = bitcast %"class.std::__1::basic_string"* %55 to i8*
  %66 = bitcast %"class.std::__1::basic_string"* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 24, i1 false) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %50) #6
  %67 = call zeroext i1 @_ZNK9webcrypto6Status7IsErrorEv(%"class.webcrypto::Status"* nonnull %10) #6
  br i1 %67, label %68, label %73

68:                                               ; preds = %64
  %69 = bitcast %"class.webcrypto::Status"* %0 to i64*
  %70 = load i64, i64* %53, align 8
  store i64 %70, i64* %69, align 8
  %71 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %0, i64 0, i32 2
  %72 = bitcast %"class.std::__1::basic_string"* %71 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %65, i64 24, i1 false) #6
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 24, i1 false) #6
  br label %122

73:                                               ; preds = %64
  %74 = getelementptr inbounds %"class.webcrypto::CryptoData", %"class.webcrypto::CryptoData"* %3, i64 0, i32 0
  %75 = load i8*, i8** %74, align 8
  %76 = getelementptr inbounds %"class.webcrypto::CryptoData", %"class.webcrypto::CryptoData"* %3, i64 0, i32 1
  %77 = load i32, i32* %76, align 8
  %78 = zext i32 %77 to i64
  %79 = call i32 @EVP_DigestSignUpdate(%struct.env_md_ctx_st* nonnull %21, i8* %75, i64 %78) #6
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %84, label %81

81:                                               ; preds = %73
  %82 = call i32 @EVP_DigestSignFinal(%struct.env_md_ctx_st* nonnull %21, i8* null, i64* nonnull %11) #6
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %81, %73
  call void @_ZN9webcrypto6Status14OperationErrorEv(%"class.webcrypto::Status"* sret %0) #6
  br label %122

85:                                               ; preds = %81
  %86 = load i64, i64* %11, align 8
  %87 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %88 = bitcast i8** %87 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.std::__1::vector"* %4 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = sub i64 %89, %91
  %93 = icmp ugt i64 %86, %92
  %94 = inttoptr i64 %91 to i8*
  br i1 %93, label %95, label %99

95:                                               ; preds = %85
  %96 = sub i64 %86, %92
  call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %4, i64 %96) #6
  %97 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %98 = load i8*, i8** %97, align 8
  br label %103

99:                                               ; preds = %85
  %100 = icmp ult i64 %86, %92
  br i1 %100, label %101, label %103

101:                                              ; preds = %99
  %102 = getelementptr inbounds i8, i8* %94, i64 %86
  store i8* %102, i8** %87, align 8
  br label %103

103:                                              ; preds = %95, %99, %101
  %104 = phi i8* [ %98, %95 ], [ %94, %99 ], [ %94, %101 ]
  %105 = call i32 @EVP_DigestSignFinal(%struct.env_md_ctx_st* nonnull %21, i8* %104, i64* nonnull %11) #6
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %103
  call void @_ZN9webcrypto6Status14OperationErrorEv(%"class.webcrypto::Status"* sret %0) #6
  br label %122

108:                                              ; preds = %103
  %109 = load i64, i64* %11, align 8
  %110 = load i64, i64* %88, align 8
  %111 = load i64, i64* %90, align 8
  %112 = sub i64 %110, %111
  %113 = icmp ugt i64 %109, %112
  %114 = inttoptr i64 %111 to i8*
  br i1 %113, label %115, label %117

115:                                              ; preds = %108
  %116 = sub i64 %109, %112
  call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %4, i64 %116) #6
  br label %121

117:                                              ; preds = %108
  %118 = icmp ult i64 %109, %112
  br i1 %118, label %119, label %121

119:                                              ; preds = %117
  %120 = getelementptr inbounds i8, i8* %114, i64 %109
  store i8* %120, i8** %87, align 8
  br label %121

121:                                              ; preds = %115, %117, %119
  call void @_ZN9webcrypto6Status7SuccessEv(%"class.webcrypto::Status"* sret %0) #6
  br label %122

122:                                              ; preds = %48, %68, %84, %107, %121
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #6
  %123 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %10, i64 0, i32 2
  %124 = bitcast %"class.std::__1::basic_string"* %123 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %125 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %124, i64 0, i32 1, i32 0
  %126 = load i8, i8* %125, align 1
  %127 = icmp slt i8 %126, 0
  br i1 %127, label %128, label %131

128:                                              ; preds = %122
  %129 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load i8*, i8** %129, align 8
  call void @_ZdlPv(i8* %130) #7
  br label %131

131:                                              ; preds = %36, %122, %128
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #6
  %132 = call i32 @EVP_MD_CTX_cleanup(%struct.env_md_ctx_st* nonnull %21) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #6
  call void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* nonnull dereferenceable(32) %19) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #6
  br label %133

133:                                              ; preds = %131, %15
  ret void
}

declare i32 @_ZNK5blink12WebCryptoKey7GetTypeEv(%"class.blink::WebCryptoKey"*) local_unnamed_addr #1

declare void @_ZN9webcrypto6Status22ErrorUnexpectedKeyTypeEv(%"class.webcrypto::Status"* sret) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZNK9webcrypto6Status7IsErrorEv(%"class.webcrypto::Status"*) local_unnamed_addr #1

declare i32 @EVP_DigestSignInit(%struct.env_md_ctx_st*, %struct.evp_pkey_ctx_st**, %struct.env_md_st*, %struct.engine_st*, %struct.evp_pkey_st*) local_unnamed_addr #1

declare void @_ZN9webcrypto6Status14OperationErrorEv(%"class.webcrypto::Status"* sret) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN9webcrypto12_GLOBAL__N_118ApplyRsaPssOptionsERKN5blink12WebCryptoKeyEPK9env_md_stjP15evp_pkey_ctx_st(%"class.webcrypto::Status"* noalias sret, %"class.blink::WebCryptoKey"* dereferenceable(8), %struct.env_md_st*, i32, %struct.evp_pkey_ctx_st*) unnamed_addr #0 {
  %6 = tail call dereferenceable(8) %"class.blink::WebCryptoKeyAlgorithm"* @_ZNK5blink12WebCryptoKey9AlgorithmEv(%"class.blink::WebCryptoKey"* %1) #6
  %7 = tail call i32 @_ZNK5blink21WebCryptoKeyAlgorithm2IdEv(%"class.blink::WebCryptoKeyAlgorithm"* %6) #6
  %8 = icmp eq i32 %7, 11
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void @_ZN9webcrypto6Status7SuccessEv(%"class.webcrypto::Status"* sret %0) #6
  br label %24

10:                                               ; preds = %5
  %11 = icmp sgt i32 %3, -1
  br i1 %11, label %13, label %12

12:                                               ; preds = %10
  tail call void @_ZN9webcrypto6Status14OperationErrorEv(%"class.webcrypto::Status"* sret %0) #6
  br label %24

13:                                               ; preds = %10
  %14 = tail call i32 @EVP_PKEY_CTX_set_rsa_padding(%struct.evp_pkey_ctx_st* %4, i32 6) #6
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %22

16:                                               ; preds = %13
  %17 = tail call i32 @EVP_PKEY_CTX_set_rsa_mgf1_md(%struct.evp_pkey_ctx_st* %4, %struct.env_md_st* %2) #6
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %22

19:                                               ; preds = %16
  %20 = tail call i32 @EVP_PKEY_CTX_set_rsa_pss_saltlen(%struct.evp_pkey_ctx_st* %4, i32 %3) #6
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %23, label %22

22:                                               ; preds = %13, %16, %19
  tail call void @_ZN9webcrypto6Status14OperationErrorEv(%"class.webcrypto::Status"* sret %0) #6
  br label %24

23:                                               ; preds = %19
  tail call void @_ZN9webcrypto6Status7SuccessEv(%"class.webcrypto::Status"* sret %0) #6
  br label %24

24:                                               ; preds = %12, %22, %23, %9
  ret void
}

declare i32 @EVP_DigestSignUpdate(%struct.env_md_ctx_st*, i8*, i64) local_unnamed_addr #1

declare i32 @EVP_DigestSignFinal(%struct.env_md_ctx_st*, i8*, i64*) local_unnamed_addr #1

declare void @_ZN9webcrypto6Status7SuccessEv(%"class.webcrypto::Status"* sret) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9webcrypto9RsaVerifyERKN5blink12WebCryptoKeyEjRKNS_10CryptoDataES6_Pb(%"class.webcrypto::Status"* noalias sret, %"class.blink::WebCryptoKey"* dereferenceable(8), i32, %"class.webcrypto::CryptoData"* nocapture readonly dereferenceable(16), %"class.webcrypto::CryptoData"* nocapture readonly dereferenceable(16), i8* nocapture) local_unnamed_addr #0 {
  %7 = alloca %"class.crypto::OpenSSLErrStackTracer", align 8
  %8 = alloca %"class.base::Location", align 8
  %9 = alloca %"class.bssl::internal::StackAllocated", align 8
  %10 = alloca %struct.evp_pkey_ctx_st*, align 8
  %11 = alloca %"class.webcrypto::Status", align 8
  %12 = alloca %"class.webcrypto::Status", align 8
  %13 = tail call i32 @_ZNK5blink12WebCryptoKey7GetTypeEv(%"class.blink::WebCryptoKey"* %1) #6
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %16, label %15

15:                                               ; preds = %6
  tail call void @_ZN9webcrypto6Status22ErrorUnexpectedKeyTypeEv(%"class.webcrypto::Status"* sret %0) #6
  br label %101

16:                                               ; preds = %6
  %17 = bitcast %"class.crypto::OpenSSLErrStackTracer"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 32, i1 false)
  %18 = bitcast %"class.base::Location"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #6
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.1, i64 0, i64 0), i32 123) #6
  %19 = getelementptr inbounds %"class.crypto::OpenSSLErrStackTracer", %"class.crypto::OpenSSLErrStackTracer"* %7, i64 0, i32 0
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* nonnull %19, %"class.base::Location"* nonnull dereferenceable(32) %8) #6
  call void @_ZN6crypto17EnsureOpenSSLInitEv() #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #6
  %20 = bitcast %"class.bssl::internal::StackAllocated"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #6
  %21 = getelementptr inbounds %"class.bssl::internal::StackAllocated", %"class.bssl::internal::StackAllocated"* %9, i64 0, i32 0
  %22 = bitcast %"class.bssl::internal::StackAllocated"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 32, i1 false)
  call void @EVP_MD_CTX_init(%struct.env_md_ctx_st* nonnull %21) #6
  %23 = bitcast %struct.evp_pkey_ctx_st** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #6
  store %struct.evp_pkey_ctx_st* null, %struct.evp_pkey_ctx_st** %10, align 8
  %24 = bitcast %"class.webcrypto::Status"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #6
  %25 = bitcast %"class.webcrypto::Status"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 32, i1 false)
  %26 = call %struct.evp_pkey_st* @_ZN9webcrypto11GetEVP_PKEYERKN5blink12WebCryptoKeyE(%"class.blink::WebCryptoKey"* dereferenceable(8) %1) #6, !noalias !5
  %27 = call dereferenceable(8) %"class.blink::WebCryptoKeyAlgorithm"* @_ZNK5blink12WebCryptoKey9AlgorithmEv(%"class.blink::WebCryptoKey"* %1) #6, !noalias !5
  %28 = call %"class.blink::WebCryptoRsaHashedKeyAlgorithmParams"* @_ZNK5blink21WebCryptoKeyAlgorithm15RsaHashedParamsEv(%"class.blink::WebCryptoKeyAlgorithm"* %27) #6, !noalias !5
  %29 = getelementptr inbounds %"class.blink::WebCryptoRsaHashedKeyAlgorithmParams", %"class.blink::WebCryptoRsaHashedKeyAlgorithmParams"* %28, i64 0, i32 3
  %30 = call %struct.env_md_st* @_ZN9webcrypto9GetDigestERKN5blink18WebCryptoAlgorithmE(%"class.blink::WebCryptoAlgorithm"* dereferenceable(8) %29) #6, !noalias !5
  %31 = icmp eq %struct.env_md_st* %30, null
  br i1 %31, label %32, label %33

32:                                               ; preds = %16
  call void @_ZN9webcrypto6Status16ErrorUnsupportedEv(%"class.webcrypto::Status"* nonnull sret %11) #6
  br label %34

33:                                               ; preds = %16
  call void @_ZN9webcrypto6Status7SuccessEv(%"class.webcrypto::Status"* nonnull sret %11) #6
  br label %34

34:                                               ; preds = %32, %33
  %35 = call zeroext i1 @_ZNK9webcrypto6Status7IsErrorEv(%"class.webcrypto::Status"* nonnull %11) #6
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = bitcast %"class.webcrypto::Status"* %11 to i64*
  %38 = bitcast %"class.webcrypto::Status"* %0 to i64*
  %39 = load i64, i64* %37, align 8
  store i64 %39, i64* %38, align 8
  %40 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %0, i64 0, i32 2
  %41 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %11, i64 0, i32 2
  %42 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #6
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false) #6
  br label %90

44:                                               ; preds = %34
  %45 = call i32 @EVP_DigestVerifyInit(%struct.env_md_ctx_st* nonnull %21, %struct.evp_pkey_ctx_st** nonnull %10, %struct.env_md_st* %30, %struct.engine_st* null, %struct.evp_pkey_st* %26) #6
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  call void @_ZN9webcrypto6Status14OperationErrorEv(%"class.webcrypto::Status"* sret %0) #6
  br label %90

48:                                               ; preds = %44
  %49 = bitcast %"class.webcrypto::Status"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %49) #6
  %50 = load %struct.evp_pkey_ctx_st*, %struct.evp_pkey_ctx_st** %10, align 8
  call fastcc void @_ZN9webcrypto12_GLOBAL__N_118ApplyRsaPssOptionsERKN5blink12WebCryptoKeyEPK9env_md_stjP15evp_pkey_ctx_st(%"class.webcrypto::Status"* nonnull sret %12, %"class.blink::WebCryptoKey"* dereferenceable(8) %1, %struct.env_md_st* %30, i32 %2, %struct.evp_pkey_ctx_st* %50)
  %51 = bitcast %"class.webcrypto::Status"* %12 to i64*
  %52 = bitcast %"class.webcrypto::Status"* %11 to i64*
  %53 = load i64, i64* %51, align 8
  store i64 %53, i64* %52, align 8
  %54 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %11, i64 0, i32 2
  %55 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %12, i64 0, i32 2
  %56 = bitcast %"class.std::__1::basic_string"* %54 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %48
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  call void @_ZdlPv(i8* %62) #7
  br label %63

63:                                               ; preds = %60, %48
  %64 = bitcast %"class.std::__1::basic_string"* %54 to i8*
  %65 = bitcast %"class.std::__1::basic_string"* %55 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 24, i1 false) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %49) #6
  %66 = call zeroext i1 @_ZNK9webcrypto6Status7IsErrorEv(%"class.webcrypto::Status"* nonnull %11) #6
  br i1 %66, label %67, label %72

67:                                               ; preds = %63
  %68 = bitcast %"class.webcrypto::Status"* %0 to i64*
  %69 = load i64, i64* %52, align 8
  store i64 %69, i64* %68, align 8
  %70 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %0, i64 0, i32 2
  %71 = bitcast %"class.std::__1::basic_string"* %70 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %64, i64 24, i1 false) #6
  call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #6
  br label %90

72:                                               ; preds = %63
  %73 = getelementptr inbounds %"class.webcrypto::CryptoData", %"class.webcrypto::CryptoData"* %4, i64 0, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = getelementptr inbounds %"class.webcrypto::CryptoData", %"class.webcrypto::CryptoData"* %4, i64 0, i32 1
  %76 = load i32, i32* %75, align 8
  %77 = zext i32 %76 to i64
  %78 = call i32 @EVP_DigestVerifyUpdate(%struct.env_md_ctx_st* nonnull %21, i8* %74, i64 %77) #6
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %72
  call void @_ZN9webcrypto6Status14OperationErrorEv(%"class.webcrypto::Status"* sret %0) #6
  br label %90

81:                                               ; preds = %72
  %82 = getelementptr inbounds %"class.webcrypto::CryptoData", %"class.webcrypto::CryptoData"* %3, i64 0, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = getelementptr inbounds %"class.webcrypto::CryptoData", %"class.webcrypto::CryptoData"* %3, i64 0, i32 1
  %85 = load i32, i32* %84, align 8
  %86 = zext i32 %85 to i64
  %87 = call i32 @EVP_DigestVerifyFinal(%struct.env_md_ctx_st* nonnull %21, i8* %83, i64 %86) #6
  %88 = icmp eq i32 %87, 1
  %89 = zext i1 %88 to i8
  store i8 %89, i8* %5, align 1
  call void @_ZN9webcrypto6Status7SuccessEv(%"class.webcrypto::Status"* sret %0) #6
  br label %90

90:                                               ; preds = %81, %80, %67, %47, %36
  %91 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %11, i64 0, i32 2
  %92 = bitcast %"class.std::__1::basic_string"* %91 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i8*, i8** %97, align 8
  call void @_ZdlPv(i8* %98) #7
  br label %99

99:                                               ; preds = %90, %96
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #6
  %100 = call i32 @EVP_MD_CTX_cleanup(%struct.env_md_ctx_st* nonnull %21) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #6
  call void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* nonnull dereferenceable(32) %19) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #6
  br label %101

101:                                              ; preds = %99, %15
  ret void
}

declare i32 @EVP_DigestVerifyInit(%struct.env_md_ctx_st*, %struct.evp_pkey_ctx_st**, %struct.env_md_st*, %struct.engine_st*, %struct.evp_pkey_st*) local_unnamed_addr #1

declare i32 @EVP_DigestVerifyUpdate(%struct.env_md_ctx_st*, i8*, i64) local_unnamed_addr #1

declare i32 @EVP_DigestVerifyFinal(%struct.env_md_ctx_st*, i8*, i64) local_unnamed_addr #1

declare void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"*, %"class.base::Location"* dereferenceable(32)) unnamed_addr #1

declare void @_ZN6crypto17EnsureOpenSSLInitEv() local_unnamed_addr #1

declare %struct.evp_pkey_st* @_ZN9webcrypto11GetEVP_PKEYERKN5blink12WebCryptoKeyE(%"class.blink::WebCryptoKey"* dereferenceable(8)) local_unnamed_addr #1

declare %struct.env_md_st* @_ZN9webcrypto9GetDigestERKN5blink18WebCryptoAlgorithmE(%"class.blink::WebCryptoAlgorithm"* dereferenceable(8)) local_unnamed_addr #1

declare dereferenceable(8) %"class.blink::WebCryptoKeyAlgorithm"* @_ZNK5blink12WebCryptoKey9AlgorithmEv(%"class.blink::WebCryptoKey"*) local_unnamed_addr #1

declare %"class.blink::WebCryptoRsaHashedKeyAlgorithmParams"* @_ZNK5blink21WebCryptoKeyAlgorithm15RsaHashedParamsEv(%"class.blink::WebCryptoKeyAlgorithm"*) local_unnamed_addr #1

declare void @_ZN9webcrypto6Status16ErrorUnsupportedEv(%"class.webcrypto::Status"* sret) local_unnamed_addr #1

declare i32 @_ZNK5blink21WebCryptoKeyAlgorithm2IdEv(%"class.blink::WebCryptoKeyAlgorithm"*) local_unnamed_addr #1

declare i32 @EVP_PKEY_CTX_set_rsa_padding(%struct.evp_pkey_ctx_st*, i32) local_unnamed_addr #1

declare i32 @EVP_PKEY_CTX_set_rsa_mgf1_md(%struct.evp_pkey_ctx_st*, %struct.env_md_st*) local_unnamed_addr #1

declare i32 @EVP_PKEY_CTX_set_rsa_pss_saltlen(%struct.evp_pkey_ctx_st*, i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

declare void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* dereferenceable(32)) local_unnamed_addr #1

declare void @EVP_MD_CTX_init(%struct.env_md_ctx_st*) local_unnamed_addr #1

declare i32 @EVP_MD_CTX_cleanup(%struct.env_md_ctx_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = icmp ult i64 %9, %1
  br i1 %10, label %22, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %8 to i8*
  %13 = icmp eq i64 %1, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds i8, i8* %12, i64 %1
  %16 = sub i64 %1, %8
  %17 = getelementptr i8, i8* %12, i64 %16
  %18 = ptrtoint i8* %17 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %12, i8 0, i64 %18, i1 false) #6
  %19 = ptrtoint i8* %15 to i64
  br label %20

20:                                               ; preds = %11, %14
  %21 = phi i64 [ %19, %14 ], [ %8, %11 ]
  store i64 %21, i64* %7, align 8
  br label %68

22:                                               ; preds = %2
  %23 = bitcast %"class.std::__1::vector"* %0 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %8, %24
  %26 = add i64 %25, %1
  %27 = icmp slt i64 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #8
  unreachable

30:                                               ; preds = %22
  %31 = sub i64 %5, %24
  %32 = icmp ult i64 %31, 4611686018427387903
  br i1 %32, label %33, label %38

33:                                               ; preds = %30
  %34 = shl i64 %31, 1
  %35 = icmp ult i64 %34, %26
  %36 = select i1 %35, i64 %26, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %30, %33
  %39 = phi i64 [ %36, %33 ], [ 9223372036854775807, %30 ]
  %40 = tail call i8* @_Znwm(i64 %39) #7
  br label %41

41:                                               ; preds = %38, %33
  %42 = phi i64 [ %39, %38 ], [ 0, %33 ]
  %43 = phi i8* [ %40, %38 ], [ null, %33 ]
  %44 = getelementptr inbounds i8, i8* %43, i64 %25
  %45 = ptrtoint i8* %44 to i64
  %46 = getelementptr inbounds i8, i8* %43, i64 %42
  %47 = getelementptr inbounds i8, i8* %44, i64 %1
  %48 = sub i64 %1, %45
  %49 = getelementptr i8, i8* %44, i64 %48
  %50 = ptrtoint i8* %49 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %44, i8 0, i64 %50, i1 false) #6
  %51 = ptrtoint i8* %46 to i64
  %52 = ptrtoint i8* %47 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = load i64, i64* %7, align 8
  %56 = ptrtoint i8* %54 to i64
  %57 = sub i64 %55, %56
  %58 = sub i64 0, %57
  %59 = getelementptr inbounds i8, i8* %44, i64 %58
  %60 = ptrtoint i8* %59 to i64
  %61 = icmp sgt i64 %57, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %41
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* align 1 %54, i64 %57, i1 false) #6
  %63 = load i8*, i8** %53, align 8
  br label %64

64:                                               ; preds = %41, %62
  %65 = phi i8* [ %54, %41 ], [ %63, %62 ]
  store i64 %60, i64* %23, align 8
  store i64 %52, i64* %7, align 8
  store i64 %51, i64* %4, align 8
  %66 = icmp eq i8* %65, null
  br i1 %66, label %68, label %67

67:                                               ; preds = %64
  tail call void @_ZdlPv(i8* nonnull %65) #7
  br label %68

68:                                               ; preds = %67, %64, %20
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN9webcrypto12_GLOBAL__N_116GetPKeyAndDigestERKN5blink12WebCryptoKeyEPP11evp_pkey_stPPK9env_md_st: argument 0"}
!4 = distinct !{!4, !"_ZN9webcrypto12_GLOBAL__N_116GetPKeyAndDigestERKN5blink12WebCryptoKeyEPP11evp_pkey_stPPK9env_md_st"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN9webcrypto12_GLOBAL__N_116GetPKeyAndDigestERKN5blink12WebCryptoKeyEPP11evp_pkey_stPPK9env_md_st: argument 0"}
!7 = distinct !{!7, !"_ZN9webcrypto12_GLOBAL__N_116GetPKeyAndDigestERKN5blink12WebCryptoKeyEPP11evp_pkey_stPPK9env_md_st"}
