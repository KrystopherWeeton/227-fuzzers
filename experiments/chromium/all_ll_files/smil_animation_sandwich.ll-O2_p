; ModuleID = '../../third_party/blink/renderer/core/svg/animation/smil_animation_sandwich.cc'
source_filename = "../../third_party/blink/renderer/core/svg/animation/smil_animation_sandwich.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.316" }
%"struct.std::__1::atomic.316" = type { %"struct.std::__1::__atomic_base.317" }
%"struct.std::__1::__atomic_base.317" = type { %"struct.std::__1::__atomic_base.318" }
%"struct.std::__1::__atomic_base.318" = type { %"struct.std::__1::__cxx_atomic_impl.319" }
%"struct.std::__1::__cxx_atomic_impl.319" = type { %"struct.std::__1::__cxx_atomic_base_impl.320" }
%"struct.std::__1::__cxx_atomic_base_impl.320" = type { i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.262", %"class.std::__1::unique_ptr.262", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.272", %"class.std::__1::unique_ptr.278", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.290", %"class.std::__1::unique_ptr.296", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.303", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.141", %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.153", %"class.std::__1::unique_ptr.159", %"class.std::__1::unique_ptr.170", %"class.std::__1::unique_ptr.177", %"class.std::__1::unique_ptr.177", %"class.std::__1::unique_ptr.184", %"class.std::__1::unique_ptr.191", %"class.std::__1::unique_ptr.198", %"class.std::__1::unique_ptr.198", %"class.std::__1::unique_ptr.205", %"class.std::__1::unique_ptr.212", %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.242", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.162" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.162" = type { %"struct.std::__1::__atomic_base.163" }
%"struct.std::__1::__atomic_base.163" = type { %"struct.std::__1::__atomic_base.164" }
%"struct.std::__1::__atomic_base.164" = type { %"struct.std::__1::__cxx_atomic_impl.165" }
%"struct.std::__1::__cxx_atomic_impl.165" = type { %"struct.std::__1::__cxx_atomic_base_impl.166" }
%"struct.std::__1::__cxx_atomic_base_impl.166" = type { i64 }
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::Worklist.173"* }
%"class.blink::Worklist.173" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.162" }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::Worklist.180"* }
%"class.blink::Worklist.180" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.162" }
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.blink::Worklist.187"* }
%"class.blink::Worklist.187" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.162" }
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.blink::Worklist.194"* }
%"class.blink::Worklist.194" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.162" }
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.blink::Worklist.201"* }
%"class.blink::Worklist.201" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.162" }
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.blink::Worklist.208"* }
%"class.blink::Worklist.208" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.162" }
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.blink::Worklist.215"* }
%"class.blink::Worklist.215" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.162" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.222", %"class.std::__1::__compressed_pair.229", %"class.std::__1::__compressed_pair.234", %"class.std::__1::__compressed_pair.236", [4 x i8] }>
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224", %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { i64 }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { float }
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.245", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.254" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.262" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.270" }
%"class.WTF::VectorBuffer.270" = type { %"class.WTF::VectorBufferBase.271" }
%"class.WTF::VectorBufferBase.271" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.272" = type { %"class.std::__1::__compressed_pair.273" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.284" }
%"class.std::__1::unique_ptr.284" = type { %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.173"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.180"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.187"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.194"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.201"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.307" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.290" = type { %"class.std::__1::__compressed_pair.291" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.296" = type { %"class.std::__1::__compressed_pair.297" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.302 }
%class.scoped_refptr.302 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.303" = type { %"struct.std::__1::__atomic_base.304" }
%"struct.std::__1::__atomic_base.304" = type { %"struct.std::__1::__cxx_atomic_impl.305" }
%"struct.std::__1::__cxx_atomic_impl.305" = type { %"struct.std::__1::__cxx_atomic_base_impl.306" }
%"struct.std::__1::__cxx_atomic_base_impl.306" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::SMILAnimationSandwich" = type { %"class.blink::HeapVector", %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::SVGAnimationElement"* }
%"class.blink::SVGAnimationElement" = type { %"class.blink::SVGSMILElement.base", i8, i8, i8, %"class.WTF::Vector.68", %"class.WTF::Vector.73", %"class.WTF::Vector.73", %"class.WTF::Vector.73", %"class.WTF::Vector.78", %"class.WTF::String", %"class.WTF::String", i32, i32 }
%"class.blink::SVGSMILElement.base" = type <{ %"class.blink::SVGElement", %"class.blink::SVGTests", %"class.blink::Member.41", %"class.blink::Member.43", %"class.blink::HeapVector.45", i8, i8, i8, i8, [4 x i8], %"class.blink::HeapHashSet.53", %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList", %"struct.blink::SMILInterval", %"struct.blink::SMILInterval", i8, [3 x i8], %"struct.blink::SVGSMILElement::ProgressState", [4 x i8], %"class.blink::Member.66", i32, i32, %"class.blink::SMILTime", %"class.blink::SMILTime", %"class.blink::SMILRepeatCount", %"class.blink::SMILTime", %"class.blink::SMILTime", i8, i8, i8 }>
%"class.blink::SVGElement" = type { %"class.blink::Element", %"class.blink::HeapHashSet", %"class.blink::HeapHashMap", %"class.blink::Member.35", %"class.blink::Member.37" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.14" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.4", %"class.blink::Member.4" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.4", %"class.blink::Member.6", %"class.blink::Member.4", %"class.blink::Member.4", %"class.blink::Member.8" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.84", %"class.blink::Member.86", %"class.blink::Member.6", %"class.blink::Member.88", %"class.blink::Member.88", %"class.blink::Member.112", %"class.blink::Member.114", %"class.blink::Member.116", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.121", %"class.blink::HeapVector.123" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.84" = type { %"class.blink::MemberBase.85" }
%"class.blink::MemberBase.85" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.86" = type { %"class.blink::MemberBase.87" }
%"class.blink::MemberBase.87" = type { %"class.blink::Document"* }
%"class.blink::Document" = type opaque
%"class.blink::Member.88" = type { %"class.blink::MemberBase.89" }
%"class.blink::MemberBase.89" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.92" }
%"class.blink::HeapHashMap.92" = type { %"class.WTF::HashMap.95" }
%"class.WTF::HashMap.95" = type { %"class.WTF::HashTable.96" }
%"class.WTF::HashTable.96" = type <{ %"struct.WTF::KeyValuePair.98"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.98" = type { %"class.WTF::AtomicString", %"class.blink::Member.99" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member.99" = type { %"class.blink::MemberBase.100" }
%"class.blink::MemberBase.100" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.103", i32, %"class.blink::HeapVector.105" }
%"class.blink::Member.103" = type { %"class.blink::MemberBase.104" }
%"class.blink::MemberBase.104" = type { %"class.blink::Element"* }
%"class.blink::HeapVector.105" = type { %"class.WTF::Vector.108" }
%"class.WTF::Vector.108" = type { %"class.WTF::VectorBuffer.109" }
%"class.WTF::VectorBuffer.109" = type { %"class.WTF::VectorBufferBase.110" }
%"class.WTF::VectorBufferBase.110" = type { %"class.blink::Member.103"*, i32, i32 }
%"class.blink::Member.112" = type { %"class.blink::MemberBase.113" }
%"class.blink::MemberBase.113" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.114" = type { %"class.blink::MemberBase.115" }
%"class.blink::MemberBase.115" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.116" = type { %"class.blink::MemberBase.117" }
%"class.blink::MemberBase.117" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.118" }
%"class.blink::Member.118" = type { %"class.blink::MemberBase.119" }
%"class.blink::MemberBase.119" = type { %"class.blink::HeapHashMap.120"* }
%"class.blink::HeapHashMap.120" = type opaque
%"class.blink::Member.121" = type { %"class.blink::MemberBase.122" }
%"class.blink::MemberBase.122" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.123" = type { %"class.WTF::Vector.126" }
%"class.WTF::Vector.126" = type { %"class.WTF::VectorBuffer.127" }
%"class.WTF::VectorBuffer.127" = type { %"class.WTF::VectorBufferBase.128" }
%"class.WTF::VectorBufferBase.128" = type { %"class.blink::Member.129"*, i32, i32 }
%"class.blink::Member.129" = type opaque
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.4" = type { %"class.blink::MemberBase.5" }
%"class.blink::MemberBase.5" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.18", %"class.blink::Member.20", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.18" = type { %"class.WTF::SingleThreadedBitField.19" }
%"class.WTF::SingleThreadedBitField.19" = type { i32 }
%"class.blink::Member.20" = type { %"class.blink::MemberBase.21" }
%"class.blink::MemberBase.21" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.22 }
%class.scoped_refptr.22 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.23", %"class.WTF::AtomicString", %"class.WTF::Vector.25" }
%"class.WTF::RefCounted.23" = type { %"class.base::RefCounted.24" }
%"class.base::RefCounted.24" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.25" = type { %"class.WTF::VectorBuffer.26" }
%"class.WTF::VectorBuffer.26" = type { %"class.WTF::VectorBufferBase.27", [32 x i8] }
%"class.WTF::VectorBufferBase.27" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.33" }
%"class.WTF::HashTable.33" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::Member.35" = type { %"class.blink::MemberBase.36" }
%"class.blink::MemberBase.36" = type { %"class.blink::SVGElementRareData"* }
%"class.blink::SVGElementRareData" = type opaque
%"class.blink::Member.37" = type { %"class.blink::MemberBase.38" }
%"class.blink::MemberBase.38" = type { %"class.blink::SVGAnimatedString"* }
%"class.blink::SVGAnimatedString" = type opaque
%"class.blink::SVGTests" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.39", %"class.blink::Member.39" }
%"class.blink::Member.39" = type { %"class.blink::MemberBase.40" }
%"class.blink::MemberBase.40" = type { %"class.blink::SVGStaticStringList"* }
%"class.blink::SVGStaticStringList" = type opaque
%"class.blink::Member.41" = type { %"class.blink::MemberBase.42" }
%"class.blink::MemberBase.42" = type { %"class.blink::SVGElement"* }
%"class.blink::Member.43" = type { %"class.blink::MemberBase.44" }
%"class.blink::MemberBase.44" = type { %"class.blink::IdTargetObserver"* }
%"class.blink::IdTargetObserver" = type opaque
%"class.blink::HeapVector.45" = type { %"class.WTF::Vector.48" }
%"class.WTF::Vector.48" = type { %"class.WTF::VectorBuffer.49" }
%"class.WTF::VectorBuffer.49" = type { %"class.WTF::VectorBufferBase.50" }
%"class.WTF::VectorBufferBase.50" = type { %"class.blink::Member.51"*, i32, i32 }
%"class.blink::Member.51" = type opaque
%"class.blink::HeapHashSet.53" = type { %"class.WTF::HashSet.56" }
%"class.WTF::HashSet.56" = type { %"class.WTF::HashTable.57" }
%"class.WTF::HashTable.57" = type <{ %"class.blink::Member.59"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.59" = type { %"class.blink::MemberBase.60" }
%"class.blink::MemberBase.60" = type { %"class.blink::SVGSMILElement"* }
%"class.blink::SVGSMILElement" = type <{ %"class.blink::SVGElement", %"class.blink::SVGTests", %"class.blink::Member.41", %"class.blink::Member.43", %"class.blink::HeapVector.45", i8, i8, i8, i8, [4 x i8], %"class.blink::HeapHashSet.53", %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList", %"struct.blink::SMILInterval", %"struct.blink::SMILInterval", i8, [3 x i8], %"struct.blink::SVGSMILElement::ProgressState", [4 x i8], %"class.blink::Member.66", i32, i32, %"class.blink::SMILTime", %"class.blink::SMILTime", %"class.blink::SMILRepeatCount", %"class.blink::SMILTime", %"class.blink::SMILTime", i8, i8, i8, [5 x i8] }>
%"class.blink::SMILInstanceTimeList" = type <{ %"class.WTF::Vector.61", i32, [4 x i8] }>
%"class.WTF::Vector.61" = type { %"class.WTF::VectorBuffer.62" }
%"class.WTF::VectorBuffer.62" = type { %"class.WTF::VectorBufferBase.63" }
%"class.WTF::VectorBufferBase.63" = type { %"class.blink::SMILTimeWithOrigin"*, i32, i32 }
%"class.blink::SMILTimeWithOrigin" = type <{ %"class.blink::SMILTime", i32, [4 x i8] }>
%"struct.blink::SMILInterval" = type { %"class.blink::SMILTime", %"class.blink::SMILTime" }
%"struct.blink::SVGSMILElement::ProgressState" = type { float, i32 }
%"class.blink::Member.66" = type { %"class.blink::MemberBase.67" }
%"class.blink::MemberBase.67" = type { %"class.blink::SMILTimeContainer"* }
%"class.blink::SMILTimeContainer" = type opaque
%"class.blink::SMILRepeatCount" = type { double }
%"class.blink::SMILTime" = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.WTF::Vector.68" = type { %"class.WTF::VectorBuffer.69" }
%"class.WTF::VectorBuffer.69" = type { %"class.WTF::VectorBufferBase.70" }
%"class.WTF::VectorBufferBase.70" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.73" = type { %"class.WTF::VectorBuffer.74" }
%"class.WTF::VectorBuffer.74" = type { %"class.WTF::VectorBufferBase.75" }
%"class.WTF::VectorBufferBase.75" = type { float*, i32, i32 }
%"class.WTF::Vector.78" = type { %"class.WTF::VectorBuffer.79" }
%"class.WTF::VectorBuffer.79" = type { %"class.WTF::VectorBufferBase.80" }
%"class.WTF::VectorBufferBase.80" = type { %"class.gfx::CubicBezier"*, i32, i32 }
%"class.gfx::CubicBezier" = type { double, double, double, double, double, double, double, double, double, double, [11 x double] }
%"class.WTF::String" = type { %class.scoped_refptr.12 }
%class.scoped_refptr.12 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.blink::(anonymous namespace)::PriorityCompare" = type { %"class.blink::SMILTime" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::HeapVectorBacking" = type { i8 }
%"struct.blink::SMILAnimationValue" = type { %"class.blink::SVGPropertyBase"*, %"class.blink::AffineTransform" }
%"class.blink::SVGPropertyBase" = type opaque
%"class.blink::AffineTransform" = type { [6 x double] }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN3WTF6VectorIN5blink6MemberINS1_19SVGAnimationElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_19SVGAnimationElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_19SVGAnimationElementEEELj0ENS1_13HeapAllocatorEE7EraseAtEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_19SVGAnimationElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_19SVGAnimationElementEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_19SVGAnimationElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_19SVGAnimationElementEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_19SVGAnimationElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_19SVGAnimationElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_19SVGAnimationElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_19SVGAnimationElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_19SVGAnimationElementEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_19SVGAnimationElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_19SVGAnimationElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str = private unnamed_addr constant [18 x i8] c"position < size()\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.2 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.3 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.4 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.5 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.6 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZN5blink11ThreadState26main_thread_state_storage_E = external local_unnamed_addr global [0 x i8], align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.8 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_19SVGAnimationElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_19SVGAnimationElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_19SVGAnimationElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_19SVGAnimationElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.9 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.10 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1

@_ZN5blink21SMILAnimationSandwichC1Ev = hidden unnamed_addr alias void (%"class.blink::SMILAnimationSandwich"*), void (%"class.blink::SMILAnimationSandwich"*)* @_ZN5blink21SMILAnimationSandwichC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21SMILAnimationSandwichC2Ev(%"class.blink::SMILAnimationSandwich"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::SMILAnimationSandwich"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 32, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21SMILAnimationSandwich3AddEPNS_19SVGAnimationElementE(%"class.blink::SMILAnimationSandwich"*, %"class.blink::SVGAnimationElement"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::SVGAnimationElement"*, align 8
  store %"class.blink::SVGAnimationElement"* %1, %"class.blink::SVGAnimationElement"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::SMILAnimationSandwich", %"class.blink::SMILAnimationSandwich"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.blink::SMILAnimationSandwich", %"class.blink::SMILAnimationSandwich"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %24, label %9, !prof !2

9:                                                ; preds = %2
  %10 = ptrtoint %"class.blink::SVGAnimationElement"* %1 to i64
  %11 = getelementptr inbounds %"class.blink::SMILAnimationSandwich", %"class.blink::SMILAnimationSandwich"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::Member"*, %"class.blink::Member"** %11, align 8
  %13 = zext i32 %5 to i64
  %14 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %12, i64 %13
  %15 = bitcast %"class.blink::Member"* %14 to i64*
  store atomic i64 %10, i64* %15 monotonic, align 8
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %9
  %19 = bitcast %"class.blink::SVGAnimationElement"* %1 to i8*
  %20 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %19) #6
  br label %21

21:                                               ; preds = %18, %9
  %22 = load i32, i32* %4, align 4
  %23 = add i32 %22, 1
  store i32 %23, i32* %4, align 4
  br label %26

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.blink::SMILAnimationSandwich", %"class.blink::SMILAnimationSandwich"* %0, i64 0, i32 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_19SVGAnimationElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector"* %25, %"class.blink::SVGAnimationElement"** nonnull dereferenceable(8) %3) #6
  br label %26

26:                                               ; preds = %21, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21SMILAnimationSandwich6RemoveEPNS_19SVGAnimationElementE(%"class.blink::SMILAnimationSandwich"*, %"class.blink::SVGAnimationElement"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SMILAnimationSandwich", %"class.blink::SMILAnimationSandwich"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::SMILAnimationSandwich", %"class.blink::SMILAnimationSandwich"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::Member"*, %"class.blink::Member"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::SMILAnimationSandwich", %"class.blink::SMILAnimationSandwich"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %5, i64 %8
  %10 = icmp eq i32 %7, 0
  %11 = ptrtoint %"class.blink::Member"* %5 to i64
  br i1 %10, label %23, label %12

12:                                               ; preds = %2, %17
  %13 = phi %"class.blink::Member"* [ %18, %17 ], [ %5, %2 ]
  %14 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %13, i64 0, i32 0, i32 0
  %15 = load %"class.blink::SVGAnimationElement"*, %"class.blink::SVGAnimationElement"** %14, align 8
  %16 = icmp eq %"class.blink::SVGAnimationElement"* %15, %1
  br i1 %16, label %20, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %13, i64 1
  %19 = icmp eq %"class.blink::Member"* %18, %9
  br i1 %19, label %20, label %12

20:                                               ; preds = %17, %12
  %21 = phi %"class.blink::Member"* [ %9, %17 ], [ %13, %12 ]
  %22 = ptrtoint %"class.blink::Member"* %21 to i64
  br label %23

23:                                               ; preds = %20, %2
  %24 = phi i64 [ %22, %20 ], [ %11, %2 ]
  %25 = sub i64 %24, %11
  %26 = lshr exact i64 %25, 3
  %27 = trunc i64 %26 to i32
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_19SVGAnimationElementEEELj0ENS1_13HeapAllocatorEE7EraseAtEj(%"class.WTF::Vector"* %3, i32 %27) #6
  %28 = getelementptr inbounds %"class.blink::SMILAnimationSandwich", %"class.blink::SMILAnimationSandwich"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %45, label %31

31:                                               ; preds = %23
  %32 = load i32, i32* %6, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %45

34:                                               ; preds = %31
  %35 = bitcast %"class.blink::SVGAnimationElement"* %1 to void (%"class.blink::SVGAnimationElement"*)***
  %36 = load void (%"class.blink::SVGAnimationElement"*)**, void (%"class.blink::SVGAnimationElement"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.blink::SVGAnimationElement"*)*, void (%"class.blink::SVGAnimationElement"*)** %36, i64 171
  %38 = load void (%"class.blink::SVGAnimationElement"*)*, void (%"class.blink::SVGAnimationElement"*)** %37, align 8
  tail call void %38(%"class.blink::SVGAnimationElement"* %1) #6
  %39 = getelementptr inbounds %"class.blink::SMILAnimationSandwich", %"class.blink::SMILAnimationSandwich"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %40 = bitcast %"class.blink::Member"** %39 to i8**
  %41 = load i8*, i8** %40, align 8
  %42 = load i32, i32* %28, align 4
  %43 = zext i32 %42 to i64
  %44 = shl nuw nsw i64 %43, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %41, i64 %44) #6
  store i32 0, i32* %28, align 4
  br label %45

45:                                               ; preds = %34, %31, %23
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21SMILAnimationSandwich26UpdateActiveAnimationStackENS_8SMILTimeE(%"class.blink::SMILAnimationSandwich"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::(anonymous namespace)::PriorityCompare", align 8
  %4 = getelementptr inbounds %"class.blink::SMILAnimationSandwich", %"class.blink::SMILAnimationSandwich"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::SMILAnimationSandwich", %"class.blink::SMILAnimationSandwich"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::Member"*, %"class.blink::Member"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::SMILAnimationSandwich", %"class.blink::SMILAnimationSandwich"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %6, i64 %9
  %11 = icmp eq i32 %8, 0
  br i1 %11, label %22, label %12

12:                                               ; preds = %2, %16
  %13 = phi %"class.blink::Member"* [ %14, %16 ], [ %6, %2 ]
  %14 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %13, i64 1
  %15 = icmp eq %"class.blink::Member"* %14, %10
  br i1 %15, label %32, label %16

16:                                               ; preds = %12
  %17 = bitcast %"class.blink::Member"* %14 to %"class.blink::SVGSMILElement"**
  %18 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %17, align 8
  %19 = bitcast %"class.blink::Member"* %13 to %"class.blink::SVGSMILElement"**
  %20 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %19, align 8
  %21 = tail call zeroext i1 @_ZNK5blink14SVGSMILElement20IsHigherPriorityThanEPKS0_NS_8SMILTimeE(%"class.blink::SVGSMILElement"* %20, %"class.blink::SVGSMILElement"* %18, i64 %1) #6
  br i1 %21, label %22, label %12

22:                                               ; preds = %16, %2
  %23 = phi %"class.blink::Member"* [ %6, %2 ], [ %14, %16 ]
  %24 = icmp eq %"class.blink::Member"* %23, %10
  br i1 %24, label %32, label %25

25:                                               ; preds = %22
  %26 = load %"class.blink::Member"*, %"class.blink::Member"** %5, align 8
  %27 = load i32, i32* %7, align 4
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %26, i64 %28
  %30 = bitcast %"struct.blink::(anonymous namespace)::PriorityCompare"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30)
  %31 = getelementptr inbounds %"struct.blink::(anonymous namespace)::PriorityCompare", %"struct.blink::(anonymous namespace)::PriorityCompare"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %31, align 8
  call fastcc void @_ZNSt3__16__sortIRN5blink12_GLOBAL__N_115PriorityCompareEPNS1_6MemberINS1_19SVGAnimationElementEEEEEvT0_S9_T_(%"class.blink::Member"* %26, %"class.blink::Member"* %29, %"struct.blink::(anonymous namespace)::PriorityCompare"* nonnull dereferenceable(8) %3) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  br label %32

32:                                               ; preds = %12, %22, %25
  %33 = getelementptr inbounds %"class.blink::SMILAnimationSandwich", %"class.blink::SMILAnimationSandwich"* %0, i64 0, i32 1, i32 0
  %34 = getelementptr inbounds %"class.blink::SMILAnimationSandwich", %"class.blink::SMILAnimationSandwich"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %33, i64 0, i32 0, i32 0, i32 0
  %38 = bitcast %"class.WTF::Vector"* %33 to i8**
  %39 = load i8*, i8** %38, align 8
  %40 = zext i32 %35 to i64
  %41 = shl nuw nsw i64 %40, 3
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %39, i64 %41) #6
  store i32 0, i32* %34, align 4
  %42 = load i32, i32* %7, align 4
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_19SVGAnimationElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %33, i32 %42)
  %43 = load %"class.blink::Member"*, %"class.blink::Member"** %5, align 8
  %44 = load i32, i32* %7, align 4
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %43, i64 %45
  %47 = icmp eq i32 %44, 0
  br i1 %47, label %50, label %48

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.blink::SMILAnimationSandwich", %"class.blink::SMILAnimationSandwich"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  br label %51

50:                                               ; preds = %77, %32
  br i1 %36, label %91, label %80

51:                                               ; preds = %48, %77
  %52 = phi %"class.blink::Member"* [ %43, %48 ], [ %78, %77 ]
  %53 = bitcast %"class.blink::Member"* %52 to %"class.blink::SVGSMILElement"**
  %54 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %53, align 8
  %55 = call zeroext i1 @_ZNK5blink14SVGSMILElement14IsContributingENS_8SMILTimeE(%"class.blink::SVGSMILElement"* %54, i64 %1) #6
  br i1 %55, label %56, label %77

56:                                               ; preds = %51
  %57 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %53, align 8
  call void @_ZN5blink14SVGSMILElement19UpdateProgressStateENS_8SMILTimeE(%"class.blink::SVGSMILElement"* %57, i64 %1) #6
  %58 = load i32, i32* %34, align 4
  %59 = load i32, i32* %49, align 8
  %60 = icmp eq i32 %58, %59
  br i1 %60, label %76, label %61, !prof !2

61:                                               ; preds = %56
  %62 = load %"class.blink::Member"*, %"class.blink::Member"** %37, align 8
  %63 = zext i32 %58 to i64
  %64 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %62, i64 %63
  %65 = bitcast %"class.blink::Member"* %52 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"class.blink::Member"* %64 to i64*
  store atomic i64 %66, i64* %67 monotonic, align 8
  %68 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %73, label %70

70:                                               ; preds = %61
  %71 = inttoptr i64 %66 to i8*
  %72 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %71) #6
  br label %73

73:                                               ; preds = %70, %61
  %74 = load i32, i32* %34, align 4
  %75 = add i32 %74, 1
  store i32 %75, i32* %34, align 4
  br label %77

76:                                               ; preds = %56
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_19SVGAnimationElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector"* %33, %"class.blink::Member"* dereferenceable(8) %52) #6
  br label %77

77:                                               ; preds = %76, %73, %51
  %78 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %52, i64 1
  %79 = icmp eq %"class.blink::Member"* %78, %46
  br i1 %79, label %50, label %51

80:                                               ; preds = %50
  %81 = load i32, i32* %34, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %91

83:                                               ; preds = %80
  %84 = call dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_19SVGAnimationElementEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %4, i32 0) #6
  %85 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %84, i64 0, i32 0, i32 0
  %86 = load %"class.blink::SVGAnimationElement"*, %"class.blink::SVGAnimationElement"** %85, align 8
  %87 = bitcast %"class.blink::SVGAnimationElement"* %86 to void (%"class.blink::SVGAnimationElement"*)***
  %88 = load void (%"class.blink::SVGAnimationElement"*)**, void (%"class.blink::SVGAnimationElement"*)*** %87, align 8
  %89 = getelementptr inbounds void (%"class.blink::SVGAnimationElement"*)*, void (%"class.blink::SVGAnimationElement"*)** %88, i64 171
  %90 = load void (%"class.blink::SVGAnimationElement"*)*, void (%"class.blink::SVGAnimationElement"*)** %89, align 8
  call void %90(%"class.blink::SVGAnimationElement"* %86) #6
  br label %91

91:                                               ; preds = %50, %83, %80
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_19SVGAnimationElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !3

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %10 = icmp eq %"class.blink::Member"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_19SVGAnimationElementEEEEEmm(i64 %11) #6
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_19SVGAnimationElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #6
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #6
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %26 = icmp eq %"class.blink::Member"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #6
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #6
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #6
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0)) #6
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #6
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_19SVGAnimationElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

declare zeroext i1 @_ZNK5blink14SVGSMILElement14IsContributingENS_8SMILTimeE(%"class.blink::SVGSMILElement"*, i64) local_unnamed_addr #2

declare void @_ZN5blink14SVGSMILElement19UpdateProgressStateENS_8SMILTimeE(%"class.blink::SVGSMILElement"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink21SMILAnimationSandwich20ApplyAnimationValuesEv(%"class.blink::SMILAnimationSandwich"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.blink::SMILAnimationValue", align 8
  %3 = getelementptr inbounds %"class.blink::SMILAnimationSandwich", %"class.blink::SMILAnimationSandwich"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %54, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::SMILAnimationSandwich", %"class.blink::SMILAnimationSandwich"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::Member"*, %"class.blink::Member"** %7, align 8
  %9 = zext i32 %4 to i64
  %10 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %8, i64 %9
  br label %11

11:                                               ; preds = %6, %17
  %12 = phi %"class.blink::Member"* [ %10, %6 ], [ %13, %17 ]
  %13 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %12, i64 -1
  %14 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %13, i64 0, i32 0, i32 0
  %15 = load %"class.blink::SVGAnimationElement"*, %"class.blink::SVGAnimationElement"** %14, align 8
  %16 = tail call zeroext i1 @_ZNK5blink19SVGAnimationElement34OverwritesUnderlyingAnimationValueEv(%"class.blink::SVGAnimationElement"* %15) #6
  br i1 %16, label %20, label %17

17:                                               ; preds = %11
  %18 = load %"class.blink::Member"*, %"class.blink::Member"** %7, align 8
  %19 = icmp eq %"class.blink::Member"* %13, %18
  br i1 %19, label %20, label %11

20:                                               ; preds = %11, %17
  %21 = phi %"class.blink::Member"* [ %18, %17 ], [ %13, %11 ]
  %22 = getelementptr inbounds %"class.blink::SMILAnimationSandwich", %"class.blink::SMILAnimationSandwich"* %0, i64 0, i32 0, i32 0
  %23 = tail call dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_19SVGAnimationElementEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %22, i32 0) #6
  %24 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %23, i64 0, i32 0, i32 0
  %25 = load %"class.blink::SVGAnimationElement"*, %"class.blink::SVGAnimationElement"** %24, align 8
  %26 = bitcast %"struct.blink::SMILAnimationValue"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %26) #6
  %27 = getelementptr inbounds %"struct.blink::SMILAnimationValue", %"struct.blink::SMILAnimationValue"* %2, i64 0, i32 0
  store %"class.blink::SVGPropertyBase"* inttoptr (i64 -6148914691236517206 to %"class.blink::SVGPropertyBase"*), %"class.blink::SVGPropertyBase"** %27, align 8
  %28 = getelementptr inbounds %"struct.blink::SMILAnimationValue", %"struct.blink::SMILAnimationValue"* %2, i64 0, i32 1
  %29 = bitcast %"class.blink::SVGAnimationElement"* %25 to void (%"struct.blink::SMILAnimationValue"*, %"class.blink::SVGAnimationElement"*)***
  %30 = bitcast %"class.blink::AffineTransform"* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 -1, i64 48, i1 false)
  %31 = load void (%"struct.blink::SMILAnimationValue"*, %"class.blink::SVGAnimationElement"*)**, void (%"struct.blink::SMILAnimationValue"*, %"class.blink::SVGAnimationElement"*)*** %29, align 8
  %32 = getelementptr inbounds void (%"struct.blink::SMILAnimationValue"*, %"class.blink::SVGAnimationElement"*)*, void (%"struct.blink::SMILAnimationValue"*, %"class.blink::SVGAnimationElement"*)** %31, i64 169
  %33 = load void (%"struct.blink::SMILAnimationValue"*, %"class.blink::SVGAnimationElement"*)*, void (%"struct.blink::SMILAnimationValue"*, %"class.blink::SVGAnimationElement"*)** %32, align 8
  call void %33(%"struct.blink::SMILAnimationValue"* nonnull sret %2, %"class.blink::SVGAnimationElement"* %25) #6
  %34 = load %"class.blink::Member"*, %"class.blink::Member"** %7, align 8
  %35 = load i32, i32* %3, align 4
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %34, i64 %36
  %38 = icmp eq %"class.blink::Member"* %21, %37
  br i1 %38, label %39, label %44

39:                                               ; preds = %44, %20
  %40 = bitcast %"class.blink::SVGAnimationElement"* %25 to void (%"class.blink::SVGAnimationElement"*, %"struct.blink::SMILAnimationValue"*)***
  %41 = load void (%"class.blink::SVGAnimationElement"*, %"struct.blink::SMILAnimationValue"*)**, void (%"class.blink::SVGAnimationElement"*, %"struct.blink::SMILAnimationValue"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.blink::SVGAnimationElement"*, %"struct.blink::SMILAnimationValue"*)*, void (%"class.blink::SVGAnimationElement"*, %"struct.blink::SMILAnimationValue"*)** %41, i64 170
  %43 = load void (%"class.blink::SVGAnimationElement"*, %"struct.blink::SMILAnimationValue"*)*, void (%"class.blink::SVGAnimationElement"*, %"struct.blink::SMILAnimationValue"*)** %42, align 8
  call void %43(%"class.blink::SVGAnimationElement"* %25, %"struct.blink::SMILAnimationValue"* nonnull dereferenceable(56) %2) #6
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %26) #6
  br label %54

44:                                               ; preds = %20, %44
  %45 = phi %"class.blink::Member"* [ %48, %44 ], [ %21, %20 ]
  %46 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %45, i64 0, i32 0, i32 0
  %47 = load %"class.blink::SVGAnimationElement"*, %"class.blink::SVGAnimationElement"** %46, align 8
  call void @_ZN5blink19SVGAnimationElement14ApplyAnimationERNS_18SMILAnimationValueE(%"class.blink::SVGAnimationElement"* %47, %"struct.blink::SMILAnimationValue"* nonnull dereferenceable(56) %2) #6
  %48 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %45, i64 1
  %49 = load %"class.blink::Member"*, %"class.blink::Member"** %7, align 8
  %50 = load i32, i32* %3, align 4
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %49, i64 %51
  %53 = icmp eq %"class.blink::Member"* %48, %52
  br i1 %53, label %39, label %44

54:                                               ; preds = %1, %39
  %55 = phi i1 [ true, %39 ], [ false, %1 ]
  ret i1 %55
}

declare zeroext i1 @_ZNK5blink19SVGAnimationElement34OverwritesUnderlyingAnimationValueEv(%"class.blink::SVGAnimationElement"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink19SVGAnimationElement14ApplyAnimationERNS_18SMILAnimationValueE(%"class.blink::SVGAnimationElement"*, %"struct.blink::SMILAnimationValue"* dereferenceable(56)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink21SMILAnimationSandwich5TraceEPNS_7VisitorE(%"class.blink::SMILAnimationSandwich"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::SMILAnimationSandwich"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  %6 = bitcast %"class.blink::SMILAnimationSandwich"* %0 to i8**
  %7 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %1, i8** %6) #6
  br i1 %5, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %1, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_19SVGAnimationElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #6
  br label %17

17:                                               ; preds = %2, %11
  %18 = getelementptr inbounds %"class.blink::SMILAnimationSandwich", %"class.blink::SMILAnimationSandwich"* %0, i64 0, i32 1
  %19 = bitcast %"class.blink::HeapVector"* %18 to i64*
  %20 = load atomic i64, i64* %19 monotonic, align 8
  %21 = icmp eq i64 %20, 0
  %22 = bitcast %"class.blink::HeapVector"* %18 to i8**
  %23 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %24 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %23, i64 11
  %25 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %24, align 8
  tail call void %25(%"class.blink::Visitor"* %1, i8** %22) #6
  br i1 %21, label %32, label %26

26:                                               ; preds = %17
  %27 = inttoptr i64 %20 to i8*
  %28 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %29 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %29, i64 5
  %31 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %30, align 8
  tail call void %31(%"class.blink::Visitor"* %1, i8* nonnull %27, i8* nonnull %27, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_19SVGAnimationElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #6
  br label %32

32:                                               ; preds = %17, %26
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_19SVGAnimationElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector"*, %"class.blink::SVGAnimationElement"** dereferenceable(8)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_19SVGAnimationElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %14) #6
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member"*, %"class.blink::Member"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 %18
  %20 = bitcast %"class.blink::SVGAnimationElement"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #6
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_19SVGAnimationElementEEELj0ENS1_13HeapAllocatorEE7EraseAtEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #6
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #6
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2050, %"class.logging::CheckOpResult"* nonnull %4) #6
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #6
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member"*, %"class.blink::Member"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %24, i64 %25
  %27 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %26, i64 1
  %28 = load i32, i32* %8, align 4
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %24, i64 %29
  %31 = icmp ne %"class.blink::Member"* %26, null
  %32 = icmp ne %"class.blink::Member"* %27, null
  %33 = and i1 %31, %32
  br i1 %33, label %34, label %124, !prof !3

34:                                               ; preds = %22
  %35 = icmp ult %"class.blink::Member"* %27, %30
  br i1 %35, label %36, label %104

36:                                               ; preds = %34
  %37 = shl nuw nsw i64 %29, 3
  %38 = add nsw i64 %37, -9
  %39 = shl nuw nsw i64 %25, 3
  %40 = sub nsw i64 %38, %39
  %41 = lshr i64 %40, 3
  %42 = add nuw nsw i64 %41, 1
  %43 = and i64 %42, 7
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %56, label %45

45:                                               ; preds = %36, %45
  %46 = phi %"class.blink::Member"* [ %53, %45 ], [ %26, %36 ]
  %47 = phi %"class.blink::Member"* [ %52, %45 ], [ %27, %36 ]
  %48 = phi i64 [ %54, %45 ], [ %43, %36 ]
  %49 = bitcast %"class.blink::Member"* %47 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.blink::Member"* %46 to i64*
  store atomic i64 %50, i64* %51 monotonic, align 8
  %52 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %47, i64 1
  %53 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %46, i64 1
  %54 = add i64 %48, -1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %45, !llvm.loop !5

56:                                               ; preds = %45, %36
  %57 = phi %"class.blink::Member"* [ %26, %36 ], [ %53, %45 ]
  %58 = phi %"class.blink::Member"* [ %27, %36 ], [ %52, %45 ]
  %59 = icmp ult i64 %40, 56
  br i1 %59, label %104, label %60

60:                                               ; preds = %56, %60
  %61 = phi %"class.blink::Member"* [ %102, %60 ], [ %57, %56 ]
  %62 = phi %"class.blink::Member"* [ %101, %60 ], [ %58, %56 ]
  %63 = bitcast %"class.blink::Member"* %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.blink::Member"* %61 to i64*
  store atomic i64 %64, i64* %65 monotonic, align 8
  %66 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %62, i64 1
  %67 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %61, i64 1
  %68 = bitcast %"class.blink::Member"* %66 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast %"class.blink::Member"* %67 to i64*
  store atomic i64 %69, i64* %70 monotonic, align 8
  %71 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %62, i64 2
  %72 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %61, i64 2
  %73 = bitcast %"class.blink::Member"* %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"class.blink::Member"* %72 to i64*
  store atomic i64 %74, i64* %75 monotonic, align 8
  %76 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %62, i64 3
  %77 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %61, i64 3
  %78 = bitcast %"class.blink::Member"* %76 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.blink::Member"* %77 to i64*
  store atomic i64 %79, i64* %80 monotonic, align 8
  %81 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %62, i64 4
  %82 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %61, i64 4
  %83 = bitcast %"class.blink::Member"* %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = bitcast %"class.blink::Member"* %82 to i64*
  store atomic i64 %84, i64* %85 monotonic, align 8
  %86 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %62, i64 5
  %87 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %61, i64 5
  %88 = bitcast %"class.blink::Member"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.blink::Member"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %62, i64 6
  %92 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %61, i64 6
  %93 = bitcast %"class.blink::Member"* %91 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.blink::Member"* %92 to i64*
  store atomic i64 %94, i64* %95 monotonic, align 8
  %96 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %62, i64 7
  %97 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %61, i64 7
  %98 = bitcast %"class.blink::Member"* %96 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.blink::Member"* %97 to i64*
  store atomic i64 %99, i64* %100 monotonic, align 8
  %101 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %62, i64 8
  %102 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %61, i64 8
  %103 = icmp ult %"class.blink::Member"* %101, %30
  br i1 %103, label %60, label %104

104:                                              ; preds = %56, %60, %34
  %105 = ptrtoint %"class.blink::Member"* %30 to i64
  %106 = ptrtoint %"class.blink::Member"* %27 to i64
  %107 = sub i64 %105, %106
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %124, label %109

109:                                              ; preds = %104
  %110 = ashr exact i64 %107, 3
  br label %111

111:                                              ; preds = %121, %109
  %112 = phi i64 [ %114, %121 ], [ %110, %109 ]
  %113 = phi %"class.blink::Member"* [ %122, %121 ], [ %26, %109 ]
  %114 = add i64 %112, -1
  %115 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %121, label %117

117:                                              ; preds = %111
  %118 = bitcast %"class.blink::Member"* %113 to i8**
  %119 = load i8*, i8** %118, align 8
  %120 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %119) #6
  br label %121

121:                                              ; preds = %117, %111
  %122 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %113, i64 1
  %123 = icmp eq i64 %114, 0
  br i1 %123, label %124, label %111

124:                                              ; preds = %121, %22, %104
  %125 = load %"class.blink::Member"*, %"class.blink::Member"** %23, align 8
  %126 = load i32, i32* %8, align 4
  %127 = zext i32 %126 to i64
  %128 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %125, i64 %127
  %129 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %128, i64 -1
  %130 = bitcast %"class.blink::Member"* %129 to i8*
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %130, i64 8) #6
  %131 = load i32, i32* %8, align 4
  %132 = add i32 %131, -1
  store i32 %132, i32* %8, align 4
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink14SVGSMILElement20IsHigherPriorityThanEPKS0_NS_8SMILTimeE(%"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNSt3__16__sortIRN5blink12_GLOBAL__N_115PriorityCompareEPNS1_6MemberINS1_19SVGAnimationElementEEEEEvT0_S9_T_(%"class.blink::Member"*, %"class.blink::Member"*, %"struct.blink::(anonymous namespace)::PriorityCompare"* readonly dereferenceable(8)) unnamed_addr #0 {
  %4 = getelementptr inbounds %"struct.blink::(anonymous namespace)::PriorityCompare", %"struct.blink::(anonymous namespace)::PriorityCompare"* %2, i64 0, i32 0, i32 0, i32 0
  br label %5

5:                                                ; preds = %333, %3
  %6 = phi %"class.blink::Member"* [ %1, %3 ], [ %296, %333 ]
  %7 = phi %"class.blink::Member"* [ %0, %3 ], [ %17, %333 ]
  %8 = ptrtoint %"class.blink::Member"* %6 to i64
  %9 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %6, i64 -1
  %10 = bitcast %"class.blink::Member"* %9 to i64*
  %11 = bitcast %"class.blink::Member"* %9 to %"class.blink::SVGSMILElement"**
  %12 = bitcast %"class.blink::Member"* %9 to i8**
  %13 = ptrtoint %"class.blink::Member"* %6 to i64
  br label %14

14:                                               ; preds = %342, %5
  %15 = phi %"class.blink::Member"* [ %7, %5 ], [ %343, %342 ]
  br label %16

16:                                               ; preds = %194, %14
  %17 = phi %"class.blink::Member"* [ %15, %14 ], [ %179, %194 ]
  %18 = ptrtoint %"class.blink::Member"* %17 to i64
  %19 = sub i64 %8, %18
  %20 = ashr exact i64 %19, 3
  switch i64 %20, label %62 [
    i64 0, label %346
    i64 1, label %346
    i64 2, label %21
    i64 3, label %47
    i64 4, label %51
    i64 5, label %56
  ]

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %6, i64 -1
  %23 = bitcast %"class.blink::Member"* %22 to i64*
  %24 = bitcast %"class.blink::Member"* %22 to %"class.blink::SVGSMILElement"**
  %25 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %24, align 8
  %26 = bitcast %"class.blink::Member"* %17 to i64*
  %27 = bitcast %"class.blink::Member"* %17 to %"class.blink::SVGSMILElement"**
  %28 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %27, align 8
  %29 = load i64, i64* %4, align 8
  %30 = tail call zeroext i1 @_ZNK5blink14SVGSMILElement20IsHigherPriorityThanEPKS0_NS_8SMILTimeE(%"class.blink::SVGSMILElement"* %28, %"class.blink::SVGSMILElement"* %25, i64 %29) #6
  br i1 %30, label %31, label %346

31:                                               ; preds = %21
  %32 = load i64, i64* %26, align 8
  %33 = load i64, i64* %23, align 8
  store atomic i64 %33, i64* %26 monotonic, align 8
  store atomic i64 %32, i64* %23 monotonic, align 8
  %34 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %40, label %36

36:                                               ; preds = %31
  %37 = bitcast %"class.blink::Member"* %17 to i8**
  %38 = load i8*, i8** %37, align 8
  %39 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %38) #6
  br label %40

40:                                               ; preds = %36, %31
  %41 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %346, label %43

43:                                               ; preds = %40
  %44 = bitcast %"class.blink::Member"* %22 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %45) #6
  br label %346

47:                                               ; preds = %16
  %48 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %17, i64 1
  %49 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %6, i64 -1
  %50 = tail call fastcc i32 @_ZNSt3__17__sort3IRN5blink12_GLOBAL__N_115PriorityCompareEPNS1_6MemberINS1_19SVGAnimationElementEEEEEjT0_S9_S9_T_(%"class.blink::Member"* %17, %"class.blink::Member"* %48, %"class.blink::Member"* %49, %"struct.blink::(anonymous namespace)::PriorityCompare"* dereferenceable(8) %2)
  br label %346

51:                                               ; preds = %16
  %52 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %17, i64 1
  %53 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %17, i64 2
  %54 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %6, i64 -1
  %55 = tail call fastcc i32 @_ZNSt3__17__sort4IRN5blink12_GLOBAL__N_115PriorityCompareEPNS1_6MemberINS1_19SVGAnimationElementEEEEEjT0_S9_S9_S9_T_(%"class.blink::Member"* %17, %"class.blink::Member"* %52, %"class.blink::Member"* %53, %"class.blink::Member"* %54, %"struct.blink::(anonymous namespace)::PriorityCompare"* dereferenceable(8) %2)
  br label %346

56:                                               ; preds = %16
  %57 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %17, i64 1
  %58 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %17, i64 2
  %59 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %17, i64 3
  %60 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %6, i64 -1
  %61 = tail call fastcc i32 @_ZNSt3__17__sort5IRN5blink12_GLOBAL__N_115PriorityCompareEPNS1_6MemberINS1_19SVGAnimationElementEEEEEjT0_S9_S9_S9_S9_T_(%"class.blink::Member"* %17, %"class.blink::Member"* %57, %"class.blink::Member"* %58, %"class.blink::Member"* %59, %"class.blink::Member"* %60, %"struct.blink::(anonymous namespace)::PriorityCompare"* dereferenceable(8) %2)
  br label %346

62:                                               ; preds = %16
  %63 = icmp slt i64 %19, 56
  br i1 %63, label %64, label %113

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %17, i64 2
  %66 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %17, i64 1
  %67 = tail call fastcc i32 @_ZNSt3__17__sort3IRN5blink12_GLOBAL__N_115PriorityCompareEPNS1_6MemberINS1_19SVGAnimationElementEEEEEjT0_S9_S9_T_(%"class.blink::Member"* %17, %"class.blink::Member"* %66, %"class.blink::Member"* %65, %"struct.blink::(anonymous namespace)::PriorityCompare"* dereferenceable(8) %2) #6
  %68 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %17, i64 3
  %69 = icmp eq %"class.blink::Member"* %68, %6
  br i1 %69, label %346, label %70

70:                                               ; preds = %64, %110
  %71 = phi %"class.blink::Member"* [ %111, %110 ], [ %68, %64 ]
  %72 = phi %"class.blink::Member"* [ %71, %110 ], [ %65, %64 ]
  %73 = bitcast %"class.blink::Member"* %71 to %"class.blink::SVGSMILElement"**
  %74 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %73, align 8
  %75 = bitcast %"class.blink::Member"* %72 to %"class.blink::SVGSMILElement"**
  %76 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %75, align 8
  %77 = load i64, i64* %4, align 8
  %78 = tail call zeroext i1 @_ZNK5blink14SVGSMILElement20IsHigherPriorityThanEPKS0_NS_8SMILTimeE(%"class.blink::SVGSMILElement"* %76, %"class.blink::SVGSMILElement"* %74, i64 %77) #6
  br i1 %78, label %79, label %110

79:                                               ; preds = %70
  %80 = bitcast %"class.blink::Member"* %71 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = inttoptr i64 %81 to %"class.blink::SVGSMILElement"*
  br label %83

83:                                               ; preds = %96, %79
  %84 = phi %"class.blink::Member"* [ %71, %79 ], [ %85, %96 ]
  %85 = phi %"class.blink::Member"* [ %72, %79 ], [ %97, %96 ]
  %86 = bitcast %"class.blink::Member"* %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %"class.blink::Member"* %84 to i64*
  store atomic i64 %87, i64* %88 monotonic, align 8
  %89 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %94, label %91

91:                                               ; preds = %83
  %92 = inttoptr i64 %87 to i8*
  %93 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %92) #6
  br label %94

94:                                               ; preds = %91, %83
  %95 = icmp eq %"class.blink::Member"* %85, %17
  br i1 %95, label %102, label %96

96:                                               ; preds = %94
  %97 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %85, i64 -1
  %98 = bitcast %"class.blink::Member"* %97 to %"class.blink::SVGSMILElement"**
  %99 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %98, align 8
  %100 = load i64, i64* %4, align 8
  %101 = tail call zeroext i1 @_ZNK5blink14SVGSMILElement20IsHigherPriorityThanEPKS0_NS_8SMILTimeE(%"class.blink::SVGSMILElement"* %99, %"class.blink::SVGSMILElement"* %82, i64 %100) #6
  br i1 %101, label %83, label %102

102:                                              ; preds = %94, %96
  %103 = phi %"class.blink::Member"* [ %85, %96 ], [ %17, %94 ]
  %104 = bitcast %"class.blink::Member"* %103 to i64*
  store atomic i64 %81, i64* %104 monotonic, align 8
  %105 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %110, label %107

107:                                              ; preds = %102
  %108 = inttoptr i64 %81 to i8*
  %109 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %108) #6
  br label %110

110:                                              ; preds = %107, %102, %70
  %111 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %71, i64 1
  %112 = icmp eq %"class.blink::Member"* %111, %6
  br i1 %112, label %346, label %70

113:                                              ; preds = %62
  %114 = icmp sgt i64 %19, 7992
  %115 = sdiv i64 %20, 2
  %116 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %17, i64 %115
  br i1 %114, label %117, label %122

117:                                              ; preds = %113
  %118 = sdiv i64 %20, 4
  %119 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %17, i64 %118
  %120 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %116, i64 %118
  %121 = tail call fastcc i32 @_ZNSt3__17__sort5IRN5blink12_GLOBAL__N_115PriorityCompareEPNS1_6MemberINS1_19SVGAnimationElementEEEEEjT0_S9_S9_S9_S9_T_(%"class.blink::Member"* %17, %"class.blink::Member"* %119, %"class.blink::Member"* %116, %"class.blink::Member"* %120, %"class.blink::Member"* %9, %"struct.blink::(anonymous namespace)::PriorityCompare"* dereferenceable(8) %2)
  br label %124

122:                                              ; preds = %113
  %123 = tail call fastcc i32 @_ZNSt3__17__sort3IRN5blink12_GLOBAL__N_115PriorityCompareEPNS1_6MemberINS1_19SVGAnimationElementEEEEEjT0_S9_S9_T_(%"class.blink::Member"* %17, %"class.blink::Member"* %116, %"class.blink::Member"* %9, %"struct.blink::(anonymous namespace)::PriorityCompare"* dereferenceable(8) %2)
  br label %124

124:                                              ; preds = %122, %117
  %125 = phi i32 [ %121, %117 ], [ %123, %122 ]
  %126 = bitcast %"class.blink::Member"* %17 to %"class.blink::SVGSMILElement"**
  %127 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %126, align 8
  %128 = bitcast %"class.blink::Member"* %116 to %"class.blink::SVGSMILElement"**
  %129 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %128, align 8
  %130 = load i64, i64* %4, align 8
  %131 = tail call zeroext i1 @_ZNK5blink14SVGSMILElement20IsHigherPriorityThanEPKS0_NS_8SMILTimeE(%"class.blink::SVGSMILElement"* %129, %"class.blink::SVGSMILElement"* %127, i64 %130) #6
  br i1 %131, label %241, label %132

132:                                              ; preds = %124, %215
  %133 = phi %"class.blink::Member"* [ %134, %215 ], [ %9, %124 ]
  %134 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %133, i64 -1
  %135 = icmp eq %"class.blink::Member"* %17, %134
  br i1 %135, label %136, label %215

136:                                              ; preds = %132
  %137 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %17, i64 1
  %138 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %126, align 8
  %139 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %11, align 8
  %140 = load i64, i64* %4, align 8
  %141 = tail call zeroext i1 @_ZNK5blink14SVGSMILElement20IsHigherPriorityThanEPKS0_NS_8SMILTimeE(%"class.blink::SVGSMILElement"* %139, %"class.blink::SVGSMILElement"* %138, i64 %140) #6
  br i1 %141, label %172, label %142

142:                                              ; preds = %136
  %143 = icmp eq %"class.blink::Member"* %137, %9
  br i1 %143, label %346, label %144

144:                                              ; preds = %142, %169
  %145 = phi %"class.blink::Member"* [ %170, %169 ], [ %137, %142 ]
  %146 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %126, align 8
  %147 = bitcast %"class.blink::Member"* %145 to %"class.blink::SVGSMILElement"**
  %148 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %147, align 8
  %149 = load i64, i64* %4, align 8
  %150 = tail call zeroext i1 @_ZNK5blink14SVGSMILElement20IsHigherPriorityThanEPKS0_NS_8SMILTimeE(%"class.blink::SVGSMILElement"* %148, %"class.blink::SVGSMILElement"* %146, i64 %149) #6
  br i1 %150, label %151, label %169

151:                                              ; preds = %144
  %152 = bitcast %"class.blink::Member"* %145 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = load i64, i64* %10, align 8
  store atomic i64 %154, i64* %152 monotonic, align 8
  store atomic i64 %153, i64* %10 monotonic, align 8
  %155 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %161, label %157

157:                                              ; preds = %151
  %158 = bitcast %"class.blink::Member"* %145 to i8**
  %159 = load i8*, i8** %158, align 8
  %160 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %159) #6
  br label %161

161:                                              ; preds = %157, %151
  %162 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %167, label %164

164:                                              ; preds = %161
  %165 = load i8*, i8** %12, align 8
  %166 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %165) #6
  br label %167

167:                                              ; preds = %161, %164
  %168 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %145, i64 1
  br label %172

169:                                              ; preds = %144
  %170 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %145, i64 1
  %171 = icmp eq %"class.blink::Member"* %170, %9
  br i1 %171, label %346, label %144

172:                                              ; preds = %136, %167
  %173 = phi %"class.blink::Member"* [ %168, %167 ], [ %137, %136 ]
  %174 = icmp eq %"class.blink::Member"* %173, %9
  br i1 %174, label %346, label %175

175:                                              ; preds = %172, %210
  %176 = phi %"class.blink::Member"* [ %185, %210 ], [ %173, %172 ]
  %177 = phi %"class.blink::Member"* [ %189, %210 ], [ %9, %172 ]
  br label %178

178:                                              ; preds = %178, %175
  %179 = phi %"class.blink::Member"* [ %176, %175 ], [ %185, %178 ]
  %180 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %126, align 8
  %181 = bitcast %"class.blink::Member"* %179 to %"class.blink::SVGSMILElement"**
  %182 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %181, align 8
  %183 = load i64, i64* %4, align 8
  %184 = tail call zeroext i1 @_ZNK5blink14SVGSMILElement20IsHigherPriorityThanEPKS0_NS_8SMILTimeE(%"class.blink::SVGSMILElement"* %182, %"class.blink::SVGSMILElement"* %180, i64 %183) #6
  %185 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %179, i64 1
  br i1 %184, label %186, label %178

186:                                              ; preds = %178, %186
  %187 = phi %"class.blink::Member"* [ %189, %186 ], [ %177, %178 ]
  %188 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %126, align 8
  %189 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %187, i64 -1
  %190 = bitcast %"class.blink::Member"* %189 to %"class.blink::SVGSMILElement"**
  %191 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %190, align 8
  %192 = load i64, i64* %4, align 8
  %193 = tail call zeroext i1 @_ZNK5blink14SVGSMILElement20IsHigherPriorityThanEPKS0_NS_8SMILTimeE(%"class.blink::SVGSMILElement"* %191, %"class.blink::SVGSMILElement"* %188, i64 %192) #6
  br i1 %193, label %186, label %194

194:                                              ; preds = %186
  %195 = bitcast %"class.blink::Member"* %179 to i64*
  %196 = bitcast %"class.blink::Member"* %189 to i64*
  %197 = icmp ult %"class.blink::Member"* %179, %189
  br i1 %197, label %198, label %16

198:                                              ; preds = %194
  %199 = load i64, i64* %195, align 8
  %200 = load i64, i64* %196, align 8
  store atomic i64 %200, i64* %195 monotonic, align 8
  store atomic i64 %199, i64* %196 monotonic, align 8
  %201 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %207, label %203

203:                                              ; preds = %198
  %204 = bitcast %"class.blink::Member"* %179 to i8**
  %205 = load i8*, i8** %204, align 8
  %206 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %205) #6
  br label %207

207:                                              ; preds = %203, %198
  %208 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %211

210:                                              ; preds = %207, %211
  br label %175

211:                                              ; preds = %207
  %212 = bitcast %"class.blink::Member"* %189 to i8**
  %213 = load i8*, i8** %212, align 8
  %214 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %213) #6
  br label %210

215:                                              ; preds = %132
  %216 = bitcast %"class.blink::Member"* %134 to %"class.blink::SVGSMILElement"**
  %217 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %216, align 8
  %218 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %128, align 8
  %219 = load i64, i64* %4, align 8
  %220 = tail call zeroext i1 @_ZNK5blink14SVGSMILElement20IsHigherPriorityThanEPKS0_NS_8SMILTimeE(%"class.blink::SVGSMILElement"* %218, %"class.blink::SVGSMILElement"* %217, i64 %219) #6
  br i1 %220, label %221, label %132

221:                                              ; preds = %215
  %222 = bitcast %"class.blink::Member"* %17 to i64*
  %223 = bitcast %"class.blink::Member"* %134 to i64*
  %224 = load i64, i64* %222, align 8
  %225 = load i64, i64* %223, align 8
  store atomic i64 %225, i64* %222 monotonic, align 8
  store atomic i64 %224, i64* %223 monotonic, align 8
  %226 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %232, label %228

228:                                              ; preds = %221
  %229 = bitcast %"class.blink::Member"* %17 to i8**
  %230 = load i8*, i8** %229, align 8
  %231 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %230) #6
  br label %232

232:                                              ; preds = %228, %221
  %233 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %239, label %235

235:                                              ; preds = %232
  %236 = bitcast %"class.blink::Member"* %134 to i8**
  %237 = load i8*, i8** %236, align 8
  %238 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %237) #6
  br label %239

239:                                              ; preds = %232, %235
  %240 = add i32 %125, 1
  br label %241

241:                                              ; preds = %124, %239
  %242 = phi i32 [ %240, %239 ], [ %125, %124 ]
  %243 = phi %"class.blink::Member"* [ %134, %239 ], [ %9, %124 ]
  %244 = ptrtoint %"class.blink::Member"* %17 to i64
  %245 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %17, i64 1
  %246 = icmp ult %"class.blink::Member"* %245, %243
  br i1 %246, label %247, label %293

247:                                              ; preds = %241, %289
  %248 = phi %"class.blink::Member"* [ %292, %289 ], [ %116, %241 ]
  %249 = phi i32 [ %290, %289 ], [ %242, %241 ]
  %250 = phi %"class.blink::Member"* [ %260, %289 ], [ %245, %241 ]
  %251 = phi %"class.blink::Member"* [ %263, %289 ], [ %243, %241 ]
  %252 = bitcast %"class.blink::Member"* %248 to %"class.blink::SVGSMILElement"**
  br label %253

253:                                              ; preds = %253, %247
  %254 = phi %"class.blink::Member"* [ %250, %247 ], [ %260, %253 ]
  %255 = bitcast %"class.blink::Member"* %254 to %"class.blink::SVGSMILElement"**
  %256 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %255, align 8
  %257 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %252, align 8
  %258 = load i64, i64* %4, align 8
  %259 = tail call zeroext i1 @_ZNK5blink14SVGSMILElement20IsHigherPriorityThanEPKS0_NS_8SMILTimeE(%"class.blink::SVGSMILElement"* %257, %"class.blink::SVGSMILElement"* %256, i64 %258) #6
  %260 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %254, i64 1
  br i1 %259, label %253, label %261

261:                                              ; preds = %253, %261
  %262 = phi %"class.blink::Member"* [ %263, %261 ], [ %251, %253 ]
  %263 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %262, i64 -1
  %264 = bitcast %"class.blink::Member"* %263 to %"class.blink::SVGSMILElement"**
  %265 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %264, align 8
  %266 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %252, align 8
  %267 = load i64, i64* %4, align 8
  %268 = tail call zeroext i1 @_ZNK5blink14SVGSMILElement20IsHigherPriorityThanEPKS0_NS_8SMILTimeE(%"class.blink::SVGSMILElement"* %266, %"class.blink::SVGSMILElement"* %265, i64 %267) #6
  br i1 %268, label %269, label %261

269:                                              ; preds = %261
  %270 = bitcast %"class.blink::Member"* %254 to i64*
  %271 = bitcast %"class.blink::Member"* %263 to i64*
  %272 = icmp ugt %"class.blink::Member"* %254, %263
  br i1 %272, label %293, label %273

273:                                              ; preds = %269
  %274 = load i64, i64* %270, align 8
  %275 = load i64, i64* %271, align 8
  store atomic i64 %275, i64* %270 monotonic, align 8
  store atomic i64 %274, i64* %271 monotonic, align 8
  %276 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %282, label %278

278:                                              ; preds = %273
  %279 = bitcast %"class.blink::Member"* %254 to i8**
  %280 = load i8*, i8** %279, align 8
  %281 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %280) #6
  br label %282

282:                                              ; preds = %278, %273
  %283 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %289, label %285

285:                                              ; preds = %282
  %286 = bitcast %"class.blink::Member"* %263 to i8**
  %287 = load i8*, i8** %286, align 8
  %288 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %287) #6
  br label %289

289:                                              ; preds = %282, %285
  %290 = add i32 %249, 1
  %291 = icmp eq %"class.blink::Member"* %248, %254
  %292 = select i1 %291, %"class.blink::Member"* %263, %"class.blink::Member"* %248
  br label %247

293:                                              ; preds = %269, %241
  %294 = phi %"class.blink::Member"* [ %116, %241 ], [ %248, %269 ]
  %295 = phi i32 [ %242, %241 ], [ %249, %269 ]
  %296 = phi %"class.blink::Member"* [ %245, %241 ], [ %254, %269 ]
  %297 = icmp eq %"class.blink::Member"* %296, %294
  br i1 %297, label %325, label %298

298:                                              ; preds = %293
  %299 = bitcast %"class.blink::Member"* %294 to i64*
  %300 = bitcast %"class.blink::Member"* %294 to %"class.blink::SVGSMILElement"**
  %301 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %300, align 8
  %302 = bitcast %"class.blink::Member"* %296 to i64*
  %303 = bitcast %"class.blink::Member"* %296 to %"class.blink::SVGSMILElement"**
  %304 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %303, align 8
  %305 = load i64, i64* %4, align 8
  %306 = tail call zeroext i1 @_ZNK5blink14SVGSMILElement20IsHigherPriorityThanEPKS0_NS_8SMILTimeE(%"class.blink::SVGSMILElement"* %304, %"class.blink::SVGSMILElement"* %301, i64 %305) #6
  br i1 %306, label %307, label %325

307:                                              ; preds = %298
  %308 = load i64, i64* %302, align 8
  %309 = load i64, i64* %299, align 8
  store atomic i64 %309, i64* %302 monotonic, align 8
  store atomic i64 %308, i64* %299 monotonic, align 8
  %310 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %311 = icmp eq i32 %310, 0
  br i1 %311, label %316, label %312

312:                                              ; preds = %307
  %313 = bitcast %"class.blink::Member"* %296 to i8**
  %314 = load i8*, i8** %313, align 8
  %315 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %314) #6
  br label %316

316:                                              ; preds = %312, %307
  %317 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %318 = icmp eq i32 %317, 0
  br i1 %318, label %323, label %319

319:                                              ; preds = %316
  %320 = bitcast %"class.blink::Member"* %294 to i8**
  %321 = load i8*, i8** %320, align 8
  %322 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %321) #6
  br label %323

323:                                              ; preds = %316, %319
  %324 = add i32 %295, 1
  br label %325

325:                                              ; preds = %293, %323, %298
  %326 = phi i32 [ %324, %323 ], [ %295, %298 ], [ %295, %293 ]
  %327 = icmp eq i32 %326, 0
  br i1 %327, label %328, label %335

328:                                              ; preds = %325
  %329 = tail call fastcc zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRN5blink12_GLOBAL__N_115PriorityCompareEPNS1_6MemberINS1_19SVGAnimationElementEEEEEbT0_S9_T_(%"class.blink::Member"* %17, %"class.blink::Member"* %296, %"struct.blink::(anonymous namespace)::PriorityCompare"* dereferenceable(8) %2)
  %330 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %296, i64 1
  %331 = tail call fastcc zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRN5blink12_GLOBAL__N_115PriorityCompareEPNS1_6MemberINS1_19SVGAnimationElementEEEEEbT0_S9_T_(%"class.blink::Member"* %330, %"class.blink::Member"* %6, %"struct.blink::(anonymous namespace)::PriorityCompare"* dereferenceable(8) %2)
  br i1 %331, label %332, label %334

332:                                              ; preds = %328
  br i1 %329, label %346, label %333

333:                                              ; preds = %332, %344
  br label %5

334:                                              ; preds = %328
  br i1 %329, label %342, label %335

335:                                              ; preds = %334, %325
  %336 = ptrtoint %"class.blink::Member"* %296 to i64
  %337 = sub i64 %336, %244
  %338 = sub i64 %13, %336
  %339 = icmp slt i64 %337, %338
  br i1 %339, label %340, label %344

340:                                              ; preds = %335
  tail call fastcc void @_ZNSt3__16__sortIRN5blink12_GLOBAL__N_115PriorityCompareEPNS1_6MemberINS1_19SVGAnimationElementEEEEEvT0_S9_T_(%"class.blink::Member"* %17, %"class.blink::Member"* %296, %"struct.blink::(anonymous namespace)::PriorityCompare"* dereferenceable(8) %2)
  %341 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %296, i64 1
  br label %342

342:                                              ; preds = %340, %334
  %343 = phi %"class.blink::Member"* [ %330, %334 ], [ %341, %340 ]
  br label %14

344:                                              ; preds = %335
  %345 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %296, i64 1
  tail call fastcc void @_ZNSt3__16__sortIRN5blink12_GLOBAL__N_115PriorityCompareEPNS1_6MemberINS1_19SVGAnimationElementEEEEEvT0_S9_T_(%"class.blink::Member"* %345, %"class.blink::Member"* %6, %"struct.blink::(anonymous namespace)::PriorityCompare"* dereferenceable(8) %2)
  br label %333

346:                                              ; preds = %332, %172, %16, %16, %142, %169, %110, %64, %43, %40, %21, %47, %51, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZNSt3__17__sort3IRN5blink12_GLOBAL__N_115PriorityCompareEPNS1_6MemberINS1_19SVGAnimationElementEEEEEjT0_S9_S9_T_(%"class.blink::Member"* nocapture, %"class.blink::Member"* nocapture, %"class.blink::Member"* nocapture, %"struct.blink::(anonymous namespace)::PriorityCompare"* nocapture readonly dereferenceable(8)) unnamed_addr #0 {
  %5 = bitcast %"class.blink::Member"* %1 to i64*
  %6 = bitcast %"class.blink::Member"* %1 to %"class.blink::SVGSMILElement"**
  %7 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %6, align 8
  %8 = bitcast %"class.blink::Member"* %0 to i64*
  %9 = bitcast %"class.blink::Member"* %0 to %"class.blink::SVGSMILElement"**
  %10 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %9, align 8
  %11 = getelementptr inbounds %"struct.blink::(anonymous namespace)::PriorityCompare", %"struct.blink::(anonymous namespace)::PriorityCompare"* %3, i64 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = tail call zeroext i1 @_ZNK5blink14SVGSMILElement20IsHigherPriorityThanEPKS0_NS_8SMILTimeE(%"class.blink::SVGSMILElement"* %10, %"class.blink::SVGSMILElement"* %7, i64 %12) #6
  %14 = bitcast %"class.blink::Member"* %2 to i64*
  %15 = bitcast %"class.blink::Member"* %2 to %"class.blink::SVGSMILElement"**
  %16 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %15, align 8
  %17 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %6, align 8
  %18 = load i64, i64* %11, align 8
  %19 = tail call zeroext i1 @_ZNK5blink14SVGSMILElement20IsHigherPriorityThanEPKS0_NS_8SMILTimeE(%"class.blink::SVGSMILElement"* %17, %"class.blink::SVGSMILElement"* %16, i64 %18) #6
  br i1 %13, label %58, label %20

20:                                               ; preds = %4
  br i1 %19, label %21, label %111

21:                                               ; preds = %20
  %22 = load i64, i64* %5, align 8
  %23 = load i64, i64* %14, align 8
  store atomic i64 %23, i64* %5 monotonic, align 8
  store atomic i64 %22, i64* %14 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %30, label %26

26:                                               ; preds = %21
  %27 = bitcast %"class.blink::Member"* %1 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %28) #6
  br label %30

30:                                               ; preds = %26, %21
  %31 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %30
  %34 = bitcast %"class.blink::Member"* %2 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %35) #6
  br label %37

37:                                               ; preds = %30, %33
  %38 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %6, align 8
  %39 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %9, align 8
  %40 = load i64, i64* %11, align 8
  %41 = tail call zeroext i1 @_ZNK5blink14SVGSMILElement20IsHigherPriorityThanEPKS0_NS_8SMILTimeE(%"class.blink::SVGSMILElement"* %39, %"class.blink::SVGSMILElement"* %38, i64 %40) #6
  br i1 %41, label %42, label %111

42:                                               ; preds = %37
  %43 = load i64, i64* %8, align 8
  %44 = load i64, i64* %5, align 8
  store atomic i64 %44, i64* %8 monotonic, align 8
  store atomic i64 %43, i64* %5 monotonic, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %42
  %48 = bitcast %"class.blink::Member"* %0 to i8**
  %49 = load i8*, i8** %48, align 8
  %50 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %49) #6
  br label %51

51:                                               ; preds = %47, %42
  %52 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %111, label %54

54:                                               ; preds = %51
  %55 = bitcast %"class.blink::Member"* %1 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %56) #6
  br label %111

58:                                               ; preds = %4
  %59 = load i64, i64* %8, align 8
  br i1 %19, label %60, label %75

60:                                               ; preds = %58
  %61 = load i64, i64* %14, align 8
  store atomic i64 %61, i64* %8 monotonic, align 8
  store atomic i64 %59, i64* %14 monotonic, align 8
  %62 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %68, label %64

64:                                               ; preds = %60
  %65 = bitcast %"class.blink::Member"* %0 to i8**
  %66 = load i8*, i8** %65, align 8
  %67 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %66) #6
  br label %68

68:                                               ; preds = %64, %60
  %69 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %111, label %71

71:                                               ; preds = %68
  %72 = bitcast %"class.blink::Member"* %2 to i8**
  %73 = load i8*, i8** %72, align 8
  %74 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %73) #6
  br label %111

75:                                               ; preds = %58
  %76 = load i64, i64* %5, align 8
  store atomic i64 %76, i64* %8 monotonic, align 8
  store atomic i64 %59, i64* %5 monotonic, align 8
  %77 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %83, label %79

79:                                               ; preds = %75
  %80 = bitcast %"class.blink::Member"* %0 to i8**
  %81 = load i8*, i8** %80, align 8
  %82 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %81) #6
  br label %83

83:                                               ; preds = %79, %75
  %84 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %90, label %86

86:                                               ; preds = %83
  %87 = bitcast %"class.blink::Member"* %1 to i8**
  %88 = load i8*, i8** %87, align 8
  %89 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %88) #6
  br label %90

90:                                               ; preds = %83, %86
  %91 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %15, align 8
  %92 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %6, align 8
  %93 = load i64, i64* %11, align 8
  %94 = tail call zeroext i1 @_ZNK5blink14SVGSMILElement20IsHigherPriorityThanEPKS0_NS_8SMILTimeE(%"class.blink::SVGSMILElement"* %92, %"class.blink::SVGSMILElement"* %91, i64 %93) #6
  br i1 %94, label %95, label %111

95:                                               ; preds = %90
  %96 = load i64, i64* %5, align 8
  %97 = load i64, i64* %14, align 8
  store atomic i64 %97, i64* %5 monotonic, align 8
  store atomic i64 %96, i64* %14 monotonic, align 8
  %98 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %104, label %100

100:                                              ; preds = %95
  %101 = bitcast %"class.blink::Member"* %1 to i8**
  %102 = load i8*, i8** %101, align 8
  %103 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %102) #6
  br label %104

104:                                              ; preds = %100, %95
  %105 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %111, label %107

107:                                              ; preds = %104
  %108 = bitcast %"class.blink::Member"* %2 to i8**
  %109 = load i8*, i8** %108, align 8
  %110 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %109) #6
  br label %111

111:                                              ; preds = %107, %104, %71, %68, %54, %51, %90, %37, %20
  %112 = phi i32 [ 0, %20 ], [ 1, %37 ], [ 1, %90 ], [ 2, %51 ], [ 2, %54 ], [ 1, %68 ], [ 1, %71 ], [ 2, %104 ], [ 2, %107 ]
  ret i32 %112
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZNSt3__17__sort4IRN5blink12_GLOBAL__N_115PriorityCompareEPNS1_6MemberINS1_19SVGAnimationElementEEEEEjT0_S9_S9_S9_T_(%"class.blink::Member"* nocapture, %"class.blink::Member"* nocapture, %"class.blink::Member"* nocapture, %"class.blink::Member"* nocapture, %"struct.blink::(anonymous namespace)::PriorityCompare"* nocapture readonly dereferenceable(8)) unnamed_addr #0 {
  %6 = tail call fastcc i32 @_ZNSt3__17__sort3IRN5blink12_GLOBAL__N_115PriorityCompareEPNS1_6MemberINS1_19SVGAnimationElementEEEEEjT0_S9_S9_T_(%"class.blink::Member"* %0, %"class.blink::Member"* %1, %"class.blink::Member"* %2, %"struct.blink::(anonymous namespace)::PriorityCompare"* dereferenceable(8) %4)
  %7 = bitcast %"class.blink::Member"* %3 to i64*
  %8 = bitcast %"class.blink::Member"* %3 to %"class.blink::SVGSMILElement"**
  %9 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %8, align 8
  %10 = bitcast %"class.blink::Member"* %2 to i64*
  %11 = bitcast %"class.blink::Member"* %2 to %"class.blink::SVGSMILElement"**
  %12 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %11, align 8
  %13 = getelementptr inbounds %"struct.blink::(anonymous namespace)::PriorityCompare", %"struct.blink::(anonymous namespace)::PriorityCompare"* %4, i64 0, i32 0, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = tail call zeroext i1 @_ZNK5blink14SVGSMILElement20IsHigherPriorityThanEPKS0_NS_8SMILTimeE(%"class.blink::SVGSMILElement"* %12, %"class.blink::SVGSMILElement"* %9, i64 %14) #6
  br i1 %15, label %16, label %82

16:                                               ; preds = %5
  %17 = load i64, i64* %10, align 8
  %18 = load i64, i64* %7, align 8
  store atomic i64 %18, i64* %10 monotonic, align 8
  store atomic i64 %17, i64* %7 monotonic, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.blink::Member"* %2 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %23) #6
  br label %25

25:                                               ; preds = %21, %16
  %26 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %25
  %29 = bitcast %"class.blink::Member"* %3 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %30) #6
  br label %32

32:                                               ; preds = %25, %28
  %33 = add i32 %6, 1
  %34 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %11, align 8
  %35 = bitcast %"class.blink::Member"* %1 to i64*
  %36 = bitcast %"class.blink::Member"* %1 to %"class.blink::SVGSMILElement"**
  %37 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %36, align 8
  %38 = load i64, i64* %13, align 8
  %39 = tail call zeroext i1 @_ZNK5blink14SVGSMILElement20IsHigherPriorityThanEPKS0_NS_8SMILTimeE(%"class.blink::SVGSMILElement"* %37, %"class.blink::SVGSMILElement"* %34, i64 %38) #6
  br i1 %39, label %40, label %82

40:                                               ; preds = %32
  %41 = load i64, i64* %35, align 8
  %42 = load i64, i64* %10, align 8
  store atomic i64 %42, i64* %35 monotonic, align 8
  store atomic i64 %41, i64* %10 monotonic, align 8
  %43 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %40
  %46 = bitcast %"class.blink::Member"* %1 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #6
  br label %49

49:                                               ; preds = %45, %40
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %56, label %52

52:                                               ; preds = %49
  %53 = bitcast %"class.blink::Member"* %2 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %54) #6
  br label %56

56:                                               ; preds = %49, %52
  %57 = add i32 %6, 2
  %58 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %36, align 8
  %59 = bitcast %"class.blink::Member"* %0 to i64*
  %60 = bitcast %"class.blink::Member"* %0 to %"class.blink::SVGSMILElement"**
  %61 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %60, align 8
  %62 = load i64, i64* %13, align 8
  %63 = tail call zeroext i1 @_ZNK5blink14SVGSMILElement20IsHigherPriorityThanEPKS0_NS_8SMILTimeE(%"class.blink::SVGSMILElement"* %61, %"class.blink::SVGSMILElement"* %58, i64 %62) #6
  br i1 %63, label %64, label %82

64:                                               ; preds = %56
  %65 = load i64, i64* %59, align 8
  %66 = load i64, i64* %35, align 8
  store atomic i64 %66, i64* %59 monotonic, align 8
  store atomic i64 %65, i64* %35 monotonic, align 8
  %67 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %73, label %69

69:                                               ; preds = %64
  %70 = bitcast %"class.blink::Member"* %0 to i8**
  %71 = load i8*, i8** %70, align 8
  %72 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %71) #6
  br label %73

73:                                               ; preds = %69, %64
  %74 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %80, label %76

76:                                               ; preds = %73
  %77 = bitcast %"class.blink::Member"* %1 to i8**
  %78 = load i8*, i8** %77, align 8
  %79 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %78) #6
  br label %80

80:                                               ; preds = %73, %76
  %81 = add i32 %6, 3
  br label %82

82:                                               ; preds = %32, %80, %56, %5
  %83 = phi i32 [ %81, %80 ], [ %57, %56 ], [ %33, %32 ], [ %6, %5 ]
  ret i32 %83
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZNSt3__17__sort5IRN5blink12_GLOBAL__N_115PriorityCompareEPNS1_6MemberINS1_19SVGAnimationElementEEEEEjT0_S9_S9_S9_S9_T_(%"class.blink::Member"* nocapture, %"class.blink::Member"* nocapture, %"class.blink::Member"* nocapture, %"class.blink::Member"* nocapture, %"class.blink::Member"* nocapture, %"struct.blink::(anonymous namespace)::PriorityCompare"* nocapture readonly dereferenceable(8)) unnamed_addr #0 {
  %7 = tail call fastcc i32 @_ZNSt3__17__sort4IRN5blink12_GLOBAL__N_115PriorityCompareEPNS1_6MemberINS1_19SVGAnimationElementEEEEEjT0_S9_S9_S9_T_(%"class.blink::Member"* %0, %"class.blink::Member"* %1, %"class.blink::Member"* %2, %"class.blink::Member"* %3, %"struct.blink::(anonymous namespace)::PriorityCompare"* dereferenceable(8) %5)
  %8 = bitcast %"class.blink::Member"* %4 to i64*
  %9 = bitcast %"class.blink::Member"* %4 to %"class.blink::SVGSMILElement"**
  %10 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %9, align 8
  %11 = bitcast %"class.blink::Member"* %3 to i64*
  %12 = bitcast %"class.blink::Member"* %3 to %"class.blink::SVGSMILElement"**
  %13 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %12, align 8
  %14 = getelementptr inbounds %"struct.blink::(anonymous namespace)::PriorityCompare", %"struct.blink::(anonymous namespace)::PriorityCompare"* %5, i64 0, i32 0, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = tail call zeroext i1 @_ZNK5blink14SVGSMILElement20IsHigherPriorityThanEPKS0_NS_8SMILTimeE(%"class.blink::SVGSMILElement"* %13, %"class.blink::SVGSMILElement"* %10, i64 %15) #6
  br i1 %16, label %17, label %107

17:                                               ; preds = %6
  %18 = load i64, i64* %11, align 8
  %19 = load i64, i64* %8, align 8
  store atomic i64 %19, i64* %11 monotonic, align 8
  store atomic i64 %18, i64* %8 monotonic, align 8
  %20 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %17
  %23 = bitcast %"class.blink::Member"* %3 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %24) #6
  br label %26

26:                                               ; preds = %22, %17
  %27 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %33, label %29

29:                                               ; preds = %26
  %30 = bitcast %"class.blink::Member"* %4 to i8**
  %31 = load i8*, i8** %30, align 8
  %32 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %31) #6
  br label %33

33:                                               ; preds = %26, %29
  %34 = add i32 %7, 1
  %35 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %12, align 8
  %36 = bitcast %"class.blink::Member"* %2 to i64*
  %37 = bitcast %"class.blink::Member"* %2 to %"class.blink::SVGSMILElement"**
  %38 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %37, align 8
  %39 = load i64, i64* %14, align 8
  %40 = tail call zeroext i1 @_ZNK5blink14SVGSMILElement20IsHigherPriorityThanEPKS0_NS_8SMILTimeE(%"class.blink::SVGSMILElement"* %38, %"class.blink::SVGSMILElement"* %35, i64 %39) #6
  br i1 %40, label %41, label %107

41:                                               ; preds = %33
  %42 = load i64, i64* %36, align 8
  %43 = load i64, i64* %11, align 8
  store atomic i64 %43, i64* %36 monotonic, align 8
  store atomic i64 %42, i64* %11 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %50, label %46

46:                                               ; preds = %41
  %47 = bitcast %"class.blink::Member"* %2 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #6
  br label %50

50:                                               ; preds = %46, %41
  %51 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %57, label %53

53:                                               ; preds = %50
  %54 = bitcast %"class.blink::Member"* %3 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %55) #6
  br label %57

57:                                               ; preds = %50, %53
  %58 = add i32 %7, 2
  %59 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %37, align 8
  %60 = bitcast %"class.blink::Member"* %1 to i64*
  %61 = bitcast %"class.blink::Member"* %1 to %"class.blink::SVGSMILElement"**
  %62 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %61, align 8
  %63 = load i64, i64* %14, align 8
  %64 = tail call zeroext i1 @_ZNK5blink14SVGSMILElement20IsHigherPriorityThanEPKS0_NS_8SMILTimeE(%"class.blink::SVGSMILElement"* %62, %"class.blink::SVGSMILElement"* %59, i64 %63) #6
  br i1 %64, label %65, label %107

65:                                               ; preds = %57
  %66 = load i64, i64* %60, align 8
  %67 = load i64, i64* %36, align 8
  store atomic i64 %67, i64* %60 monotonic, align 8
  store atomic i64 %66, i64* %36 monotonic, align 8
  %68 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %74, label %70

70:                                               ; preds = %65
  %71 = bitcast %"class.blink::Member"* %1 to i8**
  %72 = load i8*, i8** %71, align 8
  %73 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %72) #6
  br label %74

74:                                               ; preds = %70, %65
  %75 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %81, label %77

77:                                               ; preds = %74
  %78 = bitcast %"class.blink::Member"* %2 to i8**
  %79 = load i8*, i8** %78, align 8
  %80 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %79) #6
  br label %81

81:                                               ; preds = %74, %77
  %82 = add i32 %7, 3
  %83 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %61, align 8
  %84 = bitcast %"class.blink::Member"* %0 to i64*
  %85 = bitcast %"class.blink::Member"* %0 to %"class.blink::SVGSMILElement"**
  %86 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %85, align 8
  %87 = load i64, i64* %14, align 8
  %88 = tail call zeroext i1 @_ZNK5blink14SVGSMILElement20IsHigherPriorityThanEPKS0_NS_8SMILTimeE(%"class.blink::SVGSMILElement"* %86, %"class.blink::SVGSMILElement"* %83, i64 %87) #6
  br i1 %88, label %89, label %107

89:                                               ; preds = %81
  %90 = load i64, i64* %84, align 8
  %91 = load i64, i64* %60, align 8
  store atomic i64 %91, i64* %84 monotonic, align 8
  store atomic i64 %90, i64* %60 monotonic, align 8
  %92 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %98, label %94

94:                                               ; preds = %89
  %95 = bitcast %"class.blink::Member"* %0 to i8**
  %96 = load i8*, i8** %95, align 8
  %97 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %96) #6
  br label %98

98:                                               ; preds = %94, %89
  %99 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %105, label %101

101:                                              ; preds = %98
  %102 = bitcast %"class.blink::Member"* %1 to i8**
  %103 = load i8*, i8** %102, align 8
  %104 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %103) #6
  br label %105

105:                                              ; preds = %98, %101
  %106 = add i32 %7, 4
  br label %107

107:                                              ; preds = %33, %81, %105, %57, %6
  %108 = phi i32 [ %106, %105 ], [ %82, %81 ], [ %58, %57 ], [ %34, %33 ], [ %7, %6 ]
  ret i32 %108
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRN5blink12_GLOBAL__N_115PriorityCompareEPNS1_6MemberINS1_19SVGAnimationElementEEEEEbT0_S9_T_(%"class.blink::Member"*, %"class.blink::Member"*, %"struct.blink::(anonymous namespace)::PriorityCompare"* nocapture readonly dereferenceable(8)) unnamed_addr #0 {
  %4 = ptrtoint %"class.blink::Member"* %1 to i64
  %5 = ptrtoint %"class.blink::Member"* %0 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  switch i64 %7, label %50 [
    i64 0, label %109
    i64 1, label %109
    i64 2, label %8
    i64 3, label %35
    i64 4, label %39
    i64 5, label %44
  ]

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %1, i64 -1
  %10 = bitcast %"class.blink::Member"* %9 to i64*
  %11 = bitcast %"class.blink::Member"* %9 to %"class.blink::SVGSMILElement"**
  %12 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %11, align 8
  %13 = bitcast %"class.blink::Member"* %0 to i64*
  %14 = bitcast %"class.blink::Member"* %0 to %"class.blink::SVGSMILElement"**
  %15 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %14, align 8
  %16 = getelementptr inbounds %"struct.blink::(anonymous namespace)::PriorityCompare", %"struct.blink::(anonymous namespace)::PriorityCompare"* %2, i64 0, i32 0, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = tail call zeroext i1 @_ZNK5blink14SVGSMILElement20IsHigherPriorityThanEPKS0_NS_8SMILTimeE(%"class.blink::SVGSMILElement"* %15, %"class.blink::SVGSMILElement"* %12, i64 %17) #6
  br i1 %18, label %19, label %109

19:                                               ; preds = %8
  %20 = load i64, i64* %13, align 8
  %21 = load i64, i64* %10, align 8
  store atomic i64 %21, i64* %13 monotonic, align 8
  store atomic i64 %20, i64* %10 monotonic, align 8
  %22 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %19
  %25 = bitcast %"class.blink::Member"* %0 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #6
  br label %28

28:                                               ; preds = %24, %19
  %29 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %109, label %31

31:                                               ; preds = %28
  %32 = bitcast %"class.blink::Member"* %9 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %33) #6
  br label %109

35:                                               ; preds = %3
  %36 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 1
  %37 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %1, i64 -1
  %38 = tail call fastcc i32 @_ZNSt3__17__sort3IRN5blink12_GLOBAL__N_115PriorityCompareEPNS1_6MemberINS1_19SVGAnimationElementEEEEEjT0_S9_S9_T_(%"class.blink::Member"* %0, %"class.blink::Member"* %36, %"class.blink::Member"* %37, %"struct.blink::(anonymous namespace)::PriorityCompare"* dereferenceable(8) %2)
  br label %109

39:                                               ; preds = %3
  %40 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 1
  %41 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 2
  %42 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %1, i64 -1
  %43 = tail call fastcc i32 @_ZNSt3__17__sort4IRN5blink12_GLOBAL__N_115PriorityCompareEPNS1_6MemberINS1_19SVGAnimationElementEEEEEjT0_S9_S9_S9_T_(%"class.blink::Member"* %0, %"class.blink::Member"* %40, %"class.blink::Member"* %41, %"class.blink::Member"* %42, %"struct.blink::(anonymous namespace)::PriorityCompare"* dereferenceable(8) %2)
  br label %109

44:                                               ; preds = %3
  %45 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 1
  %46 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 2
  %47 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 3
  %48 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %1, i64 -1
  %49 = tail call fastcc i32 @_ZNSt3__17__sort5IRN5blink12_GLOBAL__N_115PriorityCompareEPNS1_6MemberINS1_19SVGAnimationElementEEEEEjT0_S9_S9_S9_S9_T_(%"class.blink::Member"* %0, %"class.blink::Member"* %45, %"class.blink::Member"* %46, %"class.blink::Member"* %47, %"class.blink::Member"* %48, %"struct.blink::(anonymous namespace)::PriorityCompare"* dereferenceable(8) %2)
  br label %109

50:                                               ; preds = %3
  %51 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 2
  %52 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 1
  %53 = tail call fastcc i32 @_ZNSt3__17__sort3IRN5blink12_GLOBAL__N_115PriorityCompareEPNS1_6MemberINS1_19SVGAnimationElementEEEEEjT0_S9_S9_T_(%"class.blink::Member"* %0, %"class.blink::Member"* %52, %"class.blink::Member"* %51, %"struct.blink::(anonymous namespace)::PriorityCompare"* dereferenceable(8) %2)
  %54 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 3
  %55 = icmp eq %"class.blink::Member"* %54, %1
  br i1 %55, label %109, label %56

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"struct.blink::(anonymous namespace)::PriorityCompare", %"struct.blink::(anonymous namespace)::PriorityCompare"* %2, i64 0, i32 0, i32 0, i32 0
  br label %58

58:                                               ; preds = %56, %102
  %59 = phi %"class.blink::Member"* [ %54, %56 ], [ %104, %102 ]
  %60 = phi i32 [ 0, %56 ], [ %103, %102 ]
  %61 = phi %"class.blink::Member"* [ %51, %56 ], [ %59, %102 ]
  %62 = bitcast %"class.blink::Member"* %59 to %"class.blink::SVGSMILElement"**
  %63 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %62, align 8
  %64 = bitcast %"class.blink::Member"* %61 to %"class.blink::SVGSMILElement"**
  %65 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %64, align 8
  %66 = load i64, i64* %57, align 8
  %67 = tail call zeroext i1 @_ZNK5blink14SVGSMILElement20IsHigherPriorityThanEPKS0_NS_8SMILTimeE(%"class.blink::SVGSMILElement"* %65, %"class.blink::SVGSMILElement"* %63, i64 %66) #6
  br i1 %67, label %68, label %102

68:                                               ; preds = %58
  %69 = bitcast %"class.blink::Member"* %59 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = inttoptr i64 %70 to %"class.blink::SVGSMILElement"*
  br label %72

72:                                               ; preds = %85, %68
  %73 = phi %"class.blink::Member"* [ %59, %68 ], [ %74, %85 ]
  %74 = phi %"class.blink::Member"* [ %61, %68 ], [ %86, %85 ]
  %75 = bitcast %"class.blink::Member"* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"class.blink::Member"* %73 to i64*
  store atomic i64 %76, i64* %77 monotonic, align 8
  %78 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %83, label %80

80:                                               ; preds = %72
  %81 = inttoptr i64 %76 to i8*
  %82 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %81) #6
  br label %83

83:                                               ; preds = %72, %80
  %84 = icmp eq %"class.blink::Member"* %74, %0
  br i1 %84, label %91, label %85

85:                                               ; preds = %83
  %86 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %74, i64 -1
  %87 = bitcast %"class.blink::Member"* %86 to %"class.blink::SVGSMILElement"**
  %88 = load %"class.blink::SVGSMILElement"*, %"class.blink::SVGSMILElement"** %87, align 8
  %89 = load i64, i64* %57, align 8
  %90 = tail call zeroext i1 @_ZNK5blink14SVGSMILElement20IsHigherPriorityThanEPKS0_NS_8SMILTimeE(%"class.blink::SVGSMILElement"* %88, %"class.blink::SVGSMILElement"* %71, i64 %89) #6
  br i1 %90, label %72, label %91

91:                                               ; preds = %83, %85
  %92 = phi %"class.blink::Member"* [ %74, %85 ], [ %0, %83 ]
  %93 = bitcast %"class.blink::Member"* %92 to i64*
  store atomic i64 %70, i64* %93 monotonic, align 8
  %94 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %99, label %96

96:                                               ; preds = %91
  %97 = inttoptr i64 %70 to i8*
  %98 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %97) #6
  br label %99

99:                                               ; preds = %91, %96
  %100 = add i32 %60, 1
  %101 = icmp eq i32 %100, 8
  br i1 %101, label %106, label %102

102:                                              ; preds = %99, %58
  %103 = phi i32 [ %100, %99 ], [ %60, %58 ]
  %104 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %59, i64 1
  %105 = icmp eq %"class.blink::Member"* %104, %1
  br i1 %105, label %109, label %58

106:                                              ; preds = %99
  %107 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %59, i64 1
  %108 = icmp eq %"class.blink::Member"* %107, %1
  br label %109

109:                                              ; preds = %102, %106, %50, %31, %28, %8, %3, %3, %44, %39, %35
  %110 = phi i1 [ true, %44 ], [ true, %39 ], [ true, %35 ], [ true, %3 ], [ true, %3 ], [ true, %8 ], [ true, %28 ], [ true, %31 ], [ true, %50 ], [ %108, %106 ], [ true, %102 ]
  ret i1 %110
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_19SVGAnimationElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #6
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #6
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_19SVGAnimationElementEEEEEmm(i64 %14) #6
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_19SVGAnimationElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #6
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member"*, %"class.blink::Member"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !3

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #6
  %33 = bitcast %"class.WTF::Vector"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #6
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #6
  %42 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #6
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_19SVGAnimationElementEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #6
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #6
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.4, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #6
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #6
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6
  %20 = shl i64 %0, 3
  ret i64 %20
}

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_19SVGAnimationElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #6
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #6
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.6, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #6
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #6
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_19SVGAnimationElementEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_19SVGAnimationElementEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %6 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_19SVGAnimationElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %10 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %9, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_19SVGAnimationElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_19SVGAnimationElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #6
  br label %11

11:                                               ; preds = %1, %8
  %12 = phi i32 [ %6, %1 ], [ %10, %8 ]
  %13 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %5, i64 0, i32 19, i64 4
  %14 = bitcast %"class.blink::BaseArena"** %13 to %"class.blink::NormalPageArena"**
  %15 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %14, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #6
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #6
  %19 = icmp ult i64 %0, -8
  br i1 %19, label %20, label %21

20:                                               ; preds = %11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #6
  store i8* null, i8** %17, align 8
  br label %31

21:                                               ; preds = %11
  %22 = add nsw i64 %0, 8
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %22) #6
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), i8* %23, i8* %24) #6
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #6
  store i8* %26, i8** %17, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %21
  %29 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.8, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #6
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #6
  br label %31

31:                                               ; preds = %20, %21, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #6
  %32 = add i64 %0, 15
  %33 = and i64 %32, -8
  %34 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %15, i64 0, i32 4
  %35 = load i64, i64* %34, align 8
  %36 = icmp ult i64 %35, %33
  br i1 %36, label %69, label %37, !prof !2

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %15, i64 0, i32 3
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr inbounds i8, i8* %39, i64 %33
  store i8* %40, i8** %38, align 8
  %41 = sub i64 %35, %33
  store i64 %41, i64* %34, align 8
  %42 = bitcast i8* %39 to i32*
  store i32 0, i32* %42, align 4
  %43 = getelementptr inbounds i8, i8* %39, i64 4
  %44 = bitcast i8* %43 to i16*
  %45 = trunc i32 %12 to i16
  %46 = shl i16 %45, 2
  store atomic i16 %46, i16* %44 monotonic, align 2
  %47 = lshr exact i64 %33, 1
  %48 = trunc i64 %47 to i16
  %49 = getelementptr inbounds i8, i8* %39, i64 6
  %50 = bitcast i8* %49 to i16*
  store i16 %48, i16* %50, align 2
  %51 = ptrtoint i8* %39 to i64
  %52 = and i64 %51, -131072
  %53 = inttoptr i64 %52 to i8*
  %54 = getelementptr inbounds i8, i8* %53, i64 4400
  %55 = bitcast i8* %54 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %56 = bitcast i8* %54 to i64*
  %57 = load i64, i64* %56, align 16
  %58 = sub i64 %51, %57
  %59 = lshr i64 %58, 3
  %60 = lshr i64 %58, 6
  %61 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %55, i64 0, i32 0, i32 1, i64 %60
  %62 = load i8, i8* %61, align 1
  %63 = trunc i64 %59 to i32
  %64 = and i32 %63, 7
  %65 = shl i32 1, %64
  %66 = trunc i32 %65 to i8
  %67 = or i8 %62, %66
  store atomic i8 %67, i8* %61 release, align 1
  %68 = getelementptr inbounds i8, i8* %39, i64 8
  br label %72

69:                                               ; preds = %31
  %70 = zext i32 %12 to i64
  %71 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %15, i64 %33, i64 %70) #6
  br label %72

72:                                               ; preds = %37, %69
  %73 = phi i8* [ %68, %37 ], [ %71, %69 ]
  ret i8* %73
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_19SVGAnimationElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %28
  %30 = bitcast %"class.blink::Member"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_19SVGAnimationElementEE5TraceEPNS_7VisitorEPKv) #6
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_19SVGAnimationElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_19SVGAnimationElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SVGSMILElement"*
  %4 = bitcast i8* %1 to void (%"class.blink::SVGSMILElement"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::SVGSMILElement"*, %"class.blink::Visitor"*)**, void (%"class.blink::SVGSMILElement"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::SVGSMILElement"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGSMILElement"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::SVGSMILElement"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGSMILElement"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::SVGSMILElement"* %3, %"class.blink::Visitor"* %0) #6
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_19SVGAnimationElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector"*, %"class.blink::Member"* dereferenceable(8)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Member"*, %"class.blink::Member"** %6, align 8
  %8 = icmp ugt %"class.blink::Member"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %7, i64 %10
  %12 = icmp ugt %"class.blink::Member"* %11, %1
  br i1 %12, label %24, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_19SVGAnimationElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %22) #6
  %23 = load %"class.blink::Member"*, %"class.blink::Member"** %6, align 8
  br label %40

24:                                               ; preds = %9
  %25 = ptrtoint %"class.blink::Member"* %1 to i64
  %26 = ptrtoint %"class.blink::Member"* %7 to i64
  %27 = sub i64 %25, %26
  %28 = ashr exact i64 %27, 3
  %29 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = lshr i32 %30, 2
  %32 = add i32 %30, 1
  %33 = add i32 %32, %31
  %34 = icmp ugt i32 %33, 4
  %35 = select i1 %34, i32 %33, i32 4
  %36 = icmp ugt i32 %35, %5
  %37 = select i1 %36, i32 %35, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_19SVGAnimationElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %37) #6
  %38 = load %"class.blink::Member"*, %"class.blink::Member"** %6, align 8
  %39 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %38, i64 %28
  br label %40

40:                                               ; preds = %13, %24
  %41 = phi %"class.blink::Member"* [ %23, %13 ], [ %38, %24 ]
  %42 = phi %"class.blink::Member"* [ %1, %13 ], [ %39, %24 ]
  %43 = load i32, i32* %3, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %41, i64 %44
  %46 = bitcast %"class.blink::Member"* %42 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.blink::Member"* %45 to i64*
  store atomic i64 %47, i64* %48 monotonic, align 8
  %49 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %40
  %52 = inttoptr i64 %47 to i8*
  %53 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %52) #6
  br label %54

54:                                               ; preds = %40, %51
  %55 = load i32, i32* %3, align 4
  %56 = add i32 %55, 1
  store i32 %56, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_19SVGAnimationElementEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #6
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i64 0, i64 0), i8* %14, i8* %15) #6
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #6
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #6
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member"*, %"class.blink::Member"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %24, i64 %25
  ret %"class.blink::Member"* %26
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
