; ModuleID = '../../third_party/skia/src/gpu/glsl/GrGLSLXferProcessor.cpp'
source_filename = "../../third_party/skia/src/gpu/glsl/GrGLSLXferProcessor.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrGLSLXferProcessor = type { i32 (...)**, %class.GrResourceHandle, %class.GrResourceHandle }
%class.GrResourceHandle = type { i32 }
%"struct.GrGLSLXferProcessor::EmitArgs" = type <{ %class.GrGLSLXPFragmentBuilder*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*, %class.GrXferProcessor*, i8*, i8*, i8*, i8*, i32, %class.GrResourceHandle.10, i32, %class.GrSwizzle, [2 x i8] }>
%class.GrGLSLXPFragmentBuilder = type { i32 (...)**, [8 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }
%class.GrGLSLShaderBuilder.base = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.2, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.8], i32, i8, [3 x i8], i32 }>
%class.GrGLSLProgramBuilder = type opaque
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [120 x i8] }
%class.SkTArray = type { %class.SkString*, i64 }
%class.SkString = type { %class.sk_sp }
%class.sk_sp = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkSTArray.2 = type { %class.SkAlignedSTStorage.3, %class.SkTArray.4 }
%class.SkAlignedSTStorage.3 = type { [16 x i8] }
%class.SkTArray.4 = type { %"class.std::__1::unique_ptr"*, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.SkSL::Statement"* }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%class.GrTBlockList = type { %class.GrSBlockAllocator }
%class.GrSBlockAllocator = type { [88 x i8], [8 x i8] }
%class.SkSTArray.8 = type { %class.SkAlignedSTStorage.9, %class.SkTArray }
%class.SkAlignedSTStorage.9 = type { [8 x i8] }
%class.GrGLSLUniformHandler = type { i32 (...)**, %class.GrGLSLProgramBuilder* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.GrXferProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef, i8, i8, [2 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.GrNonAtomicRef = type { i32 }
%class.GrResourceHandle.10 = type { i32 }
%class.GrSwizzle = type { i16 }
%class.GrGLSLShaderBuilder = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.2, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.8], i32, i8, [3 x i8], i32, [12 x i8] }>
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray.11, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.SkSTArray.11 = type { %class.SkAlignedSTStorage.12, %class.SkTArray.13 }
%class.SkAlignedSTStorage.12 = type { [8 x i8] }
%class.SkTArray.13 = type { %"class.std::__1::unique_ptr.14"*, i64 }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %class.GrFragmentProcessor* }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%class.GrGLSLColorSpaceXformHelper = type opaque
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%class.GrGLSLProgramDataManager = type { i32 (...)** }
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.22 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon.20, [4 x i8] }>
%union.anon.20 = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.21, i8* }
%class.sk_sp.21 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.22 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.23, void (i8*)*, i8* }
%class.SkNVRefCnt.23 = type { %"struct.std::__1::atomic" }
%struct.SkIPoint = type { i32, i32 }

$_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz = comdat any

$_ZN19GrGLSLXferProcessorD2Ev = comdat any

$_ZN19GrGLSLXferProcessorD0Ev = comdat any

$_ZN19GrGLSLXferProcessor24emitOutputsForBlendStateERKNS_8EmitArgsE = comdat any

$_ZN19GrGLSLXferProcessor23emitBlendCodeForDstReadEP23GrGLSLXPFragmentBuilderP20GrGLSLUniformHandlerPKcS5_S5_S5_S5_RK15GrXferProcessor = comdat any

$_ZN9GrSwizzleC2EPKc = comdat any

@.str = private unnamed_addr constant [57 x i8] c"if (all(lessThanEqual(%s.rgb, half3(0)))) {    discard;}\00", align 1
@.str.1 = private unnamed_addr constant [20 x i8] c"DstTextureUpperLeft\00", align 1
@.str.2 = private unnamed_addr constant [21 x i8] c"DstTextureCoordScale\00", align 1
@.str.3 = private unnamed_addr constant [45 x i8] c"// Read color from copy of the destination.\0A\00", align 1
@.str.4 = private unnamed_addr constant [57 x i8] c"half2 _dstTexCoord = (half2(sk_FragCoord.xy) - %s) * %s;\00", align 1
@.str.5 = private unnamed_addr constant [39 x i8] c"_dstTexCoord.y = 1.0 - _dstTexCoord.y;\00", align 1
@.str.6 = private unnamed_addr constant [12 x i8] c"half4 %s = \00", align 1
@.str.7 = private unnamed_addr constant [13 x i8] c"_dstTexCoord\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c";\00", align 1
@.str.9 = private unnamed_addr constant [15 x i8] c"_localColorOut\00", align 1
@.str.10 = private unnamed_addr constant [10 x i8] c"half4 %s;\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c"%s = %s;\00", align 1
@.str.12 = private unnamed_addr constant [12 x i8] c"%s = %s.%s;\00", align 1
@.str.13 = private unnamed_addr constant [45 x i8] c"half3 lerpRGB = mix(%s.aaa, %s.aaa, %s.rgb);\00", align 1
@.str.14 = private unnamed_addr constant [39 x i8] c"%s = %s * %s + (half4(1.0) - %s) * %s;\00", align 1
@.str.15 = private unnamed_addr constant [50 x i8] c"%s.a = max(max(lerpRGB.r, lerpRGB.b), lerpRGB.g);\00", align 1
@_ZTV19GrGLSLXferProcessor = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLXferProcessor*)* @_ZN19GrGLSLXferProcessorD2Ev to i8*), i8* bitcast (void (%class.GrGLSLXferProcessor*)* @_ZN19GrGLSLXferProcessorD0Ev to i8*), i8* bitcast (void (%class.GrGLSLXferProcessor*, %"struct.GrGLSLXferProcessor::EmitArgs"*)* @_ZN19GrGLSLXferProcessor24emitOutputsForBlendStateERKNS_8EmitArgsE to i8*), i8* bitcast (void (%class.GrGLSLXferProcessor*, %class.GrGLSLXPFragmentBuilder*, %class.GrGLSLUniformHandler*, i8*, i8*, i8*, i8*, i8*, %class.GrXferProcessor*)* @_ZN19GrGLSLXferProcessor23emitBlendCodeForDstReadEP23GrGLSLXPFragmentBuilderP20GrGLSLUniformHandlerPKcS5_S5_S5_S5_RK15GrXferProcessor to i8*), i8* bitcast (void (%class.GrGLSLXferProcessor*, %class.GrGLSLXPFragmentBuilder*, %class.GrSwizzle*, i8*, i8*)* @_ZNK19GrGLSLXferProcessor16emitWriteSwizzleEP23GrGLSLXPFragmentBuilderRK9GrSwizzlePKcS6_ to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@.str.16 = private unnamed_addr constant [35 x i8] c"%s.a = max(max(%s.r, %s.g), %s.b);\00", align 1
@.str.18 = private unnamed_addr constant [5 x i8] c"rgba\00", align 1
@.str.19 = private unnamed_addr constant [58 x i8] c"../../third_party/skia/src/gpu/glsl/GrGLSLXferProcessor.h\00", align 1
@.str.20 = private unnamed_addr constant [42 x i8] c"emitOutputsForBlendState not implemented.\00", align 1
@.str.21 = private unnamed_addr constant [41 x i8] c"emitBlendCodeForDstRead not implemented.\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19GrGLSLXferProcessor8emitCodeERKNS_8EmitArgsE(%class.GrGLSLXferProcessor*, %"struct.GrGLSLXferProcessor::EmitArgs"* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = getelementptr inbounds %"struct.GrGLSLXferProcessor::EmitArgs", %"struct.GrGLSLXferProcessor::EmitArgs"* %1, i64 0, i32 3
  %6 = load %class.GrXferProcessor*, %class.GrXferProcessor** %5, align 8
  %7 = getelementptr inbounds %class.GrXferProcessor, %class.GrXferProcessor* %6, i64 0, i32 2
  %8 = load i8, i8* %7, align 4, !range !2
  %9 = icmp eq i8 %8, 0
  %10 = getelementptr inbounds %"struct.GrGLSLXferProcessor::EmitArgs", %"struct.GrGLSLXferProcessor::EmitArgs"* %1, i64 0, i32 0
  %11 = load %class.GrGLSLXPFragmentBuilder*, %class.GrGLSLXPFragmentBuilder** %10, align 8
  br i1 %9, label %12, label %34

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"struct.GrGLSLXferProcessor::EmitArgs", %"struct.GrGLSLXferProcessor::EmitArgs"* %1, i64 0, i32 5
  %14 = load i8*, i8** %13, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %class.GrXferProcessor, %class.GrXferProcessor* %6, i64 0, i32 3
  %18 = load i8, i8* %17, align 1, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %29, label %20

20:                                               ; preds = %16
  %21 = bitcast %class.GrGLSLXPFragmentBuilder* %11 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr i8, i8* %22, i64 -24
  %24 = bitcast i8* %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %class.GrGLSLXPFragmentBuilder* %11 to i8*
  %27 = getelementptr inbounds i8, i8* %26, i64 %25
  %28 = bitcast i8* %27 to %class.GrGLSLShaderBuilder*
  tail call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %28, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.16, i64 0, i64 0), i8* nonnull %14, i8* nonnull %14, i8* nonnull %14, i8* nonnull %14) #4
  br label %29

29:                                               ; preds = %12, %16, %20
  %30 = bitcast %class.GrGLSLXferProcessor* %0 to void (%class.GrGLSLXferProcessor*, %"struct.GrGLSLXferProcessor::EmitArgs"*)***
  %31 = load void (%class.GrGLSLXferProcessor*, %"struct.GrGLSLXferProcessor::EmitArgs"*)**, void (%class.GrGLSLXferProcessor*, %"struct.GrGLSLXferProcessor::EmitArgs"*)*** %30, align 8
  %32 = getelementptr inbounds void (%class.GrGLSLXferProcessor*, %"struct.GrGLSLXferProcessor::EmitArgs"*)*, void (%class.GrGLSLXferProcessor*, %"struct.GrGLSLXferProcessor::EmitArgs"*)** %31, i64 2
  %33 = load void (%class.GrGLSLXferProcessor*, %"struct.GrGLSLXferProcessor::EmitArgs"*)*, void (%class.GrGLSLXferProcessor*, %"struct.GrGLSLXferProcessor::EmitArgs"*)** %32, align 8
  tail call void %33(%class.GrGLSLXferProcessor* %0, %"struct.GrGLSLXferProcessor::EmitArgs"* dereferenceable(80) %1) #4
  br label %217

34:                                               ; preds = %2
  %35 = getelementptr inbounds %"struct.GrGLSLXferProcessor::EmitArgs", %"struct.GrGLSLXferProcessor::EmitArgs"* %1, i64 0, i32 1
  %36 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %35, align 8
  %37 = bitcast %class.GrGLSLXPFragmentBuilder* %11 to i8* (%class.GrGLSLXPFragmentBuilder*)***
  %38 = load i8* (%class.GrGLSLXPFragmentBuilder*)**, i8* (%class.GrGLSLXPFragmentBuilder*)*** %37, align 8
  %39 = getelementptr inbounds i8* (%class.GrGLSLXPFragmentBuilder*)*, i8* (%class.GrGLSLXPFragmentBuilder*)** %38, i64 2
  %40 = load i8* (%class.GrGLSLXPFragmentBuilder*)*, i8* (%class.GrGLSLXPFragmentBuilder*)** %39, align 8
  %41 = tail call i8* %40(%class.GrGLSLXPFragmentBuilder* %11) #4
  %42 = getelementptr inbounds %"struct.GrGLSLXferProcessor::EmitArgs", %"struct.GrGLSLXferProcessor::EmitArgs"* %1, i64 0, i32 9, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, -1
  br i1 %44, label %172, label %45

45:                                               ; preds = %34
  %46 = getelementptr inbounds %"struct.GrGLSLXferProcessor::EmitArgs", %"struct.GrGLSLXferProcessor::EmitArgs"* %1, i64 0, i32 5
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, null
  br i1 %48, label %58, label %49

49:                                               ; preds = %45
  %50 = bitcast %class.GrGLSLXPFragmentBuilder* %11 to i8**
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr i8, i8* %51, i64 -24
  %53 = bitcast i8* %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %class.GrGLSLXPFragmentBuilder* %11 to i8*
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = bitcast i8* %56 to %class.GrGLSLShaderBuilder*
  tail call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %57, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i64 0, i64 0), i8* nonnull %47)
  br label %58

58:                                               ; preds = %45, %49
  %59 = getelementptr inbounds %"struct.GrGLSLXferProcessor::EmitArgs", %"struct.GrGLSLXferProcessor::EmitArgs"* %1, i64 0, i32 8
  %60 = load i32, i32* %59, align 8
  switch i32 %60, label %61 [
    i32 2, label %62
    i32 1, label %62
    i32 3, label %143
    i32 0, label %180
  ]

61:                                               ; preds = %58
  tail call void @llvm.trap() #4
  unreachable

62:                                               ; preds = %58, %58
  %63 = getelementptr inbounds %"struct.GrGLSLXferProcessor::EmitArgs", %"struct.GrGLSLXferProcessor::EmitArgs"* %1, i64 0, i32 10
  %64 = load i32, i32* %63, align 8
  %65 = icmp eq i32 %64, 1
  %66 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %67 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %68 = bitcast %class.GrGLSLUniformHandler* %36 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %69 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %68, align 8
  %70 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %69, i64 13
  %71 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %70, align 8
  %72 = call i32 %71(%class.GrGLSLUniformHandler* %36, %class.GrFragmentProcessor* null, i32 16, i32 29, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i1 zeroext true, i32 0, i8** nonnull %3) #4
  %73 = getelementptr inbounds %class.GrGLSLXferProcessor, %class.GrGLSLXferProcessor* %0, i64 0, i32 1, i32 0
  store i32 %72, i32* %73, align 8
  %74 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %68, align 8
  %75 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %74, i64 13
  %76 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %75, align 8
  %77 = call i32 %76(%class.GrGLSLUniformHandler* %36, %class.GrFragmentProcessor* null, i32 16, i32 29, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i64 0, i64 0), i1 zeroext true, i32 0, i8** nonnull %4) #4
  %78 = getelementptr inbounds %class.GrGLSLXferProcessor, %class.GrGLSLXferProcessor* %0, i64 0, i32 2, i32 0
  store i32 %77, i32* %78, align 4
  %79 = bitcast %class.GrGLSLXPFragmentBuilder* %11 to i8**
  %80 = load i8*, i8** %79, align 8
  %81 = getelementptr i8, i8* %80, i64 -24
  %82 = bitcast i8* %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %class.GrGLSLXPFragmentBuilder* %11 to i8*
  %85 = getelementptr inbounds i8, i8* %84, i64 %83
  %86 = getelementptr inbounds i8, i8* %85, i64 160
  %87 = getelementptr inbounds i8, i8* %85, i64 488
  %88 = bitcast i8* %87 to i32*
  %89 = load i32, i32* %88, align 8
  %90 = bitcast i8* %86 to %class.SkString**
  %91 = load %class.SkString*, %class.SkString** %90, align 8
  %92 = sext i32 %89 to i64
  %93 = getelementptr inbounds %class.SkString, %class.SkString* %91, i64 %92
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %93, i64 -1, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3, i64 0, i64 0)) #4
  %94 = load i8*, i8** %79, align 8
  %95 = getelementptr i8, i8* %94, i64 -24
  %96 = bitcast i8* %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = getelementptr inbounds i8, i8* %84, i64 %97
  %99 = bitcast i8* %98 to %class.GrGLSLShaderBuilder*
  %100 = load i8*, i8** %3, align 8
  %101 = load i8*, i8** %4, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %99, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.4, i64 0, i64 0), i8* %100, i8* %101)
  br i1 %65, label %102, label %116

102:                                              ; preds = %62
  %103 = load i8*, i8** %79, align 8
  %104 = getelementptr i8, i8* %103, i64 -24
  %105 = bitcast i8* %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = getelementptr inbounds i8, i8* %84, i64 %106
  %108 = getelementptr inbounds i8, i8* %107, i64 160
  %109 = getelementptr inbounds i8, i8* %107, i64 488
  %110 = bitcast i8* %109 to i32*
  %111 = load i32, i32* %110, align 8
  %112 = bitcast i8* %108 to %class.SkString**
  %113 = load %class.SkString*, %class.SkString** %112, align 8
  %114 = sext i32 %111 to i64
  %115 = getelementptr inbounds %class.SkString, %class.SkString* %113, i64 %114
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %115, i64 -1, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.5, i64 0, i64 0)) #4
  br label %116

116:                                              ; preds = %102, %62
  %117 = load i8*, i8** %79, align 8
  %118 = getelementptr i8, i8* %117, i64 -24
  %119 = bitcast i8* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = getelementptr inbounds i8, i8* %84, i64 %120
  %122 = bitcast i8* %121 to %class.GrGLSLShaderBuilder*
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %122, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i8* %41)
  %123 = load i8*, i8** %79, align 8
  %124 = getelementptr i8, i8* %123, i64 -24
  %125 = bitcast i8* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = getelementptr inbounds i8, i8* %84, i64 %126
  %128 = bitcast i8* %127 to %class.GrGLSLShaderBuilder*
  %129 = load i32, i32* %42, align 4
  call void @_ZN19GrGLSLShaderBuilder19appendTextureLookupE16GrResourceHandleIN20GrGLSLUniformHandler17SamplerHandleKindEEPKcP27GrGLSLColorSpaceXformHelper(%class.GrGLSLShaderBuilder* %128, i32 %129, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), %class.GrGLSLColorSpaceXformHelper* null) #4
  %130 = load i8*, i8** %79, align 8
  %131 = getelementptr i8, i8* %130, i64 -24
  %132 = bitcast i8* %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = getelementptr inbounds i8, i8* %84, i64 %133
  %135 = getelementptr inbounds i8, i8* %134, i64 160
  %136 = getelementptr inbounds i8, i8* %134, i64 488
  %137 = bitcast i8* %136 to i32*
  %138 = load i32, i32* %137, align 8
  %139 = bitcast i8* %135 to %class.SkString**
  %140 = load %class.SkString*, %class.SkString** %139, align 8
  %141 = sext i32 %138 to i64
  %142 = getelementptr inbounds %class.SkString, %class.SkString* %140, i64 %141
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %142, i64 -1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #4
  br label %180

143:                                              ; preds = %58
  %144 = bitcast %class.GrGLSLXPFragmentBuilder* %11 to i8**
  %145 = load i8*, i8** %144, align 8
  %146 = getelementptr i8, i8* %145, i64 -24
  %147 = bitcast i8* %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = bitcast %class.GrGLSLXPFragmentBuilder* %11 to i8*
  %150 = getelementptr inbounds i8, i8* %149, i64 %148
  %151 = bitcast i8* %150 to %class.GrGLSLShaderBuilder*
  tail call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %151, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i8* %41)
  %152 = load i8*, i8** %144, align 8
  %153 = getelementptr i8, i8* %152, i64 -24
  %154 = bitcast i8* %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = getelementptr inbounds i8, i8* %149, i64 %155
  %157 = bitcast i8* %156 to %class.GrGLSLShaderBuilder*
  %158 = load i32, i32* %42, align 4
  tail call void @_ZN19GrGLSLShaderBuilder15appendInputLoadE16GrResourceHandleIN20GrGLSLUniformHandler17SamplerHandleKindEE(%class.GrGLSLShaderBuilder* %157, i32 %158) #4
  %159 = load i8*, i8** %144, align 8
  %160 = getelementptr i8, i8* %159, i64 -24
  %161 = bitcast i8* %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = getelementptr inbounds i8, i8* %149, i64 %162
  %164 = getelementptr inbounds i8, i8* %163, i64 160
  %165 = getelementptr inbounds i8, i8* %163, i64 488
  %166 = bitcast i8* %165 to i32*
  %167 = load i32, i32* %166, align 8
  %168 = bitcast i8* %164 to %class.SkString**
  %169 = load %class.SkString*, %class.SkString** %168, align 8
  %170 = sext i32 %167 to i64
  %171 = getelementptr inbounds %class.SkString, %class.SkString* %169, i64 %170
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %171, i64 -1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #4
  br label %180

172:                                              ; preds = %34
  %173 = getelementptr inbounds %"struct.GrGLSLXferProcessor::EmitArgs", %"struct.GrGLSLXferProcessor::EmitArgs"* %1, i64 0, i32 2
  %174 = load %class.GrShaderCaps*, %class.GrShaderCaps** %173, align 8
  %175 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %174, i64 0, i32 2
  %176 = bitcast i56* %175 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = and i64 %177, 536870912
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %180, label %183

180:                                              ; preds = %172, %58, %143, %116
  %181 = getelementptr inbounds %"struct.GrGLSLXferProcessor::EmitArgs", %"struct.GrGLSLXferProcessor::EmitArgs"* %1, i64 0, i32 6
  %182 = load i8*, i8** %181, align 8
  br label %192

183:                                              ; preds = %172
  %184 = bitcast %class.GrGLSLXPFragmentBuilder* %11 to i8**
  %185 = load i8*, i8** %184, align 8
  %186 = getelementptr i8, i8* %185, i64 -24
  %187 = bitcast i8* %186 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = bitcast %class.GrGLSLXPFragmentBuilder* %11 to i8*
  %190 = getelementptr inbounds i8, i8* %189, i64 %188
  %191 = bitcast i8* %190 to %class.GrGLSLShaderBuilder*
  tail call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %191, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0))
  br label %192

192:                                              ; preds = %183, %180
  %193 = phi i1 [ true, %183 ], [ false, %180 ]
  %194 = phi i8* [ getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0), %183 ], [ %182, %180 ]
  %195 = getelementptr inbounds %"struct.GrGLSLXferProcessor::EmitArgs", %"struct.GrGLSLXferProcessor::EmitArgs"* %1, i64 0, i32 4
  %196 = load i8*, i8** %195, align 8
  %197 = getelementptr inbounds %"struct.GrGLSLXferProcessor::EmitArgs", %"struct.GrGLSLXferProcessor::EmitArgs"* %1, i64 0, i32 5
  %198 = load i8*, i8** %197, align 8
  %199 = getelementptr inbounds %"struct.GrGLSLXferProcessor::EmitArgs", %"struct.GrGLSLXferProcessor::EmitArgs"* %1, i64 0, i32 7
  %200 = load i8*, i8** %199, align 8
  %201 = load %class.GrXferProcessor*, %class.GrXferProcessor** %5, align 8
  %202 = bitcast %class.GrGLSLXferProcessor* %0 to void (%class.GrGLSLXferProcessor*, %class.GrGLSLXPFragmentBuilder*, %class.GrGLSLUniformHandler*, i8*, i8*, i8*, i8*, i8*, %class.GrXferProcessor*)***
  %203 = load void (%class.GrGLSLXferProcessor*, %class.GrGLSLXPFragmentBuilder*, %class.GrGLSLUniformHandler*, i8*, i8*, i8*, i8*, i8*, %class.GrXferProcessor*)**, void (%class.GrGLSLXferProcessor*, %class.GrGLSLXPFragmentBuilder*, %class.GrGLSLUniformHandler*, i8*, i8*, i8*, i8*, i8*, %class.GrXferProcessor*)*** %202, align 8
  %204 = getelementptr inbounds void (%class.GrGLSLXferProcessor*, %class.GrGLSLXPFragmentBuilder*, %class.GrGLSLUniformHandler*, i8*, i8*, i8*, i8*, i8*, %class.GrXferProcessor*)*, void (%class.GrGLSLXferProcessor*, %class.GrGLSLXPFragmentBuilder*, %class.GrGLSLUniformHandler*, i8*, i8*, i8*, i8*, i8*, %class.GrXferProcessor*)** %203, i64 3
  %205 = load void (%class.GrGLSLXferProcessor*, %class.GrGLSLXPFragmentBuilder*, %class.GrGLSLUniformHandler*, i8*, i8*, i8*, i8*, i8*, %class.GrXferProcessor*)*, void (%class.GrGLSLXferProcessor*, %class.GrGLSLXPFragmentBuilder*, %class.GrGLSLUniformHandler*, i8*, i8*, i8*, i8*, i8*, %class.GrXferProcessor*)** %204, align 8
  call void %205(%class.GrGLSLXferProcessor* %0, %class.GrGLSLXPFragmentBuilder* %11, %class.GrGLSLUniformHandler* %36, i8* %196, i8* %198, i8* %41, i8* %194, i8* %200, %class.GrXferProcessor* dereferenceable(24) %201) #4
  br i1 %193, label %206, label %217

206:                                              ; preds = %192
  %207 = bitcast %class.GrGLSLXPFragmentBuilder* %11 to i8**
  %208 = load i8*, i8** %207, align 8
  %209 = getelementptr i8, i8* %208, i64 -24
  %210 = bitcast i8* %209 to i64*
  %211 = load i64, i64* %210, align 8
  %212 = bitcast %class.GrGLSLXPFragmentBuilder* %11 to i8*
  %213 = getelementptr inbounds i8, i8* %212, i64 %211
  %214 = bitcast i8* %213 to %class.GrGLSLShaderBuilder*
  %215 = getelementptr inbounds %"struct.GrGLSLXferProcessor::EmitArgs", %"struct.GrGLSLXferProcessor::EmitArgs"* %1, i64 0, i32 6
  %216 = load i8*, i8** %215, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %214, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i64 0, i64 0), i8* %216, i8* %194)
  br label %217

217:                                              ; preds = %192, %206, %29
  %218 = load %class.GrGLSLXPFragmentBuilder*, %class.GrGLSLXPFragmentBuilder** %10, align 8
  %219 = getelementptr inbounds %"struct.GrGLSLXferProcessor::EmitArgs", %"struct.GrGLSLXferProcessor::EmitArgs"* %1, i64 0, i32 11
  %220 = getelementptr inbounds %"struct.GrGLSLXferProcessor::EmitArgs", %"struct.GrGLSLXferProcessor::EmitArgs"* %1, i64 0, i32 6
  %221 = load i8*, i8** %220, align 8
  %222 = getelementptr inbounds %"struct.GrGLSLXferProcessor::EmitArgs", %"struct.GrGLSLXferProcessor::EmitArgs"* %1, i64 0, i32 7
  %223 = load i8*, i8** %222, align 8
  %224 = bitcast %class.GrGLSLXferProcessor* %0 to void (%class.GrGLSLXferProcessor*, %class.GrGLSLXPFragmentBuilder*, %class.GrSwizzle*, i8*, i8*)***
  %225 = load void (%class.GrGLSLXferProcessor*, %class.GrGLSLXPFragmentBuilder*, %class.GrSwizzle*, i8*, i8*)**, void (%class.GrGLSLXferProcessor*, %class.GrGLSLXPFragmentBuilder*, %class.GrSwizzle*, i8*, i8*)*** %224, align 8
  %226 = getelementptr inbounds void (%class.GrGLSLXferProcessor*, %class.GrGLSLXPFragmentBuilder*, %class.GrSwizzle*, i8*, i8*)*, void (%class.GrGLSLXferProcessor*, %class.GrGLSLXPFragmentBuilder*, %class.GrSwizzle*, i8*, i8*)** %225, i64 4
  %227 = load void (%class.GrGLSLXferProcessor*, %class.GrGLSLXPFragmentBuilder*, %class.GrSwizzle*, i8*, i8*)*, void (%class.GrGLSLXferProcessor*, %class.GrGLSLXPFragmentBuilder*, %class.GrSwizzle*, i8*, i8*)** %226, align 8
  call void %227(%class.GrGLSLXferProcessor* %0, %class.GrGLSLXPFragmentBuilder* %218, %class.GrSwizzle* dereferenceable(2) %219, i8* %221, i8* %223) #4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder*, i8*, ...) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #4
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %6 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %4)
  %7 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 120
  %8 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 14
  %9 = load i32, i32* %8, align 8
  %10 = bitcast i8* %7 to %class.SkString**
  %11 = load %class.SkString*, %class.SkString** %10, align 8
  %12 = sext i32 %9 to i64
  %13 = getelementptr inbounds %class.SkString, %class.SkString* %11, i64 %12
  call void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString* %13, i8* %1, %struct.__va_list_tag* nonnull %5) #4
  call void @llvm.va_end(i8* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN19GrGLSLShaderBuilder19appendTextureLookupE16GrResourceHandleIN20GrGLSLUniformHandler17SamplerHandleKindEEPKcP27GrGLSLColorSpaceXformHelper(%class.GrGLSLShaderBuilder*, i32, i8*, %class.GrGLSLColorSpaceXformHelper*) local_unnamed_addr #2

declare void @_ZN19GrGLSLShaderBuilder15appendInputLoadE16GrResourceHandleIN20GrGLSLUniformHandler17SamplerHandleKindEE(%class.GrGLSLShaderBuilder*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK19GrGLSLXferProcessor16emitWriteSwizzleEP23GrGLSLXPFragmentBuilderRK9GrSwizzlePKcS6_(%class.GrGLSLXferProcessor* nocapture readnone, %class.GrGLSLXPFragmentBuilder*, %class.GrSwizzle* dereferenceable(2), i8*, i8*) unnamed_addr #0 align 2 {
  %6 = alloca %class.GrSwizzle, align 2
  %7 = alloca %class.SkString, align 8
  %8 = alloca %class.SkString, align 8
  %9 = bitcast %class.GrSwizzle* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %9) #4
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* nonnull %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i64 0, i64 0)) #4
  %10 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %6, i64 0, i32 0
  %11 = load i16, i16* %10, align 2
  %12 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %2, i64 0, i32 0
  %13 = load i16, i16* %12, align 2
  %14 = icmp eq i16 %11, %13
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %9) #4
  br i1 %14, label %40, label %15

15:                                               ; preds = %5
  %16 = bitcast %class.GrGLSLXPFragmentBuilder* %1 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr i8, i8* %17, i64 -24
  %19 = bitcast i8* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %class.GrGLSLXPFragmentBuilder* %1 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 %20
  %23 = bitcast i8* %22 to %class.GrGLSLShaderBuilder*
  %24 = bitcast %class.SkString* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #4
  call void @_ZNK9GrSwizzle8asStringEv(%class.SkString* nonnull sret %7, %class.GrSwizzle* %2) #4
  %25 = getelementptr inbounds %class.SkString, %class.SkString* %7, i64 0, i32 0, i32 0
  %26 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %25, align 8
  %27 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %26, i64 0, i32 2
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %23, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12, i64 0, i64 0), i8* %3, i8* %3, i8* %27)
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %7) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #4
  %28 = icmp eq i8* %4, null
  br i1 %28, label %40, label %29

29:                                               ; preds = %15
  %30 = load i8*, i8** %16, align 8
  %31 = getelementptr i8, i8* %30, i64 -24
  %32 = bitcast i8* %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds i8, i8* %21, i64 %33
  %35 = bitcast i8* %34 to %class.GrGLSLShaderBuilder*
  %36 = bitcast %class.SkString* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #4
  call void @_ZNK9GrSwizzle8asStringEv(%class.SkString* nonnull sret %8, %class.GrSwizzle* %2) #4
  %37 = getelementptr inbounds %class.SkString, %class.SkString* %8, i64 0, i32 0, i32 0
  %38 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %37, align 8
  %39 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %38, i64 0, i32 2
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %35, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12, i64 0, i64 0), i8* nonnull %4, i8* nonnull %4, i8* %39)
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %8) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #4
  br label %40

40:                                               ; preds = %5, %15, %29
  ret void
}

declare void @_ZNK9GrSwizzle8asStringEv(%class.SkString* sret, %class.GrSwizzle*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19GrGLSLXferProcessor7setDataERK24GrGLSLProgramDataManagerRK15GrXferProcessorPK9GrTextureRK8SkIPoint(%class.GrGLSLXferProcessor*, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrXferProcessor* dereferenceable(24), %class.GrTexture* readonly, %struct.SkIPoint* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %6 = icmp eq %class.GrTexture* %3, null
  br i1 %6, label %44, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %class.GrGLSLXferProcessor, %class.GrGLSLXferProcessor* %0, i64 0, i32 1, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, -1
  br i1 %10, label %44, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %4, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = sitofp i32 %13 to float
  %15 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %4, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = sitofp i32 %16 to float
  %18 = bitcast %class.GrGLSLProgramDataManager* %1 to void (%class.GrGLSLProgramDataManager*, i32, float, float)***
  %19 = load void (%class.GrGLSLProgramDataManager*, i32, float, float)**, void (%class.GrGLSLProgramDataManager*, i32, float, float)*** %18, align 8
  %20 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, float, float)*, void (%class.GrGLSLProgramDataManager*, i32, float, float)** %19, i64 8
  %21 = load void (%class.GrGLSLProgramDataManager*, i32, float, float)*, void (%class.GrGLSLProgramDataManager*, i32, float, float)** %20, align 8
  tail call void %21(%class.GrGLSLProgramDataManager* %1, i32 %9, float %14, float %17) #4
  %22 = getelementptr inbounds %class.GrGLSLXferProcessor, %class.GrGLSLXferProcessor* %0, i64 0, i32 2, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = bitcast %class.GrTexture* %3 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr i8, i8* %25, i64 -24
  %27 = bitcast i8* %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %class.GrTexture* %3 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 %28
  %31 = getelementptr inbounds i8, i8* %30, i64 152
  %32 = bitcast i8* %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = sitofp i32 %33 to float
  %35 = fdiv float 1.000000e+00, %34
  %36 = getelementptr inbounds i8, i8* %30, i64 156
  %37 = bitcast i8* %36 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = sitofp i32 %38 to float
  %40 = fdiv float 1.000000e+00, %39
  %41 = load void (%class.GrGLSLProgramDataManager*, i32, float, float)**, void (%class.GrGLSLProgramDataManager*, i32, float, float)*** %18, align 8
  %42 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, float, float)*, void (%class.GrGLSLProgramDataManager*, i32, float, float)** %41, i64 8
  %43 = load void (%class.GrGLSLProgramDataManager*, i32, float, float)*, void (%class.GrGLSLProgramDataManager*, i32, float, float)** %42, align 8
  tail call void %43(%class.GrGLSLProgramDataManager* %1, i32 %23, float %35, float %40) #4
  br label %44

44:                                               ; preds = %7, %5, %11
  %45 = bitcast %class.GrGLSLXferProcessor* %0 to void (%class.GrGLSLXferProcessor*, %class.GrGLSLProgramDataManager*, %class.GrXferProcessor*)***
  %46 = load void (%class.GrGLSLXferProcessor*, %class.GrGLSLProgramDataManager*, %class.GrXferProcessor*)**, void (%class.GrGLSLXferProcessor*, %class.GrGLSLProgramDataManager*, %class.GrXferProcessor*)*** %45, align 8
  %47 = getelementptr inbounds void (%class.GrGLSLXferProcessor*, %class.GrGLSLProgramDataManager*, %class.GrXferProcessor*)*, void (%class.GrGLSLXferProcessor*, %class.GrGLSLProgramDataManager*, %class.GrXferProcessor*)** %46, i64 5
  %48 = load void (%class.GrGLSLXferProcessor*, %class.GrGLSLProgramDataManager*, %class.GrXferProcessor*)*, void (%class.GrGLSLXferProcessor*, %class.GrGLSLProgramDataManager*, %class.GrXferProcessor*)** %47, align 8
  tail call void %48(%class.GrGLSLXferProcessor* %0, %class.GrGLSLProgramDataManager* dereferenceable(8) %1, %class.GrXferProcessor* dereferenceable(24) %2) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19GrGLSLXferProcessor25DefaultCoverageModulationEP23GrGLSLXPFragmentBuilderPKcS3_S3_S3_RK15GrXferProcessor(%class.GrGLSLXPFragmentBuilder*, i8*, i8*, i8*, i8* nocapture readnone, %class.GrXferProcessor* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %7 = icmp eq i8* %1, null
  br i1 %7, label %40, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %class.GrXferProcessor, %class.GrXferProcessor* %5, i64 0, i32 3
  %10 = load i8, i8* %9, align 1, !range !2
  %11 = icmp eq i8 %10, 0
  %12 = bitcast %class.GrGLSLXPFragmentBuilder* %0 to i8**
  br i1 %11, label %13, label %15

13:                                               ; preds = %8
  %14 = bitcast %class.GrGLSLXPFragmentBuilder* %0 to i8*
  br label %23

15:                                               ; preds = %8
  %16 = load i8*, i8** %12, align 8
  %17 = getelementptr i8, i8* %16, i64 -24
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %class.GrGLSLXPFragmentBuilder* %0 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 %19
  %22 = bitcast i8* %21 to %class.GrGLSLShaderBuilder*
  tail call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %22, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.13, i64 0, i64 0), i8* %2, i8* %3, i8* nonnull %1)
  br label %23

23:                                               ; preds = %13, %15
  %24 = phi i8* [ %14, %13 ], [ %20, %15 ]
  %25 = load i8*, i8** %12, align 8
  %26 = getelementptr i8, i8* %25, i64 -24
  %27 = bitcast i8* %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds i8, i8* %24, i64 %28
  %30 = bitcast i8* %29 to %class.GrGLSLShaderBuilder*
  tail call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %30, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.14, i64 0, i64 0), i8* %3, i8* nonnull %1, i8* %3, i8* nonnull %1, i8* %2)
  %31 = load i8, i8* %9, align 1, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %40, label %33

33:                                               ; preds = %23
  %34 = load i8*, i8** %12, align 8
  %35 = getelementptr i8, i8* %34, i64 -24
  %36 = bitcast i8* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds i8, i8* %24, i64 %37
  %39 = bitcast i8* %38 to %class.GrGLSLShaderBuilder*
  tail call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %39, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.15, i64 0, i64 0), i8* %3)
  br label %40

40:                                               ; preds = %23, %6, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrGLSLXferProcessorD2Ev(%class.GrGLSLXferProcessor*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrGLSLXferProcessorD0Ev(%class.GrGLSLXferProcessor*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #7
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrGLSLXferProcessor24emitOutputsForBlendStateERKNS_8EmitArgsE(%class.GrGLSLXferProcessor*, %"struct.GrGLSLXferProcessor::EmitArgs"* dereferenceable(80)) unnamed_addr #0 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.19, i64 0, i64 0), i32 97, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.20, i64 0, i64 0)) #7
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrGLSLXferProcessor23emitBlendCodeForDstReadEP23GrGLSLXPFragmentBuilderP20GrGLSLUniformHandlerPKcS5_S5_S5_S5_RK15GrXferProcessor(%class.GrGLSLXferProcessor*, %class.GrGLSLXPFragmentBuilder*, %class.GrGLSLUniformHandler*, i8*, i8*, i8*, i8*, i8*, %class.GrXferProcessor* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.19, i64 0, i64 0), i32 113, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.21, i64 0, i64 0)) #7
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #4

declare void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZN8SkString6insertEmPKc(%class.SkString*, i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %0, i64 0, i32 0
  %4 = load i8, i8* %1, align 1
  %5 = sext i8 %4 to i32
  switch i32 %5, label %11 [
    i32 114, label %12
    i32 103, label %6
    i32 98, label %7
    i32 97, label %8
    i32 48, label %9
    i32 49, label %10
  ]

6:                                                ; preds = %2
  br label %12

7:                                                ; preds = %2
  br label %12

8:                                                ; preds = %2
  br label %12

9:                                                ; preds = %2
  br label %12

10:                                               ; preds = %2
  br label %12

11:                                               ; preds = %2
  tail call void @llvm.trap() #4
  unreachable

12:                                               ; preds = %2, %6, %7, %8, %9, %10
  %13 = phi i16 [ 5, %10 ], [ 4, %9 ], [ 3, %8 ], [ 2, %7 ], [ 1, %6 ], [ 0, %2 ]
  %14 = getelementptr inbounds i8, i8* %1, i64 1
  %15 = load i8, i8* %14, align 1
  %16 = sext i8 %15 to i32
  switch i32 %16, label %22 [
    i32 114, label %23
    i32 103, label %17
    i32 98, label %18
    i32 97, label %19
    i32 48, label %20
    i32 49, label %21
  ]

17:                                               ; preds = %12
  br label %23

18:                                               ; preds = %12
  br label %23

19:                                               ; preds = %12
  br label %23

20:                                               ; preds = %12
  br label %23

21:                                               ; preds = %12
  br label %23

22:                                               ; preds = %12
  tail call void @llvm.trap() #4
  unreachable

23:                                               ; preds = %12, %17, %18, %19, %20, %21
  %24 = phi i16 [ 80, %21 ], [ 64, %20 ], [ 48, %19 ], [ 32, %18 ], [ 16, %17 ], [ 0, %12 ]
  %25 = or i16 %24, %13
  %26 = getelementptr inbounds i8, i8* %1, i64 2
  %27 = load i8, i8* %26, align 1
  %28 = sext i8 %27 to i32
  switch i32 %28, label %34 [
    i32 114, label %35
    i32 103, label %29
    i32 98, label %30
    i32 97, label %31
    i32 48, label %32
    i32 49, label %33
  ]

29:                                               ; preds = %23
  br label %35

30:                                               ; preds = %23
  br label %35

31:                                               ; preds = %23
  br label %35

32:                                               ; preds = %23
  br label %35

33:                                               ; preds = %23
  br label %35

34:                                               ; preds = %23
  tail call void @llvm.trap() #4
  unreachable

35:                                               ; preds = %23, %29, %30, %31, %32, %33
  %36 = phi i16 [ 1280, %33 ], [ 1024, %32 ], [ 768, %31 ], [ 512, %30 ], [ 256, %29 ], [ 0, %23 ]
  %37 = or i16 %25, %36
  %38 = getelementptr inbounds i8, i8* %1, i64 3
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  switch i32 %40, label %46 [
    i32 114, label %47
    i32 103, label %41
    i32 98, label %42
    i32 97, label %43
    i32 48, label %44
    i32 49, label %45
  ]

41:                                               ; preds = %35
  br label %47

42:                                               ; preds = %35
  br label %47

43:                                               ; preds = %35
  br label %47

44:                                               ; preds = %35
  br label %47

45:                                               ; preds = %35
  br label %47

46:                                               ; preds = %35
  tail call void @llvm.trap() #4
  unreachable

47:                                               ; preds = %35, %41, %42, %43, %44, %45
  %48 = phi i16 [ 20480, %45 ], [ 16384, %44 ], [ 12288, %43 ], [ 8192, %42 ], [ 4096, %41 ], [ 0, %35 ]
  %49 = or i16 %37, %48
  store i16 %49, i16* %3, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
