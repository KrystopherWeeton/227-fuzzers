; ModuleID = '../../components/favicon_base/select_favicon_frames.cc'
source_filename = "../../components/favicon_base/select_favicon_frames.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.86 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.87 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.gfx::ImageSkia" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.gfx::internal::ImageSkiaStorage"* }
%"class.gfx::internal::ImageSkiaStorage" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.SkBitmap*, %class.SkBitmap*, %"class.std::__1::__compressed_pair" }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.7 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.0, i32, i32 }
%class.sk_sp.0 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.7 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.SkBitmap* }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"class.gfx::Size"*, %"class.gfx::Size"*, %"class.std::__1::__compressed_pair.11" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.gfx::Size"* }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.86, [384 x i64], %class.sk_sp.87, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.88", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.94" }
%class.sk_sp.41 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%struct.SkCubicResampler = type { float, float }
%"class.std::__1::vector.16" = type { %"class.std::__1::__vector_base.17" }
%"class.std::__1::__vector_base.17" = type { float*, float*, %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { float* }
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { i32*, i32*, %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { i32* }
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { %"struct.(anonymous namespace)::SelectionResult"*, %"struct.(anonymous namespace)::SelectionResult"*, %"class.std::__1::__compressed_pair.32" }
%"struct.(anonymous namespace)::SelectionResult" = type { i64, i32 }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.(anonymous namespace)::SelectionResult"* }
%"class.gfx::ImageSkiaRep" = type <{ %"class.cc::PaintImage", %class.sk_sp.42, i32, %"class.gfx::Size", [4 x i8], %class.SkBitmap, float, [4 x i8] }>
%"class.cc::PaintImage" = type { %class.sk_sp.41, %class.sk_sp.42, %"class.gfx::Rect", i32, %class.sk_sp.47, %class.sk_sp.48, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.41, %class.scoped_refptr.49 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.47 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type opaque
%class.sk_sp.48 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.scoped_refptr.49 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type opaque
%class.sk_sp.42 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.43", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { i8* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { %"class.gfx::ImageSkiaRep"*, %"class.gfx::ImageSkiaRep"*, %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.gfx::ImageSkiaRep"* }
%"class.gfx::ImageSkiaSource" = type { i32 (...)** }
%class.SkPaint = type <{ %class.sk_sp.100, %class.sk_sp.101, %class.sk_sp.102, %class.sk_sp.103, %class.sk_sp.104, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp.100 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.sk_sp.101 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.102 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.103 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.104 = type { %class.SkImageFilter* }
%class.SkImageFilter = type opaque
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.SkBitmap::Allocator" = type { %class.SkRefCnt.base, [4 x i8] }
%"class.std::__1::vector.62" = type { %"class.std::__1::__vector_base.63" }
%"class.std::__1::__vector_base.63" = type { i64*, i64*, %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { i64* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.69", %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { i64 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", i64 }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.(anonymous namespace)::FaviconImageSource" = type { %"class.gfx::ImageSkiaSource", %"class.std::__1::vector.39" }

$_ZNSt3__16vectorIN3gfx12ImageSkiaRepENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

$_ZNSt3__16__treeImNS_4lessImEENS_9allocatorImEEE7destroyEPNS_11__tree_nodeImPvEE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

@kSelectFaviconFramesInvalidScore = hidden local_unnamed_addr constant float -1.000000e+00, align 4
@__const._ZN12_GLOBAL__N_121SampleNearestNeighborERK8SkBitmapi.canvas = private unnamed_addr constant { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.86, [384 x i64], %class.sk_sp.87, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.88", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.94" } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %class.SkDeque { i8* inttoptr (i64 -6148914691236517206 to i8*), i8* inttoptr (i64 -6148914691236517206 to i8*), %"struct.SkDeque::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDeque::Block"*), %"struct.SkDeque::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDeque::Block"*), i64 -6148914691236517206, i8* inttoptr (i64 -6148914691236517206 to i8*), i32 -1431655766, i32 -1431655766 }, %"class.SkCanvas::MCRec"* inttoptr (i64 -6148914691236517206 to %"class.SkCanvas::MCRec"*), %class.sk_sp.86 { %class.SkMarkerStack* inttoptr (i64 -6148914691236517206 to %class.SkMarkerStack*) }, [384 x i64] [i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206], %class.sk_sp.87 { %class.SkBaseDevice* inttoptr (i64 -6148914691236517206 to %class.SkBaseDevice*) }, %class.SkSurfaceProps { i32 -1431655766, i32 -1431655766 }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::unique_ptr.88" { %"class.std::__1::__compressed_pair.89" { %"struct.std::__1::__compressed_pair_elem.90" { %class.SkRasterHandleAllocator* inttoptr (i64 -6148914691236517206 to %class.SkRasterHandleAllocator*) } } }, %class.SkSurface_Base* inttoptr (i64 -6148914691236517206 to %class.SkSurface_Base*), %struct.SkIRect { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.std::__1::unique_ptr.94" { %"class.std::__1::__compressed_pair.95" { %"struct.std::__1::__compressed_pair_elem.96" { %class.SkGlyphRunBuilder* inttoptr (i64 -6148914691236517206 to %class.SkGlyphRunBuilder*) } } } }, align 8
@_ZTVN12_GLOBAL__N_118FaviconImageSourceE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::FaviconImageSource"*)* @_ZN12_GLOBAL__N_118FaviconImageSourceD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::FaviconImageSource"*)* @_ZN12_GLOBAL__N_118FaviconImageSourceD0Ev to i8*), i8* bitcast (void (%"class.gfx::ImageSkiaRep"*, %"class.(anonymous namespace)::FaviconImageSource"*, float)* @_ZN12_GLOBAL__N_118FaviconImageSource16GetImageForScaleEf to i8*), i8* bitcast (i1 (%"class.gfx::ImageSkiaSource"*)* @_ZNK3gfx15ImageSkiaSource28HasRepresentationAtAllScalesEv to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z22CreateFaviconImageSkiaRKNSt3__16vectorI8SkBitmapNS_9allocatorIS1_EEEERKNS0_IN3gfx4SizeENS2_IS8_EEEEiPf(%"class.gfx::ImageSkia"* noalias sret, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.9"* nocapture readonly dereferenceable(24), i32, float*) local_unnamed_addr #0 {
  %6 = alloca %class.SkCanvas, align 8
  %7 = alloca %class.SkSurfaceProps, align 4
  %8 = alloca %class.sk_sp.41, align 8
  %9 = alloca { <2 x float>, <2 x float> }, align 8
  %10 = alloca %struct.SkSamplingOptions, align 4
  %11 = alloca %"class.std::__1::vector.16", align 8
  %12 = alloca %"class.std::__1::vector.23", align 8
  %13 = alloca %"class.std::__1::vector.30", align 8
  %14 = alloca %"class.gfx::ImageSkiaRep", align 8
  %15 = alloca %class.SkBitmap, align 8
  %16 = alloca %"class.gfx::Size", align 4
  %17 = bitcast %"class.std::__1::vector.16"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #10
  call void @_ZN12favicon_base16GetFaviconScalesEv(%"class.std::__1::vector.16"* nonnull sret %11) #10
  %18 = bitcast %"class.std::__1::vector.23"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #10
  %19 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %12, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %12, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 24, i1 false) #10
  %22 = icmp eq i32 %3, 0
  br i1 %22, label %23, label %32

23:                                               ; preds = %5
  %24 = bitcast i32** %20 to i64*
  %25 = bitcast %"class.std::__1::vector.23"* %12 to i64*
  %26 = bitcast i32** %21 to i64*
  %27 = call i8* @_Znwm(i64 4) #11
  %28 = bitcast i8* %27 to i32*
  %29 = getelementptr inbounds i8, i8* %27, i64 4
  %30 = ptrtoint i8* %29 to i64
  store i32 0, i32* %28, align 4
  %31 = ptrtoint i8* %27 to i64
  store i64 %31, i64* %25, align 8
  store i64 %30, i64* %24, align 8
  store i64 %30, i64* %26, align 8
  br label %112

32:                                               ; preds = %5
  %33 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %11, i64 0, i32 0, i32 0
  %34 = load float*, float** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %11, i64 0, i32 0, i32 1
  %36 = load float*, float** %35, align 8
  %37 = icmp eq float* %34, %36
  br i1 %37, label %112, label %38

38:                                               ; preds = %32
  %39 = sitofp i32 %3 to float
  %40 = bitcast i32** %20 to i64*
  %41 = bitcast %"class.std::__1::vector.23"* %12 to i64*
  %42 = bitcast i32** %21 to i64*
  br label %43

43:                                               ; preds = %108, %38
  %44 = phi i64 [ 0, %38 ], [ %111, %108 ]
  %45 = phi i32* [ null, %38 ], [ %110, %108 ]
  %46 = phi i32* [ null, %38 ], [ %109, %108 ]
  %47 = phi float* [ %34, %38 ], [ %105, %108 ]
  %48 = load float, float* %47, align 4
  %49 = fmul float %48, %39
  %50 = call float @llvm.ceil.f32(float %49) #10
  %51 = fptosi float %50 to i32
  %52 = icmp ult i32* %46, %45
  %53 = ptrtoint i32* %45 to i64
  br i1 %52, label %54, label %57

54:                                               ; preds = %43
  store i32 %51, i32* %46, align 4
  %55 = getelementptr inbounds i32, i32* %46, i64 1
  %56 = ptrtoint i32* %55 to i64
  store i64 %56, i64* %40, align 8
  br label %104

57:                                               ; preds = %43
  %58 = ptrtoint i32* %46 to i64
  %59 = load i64, i64* %41, align 8
  %60 = sub i64 %58, %59
  %61 = ashr exact i64 %60, 2
  %62 = add nsw i64 %61, 1
  %63 = icmp ugt i64 %62, 4611686018427387903
  br i1 %63, label %64, label %66

64:                                               ; preds = %57
  %65 = bitcast %"class.std::__1::vector.23"* %12 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %65) #12
  unreachable

66:                                               ; preds = %57
  %67 = sub i64 %53, %59
  %68 = ashr exact i64 %67, 2
  %69 = icmp ult i64 %68, 2305843009213693951
  br i1 %69, label %70, label %78

70:                                               ; preds = %66
  %71 = ashr exact i64 %67, 1
  %72 = icmp ult i64 %71, %62
  %73 = select i1 %72, i64 %62, i64 %71
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %83, label %75

75:                                               ; preds = %70
  %76 = icmp ugt i64 %73, 4611686018427387903
  br i1 %76, label %77, label %78

77:                                               ; preds = %75
  call void @abort() #12
  unreachable

78:                                               ; preds = %75, %66
  %79 = phi i64 [ %73, %75 ], [ 4611686018427387903, %66 ]
  %80 = shl i64 %79, 2
  %81 = call i8* @_Znwm(i64 %80) #11
  %82 = bitcast i8* %81 to i32*
  br label %83

83:                                               ; preds = %78, %70
  %84 = phi i64 [ %79, %78 ], [ 0, %70 ]
  %85 = phi i32* [ %82, %78 ], [ null, %70 ]
  %86 = getelementptr inbounds i32, i32* %85, i64 %61
  %87 = getelementptr inbounds i32, i32* %85, i64 %84
  %88 = ptrtoint i32* %87 to i64
  store i32 %51, i32* %86, align 4
  %89 = getelementptr inbounds i32, i32* %86, i64 1
  %90 = ptrtoint i32* %89 to i64
  %91 = sub i64 %44, %59
  %92 = ashr exact i64 %91, 2
  %93 = sub nsw i64 0, %92
  %94 = getelementptr inbounds i32, i32* %86, i64 %93
  %95 = ptrtoint i32* %94 to i64
  %96 = icmp sgt i64 %91, 0
  br i1 %96, label %97, label %100

97:                                               ; preds = %83
  %98 = bitcast i32* %94 to i8*
  %99 = inttoptr i64 %59 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %98, i8* align 4 %99, i64 %91, i1 false) #10
  br label %100

100:                                              ; preds = %97, %83
  store i64 %95, i64* %41, align 8
  store i64 %90, i64* %40, align 8
  store i64 %88, i64* %42, align 8
  %101 = icmp eq i64 %59, 0
  br i1 %101, label %104, label %102

102:                                              ; preds = %100
  %103 = inttoptr i64 %59 to i8*
  call void @_ZdlPv(i8* %103) #11
  br label %104

104:                                              ; preds = %54, %100, %102
  %105 = getelementptr inbounds float, float* %47, i64 1
  %106 = load float*, float** %35, align 8
  %107 = icmp eq float* %105, %106
  br i1 %107, label %112, label %108

108:                                              ; preds = %104
  %109 = load i32*, i32** %20, align 8
  %110 = load i32*, i32** %21, align 8
  %111 = ptrtoint i32* %109 to i64
  br label %43

112:                                              ; preds = %104, %23, %32
  %113 = bitcast %"class.std::__1::vector.30"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %113) #10
  %114 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %13, i64 0, i32 0, i32 0
  %115 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %13, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %113, i8 0, i64 24, i1 false) #10
  call fastcc void @_ZN12_GLOBAL__N_133GetCandidateIndicesWithBestScoresERKNSt3__16vectorIN3gfx4SizeENS0_9allocatorIS3_EEEERKNS1_IiNS4_IiEEEEPfPNS1_INS_15SelectionResultENS4_ISE_EEEE(%"class.std::__1::vector.9"* dereferenceable(24) %2, %"class.std::__1::vector.23"* nonnull dereferenceable(24) %12, float* %4, %"class.std::__1::vector.30"* nonnull %13)
  %116 = bitcast %"struct.(anonymous namespace)::SelectionResult"** %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = bitcast %"class.std::__1::vector.30"* %13 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = icmp eq i64 %117, %119
  %121 = inttoptr i64 %119 to %"struct.(anonymous namespace)::SelectionResult"*
  br i1 %120, label %122, label %123

122:                                              ; preds = %112
  call void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"* %0) #10
  br label %233

123:                                              ; preds = %112
  br i1 %22, label %124, label %130

124:                                              ; preds = %123
  %125 = getelementptr inbounds %"struct.(anonymous namespace)::SelectionResult", %"struct.(anonymous namespace)::SelectionResult"* %121, i64 0, i32 0
  %126 = load i64, i64* %125, align 8
  %127 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %128 = load %class.SkBitmap*, %class.SkBitmap** %127, align 8
  %129 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %128, i64 %126
  call void @_ZN3gfx9ImageSkia16CreateFromBitmapERK8SkBitmapf(%"class.gfx::ImageSkia"* sret %0, %class.SkBitmap* dereferenceable(56) %129, float 1.000000e+00) #10
  br label %233

130:                                              ; preds = %123
  %131 = call i8* @_Znwm(i64 32) #11
  %132 = bitcast i8* %131 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_118FaviconImageSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %132, align 8
  %133 = getelementptr inbounds i8, i8* %131, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %133, i8 0, i64 24, i1 false) #10
  %134 = bitcast %"class.gfx::ImageSkiaRep"* %14 to i8*
  %135 = bitcast %class.SkBitmap* %15 to i8*
  %136 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %137 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %2, i64 0, i32 0, i32 0
  %138 = bitcast { <2 x float>, <2 x float> }* %9 to %struct.SkRect*
  %139 = bitcast %class.SkCanvas* %6 to i8*
  %140 = bitcast %class.SkSurfaceProps* %7 to i8*
  %141 = bitcast %class.sk_sp.41* %8 to i8*
  %142 = bitcast { <2 x float>, <2 x float> }* %9 to i8*
  %143 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 0
  %144 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 1
  %145 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %10, i64 0, i32 0
  %146 = getelementptr inbounds %class.sk_sp.41, %class.sk_sp.41* %8, i64 0, i32 0
  %147 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %11, i64 0, i32 0, i32 0
  %148 = getelementptr inbounds i8, i8* %131, i64 16
  %149 = bitcast i8* %148 to %"class.gfx::ImageSkiaRep"**
  %150 = getelementptr inbounds i8, i8* %131, i64 24
  %151 = bitcast i8* %150 to %"class.gfx::ImageSkiaRep"**
  %152 = bitcast i8* %148 to i64*
  %153 = bitcast i8* %133 to %"class.std::__1::vector.39"*
  br label %161

154:                                              ; preds = %225
  %155 = bitcast %"class.gfx::Size"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %155) #10
  %156 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %16, i64 0, i32 0
  %157 = icmp sgt i32 %3, 0
  %158 = select i1 %157, i32 %3, i32 0
  store i32 %158, i32* %156, align 4
  %159 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %16, i64 0, i32 1
  store i32 %158, i32* %159, align 4
  %160 = bitcast i8* %131 to %"class.gfx::ImageSkiaSource"*
  call void @_ZN3gfx9ImageSkiaC1ENSt3__110unique_ptrINS_15ImageSkiaSourceENS1_14default_deleteIS3_EEEERKNS_4SizeE(%"class.gfx::ImageSkia"* %0, %"class.gfx::ImageSkiaSource"* nonnull %160, %"class.gfx::Size"* nonnull dereferenceable(8) %16) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %155) #10
  br label %233

161:                                              ; preds = %130, %225
  %162 = phi %"struct.(anonymous namespace)::SelectionResult"* [ %121, %130 ], [ %232, %225 ]
  %163 = phi i64 [ 0, %130 ], [ %226, %225 ]
  %164 = getelementptr inbounds %"struct.(anonymous namespace)::SelectionResult", %"struct.(anonymous namespace)::SelectionResult"* %162, i64 %163, i32 0
  %165 = load i64, i64* %164, align 8
  call void @llvm.lifetime.start.p0i8(i64 192, i8* nonnull %134) #10
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %135) #10
  %166 = load %class.SkBitmap*, %class.SkBitmap** %136, align 8
  %167 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %166, i64 %165
  %168 = load %"class.gfx::Size"*, %"class.gfx::Size"** %137, align 8
  %169 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %168, i64 %165
  %170 = bitcast %"class.gfx::Size"* %169 to i64*
  %171 = load i64, i64* %170, align 4
  %172 = load i32*, i32** %19, align 8
  %173 = getelementptr inbounds i32, i32* %172, i64 %163
  %174 = load i32, i32* %173, align 4
  %175 = trunc i64 %171 to i32
  %176 = lshr i64 %171, 32
  %177 = trunc i64 %176 to i32
  %178 = icmp eq i32 %174, 0
  br i1 %178, label %183, label %179

179:                                              ; preds = %161
  %180 = icmp eq i32 %174, %175
  %181 = icmp eq i32 %174, %177
  %182 = and i1 %180, %181
  br i1 %182, label %183, label %184

183:                                              ; preds = %179, %161
  call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* nonnull %15, %class.SkBitmap* dereferenceable(56) %167) #10
  br label %214

184:                                              ; preds = %179
  %185 = srem i32 %174, %175
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %213

187:                                              ; preds = %184
  %188 = srem i32 %174, %177
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %213

190:                                              ; preds = %187
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %135, i8 -86, i64 56, i1 false) #10, !alias.scope !2
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %15) #10
  call void @_ZN8SkBitmap14allocN32PixelsEiib(%class.SkBitmap* nonnull %15, i32 %174, i32 %174, i1 zeroext false) #10
  %191 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %166, i64 %165, i32 1, i32 2, i32 0, i32 2
  %192 = load i32, i32* %191, align 4, !noalias !2
  %193 = icmp eq i32 %192, 1
  br i1 %193, label %195, label %194

194:                                              ; preds = %190
  call void @_ZNK8SkBitmap10eraseColorEj(%class.SkBitmap* nonnull %15, i32 0) #10
  br label %195

195:                                              ; preds = %194, %190
  call void @llvm.lifetime.start.p0i8(i64 3232, i8* nonnull %139) #10, !noalias !2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %139, i8* align 8 bitcast ({ i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.86, [384 x i64], %class.sk_sp.87, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.88", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.94" }* @__const._ZN12_GLOBAL__N_121SampleNearestNeighborERK8SkBitmapi.canvas to i8*), i64 3232, i1 false) #10
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %140) #10, !noalias !2
  call void @_ZN14SkSurfacePropsC1Ev(%class.SkSurfaceProps* nonnull %7) #10
  call void @_ZN8SkCanvasC1ERK8SkBitmapRK14SkSurfaceProps(%class.SkCanvas* nonnull %6, %class.SkBitmap* nonnull dereferenceable(56) %15, %class.SkSurfaceProps* nonnull dereferenceable(8) %7) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %140) #10, !noalias !2
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %141) #10, !noalias !2
  call void @_ZNK8SkBitmap7asImageEv(%class.sk_sp.41* nonnull sret %8, %class.SkBitmap* %167) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %142) #10, !noalias !2
  %196 = sitofp i32 %174 to float
  %197 = insertelement <2 x float> undef, float %196, i32 0
  %198 = shufflevector <2 x float> %197, <2 x float> undef, <2 x i32> zeroinitializer
  store <2 x float> zeroinitializer, <2 x float>* %143, align 8, !noalias !2
  store <2 x float> %198, <2 x float>* %144, align 8, !noalias !2
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %145) #10, !noalias !2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %145, i8 0, i64 20, i1 false) #10, !noalias !2
  %199 = load %class.SkImage*, %class.SkImage** %146, align 8, !noalias !2
  call void @_ZN8SkCanvas13drawImageRectEPK7SkImageRK6SkRectRK17SkSamplingOptionsPK7SkPaint(%class.SkCanvas* nonnull %6, %class.SkImage* %199, %struct.SkRect* nonnull dereferenceable(16) %138, %struct.SkSamplingOptions* nonnull dereferenceable(20) %10, %class.SkPaint* null) #10
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %145) #10, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %142) #10, !noalias !2
  %200 = load %class.SkImage*, %class.SkImage** %146, align 8, !noalias !2
  %201 = icmp eq %class.SkImage* %200, null
  br i1 %201, label %212, label %202

202:                                              ; preds = %195
  %203 = getelementptr inbounds %class.SkImage, %class.SkImage* %200, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %204 = atomicrmw add i32* %203, i32 -1 acq_rel
  %205 = icmp eq i32 %204, 1
  br i1 %205, label %206, label %212

206:                                              ; preds = %202
  %207 = bitcast %class.SkImage* %200 to %class.SkRefCntBase*
  %208 = bitcast %class.SkImage* %200 to void (%class.SkRefCntBase*)***
  %209 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %208, align 8
  %210 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %209, i64 2
  %211 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %210, align 8
  call void %211(%class.SkRefCntBase* nonnull %207) #10
  br label %212

212:                                              ; preds = %206, %202, %195
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %141) #10, !noalias !2
  call void @_ZN8SkCanvasD1Ev(%class.SkCanvas* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 3232, i8* nonnull %139) #10, !noalias !2
  br label %214

213:                                              ; preds = %187, %184
  call void @_ZN4skia15ImageOperations6ResizeERK8SkBitmapNS0_12ResizeMethodEiiPNS1_9AllocatorE(%class.SkBitmap* nonnull sret %15, %class.SkBitmap* dereferenceable(56) %167, i32 5, i32 %174, i32 %174, %"class.SkBitmap::Allocator"* null) #10
  br label %214

214:                                              ; preds = %183, %212, %213
  %215 = load float*, float** %147, align 8
  %216 = getelementptr inbounds float, float* %215, i64 %163
  %217 = load float, float* %216, align 4
  call void @_ZN3gfx12ImageSkiaRepC1ERK8SkBitmapf(%"class.gfx::ImageSkiaRep"* nonnull %14, %class.SkBitmap* nonnull dereferenceable(56) %15, float %217) #10
  %218 = load %"class.gfx::ImageSkiaRep"*, %"class.gfx::ImageSkiaRep"** %149, align 8
  %219 = load %"class.gfx::ImageSkiaRep"*, %"class.gfx::ImageSkiaRep"** %151, align 8
  %220 = icmp eq %"class.gfx::ImageSkiaRep"* %218, %219
  br i1 %220, label %224, label %221

221:                                              ; preds = %214
  call void @_ZN3gfx12ImageSkiaRepC1ERKS0_(%"class.gfx::ImageSkiaRep"* %218, %"class.gfx::ImageSkiaRep"* nonnull dereferenceable(192) %14) #10
  %222 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %218, i64 1
  %223 = ptrtoint %"class.gfx::ImageSkiaRep"* %222 to i64
  store i64 %223, i64* %152, align 8
  br label %225

224:                                              ; preds = %214
  call void @_ZNSt3__16vectorIN3gfx12ImageSkiaRepENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.39"* %153, %"class.gfx::ImageSkiaRep"* nonnull dereferenceable(192) %14) #10
  br label %225

225:                                              ; preds = %221, %224
  call void @_ZN3gfx12ImageSkiaRepD1Ev(%"class.gfx::ImageSkiaRep"* nonnull %14) #10
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %135) #10
  call void @llvm.lifetime.end.p0i8(i64 192, i8* nonnull %134) #10
  %226 = add nuw i64 %163, 1
  %227 = load i64, i64* %116, align 8
  %228 = load i64, i64* %118, align 8
  %229 = sub i64 %227, %228
  %230 = ashr exact i64 %229, 4
  %231 = icmp ult i64 %226, %230
  %232 = inttoptr i64 %228 to %"struct.(anonymous namespace)::SelectionResult"*
  br i1 %231, label %161, label %154

233:                                              ; preds = %154, %124, %122
  %234 = load %"struct.(anonymous namespace)::SelectionResult"*, %"struct.(anonymous namespace)::SelectionResult"** %114, align 8
  %235 = icmp eq %"struct.(anonymous namespace)::SelectionResult"* %234, null
  br i1 %235, label %239, label %236

236:                                              ; preds = %233
  %237 = ptrtoint %"struct.(anonymous namespace)::SelectionResult"* %234 to i64
  store i64 %237, i64* %116, align 8
  %238 = bitcast %"struct.(anonymous namespace)::SelectionResult"* %234 to i8*
  call void @_ZdlPv(i8* %238) #11
  br label %239

239:                                              ; preds = %233, %236
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %113) #10
  %240 = load i32*, i32** %19, align 8
  %241 = icmp eq i32* %240, null
  br i1 %241, label %246, label %242

242:                                              ; preds = %239
  %243 = ptrtoint i32* %240 to i64
  %244 = bitcast i32** %20 to i64*
  store i64 %243, i64* %244, align 8
  %245 = bitcast i32* %240 to i8*
  call void @_ZdlPv(i8* %245) #11
  br label %246

246:                                              ; preds = %239, %242
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #10
  %247 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %11, i64 0, i32 0, i32 0
  %248 = load float*, float** %247, align 8
  %249 = icmp eq float* %248, null
  br i1 %249, label %255, label %250

250:                                              ; preds = %246
  %251 = ptrtoint float* %248 to i64
  %252 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %11, i64 0, i32 0, i32 1
  %253 = bitcast float** %252 to i64*
  store i64 %251, i64* %253, align 8
  %254 = bitcast float* %248 to i8*
  call void @_ZdlPv(i8* %254) #11
  br label %255

255:                                              ; preds = %246, %250
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN12favicon_base16GetFaviconScalesEv(%"class.std::__1::vector.16"* sret) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_133GetCandidateIndicesWithBestScoresERKNSt3__16vectorIN3gfx4SizeENS0_9allocatorIS3_EEEERKNS1_IiNS4_IiEEEEPfPNS1_INS_15SelectionResultENS4_ISE_EEEE(%"class.std::__1::vector.9"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.23"* nocapture readonly dereferenceable(24), float*, %"class.std::__1::vector.30"*) unnamed_addr #0 {
  %5 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %0, i64 0, i32 0, i32 0
  %6 = load %"class.gfx::Size"*, %"class.gfx::Size"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %0, i64 0, i32 0, i32 1
  %8 = load %"class.gfx::Size"*, %"class.gfx::Size"** %7, align 8
  %9 = icmp eq %"class.gfx::Size"* %6, %8
  %10 = ptrtoint %"class.gfx::Size"* %8 to i64
  %11 = ptrtoint %"class.gfx::Size"* %6 to i64
  br i1 %9, label %18, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %1, i64 0, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %1, i64 0, i32 0, i32 1
  %16 = load i32*, i32** %15, align 8
  %17 = icmp eq i32* %14, %16
  br i1 %17, label %18, label %21

18:                                               ; preds = %12, %4
  %19 = icmp eq float* %2, null
  br i1 %19, label %311, label %20

20:                                               ; preds = %18
  store float 0.000000e+00, float* %2, align 4
  br label %311

21:                                               ; preds = %12, %25
  %22 = phi i32* [ %26, %25 ], [ %14, %12 ]
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds i32, i32* %22, i64 1
  %27 = icmp eq i32* %26, %16
  br i1 %27, label %30, label %21

28:                                               ; preds = %21
  %29 = icmp eq i32* %22, %16
  br i1 %29, label %30, label %43

30:                                               ; preds = %25, %28
  %31 = bitcast i32** %15 to i64*
  %32 = bitcast %"class.std::__1::vector.23"* %1 to i64*
  %33 = icmp eq i32* %16, %14
  br i1 %33, label %152, label %34

34:                                               ; preds = %30
  %35 = bitcast %"class.gfx::Size"** %7 to i64*
  %36 = bitcast %"class.std::__1::vector.9"* %0 to i64*
  %37 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %3, i64 0, i32 0, i32 1
  %38 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %39 = bitcast %"struct.(anonymous namespace)::SelectionResult"** %37 to i64*
  %40 = bitcast %"class.std::__1::vector.30"* %3 to i64*
  %41 = bitcast %"struct.(anonymous namespace)::SelectionResult"** %38 to i64*
  %42 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %3, i64 0, i32 0, i32 0
  br label %156

43:                                               ; preds = %28
  %44 = tail call i32 @_ZNK3gfx4Size7GetAreaEv(%"class.gfx::Size"* %6) #10
  %45 = bitcast %"class.gfx::Size"** %7 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.std::__1::vector.9"* %0 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = sub i64 %46, %48
  %50 = ashr exact i64 %49, 3
  %51 = icmp ugt i64 %50, 1
  br i1 %51, label %52, label %69

52:                                               ; preds = %43, %52
  %53 = phi i64 [ %65, %52 ], [ %48, %43 ]
  %54 = phi i64 [ %63, %52 ], [ 1, %43 ]
  %55 = phi i32 [ %62, %52 ], [ %44, %43 ]
  %56 = phi i64 [ %61, %52 ], [ 0, %43 ]
  %57 = inttoptr i64 %53 to %"class.gfx::Size"*
  %58 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %57, i64 %54
  %59 = tail call i32 @_ZNK3gfx4Size7GetAreaEv(%"class.gfx::Size"* %58) #10
  %60 = icmp sgt i32 %59, %55
  %61 = select i1 %60, i64 %54, i64 %56
  %62 = select i1 %60, i32 %59, i32 %55
  %63 = add nuw i64 %54, 1
  %64 = load i64, i64* %45, align 8
  %65 = load i64, i64* %47, align 8
  %66 = sub i64 %64, %65
  %67 = ashr exact i64 %66, 3
  %68 = icmp ult i64 %63, %67
  br i1 %68, label %52, label %69

69:                                               ; preds = %52, %43
  %70 = phi i64 [ 0, %43 ], [ %61, %52 ]
  %71 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %3, i64 0, i32 0, i32 1
  %72 = load %"struct.(anonymous namespace)::SelectionResult"*, %"struct.(anonymous namespace)::SelectionResult"** %71, align 8
  %73 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %74 = load %"struct.(anonymous namespace)::SelectionResult"*, %"struct.(anonymous namespace)::SelectionResult"** %73, align 8
  %75 = icmp eq %"struct.(anonymous namespace)::SelectionResult"* %72, %74
  %76 = ptrtoint %"struct.(anonymous namespace)::SelectionResult"* %74 to i64
  br i1 %75, label %86, label %77

77:                                               ; preds = %69
  %78 = bitcast %"struct.(anonymous namespace)::SelectionResult"* %72 to i8*
  %79 = getelementptr inbounds %"struct.(anonymous namespace)::SelectionResult", %"struct.(anonymous namespace)::SelectionResult"* %72, i64 0, i32 0
  store i64 %70, i64* %79, align 8
  %80 = getelementptr inbounds %"struct.(anonymous namespace)::SelectionResult", %"struct.(anonymous namespace)::SelectionResult"* %72, i64 0, i32 1
  store i32 0, i32* %80, align 8
  %81 = getelementptr inbounds i8, i8* %78, i64 12
  %82 = bitcast i8* %81 to i32*
  store i32 -1431655766, i32* %82, align 4
  %83 = getelementptr inbounds %"struct.(anonymous namespace)::SelectionResult", %"struct.(anonymous namespace)::SelectionResult"* %72, i64 1
  %84 = ptrtoint %"struct.(anonymous namespace)::SelectionResult"* %83 to i64
  %85 = bitcast %"struct.(anonymous namespace)::SelectionResult"** %71 to i64*
  store i64 %84, i64* %85, align 8
  br label %147

86:                                               ; preds = %69
  %87 = ptrtoint %"struct.(anonymous namespace)::SelectionResult"* %72 to i64
  %88 = bitcast %"struct.(anonymous namespace)::SelectionResult"** %71 to i64*
  %89 = bitcast %"class.std::__1::vector.30"* %3 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = sub i64 %87, %90
  %92 = ashr exact i64 %91, 4
  %93 = add nsw i64 %92, 1
  %94 = icmp ugt i64 %93, 1152921504606846975
  br i1 %94, label %95, label %97

95:                                               ; preds = %86
  %96 = bitcast %"class.std::__1::vector.30"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %96) #12
  unreachable

97:                                               ; preds = %86
  %98 = bitcast %"struct.(anonymous namespace)::SelectionResult"** %73 to i64*
  %99 = sub i64 %76, %90
  %100 = ashr exact i64 %99, 4
  %101 = icmp ult i64 %100, 576460752303423487
  br i1 %101, label %102, label %110

102:                                              ; preds = %97
  %103 = ashr exact i64 %99, 3
  %104 = icmp ult i64 %103, %93
  %105 = select i1 %104, i64 %93, i64 %103
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %115, label %107

107:                                              ; preds = %102
  %108 = icmp ugt i64 %105, 1152921504606846975
  br i1 %108, label %109, label %110

109:                                              ; preds = %107
  tail call void @abort() #12
  unreachable

110:                                              ; preds = %107, %97
  %111 = phi i64 [ %105, %107 ], [ 1152921504606846975, %97 ]
  %112 = shl i64 %111, 4
  %113 = tail call i8* @_Znwm(i64 %112) #11
  %114 = bitcast i8* %113 to %"struct.(anonymous namespace)::SelectionResult"*
  br label %115

115:                                              ; preds = %110, %102
  %116 = phi i64 [ %111, %110 ], [ 0, %102 ]
  %117 = phi %"struct.(anonymous namespace)::SelectionResult"* [ %114, %110 ], [ null, %102 ]
  %118 = getelementptr inbounds %"struct.(anonymous namespace)::SelectionResult", %"struct.(anonymous namespace)::SelectionResult"* %117, i64 %92
  %119 = getelementptr inbounds %"struct.(anonymous namespace)::SelectionResult", %"struct.(anonymous namespace)::SelectionResult"* %117, i64 %116
  %120 = ptrtoint %"struct.(anonymous namespace)::SelectionResult"* %119 to i64
  %121 = bitcast %"struct.(anonymous namespace)::SelectionResult"* %118 to i8*
  %122 = getelementptr inbounds %"struct.(anonymous namespace)::SelectionResult", %"struct.(anonymous namespace)::SelectionResult"* %118, i64 0, i32 0
  store i64 %70, i64* %122, align 8
  %123 = getelementptr inbounds %"struct.(anonymous namespace)::SelectionResult", %"struct.(anonymous namespace)::SelectionResult"* %117, i64 %92, i32 1
  store i32 0, i32* %123, align 8
  %124 = getelementptr inbounds i8, i8* %121, i64 12
  %125 = bitcast i8* %124 to i32*
  store i32 -1431655766, i32* %125, align 4
  %126 = getelementptr inbounds %"struct.(anonymous namespace)::SelectionResult", %"struct.(anonymous namespace)::SelectionResult"* %118, i64 1
  %127 = ptrtoint %"struct.(anonymous namespace)::SelectionResult"* %126 to i64
  %128 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %3, i64 0, i32 0, i32 0
  %129 = load %"struct.(anonymous namespace)::SelectionResult"*, %"struct.(anonymous namespace)::SelectionResult"** %128, align 8
  %130 = load i64, i64* %88, align 8
  %131 = ptrtoint %"struct.(anonymous namespace)::SelectionResult"* %129 to i64
  %132 = sub i64 %130, %131
  %133 = ashr exact i64 %132, 4
  %134 = sub nsw i64 0, %133
  %135 = getelementptr inbounds %"struct.(anonymous namespace)::SelectionResult", %"struct.(anonymous namespace)::SelectionResult"* %118, i64 %134
  %136 = ptrtoint %"struct.(anonymous namespace)::SelectionResult"* %135 to i64
  %137 = icmp sgt i64 %132, 0
  br i1 %137, label %138, label %142

138:                                              ; preds = %115
  %139 = bitcast %"struct.(anonymous namespace)::SelectionResult"* %135 to i8*
  %140 = bitcast %"struct.(anonymous namespace)::SelectionResult"* %129 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %139, i8* align 8 %140, i64 %132, i1 false) #10
  %141 = load %"struct.(anonymous namespace)::SelectionResult"*, %"struct.(anonymous namespace)::SelectionResult"** %128, align 8
  br label %142

142:                                              ; preds = %138, %115
  %143 = phi %"struct.(anonymous namespace)::SelectionResult"* [ %129, %115 ], [ %141, %138 ]
  store i64 %136, i64* %89, align 8
  store i64 %127, i64* %88, align 8
  store i64 %120, i64* %98, align 8
  %144 = icmp eq %"struct.(anonymous namespace)::SelectionResult"* %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %142
  %146 = bitcast %"struct.(anonymous namespace)::SelectionResult"* %143 to i8*
  tail call void @_ZdlPv(i8* %146) #11
  br label %147

147:                                              ; preds = %77, %142, %145
  %148 = icmp eq float* %2, null
  br i1 %148, label %311, label %149

149:                                              ; preds = %147
  store float 1.000000e+00, float* %2, align 4
  br label %311

150:                                              ; preds = %297
  %151 = uitofp i64 %303 to float
  br label %152

152:                                              ; preds = %150, %30
  %153 = phi float [ 0.000000e+00, %30 ], [ %298, %150 ]
  %154 = phi float [ 0.000000e+00, %30 ], [ %151, %150 ]
  %155 = icmp eq float* %2, null
  br i1 %155, label %311, label %309

156:                                              ; preds = %305, %34
  %157 = phi i64 [ %11, %34 ], [ %308, %305 ]
  %158 = phi i64 [ %10, %34 ], [ %307, %305 ]
  %159 = phi i32* [ %14, %34 ], [ %306, %305 ]
  %160 = phi i64 [ 0, %34 ], [ %299, %305 ]
  %161 = phi float [ 0.000000e+00, %34 ], [ %298, %305 ]
  %162 = getelementptr inbounds i32, i32* %159, i64 %160
  %163 = load i32, i32* %162, align 4
  %164 = sub i64 %158, %157
  %165 = ashr exact i64 %164, 3
  %166 = icmp eq i64 %164, 0
  %167 = inttoptr i64 %157 to %"class.gfx::Size"*
  br i1 %166, label %225, label %168

168:                                              ; preds = %156, %177
  %169 = phi i64 [ %178, %177 ], [ 0, %156 ]
  %170 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %167, i64 %169, i32 0
  %171 = load i32, i32* %170, align 4
  %172 = icmp eq i32 %171, %163
  br i1 %172, label %173, label %177

173:                                              ; preds = %168
  %174 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %167, i64 %169, i32 1
  %175 = load i32, i32* %174, align 4
  %176 = icmp eq i32 %175, %163
  br i1 %176, label %225, label %177

177:                                              ; preds = %173, %168
  %178 = add nuw i64 %169, 1
  %179 = icmp ult i64 %178, %165
  br i1 %179, label %168, label %180

180:                                              ; preds = %177
  %181 = shl nsw i32 %163, 3
  %182 = sitofp i32 %163 to float
  br label %183

183:                                              ; preds = %216, %180
  %184 = phi i64 [ 0, %180 ], [ %223, %216 ]
  %185 = phi float [ 0.000000e+00, %180 ], [ %222, %216 ]
  %186 = phi i64 [ -1, %180 ], [ %221, %216 ]
  %187 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %167, i64 %184, i32 0
  %188 = load i32, i32* %187, align 4
  %189 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %167, i64 %184, i32 1
  %190 = load i32, i32* %189, align 4
  %191 = add nsw i32 %190, %188
  %192 = sitofp i32 %191 to float
  %193 = fmul float %192, 5.000000e-01
  %194 = icmp slt i32 %188, %181
  %195 = icmp slt i32 %190, %181
  %196 = and i1 %194, %195
  br i1 %196, label %202, label %197

197:                                              ; preds = %183
  %198 = fdiv float %182, %193
  %199 = fcmp olt float %198, 1.000000e+00
  %200 = select i1 %199, float %198, float 1.000000e+00
  %201 = fmul float %200, 0x3F847AE140000000
  br label %216

202:                                              ; preds = %183
  %203 = icmp slt i32 %188, %163
  %204 = icmp slt i32 %190, %163
  %205 = or i1 %203, %204
  br i1 %205, label %210, label %206

206:                                              ; preds = %202
  %207 = fdiv float %182, %193
  %208 = fmul float %207, 0x3F847AE140000000
  %209 = fadd float %208, 0x3FC3333340000000
  br label %216

210:                                              ; preds = %202
  %211 = fdiv float %193, %182
  %212 = fcmp olt float %211, 1.000000e+00
  %213 = select i1 %212, float %211, float 1.000000e+00
  %214 = fmul float %213, 0x3F847AE140000000
  %215 = fadd float %214, 0x3FB99999A0000000
  br label %216

216:                                              ; preds = %210, %206, %197
  %217 = phi float [ %201, %197 ], [ %209, %206 ], [ %215, %210 ]
  %218 = icmp eq i64 %186, -1
  %219 = fcmp ogt float %217, %185
  %220 = or i1 %218, %219
  %221 = select i1 %220, i64 %184, i64 %186
  %222 = select i1 %220, float %217, float %185
  %223 = add nuw i64 %184, 1
  %224 = icmp eq i64 %223, %165
  br i1 %224, label %225, label %183

225:                                              ; preds = %173, %216, %156
  %226 = phi float [ 0.000000e+00, %156 ], [ %222, %216 ], [ 1.000000e+00, %173 ]
  %227 = phi i64 [ -1, %156 ], [ %221, %216 ], [ %169, %173 ]
  %228 = load %"struct.(anonymous namespace)::SelectionResult"*, %"struct.(anonymous namespace)::SelectionResult"** %37, align 8
  %229 = load %"struct.(anonymous namespace)::SelectionResult"*, %"struct.(anonymous namespace)::SelectionResult"** %38, align 8
  %230 = icmp eq %"struct.(anonymous namespace)::SelectionResult"* %228, %229
  %231 = ptrtoint %"struct.(anonymous namespace)::SelectionResult"* %229 to i64
  br i1 %230, label %240, label %232

232:                                              ; preds = %225
  %233 = bitcast %"struct.(anonymous namespace)::SelectionResult"* %228 to i8*
  %234 = getelementptr inbounds %"struct.(anonymous namespace)::SelectionResult", %"struct.(anonymous namespace)::SelectionResult"* %228, i64 0, i32 0
  store i64 %227, i64* %234, align 8
  %235 = getelementptr inbounds %"struct.(anonymous namespace)::SelectionResult", %"struct.(anonymous namespace)::SelectionResult"* %228, i64 0, i32 1
  store i32 %163, i32* %235, align 8
  %236 = getelementptr inbounds i8, i8* %233, i64 12
  %237 = bitcast i8* %236 to i32*
  store i32 -1431655766, i32* %237, align 4
  %238 = getelementptr inbounds %"struct.(anonymous namespace)::SelectionResult", %"struct.(anonymous namespace)::SelectionResult"* %228, i64 1
  %239 = ptrtoint %"struct.(anonymous namespace)::SelectionResult"* %238 to i64
  store i64 %239, i64* %39, align 8
  br label %297

240:                                              ; preds = %225
  %241 = ptrtoint %"struct.(anonymous namespace)::SelectionResult"* %228 to i64
  %242 = load i64, i64* %40, align 8
  %243 = sub i64 %241, %242
  %244 = ashr exact i64 %243, 4
  %245 = add nsw i64 %244, 1
  %246 = icmp ugt i64 %245, 1152921504606846975
  br i1 %246, label %247, label %249

247:                                              ; preds = %240
  %248 = bitcast %"class.std::__1::vector.30"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %248) #12
  unreachable

249:                                              ; preds = %240
  %250 = sub i64 %231, %242
  %251 = ashr exact i64 %250, 4
  %252 = icmp ult i64 %251, 576460752303423487
  br i1 %252, label %253, label %261

253:                                              ; preds = %249
  %254 = ashr exact i64 %250, 3
  %255 = icmp ult i64 %254, %245
  %256 = select i1 %255, i64 %245, i64 %254
  %257 = icmp eq i64 %256, 0
  br i1 %257, label %266, label %258

258:                                              ; preds = %253
  %259 = icmp ugt i64 %256, 1152921504606846975
  br i1 %259, label %260, label %261

260:                                              ; preds = %258
  tail call void @abort() #12
  unreachable

261:                                              ; preds = %258, %249
  %262 = phi i64 [ %256, %258 ], [ 1152921504606846975, %249 ]
  %263 = shl i64 %262, 4
  %264 = tail call i8* @_Znwm(i64 %263) #11
  %265 = bitcast i8* %264 to %"struct.(anonymous namespace)::SelectionResult"*
  br label %266

266:                                              ; preds = %261, %253
  %267 = phi i64 [ %262, %261 ], [ 0, %253 ]
  %268 = phi %"struct.(anonymous namespace)::SelectionResult"* [ %265, %261 ], [ null, %253 ]
  %269 = getelementptr inbounds %"struct.(anonymous namespace)::SelectionResult", %"struct.(anonymous namespace)::SelectionResult"* %268, i64 %244
  %270 = getelementptr inbounds %"struct.(anonymous namespace)::SelectionResult", %"struct.(anonymous namespace)::SelectionResult"* %268, i64 %267
  %271 = ptrtoint %"struct.(anonymous namespace)::SelectionResult"* %270 to i64
  %272 = bitcast %"struct.(anonymous namespace)::SelectionResult"* %269 to i8*
  %273 = getelementptr inbounds %"struct.(anonymous namespace)::SelectionResult", %"struct.(anonymous namespace)::SelectionResult"* %269, i64 0, i32 0
  store i64 %227, i64* %273, align 8
  %274 = getelementptr inbounds %"struct.(anonymous namespace)::SelectionResult", %"struct.(anonymous namespace)::SelectionResult"* %268, i64 %244, i32 1
  store i32 %163, i32* %274, align 8
  %275 = getelementptr inbounds i8, i8* %272, i64 12
  %276 = bitcast i8* %275 to i32*
  store i32 -1431655766, i32* %276, align 4
  %277 = getelementptr inbounds %"struct.(anonymous namespace)::SelectionResult", %"struct.(anonymous namespace)::SelectionResult"* %269, i64 1
  %278 = ptrtoint %"struct.(anonymous namespace)::SelectionResult"* %277 to i64
  %279 = load %"struct.(anonymous namespace)::SelectionResult"*, %"struct.(anonymous namespace)::SelectionResult"** %42, align 8
  %280 = load i64, i64* %39, align 8
  %281 = ptrtoint %"struct.(anonymous namespace)::SelectionResult"* %279 to i64
  %282 = sub i64 %280, %281
  %283 = ashr exact i64 %282, 4
  %284 = sub nsw i64 0, %283
  %285 = getelementptr inbounds %"struct.(anonymous namespace)::SelectionResult", %"struct.(anonymous namespace)::SelectionResult"* %269, i64 %284
  %286 = ptrtoint %"struct.(anonymous namespace)::SelectionResult"* %285 to i64
  %287 = icmp sgt i64 %282, 0
  br i1 %287, label %288, label %292

288:                                              ; preds = %266
  %289 = bitcast %"struct.(anonymous namespace)::SelectionResult"* %285 to i8*
  %290 = bitcast %"struct.(anonymous namespace)::SelectionResult"* %279 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %289, i8* align 8 %290, i64 %282, i1 false) #10
  %291 = load %"struct.(anonymous namespace)::SelectionResult"*, %"struct.(anonymous namespace)::SelectionResult"** %42, align 8
  br label %292

292:                                              ; preds = %288, %266
  %293 = phi %"struct.(anonymous namespace)::SelectionResult"* [ %279, %266 ], [ %291, %288 ]
  store i64 %286, i64* %40, align 8
  store i64 %278, i64* %39, align 8
  store i64 %271, i64* %41, align 8
  %294 = icmp eq %"struct.(anonymous namespace)::SelectionResult"* %293, null
  br i1 %294, label %297, label %295

295:                                              ; preds = %292
  %296 = bitcast %"struct.(anonymous namespace)::SelectionResult"* %293 to i8*
  tail call void @_ZdlPv(i8* %296) #11
  br label %297

297:                                              ; preds = %232, %292, %295
  %298 = fadd float %161, %226
  %299 = add nuw i64 %160, 1
  %300 = load i64, i64* %31, align 8
  %301 = load i64, i64* %32, align 8
  %302 = sub i64 %300, %301
  %303 = ashr exact i64 %302, 2
  %304 = icmp ult i64 %299, %303
  br i1 %304, label %305, label %150

305:                                              ; preds = %297
  %306 = inttoptr i64 %301 to i32*
  %307 = load i64, i64* %35, align 8
  %308 = load i64, i64* %36, align 8
  br label %156

309:                                              ; preds = %152
  %310 = fdiv float %153, %154
  store float %310, float* %2, align 4
  br label %311

311:                                              ; preds = %149, %147, %309, %152, %18, %20
  ret void
}

declare void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"*) unnamed_addr #2

declare void @_ZN3gfx9ImageSkia16CreateFromBitmapERK8SkBitmapf(%"class.gfx::ImageSkia"* sret, %class.SkBitmap* dereferenceable(56), float) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN3gfx12ImageSkiaRepC1ERK8SkBitmapf(%"class.gfx::ImageSkiaRep"*, %class.SkBitmap* dereferenceable(56), float) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3gfx12ImageSkiaRepD1Ev(%"class.gfx::ImageSkiaRep"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #3

declare void @_ZN3gfx9ImageSkiaC1ENSt3__110unique_ptrINS_15ImageSkiaSourceENS1_14default_deleteIS3_EEEERKNS_4SizeE(%"class.gfx::ImageSkia"*, %"class.gfx::ImageSkiaSource"*, %"class.gfx::Size"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z25SelectFaviconFrameIndicesRKNSt3__16vectorIN3gfx4SizeENS_9allocatorIS2_EEEERKNS0_IiNS3_IiEEEEPNS0_ImNS3_ImEEEEPf(%"class.std::__1::vector.9"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.23"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.62"*, float*) local_unnamed_addr #0 {
  %5 = alloca %"class.std::__1::vector.30", align 8
  %6 = alloca %"class.std::__1::set", align 8
  %7 = bitcast %"class.std::__1::vector.30"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %5, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %5, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #10
  call fastcc void @_ZN12_GLOBAL__N_133GetCandidateIndicesWithBestScoresERKNSt3__16vectorIN3gfx4SizeENS0_9allocatorIS3_EEEERKNS1_IiNS4_IiEEEEPfPNS1_INS_15SelectionResultENS4_ISE_EEEE(%"class.std::__1::vector.9"* dereferenceable(24) %0, %"class.std::__1::vector.23"* dereferenceable(24) %1, float* %3, %"class.std::__1::vector.30"* nonnull %5)
  %10 = icmp eq %"class.std::__1::vector.62"* %2, null
  br i1 %10, label %186, label %11

11:                                               ; preds = %4
  %12 = bitcast %"class.std::__1::set"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #10
  %13 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %6, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %6, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  %17 = bitcast %"class.std::__1::__tree_node_base"** %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %16, %"class.std::__1::__tree_end_node"** %13, align 8
  %18 = bitcast %"struct.(anonymous namespace)::SelectionResult"** %9 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector.30"* %5 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %19, %21
  br i1 %22, label %33, label %23

23:                                               ; preds = %11
  %24 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node"**
  %25 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %26 = bitcast %"class.std::__1::set"* %6 to i64*
  %27 = getelementptr inbounds %"class.std::__1::vector.62", %"class.std::__1::vector.62"* %2, i64 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.std::__1::vector.62", %"class.std::__1::vector.62"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %29 = bitcast i64** %27 to i64*
  %30 = bitcast %"class.std::__1::vector.62"* %2 to i64*
  %31 = bitcast i64** %28 to i64*
  %32 = getelementptr inbounds %"class.std::__1::vector.62", %"class.std::__1::vector.62"* %2, i64 0, i32 0, i32 0
  br label %36

33:                                               ; preds = %178, %11
  %34 = phi %"class.std::__1::__tree_node"* [ null, %11 ], [ %185, %178 ]
  %35 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %6, i64 0, i32 0
  call void @_ZNSt3__16__treeImNS_4lessImEENS_9allocatorImEEE7destroyEPNS_11__tree_nodeImPvEE(%"class.std::__1::__tree"* nonnull %35, %"class.std::__1::__tree_node"* %34) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #10
  br label %186

36:                                               ; preds = %178, %23
  %37 = phi %"class.std::__1::__tree_node"* [ null, %23 ], [ %185, %178 ]
  %38 = phi i64 [ %21, %23 ], [ %181, %178 ]
  %39 = phi i64 [ 0, %23 ], [ %179, %178 ]
  %40 = inttoptr i64 %38 to %"struct.(anonymous namespace)::SelectionResult"*
  %41 = getelementptr inbounds %"struct.(anonymous namespace)::SelectionResult", %"struct.(anonymous namespace)::SelectionResult"* %40, i64 %39, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = icmp eq %"class.std::__1::__tree_node"* %37, null
  br i1 %43, label %92, label %44

44:                                               ; preds = %36, %44
  %45 = phi %"class.std::__1::__tree_end_node"* [ %55, %44 ], [ %16, %36 ]
  %46 = phi %"class.std::__1::__tree_node"* [ %56, %44 ], [ %37, %36 ]
  %47 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %46, i64 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = icmp ult i64 %48, %42
  %50 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %46, i64 0, i32 0, i32 1
  %51 = bitcast %"class.std::__1::__tree_node_base"** %50 to %"class.std::__1::__tree_node"**
  %52 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %46, i64 0, i32 0, i32 0
  %53 = bitcast %"class.std::__1::__tree_node"* %46 to %"class.std::__1::__tree_node"**
  %54 = select i1 %49, %"class.std::__1::__tree_node"** %51, %"class.std::__1::__tree_node"** %53
  %55 = select i1 %49, %"class.std::__1::__tree_end_node"* %45, %"class.std::__1::__tree_end_node"* %52
  %56 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %54, align 8
  %57 = icmp eq %"class.std::__1::__tree_node"* %56, null
  br i1 %57, label %58, label %44

58:                                               ; preds = %44
  %59 = icmp eq %"class.std::__1::__tree_end_node"* %55, %16
  br i1 %59, label %65, label %60

60:                                               ; preds = %58
  %61 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %55, i64 4
  %62 = bitcast %"class.std::__1::__tree_end_node"* %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = icmp ult i64 %42, %63
  br i1 %64, label %65, label %178

65:                                               ; preds = %58, %60
  br label %66

66:                                               ; preds = %65, %88
  %67 = phi %"class.std::__1::__tree_node"* [ %91, %88 ], [ %37, %65 ]
  %68 = phi %"class.std::__1::__tree_node_base"** [ %90, %88 ], [ %14, %65 ]
  %69 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %67, i64 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = icmp ult i64 %42, %70
  br i1 %71, label %72, label %78

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %67, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %73, align 8
  %75 = icmp eq %"class.std::__1::__tree_node_base"* %74, null
  br i1 %75, label %76, label %88

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %67, i64 0, i32 0, i32 0
  br label %92

78:                                               ; preds = %66
  %79 = icmp ult i64 %70, %42
  br i1 %79, label %80, label %86

80:                                               ; preds = %78
  %81 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %67, i64 0, i32 0, i32 1
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, null
  br i1 %83, label %84, label %88

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %67, i64 0, i32 0, i32 0
  br label %92

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %67, i64 0, i32 0, i32 0
  br label %92

88:                                               ; preds = %80, %72
  %89 = phi %"class.std::__1::__tree_node_base"* [ %74, %72 ], [ %82, %80 ]
  %90 = phi %"class.std::__1::__tree_node_base"** [ %73, %72 ], [ %81, %80 ]
  %91 = bitcast %"class.std::__1::__tree_node_base"* %89 to %"class.std::__1::__tree_node"*
  br label %66

92:                                               ; preds = %36, %86, %84, %76
  %93 = phi %"class.std::__1::__tree_end_node"* [ %77, %76 ], [ %85, %84 ], [ %87, %86 ], [ %16, %36 ]
  %94 = phi %"class.std::__1::__tree_node_base"** [ %73, %76 ], [ %81, %84 ], [ %68, %86 ], [ %25, %36 ]
  %95 = bitcast %"class.std::__1::__tree_node_base"** %94 to %"class.std::__1::__tree_node"**
  %96 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %95, align 8
  %97 = icmp eq %"class.std::__1::__tree_node"* %96, null
  br i1 %97, label %98, label %118

98:                                               ; preds = %92
  %99 = call i8* @_Znwm(i64 40) #11, !noalias !7
  %100 = getelementptr inbounds i8, i8* %99, i64 32
  %101 = bitcast i8* %100 to i64*
  store i64 %42, i64* %101, align 8, !noalias !7
  %102 = bitcast i8* %99 to %"class.std::__1::__tree_node_base"*
  %103 = getelementptr inbounds i8, i8* %99, i64 16
  %104 = bitcast i8* %103 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %99, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %93, %"class.std::__1::__tree_end_node"** %104, align 8
  %105 = bitcast %"class.std::__1::__tree_node_base"** %94 to i8**
  store i8* %99, i8** %105, align 8
  %106 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %13, align 8
  %107 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %106, i64 0, i32 0
  %108 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %107, align 8
  %109 = icmp eq %"class.std::__1::__tree_node_base"* %108, null
  br i1 %109, label %113, label %110

110:                                              ; preds = %98
  %111 = ptrtoint %"class.std::__1::__tree_node_base"* %108 to i64
  store i64 %111, i64* %26, align 8
  %112 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %94, align 8
  br label %113

113:                                              ; preds = %110, %98
  %114 = phi %"class.std::__1::__tree_node_base"* [ %102, %98 ], [ %112, %110 ]
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %14, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"* %114) #10
  %116 = load i64, i64* %15, align 8
  %117 = add i64 %116, 1
  store i64 %117, i64* %15, align 8
  br label %118

118:                                              ; preds = %92, %113
  %119 = load i64*, i64** %27, align 8
  %120 = load i64*, i64** %28, align 8
  %121 = icmp eq i64* %119, %120
  %122 = ptrtoint i64* %120 to i64
  br i1 %121, label %126, label %123

123:                                              ; preds = %118
  store i64 %42, i64* %119, align 8
  %124 = getelementptr inbounds i64, i64* %119, i64 1
  %125 = ptrtoint i64* %124 to i64
  store i64 %125, i64* %29, align 8
  br label %178

126:                                              ; preds = %118
  %127 = ptrtoint i64* %119 to i64
  %128 = load i64, i64* %30, align 8
  %129 = sub i64 %127, %128
  %130 = ashr exact i64 %129, 3
  %131 = add nsw i64 %130, 1
  %132 = icmp ugt i64 %131, 2305843009213693951
  br i1 %132, label %133, label %135

133:                                              ; preds = %126
  %134 = bitcast %"class.std::__1::vector.62"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %134) #12
  unreachable

135:                                              ; preds = %126
  %136 = sub i64 %122, %128
  %137 = ashr exact i64 %136, 3
  %138 = icmp ult i64 %137, 1152921504606846975
  br i1 %138, label %139, label %147

139:                                              ; preds = %135
  %140 = ashr exact i64 %136, 2
  %141 = icmp ult i64 %140, %131
  %142 = select i1 %141, i64 %131, i64 %140
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %152, label %144

144:                                              ; preds = %139
  %145 = icmp ugt i64 %142, 2305843009213693951
  br i1 %145, label %146, label %147

146:                                              ; preds = %144
  call void @abort() #12
  unreachable

147:                                              ; preds = %144, %135
  %148 = phi i64 [ %142, %144 ], [ 2305843009213693951, %135 ]
  %149 = shl i64 %148, 3
  %150 = call i8* @_Znwm(i64 %149) #11
  %151 = bitcast i8* %150 to i64*
  br label %152

152:                                              ; preds = %147, %139
  %153 = phi i64 [ %148, %147 ], [ 0, %139 ]
  %154 = phi i64* [ %151, %147 ], [ null, %139 ]
  %155 = getelementptr inbounds i64, i64* %154, i64 %130
  %156 = getelementptr inbounds i64, i64* %154, i64 %153
  %157 = ptrtoint i64* %156 to i64
  store i64 %42, i64* %155, align 8
  %158 = getelementptr inbounds i64, i64* %155, i64 1
  %159 = ptrtoint i64* %158 to i64
  %160 = load i64*, i64** %32, align 8
  %161 = load i64, i64* %29, align 8
  %162 = ptrtoint i64* %160 to i64
  %163 = sub i64 %161, %162
  %164 = ashr exact i64 %163, 3
  %165 = sub nsw i64 0, %164
  %166 = getelementptr inbounds i64, i64* %155, i64 %165
  %167 = ptrtoint i64* %166 to i64
  %168 = icmp sgt i64 %163, 0
  br i1 %168, label %169, label %173

169:                                              ; preds = %152
  %170 = bitcast i64* %166 to i8*
  %171 = bitcast i64* %160 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %170, i8* align 8 %171, i64 %163, i1 false) #10
  %172 = load i64*, i64** %32, align 8
  br label %173

173:                                              ; preds = %169, %152
  %174 = phi i64* [ %160, %152 ], [ %172, %169 ]
  store i64 %167, i64* %30, align 8
  store i64 %159, i64* %29, align 8
  store i64 %157, i64* %31, align 8
  %175 = icmp eq i64* %174, null
  br i1 %175, label %178, label %176

176:                                              ; preds = %173
  %177 = bitcast i64* %174 to i8*
  call void @_ZdlPv(i8* %177) #11
  br label %178

178:                                              ; preds = %60, %176, %173, %123
  %179 = add nuw i64 %39, 1
  %180 = load i64, i64* %18, align 8
  %181 = load i64, i64* %20, align 8
  %182 = sub i64 %180, %181
  %183 = ashr exact i64 %182, 4
  %184 = icmp ult i64 %179, %183
  %185 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %24, align 8
  br i1 %184, label %36, label %33

186:                                              ; preds = %4, %33
  %187 = load %"struct.(anonymous namespace)::SelectionResult"*, %"struct.(anonymous namespace)::SelectionResult"** %8, align 8
  %188 = icmp eq %"struct.(anonymous namespace)::SelectionResult"* %187, null
  br i1 %188, label %193, label %189

189:                                              ; preds = %186
  %190 = ptrtoint %"struct.(anonymous namespace)::SelectionResult"* %187 to i64
  %191 = bitcast %"struct.(anonymous namespace)::SelectionResult"** %9 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.(anonymous namespace)::SelectionResult"* %187 to i8*
  call void @_ZdlPv(i8* %192) #11
  br label %193

193:                                              ; preds = %186, %189
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #10
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #4

declare i32 @_ZNK3gfx4Size7GetAreaEv(%"class.gfx::Size"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3gfx12ImageSkiaRepENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.39"*, %"class.gfx::ImageSkiaRep"* dereferenceable(192)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.gfx::ImageSkiaRep"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.39"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 192
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 96076792050570581
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.39"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.gfx::ImageSkiaRep"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 192
  %20 = icmp ult i64 %19, 48038396025285290
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 96076792050570581, %14 ]
  %28 = mul i64 %27, 192
  %29 = tail call i8* @_Znwm(i64 %28) #11
  %30 = bitcast i8* %29 to %"class.gfx::ImageSkiaRep"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.gfx::ImageSkiaRep"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %33, i64 %9
  %35 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %33, i64 %32
  %36 = ptrtoint %"class.gfx::ImageSkiaRep"* %35 to i64
  tail call void @_ZN3gfx12ImageSkiaRepC1ERKS0_(%"class.gfx::ImageSkiaRep"* %34, %"class.gfx::ImageSkiaRep"* dereferenceable(192) %1) #10
  %37 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %34, i64 1
  %38 = ptrtoint %"class.gfx::ImageSkiaRep"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %0, i64 0, i32 0, i32 0
  %40 = load %"class.gfx::ImageSkiaRep"*, %"class.gfx::ImageSkiaRep"** %39, align 8
  %41 = load %"class.gfx::ImageSkiaRep"*, %"class.gfx::ImageSkiaRep"** %3, align 8
  %42 = icmp eq %"class.gfx::ImageSkiaRep"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"class.gfx::ImageSkiaRep"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"class.gfx::ImageSkiaRep"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"class.gfx::ImageSkiaRep"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %46, i64 -1
  %49 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %47, i64 -1
  tail call void @_ZN3gfx12ImageSkiaRepC1ERKS0_(%"class.gfx::ImageSkiaRep"* %48, %"class.gfx::ImageSkiaRep"* dereferenceable(192) %49) #10
  %50 = icmp eq %"class.gfx::ImageSkiaRep"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"class.gfx::ImageSkiaRep"*, %"class.gfx::ImageSkiaRep"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"class.gfx::ImageSkiaRep"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"class.gfx::ImageSkiaRep"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"class.gfx::ImageSkiaRep"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"class.gfx::ImageSkiaRep"*
  %60 = icmp eq %"class.gfx::ImageSkiaRep"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"class.gfx::ImageSkiaRep"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %62, i64 -1
  tail call void @_ZN3gfx12ImageSkiaRepD1Ev(%"class.gfx::ImageSkiaRep"* %63) #10
  %64 = icmp eq %"class.gfx::ImageSkiaRep"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #11
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

declare void @_ZN3gfx12ImageSkiaRepC1ERKS0_(%"class.gfx::ImageSkiaRep"*, %"class.gfx::ImageSkiaRep"* dereferenceable(192)) unnamed_addr #2

declare void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #2

declare void @_ZN4skia15ImageOperations6ResizeERK8SkBitmapNS0_12ResizeMethodEiiPNS1_9AllocatorE(%class.SkBitmap* sret, %class.SkBitmap* dereferenceable(56), i32, i32, i32, %"class.SkBitmap::Allocator"*) local_unnamed_addr #2

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #2

declare void @_ZN8SkBitmap14allocN32PixelsEiib(%class.SkBitmap*, i32, i32, i1 zeroext) local_unnamed_addr #2

declare void @_ZN14SkSurfacePropsC1Ev(%class.SkSurfaceProps*) unnamed_addr #2

declare void @_ZN8SkCanvasC1ERK8SkBitmapRK14SkSurfaceProps(%class.SkCanvas*, %class.SkBitmap* dereferenceable(56), %class.SkSurfaceProps* dereferenceable(8)) unnamed_addr #2

declare void @_ZNK8SkBitmap7asImageEv(%class.sk_sp.41* sret, %class.SkBitmap*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkCanvasD1Ev(%class.SkCanvas*) unnamed_addr #3

declare void @_ZNK8SkBitmap10eraseColorEj(%class.SkBitmap*, i32) local_unnamed_addr #2

declare void @_ZN8SkCanvas13drawImageRectEPK7SkImageRK6SkRectRK17SkSamplingOptionsPK7SkPaint(%class.SkCanvas*, %class.SkImage*, %struct.SkRect* dereferenceable(16), %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_118FaviconImageSourceD2Ev(%"class.(anonymous namespace)::FaviconImageSource"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::FaviconImageSource", %"class.(anonymous namespace)::FaviconImageSource"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_118FaviconImageSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::FaviconImageSource", %"class.(anonymous namespace)::FaviconImageSource"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.gfx::ImageSkiaRep"*, %"class.gfx::ImageSkiaRep"** %4, align 8
  %6 = icmp eq %"class.gfx::ImageSkiaRep"* %5, null
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.gfx::ImageSkiaRep"* %5 to i8*
  %9 = getelementptr inbounds %"class.(anonymous namespace)::FaviconImageSource", %"class.(anonymous namespace)::FaviconImageSource"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"class.gfx::ImageSkiaRep"*, %"class.gfx::ImageSkiaRep"** %9, align 8
  %11 = icmp eq %"class.gfx::ImageSkiaRep"* %10, %5
  br i1 %11, label %19, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"class.gfx::ImageSkiaRep"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %13, i64 -1
  tail call void @_ZN3gfx12ImageSkiaRepD1Ev(%"class.gfx::ImageSkiaRep"* %14) #10
  %15 = icmp eq %"class.gfx::ImageSkiaRep"* %14, %5
  br i1 %15, label %16, label %12

16:                                               ; preds = %12
  %17 = bitcast %"class.std::__1::vector.39"* %3 to i8**
  %18 = load i8*, i8** %17, align 8
  br label %19

19:                                               ; preds = %16, %7
  %20 = phi i8* [ %18, %16 ], [ %8, %7 ]
  store %"class.gfx::ImageSkiaRep"* %5, %"class.gfx::ImageSkiaRep"** %9, align 8
  tail call void @_ZdlPv(i8* %20) #11
  br label %21

21:                                               ; preds = %1, %19
  %22 = getelementptr inbounds %"class.(anonymous namespace)::FaviconImageSource", %"class.(anonymous namespace)::FaviconImageSource"* %0, i64 0, i32 0
  tail call void @_ZN3gfx15ImageSkiaSourceD2Ev(%"class.gfx::ImageSkiaSource"* %22) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_118FaviconImageSourceD0Ev(%"class.(anonymous namespace)::FaviconImageSource"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::FaviconImageSource", %"class.(anonymous namespace)::FaviconImageSource"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_118FaviconImageSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::FaviconImageSource", %"class.(anonymous namespace)::FaviconImageSource"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.gfx::ImageSkiaRep"*, %"class.gfx::ImageSkiaRep"** %4, align 8
  %6 = icmp eq %"class.gfx::ImageSkiaRep"* %5, null
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.gfx::ImageSkiaRep"* %5 to i8*
  %9 = getelementptr inbounds %"class.(anonymous namespace)::FaviconImageSource", %"class.(anonymous namespace)::FaviconImageSource"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"class.gfx::ImageSkiaRep"*, %"class.gfx::ImageSkiaRep"** %9, align 8
  %11 = icmp eq %"class.gfx::ImageSkiaRep"* %10, %5
  br i1 %11, label %19, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"class.gfx::ImageSkiaRep"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %13, i64 -1
  tail call void @_ZN3gfx12ImageSkiaRepD1Ev(%"class.gfx::ImageSkiaRep"* %14) #10
  %15 = icmp eq %"class.gfx::ImageSkiaRep"* %14, %5
  br i1 %15, label %16, label %12

16:                                               ; preds = %12
  %17 = bitcast %"class.std::__1::vector.39"* %3 to i8**
  %18 = load i8*, i8** %17, align 8
  br label %19

19:                                               ; preds = %16, %7
  %20 = phi i8* [ %18, %16 ], [ %8, %7 ]
  store %"class.gfx::ImageSkiaRep"* %5, %"class.gfx::ImageSkiaRep"** %9, align 8
  tail call void @_ZdlPv(i8* %20) #11
  br label %21

21:                                               ; preds = %1, %19
  %22 = getelementptr inbounds %"class.(anonymous namespace)::FaviconImageSource", %"class.(anonymous namespace)::FaviconImageSource"* %0, i64 0, i32 0
  tail call void @_ZN3gfx15ImageSkiaSourceD2Ev(%"class.gfx::ImageSkiaSource"* %22) #10
  %23 = bitcast %"class.(anonymous namespace)::FaviconImageSource"* %0 to i8*
  tail call void @_ZdlPv(i8* %23) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_118FaviconImageSource16GetImageForScaleEf(%"class.gfx::ImageSkiaRep"* noalias sret, %"class.(anonymous namespace)::FaviconImageSource"* nocapture readonly, float) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.(anonymous namespace)::FaviconImageSource", %"class.(anonymous namespace)::FaviconImageSource"* %1, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.gfx::ImageSkiaRep"*, %"class.gfx::ImageSkiaRep"** %4, align 8
  %6 = getelementptr inbounds %"class.(anonymous namespace)::FaviconImageSource", %"class.(anonymous namespace)::FaviconImageSource"* %1, i64 0, i32 1, i32 0, i32 1
  %7 = load %"class.gfx::ImageSkiaRep"*, %"class.gfx::ImageSkiaRep"** %6, align 8
  %8 = icmp eq %"class.gfx::ImageSkiaRep"* %5, %7
  br i1 %8, label %37, label %9

9:                                                ; preds = %3, %30
  %10 = phi %"class.gfx::ImageSkiaRep"* [ %28, %30 ], [ null, %3 ]
  %11 = phi %"class.gfx::ImageSkiaRep"* [ %31, %30 ], [ %5, %3 ]
  %12 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %11, i64 0, i32 6
  %13 = load float, float* %12, align 8
  %14 = fcmp oeq float %13, 0.000000e+00
  %15 = select i1 %14, float 1.000000e+00, float %13
  %16 = fcmp oeq float %15, %2
  br i1 %16, label %33, label %17

17:                                               ; preds = %9
  %18 = icmp eq %"class.gfx::ImageSkiaRep"* %10, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %10, i64 0, i32 6
  %21 = load float, float* %20, align 8
  %22 = fcmp oeq float %21, 0.000000e+00
  %23 = select i1 %22, float 1.000000e+00, float %21
  %24 = fcmp olt float %23, %15
  br i1 %24, label %25, label %26

25:                                               ; preds = %17, %19
  br label %26

26:                                               ; preds = %25, %19
  %27 = phi float [ %15, %25 ], [ %23, %19 ]
  %28 = phi %"class.gfx::ImageSkiaRep"* [ %11, %25 ], [ %10, %19 ]
  %29 = fcmp ult float %27, %2
  br i1 %29, label %30, label %34

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %11, i64 1
  %32 = icmp eq %"class.gfx::ImageSkiaRep"* %31, %7
  br i1 %32, label %34, label %9

33:                                               ; preds = %9
  tail call void @_ZN3gfx12ImageSkiaRepC1ERKS0_(%"class.gfx::ImageSkiaRep"* %0, %"class.gfx::ImageSkiaRep"* dereferenceable(192) %11) #10
  br label %38

34:                                               ; preds = %26, %30
  %35 = icmp eq %"class.gfx::ImageSkiaRep"* %28, null
  br i1 %35, label %37, label %36

36:                                               ; preds = %34
  tail call void @_ZN3gfx12ImageSkiaRepC1ERKS0_(%"class.gfx::ImageSkiaRep"* %0, %"class.gfx::ImageSkiaRep"* nonnull dereferenceable(192) %28) #10
  br label %38

37:                                               ; preds = %3, %34
  tail call void @_ZN3gfx12ImageSkiaRepC1Ev(%"class.gfx::ImageSkiaRep"* %0) #10
  br label %38

38:                                               ; preds = %33, %36, %37
  ret void
}

declare zeroext i1 @_ZNK3gfx15ImageSkiaSource28HasRepresentationAtAllScalesEv(%"class.gfx::ImageSkiaSource"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3gfx15ImageSkiaSourceD2Ev(%"class.gfx::ImageSkiaSource"*) unnamed_addr #3

declare void @_ZN3gfx12ImageSkiaRepC1Ev(%"class.gfx::ImageSkiaRep"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeImNS_4lessImEENS_9allocatorImEEE7destroyEPNS_11__tree_nodeImPvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeImNS_4lessImEENS_9allocatorImEEE7destroyEPNS_11__tree_nodeImPvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeImNS_4lessImEENS_9allocatorImEEE7destroyEPNS_11__tree_nodeImPvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #10
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !10
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !10
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !10
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN12_GLOBAL__N_121SampleNearestNeighborERK8SkBitmapi: argument 0"}
!4 = distinct !{!4, !"_ZN12_GLOBAL__N_121SampleNearestNeighborERK8SkBitmapi"}
!5 = distinct !{!5, !6, !"_ZN12_GLOBAL__N_116GetResizedBitmapERK8SkBitmapN3gfx4SizeEi: argument 0"}
!6 = distinct !{!6, !"_ZN12_GLOBAL__N_116GetResizedBitmapERK8SkBitmapN3gfx4SizeEi"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNSt3__16__treeImNS_4lessImEENS_9allocatorImEEE16__construct_nodeIJRKmEEENS_10unique_ptrINS_11__tree_nodeImPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_: argument 0"}
!9 = distinct !{!9, !"_ZNSt3__16__treeImNS_4lessImEENS_9allocatorImEEE16__construct_nodeIJRKmEEENS_10unique_ptrINS_11__tree_nodeImPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_"}
!10 = !{i8 0, i8 2}
