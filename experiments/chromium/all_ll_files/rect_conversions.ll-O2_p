; ModuleID = '../../ui/gfx/geometry/rect_conversions.cc'
source_filename = "../../ui/gfx/geometry/rect_conversions.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN3gfx15ToEnclosingRectERKNS_5RectFE(%"class.gfx::RectF"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 {
  %2 = alloca { i64, i64 }, align 8
  %3 = bitcast { i64, i64 }* %2 to %"class.gfx::Rect"*
  %4 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 0
  %5 = load float, float* %4, align 4
  %6 = tail call float @llvm.floor.f32(float %5) #5
  %7 = fcmp ult float %6, 0xC1E0000000000000
  %8 = fcmp ugt float %6, 0x41DFFFFFE0000000
  %9 = fcmp ogt float %6, 0xC1E0000000000000
  %10 = select i1 %9, float %6, float 0xC1E0000000000000
  %11 = fptosi float %10 to i32
  %12 = select i1 %7, i32 0, i32 2147483647
  %13 = select i1 %8, i32 %12, i32 %11
  %14 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 0
  %15 = load float, float* %14, align 4
  %16 = fcmp une float %15, 0.000000e+00
  br i1 %16, label %17, label %27

17:                                               ; preds = %1
  %18 = fadd float %5, %15
  %19 = tail call float @llvm.ceil.f32(float %18) #5
  %20 = fcmp ult float %19, 0xC1E0000000000000
  %21 = fcmp ugt float %19, 0x41DFFFFFE0000000
  %22 = fcmp ogt float %19, 0xC1E0000000000000
  %23 = select i1 %22, float %19, float 0xC1E0000000000000
  %24 = fptosi float %23 to i32
  %25 = select i1 %20, i32 0, i32 2147483647
  %26 = select i1 %21, i32 %25, i32 %24
  br label %27

27:                                               ; preds = %1, %17
  %28 = phi i32 [ %26, %17 ], [ %13, %1 ]
  %29 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 1
  %30 = load float, float* %29, align 4
  %31 = tail call float @llvm.floor.f32(float %30) #5
  %32 = fcmp ult float %31, 0xC1E0000000000000
  %33 = fcmp ugt float %31, 0x41DFFFFFE0000000
  %34 = fcmp ogt float %31, 0xC1E0000000000000
  %35 = select i1 %34, float %31, float 0xC1E0000000000000
  %36 = fptosi float %35 to i32
  %37 = select i1 %32, i32 0, i32 2147483647
  %38 = select i1 %33, i32 %37, i32 %36
  %39 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 1
  %40 = load float, float* %39, align 4
  %41 = fcmp une float %40, 0.000000e+00
  br i1 %41, label %42, label %52

42:                                               ; preds = %27
  %43 = fadd float %30, %40
  %44 = tail call float @llvm.ceil.f32(float %43) #5
  %45 = fcmp ult float %44, 0xC1E0000000000000
  %46 = fcmp ugt float %44, 0x41DFFFFFE0000000
  %47 = fcmp ogt float %44, 0xC1E0000000000000
  %48 = select i1 %47, float %44, float 0xC1E0000000000000
  %49 = fptosi float %48 to i32
  %50 = select i1 %45, i32 0, i32 2147483647
  %51 = select i1 %46, i32 %50, i32 %49
  br label %52

52:                                               ; preds = %27, %42
  %53 = phi i32 [ %51, %42 ], [ %38, %27 ]
  %54 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  %55 = bitcast { i64, i64 }* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 0, i64 16, i1 false) #5
  call void @_ZN3gfx4Rect11SetByBoundsEiiii(%"class.gfx::Rect"* nonnull %3, i32 %13, i32 %38, i32 %28, i32 %53) #5
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  %57 = load i64, i64* %56, align 8
  %58 = insertvalue { i64, i64 } undef, i64 %57, 0
  %59 = load i64, i64* %54, align 8
  %60 = insertvalue { i64, i64 } %58, i64 %59, 1
  ret { i64, i64 } %60
}

declare void @_ZN3gfx4Rect11SetByBoundsEiiii(%"class.gfx::Rect"*, i32, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN3gfx28ToEnclosingRectIgnoringErrorERKNS_5RectFEf(%"class.gfx::RectF"* nocapture readonly dereferenceable(16), float) local_unnamed_addr #0 {
  %3 = alloca { i64, i64 }, align 8
  %4 = bitcast { i64, i64 }* %3 to %"class.gfx::Rect"*
  %5 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = fcmp ult float %6, 0.000000e+00
  %8 = fadd float %6, 5.000000e-01
  %9 = tail call float @llvm.floor.f32(float %8) #5
  %10 = fadd float %6, -5.000000e-01
  %11 = tail call float @llvm.ceil.f32(float %10) #5
  %12 = select i1 %7, float %11, float %9
  %13 = fcmp ult float %12, 0xC1E0000000000000
  %14 = fcmp ugt float %12, 0x41DFFFFFE0000000
  %15 = fcmp ogt float %12, 0xC1E0000000000000
  %16 = select i1 %15, float %12, float 0xC1E0000000000000
  %17 = fptosi float %16 to i32
  %18 = select i1 %13, i32 0, i32 2147483647
  %19 = select i1 %14, i32 %18, i32 %17
  %20 = sitofp i32 %19 to float
  %21 = fsub float %20, %6
  %22 = tail call float @llvm.fabs.f32(float %21) #5
  %23 = fcmp olt float %22, %1
  br i1 %23, label %33, label %24

24:                                               ; preds = %2
  %25 = tail call float @llvm.floor.f32(float %6) #5
  %26 = fcmp ult float %25, 0xC1E0000000000000
  %27 = fcmp ugt float %25, 0x41DFFFFFE0000000
  %28 = fcmp ogt float %25, 0xC1E0000000000000
  %29 = select i1 %28, float %25, float 0xC1E0000000000000
  %30 = fptosi float %29 to i32
  %31 = select i1 %26, i32 0, i32 2147483647
  %32 = select i1 %27, i32 %31, i32 %30
  br label %33

33:                                               ; preds = %2, %24
  %34 = phi i32 [ %32, %24 ], [ %19, %2 ]
  %35 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 0
  %36 = load float, float* %35, align 4
  %37 = fcmp une float %36, 0.000000e+00
  br i1 %37, label %38, label %66

38:                                               ; preds = %33
  %39 = fadd float %6, %36
  %40 = fcmp ult float %39, 0.000000e+00
  %41 = fadd float %39, 5.000000e-01
  %42 = tail call float @llvm.floor.f32(float %41) #5
  %43 = fadd float %39, -5.000000e-01
  %44 = tail call float @llvm.ceil.f32(float %43) #5
  %45 = select i1 %40, float %44, float %42
  %46 = fcmp ult float %45, 0xC1E0000000000000
  %47 = fcmp ugt float %45, 0x41DFFFFFE0000000
  %48 = fcmp ogt float %45, 0xC1E0000000000000
  %49 = select i1 %48, float %45, float 0xC1E0000000000000
  %50 = fptosi float %49 to i32
  %51 = select i1 %46, i32 0, i32 2147483647
  %52 = select i1 %47, i32 %51, i32 %50
  %53 = sitofp i32 %52 to float
  %54 = fsub float %53, %39
  %55 = tail call float @llvm.fabs.f32(float %54) #5
  %56 = fcmp olt float %55, %1
  br i1 %56, label %66, label %57

57:                                               ; preds = %38
  %58 = tail call float @llvm.ceil.f32(float %39) #5
  %59 = fcmp ult float %58, 0xC1E0000000000000
  %60 = fcmp ugt float %58, 0x41DFFFFFE0000000
  %61 = fcmp ogt float %58, 0xC1E0000000000000
  %62 = select i1 %61, float %58, float 0xC1E0000000000000
  %63 = fptosi float %62 to i32
  %64 = select i1 %59, i32 0, i32 2147483647
  %65 = select i1 %60, i32 %64, i32 %63
  br label %66

66:                                               ; preds = %57, %38, %33
  %67 = phi i32 [ %34, %33 ], [ %65, %57 ], [ %52, %38 ]
  %68 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 1
  %69 = load float, float* %68, align 4
  %70 = fcmp ult float %69, 0.000000e+00
  %71 = fadd float %69, 5.000000e-01
  %72 = tail call float @llvm.floor.f32(float %71) #5
  %73 = fadd float %69, -5.000000e-01
  %74 = tail call float @llvm.ceil.f32(float %73) #5
  %75 = select i1 %70, float %74, float %72
  %76 = fcmp ult float %75, 0xC1E0000000000000
  %77 = fcmp ugt float %75, 0x41DFFFFFE0000000
  %78 = fcmp ogt float %75, 0xC1E0000000000000
  %79 = select i1 %78, float %75, float 0xC1E0000000000000
  %80 = fptosi float %79 to i32
  %81 = select i1 %76, i32 0, i32 2147483647
  %82 = select i1 %77, i32 %81, i32 %80
  %83 = sitofp i32 %82 to float
  %84 = fsub float %83, %69
  %85 = tail call float @llvm.fabs.f32(float %84) #5
  %86 = fcmp olt float %85, %1
  br i1 %86, label %96, label %87

87:                                               ; preds = %66
  %88 = tail call float @llvm.floor.f32(float %69) #5
  %89 = fcmp ult float %88, 0xC1E0000000000000
  %90 = fcmp ugt float %88, 0x41DFFFFFE0000000
  %91 = fcmp ogt float %88, 0xC1E0000000000000
  %92 = select i1 %91, float %88, float 0xC1E0000000000000
  %93 = fptosi float %92 to i32
  %94 = select i1 %89, i32 0, i32 2147483647
  %95 = select i1 %90, i32 %94, i32 %93
  br label %96

96:                                               ; preds = %66, %87
  %97 = phi i32 [ %95, %87 ], [ %82, %66 ]
  %98 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 1
  %99 = load float, float* %98, align 4
  %100 = fcmp une float %99, 0.000000e+00
  br i1 %100, label %101, label %129

101:                                              ; preds = %96
  %102 = fadd float %69, %99
  %103 = fcmp ult float %102, 0.000000e+00
  %104 = fadd float %102, 5.000000e-01
  %105 = tail call float @llvm.floor.f32(float %104) #5
  %106 = fadd float %102, -5.000000e-01
  %107 = tail call float @llvm.ceil.f32(float %106) #5
  %108 = select i1 %103, float %107, float %105
  %109 = fcmp ult float %108, 0xC1E0000000000000
  %110 = fcmp ugt float %108, 0x41DFFFFFE0000000
  %111 = fcmp ogt float %108, 0xC1E0000000000000
  %112 = select i1 %111, float %108, float 0xC1E0000000000000
  %113 = fptosi float %112 to i32
  %114 = select i1 %109, i32 0, i32 2147483647
  %115 = select i1 %110, i32 %114, i32 %113
  %116 = sitofp i32 %115 to float
  %117 = fsub float %116, %102
  %118 = tail call float @llvm.fabs.f32(float %117) #5
  %119 = fcmp olt float %118, %1
  br i1 %119, label %129, label %120

120:                                              ; preds = %101
  %121 = tail call float @llvm.ceil.f32(float %102) #5
  %122 = fcmp ult float %121, 0xC1E0000000000000
  %123 = fcmp ugt float %121, 0x41DFFFFFE0000000
  %124 = fcmp ogt float %121, 0xC1E0000000000000
  %125 = select i1 %124, float %121, float 0xC1E0000000000000
  %126 = fptosi float %125 to i32
  %127 = select i1 %122, i32 0, i32 2147483647
  %128 = select i1 %123, i32 %127, i32 %126
  br label %129

129:                                              ; preds = %120, %101, %96
  %130 = phi i32 [ %97, %96 ], [ %128, %120 ], [ %115, %101 ]
  %131 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %132 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %132, i8 0, i64 16, i1 false) #5
  call void @_ZN3gfx4Rect11SetByBoundsEiiii(%"class.gfx::Rect"* nonnull %4, i32 %34, i32 %97, i32 %67, i32 %130) #5
  %133 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %134 = load i64, i64* %133, align 8
  %135 = insertvalue { i64, i64 } undef, i64 %134, 0
  %136 = load i64, i64* %131, align 8
  %137 = insertvalue { i64, i64 } %135, i64 %136, 1
  ret { i64, i64 } %137
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN3gfx14ToEnclosedRectERKNS_5RectFE(%"class.gfx::RectF"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 {
  %2 = alloca { i64, i64 }, align 8
  %3 = bitcast { i64, i64 }* %2 to %"class.gfx::Rect"*
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  %5 = bitcast { i64, i64 }* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false) #5
  %6 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 0
  %7 = load float, float* %6, align 4
  %8 = tail call float @llvm.ceil.f32(float %7) #5
  %9 = fcmp ult float %8, 0xC1E0000000000000
  %10 = fcmp ugt float %8, 0x41DFFFFFE0000000
  %11 = fcmp ogt float %8, 0xC1E0000000000000
  %12 = select i1 %11, float %8, float 0xC1E0000000000000
  %13 = fptosi float %12 to i32
  %14 = select i1 %9, i32 0, i32 2147483647
  %15 = select i1 %10, i32 %14, i32 %13
  %16 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 1
  %17 = load float, float* %16, align 4
  %18 = tail call float @llvm.ceil.f32(float %17) #5
  %19 = fcmp ult float %18, 0xC1E0000000000000
  %20 = fcmp ugt float %18, 0x41DFFFFFE0000000
  %21 = fcmp ogt float %18, 0xC1E0000000000000
  %22 = select i1 %21, float %18, float 0xC1E0000000000000
  %23 = fptosi float %22 to i32
  %24 = select i1 %19, i32 0, i32 2147483647
  %25 = select i1 %20, i32 %24, i32 %23
  %26 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 0
  %27 = load float, float* %26, align 4
  %28 = fadd float %7, %27
  %29 = tail call float @llvm.floor.f32(float %28) #5
  %30 = fcmp ult float %29, 0xC1E0000000000000
  %31 = fcmp ugt float %29, 0x41DFFFFFE0000000
  %32 = fcmp ogt float %29, 0xC1E0000000000000
  %33 = select i1 %32, float %29, float 0xC1E0000000000000
  %34 = fptosi float %33 to i32
  %35 = select i1 %30, i32 0, i32 2147483647
  %36 = select i1 %31, i32 %35, i32 %34
  %37 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 1
  %38 = load float, float* %37, align 4
  %39 = fadd float %17, %38
  %40 = tail call float @llvm.floor.f32(float %39) #5
  %41 = fcmp ult float %40, 0xC1E0000000000000
  %42 = fcmp ugt float %40, 0x41DFFFFFE0000000
  %43 = fcmp ogt float %40, 0xC1E0000000000000
  %44 = select i1 %43, float %40, float 0xC1E0000000000000
  %45 = fptosi float %44 to i32
  %46 = select i1 %41, i32 0, i32 2147483647
  %47 = select i1 %42, i32 %46, i32 %45
  call void @_ZN3gfx4Rect11SetByBoundsEiiii(%"class.gfx::Rect"* nonnull %3, i32 %15, i32 %25, i32 %36, i32 %47) #5
  %48 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = insertvalue { i64, i64 } undef, i64 %49, 0
  %51 = load i64, i64* %4, align 8
  %52 = insertvalue { i64, i64 } %50, i64 %51, 1
  ret { i64, i64 } %52
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN3gfx27ToEnclosedRectIgnoringErrorERKNS_5RectFEf(%"class.gfx::RectF"* nocapture readonly dereferenceable(16), float) local_unnamed_addr #0 {
  %3 = alloca { i64, i64 }, align 8
  %4 = bitcast { i64, i64 }* %3 to %"class.gfx::Rect"*
  %5 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = fcmp ult float %6, 0.000000e+00
  %8 = fadd float %6, 5.000000e-01
  %9 = tail call float @llvm.floor.f32(float %8) #5
  %10 = fadd float %6, -5.000000e-01
  %11 = tail call float @llvm.ceil.f32(float %10) #5
  %12 = select i1 %7, float %11, float %9
  %13 = fcmp ult float %12, 0xC1E0000000000000
  %14 = fcmp ugt float %12, 0x41DFFFFFE0000000
  %15 = fcmp ogt float %12, 0xC1E0000000000000
  %16 = select i1 %15, float %12, float 0xC1E0000000000000
  %17 = fptosi float %16 to i32
  %18 = select i1 %13, i32 0, i32 2147483647
  %19 = select i1 %14, i32 %18, i32 %17
  %20 = sitofp i32 %19 to float
  %21 = fsub float %20, %6
  %22 = tail call float @llvm.fabs.f32(float %21) #5
  %23 = fcmp olt float %22, %1
  br i1 %23, label %33, label %24

24:                                               ; preds = %2
  %25 = tail call float @llvm.ceil.f32(float %6) #5
  %26 = fcmp ult float %25, 0xC1E0000000000000
  %27 = fcmp ugt float %25, 0x41DFFFFFE0000000
  %28 = fcmp ogt float %25, 0xC1E0000000000000
  %29 = select i1 %28, float %25, float 0xC1E0000000000000
  %30 = fptosi float %29 to i32
  %31 = select i1 %26, i32 0, i32 2147483647
  %32 = select i1 %27, i32 %31, i32 %30
  br label %33

33:                                               ; preds = %2, %24
  %34 = phi i32 [ %32, %24 ], [ %19, %2 ]
  %35 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 0
  %36 = load float, float* %35, align 4
  %37 = fcmp une float %36, 0.000000e+00
  br i1 %37, label %38, label %66

38:                                               ; preds = %33
  %39 = fadd float %6, %36
  %40 = fcmp ult float %39, 0.000000e+00
  %41 = fadd float %39, 5.000000e-01
  %42 = tail call float @llvm.floor.f32(float %41) #5
  %43 = fadd float %39, -5.000000e-01
  %44 = tail call float @llvm.ceil.f32(float %43) #5
  %45 = select i1 %40, float %44, float %42
  %46 = fcmp ult float %45, 0xC1E0000000000000
  %47 = fcmp ugt float %45, 0x41DFFFFFE0000000
  %48 = fcmp ogt float %45, 0xC1E0000000000000
  %49 = select i1 %48, float %45, float 0xC1E0000000000000
  %50 = fptosi float %49 to i32
  %51 = select i1 %46, i32 0, i32 2147483647
  %52 = select i1 %47, i32 %51, i32 %50
  %53 = sitofp i32 %52 to float
  %54 = fsub float %53, %39
  %55 = tail call float @llvm.fabs.f32(float %54) #5
  %56 = fcmp olt float %55, %1
  br i1 %56, label %66, label %57

57:                                               ; preds = %38
  %58 = tail call float @llvm.floor.f32(float %39) #5
  %59 = fcmp ult float %58, 0xC1E0000000000000
  %60 = fcmp ugt float %58, 0x41DFFFFFE0000000
  %61 = fcmp ogt float %58, 0xC1E0000000000000
  %62 = select i1 %61, float %58, float 0xC1E0000000000000
  %63 = fptosi float %62 to i32
  %64 = select i1 %59, i32 0, i32 2147483647
  %65 = select i1 %60, i32 %64, i32 %63
  br label %66

66:                                               ; preds = %57, %38, %33
  %67 = phi i32 [ %34, %33 ], [ %65, %57 ], [ %52, %38 ]
  %68 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 1
  %69 = load float, float* %68, align 4
  %70 = fcmp ult float %69, 0.000000e+00
  %71 = fadd float %69, 5.000000e-01
  %72 = tail call float @llvm.floor.f32(float %71) #5
  %73 = fadd float %69, -5.000000e-01
  %74 = tail call float @llvm.ceil.f32(float %73) #5
  %75 = select i1 %70, float %74, float %72
  %76 = fcmp ult float %75, 0xC1E0000000000000
  %77 = fcmp ugt float %75, 0x41DFFFFFE0000000
  %78 = fcmp ogt float %75, 0xC1E0000000000000
  %79 = select i1 %78, float %75, float 0xC1E0000000000000
  %80 = fptosi float %79 to i32
  %81 = select i1 %76, i32 0, i32 2147483647
  %82 = select i1 %77, i32 %81, i32 %80
  %83 = sitofp i32 %82 to float
  %84 = fsub float %83, %69
  %85 = tail call float @llvm.fabs.f32(float %84) #5
  %86 = fcmp olt float %85, %1
  br i1 %86, label %96, label %87

87:                                               ; preds = %66
  %88 = tail call float @llvm.ceil.f32(float %69) #5
  %89 = fcmp ult float %88, 0xC1E0000000000000
  %90 = fcmp ugt float %88, 0x41DFFFFFE0000000
  %91 = fcmp ogt float %88, 0xC1E0000000000000
  %92 = select i1 %91, float %88, float 0xC1E0000000000000
  %93 = fptosi float %92 to i32
  %94 = select i1 %89, i32 0, i32 2147483647
  %95 = select i1 %90, i32 %94, i32 %93
  br label %96

96:                                               ; preds = %66, %87
  %97 = phi i32 [ %95, %87 ], [ %82, %66 ]
  %98 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 1
  %99 = load float, float* %98, align 4
  %100 = fcmp une float %99, 0.000000e+00
  br i1 %100, label %101, label %129

101:                                              ; preds = %96
  %102 = fadd float %69, %99
  %103 = fcmp ult float %102, 0.000000e+00
  %104 = fadd float %102, 5.000000e-01
  %105 = tail call float @llvm.floor.f32(float %104) #5
  %106 = fadd float %102, -5.000000e-01
  %107 = tail call float @llvm.ceil.f32(float %106) #5
  %108 = select i1 %103, float %107, float %105
  %109 = fcmp ult float %108, 0xC1E0000000000000
  %110 = fcmp ugt float %108, 0x41DFFFFFE0000000
  %111 = fcmp ogt float %108, 0xC1E0000000000000
  %112 = select i1 %111, float %108, float 0xC1E0000000000000
  %113 = fptosi float %112 to i32
  %114 = select i1 %109, i32 0, i32 2147483647
  %115 = select i1 %110, i32 %114, i32 %113
  %116 = sitofp i32 %115 to float
  %117 = fsub float %116, %102
  %118 = tail call float @llvm.fabs.f32(float %117) #5
  %119 = fcmp olt float %118, %1
  br i1 %119, label %129, label %120

120:                                              ; preds = %101
  %121 = tail call float @llvm.floor.f32(float %102) #5
  %122 = fcmp ult float %121, 0xC1E0000000000000
  %123 = fcmp ugt float %121, 0x41DFFFFFE0000000
  %124 = fcmp ogt float %121, 0xC1E0000000000000
  %125 = select i1 %124, float %121, float 0xC1E0000000000000
  %126 = fptosi float %125 to i32
  %127 = select i1 %122, i32 0, i32 2147483647
  %128 = select i1 %123, i32 %127, i32 %126
  br label %129

129:                                              ; preds = %120, %101, %96
  %130 = phi i32 [ %97, %96 ], [ %128, %120 ], [ %115, %101 ]
  %131 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %132 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %132, i8 0, i64 16, i1 false) #5
  call void @_ZN3gfx4Rect11SetByBoundsEiiii(%"class.gfx::Rect"* nonnull %4, i32 %34, i32 %97, i32 %67, i32 %130) #5
  %133 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %134 = load i64, i64* %133, align 8
  %135 = insertvalue { i64, i64 } undef, i64 %134, 0
  %136 = load i64, i64* %131, align 8
  %137 = insertvalue { i64, i64 } %135, i64 %136, 1
  ret { i64, i64 } %137
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN3gfx13ToNearestRectERKNS_5RectFE(%"class.gfx::RectF"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 {
  %2 = alloca { i64, i64 }, align 8
  %3 = bitcast { i64, i64 }* %2 to %"class.gfx::Rect"*
  %4 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 0
  %5 = load float, float* %4, align 4
  %6 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 1
  %7 = load float, float* %6, align 4
  %8 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 0
  %9 = load float, float* %8, align 4
  %10 = fadd float %5, %9
  %11 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 1
  %12 = load float, float* %11, align 4
  %13 = fadd float %7, %12
  %14 = fcmp ult float %5, 0.000000e+00
  %15 = fadd float %5, 5.000000e-01
  %16 = tail call float @llvm.floor.f32(float %15) #5
  %17 = fadd float %5, -5.000000e-01
  %18 = tail call float @llvm.ceil.f32(float %17) #5
  %19 = select i1 %14, float %18, float %16
  %20 = fcmp ult float %19, 0xC1E0000000000000
  %21 = fcmp ugt float %19, 0x41DFFFFFE0000000
  %22 = fcmp ogt float %19, 0xC1E0000000000000
  %23 = select i1 %22, float %19, float 0xC1E0000000000000
  %24 = fptosi float %23 to i32
  %25 = select i1 %20, i32 0, i32 2147483647
  %26 = select i1 %21, i32 %25, i32 %24
  %27 = fcmp ult float %7, 0.000000e+00
  %28 = fadd float %7, 5.000000e-01
  %29 = tail call float @llvm.floor.f32(float %28) #5
  %30 = fadd float %7, -5.000000e-01
  %31 = tail call float @llvm.ceil.f32(float %30) #5
  %32 = select i1 %27, float %31, float %29
  %33 = fcmp ult float %32, 0xC1E0000000000000
  %34 = fcmp ugt float %32, 0x41DFFFFFE0000000
  %35 = fcmp ogt float %32, 0xC1E0000000000000
  %36 = select i1 %35, float %32, float 0xC1E0000000000000
  %37 = fptosi float %36 to i32
  %38 = select i1 %33, i32 0, i32 2147483647
  %39 = select i1 %34, i32 %38, i32 %37
  %40 = fcmp ult float %10, 0.000000e+00
  %41 = fadd float %10, 5.000000e-01
  %42 = tail call float @llvm.floor.f32(float %41) #5
  %43 = fadd float %10, -5.000000e-01
  %44 = tail call float @llvm.ceil.f32(float %43) #5
  %45 = select i1 %40, float %44, float %42
  %46 = fcmp ult float %45, 0xC1E0000000000000
  %47 = fcmp ugt float %45, 0x41DFFFFFE0000000
  %48 = fcmp ogt float %45, 0xC1E0000000000000
  %49 = select i1 %48, float %45, float 0xC1E0000000000000
  %50 = fptosi float %49 to i32
  %51 = select i1 %46, i32 0, i32 2147483647
  %52 = select i1 %47, i32 %51, i32 %50
  %53 = fcmp ult float %13, 0.000000e+00
  %54 = fadd float %13, 5.000000e-01
  %55 = tail call float @llvm.floor.f32(float %54) #5
  %56 = fadd float %13, -5.000000e-01
  %57 = tail call float @llvm.ceil.f32(float %56) #5
  %58 = select i1 %53, float %57, float %55
  %59 = fcmp ult float %58, 0xC1E0000000000000
  %60 = fcmp ugt float %58, 0x41DFFFFFE0000000
  %61 = fcmp ogt float %58, 0xC1E0000000000000
  %62 = select i1 %61, float %58, float 0xC1E0000000000000
  %63 = fptosi float %62 to i32
  %64 = select i1 %59, i32 0, i32 2147483647
  %65 = select i1 %60, i32 %64, i32 %63
  %66 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  %67 = bitcast { i64, i64 }* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 0, i64 16, i1 false) #5
  call void @_ZN3gfx4Rect11SetByBoundsEiiii(%"class.gfx::Rect"* nonnull %3, i32 %26, i32 %39, i32 %52, i32 %65) #5
  %68 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = insertvalue { i64, i64 } undef, i64 %69, 0
  %71 = load i64, i64* %66, align 8
  %72 = insertvalue { i64, i64 } %70, i64 %71, 1
  ret { i64, i64 } %72
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN3gfx27IsNearestRectWithinDistanceERKNS_5RectFEf(%"class.gfx::RectF"* nocapture readonly dereferenceable(16), float) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 0
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 1
  %6 = load float, float* %5, align 4
  %7 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 0
  %8 = load float, float* %7, align 4
  %9 = fadd float %4, %8
  %10 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 1
  %11 = load float, float* %10, align 4
  %12 = fadd float %6, %11
  %13 = fcmp ult float %4, 0.000000e+00
  %14 = fadd float %4, 5.000000e-01
  %15 = tail call float @llvm.floor.f32(float %14) #5
  %16 = fadd float %4, -5.000000e-01
  %17 = tail call float @llvm.ceil.f32(float %16) #5
  %18 = select i1 %13, float %17, float %15
  %19 = fcmp ult float %18, 0xC1E0000000000000
  %20 = fcmp ugt float %18, 0x41DFFFFFE0000000
  %21 = fcmp ogt float %18, 0xC1E0000000000000
  %22 = select i1 %21, float %18, float 0xC1E0000000000000
  %23 = fptosi float %22 to i32
  %24 = select i1 %19, i32 0, i32 2147483647
  %25 = select i1 %20, i32 %24, i32 %23
  %26 = fcmp ult float %6, 0.000000e+00
  %27 = fadd float %6, 5.000000e-01
  %28 = tail call float @llvm.floor.f32(float %27) #5
  %29 = fadd float %6, -5.000000e-01
  %30 = tail call float @llvm.ceil.f32(float %29) #5
  %31 = select i1 %26, float %30, float %28
  %32 = fcmp ult float %9, 0.000000e+00
  %33 = fadd float %9, 5.000000e-01
  %34 = tail call float @llvm.floor.f32(float %33) #5
  %35 = fadd float %9, -5.000000e-01
  %36 = tail call float @llvm.ceil.f32(float %35) #5
  %37 = select i1 %32, float %36, float %34
  %38 = fcmp ult float %37, 0xC1E0000000000000
  %39 = fcmp ugt float %37, 0x41DFFFFFE0000000
  %40 = fcmp ogt float %37, 0xC1E0000000000000
  %41 = select i1 %40, float %37, float 0xC1E0000000000000
  %42 = fptosi float %41 to i32
  %43 = select i1 %38, i32 0, i32 2147483647
  %44 = select i1 %39, i32 %43, i32 %42
  %45 = fcmp ult float %12, 0.000000e+00
  %46 = fadd float %12, 5.000000e-01
  %47 = tail call float @llvm.floor.f32(float %46) #5
  %48 = fadd float %12, -5.000000e-01
  %49 = tail call float @llvm.ceil.f32(float %48) #5
  %50 = select i1 %45, float %49, float %47
  %51 = fcmp ult float %50, 0xC1E0000000000000
  %52 = fcmp ugt float %50, 0x41DFFFFFE0000000
  %53 = fcmp ogt float %50, 0xC1E0000000000000
  %54 = select i1 %53, float %50, float 0xC1E0000000000000
  %55 = fptosi float %54 to i32
  %56 = select i1 %51, i32 0, i32 2147483647
  %57 = select i1 %52, i32 %56, i32 %55
  %58 = sitofp i32 %25 to float
  %59 = fsub float %58, %4
  %60 = tail call float @llvm.fabs.f32(float %59) #5
  %61 = fcmp olt float %60, %1
  br i1 %61, label %62, label %84

62:                                               ; preds = %2
  %63 = fcmp ugt float %31, 0x41DFFFFFE0000000
  %64 = fcmp ult float %31, 0xC1E0000000000000
  %65 = select i1 %64, i32 0, i32 2147483647
  %66 = fcmp ogt float %31, 0xC1E0000000000000
  %67 = select i1 %66, float %31, float 0xC1E0000000000000
  %68 = fptosi float %67 to i32
  %69 = select i1 %63, i32 %65, i32 %68
  %70 = sitofp i32 %69 to float
  %71 = fsub float %70, %6
  %72 = tail call float @llvm.fabs.f32(float %71) #5
  %73 = fcmp olt float %72, %1
  br i1 %73, label %74, label %84

74:                                               ; preds = %62
  %75 = sitofp i32 %44 to float
  %76 = fsub float %75, %9
  %77 = tail call float @llvm.fabs.f32(float %76) #5
  %78 = fcmp olt float %77, %1
  br i1 %78, label %79, label %84

79:                                               ; preds = %74
  %80 = sitofp i32 %57 to float
  %81 = fsub float %80, %12
  %82 = tail call float @llvm.fabs.f32(float %81) #5
  %83 = fcmp olt float %82, %1
  br label %84

84:                                               ; preds = %79, %74, %62, %2
  %85 = phi i1 [ false, %74 ], [ false, %62 ], [ false, %2 ], [ %83, %79 ]
  ret i1 %85
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN3gfx13ToRoundedRectERKNS_5RectFE(%"class.gfx::RectF"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 {
  %2 = alloca { i64, i64 }, align 8
  %3 = bitcast { i64, i64 }* %2 to %"class.gfx::Rect"*
  %4 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 0
  %5 = load float, float* %4, align 4
  %6 = fcmp ult float %5, 0.000000e+00
  %7 = fadd float %5, 5.000000e-01
  %8 = tail call float @llvm.floor.f32(float %7) #5
  %9 = fadd float %5, -5.000000e-01
  %10 = tail call float @llvm.ceil.f32(float %9) #5
  %11 = select i1 %6, float %10, float %8
  %12 = fcmp ult float %11, 0xC1E0000000000000
  %13 = fcmp ugt float %11, 0x41DFFFFFE0000000
  %14 = fcmp ogt float %11, 0xC1E0000000000000
  %15 = select i1 %14, float %11, float 0xC1E0000000000000
  %16 = fptosi float %15 to i32
  %17 = select i1 %12, i32 0, i32 2147483647
  %18 = select i1 %13, i32 %17, i32 %16
  %19 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 1
  %20 = load float, float* %19, align 4
  %21 = fcmp ult float %20, 0.000000e+00
  %22 = fadd float %20, 5.000000e-01
  %23 = tail call float @llvm.floor.f32(float %22) #5
  %24 = fadd float %20, -5.000000e-01
  %25 = tail call float @llvm.ceil.f32(float %24) #5
  %26 = select i1 %21, float %25, float %23
  %27 = fcmp ult float %26, 0xC1E0000000000000
  %28 = fcmp ugt float %26, 0x41DFFFFFE0000000
  %29 = fcmp ogt float %26, 0xC1E0000000000000
  %30 = select i1 %29, float %26, float 0xC1E0000000000000
  %31 = fptosi float %30 to i32
  %32 = select i1 %27, i32 0, i32 2147483647
  %33 = select i1 %28, i32 %32, i32 %31
  %34 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 0
  %35 = load float, float* %34, align 4
  %36 = fadd float %5, %35
  %37 = fcmp ult float %36, 0.000000e+00
  %38 = fadd float %36, 5.000000e-01
  %39 = tail call float @llvm.floor.f32(float %38) #5
  %40 = fadd float %36, -5.000000e-01
  %41 = tail call float @llvm.ceil.f32(float %40) #5
  %42 = select i1 %37, float %41, float %39
  %43 = fcmp ult float %42, 0xC1E0000000000000
  %44 = fcmp ugt float %42, 0x41DFFFFFE0000000
  %45 = fcmp ogt float %42, 0xC1E0000000000000
  %46 = select i1 %45, float %42, float 0xC1E0000000000000
  %47 = fptosi float %46 to i32
  %48 = select i1 %43, i32 0, i32 2147483647
  %49 = select i1 %44, i32 %48, i32 %47
  %50 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 1
  %51 = load float, float* %50, align 4
  %52 = fadd float %20, %51
  %53 = fcmp ult float %52, 0.000000e+00
  %54 = fadd float %52, 5.000000e-01
  %55 = tail call float @llvm.floor.f32(float %54) #5
  %56 = fadd float %52, -5.000000e-01
  %57 = tail call float @llvm.ceil.f32(float %56) #5
  %58 = select i1 %53, float %57, float %55
  %59 = fcmp ult float %58, 0xC1E0000000000000
  %60 = fcmp ugt float %58, 0x41DFFFFFE0000000
  %61 = fcmp ogt float %58, 0xC1E0000000000000
  %62 = select i1 %61, float %58, float 0xC1E0000000000000
  %63 = fptosi float %62 to i32
  %64 = select i1 %59, i32 0, i32 2147483647
  %65 = select i1 %60, i32 %64, i32 %63
  %66 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  %67 = bitcast { i64, i64 }* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 0, i64 16, i1 false) #5
  call void @_ZN3gfx4Rect11SetByBoundsEiiii(%"class.gfx::Rect"* nonnull %3, i32 %18, i32 %33, i32 %49, i32 %65) #5
  %68 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = insertvalue { i64, i64 } undef, i64 %69, 0
  %71 = load i64, i64* %66, align 8
  %72 = insertvalue { i64, i64 } %70, i64 %71, 1
  ret { i64, i64 } %72
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden { i64, i64 } @_ZN3gfx23ToFlooredRectDeprecatedERKNS_5RectFE(%"class.gfx::RectF"* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 0
  %3 = load float, float* %2, align 4
  %4 = tail call float @llvm.floor.f32(float %3) #5
  %5 = fcmp ult float %4, 0xC1E0000000000000
  %6 = fcmp ugt float %4, 0x41DFFFFFE0000000
  %7 = fcmp ogt float %4, 0xC1E0000000000000
  %8 = select i1 %7, float %4, float 0xC1E0000000000000
  %9 = fptosi float %8 to i32
  %10 = select i1 %5, i32 0, i32 2147483647
  %11 = select i1 %6, i32 %10, i32 %9
  %12 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 0, i32 1
  %13 = load float, float* %12, align 4
  %14 = tail call float @llvm.floor.f32(float %13) #5
  %15 = fcmp ult float %14, 0xC1E0000000000000
  %16 = fcmp ugt float %14, 0x41DFFFFFE0000000
  %17 = fcmp ogt float %14, 0xC1E0000000000000
  %18 = select i1 %17, float %14, float 0xC1E0000000000000
  %19 = fptosi float %18 to i32
  %20 = select i1 %15, i32 0, i32 2147483647
  %21 = select i1 %16, i32 %20, i32 %19
  %22 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 0
  %23 = load float, float* %22, align 4
  %24 = tail call float @llvm.floor.f32(float %23) #5
  %25 = fcmp ult float %24, 0xC1E0000000000000
  %26 = fcmp ugt float %24, 0x41DFFFFFE0000000
  %27 = fcmp ogt float %24, 0xC1E0000000000000
  %28 = select i1 %27, float %24, float 0xC1E0000000000000
  %29 = fptosi float %28 to i32
  %30 = select i1 %25, i32 0, i32 2147483647
  %31 = select i1 %26, i32 %30, i32 %29
  %32 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %0, i64 0, i32 1, i32 1
  %33 = load float, float* %32, align 4
  %34 = tail call float @llvm.floor.f32(float %33) #5
  %35 = fcmp ult float %34, 0xC1E0000000000000
  %36 = fcmp ugt float %34, 0x41DFFFFFE0000000
  %37 = fcmp ogt float %34, 0xC1E0000000000000
  %38 = select i1 %37, float %34, float 0xC1E0000000000000
  %39 = fptosi float %38 to i32
  %40 = select i1 %35, i32 0, i32 2147483647
  %41 = select i1 %36, i32 %40, i32 %39
  %42 = icmp sgt i32 %11, 0
  %43 = icmp sgt i32 %31, 0
  %44 = and i1 %42, %43
  %45 = sub nuw nsw i32 2147483647, %11
  %46 = icmp ult i32 %45, %31
  %47 = and i1 %46, %44
  %48 = select i1 %47, i32 %45, i32 %31
  %49 = icmp sgt i32 %21, 0
  %50 = icmp sgt i32 %41, 0
  %51 = and i1 %49, %50
  %52 = sub nuw nsw i32 2147483647, %21
  %53 = icmp ult i32 %52, %41
  %54 = and i1 %53, %51
  %55 = select i1 %54, i32 %52, i32 %41
  %56 = icmp sgt i32 %48, 0
  %57 = select i1 %56, i32 %48, i32 0
  %58 = icmp sgt i32 %55, 0
  %59 = select i1 %58, i32 %55, i32 0
  %60 = zext i32 %21 to i64
  %61 = shl nuw i64 %60, 32
  %62 = zext i32 %11 to i64
  %63 = or i64 %61, %62
  %64 = insertvalue { i64, i64 } undef, i64 %63, 0
  %65 = zext i32 %59 to i64
  %66 = shl nuw nsw i64 %65, 32
  %67 = zext i32 %57 to i64
  %68 = or i64 %66, %67
  %69 = insertvalue { i64, i64 } %64, i64 %68, 1
  ret { i64, i64 } %69
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
