; ModuleID = '../../net/websockets/websocket_frame_parser.cc'
source_filename = "../../net/websockets/websocket_frame_parser.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::WebSocketFrameParser" = type <{ %"class.std::__1::vector", %"class.std::__1::unique_ptr", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.net::WebSocketFrameHeader"* }
%"struct.net::WebSocketFrameHeader" = type { i8, i8, i8, i8, i32, i8, %"struct.net::WebSocketFrameHeader::WebSocketMaskingKey", i64 }
%"struct.net::WebSocketFrameHeader::WebSocketMaskingKey" = type { [4 x i8] }
%"class.std::__1::vector.4" = type { %"class.std::__1::__vector_base.5" }
%"class.std::__1::__vector_base.5" = type { %"class.std::__1::unique_ptr.6"*, %"class.std::__1::unique_ptr.6"*, %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.net::WebSocketFrameChunk"* }
%"struct.net::WebSocketFrameChunk" = type { %"class.std::__1::unique_ptr", i8, %"class.base::span" }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", i8* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.std::__1::unique_ptr.6"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIcNS_9allocatorIcEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIcNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPcEEE4typeENSC_IS6_EES8_S8_ = comdat any

$_ZNK4base4spanIKcLm18446744073709551615EE7subspanEmm = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN3net19WebSocketFrameChunkENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

@.str = private unnamed_addr constant [29 x i8] c"../../base/containers/span.h\00", align 1
@.str.1 = private unnamed_addr constant [17 x i8] c"offset <= size()\00", align 1
@.str.2 = private unnamed_addr constant [52 x i8] c"count == dynamic_extent || count <= size() - offset\00", align 1
@.str.3 = private unnamed_addr constant [13 x i8] c"idx < size()\00", align 1

@_ZN3net20WebSocketFrameParserC1Ev = hidden unnamed_addr alias void (%"class.net::WebSocketFrameParser"*), void (%"class.net::WebSocketFrameParser"*)* @_ZN3net20WebSocketFrameParserC2Ev
@_ZN3net20WebSocketFrameParserD1Ev = hidden unnamed_addr alias void (%"class.net::WebSocketFrameParser"*), void (%"class.net::WebSocketFrameParser"*)* @_ZN3net20WebSocketFrameParserD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20WebSocketFrameParserC2Ev(%"class.net::WebSocketFrameParser"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::WebSocketFrameParser", %"class.net::WebSocketFrameParser"* %0, i64 0, i32 3
  %3 = bitcast %"class.net::WebSocketFrameParser"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 40, i1 false)
  store i32 1000, i32* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20WebSocketFrameParserD2Ev(%"class.net::WebSocketFrameParser"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::WebSocketFrameParser", %"class.net::WebSocketFrameParser"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.net::WebSocketFrameHeader"*, %"struct.net::WebSocketFrameHeader"** %2, align 8
  store %"struct.net::WebSocketFrameHeader"* null, %"struct.net::WebSocketFrameHeader"** %2, align 8
  %4 = icmp eq %"struct.net::WebSocketFrameHeader"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.net::WebSocketFrameHeader", %"struct.net::WebSocketFrameHeader"* %3, i64 0, i32 0
  tail call void @_ZdlPv(i8* %6) #9
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.net::WebSocketFrameParser", %"class.net::WebSocketFrameParser"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = ptrtoint i8* %9 to i64
  %13 = getelementptr inbounds %"class.net::WebSocketFrameParser", %"class.net::WebSocketFrameParser"* %0, i64 0, i32 0, i32 0, i32 1
  %14 = bitcast i8** %13 to i64*
  store i64 %12, i64* %14, align 8
  tail call void @_ZdlPv(i8* nonnull %9) #9
  br label %15

15:                                               ; preds = %7, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net20WebSocketFrameParser6DecodeEPKcmPNSt3__16vectorINS3_10unique_ptrINS_19WebSocketFrameChunkENS3_14default_deleteIS6_EEEENS3_9allocatorIS9_EEEE(%"class.net::WebSocketFrameParser"*, i8*, i64, %"class.std::__1::vector.4"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.base::span", align 8
  %8 = alloca %"class.std::__1::unique_ptr.6", align 8
  %9 = getelementptr inbounds %"class.net::WebSocketFrameParser", %"class.net::WebSocketFrameParser"* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 1000
  br i1 %11, label %12, label %122

12:                                               ; preds = %4
  %13 = icmp eq i64 %2, 0
  br i1 %13, label %122, label %14

14:                                               ; preds = %12
  %15 = bitcast %"class.base::span"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #10
  %16 = getelementptr inbounds %"class.base::span", %"class.base::span"* %7, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.base::span", %"class.base::span"* %7, i64 0, i32 1
  store i64 %2, i64* %16, align 8
  store i8* %1, i8** %17, align 8
  %18 = getelementptr inbounds %"class.net::WebSocketFrameParser", %"class.net::WebSocketFrameParser"* %0, i64 0, i32 0
  %19 = getelementptr inbounds %"class.net::WebSocketFrameParser", %"class.net::WebSocketFrameParser"* %0, i64 0, i32 0, i32 0, i32 1
  %20 = bitcast i8** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.net::WebSocketFrameParser"* %0 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %21, %23
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %58, label %26

26:                                               ; preds = %14
  %27 = inttoptr i64 %21 to i8*
  %28 = sub i64 14, %24
  %29 = icmp ult i64 %28, %2
  %30 = select i1 %29, i64 %28, i64 %2
  %31 = getelementptr inbounds i8, i8* %1, i64 %30
  %32 = tail call i8* @_ZNSt3__16vectorIcNS_9allocatorIcEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIcNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPcEEE4typeENSC_IS6_EES8_S8_(%"class.std::__1::vector"* %18, i8* %27, i8* %1, i8* %31)
  %33 = load i64, i64* %22, align 8
  %34 = load i64, i64* %20, align 8
  %35 = sub i64 %34, %33
  %36 = inttoptr i64 %33 to i8*
  %37 = tail call i64 @_ZN3net20WebSocketFrameParser17DecodeFrameHeaderEN4base4spanIKcLm18446744073709551615EEE(%"class.net::WebSocketFrameParser"* %0, i64 %35, i8* %36)
  %38 = load i32, i32* %9, align 8
  %39 = icmp eq i32 %38, 1000
  br i1 %39, label %40, label %120

40:                                               ; preds = %26
  %41 = getelementptr inbounds %"class.net::WebSocketFrameParser", %"class.net::WebSocketFrameParser"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %42 = load %"struct.net::WebSocketFrameHeader"*, %"struct.net::WebSocketFrameHeader"** %41, align 8
  %43 = icmp eq %"struct.net::WebSocketFrameHeader"* %42, null
  br i1 %43, label %120, label %44

44:                                               ; preds = %40
  %45 = sub i64 %37, %24
  %46 = icmp ugt i64 %45, %2
  br i1 %46, label %47, label %52

47:                                               ; preds = %44
  %48 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i32 403, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0)) #10
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #10
  %50 = load i64, i64* %16, align 8
  %51 = load i8*, i8** %17, align 8
  br label %52

52:                                               ; preds = %47, %44
  %53 = phi i8* [ %1, %44 ], [ %51, %47 ]
  %54 = phi i64 [ %2, %44 ], [ %50, %47 ]
  %55 = sub i64 %54, %45
  %56 = getelementptr inbounds i8, i8* %53, i64 %45
  store i64 %55, i64* %16, align 8
  store i8* %56, i8** %17, align 8
  %57 = load i64, i64* %22, align 8
  store i64 %57, i64* %20, align 8
  br label %58

58:                                               ; preds = %14, %52
  %59 = phi i64 [ %55, %52 ], [ %2, %14 ]
  %60 = phi i8 [ 1, %52 ], [ 0, %14 ]
  %61 = getelementptr inbounds %"class.net::WebSocketFrameParser", %"class.net::WebSocketFrameParser"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %62 = bitcast %"class.logging::CheckError"* %6 to i8*
  %63 = bitcast %"class.std::__1::unique_ptr.6"* %8 to i8*
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %8, i64 0, i32 0, i32 0, i32 0
  %65 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %3, i64 0, i32 0, i32 1
  %66 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %67 = bitcast %"class.std::__1::unique_ptr.6"** %65 to i64*
  br label %68

68:                                               ; preds = %117, %58
  %69 = phi i64 [ %59, %58 ], [ %118, %117 ]
  %70 = phi i8 [ %60, %58 ], [ 0, %117 ]
  %71 = load %"struct.net::WebSocketFrameHeader"*, %"struct.net::WebSocketFrameHeader"** %61, align 8
  %72 = icmp eq %"struct.net::WebSocketFrameHeader"* %71, null
  br i1 %72, label %73, label %98

73:                                               ; preds = %68
  %74 = load i8*, i8** %17, align 8
  %75 = call i64 @_ZN3net20WebSocketFrameParser17DecodeFrameHeaderEN4base4spanIKcLm18446744073709551615EEE(%"class.net::WebSocketFrameParser"* %0, i64 %69, i8* %74)
  %76 = load i32, i32* %9, align 8
  %77 = icmp eq i32 %76, 1000
  br i1 %77, label %78, label %120

78:                                               ; preds = %73
  %79 = load %"struct.net::WebSocketFrameHeader"*, %"struct.net::WebSocketFrameHeader"** %61, align 8
  %80 = icmp eq %"struct.net::WebSocketFrameHeader"* %79, null
  br i1 %80, label %81, label %87

81:                                               ; preds = %78
  %82 = load i8*, i8** %19, align 8
  %83 = load i8*, i8** %17, align 8
  %84 = load i64, i64* %16, align 8
  %85 = getelementptr inbounds i8, i8* %83, i64 %84
  %86 = call i8* @_ZNSt3__16vectorIcNS_9allocatorIcEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIcNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPcEEE4typeENSC_IS6_EES8_S8_(%"class.std::__1::vector"* %18, i8* %82, i8* %83, i8* %85)
  br label %120

87:                                               ; preds = %78
  %88 = load i64, i64* %16, align 8
  %89 = icmp ult i64 %88, %75
  br i1 %89, label %90, label %93

90:                                               ; preds = %87
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i32 403, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0)) #10
  %91 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #10
  %92 = load i64, i64* %16, align 8
  br label %93

93:                                               ; preds = %90, %87
  %94 = phi i64 [ %88, %87 ], [ %92, %90 ]
  %95 = sub i64 %94, %75
  %96 = load i8*, i8** %17, align 8
  %97 = getelementptr inbounds i8, i8* %96, i64 %75
  store i64 %95, i64* %16, align 8
  store i8* %97, i8** %17, align 8
  br label %98

98:                                               ; preds = %93, %68
  %99 = phi i8 [ %70, %68 ], [ 1, %93 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #10
  store %"struct.net::WebSocketFrameChunk"* inttoptr (i64 -6148914691236517206 to %"struct.net::WebSocketFrameChunk"*), %"struct.net::WebSocketFrameChunk"** %64, align 8
  %100 = and i8 %99, 1
  %101 = icmp ne i8 %100, 0
  %102 = call %"struct.net::WebSocketFrameChunk"* @_ZN3net20WebSocketFrameParser18DecodeFramePayloadEbPN4base4spanIKcLm18446744073709551615EEE(%"class.net::WebSocketFrameParser"* %0, i1 zeroext %101, %"class.base::span"* nonnull %7)
  store %"struct.net::WebSocketFrameChunk"* %102, %"struct.net::WebSocketFrameChunk"** %64, align 8
  %103 = load %"class.std::__1::unique_ptr.6"*, %"class.std::__1::unique_ptr.6"** %65, align 8
  %104 = load %"class.std::__1::unique_ptr.6"*, %"class.std::__1::unique_ptr.6"** %66, align 8
  %105 = icmp ult %"class.std::__1::unique_ptr.6"* %103, %104
  br i1 %105, label %106, label %111

106:                                              ; preds = %98
  %107 = ptrtoint %"struct.net::WebSocketFrameChunk"* %102 to i64
  store %"struct.net::WebSocketFrameChunk"* null, %"struct.net::WebSocketFrameChunk"** %64, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.6"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %103, i64 1
  %110 = ptrtoint %"class.std::__1::unique_ptr.6"* %109 to i64
  store i64 %110, i64* %67, align 8
  br label %112

111:                                              ; preds = %98
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3net19WebSocketFrameChunkENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.4"* %3, %"class.std::__1::unique_ptr.6"* nonnull dereferenceable(8) %8) #10
  br label %112

112:                                              ; preds = %106, %111
  %113 = load %"struct.net::WebSocketFrameChunk"*, %"struct.net::WebSocketFrameChunk"** %64, align 8
  store %"struct.net::WebSocketFrameChunk"* null, %"struct.net::WebSocketFrameChunk"** %64, align 8
  %114 = icmp eq %"struct.net::WebSocketFrameChunk"* %113, null
  br i1 %114, label %117, label %115

115:                                              ; preds = %112
  call void @_ZN3net19WebSocketFrameChunkD1Ev(%"struct.net::WebSocketFrameChunk"* nonnull %113) #10
  %116 = bitcast %"struct.net::WebSocketFrameChunk"* %113 to i8*
  call void @_ZdlPv(i8* %116) #9
  br label %117

117:                                              ; preds = %112, %115
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #10
  %118 = load i64, i64* %16, align 8
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %68

120:                                              ; preds = %117, %73, %81, %40, %26
  %121 = phi i1 [ true, %40 ], [ false, %26 ], [ true, %81 ], [ true, %117 ], [ false, %73 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #10
  br label %122

122:                                              ; preds = %12, %4, %120
  %123 = phi i1 [ %121, %120 ], [ false, %4 ], [ true, %12 ]
  ret i1 %123
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNSt3__16vectorIcNS_9allocatorIcEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIcNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPcEEE4typeENSC_IS6_EES8_S8_(%"class.std::__1::vector"*, i8*, i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i8* %1 to i64
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %7 = ptrtoint i8* %3 to i64
  %8 = ptrtoint i8* %2 to i64
  %9 = sub i64 %7, %8
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %11, label %414

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = ptrtoint i8* %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %9, %18
  %20 = bitcast i8** %15 to i64*
  br i1 %19, label %164, label %21

21:                                               ; preds = %11
  %22 = sub i64 %17, %5
  %23 = icmp sgt i64 %9, %22
  br i1 %23, label %24, label %37

24:                                               ; preds = %21
  %25 = getelementptr inbounds i8, i8* %2, i64 %22
  %26 = ptrtoint i8* %25 to i64
  %27 = sub i64 %7, %26
  %28 = icmp sgt i64 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %25, i64 %27, i1 false) #10
  %30 = getelementptr inbounds i8, i8* %16, i64 %27
  %31 = ptrtoint i8* %30 to i64
  br label %32

32:                                               ; preds = %29, %24
  %33 = phi i64 [ %31, %29 ], [ %17, %24 ]
  store i64 %33, i64* %20, align 8
  %34 = icmp sgt i64 %22, 0
  br i1 %34, label %35, label %414

35:                                               ; preds = %32
  %36 = inttoptr i64 %33 to i8*
  br label %37

37:                                               ; preds = %35, %21
  %38 = phi i64 [ %33, %35 ], [ %17, %21 ]
  %39 = phi i8* [ %36, %35 ], [ %16, %21 ]
  %40 = phi i8* [ %25, %35 ], [ %3, %21 ]
  %41 = getelementptr inbounds i8, i8* %1, i64 %9
  %42 = ptrtoint i8* %41 to i64
  %43 = sub i64 %38, %42
  %44 = getelementptr inbounds i8, i8* %1, i64 %43
  %45 = icmp ult i8* %44, %16
  br i1 %45, label %46, label %146

46:                                               ; preds = %37
  %47 = sub i64 %9, %38
  %48 = getelementptr i8, i8* %16, i64 %47
  %49 = ptrtoint i8* %48 to i64
  %50 = icmp ult i8* %48, inttoptr (i64 32 to i8*)
  br i1 %50, label %51, label %54

51:                                               ; preds = %141, %54, %46
  %52 = phi i8* [ %44, %54 ], [ %44, %46 ], [ %64, %141 ]
  %53 = phi i8* [ %39, %54 ], [ %39, %46 ], [ %65, %141 ]
  br label %152

54:                                               ; preds = %46
  %55 = sub i64 %9, %38
  %56 = getelementptr i8, i8* %16, i64 %55
  %57 = ptrtoint i8* %56 to i64
  %58 = getelementptr i8, i8* %39, i64 %57
  %59 = icmp ult i8* %39, %16
  %60 = icmp ult i8* %44, %58
  %61 = and i1 %59, %60
  br i1 %61, label %51, label %62

62:                                               ; preds = %54
  %63 = and i64 %49, -32
  %64 = getelementptr i8, i8* %44, i64 %63
  %65 = getelementptr i8, i8* %39, i64 %63
  %66 = add i64 %63, -32
  %67 = lshr exact i64 %66, 5
  %68 = add nuw nsw i64 %67, 1
  %69 = and i64 %68, 3
  %70 = icmp ult i64 %66, 96
  br i1 %70, label %122, label %71

71:                                               ; preds = %62
  %72 = sub nsw i64 %68, %69
  br label %73

73:                                               ; preds = %73, %71
  %74 = phi i64 [ 0, %71 ], [ %119, %73 ]
  %75 = phi i64 [ %72, %71 ], [ %120, %73 ]
  %76 = getelementptr i8, i8* %44, i64 %74
  %77 = getelementptr i8, i8* %39, i64 %74
  %78 = bitcast i8* %76 to <16 x i8>*
  %79 = load <16 x i8>, <16 x i8>* %78, align 1, !alias.scope !2
  %80 = getelementptr i8, i8* %76, i64 16
  %81 = bitcast i8* %80 to <16 x i8>*
  %82 = load <16 x i8>, <16 x i8>* %81, align 1, !alias.scope !2
  %83 = bitcast i8* %77 to <16 x i8>*
  store <16 x i8> %79, <16 x i8>* %83, align 1, !alias.scope !5, !noalias !2
  %84 = getelementptr i8, i8* %77, i64 16
  %85 = bitcast i8* %84 to <16 x i8>*
  store <16 x i8> %82, <16 x i8>* %85, align 1, !alias.scope !5, !noalias !2
  %86 = or i64 %74, 32
  %87 = getelementptr i8, i8* %44, i64 %86
  %88 = getelementptr i8, i8* %39, i64 %86
  %89 = bitcast i8* %87 to <16 x i8>*
  %90 = load <16 x i8>, <16 x i8>* %89, align 1, !alias.scope !2
  %91 = getelementptr i8, i8* %87, i64 16
  %92 = bitcast i8* %91 to <16 x i8>*
  %93 = load <16 x i8>, <16 x i8>* %92, align 1, !alias.scope !2
  %94 = bitcast i8* %88 to <16 x i8>*
  store <16 x i8> %90, <16 x i8>* %94, align 1, !alias.scope !5, !noalias !2
  %95 = getelementptr i8, i8* %88, i64 16
  %96 = bitcast i8* %95 to <16 x i8>*
  store <16 x i8> %93, <16 x i8>* %96, align 1, !alias.scope !5, !noalias !2
  %97 = or i64 %74, 64
  %98 = getelementptr i8, i8* %44, i64 %97
  %99 = getelementptr i8, i8* %39, i64 %97
  %100 = bitcast i8* %98 to <16 x i8>*
  %101 = load <16 x i8>, <16 x i8>* %100, align 1, !alias.scope !2
  %102 = getelementptr i8, i8* %98, i64 16
  %103 = bitcast i8* %102 to <16 x i8>*
  %104 = load <16 x i8>, <16 x i8>* %103, align 1, !alias.scope !2
  %105 = bitcast i8* %99 to <16 x i8>*
  store <16 x i8> %101, <16 x i8>* %105, align 1, !alias.scope !5, !noalias !2
  %106 = getelementptr i8, i8* %99, i64 16
  %107 = bitcast i8* %106 to <16 x i8>*
  store <16 x i8> %104, <16 x i8>* %107, align 1, !alias.scope !5, !noalias !2
  %108 = or i64 %74, 96
  %109 = getelementptr i8, i8* %44, i64 %108
  %110 = getelementptr i8, i8* %39, i64 %108
  %111 = bitcast i8* %109 to <16 x i8>*
  %112 = load <16 x i8>, <16 x i8>* %111, align 1, !alias.scope !2
  %113 = getelementptr i8, i8* %109, i64 16
  %114 = bitcast i8* %113 to <16 x i8>*
  %115 = load <16 x i8>, <16 x i8>* %114, align 1, !alias.scope !2
  %116 = bitcast i8* %110 to <16 x i8>*
  store <16 x i8> %112, <16 x i8>* %116, align 1, !alias.scope !5, !noalias !2
  %117 = getelementptr i8, i8* %110, i64 16
  %118 = bitcast i8* %117 to <16 x i8>*
  store <16 x i8> %115, <16 x i8>* %118, align 1, !alias.scope !5, !noalias !2
  %119 = add i64 %74, 128
  %120 = add i64 %75, -4
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %73, !llvm.loop !7

122:                                              ; preds = %73, %62
  %123 = phi i64 [ 0, %62 ], [ %119, %73 ]
  %124 = icmp eq i64 %69, 0
  br i1 %124, label %141, label %125

125:                                              ; preds = %122, %125
  %126 = phi i64 [ %138, %125 ], [ %123, %122 ]
  %127 = phi i64 [ %139, %125 ], [ %69, %122 ]
  %128 = getelementptr i8, i8* %44, i64 %126
  %129 = getelementptr i8, i8* %39, i64 %126
  %130 = bitcast i8* %128 to <16 x i8>*
  %131 = load <16 x i8>, <16 x i8>* %130, align 1, !alias.scope !2
  %132 = getelementptr i8, i8* %128, i64 16
  %133 = bitcast i8* %132 to <16 x i8>*
  %134 = load <16 x i8>, <16 x i8>* %133, align 1, !alias.scope !2
  %135 = bitcast i8* %129 to <16 x i8>*
  store <16 x i8> %131, <16 x i8>* %135, align 1, !alias.scope !5, !noalias !2
  %136 = getelementptr i8, i8* %129, i64 16
  %137 = bitcast i8* %136 to <16 x i8>*
  store <16 x i8> %134, <16 x i8>* %137, align 1, !alias.scope !5, !noalias !2
  %138 = add i64 %126, 32
  %139 = add i64 %127, -1
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %141, label %125, !llvm.loop !9

141:                                              ; preds = %125, %122
  %142 = icmp eq i64 %63, %49
  br i1 %142, label %143, label %51

143:                                              ; preds = %152, %141
  %144 = phi i8* [ %65, %141 ], [ %157, %152 ]
  %145 = ptrtoint i8* %144 to i64
  br label %146

146:                                              ; preds = %143, %37
  %147 = phi i64 [ %145, %143 ], [ %38, %37 ]
  store i64 %147, i64* %20, align 8
  %148 = icmp eq i64 %43, 0
  br i1 %148, label %159, label %149

149:                                              ; preds = %146
  %150 = sub i64 0, %43
  %151 = getelementptr inbounds i8, i8* %39, i64 %150
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %151, i8* align 1 %1, i64 %43, i1 false) #10
  br label %159

152:                                              ; preds = %51, %152
  %153 = phi i8* [ %156, %152 ], [ %52, %51 ]
  %154 = phi i8* [ %157, %152 ], [ %53, %51 ]
  %155 = load i8, i8* %153, align 1
  store i8 %155, i8* %154, align 1
  %156 = getelementptr inbounds i8, i8* %153, i64 1
  %157 = getelementptr inbounds i8, i8* %154, i64 1
  %158 = icmp eq i8* %156, %16
  br i1 %158, label %143, label %152, !llvm.loop !11

159:                                              ; preds = %146, %149
  %160 = ptrtoint i8* %40 to i64
  %161 = sub i64 %160, %8
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %414, label %163

163:                                              ; preds = %159
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 %161, i1 false) #10
  br label %414

164:                                              ; preds = %11
  %165 = bitcast %"class.std::__1::vector"* %0 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = sub i64 %17, %166
  %168 = add i64 %167, %9
  %169 = icmp slt i64 %168, 0
  br i1 %169, label %170, label %172

170:                                              ; preds = %164
  %171 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %171) #11
  unreachable

172:                                              ; preds = %164
  %173 = sub i64 %14, %166
  %174 = icmp ult i64 %173, 4611686018427387903
  br i1 %174, label %177, label %175

175:                                              ; preds = %172
  %176 = sub i64 %5, %166
  br label %183

177:                                              ; preds = %172
  %178 = shl i64 %173, 1
  %179 = icmp ult i64 %178, %168
  %180 = select i1 %179, i64 %168, i64 %178
  %181 = sub i64 %5, %166
  %182 = icmp eq i64 %180, 0
  br i1 %182, label %187, label %183

183:                                              ; preds = %175, %177
  %184 = phi i64 [ %176, %175 ], [ %181, %177 ]
  %185 = phi i64 [ 9223372036854775807, %175 ], [ %180, %177 ]
  %186 = tail call i8* @_Znwm(i64 %185) #9
  br label %187

187:                                              ; preds = %177, %183
  %188 = phi i64 [ %184, %183 ], [ %181, %177 ]
  %189 = phi i64 [ %185, %183 ], [ 0, %177 ]
  %190 = phi i8* [ %186, %183 ], [ null, %177 ]
  %191 = getelementptr inbounds i8, i8* %190, i64 %188
  %192 = getelementptr inbounds i8, i8* %190, i64 %189
  %193 = getelementptr inbounds i8, i8* %191, i64 %9
  %194 = icmp ult i64 %9, 32
  br i1 %194, label %280, label %195

195:                                              ; preds = %187
  %196 = icmp ult i8* %191, %3
  %197 = icmp ugt i8* %193, %2
  %198 = and i1 %196, %197
  br i1 %198, label %280, label %199

199:                                              ; preds = %195
  %200 = and i64 %9, -32
  %201 = getelementptr i8, i8* %191, i64 %200
  %202 = getelementptr i8, i8* %2, i64 %200
  %203 = add i64 %200, -32
  %204 = lshr exact i64 %203, 5
  %205 = add nuw nsw i64 %204, 1
  %206 = and i64 %205, 3
  %207 = icmp ult i64 %203, 96
  br i1 %207, label %259, label %208

208:                                              ; preds = %199
  %209 = sub nsw i64 %205, %206
  br label %210

210:                                              ; preds = %210, %208
  %211 = phi i64 [ 0, %208 ], [ %256, %210 ]
  %212 = phi i64 [ %209, %208 ], [ %257, %210 ]
  %213 = getelementptr i8, i8* %191, i64 %211
  %214 = getelementptr i8, i8* %2, i64 %211
  %215 = bitcast i8* %214 to <16 x i8>*
  %216 = load <16 x i8>, <16 x i8>* %215, align 1, !alias.scope !12
  %217 = getelementptr i8, i8* %214, i64 16
  %218 = bitcast i8* %217 to <16 x i8>*
  %219 = load <16 x i8>, <16 x i8>* %218, align 1, !alias.scope !12
  %220 = bitcast i8* %213 to <16 x i8>*
  store <16 x i8> %216, <16 x i8>* %220, align 1, !alias.scope !15, !noalias !12
  %221 = getelementptr i8, i8* %213, i64 16
  %222 = bitcast i8* %221 to <16 x i8>*
  store <16 x i8> %219, <16 x i8>* %222, align 1, !alias.scope !15, !noalias !12
  %223 = or i64 %211, 32
  %224 = getelementptr i8, i8* %191, i64 %223
  %225 = getelementptr i8, i8* %2, i64 %223
  %226 = bitcast i8* %225 to <16 x i8>*
  %227 = load <16 x i8>, <16 x i8>* %226, align 1, !alias.scope !12
  %228 = getelementptr i8, i8* %225, i64 16
  %229 = bitcast i8* %228 to <16 x i8>*
  %230 = load <16 x i8>, <16 x i8>* %229, align 1, !alias.scope !12
  %231 = bitcast i8* %224 to <16 x i8>*
  store <16 x i8> %227, <16 x i8>* %231, align 1, !alias.scope !15, !noalias !12
  %232 = getelementptr i8, i8* %224, i64 16
  %233 = bitcast i8* %232 to <16 x i8>*
  store <16 x i8> %230, <16 x i8>* %233, align 1, !alias.scope !15, !noalias !12
  %234 = or i64 %211, 64
  %235 = getelementptr i8, i8* %191, i64 %234
  %236 = getelementptr i8, i8* %2, i64 %234
  %237 = bitcast i8* %236 to <16 x i8>*
  %238 = load <16 x i8>, <16 x i8>* %237, align 1, !alias.scope !12
  %239 = getelementptr i8, i8* %236, i64 16
  %240 = bitcast i8* %239 to <16 x i8>*
  %241 = load <16 x i8>, <16 x i8>* %240, align 1, !alias.scope !12
  %242 = bitcast i8* %235 to <16 x i8>*
  store <16 x i8> %238, <16 x i8>* %242, align 1, !alias.scope !15, !noalias !12
  %243 = getelementptr i8, i8* %235, i64 16
  %244 = bitcast i8* %243 to <16 x i8>*
  store <16 x i8> %241, <16 x i8>* %244, align 1, !alias.scope !15, !noalias !12
  %245 = or i64 %211, 96
  %246 = getelementptr i8, i8* %191, i64 %245
  %247 = getelementptr i8, i8* %2, i64 %245
  %248 = bitcast i8* %247 to <16 x i8>*
  %249 = load <16 x i8>, <16 x i8>* %248, align 1, !alias.scope !12
  %250 = getelementptr i8, i8* %247, i64 16
  %251 = bitcast i8* %250 to <16 x i8>*
  %252 = load <16 x i8>, <16 x i8>* %251, align 1, !alias.scope !12
  %253 = bitcast i8* %246 to <16 x i8>*
  store <16 x i8> %249, <16 x i8>* %253, align 1, !alias.scope !15, !noalias !12
  %254 = getelementptr i8, i8* %246, i64 16
  %255 = bitcast i8* %254 to <16 x i8>*
  store <16 x i8> %252, <16 x i8>* %255, align 1, !alias.scope !15, !noalias !12
  %256 = add i64 %211, 128
  %257 = add i64 %212, -4
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %259, label %210, !llvm.loop !17

259:                                              ; preds = %210, %199
  %260 = phi i64 [ 0, %199 ], [ %256, %210 ]
  %261 = icmp eq i64 %206, 0
  br i1 %261, label %278, label %262

262:                                              ; preds = %259, %262
  %263 = phi i64 [ %275, %262 ], [ %260, %259 ]
  %264 = phi i64 [ %276, %262 ], [ %206, %259 ]
  %265 = getelementptr i8, i8* %191, i64 %263
  %266 = getelementptr i8, i8* %2, i64 %263
  %267 = bitcast i8* %266 to <16 x i8>*
  %268 = load <16 x i8>, <16 x i8>* %267, align 1, !alias.scope !12
  %269 = getelementptr i8, i8* %266, i64 16
  %270 = bitcast i8* %269 to <16 x i8>*
  %271 = load <16 x i8>, <16 x i8>* %270, align 1, !alias.scope !12
  %272 = bitcast i8* %265 to <16 x i8>*
  store <16 x i8> %268, <16 x i8>* %272, align 1, !alias.scope !15, !noalias !12
  %273 = getelementptr i8, i8* %265, i64 16
  %274 = bitcast i8* %273 to <16 x i8>*
  store <16 x i8> %271, <16 x i8>* %274, align 1, !alias.scope !15, !noalias !12
  %275 = add i64 %263, 32
  %276 = add i64 %264, -1
  %277 = icmp eq i64 %276, 0
  br i1 %277, label %278, label %262, !llvm.loop !18

278:                                              ; preds = %262, %259
  %279 = icmp eq i64 %9, %200
  br i1 %279, label %290, label %280

280:                                              ; preds = %278, %195, %187
  %281 = phi i8* [ %191, %195 ], [ %191, %187 ], [ %201, %278 ]
  %282 = phi i8* [ %2, %195 ], [ %2, %187 ], [ %202, %278 ]
  br label %283

283:                                              ; preds = %280, %283
  %284 = phi i8* [ %287, %283 ], [ %281, %280 ]
  %285 = phi i8* [ %288, %283 ], [ %282, %280 ]
  %286 = load i8, i8* %285, align 1
  store i8 %286, i8* %284, align 1
  %287 = getelementptr inbounds i8, i8* %284, i64 1
  %288 = getelementptr inbounds i8, i8* %285, i64 1
  %289 = icmp eq i8* %193, %287
  br i1 %289, label %290, label %283, !llvm.loop !19

290:                                              ; preds = %283, %278
  %291 = ptrtoint i8* %192 to i64
  %292 = load i8*, i8** %6, align 8
  %293 = ptrtoint i8* %292 to i64
  %294 = sub i64 %5, %293
  %295 = sub i64 0, %294
  %296 = getelementptr inbounds i8, i8* %191, i64 %295
  %297 = ptrtoint i8* %296 to i64
  %298 = icmp sgt i64 %294, 0
  br i1 %298, label %299, label %300

299:                                              ; preds = %290
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %296, i8* align 1 %292, i64 %294, i1 false) #10
  br label %300

300:                                              ; preds = %299, %290
  %301 = load i8*, i8** %15, align 8
  %302 = icmp eq i8* %301, %1
  br i1 %302, label %408, label %303

303:                                              ; preds = %300
  %304 = ptrtoint i8* %301 to i64
  %305 = sub i64 %304, %5
  %306 = icmp ult i64 %305, 32
  br i1 %306, label %398, label %307

307:                                              ; preds = %303
  %308 = add i64 %188, %7
  %309 = sub i64 %308, %5
  %310 = sub i64 %309, %8
  %311 = getelementptr i8, i8* %301, i64 %310
  %312 = ptrtoint i8* %311 to i64
  %313 = getelementptr i8, i8* %190, i64 %312
  %314 = icmp ult i8* %193, %301
  %315 = icmp ugt i8* %313, %1
  %316 = and i1 %314, %315
  br i1 %316, label %398, label %317

317:                                              ; preds = %307
  %318 = and i64 %305, -32
  %319 = getelementptr i8, i8* %193, i64 %318
  %320 = getelementptr i8, i8* %1, i64 %318
  %321 = add i64 %318, -32
  %322 = lshr exact i64 %321, 5
  %323 = add nuw nsw i64 %322, 1
  %324 = and i64 %323, 3
  %325 = icmp ult i64 %321, 96
  br i1 %325, label %377, label %326

326:                                              ; preds = %317
  %327 = sub nsw i64 %323, %324
  br label %328

328:                                              ; preds = %328, %326
  %329 = phi i64 [ 0, %326 ], [ %374, %328 ]
  %330 = phi i64 [ %327, %326 ], [ %375, %328 ]
  %331 = getelementptr i8, i8* %193, i64 %329
  %332 = getelementptr i8, i8* %1, i64 %329
  %333 = bitcast i8* %332 to <16 x i8>*
  %334 = load <16 x i8>, <16 x i8>* %333, align 1, !alias.scope !20
  %335 = getelementptr i8, i8* %332, i64 16
  %336 = bitcast i8* %335 to <16 x i8>*
  %337 = load <16 x i8>, <16 x i8>* %336, align 1, !alias.scope !20
  %338 = bitcast i8* %331 to <16 x i8>*
  store <16 x i8> %334, <16 x i8>* %338, align 1, !alias.scope !23, !noalias !20
  %339 = getelementptr i8, i8* %331, i64 16
  %340 = bitcast i8* %339 to <16 x i8>*
  store <16 x i8> %337, <16 x i8>* %340, align 1, !alias.scope !23, !noalias !20
  %341 = or i64 %329, 32
  %342 = getelementptr i8, i8* %193, i64 %341
  %343 = getelementptr i8, i8* %1, i64 %341
  %344 = bitcast i8* %343 to <16 x i8>*
  %345 = load <16 x i8>, <16 x i8>* %344, align 1, !alias.scope !20
  %346 = getelementptr i8, i8* %343, i64 16
  %347 = bitcast i8* %346 to <16 x i8>*
  %348 = load <16 x i8>, <16 x i8>* %347, align 1, !alias.scope !20
  %349 = bitcast i8* %342 to <16 x i8>*
  store <16 x i8> %345, <16 x i8>* %349, align 1, !alias.scope !23, !noalias !20
  %350 = getelementptr i8, i8* %342, i64 16
  %351 = bitcast i8* %350 to <16 x i8>*
  store <16 x i8> %348, <16 x i8>* %351, align 1, !alias.scope !23, !noalias !20
  %352 = or i64 %329, 64
  %353 = getelementptr i8, i8* %193, i64 %352
  %354 = getelementptr i8, i8* %1, i64 %352
  %355 = bitcast i8* %354 to <16 x i8>*
  %356 = load <16 x i8>, <16 x i8>* %355, align 1, !alias.scope !20
  %357 = getelementptr i8, i8* %354, i64 16
  %358 = bitcast i8* %357 to <16 x i8>*
  %359 = load <16 x i8>, <16 x i8>* %358, align 1, !alias.scope !20
  %360 = bitcast i8* %353 to <16 x i8>*
  store <16 x i8> %356, <16 x i8>* %360, align 1, !alias.scope !23, !noalias !20
  %361 = getelementptr i8, i8* %353, i64 16
  %362 = bitcast i8* %361 to <16 x i8>*
  store <16 x i8> %359, <16 x i8>* %362, align 1, !alias.scope !23, !noalias !20
  %363 = or i64 %329, 96
  %364 = getelementptr i8, i8* %193, i64 %363
  %365 = getelementptr i8, i8* %1, i64 %363
  %366 = bitcast i8* %365 to <16 x i8>*
  %367 = load <16 x i8>, <16 x i8>* %366, align 1, !alias.scope !20
  %368 = getelementptr i8, i8* %365, i64 16
  %369 = bitcast i8* %368 to <16 x i8>*
  %370 = load <16 x i8>, <16 x i8>* %369, align 1, !alias.scope !20
  %371 = bitcast i8* %364 to <16 x i8>*
  store <16 x i8> %367, <16 x i8>* %371, align 1, !alias.scope !23, !noalias !20
  %372 = getelementptr i8, i8* %364, i64 16
  %373 = bitcast i8* %372 to <16 x i8>*
  store <16 x i8> %370, <16 x i8>* %373, align 1, !alias.scope !23, !noalias !20
  %374 = add i64 %329, 128
  %375 = add i64 %330, -4
  %376 = icmp eq i64 %375, 0
  br i1 %376, label %377, label %328, !llvm.loop !25

377:                                              ; preds = %328, %317
  %378 = phi i64 [ 0, %317 ], [ %374, %328 ]
  %379 = icmp eq i64 %324, 0
  br i1 %379, label %396, label %380

380:                                              ; preds = %377, %380
  %381 = phi i64 [ %393, %380 ], [ %378, %377 ]
  %382 = phi i64 [ %394, %380 ], [ %324, %377 ]
  %383 = getelementptr i8, i8* %193, i64 %381
  %384 = getelementptr i8, i8* %1, i64 %381
  %385 = bitcast i8* %384 to <16 x i8>*
  %386 = load <16 x i8>, <16 x i8>* %385, align 1, !alias.scope !20
  %387 = getelementptr i8, i8* %384, i64 16
  %388 = bitcast i8* %387 to <16 x i8>*
  %389 = load <16 x i8>, <16 x i8>* %388, align 1, !alias.scope !20
  %390 = bitcast i8* %383 to <16 x i8>*
  store <16 x i8> %386, <16 x i8>* %390, align 1, !alias.scope !23, !noalias !20
  %391 = getelementptr i8, i8* %383, i64 16
  %392 = bitcast i8* %391 to <16 x i8>*
  store <16 x i8> %389, <16 x i8>* %392, align 1, !alias.scope !23, !noalias !20
  %393 = add i64 %381, 32
  %394 = add i64 %382, -1
  %395 = icmp eq i64 %394, 0
  br i1 %395, label %396, label %380, !llvm.loop !26

396:                                              ; preds = %380, %377
  %397 = icmp eq i64 %305, %318
  br i1 %397, label %408, label %398

398:                                              ; preds = %396, %307, %303
  %399 = phi i8* [ %193, %307 ], [ %193, %303 ], [ %319, %396 ]
  %400 = phi i8* [ %1, %307 ], [ %1, %303 ], [ %320, %396 ]
  br label %401

401:                                              ; preds = %398, %401
  %402 = phi i8* [ %406, %401 ], [ %399, %398 ]
  %403 = phi i8* [ %405, %401 ], [ %400, %398 ]
  %404 = load i8, i8* %403, align 1
  store i8 %404, i8* %402, align 1
  %405 = getelementptr inbounds i8, i8* %403, i64 1
  %406 = getelementptr inbounds i8, i8* %402, i64 1
  %407 = icmp eq i8* %405, %301
  br i1 %407, label %408, label %401, !llvm.loop !27

408:                                              ; preds = %401, %396, %300
  %409 = phi i8* [ %193, %300 ], [ %319, %396 ], [ %406, %401 ]
  %410 = ptrtoint i8* %409 to i64
  %411 = load i8*, i8** %6, align 8
  store i64 %297, i64* %165, align 8
  store i64 %410, i64* %20, align 8
  store i64 %291, i64* %13, align 8
  %412 = icmp eq i8* %411, null
  br i1 %412, label %414, label %413

413:                                              ; preds = %408
  tail call void @_ZdlPv(i8* nonnull %411) #9
  br label %414

414:                                              ; preds = %413, %408, %32, %159, %163, %4
  %415 = phi i8* [ %1, %4 ], [ %1, %163 ], [ %1, %159 ], [ %1, %32 ], [ %191, %408 ], [ %191, %413 ]
  ret i8* %415
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3net20WebSocketFrameParser17DecodeFrameHeaderEN4base4spanIKcLm18446744073709551615EEE(%"class.net::WebSocketFrameParser"* nocapture, i64, i8*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca i32, align 4
  %7 = icmp ult i64 %1, 2
  br i1 %7, label %148, label %8

8:                                                ; preds = %3
  %9 = load i8, i8* %2, align 1
  %10 = getelementptr inbounds i8, i8* %2, i64 1
  %11 = load i8, i8* %10, align 1
  %12 = lshr i8 %9, 7
  %13 = lshr i8 %9, 6
  %14 = and i8 %13, 1
  %15 = lshr i8 %9, 5
  %16 = and i8 %15, 1
  %17 = lshr i8 %9, 4
  %18 = and i8 %17, 1
  %19 = and i8 %9, 15
  %20 = zext i8 %19 to i32
  %21 = and i8 %11, 127
  %22 = zext i8 %21 to i64
  switch i8 %21, label %88 [
    i8 126, label %23
    i8 127, label %38
  ]

23:                                               ; preds = %8
  %24 = icmp ult i64 %1, 4
  br i1 %24, label %148, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds i8, i8* %2, i64 2
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i16
  %29 = shl nuw i16 %28, 8
  %30 = getelementptr inbounds i8, i8* %2, i64 3
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i16
  %33 = or i16 %29, %32
  %34 = zext i16 %33 to i64
  %35 = icmp ult i16 %33, 126
  br i1 %35, label %36, label %88

36:                                               ; preds = %25
  %37 = getelementptr inbounds %"class.net::WebSocketFrameParser", %"class.net::WebSocketFrameParser"* %0, i64 0, i32 3
  store i32 1002, i32* %37, align 8
  br label %148

38:                                               ; preds = %8
  %39 = icmp ult i64 %1, 10
  br i1 %39, label %148, label %40

40:                                               ; preds = %38
  %41 = getelementptr inbounds i8, i8* %2, i64 2
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i64
  %44 = shl nuw nsw i64 %43, 8
  %45 = getelementptr inbounds i8, i8* %2, i64 3
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i64
  %48 = or i64 %44, %47
  %49 = shl nuw nsw i64 %48, 8
  %50 = getelementptr inbounds i8, i8* %2, i64 4
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i64
  %53 = or i64 %49, %52
  %54 = shl nuw nsw i64 %53, 8
  %55 = getelementptr inbounds i8, i8* %2, i64 5
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i64
  %58 = or i64 %54, %57
  %59 = shl i64 %58, 8
  %60 = getelementptr inbounds i8, i8* %2, i64 6
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i64
  %63 = or i64 %59, %62
  %64 = shl i64 %63, 8
  %65 = getelementptr inbounds i8, i8* %2, i64 7
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i64
  %68 = or i64 %64, %67
  %69 = shl i64 %68, 8
  %70 = getelementptr inbounds i8, i8* %2, i64 8
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i64
  %73 = or i64 %69, %72
  %74 = shl i64 %73, 8
  %75 = getelementptr inbounds i8, i8* %2, i64 9
  %76 = load i8, i8* %75, align 1
  %77 = zext i8 %76 to i64
  %78 = or i64 %74, %77
  %79 = icmp ult i64 %78, 65536
  %80 = icmp slt i64 %78, 0
  %81 = or i1 %79, %80
  br i1 %81, label %82, label %84

82:                                               ; preds = %40
  %83 = getelementptr inbounds %"class.net::WebSocketFrameParser", %"class.net::WebSocketFrameParser"* %0, i64 0, i32 3
  store i32 1002, i32* %83, align 8
  br label %148

84:                                               ; preds = %40
  %85 = icmp ugt i64 %78, 2147483647
  br i1 %85, label %86, label %88

86:                                               ; preds = %84
  %87 = getelementptr inbounds %"class.net::WebSocketFrameParser", %"class.net::WebSocketFrameParser"* %0, i64 0, i32 3
  store i32 1009, i32* %87, align 8
  br label %148

88:                                               ; preds = %25, %8, %84
  %89 = phi i64 [ %22, %8 ], [ %78, %84 ], [ %34, %25 ]
  %90 = phi i64 [ 2, %8 ], [ 10, %84 ], [ 4, %25 ]
  %91 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %91)
  store i32 0, i32* %6, align 4
  %92 = icmp slt i8 %11, 0
  %93 = lshr i8 %11, 7
  br i1 %92, label %94, label %108

94:                                               ; preds = %88
  %95 = add nuw nsw i64 %90, 4
  %96 = icmp ugt i64 %95, %1
  br i1 %96, label %146, label %97

97:                                               ; preds = %94
  %98 = icmp ult i64 %90, %1
  br i1 %98, label %104, label %99

99:                                               ; preds = %97
  %100 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i32 418, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0)) #10
  %101 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100) #10
  %102 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i32 418, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0)) #10
  %103 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #10
  br label %104

104:                                              ; preds = %97, %99
  %105 = getelementptr inbounds i8, i8* %2, i64 %90
  %106 = bitcast i8* %105 to i32*
  %107 = load i32, i32* %106, align 1
  store i32 %107, i32* %6, align 4
  br label %108

108:                                              ; preds = %104, %88
  %109 = phi i64 [ %95, %104 ], [ %90, %88 ]
  %110 = call i8* @_Znwm(i64 24) #9
  %111 = getelementptr inbounds i8, i8* %110, i64 4
  %112 = bitcast i8* %111 to i32*
  %113 = bitcast i8* %110 to i32*
  store i32 0, i32* %113, align 8
  store i32 %20, i32* %112, align 4
  %114 = getelementptr inbounds i8, i8* %110, i64 8
  store i8 0, i8* %114, align 8
  %115 = getelementptr inbounds i8, i8* %110, i64 9
  %116 = bitcast i8* %115 to i32*
  store i32 0, i32* %116, align 1
  %117 = getelementptr inbounds i8, i8* %110, i64 16
  %118 = bitcast i8* %117 to i64*
  store i64 0, i64* %118, align 8
  %119 = ptrtoint i8* %110 to i64
  %120 = getelementptr inbounds %"class.net::WebSocketFrameParser", %"class.net::WebSocketFrameParser"* %0, i64 0, i32 1
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %120, i64 0, i32 0, i32 0, i32 0
  %122 = load %"struct.net::WebSocketFrameHeader"*, %"struct.net::WebSocketFrameHeader"** %121, align 8
  %123 = bitcast %"class.std::__1::unique_ptr"* %120 to i64*
  store i64 %119, i64* %123, align 8
  %124 = icmp eq %"struct.net::WebSocketFrameHeader"* %122, null
  %125 = bitcast i8* %110 to %"struct.net::WebSocketFrameHeader"*
  br i1 %124, label %129, label %126

126:                                              ; preds = %108
  %127 = getelementptr inbounds %"struct.net::WebSocketFrameHeader", %"struct.net::WebSocketFrameHeader"* %122, i64 0, i32 0
  call void @_ZdlPv(i8* %127) #9
  %128 = load %"struct.net::WebSocketFrameHeader"*, %"struct.net::WebSocketFrameHeader"** %121, align 8
  br label %129

129:                                              ; preds = %126, %108
  %130 = phi %"struct.net::WebSocketFrameHeader"* [ %128, %126 ], [ %125, %108 ]
  %131 = getelementptr inbounds %"struct.net::WebSocketFrameHeader", %"struct.net::WebSocketFrameHeader"* %130, i64 0, i32 0
  store i8 %12, i8* %131, align 8
  %132 = load %"struct.net::WebSocketFrameHeader"*, %"struct.net::WebSocketFrameHeader"** %121, align 8
  %133 = getelementptr inbounds %"struct.net::WebSocketFrameHeader", %"struct.net::WebSocketFrameHeader"* %132, i64 0, i32 1
  store i8 %14, i8* %133, align 1
  %134 = load %"struct.net::WebSocketFrameHeader"*, %"struct.net::WebSocketFrameHeader"** %121, align 8
  %135 = getelementptr inbounds %"struct.net::WebSocketFrameHeader", %"struct.net::WebSocketFrameHeader"* %134, i64 0, i32 2
  store i8 %16, i8* %135, align 2
  %136 = load %"struct.net::WebSocketFrameHeader"*, %"struct.net::WebSocketFrameHeader"** %121, align 8
  %137 = getelementptr inbounds %"struct.net::WebSocketFrameHeader", %"struct.net::WebSocketFrameHeader"* %136, i64 0, i32 3
  store i8 %18, i8* %137, align 1
  %138 = load %"struct.net::WebSocketFrameHeader"*, %"struct.net::WebSocketFrameHeader"** %121, align 8
  %139 = getelementptr inbounds %"struct.net::WebSocketFrameHeader", %"struct.net::WebSocketFrameHeader"* %138, i64 0, i32 5
  store i8 %93, i8* %139, align 8
  %140 = load %"struct.net::WebSocketFrameHeader"*, %"struct.net::WebSocketFrameHeader"** %121, align 8
  %141 = getelementptr inbounds %"struct.net::WebSocketFrameHeader", %"struct.net::WebSocketFrameHeader"* %140, i64 0, i32 6, i32 0, i64 0
  %142 = bitcast i8* %141 to i32*
  %143 = load i32, i32* %6, align 4
  store i32 %143, i32* %142, align 1
  %144 = load %"struct.net::WebSocketFrameHeader"*, %"struct.net::WebSocketFrameHeader"** %121, align 8
  %145 = getelementptr inbounds %"struct.net::WebSocketFrameHeader", %"struct.net::WebSocketFrameHeader"* %144, i64 0, i32 7
  store i64 %89, i64* %145, align 8
  br label %146

146:                                              ; preds = %94, %129
  %147 = phi i64 [ %109, %129 ], [ 0, %94 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %91)
  br label %148

148:                                              ; preds = %82, %86, %146, %23, %36, %38, %3
  %149 = phi i64 [ 0, %3 ], [ %147, %146 ], [ 0, %82 ], [ 0, %86 ], [ 0, %23 ], [ 0, %36 ], [ 0, %38 ]
  ret i64 %149
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i8* } @_ZNK4base4spanIKcLm18446744073709551615EE7subspanEmm(%"class.base::span"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.base::span", %"class.base::span"* %0, i64 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %9, label %13

9:                                                ; preds = %3
  %10 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i32 403, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0)) #10
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #10
  %12 = load i64, i64* %6, align 8
  br label %13

13:                                               ; preds = %3, %9
  %14 = phi i64 [ %7, %3 ], [ %12, %9 ]
  %15 = icmp eq i64 %2, -1
  %16 = sub i64 %14, %1
  br i1 %15, label %22, label %17

17:                                               ; preds = %13
  %18 = icmp ult i64 %16, %2
  br i1 %18, label %19, label %22

19:                                               ; preds = %17
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i32 404, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2, i64 0, i64 0)) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %13, %19, %17
  %23 = phi i64 [ %2, %17 ], [ %2, %19 ], [ %16, %13 ]
  %24 = getelementptr inbounds %"class.base::span", %"class.base::span"* %0, i64 0, i32 1
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds i8, i8* %25, i64 %1
  %27 = insertvalue { i64, i8* } undef, i64 %23, 0
  %28 = insertvalue { i64, i8* } %27, i8* %26, 1
  ret { i64, i8* } %28
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.net::WebSocketFrameChunk"* @_ZN3net20WebSocketFrameParser18DecodeFramePayloadEbPN4base4spanIKcLm18446744073709551615EEE(%"class.net::WebSocketFrameParser"* nocapture, i1 zeroext, %"class.base::span"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.base::span", %"class.base::span"* %2, i64 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.net::WebSocketFrameParser", %"class.net::WebSocketFrameParser"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"struct.net::WebSocketFrameHeader"*, %"struct.net::WebSocketFrameHeader"** %7, align 8
  %9 = getelementptr inbounds %"struct.net::WebSocketFrameHeader", %"struct.net::WebSocketFrameHeader"* %8, i64 0, i32 7
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.net::WebSocketFrameParser", %"class.net::WebSocketFrameParser"* %0, i64 0, i32 2
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = icmp ult i64 %13, %6
  %15 = select i1 %14, i64 %13, i64 %6
  %16 = trunc i64 %15 to i32
  %17 = tail call i8* @_Znwm(i64 32) #9
  %18 = bitcast i8* %17 to %"struct.net::WebSocketFrameChunk"*
  tail call void @_ZN3net19WebSocketFrameChunkC1Ev(%"struct.net::WebSocketFrameChunk"* nonnull %18) #10
  br i1 %1, label %19, label %29

19:                                               ; preds = %3
  %20 = load %"struct.net::WebSocketFrameHeader"*, %"struct.net::WebSocketFrameHeader"** %7, align 8
  %21 = tail call %"struct.net::WebSocketFrameHeader"* @_ZNK3net20WebSocketFrameHeader5CloneEv(%"struct.net::WebSocketFrameHeader"* %20) #10
  %22 = ptrtoint %"struct.net::WebSocketFrameHeader"* %21 to i64
  %23 = bitcast i8* %17 to %"struct.net::WebSocketFrameHeader"**
  %24 = load %"struct.net::WebSocketFrameHeader"*, %"struct.net::WebSocketFrameHeader"** %23, align 8
  %25 = bitcast i8* %17 to i64*
  store i64 %22, i64* %25, align 8
  %26 = icmp eq %"struct.net::WebSocketFrameHeader"* %24, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"struct.net::WebSocketFrameHeader", %"struct.net::WebSocketFrameHeader"* %24, i64 0, i32 0
  tail call void @_ZdlPv(i8* %28) #9
  br label %29

29:                                               ; preds = %19, %27, %3
  %30 = getelementptr inbounds i8, i8* %17, i64 8
  store i8 0, i8* %30, align 8
  %31 = icmp sgt i32 %16, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %29
  %33 = load i64, i64* %11, align 8
  br label %58

34:                                               ; preds = %29
  %35 = shl i64 %15, 32
  %36 = ashr exact i64 %35, 32
  %37 = tail call { i64, i8* } @_ZNK4base4spanIKcLm18446744073709551615EE7subspanEmm(%"class.base::span"* %2, i64 0, i64 %36) #10
  %38 = extractvalue { i64, i8* } %37, 0
  %39 = extractvalue { i64, i8* } %37, 1
  %40 = getelementptr inbounds i8, i8* %17, i64 16
  %41 = bitcast i8* %40 to i64*
  store i64 %38, i64* %41, align 8
  %42 = getelementptr inbounds i8, i8* %17, i64 24
  %43 = bitcast i8* %42 to i8**
  store i8* %39, i8** %43, align 8
  %44 = load i64, i64* %5, align 8
  %45 = icmp ult i64 %44, %36
  br i1 %45, label %46, label %50

46:                                               ; preds = %34
  %47 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i32 403, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0)) #10
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #10
  %49 = load i64, i64* %5, align 8
  br label %50

50:                                               ; preds = %34, %46
  %51 = phi i64 [ %44, %34 ], [ %49, %46 ]
  %52 = sub i64 %51, %36
  %53 = getelementptr inbounds %"class.base::span", %"class.base::span"* %2, i64 0, i32 1
  %54 = load i8*, i8** %53, align 8
  %55 = getelementptr inbounds i8, i8* %54, i64 %36
  store i64 %52, i64* %5, align 8
  store i8* %55, i8** %53, align 8
  %56 = load i64, i64* %11, align 8
  %57 = add i64 %56, %36
  store i64 %57, i64* %11, align 8
  br label %58

58:                                               ; preds = %32, %50
  %59 = phi i64 [ %33, %32 ], [ %57, %50 ]
  %60 = load %"struct.net::WebSocketFrameHeader"*, %"struct.net::WebSocketFrameHeader"** %7, align 8
  %61 = getelementptr inbounds %"struct.net::WebSocketFrameHeader", %"struct.net::WebSocketFrameHeader"* %60, i64 0, i32 7
  %62 = load i64, i64* %61, align 8
  %63 = icmp eq i64 %59, %62
  br i1 %63, label %64, label %69

64:                                               ; preds = %58
  store i8 1, i8* %30, align 8
  store %"struct.net::WebSocketFrameHeader"* null, %"struct.net::WebSocketFrameHeader"** %7, align 8
  %65 = icmp eq %"struct.net::WebSocketFrameHeader"* %60, null
  br i1 %65, label %68, label %66

66:                                               ; preds = %64
  %67 = getelementptr inbounds %"struct.net::WebSocketFrameHeader", %"struct.net::WebSocketFrameHeader"* %60, i64 0, i32 0
  call void @_ZdlPv(i8* %67) #9
  br label %68

68:                                               ; preds = %64, %66
  store i64 0, i64* %11, align 8
  br label %69

69:                                               ; preds = %58, %68
  ret %"struct.net::WebSocketFrameChunk"* %18
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %"struct.net::WebSocketFrameHeader"* @_ZNK3net20WebSocketFrameHeader5CloneEv(%"struct.net::WebSocketFrameHeader"*) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN3net19WebSocketFrameChunkD1Ev(%"struct.net::WebSocketFrameChunk"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN3net19WebSocketFrameChunkENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.4"*, %"class.std::__1::unique_ptr.6"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.6"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.4"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.4"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.6"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #11
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #9
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.6"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.6"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.6"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.6"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"struct.net::WebSocketFrameChunk"* null, %"struct.net::WebSocketFrameChunk"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.6"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.6"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.6"*, %"class.std::__1::unique_ptr.6"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.6"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.6"*, %"class.std::__1::unique_ptr.6"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.6"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"struct.net::WebSocketFrameChunk"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.6"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.6"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.6"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"struct.net::WebSocketFrameChunk"* null, %"struct.net::WebSocketFrameChunk"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.6"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !28

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.6"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.6"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.6"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.6"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.6"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.6"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"struct.net::WebSocketFrameChunk"* null, %"struct.net::WebSocketFrameChunk"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.6"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.6"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"struct.net::WebSocketFrameChunk"* null, %"struct.net::WebSocketFrameChunk"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.6"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.6"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"struct.net::WebSocketFrameChunk"* null, %"struct.net::WebSocketFrameChunk"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.6"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.6"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"struct.net::WebSocketFrameChunk"* null, %"struct.net::WebSocketFrameChunk"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.6"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.6"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"struct.net::WebSocketFrameChunk"* null, %"struct.net::WebSocketFrameChunk"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.6"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.6"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"struct.net::WebSocketFrameChunk"* null, %"struct.net::WebSocketFrameChunk"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.6"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.6"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"struct.net::WebSocketFrameChunk"* null, %"struct.net::WebSocketFrameChunk"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.6"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.6"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"struct.net::WebSocketFrameChunk"* null, %"struct.net::WebSocketFrameChunk"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.6"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.6"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.6"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.6"*, %"class.std::__1::unique_ptr.6"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.6"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.6"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.6"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.6"*
  %138 = icmp eq %"class.std::__1::unique_ptr.6"* %133, %137
  br i1 %138, label %149, label %139

139:                                              ; preds = %132, %147
  %140 = phi %"class.std::__1::unique_ptr.6"* [ %141, %147 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"struct.net::WebSocketFrameChunk"*, %"struct.net::WebSocketFrameChunk"** %142, align 8
  store %"struct.net::WebSocketFrameChunk"* null, %"struct.net::WebSocketFrameChunk"** %142, align 8
  %144 = icmp eq %"struct.net::WebSocketFrameChunk"* %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %139
  tail call void @_ZN3net19WebSocketFrameChunkD1Ev(%"struct.net::WebSocketFrameChunk"* nonnull %143) #10
  %146 = bitcast %"struct.net::WebSocketFrameChunk"* %143 to i8*
  tail call void @_ZdlPv(i8* %146) #9
  br label %147

147:                                              ; preds = %145, %139
  %148 = icmp eq %"class.std::__1::unique_ptr.6"* %141, %137
  br i1 %148, label %149, label %139

149:                                              ; preds = %147, %132
  %150 = icmp eq i64 %135, 0
  br i1 %150, label %153, label %151

151:                                              ; preds = %149
  %152 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %152) #9
  br label %153

153:                                              ; preds = %149, %151
  ret void
}

declare void @_ZN3net19WebSocketFrameChunkC1Ev(%"struct.net::WebSocketFrameChunk"*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !8}
!12 = !{!13}
!13 = distinct !{!13, !14}
!14 = distinct !{!14, !"LVerDomain"}
!15 = !{!16}
!16 = distinct !{!16, !14}
!17 = distinct !{!17, !8}
!18 = distinct !{!18, !10}
!19 = distinct !{!19, !8}
!20 = !{!21}
!21 = distinct !{!21, !22}
!22 = distinct !{!22, !"LVerDomain"}
!23 = !{!24}
!24 = distinct !{!24, !22}
!25 = distinct !{!25, !8}
!26 = distinct !{!26, !10}
!27 = distinct !{!27, !8}
!28 = distinct !{!28, !10}
