; ModuleID = 'gen/content/common/renderer_variations_configuration.mojom-test-utils.cc'
source_filename = "gen/content/common/renderer_variations_configuration.mojom-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.content::mojom::RendererVariationsConfigurationAsyncWaiter" = type { %"class.content::mojom::RendererVariationsConfiguration"* }
%"class.content::mojom::RendererVariationsConfiguration" = type { i32 (...)** }
%"class.content::mojom::RendererVariationsConfigurationInterceptorForTesting" = type { %"class.content::mojom::RendererVariationsConfiguration" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.variations::mojom::VariationsHeaders"* }
%"class.variations::mojom::VariationsHeaders" = type { %"class.base::flat_map" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.0" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::pair"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }

$_ZN7content5mojom31RendererVariationsConfigurationD2Ev = comdat any

$_ZN7content5mojom52RendererVariationsConfigurationInterceptorForTestingD0Ev = comdat any

@_ZTVN7content5mojom52RendererVariationsConfigurationInterceptorForTestingE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.content::mojom::RendererVariationsConfiguration"*)* @_ZN7content5mojom31RendererVariationsConfigurationD2Ev to i8*), i8* bitcast (void (%"class.content::mojom::RendererVariationsConfigurationInterceptorForTesting"*)* @_ZN7content5mojom52RendererVariationsConfigurationInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.content::mojom::RendererVariationsConfigurationInterceptorForTesting"*, %"class.mojo::StructPtr"*)* @_ZN7content5mojom52RendererVariationsConfigurationInterceptorForTesting20SetVariationsHeadersEN4mojo9StructPtrIN10variations5mojom17VariationsHeadersEEE to i8*), i8* bitcast (void (%"class.content::mojom::RendererVariationsConfigurationInterceptorForTesting"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)* @_ZN7content5mojom52RendererVariationsConfigurationInterceptorForTesting18SetFieldTrialGroupERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEESA_ to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN7content5mojom42RendererVariationsConfigurationAsyncWaiterC1EPNS0_31RendererVariationsConfigurationE = hidden unnamed_addr alias void (%"class.content::mojom::RendererVariationsConfigurationAsyncWaiter"*, %"class.content::mojom::RendererVariationsConfiguration"*), void (%"class.content::mojom::RendererVariationsConfigurationAsyncWaiter"*, %"class.content::mojom::RendererVariationsConfiguration"*)* @_ZN7content5mojom42RendererVariationsConfigurationAsyncWaiterC2EPNS0_31RendererVariationsConfigurationE
@_ZN7content5mojom42RendererVariationsConfigurationAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.content::mojom::RendererVariationsConfigurationAsyncWaiter"*), void (%"class.content::mojom::RendererVariationsConfigurationAsyncWaiter"*)* @_ZN7content5mojom42RendererVariationsConfigurationAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content5mojom52RendererVariationsConfigurationInterceptorForTesting20SetVariationsHeadersEN4mojo9StructPtrIN10variations5mojom17VariationsHeadersEEE(%"class.content::mojom::RendererVariationsConfigurationInterceptorForTesting"*, %"class.mojo::StructPtr"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::StructPtr", align 8
  %4 = bitcast %"class.content::mojom::RendererVariationsConfigurationInterceptorForTesting"* %0 to %"class.content::mojom::RendererVariationsConfiguration"* (%"class.content::mojom::RendererVariationsConfigurationInterceptorForTesting"*)***
  %5 = load %"class.content::mojom::RendererVariationsConfiguration"* (%"class.content::mojom::RendererVariationsConfigurationInterceptorForTesting"*)**, %"class.content::mojom::RendererVariationsConfiguration"* (%"class.content::mojom::RendererVariationsConfigurationInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.content::mojom::RendererVariationsConfiguration"* (%"class.content::mojom::RendererVariationsConfigurationInterceptorForTesting"*)*, %"class.content::mojom::RendererVariationsConfiguration"* (%"class.content::mojom::RendererVariationsConfigurationInterceptorForTesting"*)** %5, i64 4
  %7 = load %"class.content::mojom::RendererVariationsConfiguration"* (%"class.content::mojom::RendererVariationsConfigurationInterceptorForTesting"*)*, %"class.content::mojom::RendererVariationsConfiguration"* (%"class.content::mojom::RendererVariationsConfigurationInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.content::mojom::RendererVariationsConfiguration"* %7(%"class.content::mojom::RendererVariationsConfigurationInterceptorForTesting"* %0) #7
  %9 = bitcast %"class.mojo::StructPtr"* %3 to i64*
  %10 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %9, align 8
  store i64 0, i64* %11, align 8
  %13 = bitcast %"class.content::mojom::RendererVariationsConfiguration"* %8 to void (%"class.content::mojom::RendererVariationsConfiguration"*, %"class.mojo::StructPtr"*)***
  %14 = load void (%"class.content::mojom::RendererVariationsConfiguration"*, %"class.mojo::StructPtr"*)**, void (%"class.content::mojom::RendererVariationsConfiguration"*, %"class.mojo::StructPtr"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.content::mojom::RendererVariationsConfiguration"*, %"class.mojo::StructPtr"*)*, void (%"class.content::mojom::RendererVariationsConfiguration"*, %"class.mojo::StructPtr"*)** %14, i64 2
  %16 = load void (%"class.content::mojom::RendererVariationsConfiguration"*, %"class.mojo::StructPtr"*)*, void (%"class.content::mojom::RendererVariationsConfiguration"*, %"class.mojo::StructPtr"*)** %15, align 8
  call void %16(%"class.content::mojom::RendererVariationsConfiguration"* %8, %"class.mojo::StructPtr"* nonnull %3) #7
  %17 = load %"class.variations::mojom::VariationsHeaders"*, %"class.variations::mojom::VariationsHeaders"** %10, align 8
  store %"class.variations::mojom::VariationsHeaders"* null, %"class.variations::mojom::VariationsHeaders"** %10, align 8
  %18 = icmp eq %"class.variations::mojom::VariationsHeaders"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %2
  call void @_ZN10variations5mojom17VariationsHeadersD1Ev(%"class.variations::mojom::VariationsHeaders"* nonnull %17) #7
  %20 = bitcast %"class.variations::mojom::VariationsHeaders"* %17 to i8*
  call void @_ZdlPv(i8* %20) #8
  br label %21

21:                                               ; preds = %2, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content5mojom52RendererVariationsConfigurationInterceptorForTesting18SetFieldTrialGroupERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEESA_(%"class.content::mojom::RendererVariationsConfigurationInterceptorForTesting"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.content::mojom::RendererVariationsConfigurationInterceptorForTesting"* %0 to %"class.content::mojom::RendererVariationsConfiguration"* (%"class.content::mojom::RendererVariationsConfigurationInterceptorForTesting"*)***
  %5 = load %"class.content::mojom::RendererVariationsConfiguration"* (%"class.content::mojom::RendererVariationsConfigurationInterceptorForTesting"*)**, %"class.content::mojom::RendererVariationsConfiguration"* (%"class.content::mojom::RendererVariationsConfigurationInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.content::mojom::RendererVariationsConfiguration"* (%"class.content::mojom::RendererVariationsConfigurationInterceptorForTesting"*)*, %"class.content::mojom::RendererVariationsConfiguration"* (%"class.content::mojom::RendererVariationsConfigurationInterceptorForTesting"*)** %5, i64 4
  %7 = load %"class.content::mojom::RendererVariationsConfiguration"* (%"class.content::mojom::RendererVariationsConfigurationInterceptorForTesting"*)*, %"class.content::mojom::RendererVariationsConfiguration"* (%"class.content::mojom::RendererVariationsConfigurationInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.content::mojom::RendererVariationsConfiguration"* %7(%"class.content::mojom::RendererVariationsConfigurationInterceptorForTesting"* %0) #7
  %9 = bitcast %"class.content::mojom::RendererVariationsConfiguration"* %8 to void (%"class.content::mojom::RendererVariationsConfiguration"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)***
  %10 = load void (%"class.content::mojom::RendererVariationsConfiguration"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)**, void (%"class.content::mojom::RendererVariationsConfiguration"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.content::mojom::RendererVariationsConfiguration"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, void (%"class.content::mojom::RendererVariationsConfiguration"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %10, i64 3
  %12 = load void (%"class.content::mojom::RendererVariationsConfiguration"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, void (%"class.content::mojom::RendererVariationsConfiguration"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %11, align 8
  tail call void %12(%"class.content::mojom::RendererVariationsConfiguration"* %8, %"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.std::__1::basic_string"* dereferenceable(24) %2) #7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7content5mojom42RendererVariationsConfigurationAsyncWaiterC2EPNS0_31RendererVariationsConfigurationE(%"class.content::mojom::RendererVariationsConfigurationAsyncWaiter"* nocapture, %"class.content::mojom::RendererVariationsConfiguration"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.content::mojom::RendererVariationsConfigurationAsyncWaiter", %"class.content::mojom::RendererVariationsConfigurationAsyncWaiter"* %0, i64 0, i32 0
  store %"class.content::mojom::RendererVariationsConfiguration"* %1, %"class.content::mojom::RendererVariationsConfiguration"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7content5mojom42RendererVariationsConfigurationAsyncWaiterD2Ev(%"class.content::mojom::RendererVariationsConfigurationAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content5mojom31RendererVariationsConfigurationD2Ev(%"class.content::mojom::RendererVariationsConfiguration"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content5mojom52RendererVariationsConfigurationInterceptorForTestingD0Ev(%"class.content::mojom::RendererVariationsConfigurationInterceptorForTesting"*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind
declare void @_ZN10variations5mojom17VariationsHeadersD1Ev(%"class.variations::mojom::VariationsHeaders"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
