; ModuleID = '../../third_party/blink/renderer/core/editing/serializers/styled_markup_accumulator.cc'
source_filename = "../../third_party/blink/renderer/core/editing/serializers/styled_markup_accumulator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.42 }
%class.scoped_refptr.42 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.43", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.43" = type { %"class.base::RefCounted.44" }
%"class.base::RefCounted.44" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<const WTF::String>::InstanceStorage" }
%"class.WTF::StaticSingleton<const WTF::String>::InstanceStorage" = type { [8 x i8] }
%"class.blink::StyledMarkupAccumulator" = type { %"class.blink::MarkupFormatter", %"class.blink::TextOffset", %"class.blink::TextOffset", %"class.blink::Document"*, %"class.blink::CreateMarkupOptions", %"class.WTF::StringBuilder", %"class.WTF::Vector.592" }
%"class.blink::MarkupFormatter" = type { i32, i32 }
%"class.blink::TextOffset" = type <{ %"class.blink::Text"*, i32, [4 x i8] }>
%"class.blink::Text" = type { %"class.blink::CharacterData" }
%"class.blink::CharacterData" = type { %"class.blink::Node", i8, %"class.blink::ParkableString", %"class.WTF::String" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.0", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.2" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.25", %"class.blink::Member.27", %"class.blink::Member.0", %"class.blink::Member.29", %"class.blink::Member.29", %"class.blink::Member.69", %"class.blink::Member.71", %"class.blink::Member.73", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.78", %"class.blink::HeapVector.80" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Member.27" = type { %"class.blink::MemberBase.28" }
%"class.blink::MemberBase.28" = type { %"class.blink::Document"* }
%"class.blink::Member.29" = type { %"class.blink::MemberBase.30" }
%"class.blink::MemberBase.30" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.36" }
%"class.blink::Member.36" = type { %"class.blink::MemberBase.37" }
%"class.blink::MemberBase.37" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.40", i32, %"class.blink::HeapVector" }
%"class.blink::Member.40" = type { %"class.blink::MemberBase.41" }
%"class.blink::MemberBase.41" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.45" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.45" = type { %"class.blink::MemberBase.46" }
%"class.blink::MemberBase.46" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.49", %"class.blink::Member.51", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.49" = type { %"class.WTF::SingleThreadedBitField.50" }
%"class.WTF::SingleThreadedBitField.50" = type { i32 }
%"class.blink::Member.51" = type { %"class.blink::MemberBase.52" }
%"class.blink::MemberBase.52" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.55 }
%class.scoped_refptr.55 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.56", %"class.WTF::AtomicString", %"class.WTF::Vector.58" }
%"class.WTF::RefCounted.56" = type { %"class.base::RefCounted.57" }
%"class.base::RefCounted.57" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.58" = type { %"class.WTF::VectorBuffer.59" }
%"class.WTF::VectorBuffer.59" = type { %"class.WTF::VectorBufferBase.60", [32 x i8] }
%"class.WTF::VectorBufferBase.60" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.65" }
%"class.WTF::Vector.65" = type { %"class.WTF::VectorBuffer.66" }
%"class.WTF::VectorBuffer.66" = type { %"class.WTF::VectorBufferBase.67" }
%"class.WTF::VectorBufferBase.67" = type { %"class.blink::Member.40"*, i32, i32 }
%"class.blink::Member.69" = type { %"class.blink::MemberBase.70" }
%"class.blink::MemberBase.70" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.71" = type { %"class.blink::MemberBase.72" }
%"class.blink::MemberBase.72" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.73" = type { %"class.blink::MemberBase.74" }
%"class.blink::MemberBase.74" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.75" }
%"class.blink::Member.75" = type { %"class.blink::MemberBase.76" }
%"class.blink::MemberBase.76" = type { %"class.blink::HeapHashMap.77"* }
%"class.blink::HeapHashMap.77" = type opaque
%"class.blink::Member.78" = type { %"class.blink::MemberBase.79" }
%"class.blink::MemberBase.79" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.80" = type { %"class.WTF::Vector.83" }
%"class.WTF::Vector.83" = type { %"class.WTF::VectorBuffer.84" }
%"class.WTF::VectorBuffer.84" = type { %"class.WTF::VectorBufferBase.85" }
%"class.WTF::VectorBufferBase.85" = type { %"class.blink::Member.86"*, i32, i32 }
%"class.blink::Member.86" = type { %"class.blink::MemberBase.87" }
%"class.blink::MemberBase.87" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.88", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.90, %"class.WTF::Vector.91", %"class.WTF::Vector.91", %"class.blink::Member", %"class.blink::Member.96", %"class.blink::HeapHashSet", %"class.blink::Member.27", %"class.WTF::HashSet.104", %"class.WTF::TextPosition", %"class.blink::Member.108", %"class.blink::HeapVector.110", %"class.blink::Member.117" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.88" = type { %"class.blink::MemberBase.89" }
%"class.blink::MemberBase.89" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.90 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.91" = type { %"class.WTF::VectorBuffer.92" }
%"class.WTF::VectorBuffer.92" = type { %"class.WTF::VectorBufferBase.93" }
%"class.WTF::VectorBufferBase.93" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.96" = type { %"class.blink::MemberBase.97" }
%"class.blink::MemberBase.97" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.98" }
%"class.blink::Member.98" = type { %"class.blink::MemberBase.99" }
%"class.blink::MemberBase.99" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.102" }
%"class.WTF::HashTable.102" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.1" }
%"class.WTF::HashSet.104" = type { %"class.WTF::HashTable.105" }
%"class.WTF::HashTable.105" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.108" = type { %"class.blink::MemberBase.109" }
%"class.blink::MemberBase.109" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.110" = type { %"class.WTF::Vector.113" }
%"class.WTF::Vector.113" = type { %"class.WTF::VectorBuffer.114" }
%"class.WTF::VectorBuffer.114" = type { %"class.WTF::VectorBufferBase.115" }
%"class.WTF::VectorBufferBase.115" = type { %"class.blink::Member.96"*, i32, i32 }
%"class.blink::Member.117" = type { %"class.blink::MemberBase.118" }
%"class.blink::MemberBase.118" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::ParkableString" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::ParkableStringImpl"* }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.12", %"class.WTF::Vector.18", i8, i32 }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.WTF::Vector"* }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.18" = type { %"class.WTF::VectorBuffer.19" }
%"class.WTF::VectorBuffer.19" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.blink::CreateMarkupOptions" = type <{ %"class.blink::Node"*, i32, i8, i8, i8, i8 }>
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon, i32, i8, i8, [2 x i8] }>
%union.anon = type { %"class.WTF::Vector.583" }
%"class.WTF::Vector.583" = type { %"class.WTF::VectorBuffer.584" }
%"class.WTF::VectorBuffer.584" = type { %"class.WTF::VectorBufferBase", [16 x i8] }
%"class.WTF::Vector.592" = type { %"class.WTF::VectorBuffer.593" }
%"class.WTF::VectorBuffer.593" = type { %"class.WTF::VectorBufferBase.594" }
%"class.WTF::VectorBufferBase.594" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.127", %"class.WTF::Vector.127", i8, i32, %"class.blink::Member.138", %"class.blink::Member.140", %"class.blink::Member.142", %"class.blink::Member.144", %"class.blink::Member.146", %"class.blink::Member.148", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.156", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.162", %"class.blink::Member.164", %"class.blink::Member.86", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.167", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.40", %"class.blink::Member.377", %"class.blink::Member.40", %"class.blink::Member.40", %"class.blink::Member.40", %"class.blink::UserActionElementSet", %"class.blink::Member.386", double, double, i64, i64, %"class.blink::HeapHashSet.388", %"class.blink::HeapHashSet.395", i16, i8, %"class.blink::Member.402", %"class.blink::Member.404", %"class.blink::Member.406", %"class.blink::Member.408", %"class.blink::TextLinkColors", %"class.blink::Member.410", i8, [7 x i8], %"class.blink::HeapHashMap.412", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.40", %"class.WTF::Vector.419", %"class.blink::Member.424", %"class.blink::Member.426", i8, %"class.blink::Member.40", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.428", %"class.blink::HeapVector.430", %"class.std::__1::unique_ptr.438", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.444", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.457", %"class.WTF::Vector.459", i8, i8, %"class.std::__1::unique_ptr.464", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.470", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.478", i8, i32, %"class.blink::Member.480", %"class.blink::Member.482", %"class.blink::Member.484", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.486", %"class.WTF::HashMap.488", %"class.blink::Member.493", %"class.blink::Member.495", %"class.blink::Member.497", %"class.blink::Member.499", %"class.blink::Member.27", %"class.blink::Member.27", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.501", i8, i32, %"class.blink::Member.508", %"class.blink::Member.510", i32, %"class.blink::Member.512", %"class.blink::Member.514", %"class.blink::Member.516", %"class.std::__1::unique_ptr.518", i64, %"class.std::__1::unique_ptr.524", i32, i32, %"class.blink::Member.530", %"class.blink::Member.532", %"class.blink::Member.534", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.536", %"class.WTF::Vector.538", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.543", %"class.blink::Member.550", %"class.std::__1::unique_ptr.552", %"class.blink::Member.558", i8, i8, %"class.WTF::String", %"class.blink::Member.560", i8, [7 x i8], %"class.blink::HeapHashMap.562", %"class.blink::HeapObserverSet", %"class.blink::Member.576", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.578", i32, i8, i8, %"class.blink::WeakMember.580", %"class.blink::Member.581" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.120" }
%"class.blink::HeapHashMap.120" = type { %"class.WTF::HashMap.123" }
%"class.WTF::HashMap.123" = type { %"class.WTF::HashTable.124" }
%"class.WTF::HashTable.124" = type <{ %"struct.WTF::KeyValuePair.126"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.126" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.127" = type { %"class.WTF::VectorBuffer.128" }
%"class.WTF::VectorBuffer.128" = type { %"class.WTF::VectorBufferBase.129" }
%"class.WTF::VectorBufferBase.129" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.130 }
%class.scoped_refptr.130 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.131" }
%"struct.std::__1::atomic.131" = type { %"struct.std::__1::__atomic_base.132" }
%"struct.std::__1::__atomic_base.132" = type { %"struct.std::__1::__atomic_base.133" }
%"struct.std::__1::__atomic_base.133" = type { %"struct.std::__1::__cxx_atomic_impl.134" }
%"struct.std::__1::__cxx_atomic_impl.134" = type { %"struct.std::__1::__cxx_atomic_base_impl.135" }
%"struct.std::__1::__cxx_atomic_base_impl.135" = type { i32 }
%"class.blink::Member.138" = type { %"class.blink::MemberBase.139" }
%"class.blink::MemberBase.139" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.140" = type { %"class.blink::MemberBase.141" }
%"class.blink::MemberBase.141" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.613", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.654", i32, i8, [3 x i8], %"class.blink::HeapVector.656", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.664", %"class.blink::Member.666", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.675", %"class.blink::Member.681", %"class.blink::Member.683", i8, [7 x i8] }>
%"class.blink::Supplementable.613" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.614" }
%"class.blink::HeapHashMap.614" = type { %"class.WTF::HashMap.617" }
%"class.WTF::HashMap.617" = type { %"class.WTF::HashTable.618" }
%"class.WTF::HashTable.618" = type <{ %"struct.WTF::KeyValuePair.620"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.620" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.629" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.621" }
%"class.blink::HeapObserverSet.621" = type { i32, [4 x i8], %"class.blink::HeapHashSet.622" }
%"class.blink::HeapHashSet.622" = type { %"class.WTF::HashSet.625" }
%"class.WTF::HashSet.625" = type { %"class.WTF::HashTable.626" }
%"class.WTF::HashTable.626" = type <{ %"class.blink::WeakMember.628"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.628" = type opaque
%"class.blink::Supplementable.629" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.630" }
%"class.blink::HeapHashMap.630" = type { %"class.WTF::HashMap.633" }
%"class.WTF::HashMap.633" = type { %"class.WTF::HashTable.634" }
%"class.WTF::HashTable.634" = type <{ %"struct.WTF::KeyValuePair.636"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.636" = type { i8*, %"class.blink::Member.707" }
%"class.blink::Member.707" = type { %"class.blink::MemberBase.708" }
%"class.blink::MemberBase.708" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.709" }
%"class.blink::Member.709" = type { %"class.blink::MemberBase.710" }
%"class.blink::MemberBase.710" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.637, %"class.std::__1::unique_ptr.638", %"class.std::__1::unique_ptr.638", %"class.std::__1::unique_ptr.644", %"class.std::__1::unique_ptr.644", %"class.blink::Member.140", i32, [4 x i8], %"class.WTF::HashSet.650", i32, i32 }
%class.scoped_refptr.637 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.638" = type { %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.644" = type { %"class.std::__1::__compressed_pair.645" }
%"class.std::__1::__compressed_pair.645" = type { %"struct.std::__1::__compressed_pair_elem.646" }
%"struct.std::__1::__compressed_pair_elem.646" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.650" = type { %"class.WTF::HashTable.651" }
%"class.WTF::HashTable.651" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.654" = type { %"class.blink::MemberBase.655" }
%"class.blink::MemberBase.655" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.656" = type { %"class.WTF::Vector.659" }
%"class.WTF::Vector.659" = type { %"class.WTF::VectorBuffer.660" }
%"class.WTF::VectorBuffer.660" = type { %"class.WTF::VectorBufferBase.661" }
%"class.WTF::VectorBufferBase.661" = type { %"class.blink::Member.662"*, i32, i32 }
%"class.blink::Member.662" = type opaque
%"class.blink::Member.664" = type { %"class.blink::MemberBase.665" }
%"class.blink::MemberBase.665" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.666" = type { %"class.blink::MemberBase.667" }
%"class.blink::MemberBase.667" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.668", i32, i32 }
%"class.blink::HeapHashMap.668" = type { %"class.WTF::HashMap.671" }
%"class.WTF::HashMap.671" = type { %"class.WTF::HashTable.672" }
%"class.WTF::HashTable.672" = type <{ %"struct.WTF::KeyValuePair.674"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.674" = type opaque
%"class.std::__1::unique_ptr.675" = type { %"class.std::__1::__compressed_pair.676" }
%"class.std::__1::__compressed_pair.676" = type { %"struct.std::__1::__compressed_pair_elem.677" }
%"struct.std::__1::__compressed_pair_elem.677" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.681" = type { %"class.blink::MemberBase.682" }
%"class.blink::MemberBase.682" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.683" = type { %"class.blink::MemberBase.684" }
%"class.blink::MemberBase.684" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.142" = type { %"class.blink::MemberBase.143" }
%"class.blink::MemberBase.143" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.144" = type { %"class.blink::MemberBase.145" }
%"class.blink::MemberBase.145" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.146" = type { %"class.blink::MemberBase.147" }
%"class.blink::MemberBase.147" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.148" = type { %"class.blink::MemberBase.149" }
%"class.blink::MemberBase.149" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.150" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.blink::KURL"* }
%"class.blink::Member.162" = type { %"class.blink::MemberBase.163" }
%"class.blink::MemberBase.163" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.164" = type { %"class.blink::MemberBase.165" }
%"class.blink::MemberBase.165" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.166 }
%class.scoped_refptr.166 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.167" = type { %"class.WTF::VectorBuffer.168" }
%"class.WTF::VectorBuffer.168" = type { %"class.WTF::VectorBufferBase.169" }
%"class.WTF::VectorBufferBase.169" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.170 }
%class.scoped_refptr.170 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.171", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.171" = type { %"class.base::RefCounted.172" }
%"class.base::RefCounted.172" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.175" }
%"class.blink::HeapHashMap.175" = type { %"class.WTF::HashMap.178" }
%"class.WTF::HashMap.178" = type { %"class.WTF::HashTable.179" }
%"class.WTF::HashTable.179" = type <{ %"struct.WTF::KeyValuePair.181"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.181" = type { %"class.blink::WeakMember.182", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.182" = type { %"class.blink::MemberBase.183" }
%"class.blink::MemberBase.183" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.184", i32, [4 x i8], %"class.std::__1::unique_ptr.320", %"class.std::__1::unique_ptr.320", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.330", %"class.std::__1::unique_ptr.336", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.348", %"class.std::__1::unique_ptr.354", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.361", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.193", %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.205", %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.217", %"class.std::__1::unique_ptr.228", %"class.std::__1::unique_ptr.235", %"class.std::__1::unique_ptr.235", %"class.std::__1::unique_ptr.242", %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.256", %"class.std::__1::unique_ptr.256", %"class.std::__1::unique_ptr.263", %"class.std::__1::unique_ptr.270", %"class.std::__1::unique_ptr.277", %"class.std::__1::unique_ptr.300", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.220" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.220" = type { %"struct.std::__1::__atomic_base.221" }
%"struct.std::__1::__atomic_base.221" = type { %"struct.std::__1::__atomic_base.222" }
%"struct.std::__1::__atomic_base.222" = type { %"struct.std::__1::__cxx_atomic_impl.223" }
%"struct.std::__1::__cxx_atomic_impl.223" = type { %"struct.std::__1::__cxx_atomic_base_impl.224" }
%"struct.std::__1::__cxx_atomic_base_impl.224" = type { i64 }
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.blink::Worklist.231"* }
%"class.blink::Worklist.231" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.220" }
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.blink::Worklist.238"* }
%"class.blink::Worklist.238" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.220" }
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.blink::Worklist.245"* }
%"class.blink::Worklist.245" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.220" }
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.blink::Worklist.252"* }
%"class.blink::Worklist.252" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.220" }
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"class.blink::Worklist.259"* }
%"class.blink::Worklist.259" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.220" }
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.blink::Worklist.266"* }
%"class.blink::Worklist.266" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.220" }
%"class.std::__1::unique_ptr.270" = type { %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"class.blink::Worklist.273"* }
%"class.blink::Worklist.273" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.220" }
%"class.std::__1::unique_ptr.277" = type { %"class.std::__1::__compressed_pair.278" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.280", %"class.std::__1::__compressed_pair.287", %"class.std::__1::__compressed_pair.292", %"class.std::__1::__compressed_pair.294", [4 x i8] }>
%"class.std::__1::unique_ptr.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282", %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { i64 }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { float }
%"class.std::__1::unique_ptr.300" = type { %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.303", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.303" = type { %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.312" }
%"class.WTF::Vector.312" = type { %"class.WTF::VectorBuffer.313" }
%"class.WTF::VectorBuffer.313" = type { %"class.WTF::VectorBufferBase.314" }
%"class.WTF::VectorBufferBase.314" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.328" }
%"class.WTF::VectorBuffer.328" = type { %"class.WTF::VectorBufferBase.329" }
%"class.WTF::VectorBufferBase.329" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.336" = type { %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.342" }
%"class.std::__1::unique_ptr.342" = type { %"class.std::__1::__compressed_pair.343" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.231"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.238"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.245"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.252"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.259"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.608" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.348" = type { %"class.std::__1::__compressed_pair.349" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.354" = type { %"class.std::__1::__compressed_pair.355" }
%"class.std::__1::__compressed_pair.355" = type { %"struct.std::__1::__compressed_pair_elem.356" }
%"struct.std::__1::__compressed_pair_elem.356" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.360 }
%class.scoped_refptr.360 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.361" = type { %"struct.std::__1::__atomic_base.362" }
%"struct.std::__1::__atomic_base.362" = type { %"struct.std::__1::__cxx_atomic_impl.363" }
%"struct.std::__1::__cxx_atomic_impl.363" = type { %"struct.std::__1::__cxx_atomic_base_impl.364" }
%"struct.std::__1::__cxx_atomic_base_impl.364" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::Member.377" = type { %"class.blink::MemberBase.378" }
%"class.blink::MemberBase.378" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.27", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member", %"class.blink::Member", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.379" }
%"class.blink::HeapHashMap.379" = type { %"class.WTF::HashMap.382" }
%"class.WTF::HashMap.382" = type { %"class.WTF::HashTable.383" }
%"class.WTF::HashTable.383" = type <{ %"struct.WTF::KeyValuePair.385"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.385" = type opaque
%"class.blink::Member.386" = type { %"class.blink::MemberBase.387" }
%"class.blink::MemberBase.387" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.388" = type { %"class.WTF::HashSet.391" }
%"class.WTF::HashSet.391" = type { %"class.WTF::HashTable.392" }
%"class.WTF::HashTable.392" = type <{ %"class.blink::WeakMember.394"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.394" = type opaque
%"class.blink::HeapHashSet.395" = type { %"class.WTF::HashSet.398" }
%"class.WTF::HashSet.398" = type { %"class.WTF::HashTable.399" }
%"class.WTF::HashTable.399" = type <{ %"class.blink::WeakMember.401"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.401" = type opaque
%"class.blink::Member.402" = type { %"class.blink::MemberBase.403" }
%"class.blink::MemberBase.403" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.404" = type { %"class.blink::MemberBase.405" }
%"class.blink::MemberBase.405" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.406" = type { %"class.blink::MemberBase.407" }
%"class.blink::MemberBase.407" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.0", %"class.blink::HeapVector.80" }
%"class.blink::Member.408" = type { %"class.blink::MemberBase.409" }
%"class.blink::MemberBase.409" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.410" = type { %"class.blink::MemberBase.411" }
%"class.blink::MemberBase.411" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.412" = type { %"class.WTF::HashMap.415" }
%"class.WTF::HashMap.415" = type { %"class.WTF::HashTable.416" }
%"class.WTF::HashTable.416" = type <{ %"struct.WTF::KeyValuePair.418"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.418" = type opaque
%"class.WTF::Vector.419" = type { %"class.WTF::VectorBuffer.420" }
%"class.WTF::VectorBuffer.420" = type { %"class.WTF::VectorBufferBase.421" }
%"class.WTF::VectorBufferBase.421" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.424" = type { %"class.blink::MemberBase.425" }
%"class.blink::MemberBase.425" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.426" = type { %"class.blink::MemberBase.427" }
%"class.blink::MemberBase.427" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.428" = type { %"class.blink::MemberBase.429" }
%"class.blink::MemberBase.429" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.430" = type { %"class.WTF::Vector.433" }
%"class.WTF::Vector.433" = type { %"class.WTF::VectorBuffer.434" }
%"class.WTF::VectorBuffer.434" = type { %"class.WTF::VectorBufferBase.435" }
%"class.WTF::VectorBufferBase.435" = type { %"class.blink::Member.436"*, i32, i32 }
%"class.blink::Member.436" = type opaque
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.444" = type { %"class.WTF::HashSet.447" }
%"class.WTF::HashSet.447" = type { %"class.WTF::HashTable.448" }
%"class.WTF::HashTable.448" = type <{ %"class.blink::WeakMember.450"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.450" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.451", i32, [4 x i8] }>
%"class.WTF::Vector.451" = type { %"class.WTF::VectorBuffer.452" }
%"class.WTF::VectorBuffer.452" = type { %"class.WTF::VectorBufferBase.453" }
%"class.WTF::VectorBufferBase.453" = type { %"struct.std::__1::pair.454"*, i32, i32 }
%"struct.std::__1::pair.454" = type opaque
%"class.blink::Member.457" = type { %"class.blink::MemberBase.458" }
%"class.blink::MemberBase.458" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.470" = type { %"class.WTF::Vector.473" }
%"class.WTF::Vector.473" = type { %"class.WTF::VectorBuffer.474" }
%"class.WTF::VectorBuffer.474" = type { %"class.WTF::VectorBufferBase.475" }
%"class.WTF::VectorBufferBase.475" = type { %"class.blink::Member.476"*, i32, i32 }
%"class.blink::Member.476" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.27" }
%"class.blink::Member.478" = type { %"class.blink::MemberBase.479" }
%"class.blink::MemberBase.479" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.480" = type { %"class.blink::MemberBase.481" }
%"class.blink::MemberBase.481" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.482" = type { %"class.blink::MemberBase.483" }
%"class.blink::MemberBase.483" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.484" = type { %"class.blink::MemberBase.485" }
%"class.blink::MemberBase.485" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.486" = type { %"class.blink::MemberBase.487" }
%"class.blink::MemberBase.487" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.488" = type { %"class.WTF::HashTable.489" }
%"class.WTF::HashTable.489" = type <{ %"struct.WTF::KeyValuePair.492"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.492" = type opaque
%"class.blink::Member.493" = type { %"class.blink::MemberBase.494" }
%"class.blink::MemberBase.494" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.495" = type { %"class.blink::MemberBase.496" }
%"class.blink::MemberBase.496" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.497" = type { %"class.blink::MemberBase.498" }
%"class.blink::MemberBase.498" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.499" = type { %"class.blink::MemberBase.500" }
%"class.blink::MemberBase.500" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.376", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.367, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.367 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.368" }>
%"class.base::RefCountedThreadSafe.368" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.369 }
%class.scoped_refptr.369 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.370", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.370" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.371" }
%"struct.std::__1::atomic.371" = type { %"struct.std::__1::__atomic_base.372" }
%"struct.std::__1::__atomic_base.372" = type { %"struct.std::__1::__atomic_base.373" }
%"struct.std::__1::__atomic_base.373" = type { %"struct.std::__1::__cxx_atomic_impl.374" }
%"struct.std::__1::__cxx_atomic_impl.374" = type { %"struct.std::__1::__cxx_atomic_base_impl.375" }
%"struct.std::__1::__cxx_atomic_base_impl.375" = type { i8 }
%"class.blink::WeakMember.376" = type { %"class.blink::MemberBase.28" }
%"class.blink::HeapHashSet.501" = type { %"class.WTF::HashSet.504" }
%"class.WTF::HashSet.504" = type { %"class.WTF::HashTable.505" }
%"class.WTF::HashTable.505" = type <{ %"class.blink::Member.507"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.507" = type opaque
%"class.blink::Member.508" = type { %"class.blink::MemberBase.509" }
%"class.blink::MemberBase.509" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.510" = type { %"class.blink::MemberBase.511" }
%"class.blink::MemberBase.511" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.512" = type { %"class.blink::MemberBase.513" }
%"class.blink::MemberBase.513" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.514" = type { %"class.blink::MemberBase.515" }
%"class.blink::MemberBase.515" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.516" = type { %"class.blink::MemberBase.517" }
%"class.blink::MemberBase.517" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.518" = type { %"class.std::__1::__compressed_pair.519" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.524" = type { %"class.std::__1::__compressed_pair.525" }
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.526" }
%"struct.std::__1::__compressed_pair_elem.526" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.530" = type { %"class.blink::MemberBase.531" }
%"class.blink::MemberBase.531" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.532" = type { %"class.blink::MemberBase.533" }
%"class.blink::MemberBase.533" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.534" = type { %"class.blink::MemberBase.535" }
%"class.blink::MemberBase.535" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.536" = type { %"class.blink::MemberBase.537" }
%"class.blink::MemberBase.537" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.538" = type { %"class.WTF::VectorBuffer.539" }
%"class.WTF::VectorBuffer.539" = type { %"class.WTF::VectorBufferBase.540" }
%"class.WTF::VectorBufferBase.540" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.543" = type { %"class.WTF::HashMap.546" }
%"class.WTF::HashMap.546" = type { %"class.WTF::HashTable.547" }
%"class.WTF::HashTable.547" = type <{ %"struct.WTF::KeyValuePair.549"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.549" = type opaque
%"class.blink::Member.550" = type { %"class.blink::MemberBase.551" }
%"class.blink::MemberBase.551" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.552" = type { %"class.std::__1::__compressed_pair.553" }
%"class.std::__1::__compressed_pair.553" = type { %"struct.std::__1::__compressed_pair_elem.554" }
%"struct.std::__1::__compressed_pair_elem.554" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.558" = type { %"class.blink::MemberBase.559" }
%"class.blink::MemberBase.559" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.560" = type { %"class.blink::MemberBase.561" }
%"class.blink::MemberBase.561" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.562" = type { %"class.WTF::HashMap.565" }
%"class.WTF::HashMap.565" = type { %"class.WTF::HashTable.566" }
%"class.WTF::HashTable.566" = type <{ %"struct.WTF::KeyValuePair.568"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.568" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.569" }
%"class.blink::HeapHashSet.569" = type { %"class.WTF::HashSet.572" }
%"class.WTF::HashSet.572" = type { %"class.WTF::HashTable.573" }
%"class.WTF::HashTable.573" = type <{ %"class.blink::WeakMember.575"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.575" = type opaque
%"class.blink::Member.576" = type { %"class.blink::MemberBase.577" }
%"class.blink::MemberBase.577" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.578" = type { %"class.blink::MemberBase.579" }
%"class.blink::MemberBase.579" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.27", %"class.blink::HeapHashSet.599", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.606", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.599" = type { %"class.WTF::HashSet.602" }
%"class.WTF::HashSet.602" = type { %"class.WTF::HashTable.603" }
%"class.WTF::HashTable.603" = type <{ %"class.blink::Member.605"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.605" = type opaque
%"class.blink::HeapTaskRunnerTimer.606" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.607", { i64, i64 } }
%"class.blink::WeakMember.607" = type { %"class.blink::MemberBase.579" }
%"class.blink::WeakMember.580" = type { %"class.blink::MemberBase" }
%"class.blink::Member.581" = type { %"class.blink::MemberBase.582" }
%"class.blink::MemberBase.582" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::EditingStyle" = type <{ %"class.blink::Member.687", %"class.blink::Member", i8, [3 x i8], float, i8, [7 x i8] }>
%"class.blink::Member.687" = type { %"class.blink::MemberBase.688" }
%"class.blink::MemberBase.688" = type { %"class.blink::MutableCSSPropertyValueSet"* }
%"class.blink::MutableCSSPropertyValueSet" = type <{ %"class.blink::CSSPropertyValueSet", [4 x i8], %"class.blink::Member.689", %"class.blink::HeapVector.691", i8, [7 x i8] }>
%"class.blink::Member.689" = type { %"class.blink::MemberBase.690" }
%"class.blink::MemberBase.690" = type { %"class.blink::PropertySetCSSStyleDeclaration"* }
%"class.blink::PropertySetCSSStyleDeclaration" = type { %"class.blink::AbstractPropertySetCSSStyleDeclaration", %"class.blink::Member.687" }
%"class.blink::AbstractPropertySetCSSStyleDeclaration" = type { %"class.blink::CSSStyleDeclaration" }
%"class.blink::CSSStyleDeclaration" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextClient" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.703" }
%"class.blink::WeakMember.703" = type { %"class.blink::MemberBase.141" }
%"class.blink::HeapVector.691" = type { %"class.WTF::Vector.694" }
%"class.WTF::Vector.694" = type { %"class.WTF::VectorBuffer.695" }
%"class.WTF::VectorBuffer.695" = type { %"class.WTF::VectorBufferBase.696", [96 x i8] }
%"class.WTF::VectorBufferBase.696" = type { %"class.blink::CSSPropertyValue"*, i32, i32 }
%"class.blink::CSSPropertyValue" = type { %"struct.blink::CSSPropertyValueMetadata", %"class.blink::Member.697" }
%"struct.blink::CSSPropertyValueMetadata" = type <{ %"class.WTF::AtomicString", i16, [6 x i8] }>
%"class.blink::Member.697" = type { %"class.blink::MemberBase.698" }
%"class.blink::MemberBase.698" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member", i32, i32 }
%"class.blink::EphemeralRangeTemplate" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate" }
%"class.blink::TextIteratorBehavior" = type { %union.anon.704 }
%union.anon.704 = type { i32 }
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.51", %"class.WTF::Vector.711" }
%"class.WTF::Vector.711" = type { %"class.WTF::VectorBuffer.712" }
%"class.WTF::VectorBuffer.712" = type { %"class.WTF::VectorBufferBase.713", [64 x i8] }
%"class.WTF::VectorBufferBase.713" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.WTF::Vector.587" = type { %"class.WTF::VectorBuffer.588" }
%"class.WTF::VectorBuffer.588" = type { %"class.WTF::VectorBufferBase.589", [16 x i8] }
%"class.WTF::VectorBufferBase.589" = type { i16*, i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.717" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.718" }
%"struct.std::__1::__compressed_pair_elem.718" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.719 }
%union.anon.719 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZN3WTF13StringBuilder6AppendERKS0_ = comdat any

$_ZN3WTF13StringBuilder6AppendEh = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_ = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS1_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_ = comdat any

@.str = private unnamed_addr constant [14 x i8] c"<span style=\22\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"\22>\00", align 1
@_ZN5blink10html_names10kSelectTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@.str.2 = private unnamed_addr constant [8 x i8] c"</span>\00", align 1
@_ZN5blink10html_names10kStyleAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.3 = private unnamed_addr constant [9 x i8] c" style=\22\00", align 1
@.str.4 = private unnamed_addr constant [13 x i8] c"<div style=\22\00", align 1
@.str.5 = private unnamed_addr constant [7 x i8] c"</div>\00", align 1
@.str.6 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZZN5blink23StyledMarkupAccumulator24AppendInterchangeNewlineEvE28s_interchange_newline_string = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink23StyledMarkupAccumulator24AppendInterchangeNewlineEvE28s_interchange_newline_string = internal global i64 0, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.7 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.8 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.10 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.11 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@.str.12 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.13 = private unnamed_addr constant [39 x i8] c"<br class=\22Apple-interchange-newline\22>\00", align 1

@_ZN5blink23StyledMarkupAccumulatorC1ERKNS_10TextOffsetES3_PNS_8DocumentERKNS_19CreateMarkupOptionsE = hidden unnamed_addr alias void (%"class.blink::StyledMarkupAccumulator"*, %"class.blink::TextOffset"*, %"class.blink::TextOffset"*, %"class.blink::Document"*, %"class.blink::CreateMarkupOptions"*), void (%"class.blink::StyledMarkupAccumulator"*, %"class.blink::TextOffset"*, %"class.blink::TextOffset"*, %"class.blink::Document"*, %"class.blink::CreateMarkupOptions"*)* @_ZN5blink23StyledMarkupAccumulatorC2ERKNS_10TextOffsetES3_PNS_8DocumentERKNS_19CreateMarkupOptionsE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23StyledMarkupAccumulatorC2ERKNS_10TextOffsetES3_PNS_8DocumentERKNS_19CreateMarkupOptionsE(%"class.blink::StyledMarkupAccumulator"*, %"class.blink::TextOffset"* dereferenceable(16), %"class.blink::TextOffset"* dereferenceable(16), %"class.blink::Document"*, %"class.blink::CreateMarkupOptions"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.blink::CreateMarkupOptions", %"class.blink::CreateMarkupOptions"* %4, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq %"class.blink::Document"* %3, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %3, i64 0, i32 107
  %12 = load i8, i8* %11, align 8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = zext i8 %14 to i32
  br label %16

16:                                               ; preds = %5, %10
  %17 = phi i32 [ 1, %5 ], [ %15, %10 ]
  tail call void @_ZN5blink15MarkupFormatterC1ENS_12AbsoluteURLsENS_17SerializationTypeE(%"class.blink::MarkupFormatter"* %6, i32 %8, i32 %17) #9
  %18 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 1
  tail call void @_ZN5blink10TextOffsetC1ERKS0_(%"class.blink::TextOffset"* %18, %"class.blink::TextOffset"* dereferenceable(16) %1) #9
  %19 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 2
  tail call void @_ZN5blink10TextOffsetC1ERKS0_(%"class.blink::TextOffset"* %19, %"class.blink::TextOffset"* dereferenceable(16) %2) #9
  %20 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 3
  store %"class.blink::Document"* %3, %"class.blink::Document"** %20, align 8
  %21 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 4
  %22 = bitcast %"class.blink::CreateMarkupOptions"* %21 to i8*
  %23 = bitcast %"class.blink::CreateMarkupOptions"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 16, i1 false)
  %24 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %24, align 8
  %25 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 5, i32 1
  %26 = bitcast %union.anon* %25 to i8*
  store i8 0, i8* %26, align 8
  %27 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 5, i32 2
  store i32 0, i32* %27, align 8
  %28 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 5, i32 3
  store i8 1, i8* %28, align 4
  %29 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 5, i32 4
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 6
  %31 = bitcast %"class.WTF::Vector.592"* %30 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #9
  ret void
}

declare void @_ZN5blink15MarkupFormatterC1ENS_12AbsoluteURLsENS_17SerializationTypeE(%"class.blink::MarkupFormatter"*, i32, i32) unnamed_addr #1

declare void @_ZN5blink10TextOffsetC1ERKS0_(%"class.blink::TextOffset"*, %"class.blink::TextOffset"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23StyledMarkupAccumulator12AppendEndTagERKNS_7ElementE(%"class.blink::StyledMarkupAccumulator"*, %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 5
  %4 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 0
  tail call void @_ZN5blink15MarkupFormatter15AppendEndMarkupERN3WTF13StringBuilderERKNS_7ElementE(%"class.blink::MarkupFormatter"* %4, %"class.WTF::StringBuilder"* dereferenceable(48) %3, %"class.blink::Element"* dereferenceable(104) %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23StyledMarkupAccumulator15AppendEndMarkupERN3WTF13StringBuilderERKNS_7ElementE(%"class.blink::StyledMarkupAccumulator"*, %"class.WTF::StringBuilder"* dereferenceable(48), %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 0
  tail call void @_ZN5blink15MarkupFormatter15AppendEndMarkupERN3WTF13StringBuilderERKNS_7ElementE(%"class.blink::MarkupFormatter"* %4, %"class.WTF::StringBuilder"* dereferenceable(48) %1, %"class.blink::Element"* dereferenceable(104) %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23StyledMarkupAccumulator17AppendStartMarkupERNS_4NodeE(%"class.blink::StyledMarkupAccumulator"*, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 5
  tail call void @_ZN5blink15MarkupFormatter17AppendStartMarkupERN3WTF13StringBuilderERKNS_4NodeE(%"class.blink::MarkupFormatter"* %3, %"class.WTF::StringBuilder"* dereferenceable(48) %4, %"class.blink::Node"* dereferenceable(64) %1) #9
  ret void
}

declare void @_ZN5blink15MarkupFormatter17AppendStartMarkupERN3WTF13StringBuilderERKNS_4NodeE(%"class.blink::MarkupFormatter"*, %"class.WTF::StringBuilder"* dereferenceable(48), %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

declare void @_ZN5blink15MarkupFormatter15AppendEndMarkupERN3WTF13StringBuilderERKNS_7ElementE(%"class.blink::MarkupFormatter"*, %"class.WTF::StringBuilder"* dereferenceable(48), %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23StyledMarkupAccumulator10AppendTextERNS_4TextE(%"class.blink::StyledMarkupAccumulator"*, %"class.blink::Text"* dereferenceable(88)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %1, i64 0, i32 0, i32 1
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %1, i64 0, i32 0, i32 2
  %9 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %8) #9
  br label %12

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %1, i64 0, i32 0, i32 3
  br label %12

12:                                               ; preds = %7, %10
  %13 = phi %"class.WTF::String"* [ %9, %7 ], [ %11, %10 ]
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %12, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %12 ]
  %22 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 2
  %23 = tail call zeroext i1 @_ZNK5blink10TextOffset9IsNotNullEv(%"class.blink::TextOffset"* %22) #9
  br i1 %23, label %24, label %31

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.blink::TextOffset", %"class.blink::TextOffset"* %22, i64 0, i32 0
  %26 = load %"class.blink::Text"*, %"class.blink::Text"** %25, align 8
  %27 = icmp eq %"class.blink::Text"* %26, %1
  br i1 %27, label %28, label %31

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 2, i32 1
  %30 = load i32, i32* %29, align 8
  br label %31

31:                                               ; preds = %24, %28, %20
  %32 = phi i32 [ %30, %28 ], [ %21, %24 ], [ %21, %20 ]
  %33 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 1
  %34 = tail call zeroext i1 @_ZNK5blink10TextOffset9IsNotNullEv(%"class.blink::TextOffset"* %33) #9
  br i1 %34, label %35, label %44

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::TextOffset", %"class.blink::TextOffset"* %33, i64 0, i32 0
  %37 = load %"class.blink::Text"*, %"class.blink::Text"** %36, align 8
  %38 = icmp eq %"class.blink::Text"* %37, %1
  br i1 %38, label %39, label %44

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 1, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = sub i32 %32, %41
  %43 = zext i32 %41 to i64
  br label %44

44:                                               ; preds = %35, %39, %31
  %45 = phi i32 [ %42, %39 ], [ %32, %35 ], [ %32, %31 ]
  %46 = phi i64 [ %43, %39 ], [ 0, %35 ], [ 0, %31 ]
  %47 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 5
  %48 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #9
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  %51 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  br i1 %50, label %68, label %52

52:                                               ; preds = %44
  store i32 %45, i32* %51, align 8
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"** %53, align 8
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 1
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 1
  br i1 %57, label %63, label %59

59:                                               ; preds = %52
  %60 = bitcast %"class.WTF::StringImpl"* %58 to i8*
  %61 = getelementptr inbounds i8, i8* %60, i64 %46
  %62 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* %61, i8** %62, align 8
  br label %72

63:                                               ; preds = %52
  %64 = bitcast %"class.WTF::StringImpl"* %58 to i16*
  %65 = getelementptr inbounds i16, i16* %64, i64 %46
  %66 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %67 = bitcast i8** %66 to i16**
  store i16* %65, i16** %67, align 8
  br label %72

68:                                               ; preds = %44
  store i32 0, i32* %51, align 8
  %69 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %69, align 8
  %70 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %71 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %70, i64* %71, align 8
  br label %72

72:                                               ; preds = %59, %63, %68
  %73 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 0
  %74 = tail call i32 @_ZNK5blink15MarkupFormatter17EntityMaskForTextERKNS_4TextE(%"class.blink::MarkupFormatter"* %73, %"class.blink::Text"* dereferenceable(88) %1) #9
  call void @_ZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskE(%"class.WTF::StringBuilder"* dereferenceable(48) %47, %"class.WTF::StringView"* nonnull dereferenceable(24) %3, i32 %74) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZNK5blink10TextOffset9IsNotNullEv(%"class.blink::TextOffset"*) local_unnamed_addr #1

declare void @_ZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskE(%"class.WTF::StringBuilder"* dereferenceable(48), %"class.WTF::StringView"* dereferenceable(24), i32) local_unnamed_addr #1

declare i32 @_ZNK5blink15MarkupFormatter17EntityMaskForTextERKNS_4TextE(%"class.blink::MarkupFormatter"*, %"class.blink::Text"* dereferenceable(88)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23StyledMarkupAccumulator25AppendTextWithInlineStyleERNS_4TextEPNS_12EditingStyleE(%"class.blink::StyledMarkupAccumulator"*, %"class.blink::Text"* dereferenceable(88), %"class.blink::EditingStyle"* readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.blink::PositionTemplate", align 8
  %8 = alloca %"class.WTF::StringBuilder", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = icmp ne %"class.blink::EditingStyle"* %2, null
  br i1 %13, label %14, label %58

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 5
  %16 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #9
  %17 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %18 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8** %19, align 8
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 13, i32* %20, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %15, %"class.WTF::StringView"* nonnull dereferenceable(24) %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #9
  %21 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  %22 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %2, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %23, i64 0, i32 0
  %25 = call %"class.WTF::StringImpl"* @_ZNK5blink19CSSPropertyValueSet6AsTextEv(%"class.blink::CSSPropertyValueSet"* %24) #9
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  %27 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 3
  %28 = load %"class.blink::Document"*, %"class.blink::Document"** %27, align 8
  %29 = icmp eq %"class.blink::Document"* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %14
  %31 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %28, i64 0, i32 107
  %32 = load i8, i8* %31, align 8
  %33 = and i8 %32, 1
  %34 = icmp ne i8 %33, 0
  br label %35

35:                                               ; preds = %14, %30
  %36 = phi i1 [ false, %14 ], [ %34, %30 ]
  call void @_ZN5blink15MarkupFormatter20AppendAttributeValueERN3WTF13StringBuilderERKNS1_6StringEb(%"class.WTF::StringBuilder"* dereferenceable(48) %15, %"class.WTF::String"* nonnull dereferenceable(8) %5, i1 zeroext %36) #9
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #9
  br label %52

52:                                               ; preds = %35, %48, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  %53 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #9
  %54 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %55 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8** %56, align 8
  %57 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 2, i32* %57, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %15, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #9
  br label %58

58:                                               ; preds = %52, %3
  %59 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 4, i32 2
  %60 = load i8, i8* %59, align 4, !range !2
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %58
  call void @_ZN5blink23StyledMarkupAccumulator10AppendTextERNS_4TextE(%"class.blink::StyledMarkupAccumulator"* %0, %"class.blink::Text"* dereferenceable(88) %1)
  br label %186

63:                                               ; preds = %58
  %64 = bitcast %"class.blink::PositionTemplate"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %64) #9
  %65 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %1, i64 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE19FirstPositionInNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %7, %"class.blink::Node"* dereferenceable(64) %65) #9
  %66 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kSelectTagE to %"class.blink::QualifiedName"**), align 8
  %67 = call %"class.blink::Element"* @_ZN5blink23EnclosingElementWithTagERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_13QualifiedNameE(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %7, %"class.blink::QualifiedName"* dereferenceable(8) %66) #9
  %68 = icmp eq %"class.blink::Element"* %67, null
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %64) #9
  br i1 %68, label %69, label %71

69:                                               ; preds = %63
  %70 = call %"class.WTF::StringImpl"* @_ZN5blink23StyledMarkupAccumulator12RenderedTextERNS_4TextE(%"class.blink::StyledMarkupAccumulator"* %0, %"class.blink::Text"* dereferenceable(88) %1)
  br label %73

71:                                               ; preds = %63
  %72 = call %"class.WTF::StringImpl"* @_ZN5blink23StyledMarkupAccumulator19StringValueForRangeERKNS_4TextE(%"class.blink::StyledMarkupAccumulator"* %0, %"class.blink::Text"* dereferenceable(88) %1)
  br label %73

73:                                               ; preds = %71, %69
  %74 = phi %"class.WTF::StringImpl"* [ %72, %71 ], [ %70, %69 ]
  %75 = bitcast %"class.WTF::StringBuilder"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %75) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 -86, i64 48, i1 false)
  %76 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %76, align 8
  %77 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %8, i64 0, i32 1
  %78 = bitcast %union.anon* %77 to i8*
  store i8 0, i8* %78, align 8
  %79 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %8, i64 0, i32 2
  store i32 0, i32* %79, align 8
  %80 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %8, i64 0, i32 3
  store i8 1, i8* %80, align 4
  %81 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %8, i64 0, i32 4
  store i8 0, i8* %81, align 1
  %82 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #9
  %83 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %83, label %84, label %88

84:                                               ; preds = %73
  %85 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* null, i8** %85, align 8
  %86 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %87 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %86, i64* %87, align 8
  br label %95

88:                                               ; preds = %73
  %89 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  store %"class.WTF::StringImpl"* %74, %"class.WTF::StringImpl"** %89, align 8
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 1
  %91 = load i32, i32* %90, align 4
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 1
  %93 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %94 = bitcast i8** %93 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %92, %"class.WTF::StringImpl"** %94, align 8
  br label %95

95:                                               ; preds = %84, %88
  %96 = phi i32 [ %91, %88 ], [ 0, %84 ]
  %97 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %96, i32* %97, align 8
  call void @_ZN5blink15MarkupFormatter33AppendCharactersReplacingEntitiesERN3WTF13StringBuilderERKNS1_10StringViewENS_10EntityMaskE(%"class.WTF::StringBuilder"* nonnull dereferenceable(48) %8, %"class.WTF::StringView"* nonnull dereferenceable(24) %9, i32 7) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #9
  %98 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 4, i32 4
  %99 = load i8, i8* %98, align 2, !range !2
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %103, label %101

101:                                              ; preds = %95
  %102 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %8) #9
  br label %124

103:                                              ; preds = %95
  %104 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #9
  %105 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %8) #9
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %105, %"class.WTF::StringImpl"** %106, align 8
  %107 = call %"class.WTF::StringImpl"* @_ZN5blink34ConvertHTMLTextToInterchangeFormatERKN3WTF6StringERKNS_4TextE(%"class.WTF::String"* nonnull dereferenceable(8) %10, %"class.blink::Text"* dereferenceable(88) %1) #9
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8
  %109 = icmp eq %"class.WTF::StringImpl"* %108, null
  br i1 %109, label %123, label %110

110:                                              ; preds = %103
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 0
  %116 = load i32, i32* %115, align 4
  br i1 %114, label %117, label %119

117:                                              ; preds = %110
  %118 = add i32 %116, -1
  store i32 %118, i32* %115, align 4
  br label %119

119:                                              ; preds = %117, %110
  %120 = phi i32 [ %118, %117 ], [ %116, %110 ]
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %119
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %108) #9
  br label %123

123:                                              ; preds = %103, %119, %122
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #9
  br label %124

124:                                              ; preds = %101, %123
  %125 = phi %"class.WTF::StringImpl"* [ %102, %101 ], [ %107, %123 ]
  %126 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 5
  %127 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %127) #9
  %128 = icmp eq %"class.WTF::StringImpl"* %125, null
  br i1 %128, label %129, label %133

129:                                              ; preds = %124
  %130 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* null, i8** %130, align 8
  %131 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %132 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %131, i64* %132, align 8
  br label %140

133:                                              ; preds = %124
  %134 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 0
  store %"class.WTF::StringImpl"* %125, %"class.WTF::StringImpl"** %134, align 8
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 1
  %136 = load i32, i32* %135, align 4
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 1
  %138 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %139 = bitcast i8** %138 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %137, %"class.WTF::StringImpl"** %139, align 8
  br label %140

140:                                              ; preds = %129, %133
  %141 = phi i32 [ %136, %133 ], [ 0, %129 ]
  %142 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 %141, i32* %142, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %126, %"class.WTF::StringView"* nonnull dereferenceable(24) %11)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %127) #9
  br i1 %128, label %156, label %143

143:                                              ; preds = %140
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  br i1 %147, label %150, label %152

150:                                              ; preds = %143
  %151 = add i32 %149, -1
  store i32 %151, i32* %148, align 4
  br label %152

152:                                              ; preds = %150, %143
  %153 = phi i32 [ %151, %150 ], [ %149, %143 ]
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %152
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %125) #9
  br label %156

156:                                              ; preds = %140, %152, %155
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %8) #9
  %157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %158 = icmp eq %"class.WTF::StringImpl"* %157, null
  br i1 %158, label %172, label %159

159:                                              ; preds = %156
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = load atomic i32, i32* %160 monotonic, align 4
  %162 = and i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 0
  %165 = load i32, i32* %164, align 4
  br i1 %163, label %166, label %168

166:                                              ; preds = %159
  %167 = add i32 %165, -1
  store i32 %167, i32* %164, align 4
  br label %168

168:                                              ; preds = %166, %159
  %169 = phi i32 [ %167, %166 ], [ %165, %159 ]
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %172

171:                                              ; preds = %168
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %157) #9
  br label %172

172:                                              ; preds = %156, %168, %171
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %75) #9
  br i1 %83, label %186, label %173

173:                                              ; preds = %172
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = load atomic i32, i32* %174 monotonic, align 4
  %176 = and i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %179 = load i32, i32* %178, align 4
  br i1 %177, label %180, label %182

180:                                              ; preds = %173
  %181 = add i32 %179, -1
  store i32 %181, i32* %178, align 4
  br label %182

182:                                              ; preds = %180, %173
  %183 = phi i32 [ %181, %180 ], [ %179, %173 ]
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %186

185:                                              ; preds = %182
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #9
  br label %186

186:                                              ; preds = %185, %182, %172, %62
  br i1 %13, label %187, label %194

187:                                              ; preds = %186
  %188 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %188) #9
  %189 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 5
  %190 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %191 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %190, i64* %191, align 8
  %192 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i8** %192, align 8
  %193 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 7, i32* %193, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %189, %"class.WTF::StringView"* nonnull dereferenceable(24) %12)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %188) #9
  br label %194

194:                                              ; preds = %187, %186
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !2
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #9
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !3

46:                                               ; preds = %37
  tail call void @llvm.trap() #9
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #9
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #9
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #9
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare void @_ZN5blink15MarkupFormatter20AppendAttributeValueERN3WTF13StringBuilderERKNS1_6StringEb(%"class.WTF::StringBuilder"* dereferenceable(48), %"class.WTF::String"* dereferenceable(8), i1 zeroext) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink19CSSPropertyValueSet6AsTextEv(%"class.blink::CSSPropertyValueSet"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink23StyledMarkupAccumulator14ShouldAnnotateEv(%"class.blink::StyledMarkupAccumulator"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 4, i32 2
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

declare %"class.blink::Element"* @_ZN5blink23EnclosingElementWithTagERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_13QualifiedNameE(%"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE19FirstPositionInNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink23StyledMarkupAccumulator12RenderedTextERNS_4TextE(%"class.blink::StyledMarkupAccumulator"* nocapture readonly, %"class.blink::Text"* dereferenceable(88)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %4 = alloca %"class.blink::PositionTemplate", align 8
  %5 = alloca %"class.blink::PositionTemplate", align 8
  %6 = alloca %"class.blink::TextIteratorBehavior", align 4
  %7 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %1, i64 0, i32 0, i32 1
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %28, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %11, align 8
  %13 = icmp eq %"class.blink::ParkableStringImpl"* %12, null
  br i1 %13, label %35, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0
  %16 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %15, align 8
  %17 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %16, null
  br i1 %17, label %18, label %25

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %12, i64 0, i32 1, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  br label %35

25:                                               ; preds = %14
  %26 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %16, i64 0, i32 8
  %27 = load i32, i32* %26, align 4
  br label %35

28:                                               ; preds = %2
  %29 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %35, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  br label %35

35:                                               ; preds = %10, %18, %22, %25, %28, %32
  %36 = phi i32 [ 0, %10 ], [ %27, %25 ], [ %24, %22 ], [ 0, %18 ], [ %34, %32 ], [ 0, %28 ]
  %37 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 1, i32 0
  %38 = load %"class.blink::Text"*, %"class.blink::Text"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %1, i64 0, i32 0, i32 0
  %40 = icmp eq %"class.blink::Text"* %38, %1
  br i1 %40, label %41, label %44

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 1, i32 1
  %43 = load i32, i32* %42, align 8
  br label %44

44:                                               ; preds = %41, %35
  %45 = phi i32 [ %43, %41 ], [ 0, %35 ]
  %46 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 2, i32 0
  %47 = load %"class.blink::Text"*, %"class.blink::Text"** %46, align 8
  %48 = icmp eq %"class.blink::Text"* %47, %1
  br i1 %48, label %49, label %52

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 2, i32 1
  %51 = load i32, i32* %50, align 8
  br label %52

52:                                               ; preds = %49, %44
  %53 = phi i32 [ %51, %49 ], [ %36, %44 ]
  %54 = bitcast %"class.blink::EphemeralRangeTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %54) #9
  %55 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %55) #9
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %4, %"class.blink::Node"* %39, i32 %45) #9
  %56 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %56) #9
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %5, %"class.blink::Node"* %39, i32 %53) #9
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_(%"class.blink::EphemeralRangeTemplate"* nonnull %3, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %4, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %5) #9
  %57 = bitcast %"class.blink::TextIteratorBehavior"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %57) #9
  call void @_ZN5blink20TextIteratorBehaviorC1Ev(%"class.blink::TextIteratorBehavior"* nonnull %6) #9
  %58 = call %"class.WTF::StringImpl"* @_ZN5blink9PlainTextERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_20TextIteratorBehaviorE(%"class.blink::EphemeralRangeTemplate"* nonnull dereferenceable(32) %3, %"class.blink::TextIteratorBehavior"* nonnull dereferenceable(4) %6) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %57) #9
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %56) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %55) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %54) #9
  ret %"class.WTF::StringImpl"* %58
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink23StyledMarkupAccumulator19StringValueForRangeERKNS_4TextE(%"class.blink::StyledMarkupAccumulator"*, %"class.blink::Text"* dereferenceable(88)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 1
  %5 = tail call zeroext i1 @_ZNK5blink10TextOffset6IsNullEv(%"class.blink::TextOffset"* %4) #9
  br i1 %5, label %6, label %38

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %1, i64 0, i32 0, i32 1
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %1, i64 0, i32 0, i32 2
  %12 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %11) #9
  br label %15

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %1, i64 0, i32 0, i32 3
  br label %15

15:                                               ; preds = %10, %13
  %16 = phi %"class.WTF::String"* [ %12, %10 ], [ %14, %13 ]
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = ptrtoint %"class.WTF::StringImpl"* %18 to i64
  %20 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %20, label %88, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %88

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i33
  %30 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %29, i33 1) #9
  %31 = extractvalue { i33, i1 } %30, 1
  %32 = extractvalue { i33, i1 } %30, 0
  %33 = icmp slt i33 %32, 0
  %34 = or i1 %31, %33
  br i1 %34, label %35, label %36, !prof !3

35:                                               ; preds = %26
  tail call void @llvm.trap() #9
  unreachable

36:                                               ; preds = %26
  %37 = trunc i33 %32 to i32
  store i32 %37, i32* %27, align 4
  br label %88

38:                                               ; preds = %2
  %39 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #9
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %40, align 8
  %41 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %1, i64 0, i32 0, i32 1
  %42 = load i8, i8* %41, align 8, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %1, i64 0, i32 0, i32 2
  %46 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %45) #9
  br label %49

47:                                               ; preds = %38
  %48 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %1, i64 0, i32 0, i32 3
  br label %49

49:                                               ; preds = %44, %47
  %50 = phi %"class.WTF::String"* [ %46, %44 ], [ %48, %47 ]
  %51 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %50, i64 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store %"class.WTF::StringImpl"* %52, %"class.WTF::StringImpl"** %40, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %71, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %71

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = zext i32 %61 to i33
  %63 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %62, i33 1) #9
  %64 = extractvalue { i33, i1 } %63, 1
  %65 = extractvalue { i33, i1 } %63, 0
  %66 = icmp slt i33 %65, 0
  %67 = or i1 %64, %66
  br i1 %67, label %68, label %69, !prof !3

68:                                               ; preds = %59
  tail call void @llvm.trap() #9
  unreachable

69:                                               ; preds = %59
  %70 = trunc i33 %65 to i32
  store i32 %70, i32* %60, align 4
  br label %71

71:                                               ; preds = %49, %54, %69
  %72 = getelementptr inbounds %"class.blink::TextOffset", %"class.blink::TextOffset"* %4, i64 0, i32 0
  %73 = load %"class.blink::Text"*, %"class.blink::Text"** %72, align 8
  %74 = icmp eq %"class.blink::Text"* %73, %1
  br i1 %74, label %75, label %78

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 2, i32 1
  %77 = load i32, i32* %76, align 8
  call void @_ZN3WTF6String8TruncateEj(%"class.WTF::String"* nonnull %3, i32 %77) #9
  br label %78

78:                                               ; preds = %75, %71
  %79 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 2, i32 0
  %80 = load %"class.blink::Text"*, %"class.blink::Text"** %79, align 8
  %81 = icmp eq %"class.blink::Text"* %80, %1
  br i1 %81, label %82, label %85

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 1, i32 1
  %84 = load i32, i32* %83, align 8
  call void @_ZN3WTF6String6RemoveEjj(%"class.WTF::String"* nonnull %3, i32 0, i32 %84) #9
  br label %85

85:                                               ; preds = %78, %82
  %86 = bitcast %"class.WTF::String"* %3 to i64*
  %87 = load i64, i64* %86, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #9
  br label %88

88:                                               ; preds = %36, %21, %15, %85
  %89 = phi i64 [ %87, %85 ], [ %19, %15 ], [ %19, %21 ], [ %19, %36 ]
  %90 = inttoptr i64 %89 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %90
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink34ConvertHTMLTextToInterchangeFormatERKN3WTF6StringERKNS_4TextE(%"class.WTF::String"* dereferenceable(8), %"class.blink::Text"* dereferenceable(88)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23StyledMarkupAccumulator28AppendElementWithInlineStyleERKNS_7ElementEPNS_12EditingStyleE(%"class.blink::StyledMarkupAccumulator"*, %"class.blink::Element"* dereferenceable(104), %"class.blink::EditingStyle"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 5
  tail call void @_ZN5blink23StyledMarkupAccumulator28AppendElementWithInlineStyleERN3WTF13StringBuilderERKNS_7ElementEPNS_12EditingStyleE(%"class.blink::StyledMarkupAccumulator"* %0, %"class.WTF::StringBuilder"* dereferenceable(48) %4, %"class.blink::Element"* dereferenceable(104) %1, %"class.blink::EditingStyle"* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23StyledMarkupAccumulator28AppendElementWithInlineStyleERN3WTF13StringBuilderERKNS_7ElementEPNS_12EditingStyleE(%"class.blink::StyledMarkupAccumulator"*, %"class.WTF::StringBuilder"* dereferenceable(48), %"class.blink::Element"* dereferenceable(104), %"class.blink::EditingStyle"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %8, i64 0, i32 2, i32 0, i32 0
  %10 = load %"class.blink::Document"*, %"class.blink::Document"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %10, i64 0, i32 107
  %12 = load i8, i8* %11, align 8
  %13 = and i8 %12, 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 0
  tail call void @_ZN5blink15MarkupFormatter18AppendStartTagOpenERN3WTF13StringBuilderERKNS_7ElementE(%"class.blink::MarkupFormatter"* %15, %"class.WTF::StringBuilder"* dereferenceable(48) %1, %"class.blink::Element"* dereferenceable(104) %2) #9
  %16 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %16, align 8
  %18 = icmp eq %"class.blink::ElementData"* %17, null
  br i1 %18, label %51, label %19

19:                                               ; preds = %4
  tail call void @_ZNK5blink7Element24SynchronizeAllAttributesEv(%"class.blink::Element"* %2) #9
  %20 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %16, align 8
  %21 = icmp eq %"class.blink::ElementData"* %20, null
  br i1 %21, label %22, label %24

22:                                               ; preds = %19
  %23 = load i32, i32* null, align 536870912
  br label %36

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %20, i64 0, i32 0, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = and i32 %26, 1
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %36, label %29

29:                                               ; preds = %24
  %30 = bitcast %"class.blink::ElementData"* %20 to %"class.blink::UniqueElementData"*
  %31 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %20, i64 1, i32 1
  %32 = bitcast %"class.blink::Member.51"* %31 to %"class.blink::Attribute"**
  %33 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %30, i64 0, i32 2, i32 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  br label %42

36:                                               ; preds = %24, %22
  %37 = phi i32 [ %23, %22 ], [ %26, %24 ]
  %38 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %20, i64 1
  %39 = bitcast %"class.blink::ElementData"* %38 to %"class.blink::Attribute"*
  %40 = lshr i32 %37, 1
  %41 = and i32 %40, 268435455
  br label %42

42:                                               ; preds = %29, %36
  %43 = phi i32 [ %41, %36 ], [ %35, %29 ]
  %44 = phi %"class.blink::Attribute"* [ %39, %36 ], [ %33, %29 ]
  %45 = zext i32 %43 to i64
  %46 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %44, i64 %45
  %47 = icmp eq i32 %43, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %42
  %49 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kStyleAttrE, align 8
  %50 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %49, i64 0, i32 0, i32 0
  br label %53

51:                                               ; preds = %60, %4, %42
  %52 = icmp eq %"class.blink::EditingStyle"* %3, null
  br i1 %52, label %93, label %63

53:                                               ; preds = %48, %60
  %54 = phi %"class.blink::Attribute"* [ %44, %48 ], [ %61, %60 ]
  %55 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %54, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %55, align 8
  %57 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %50, align 8
  %58 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %56, %57
  br i1 %58, label %60, label %59

59:                                               ; preds = %53
  tail call void @_ZN5blink23StyledMarkupAccumulator15AppendAttributeERN3WTF13StringBuilderERKNS_7ElementERKNS_9AttributeE(%"class.blink::StyledMarkupAccumulator"* %0, %"class.WTF::StringBuilder"* dereferenceable(48) %1, %"class.blink::Element"* dereferenceable(104) %2, %"class.blink::Attribute"* dereferenceable(16) %54)
  br label %60

60:                                               ; preds = %53, %59
  %61 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %54, i64 1
  %62 = icmp eq %"class.blink::Attribute"* %61, %46
  br i1 %62, label %51, label %53

63:                                               ; preds = %51
  %64 = tail call zeroext i1 @_ZNK5blink12EditingStyle7IsEmptyEv(%"class.blink::EditingStyle"* nonnull %3) #9
  br i1 %64, label %93, label %65

65:                                               ; preds = %63
  %66 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #9
  %67 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %68 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %67, i64* %68, align 8
  %69 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), i8** %69, align 8
  %70 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 8, i32* %70, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #9
  %71 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #9
  %72 = getelementptr inbounds %"class.blink::EditingStyle", %"class.blink::EditingStyle"* %3, i64 0, i32 0, i32 0, i32 0
  %73 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %73, i64 0, i32 0
  %75 = call %"class.WTF::StringImpl"* @_ZNK5blink19CSSPropertyValueSet6AsTextEv(%"class.blink::CSSPropertyValueSet"* %74) #9
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %75, %"class.WTF::StringImpl"** %76, align 8
  call void @_ZN5blink15MarkupFormatter20AppendAttributeValueERN3WTF13StringBuilderERKNS1_6StringEb(%"class.WTF::StringBuilder"* dereferenceable(48) %1, %"class.WTF::String"* nonnull dereferenceable(8) %6, i1 zeroext %14) #9
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %65
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #9
  br label %92

92:                                               ; preds = %65, %88, %91
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #9
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext 34) #9
  br label %93

93:                                               ; preds = %51, %92, %63
  call void @_ZN5blink15MarkupFormatter19AppendStartTagCloseERN3WTF13StringBuilderERKNS_7ElementE(%"class.blink::MarkupFormatter"* %15, %"class.WTF::StringBuilder"* dereferenceable(48) %1, %"class.blink::Element"* dereferenceable(104) %2) #9
  ret void
}

declare void @_ZN5blink15MarkupFormatter18AppendStartTagOpenERN3WTF13StringBuilderERKNS_7ElementE(%"class.blink::MarkupFormatter"*, %"class.WTF::StringBuilder"* dereferenceable(48), %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23StyledMarkupAccumulator15AppendAttributeERN3WTF13StringBuilderERKNS_7ElementERKNS_9AttributeE(%"class.blink::StyledMarkupAccumulator"*, %"class.WTF::StringBuilder"* dereferenceable(48), %"class.blink::Element"* dereferenceable(104), %"class.blink::Attribute"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 0
  %9 = tail call %"class.WTF::StringImpl"* @_ZNK5blink15MarkupFormatter18ResolveURLIfNeededERKNS_7ElementERKNS_9AttributeE(%"class.blink::MarkupFormatter"* %8, %"class.blink::Element"* dereferenceable(104) %2, %"class.blink::Attribute"* dereferenceable(16) %3) #9
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %7, align 8
  %10 = tail call zeroext i1 @_ZNK5blink15MarkupFormatter15SerializeAsHTMLEv(%"class.blink::MarkupFormatter"* %8) #9
  br i1 %10, label %11, label %12

11:                                               ; preds = %4
  call void @_ZN5blink15MarkupFormatter21AppendAttributeAsHTMLERN3WTF13StringBuilderERKNS_9AttributeERKNS1_6StringE(%"class.WTF::StringBuilder"* dereferenceable(48) %1, %"class.blink::Attribute"* dereferenceable(16) %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #9
  br label %13

12:                                               ; preds = %4
  call void @_ZN5blink15MarkupFormatter36AppendAttributeAsXMLWithoutNamespaceERN3WTF13StringBuilderERKNS_9AttributeERKNS1_6StringE(%"class.WTF::StringBuilder"* dereferenceable(48) %1, %"class.blink::Attribute"* dereferenceable(16) %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #9
  br label %13

13:                                               ; preds = %12, %11
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #9
  br label %29

29:                                               ; preds = %13, %25, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  ret void
}

declare zeroext i1 @_ZNK5blink12EditingStyle7IsEmptyEv(%"class.blink::EditingStyle"*) local_unnamed_addr #1

declare void @_ZN5blink15MarkupFormatter19AppendStartTagCloseERN3WTF13StringBuilderERKNS_7ElementE(%"class.blink::MarkupFormatter"*, %"class.WTF::StringBuilder"* dereferenceable(48), %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23StyledMarkupAccumulator13AppendElementERKNS_7ElementE(%"class.blink::StyledMarkupAccumulator"*, %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 5
  tail call void @_ZN5blink23StyledMarkupAccumulator13AppendElementERN3WTF13StringBuilderERKNS_7ElementE(%"class.blink::StyledMarkupAccumulator"* %0, %"class.WTF::StringBuilder"* dereferenceable(48) %3, %"class.blink::Element"* dereferenceable(104) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23StyledMarkupAccumulator13AppendElementERN3WTF13StringBuilderERKNS_7ElementE(%"class.blink::StyledMarkupAccumulator"*, %"class.WTF::StringBuilder"* dereferenceable(48), %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 0
  tail call void @_ZN5blink15MarkupFormatter18AppendStartTagOpenERN3WTF13StringBuilderERKNS_7ElementE(%"class.blink::MarkupFormatter"* %4, %"class.WTF::StringBuilder"* dereferenceable(48) %1, %"class.blink::Element"* dereferenceable(104) %2) #9
  %5 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %5, align 8
  %7 = icmp eq %"class.blink::ElementData"* %6, null
  br i1 %7, label %37, label %8

8:                                                ; preds = %3
  tail call void @_ZNK5blink7Element24SynchronizeAllAttributesEv(%"class.blink::Element"* %2) #9
  %9 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %5, align 8
  %10 = icmp eq %"class.blink::ElementData"* %9, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = load i32, i32* null, align 536870912
  br label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %9, i64 0, i32 0, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = and i32 %15, 1
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.blink::ElementData"* %9 to %"class.blink::UniqueElementData"*
  %20 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %9, i64 1, i32 1
  %21 = bitcast %"class.blink::Member.51"* %20 to %"class.blink::Attribute"**
  %22 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %19, i64 0, i32 2, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  br label %31

25:                                               ; preds = %13, %11
  %26 = phi i32 [ %12, %11 ], [ %15, %13 ]
  %27 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %9, i64 1
  %28 = bitcast %"class.blink::ElementData"* %27 to %"class.blink::Attribute"*
  %29 = lshr i32 %26, 1
  %30 = and i32 %29, 268435455
  br label %31

31:                                               ; preds = %18, %25
  %32 = phi i32 [ %30, %25 ], [ %24, %18 ]
  %33 = phi %"class.blink::Attribute"* [ %28, %25 ], [ %22, %18 ]
  %34 = zext i32 %32 to i64
  %35 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %33, i64 %34
  %36 = icmp eq i32 %32, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %38, %3, %31
  tail call void @_ZN5blink15MarkupFormatter19AppendStartTagCloseERN3WTF13StringBuilderERKNS_7ElementE(%"class.blink::MarkupFormatter"* %4, %"class.WTF::StringBuilder"* dereferenceable(48) %1, %"class.blink::Element"* dereferenceable(104) %2) #9
  ret void

38:                                               ; preds = %31, %38
  %39 = phi %"class.blink::Attribute"* [ %40, %38 ], [ %33, %31 ]
  tail call void @_ZN5blink23StyledMarkupAccumulator15AppendAttributeERN3WTF13StringBuilderERKNS_7ElementERKNS_9AttributeE(%"class.blink::StyledMarkupAccumulator"* %0, %"class.WTF::StringBuilder"* dereferenceable(48) %1, %"class.blink::Element"* dereferenceable(104) %2, %"class.blink::Attribute"* dereferenceable(16) %39)
  %40 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %39, i64 1
  %41 = icmp eq %"class.blink::Attribute"* %40, %35
  br i1 %41, label %37, label %38
}

declare %"class.WTF::StringImpl"* @_ZNK5blink15MarkupFormatter18ResolveURLIfNeededERKNS_7ElementERKNS_9AttributeE(%"class.blink::MarkupFormatter"*, %"class.blink::Element"* dereferenceable(104), %"class.blink::Attribute"* dereferenceable(16)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink15MarkupFormatter15SerializeAsHTMLEv(%"class.blink::MarkupFormatter"*) local_unnamed_addr #1

declare void @_ZN5blink15MarkupFormatter21AppendAttributeAsHTMLERN3WTF13StringBuilderERKNS_9AttributeERKNS1_6StringE(%"class.WTF::StringBuilder"* dereferenceable(48), %"class.blink::Attribute"* dereferenceable(16), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink15MarkupFormatter36AppendAttributeAsXMLWithoutNamespaceERN3WTF13StringBuilderERKNS_9AttributeERKNS1_6StringE(%"class.WTF::StringBuilder"* dereferenceable(48), %"class.blink::Attribute"* dereferenceable(16), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23StyledMarkupAccumulator17WrapWithStyleNodeEPNS_19CSSPropertyValueSetE(%"class.blink::StyledMarkupAccumulator"*, %"class.blink::CSSPropertyValueSet"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringBuilder", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = bitcast %"class.WTF::StringBuilder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false)
  %10 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %10, align 8
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 1
  %12 = bitcast %union.anon* %11 to i8*
  store i8 0, i8* %12, align 8
  %13 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 2
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 3
  store i8 1, i8* %14, align 4
  %15 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 4
  store i8 0, i8* %15, align 1
  %16 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #9
  %17 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %18 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8** %19, align 8
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 12, i32* %20, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #9
  %21 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  %22 = call %"class.WTF::StringImpl"* @_ZNK5blink19CSSPropertyValueSet6AsTextEv(%"class.blink::CSSPropertyValueSet"* %1) #9
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"** %23, align 8
  %24 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 3
  %25 = load %"class.blink::Document"*, %"class.blink::Document"** %24, align 8
  %26 = icmp eq %"class.blink::Document"* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %25, i64 0, i32 107
  %29 = load i8, i8* %28, align 8
  %30 = and i8 %29, 1
  %31 = icmp ne i8 %30, 0
  br label %32

32:                                               ; preds = %2, %27
  %33 = phi i1 [ false, %2 ], [ %31, %27 ]
  call void @_ZN5blink15MarkupFormatter20AppendAttributeValueERN3WTF13StringBuilderERKNS1_6StringEb(%"class.WTF::StringBuilder"* nonnull dereferenceable(48) %3, %"class.WTF::String"* nonnull dereferenceable(8) %5, i1 zeroext %33) #9
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #9
  br label %49

49:                                               ; preds = %32, %45, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  %50 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #9
  %51 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %52 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %51, i64* %52, align 8
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8** %53, align 8
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 2, i32* %54, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #9
  %55 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 6
  %56 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #9
  %57 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %3) #9
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %57, %"class.WTF::StringImpl"** %58, align 8
  %59 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %60, %62
  br i1 %63, label %73, label %64, !prof !3

64:                                               ; preds = %49
  %65 = ptrtoint %"class.WTF::StringImpl"* %57 to i64
  %66 = getelementptr inbounds %"class.WTF::Vector.592", %"class.WTF::Vector.592"* %55, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::String"*, %"class.WTF::String"** %66, align 8
  %68 = zext i32 %60 to i64
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %67, i64 %68
  %70 = bitcast %"class.WTF::String"* %69 to i64*
  store i64 %65, i64* %70, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %58, align 8
  %71 = load i32, i32* %59, align 4
  %72 = add i32 %71, 1
  store i32 %72, i32* %59, align 4
  br label %89

73:                                               ; preds = %49
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.592"* %55, %"class.WTF::String"* nonnull dereferenceable(8) %7) #9
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %89, label %76

76:                                               ; preds = %73
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  br i1 %80, label %83, label %85

83:                                               ; preds = %76
  %84 = add i32 %82, -1
  store i32 %84, i32* %81, align 4
  br label %85

85:                                               ; preds = %83, %76
  %86 = phi i32 [ %84, %83 ], [ %82, %76 ]
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %85
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #9
  br label %89

89:                                               ; preds = %64, %73, %85, %88
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #9
  %90 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #9
  %91 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 5
  %92 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %93 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %92, i64* %93, align 8
  %94 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), i8** %94, align 8
  %95 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 6, i32* %95, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %91, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #9
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %3) #9
  %96 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %97 = icmp eq %"class.WTF::StringImpl"* %96, null
  br i1 %97, label %111, label %98

98:                                               ; preds = %89
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load atomic i32, i32* %99 monotonic, align 4
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 0
  %104 = load i32, i32* %103, align 4
  br i1 %102, label %105, label %107

105:                                              ; preds = %98
  %106 = add i32 %104, -1
  store i32 %106, i32* %103, align 4
  br label %107

107:                                              ; preds = %105, %98
  %108 = phi i32 [ %106, %105 ], [ %104, %98 ]
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %111

110:                                              ; preds = %107
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %96) #9
  br label %111

111:                                              ; preds = %89, %107, %110
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink23StyledMarkupAccumulator11TakeResultsEv(%"class.blink::StyledMarkupAccumulator"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringBuilder", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = bitcast %"class.WTF::StringBuilder"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %5) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 48, i1 false)
  %6 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 1
  %8 = bitcast %union.anon* %7 to i8*
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 2
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 3
  store i8 1, i8* %10, align 4
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 4
  store i8 0, i8* %11, align 1
  %12 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 6
  %13 = getelementptr inbounds %"class.WTF::Vector.592", %"class.WTF::Vector.592"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::String"*, %"class.WTF::String"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %65, label %18

18:                                               ; preds = %1
  %19 = zext i32 %16 to i64
  %20 = shl nuw nsw i64 %19, 3
  %21 = add nsw i64 %20, -8
  %22 = lshr exact i64 %21, 3
  %23 = add nuw nsw i64 %22, 1
  %24 = and i64 %23, 3
  %25 = icmp ult i64 %21, 24
  br i1 %25, label %44, label %26

26:                                               ; preds = %18
  %27 = sub nsw i64 %23, %24
  br label %28

28:                                               ; preds = %189, %26
  %29 = phi i32 [ 0, %26 ], [ %191, %189 ]
  %30 = phi %"class.WTF::String"* [ %14, %26 ], [ %192, %189 ]
  %31 = phi i64 [ %27, %26 ], [ %193, %189 ]
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %30, i64 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 1
  %37 = load i32, i32* %36, align 4
  br label %38

38:                                               ; preds = %35, %28
  %39 = phi i32 [ %37, %35 ], [ 0, %28 ]
  %40 = add i32 %39, %29
  %41 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %30, i64 1, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %171, label %168

44:                                               ; preds = %189, %18
  %45 = phi i32 [ undef, %18 ], [ %191, %189 ]
  %46 = phi i32 [ 0, %18 ], [ %191, %189 ]
  %47 = phi %"class.WTF::String"* [ %14, %18 ], [ %192, %189 ]
  %48 = icmp eq i64 %24, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %44, %59
  %50 = phi i32 [ %61, %59 ], [ %46, %44 ]
  %51 = phi %"class.WTF::String"* [ %62, %59 ], [ %47, %44 ]
  %52 = phi i64 [ %63, %59 ], [ %24, %44 ]
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %51, i64 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %59, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 1
  %58 = load i32, i32* %57, align 4
  br label %59

59:                                               ; preds = %56, %49
  %60 = phi i32 [ %58, %56 ], [ 0, %49 ]
  %61 = add i32 %60, %50
  %62 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %51, i64 1
  %63 = add i64 %52, -1
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %49, !llvm.loop !4

65:                                               ; preds = %44, %59, %1
  %66 = phi i32 [ 0, %1 ], [ %45, %44 ], [ %61, %59 ]
  %67 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 5
  %68 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 5, i32 2
  %69 = load i32, i32* %68, align 8
  %70 = add i32 %69, %66
  call void @_ZN3WTF13StringBuilder15ReserveCapacityEj(%"class.WTF::StringBuilder"* nonnull %2, i32 %70) #9
  %71 = load i32, i32* %15, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %80, label %73

73:                                               ; preds = %65
  %74 = bitcast %"class.WTF::StringView"* %3 to i8*
  %75 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  %76 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %77 = bitcast i8** %76 to %"class.WTF::StringImpl"**
  %78 = bitcast %"class.WTF::StringView"* %3 to i64*
  %79 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  br label %152

80:                                               ; preds = %165, %65
  call void @_ZN3WTF13StringBuilder6AppendERKS0_(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringBuilder"* dereferenceable(48) %67)
  %81 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %2) #9
  %82 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #9
  %83 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %84 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), i8** %85, align 8
  %86 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 0, i32* %86, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %87, label %121, label %88

88:                                               ; preds = %80
  %89 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceEDsRKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %81, i16 zeroext 0, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #9
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %88
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %88
  %99 = phi i32 [ %97, %96 ], [ %95, %88 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %81) #9
  br label %102

102:                                              ; preds = %98, %101
  %103 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %103, label %121, label %104

104:                                              ; preds = %102
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %122

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = zext i32 %111 to i33
  %113 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %112, i33 1) #9
  %114 = extractvalue { i33, i1 } %113, 1
  %115 = extractvalue { i33, i1 } %113, 0
  %116 = icmp slt i33 %115, 0
  %117 = or i1 %114, %116
  br i1 %117, label %118, label %119, !prof !3

118:                                              ; preds = %109
  call void @llvm.trap() #9
  unreachable

119:                                              ; preds = %109
  %120 = trunc i33 %115 to i32
  store i32 %120, i32* %110, align 4
  br label %122

121:                                              ; preds = %80, %102
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #9
  br label %134

122:                                              ; preds = %104, %119
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #9
  %123 = load atomic i32, i32* %105 monotonic, align 4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  br i1 %125, label %128, label %130

128:                                              ; preds = %122
  %129 = add i32 %127, -1
  store i32 %129, i32* %126, align 4
  br label %130

130:                                              ; preds = %128, %122
  %131 = phi i32 [ %129, %128 ], [ %127, %122 ]
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %134

133:                                              ; preds = %130
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %89) #9
  br label %134

134:                                              ; preds = %121, %130, %133
  %135 = phi %"class.WTF::StringImpl"* [ null, %121 ], [ %89, %130 ], [ %89, %133 ]
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %2) #9
  %136 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %137 = icmp eq %"class.WTF::StringImpl"* %136, null
  br i1 %137, label %151, label %138

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load atomic i32, i32* %139 monotonic, align 4
  %141 = and i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 0
  %144 = load i32, i32* %143, align 4
  br i1 %142, label %145, label %147

145:                                              ; preds = %138
  %146 = add i32 %144, -1
  store i32 %146, i32* %143, align 4
  br label %147

147:                                              ; preds = %145, %138
  %148 = phi i32 [ %146, %145 ], [ %144, %138 ]
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %147
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %136) #9
  br label %151

151:                                              ; preds = %134, %147, %150
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5) #9
  ret %"class.WTF::StringImpl"* %135

152:                                              ; preds = %73, %165
  %153 = phi i32 [ %71, %73 ], [ %154, %165 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #9
  %154 = add i32 %153, -1
  %155 = call dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.592"* %12, i32 %154) #9
  %156 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %155, i64 0, i32 0, i32 0
  %157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %156, align 8
  %158 = icmp eq %"class.WTF::StringImpl"* %157, null
  br i1 %158, label %159, label %161

159:                                              ; preds = %152
  store i8* null, i8** %76, align 8
  %160 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %160, i64* %78, align 8
  br label %165

161:                                              ; preds = %152
  store %"class.WTF::StringImpl"* %157, %"class.WTF::StringImpl"** %75, align 8
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 1
  %163 = load i32, i32* %162, align 4
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 1
  store %"class.WTF::StringImpl"* %164, %"class.WTF::StringImpl"** %77, align 8
  br label %165

165:                                              ; preds = %159, %161
  %166 = phi i32 [ %163, %161 ], [ 0, %159 ]
  store i32 %166, i32* %79, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #9
  %167 = icmp eq i32 %154, 0
  br i1 %167, label %80, label %152

168:                                              ; preds = %38
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 1
  %170 = load i32, i32* %169, align 4
  br label %171

171:                                              ; preds = %168, %38
  %172 = phi i32 [ %170, %168 ], [ 0, %38 ]
  %173 = add i32 %172, %40
  %174 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %30, i64 2, i32 0, i32 0
  %175 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %174, align 8
  %176 = icmp eq %"class.WTF::StringImpl"* %175, null
  br i1 %176, label %180, label %177

177:                                              ; preds = %171
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %175, i64 0, i32 1
  %179 = load i32, i32* %178, align 4
  br label %180

180:                                              ; preds = %177, %171
  %181 = phi i32 [ %179, %177 ], [ 0, %171 ]
  %182 = add i32 %181, %173
  %183 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %30, i64 3, i32 0, i32 0
  %184 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %183, align 8
  %185 = icmp eq %"class.WTF::StringImpl"* %184, null
  br i1 %185, label %189, label %186

186:                                              ; preds = %180
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 1
  %188 = load i32, i32* %187, align 4
  br label %189

189:                                              ; preds = %186, %180
  %190 = phi i32 [ %188, %186 ], [ 0, %180 ]
  %191 = add i32 %190, %182
  %192 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %30, i64 4
  %193 = add i64 %31, -4
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %44, label %28
}

declare void @_ZN3WTF13StringBuilder15ReserveCapacityEj(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKS0_(%"class.WTF::StringBuilder"*, %"class.WTF::StringBuilder"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %94, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %68

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %68

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %1, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %68, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %35

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i33
  %27 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %26, i33 1) #9
  %28 = extractvalue { i33, i1 } %27, 1
  %29 = extractvalue { i33, i1 } %27, 0
  %30 = icmp slt i33 %29, 0
  %31 = or i1 %28, %30
  br i1 %31, label %32, label %33, !prof !3

32:                                               ; preds = %23
  tail call void @llvm.trap() #9
  unreachable

33:                                               ; preds = %23
  %34 = trunc i33 %29 to i32
  store i32 %34, i32* %24, align 4
  br label %35

35:                                               ; preds = %33, %18
  %36 = ptrtoint %"class.WTF::StringImpl"* %16 to i64
  %37 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %38 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  store i64 %36, i64* %37, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #9
  br label %54

54:                                               ; preds = %35, %50, %53
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %60, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  br label %60

60:                                               ; preds = %54, %57
  %61 = phi i32 [ %59, %57 ], [ 0, %54 ]
  store i32 %61, i32* %7, align 8
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %66 = trunc i32 %64 to i8
  %67 = and i8 %66, 1
  store i8 %67, i8* %65, align 4
  br label %94

68:                                               ; preds = %10, %6, %14
  %69 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %1, i64 0, i32 3
  %70 = load i8, i8* %69, align 4, !range !2
  %71 = icmp eq i8 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %1, i64 0, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %71, label %84, label %75

75:                                               ; preds = %68
  br i1 %74, label %79, label %76

76:                                               ; preds = %75
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 1
  %78 = bitcast %"class.WTF::StringImpl"* %77 to i8*
  br label %82

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  br label %82

82:                                               ; preds = %76, %79
  %83 = phi i8* [ %81, %79 ], [ %78, %76 ]
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %83, i32 %4) #9
  br label %94

84:                                               ; preds = %68
  br i1 %74, label %88, label %85

85:                                               ; preds = %84
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 1
  %87 = bitcast %"class.WTF::StringImpl"* %86 to i16*
  br label %92

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %1, i64 0, i32 1
  %90 = bitcast %union.anon* %89 to i16**
  %91 = load i16*, i16** %90, align 8
  br label %92

92:                                               ; preds = %85, %88
  %93 = phi i16* [ %91, %88 ], [ %87, %85 ]
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %93, i32 %4) #9
  br label %94

94:                                               ; preds = %2, %60, %92, %82
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink9PlainTextERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_20TextIteratorBehaviorE(%"class.blink::EphemeralRangeTemplate"* dereferenceable(32), %"class.blink::TextIteratorBehavior"* dereferenceable(4)) local_unnamed_addr #1

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"*, %"class.blink::Node"*, i32) unnamed_addr #1

declare void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_(%"class.blink::EphemeralRangeTemplate"*, %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::PositionTemplate"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN5blink20TextIteratorBehaviorC1Ev(%"class.blink::TextIteratorBehavior"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"*) unnamed_addr #4

declare zeroext i1 @_ZNK5blink10TextOffset6IsNullEv(%"class.blink::TextOffset"*) local_unnamed_addr #1

declare void @_ZN3WTF6String8TruncateEj(%"class.WTF::String"*, i32) local_unnamed_addr #1

declare void @_ZN3WTF6String6RemoveEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23StyledMarkupAccumulator10PushMarkupERKN3WTF6StringE(%"class.blink::StyledMarkupAccumulator"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 6
  %4 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %37, label %9, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::Vector.592", %"class.WTF::Vector.592"* %3, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::String"*, %"class.WTF::String"** %10, align 8
  %12 = zext i32 %5 to i64
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %12, i32 0, i32 0
  store %"class.WTF::StringImpl"* %14, %"class.WTF::StringImpl"** %15, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %16, label %34, label %17

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %34

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i33
  %26 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %25, i33 1) #9
  %27 = extractvalue { i33, i1 } %26, 1
  %28 = extractvalue { i33, i1 } %26, 0
  %29 = icmp slt i33 %28, 0
  %30 = or i1 %27, %29
  br i1 %30, label %31, label %32, !prof !3

31:                                               ; preds = %22
  tail call void @llvm.trap() #9
  unreachable

32:                                               ; preds = %22
  %33 = trunc i33 %28 to i32
  store i32 %33, i32* %23, align 4
  br label %34

34:                                               ; preds = %32, %17, %9
  %35 = load i32, i32* %4, align 4
  %36 = add i32 %35, 1
  store i32 %36, i32* %4, align 4
  br label %38

37:                                               ; preds = %2
  tail call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.592"* %3, %"class.WTF::String"* dereferenceable(8) %1) #9
  br label %38

38:                                               ; preds = %34, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23StyledMarkupAccumulator24AppendInterchangeNewlineEv(%"class.blink::StyledMarkupAccumulator"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink23StyledMarkupAccumulator24AppendInterchangeNewlineEvE28s_interchange_newline_string to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9, !prof !6

5:                                                ; preds = %1
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink23StyledMarkupAccumulator24AppendInterchangeNewlineEvE28s_interchange_newline_string) #9
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %5
  tail call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink23StyledMarkupAccumulator24AppendInterchangeNewlineEvE28s_interchange_newline_string to %"class.WTF::String"*), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.13, i64 0, i64 0), i64 38) #9
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink23StyledMarkupAccumulator24AppendInterchangeNewlineEvE28s_interchange_newline_string) #9
  br label %9

9:                                                ; preds = %5, %8, %1
  %10 = getelementptr inbounds %"class.blink::StyledMarkupAccumulator", %"class.blink::StyledMarkupAccumulator"* %0, i64 0, i32 5
  %11 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #9
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink23StyledMarkupAccumulator24AppendInterchangeNewlineEvE28s_interchange_newline_string to %"class.WTF::StringImpl"**), align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %18

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %15, align 8
  %16 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %17 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %16, i64* %17, align 8
  br label %25

18:                                               ; preds = %9
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %19, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %24 = bitcast i8** %23 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"** %24, align 8
  br label %25

25:                                               ; preds = %14, %18
  %26 = phi i32 [ %21, %18 ], [ 0, %14 ]
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %26, i32* %27, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %2)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #9
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #5

declare dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"*) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

declare void @_ZNK5blink7Element24SynchronizeAllAttributesEv(%"class.blink::Element"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i16, align 2
  %4 = alloca i8, align 1
  store i8 %1, i8* %4, align 1
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %35

8:                                                ; preds = %2
  %9 = zext i8 %1 to i16
  %10 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %10)
  store i16 %9, i16* %3, align 2
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #9
  br label %15

15:                                               ; preds = %14, %8
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %29, label %22, !prof !3

22:                                               ; preds = %15
  %23 = bitcast %union.anon* %16 to i16**
  %24 = load i16*, i16** %23, align 8
  %25 = zext i32 %18 to i64
  %26 = getelementptr inbounds i16, i16* %24, i64 %25
  store i16 %9, i16* %26, align 2
  %27 = load i32, i32* %17, align 4
  %28 = add i32 %27, 1
  store i32 %28, i32* %17, align 4
  br label %31

29:                                               ; preds = %15
  %30 = bitcast %union.anon* %16 to %"class.WTF::Vector.587"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.587"* %30, i16* nonnull dereferenceable(2) %3) #9
  br label %31

31:                                               ; preds = %22, %29
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %10)
  br label %59

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %37 = load i8, i8* %36, align 1, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #9
  br label %40

40:                                               ; preds = %35, %39
  %41 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %54, label %47, !prof !3

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.WTF::Vector.583", %"class.WTF::Vector.583"* %41, i64 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = zext i32 %43 to i64
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  store i8 %1, i8* %51, align 1
  %52 = load i32, i32* %42, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %42, align 4
  br label %55

54:                                               ; preds = %40
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.583"* %41, i8* nonnull dereferenceable(1) %4) #9
  br label %55

55:                                               ; preds = %47, %54
  %56 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 8
  br label %59

59:                                               ; preds = %55, %31
  ret void
}

declare void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.587"*, i16* dereferenceable(2)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.587", %"class.WTF::Vector.587"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.587", %"class.WTF::Vector.587"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.587"* %0, i32 %5) #9
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.587"* %0, i32 %5) #9
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.587"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.587", %"class.WTF::Vector.587"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #9
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7, i64 0, i64 0), i8* %15, i8* %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #9
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !7

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.587", %"class.WTF::Vector.587"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #9
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #9
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.587"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.587", %"class.WTF::Vector.587"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.587"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.587"* %0, i32 %27) #9
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.587"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.587", %"class.WTF::Vector.587"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.587", %"class.WTF::Vector.587"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.587"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.587", %"class.WTF::Vector.587"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.587", %"class.WTF::Vector.587"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.587", %"class.WTF::Vector.587"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.587"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.587", %"class.WTF::Vector.587"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !3

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #9
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.588"* %19, i16* nonnull %6) #9
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #9
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #9
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.587", %"class.WTF::Vector.587"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !7

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.587", %"class.WTF::Vector.587"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #9
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.587", %"class.WTF::Vector.587"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !7

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.587", %"class.WTF::Vector.587"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.588"* %53, i16* %48) #9
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.587"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.587", %"class.WTF::Vector.587"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.11, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.588"*, i16*) local_unnamed_addr #8 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #9
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.583"*, i8* dereferenceable(1)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.583", %"class.WTF::Vector.583"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.583", %"class.WTF::Vector.583"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.583"* %0, i32 %5) #9
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.583"* %0, i32 %5) #9
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.583"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.583", %"class.WTF::Vector.583"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #9
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7, i64 0, i64 0), i8* %15, i8* %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #9
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !7

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.583", %"class.WTF::Vector.583"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %37) #9
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #9
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.583"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector.583", %"class.WTF::Vector.583"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector.583"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 16, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.583"* %0, i32 %27) #9
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.583"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.583", %"class.WTF::Vector.583"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.583", %"class.WTF::Vector.583"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector.583"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.583", %"class.WTF::Vector.583"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector.583", %"class.WTF::Vector.583"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector.583", %"class.WTF::Vector.583"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector.583"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.583", %"class.WTF::Vector.583"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !3

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #9
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.584"* %18, i8* nonnull %6) #9
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #9
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #9
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector.583", %"class.WTF::Vector.583"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !7

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector.583", %"class.WTF::Vector.583"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #9
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector.583", %"class.WTF::Vector.583"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !7

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector.583", %"class.WTF::Vector.583"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.584"* %46, i8* %42) #9
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector.583"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector.583", %"class.WTF::Vector.583"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.11, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #9
  ret i64 %20
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.584"*, i8*) local_unnamed_addr #8 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #9
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceEDsRKNS_10StringViewE(%"class.WTF::StringImpl"*, i16 zeroext, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.592"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.592", %"class.WTF::Vector.592"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS1_(%"class.WTF::Vector.592"* %0, i32 %5, %"class.WTF::String"* %1)
  %7 = getelementptr inbounds %"class.WTF::Vector.592", %"class.WTF::Vector.592"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::String"*, %"class.WTF::String"** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 %10
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %13 = bitcast %"class.WTF::String"* %6 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.WTF::String"* %11 to i64*
  store i64 %14, i64* %15, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %12, align 8
  %16 = load i32, i32* %3, align 4
  %17 = add i32 %16, 1
  store i32 %17, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS1_(%"class.WTF::Vector.592"*, i32, %"class.WTF::String"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::Vector.592", %"class.WTF::Vector.592"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %6 = icmp ugt %"class.WTF::String"* %5, %2
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::Vector.592", %"class.WTF::Vector.592"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %2
  br i1 %12, label %53, label %13

13:                                               ; preds = %7, %3
  %14 = getelementptr inbounds %"class.WTF::Vector.592", %"class.WTF::Vector.592"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %1
  %22 = select i1 %21, i32 %20, i32 %1
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %98, !prof !7

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::String"* %5, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %26) #9
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #9
  br i1 %25, label %29, label %34

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.592"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  br label %98

34:                                               ; preds = %24
  %35 = lshr i64 %27, 3
  %36 = ptrtoint i8* %28 to i64
  %37 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %38 = icmp ne i8* %28, null
  %39 = icmp ne %"class.WTF::String"* %37, null
  %40 = and i1 %38, %39
  %41 = bitcast %"class.WTF::String"* %37 to i8*
  br i1 %40, label %42, label %49, !prof !7

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.WTF::Vector.592", %"class.WTF::Vector.592"* %0, i64 0, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %41, i64 %46, i1 false) #9
  %47 = bitcast %"class.WTF::Vector.592"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %42, %34
  %50 = phi i8* [ %48, %42 ], [ %41, %34 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #9
  %51 = bitcast %"class.WTF::Vector.592"* %0 to i64*
  store atomic i64 %36, i64* %51 monotonic, align 8
  %52 = trunc i64 %35 to i32
  store i32 %52, i32* %14, align 8
  br label %98

53:                                               ; preds = %7
  %54 = ptrtoint %"class.WTF::String"* %2 to i64
  %55 = ptrtoint %"class.WTF::String"* %5 to i64
  %56 = sub i64 %54, %55
  %57 = ashr exact i64 %56, 3
  %58 = getelementptr inbounds %"class.WTF::Vector.592", %"class.WTF::Vector.592"* %0, i64 0, i32 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = lshr i32 %59, 2
  %61 = add i32 %59, 1
  %62 = add i32 %61, %60
  %63 = icmp ugt i32 %62, 4
  %64 = select i1 %63, i32 %62, i32 4
  %65 = icmp ugt i32 %64, %1
  %66 = select i1 %65, i32 %64, i32 %1
  %67 = icmp ult i32 %59, %66
  br i1 %67, label %68, label %95, !prof !7

68:                                               ; preds = %53
  %69 = icmp eq %"class.WTF::String"* %5, null
  %70 = zext i32 %66 to i64
  %71 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %70) #9
  %72 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %71, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #9
  %73 = ptrtoint i8* %72 to i64
  br i1 %69, label %74, label %76

74:                                               ; preds = %68
  %75 = bitcast %"class.WTF::Vector.592"* %0 to i64*
  store atomic i64 %73, i64* %75 monotonic, align 8
  br label %91

76:                                               ; preds = %68
  %77 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %78 = icmp ne i8* %72, null
  %79 = icmp ne %"class.WTF::String"* %77, null
  %80 = and i1 %78, %79
  %81 = bitcast %"class.WTF::String"* %77 to i8*
  br i1 %80, label %82, label %88, !prof !7

82:                                               ; preds = %76
  %83 = load i32, i32* %8, align 4
  %84 = zext i32 %83 to i64
  %85 = shl nuw nsw i64 %84, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %72, i8* nonnull align 8 %81, i64 %85, i1 false) #9
  %86 = bitcast %"class.WTF::Vector.592"* %0 to i8**
  %87 = load i8*, i8** %86, align 8
  br label %88

88:                                               ; preds = %82, %76
  %89 = phi i8* [ %87, %82 ], [ %81, %76 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %89) #9
  %90 = bitcast %"class.WTF::Vector.592"* %0 to i64*
  store atomic i64 %73, i64* %90 monotonic, align 8
  br label %91

91:                                               ; preds = %88, %74
  %92 = lshr i64 %71, 3
  %93 = trunc i64 %92 to i32
  store i32 %93, i32* %58, align 8
  %94 = bitcast i8* %72 to %"class.WTF::String"*
  br label %95

95:                                               ; preds = %91, %53
  %96 = phi %"class.WTF::String"* [ %5, %53 ], [ %94, %91 ]
  %97 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 %57
  br label %98

98:                                               ; preds = %49, %29, %13, %95
  %99 = phi %"class.WTF::String"* [ %97, %95 ], [ %2, %13 ], [ %2, %29 ], [ %2, %49 ]
  ret %"class.WTF::String"* %99
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.11, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.592"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.592", %"class.WTF::Vector.592"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector.592", %"class.WTF::Vector.592"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::String"*, %"class.WTF::String"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 %25
  ret %"class.WTF::String"* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.592"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.592", %"class.WTF::Vector.592"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS1_(%"class.WTF::Vector.592"* %0, i32 %5, %"class.WTF::String"* %1) #9
  %7 = getelementptr inbounds %"class.WTF::Vector.592", %"class.WTF::Vector.592"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::String"*, %"class.WTF::String"** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 %10, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #9
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !3

29:                                               ; preds = %20
  tail call void @llvm.trap() #9
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %2, %15, %30
  %33 = load i32, i32* %3, align 4
  %34 = add i32 %33, 1
  store i32 %34, i32* %3, align 4
  ret void
}

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = !{!"branch_weights", i32 1, i32 1048575}
!7 = !{!"branch_weights", i32 2000, i32 1}
