; ModuleID = '../../components/viz/service/display/software_renderer.cc'
source_filename = "../../components/viz/service/display/software_renderer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%struct.SkCubicResampler = type { float, float }
%union.anon.134 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.209 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.210 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%class.SkPaint = type <{ %class.sk_sp.223, %class.sk_sp.224, %class.sk_sp.225, %class.sk_sp.226, %class.sk_sp.117, %struct.SkRGBA4f, float, float, %union.anon.227, [4 x i8] }>
%class.sk_sp.223 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.224 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.225 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.226 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.117 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon.227 = type { %struct.anon }
%struct.anon = type { i32 }
%"class.viz::SoftwareRenderer" = type { %"class.viz::DirectRenderer.base", %"class.base::flat_map.191", i8, i8, %"class.gfx::Rect", %"class.viz::SoftwareOutputDevice"*, %class.SkCanvas*, %class.SkCanvas*, %class.SkPaint, %"class.std::__1::unique_ptr.228" }
%"class.viz::DirectRenderer.base" = type <{ i32 (...)**, %"class.viz::RendererSettings"*, %"struct.viz::DebugRendererSettings"*, %"class.viz::OutputSurface"*, %"class.viz::DisplayResourceProvider"*, %"class.viz::OverlayProcessorInterface"*, i8, i8, i8, [5 x i8], %"class.base::flat_map.66", %"class.base::flat_map.76", %"class.base::flat_map.76", %"class.base::flat_map.86", %"class.base::flat_map.96", i8, i8, [2 x i8], %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Rect", i8, [3 x i8], %"class.gfx::Rect", %"class.gfx::Size", %"struct.viz::DirectRenderer::DrawingFrame", i8, [7 x i8], %"class.base::TimeTicks", %"class.gfx::Size", %"class.gfx::Size", float, %"class.gfx::ColorSpace", %"class.absl::optional.186", i8 }>
%"class.viz::DisplayResourceProvider" = type <{ %"class.base::trace_event::MemoryDumpProvider", i32, [4 x i8], %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.31", %"class.base::flat_map", %class.scoped_refptr.64, i32, %"class.viz::ResourceIdGenerator", i32, i32, i8, [3 x i8] }>
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.12", %"class.std::__1::__compressed_pair.21", %"class.std::__1::__compressed_pair.26", %"class.std::__1::__compressed_pair.28", [4 x i8] }>
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14", %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { i64 }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { float }
%"class.std::__1::unordered_map.31" = type { %"class.std::__1::__hash_table.32" }
%"class.std::__1::__hash_table.32" = type <{ %"class.std::__1::unique_ptr.33", %"class.std::__1::__compressed_pair.43", %"class.std::__1::__compressed_pair.48", %"class.std::__1::__compressed_pair.51", [4 x i8] }>
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35", %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.std::__1::__hash_node_base.36"** }
%"struct.std::__1::__hash_node_base.36" = type { %"struct.std::__1::__hash_node_base.36"* }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.std::__1::__bucket_list_deallocator.38" }
%"class.std::__1::__bucket_list_deallocator.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.std::__1::__hash_node_base.36" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.57" }
%"class.std::__1::vector.57" = type { %"class.std::__1::__vector_base.58" }
%"class.std::__1::__vector_base.58" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.59" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"struct.std::__1::pair"* }
%class.scoped_refptr.64 = type { %"class.viz::ResourceFence"* }
%"class.viz::ResourceFence" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.65", [4 x i8] }>
%"class.base::RefCountedThreadSafe.65" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.viz::ResourceIdGenerator" = type { i32, i32 }
%"class.base::flat_map.66" = type { %"class.base::internal::flat_tree.67" }
%"class.base::internal::flat_tree.67" = type { %"class.std::__1::vector.68" }
%"class.std::__1::vector.68" = type { %"class.std::__1::__vector_base.69" }
%"class.std::__1::__vector_base.69" = type { %"struct.std::__1::pair.70"*, %"struct.std::__1::pair.70"*, %"class.std::__1::__compressed_pair.71" }
%"struct.std::__1::pair.70" = type opaque
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"struct.std::__1::pair.70"* }
%"class.base::flat_map.76" = type { %"class.base::internal::flat_tree.77" }
%"class.base::internal::flat_tree.77" = type { %"class.std::__1::vector.78" }
%"class.std::__1::vector.78" = type { %"class.std::__1::__vector_base.79" }
%"class.std::__1::__vector_base.79" = type { %"struct.std::__1::pair.80"*, %"struct.std::__1::pair.80"*, %"class.std::__1::__compressed_pair.81" }
%"struct.std::__1::pair.80" = type opaque
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"struct.std::__1::pair.80"* }
%"class.base::flat_map.86" = type { %"class.base::internal::flat_tree.87" }
%"class.base::internal::flat_tree.87" = type { %"class.std::__1::vector.88" }
%"class.std::__1::vector.88" = type { %"class.std::__1::__vector_base.89" }
%"class.std::__1::__vector_base.89" = type { %"struct.std::__1::pair.90"*, %"struct.std::__1::pair.90"*, %"class.std::__1::__compressed_pair.91" }
%"struct.std::__1::pair.90" = type opaque
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"struct.std::__1::pair.90"* }
%"class.base::flat_map.96" = type { %"class.base::internal::flat_tree.97" }
%"class.base::internal::flat_tree.97" = type { %"class.std::__1::vector.98" }
%"class.std::__1::vector.98" = type { %"class.std::__1::__vector_base.99" }
%"class.std::__1::__vector_base.99" = type { %"struct.std::__1::pair.100"*, %"struct.std::__1::pair.100"*, %"class.std::__1::__compressed_pair.101" }
%"struct.std::__1::pair.100" = type opaque
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"struct.std::__1::pair.100"* }
%"struct.viz::DirectRenderer::DrawingFrame" = type { %"class.std::__1::vector.106"*, %"class.viz::AggregatedRenderPass"*, %"class.viz::AggregatedRenderPass"*, %"class.gfx::Rect", %"class.std::__1::vector.118", %"class.gfx::Size", %"class.gfx::DisplayColorSpaces", %"class.gfx::Transform", %"class.gfx::Transform", %"class.std::__1::vector.172", %"class.absl::optional.181" }
%"class.std::__1::vector.106" = type { %"class.std::__1::__vector_base.107" }
%"class.std::__1::__vector_base.107" = type { %"class.std::__1::unique_ptr.108"*, %"class.std::__1::unique_ptr.108"*, %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::unique_ptr.108" = type opaque
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.std::__1::unique_ptr.108"* }
%"class.viz::AggregatedRenderPass" = type <{ %"class.viz::RenderPassInternal", %"class.util::IdType", i8, i8, [6 x i8] }>
%"class.viz::RenderPassInternal" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Transform", %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.130", i8, i8, i8, i8, %"class.std::__1::vector.135", %"class.viz::QuadList", %"class.cc::ListContainer.166" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.114" }
%"class.std::__1::vector.114" = type { %"class.std::__1::__vector_base.115" }
%"class.std::__1::__vector_base.115" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.125" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.116, [20 x float], i32, [4 x i8], %"class.std::__1::vector.118", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.116 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.117, i32, %"class.absl::optional", i8, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %struct.SkRect }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.130" = type { %"class.absl::optional_internal::optional_data.131" }
%"class.absl::optional_internal::optional_data.131" = type { %"class.absl::optional_internal::optional_data_base.132" }
%"class.absl::optional_internal::optional_data_base.132" = type { %"class.absl::optional_internal::optional_data_dtor_base.133" }
%"class.absl::optional_internal::optional_data_dtor_base.133" = type { i8, %union.anon.134 }
%"class.std::__1::vector.135" = type { %"class.std::__1::__vector_base.136" }
%"class.std::__1::__vector_base.136" = type { %"class.std::__1::unique_ptr.137"*, %"class.std::__1::unique_ptr.137"*, %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.viz::CopyOutputRequest"* }
%"class.viz::CopyOutputRequest" = type { i8, %"class.base::OnceCallback", %class.scoped_refptr.3, %"class.gfx::Vector2d", %"class.gfx::Vector2d", %"class.absl::optional.142", %"class.absl::optional.147", %"class.absl::optional.147" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.140 }
%class.scoped_refptr.140 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.141", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.141" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.3 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.gfx::Vector2d" = type { i32, i32 }
%"class.absl::optional.142" = type { %"class.absl::optional_internal::optional_data.143" }
%"class.absl::optional_internal::optional_data.143" = type { %"class.absl::optional_internal::optional_data_base.144" }
%"class.absl::optional_internal::optional_data_base.144" = type { %"class.absl::optional_internal::optional_data_dtor_base.145" }
%"class.absl::optional_internal::optional_data_dtor_base.145" = type { i8, %union.anon.146 }
%union.anon.146 = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.147" = type { %"class.absl::optional_internal::optional_data.148" }
%"class.absl::optional_internal::optional_data.148" = type { %"class.absl::optional_internal::optional_data_base.149" }
%"class.absl::optional_internal::optional_data_base.149" = type { %"class.absl::optional_internal::optional_data_dtor_base.150" }
%"class.absl::optional_internal::optional_data_dtor_base.150" = type { i8, %union.anon.151 }
%union.anon.151 = type { %"class.gfx::Rect" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.std::__1::unique_ptr.137"* }
%"class.viz::QuadList" = type { %"class.cc::ListContainer" }
%"class.cc::ListContainer" = type { %"class.cc::ListContainerHelper" }
%"class.cc::ListContainerHelper" = type { %"class.std::__1::unique_ptr.160" }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.cc::ListContainerHelper::CharAllocator"* }
%"class.cc::ListContainerHelper::CharAllocator" = type opaque
%"class.cc::ListContainer.166" = type { %"class.cc::ListContainerHelper" }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"class.std::__1::vector.118" = type { %"class.std::__1::__vector_base.119" }
%"class.std::__1::__vector_base.119" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.gfx::Rect"* }
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.167" }
%"class.absl::optional.167" = type { %"class.absl::optional_internal::optional_data.168" }
%"class.absl::optional_internal::optional_data.168" = type { %"class.absl::optional_internal::optional_data_base.169" }
%"class.absl::optional_internal::optional_data_base.169" = type { %"class.absl::optional_internal::optional_data_dtor_base.170" }
%"class.absl::optional_internal::optional_data_dtor_base.170" = type { i8, %union.anon.171 }
%union.anon.171 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.std::__1::vector.172" = type { %"class.std::__1::__vector_base.173" }
%"class.std::__1::__vector_base.173" = type { %"class.viz::OverlayCandidate"*, %"class.viz::OverlayCandidate"*, %"class.std::__1::__compressed_pair.176" }
%"class.viz::OverlayCandidate" = type { i32, i32, %"class.gfx::ColorSpace", %"class.gfx::Size", %"class.gfx::RectF", %"class.gfx::RectF", %"class.absl::optional.147", i8, i8, %"class.util::IdType.174", %"struct.gpu::Mailbox", i32, i8, i32, i32, i32, i8, i8, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.util::IdType.174" = type { %"class.base::StrongAlias.175" }
%"class.base::StrongAlias.175" = type { i32 }
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.viz::OverlayCandidate"* }
%"class.absl::optional.181" = type { %"class.absl::optional_internal::optional_data.182" }
%"class.absl::optional_internal::optional_data.182" = type { %"class.absl::optional_internal::optional_data_base.183" }
%"class.absl::optional_internal::optional_data_base.183" = type { %"class.absl::optional_internal::optional_data_dtor_base.184" }
%"class.absl::optional_internal::optional_data_dtor_base.184" = type { i8, %union.anon.185 }
%union.anon.185 = type { %"struct.viz::OverlayProcessorInterface::OutputSurfaceOverlayPlane" }
%"struct.viz::OverlayProcessorInterface::OutputSurfaceOverlayPlane" = type { i32, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::Size", i32, %"class.gfx::ColorSpace", i8, i32, %"struct.gpu::Mailbox" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.186" = type { %"class.absl::optional_internal::optional_data.187" }
%"class.absl::optional_internal::optional_data.187" = type { %"class.absl::optional_internal::optional_data_base.188" }
%"class.absl::optional_internal::optional_data_base.188" = type { %"class.absl::optional_internal::optional_data_dtor_base.189" }
%"class.absl::optional_internal::optional_data_dtor_base.189" = type { i8, %union.anon.190 }
%union.anon.190 = type { i32 }
%"class.base::flat_map.191" = type { %"class.base::internal::flat_tree.192" }
%"class.base::internal::flat_tree.192" = type { %"class.std::__1::vector.193" }
%"class.std::__1::vector.193" = type { %"class.std::__1::__vector_base.194" }
%"class.std::__1::__vector_base.194" = type { %"struct.std::__1::pair.195"*, %"struct.std::__1::pair.195"*, %"class.std::__1::__compressed_pair.204" }
%"struct.std::__1::pair.195" = type { %"class.util::IdType", %class.SkBitmap }
%class.SkBitmap = type { %class.sk_sp.196, %class.SkPixmap, %class.sk_sp.203 }
%class.sk_sp.196 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.197, i32, i32 }
%class.sk_sp.197 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.198" }
%"struct.std::__1::atomic.198" = type { %"struct.std::__1::__atomic_base.199" }
%"struct.std::__1::__atomic_base.199" = type { %"struct.std::__1::__atomic_base.200" }
%"struct.std::__1::__atomic_base.200" = type { %"struct.std::__1::__cxx_atomic_impl.201" }
%"struct.std::__1::__cxx_atomic_impl.201" = type { %"struct.std::__1::__cxx_atomic_base_impl.202" }
%"struct.std::__1::__cxx_atomic_base_impl.202" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.203 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.std::__1::pair.195"* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.viz::SoftwareOutputDevice" = type { i32 (...)**, %class.scoped_refptr.3, %"class.viz::SoftwareOutputDeviceClient"*, %"class.gfx::Size", %"class.gfx::Rect", %class.sk_sp, %"class.std::__1::unique_ptr.5" }
%"class.viz::SoftwareOutputDeviceClient" = type { i32 (...)** }
%class.sk_sp = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.gfx::VSyncProvider"* }
%"class.gfx::VSyncProvider" = type opaque
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.209, [384 x i64], %class.sk_sp.210, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.211", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.217" }
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %class.SkCanvas* }
%"class.viz::RendererSettings" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i32, i32, i32, i32, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"struct.viz::DebugRendererSettings" = type { i8, i8, i8, i8, i8 }
%"class.viz::OutputSurface" = type { i32 (...)**, %"struct.viz::OutputSurface::Capabilities", %class.scoped_refptr, %"class.std::__1::unique_ptr", i32, %class.SkMatrix44 }
%"struct.viz::OutputSurface::Capabilities" = type { i32, i32, i8, i32, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, [15 x i32] }
%class.scoped_refptr = type { %"class.viz::ContextProvider"* }
%"class.viz::ContextProvider" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.viz::SoftwareOutputDevice"* }
%"class.viz::DisplayResourceProviderSoftware" = type { %"class.viz::DisplayResourceProvider.base", %"class.viz::SharedBitmapManager"*, %"class.base::flat_map.234" }
%"class.viz::DisplayResourceProvider.base" = type <{ %"class.base::trace_event::MemoryDumpProvider", i32, [4 x i8], %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.31", %"class.base::flat_map", %class.scoped_refptr.64, i32, %"class.viz::ResourceIdGenerator", i32, i32, i8 }>
%"class.viz::SharedBitmapManager" = type opaque
%"class.base::flat_map.234" = type { %"class.base::internal::flat_tree.235" }
%"class.base::internal::flat_tree.235" = type { %"class.std::__1::vector.236" }
%"class.std::__1::vector.236" = type { %"class.std::__1::__vector_base.237" }
%"class.std::__1::__vector_base.237" = type { %"struct.std::__1::pair.238"*, %"struct.std::__1::pair.238"*, %"class.std::__1::__compressed_pair.239" }
%"struct.std::__1::pair.238" = type opaque
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"struct.std::__1::pair.238"* }
%"class.viz::OverlayProcessorInterface" = type { i32 (...)** }
%"class.viz::DirectRenderer" = type <{ i32 (...)**, %"class.viz::RendererSettings"*, %"struct.viz::DebugRendererSettings"*, %"class.viz::OutputSurface"*, %"class.viz::DisplayResourceProvider"*, %"class.viz::OverlayProcessorInterface"*, i8, i8, i8, [5 x i8], %"class.base::flat_map.66", %"class.base::flat_map.76", %"class.base::flat_map.76", %"class.base::flat_map.86", %"class.base::flat_map.96", i8, i8, [2 x i8], %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Rect", i8, [3 x i8], %"class.gfx::Rect", %"class.gfx::Size", %"struct.viz::DirectRenderer::DrawingFrame", i8, [7 x i8], %"class.base::TimeTicks", %"class.gfx::Size", %"class.gfx::Size", float, %"class.gfx::ColorSpace", %"class.absl::optional.186", i8, [7 x i8] }>
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"struct.viz::DirectRenderer::SwapFrameData" = type <{ %"class.std::__1::vector.244", i8, [7 x i8] }>
%"class.std::__1::vector.244" = type { %"class.std::__1::__vector_base.245" }
%"class.std::__1::__vector_base.245" = type { %"class.ui::LatencyInfo"*, %"class.ui::LatencyInfo"*, %"class.std::__1::__compressed_pair.256" }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map.246", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map.246" = type { %"class.base::internal::flat_tree.247" }
%"class.base::internal::flat_tree.247" = type { %"class.std::__1::vector.248" }
%"class.std::__1::vector.248" = type { %"class.std::__1::__vector_base.249" }
%"class.std::__1::__vector_base.249" = type { %"struct.std::__1::pair.250"*, %"struct.std::__1::pair.250"*, %"class.std::__1::__compressed_pair.251" }
%"struct.std::__1::pair.250" = type opaque
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"struct.std::__1::pair.250"* }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.ui::LatencyInfo"* }
%"class.viz::OutputSurfaceFrame" = type { %"class.gfx::Size", %"class.absl::optional.147", %"class.std::__1::vector.118", %"class.std::__1::vector.244", i8, %"class.std::__1::unique_ptr.261" }
%"class.std::__1::unique_ptr.261" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.gfx::DelegatedInkMetadata"* }
%"class.gfx::DelegatedInkMetadata" = type <{ %"class.gfx::PointF", double, i32, [4 x i8], %"class.base::TimeTicks", %"class.gfx::RectF", %"class.base::TimeTicks", i8, [7 x i8] }>
%class.SkMatrix = type { [9 x float], i32 }
%"class.viz::DrawQuad" = type <{ i32 (...)**, i32, %"class.gfx::Rect", %"class.gfx::Rect", i8, [3 x i8], %"class.viz::SharedQuadState"*, %"struct.viz::DrawQuad::Resources", [4 x i8] }>
%"class.viz::SharedQuadState" = type <{ %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::MaskFilterInfo", %"class.absl::optional.147", i8, [3 x i8], float, i32, i32, i8, [3 x i8], %"class.absl::optional.267", float, i8, [3 x i8] }>
%"class.gfx::MaskFilterInfo" = type { %"class.gfx::RRectF" }
%"class.absl::optional.267" = type { %"class.absl::optional_internal::optional_data.268" }
%"class.absl::optional_internal::optional_data.268" = type { %"class.absl::optional_internal::optional_data_base.269" }
%"class.absl::optional_internal::optional_data_base.269" = type { %"class.absl::optional_internal::optional_data_dtor_base.270" }
%"class.absl::optional_internal::optional_data_dtor_base.270" = type { i8, %union.anon.271 }
%union.anon.271 = type { i64 }
%"struct.viz::DrawQuad::Resources" = type { i32, [4 x %"class.util::IdType.174"] }
%"class.gfx::QuadF" = type { %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF" }
%class.SkPath = type <{ %class.sk_sp.272, i32, %"struct.std::__1::atomic.198", %"struct.std::__1::atomic.198", i8, i8 }>
%class.sk_sp.272 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.273, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.274, %class.SkTDArray.275, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.273 = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.274 = type { i8*, i32, i32 }
%class.SkTDArray.275 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.276 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.276 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.277", [3 x i8] }
%"struct.std::__1::atomic.277" = type { %"struct.std::__1::__atomic_base.278" }
%"struct.std::__1::__atomic_base.278" = type { %"struct.std::__1::__cxx_atomic_impl.279" }
%"struct.std::__1::__cxx_atomic_impl.279" = type { %"struct.std::__1::__cxx_atomic_base_impl.280" }
%"struct.std::__1::__cxx_atomic_base_impl.280" = type { i8 }
%"class.gfx::Vector2dF" = type { float, float }
%"class.viz::AggregatedRenderPassDrawQuad" = type { %"class.viz::RenderPassDrawQuadInternal.base", %"class.util::IdType" }
%"class.viz::RenderPassDrawQuadInternal.base" = type <{ %"class.viz::DrawQuad.base", %"class.gfx::RectF", %"class.gfx::Size", %"class.gfx::Vector2dF", %"class.gfx::PointF", %"class.gfx::RectF", float, i8, i8 }>
%"class.viz::DrawQuad.base" = type <{ i32 (...)**, i32, %"class.gfx::Rect", %"class.gfx::Rect", i8, [3 x i8], %"class.viz::SharedQuadState"*, %"struct.viz::DrawQuad::Resources" }>
%"class.viz::DebugBorderDrawQuad" = type { %"class.viz::DrawQuad.base", i32, i32, [4 x i8] }
%"class.viz::PictureDrawQuad" = type <{ %"class.viz::ContentDrawQuadBase.base", i8, %"class.gfx::Rect", float, [4 x i8], %"class.base::flat_map.281", %class.scoped_refptr.291, i32, [4 x i8] }>
%"class.viz::ContentDrawQuadBase.base" = type <{ %"class.viz::DrawQuad.base", %"class.gfx::RectF", %"class.gfx::Size", i8, i8, i8 }>
%"class.base::flat_map.281" = type { %"class.base::internal::flat_tree.282" }
%"class.base::internal::flat_tree.282" = type { %"class.std::__1::vector.283" }
%"class.std::__1::vector.283" = type { %"class.std::__1::__vector_base.284" }
%"class.std::__1::__vector_base.284" = type { %"struct.std::__1::pair.285"*, %"struct.std::__1::pair.285"*, %"class.std::__1::__compressed_pair.286" }
%"struct.std::__1::pair.285" = type { i32, i64 }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"struct.std::__1::pair.285"* }
%class.scoped_refptr.291 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type <{ %"class.base::RefCountedThreadSafe.292", [4 x i8], %"class.cc::RTree", %"class.cc::DiscardableImageMap", %"class.cc::PaintOpBuffer", %"class.std::__1::vector.118", %"class.std::__1::vector.366", %"class.std::__1::vector.373", i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe.292" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.cc::RTree" = type <{ i64, %"struct.cc::RTree<unsigned long>::Branch", %"class.std::__1::vector.293", i8, [7 x i8] }>
%"struct.cc::RTree<unsigned long>::Branch" = type { %"struct.cc::RTree<unsigned long>::Node"*, i64, %"class.gfx::Rect" }
%"struct.cc::RTree<unsigned long>::Node" = type opaque
%"class.std::__1::vector.293" = type { %"class.std::__1::__vector_base.294" }
%"class.std::__1::__vector_base.294" = type { %"struct.cc::RTree<unsigned long>::Node"*, %"struct.cc::RTree<unsigned long>::Node"*, %"class.std::__1::__compressed_pair.295" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"struct.std::__1::__compressed_pair_elem.296" = type { %"struct.cc::RTree<unsigned long>::Node"* }
%"class.cc::DiscardableImageMap" = type { %"class.base::flat_map.300", %"class.std::__1::vector.310", %"class.base::flat_map.324", i8, i8, [6 x i8], %"class.cc::RTree.334", %"class.std::__1::vector.358" }
%"class.base::flat_map.300" = type { %"class.base::internal::flat_tree.301" }
%"class.base::internal::flat_tree.301" = type { %"class.std::__1::vector.302" }
%"class.std::__1::vector.302" = type { %"class.std::__1::__vector_base.303" }
%"class.std::__1::__vector_base.303" = type { %"struct.std::__1::pair.304"*, %"struct.std::__1::pair.304"*, %"class.std::__1::__compressed_pair.305" }
%"struct.std::__1::pair.304" = type opaque
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"struct.std::__1::pair.304"* }
%"class.std::__1::vector.310" = type { %"class.std::__1::__vector_base.311" }
%"class.std::__1::__vector_base.311" = type { %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"*, %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"*, %"class.std::__1::__compressed_pair.319" }
%"struct.cc::DiscardableImageMap::AnimatedImageMetadata" = type { i32, i32, %"class.std::__1::vector.312", i32, i32 }
%"class.std::__1::vector.312" = type { %"class.std::__1::__vector_base.313" }
%"class.std::__1::__vector_base.313" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.314" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.315" = type { %"struct.cc::FrameMetadata"* }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"* }
%"class.base::flat_map.324" = type { %"class.base::internal::flat_tree.325" }
%"class.base::internal::flat_tree.325" = type { %"class.std::__1::vector.326" }
%"class.std::__1::vector.326" = type { %"class.std::__1::__vector_base.327" }
%"class.std::__1::__vector_base.327" = type { %"struct.std::__1::pair.328"*, %"struct.std::__1::pair.328"*, %"class.std::__1::__compressed_pair.329" }
%"struct.std::__1::pair.328" = type { i32, i32 }
%"class.std::__1::__compressed_pair.329" = type { %"struct.std::__1::__compressed_pair_elem.330" }
%"struct.std::__1::__compressed_pair_elem.330" = type { %"struct.std::__1::pair.328"* }
%"class.cc::RTree.334" = type <{ i64, %"struct.cc::RTree<cc::DrawImage>::Branch", %"class.std::__1::vector.350", i8, [7 x i8] }>
%"struct.cc::RTree<cc::DrawImage>::Branch" = type { %"struct.cc::RTree<cc::DrawImage>::Node"*, %"class.cc::DrawImage", %"class.gfx::Rect" }
%"struct.cc::RTree<cc::DrawImage>::Node" = type opaque
%"class.cc::DrawImage" = type <{ %"class.cc::PaintImage", i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], %"class.absl::optional.267", %"class.absl::optional.345", float, [4 x i8] }>
%"class.cc::PaintImage" = type { %class.sk_sp.335, %class.sk_sp.336, %"class.gfx::Rect", i32, %class.sk_sp.341, %class.sk_sp.342, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.335, %class.scoped_refptr.343 }
%class.sk_sp.336 = type { %"class.cc::PaintOpBuffer"* }
%class.sk_sp.341 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type opaque
%class.sk_sp.342 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.sk_sp.335 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.scoped_refptr.343 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.344", [4 x i8] }>
%"class.base::RefCountedThreadSafe.344" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%struct.SkSize = type { float, float }
%"class.absl::optional.345" = type { %"class.absl::optional_internal::optional_data.346" }
%"class.absl::optional_internal::optional_data.346" = type { %"class.absl::optional_internal::optional_data_base.347" }
%"class.absl::optional_internal::optional_data_base.347" = type { %"class.absl::optional_internal::optional_data_dtor_base.348" }
%"class.absl::optional_internal::optional_data_dtor_base.348" = type { i8, %union.anon.349 }
%union.anon.349 = type { %"class.gfx::ColorSpace" }
%"class.std::__1::vector.350" = type { %"class.std::__1::__vector_base.351" }
%"class.std::__1::__vector_base.351" = type { %"struct.cc::RTree<cc::DrawImage>::Node"*, %"struct.cc::RTree<cc::DrawImage>::Node"*, %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"struct.cc::RTree<cc::DrawImage>::Node"* }
%"class.std::__1::vector.358" = type { %"class.std::__1::__vector_base.359" }
%"class.std::__1::__vector_base.359" = type { %"struct.std::__1::pair.360"*, %"struct.std::__1::pair.360"*, %"class.std::__1::__compressed_pair.361" }
%"struct.std::__1::pair.360" = type opaque
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"struct.std::__1::pair.360"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.337", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.339" }
%"struct.std::__1::__compressed_pair_elem.339" = type { i8* }
%"class.std::__1::vector.366" = type { %"class.std::__1::__vector_base.367" }
%"class.std::__1::__vector_base.367" = type { i64*, i64*, %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.369" }
%"struct.std::__1::__compressed_pair_elem.369" = type { i64* }
%"class.std::__1::vector.373" = type { %"class.std::__1::__vector_base.374" }
%"class.std::__1::__vector_base.374" = type { %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"class.std::__1::__compressed_pair.375" }
%"struct.cc::DisplayItemList::PairedBeginInfo" = type { i64, i64 }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.376" }
%"struct.std::__1::__compressed_pair_elem.376" = type { %"struct.cc::DisplayItemList::PairedBeginInfo"* }
%"class.viz::SolidColorDrawQuad" = type <{ %"class.viz::DrawQuad.base", i32, i8, [7 x i8] }>
%"class.viz::TextureDrawQuad" = type { %"class.viz::DrawQuad.base", %"class.gfx::PointF", %"class.gfx::PointF", i32, [4 x float], i8, i32, %"struct.viz::TextureDrawQuad::OverlayResources" }
%"struct.viz::TextureDrawQuad::OverlayResources" = type { %"class.gfx::Size" }
%"class.viz::TileDrawQuad" = type { %"class.viz::ContentDrawQuadBase.base", i8 }
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%"class.viz::DisplayResourceProviderSoftware::ScopedReadLockSkImage" = type { %"class.viz::DisplayResourceProviderSoftware"*, %"class.util::IdType.174", %class.sk_sp.335 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.absl::optional.380" = type { %"class.absl::optional_internal::optional_data.381" }
%"class.absl::optional_internal::optional_data.381" = type { %"class.absl::optional_internal::optional_data_base.382" }
%"class.absl::optional_internal::optional_data_base.382" = type { %"class.absl::optional_internal::optional_data_dtor_base.383" }
%"class.absl::optional_internal::optional_data_dtor_base.383" = type { i8, [7 x i8], %union.anon.384 }
%union.anon.384 = type { %"class.skia::OpacityFilterCanvas" }
%"class.skia::OpacityFilterCanvas" = type <{ %class.SkPaintFilterCanvas, float, i8, [3 x i8] }>
%class.SkPaintFilterCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkNWayCanvas }
%class.SkNWayCanvas = type { %class.SkCanvasVirtualEnforcer.385, %class.SkTDArray.387 }
%class.SkCanvasVirtualEnforcer.385 = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer.386 }
%class.SkCanvasVirtualEnforcer.386 = type { %class.SkCanvas }
%class.SkTDArray.387 = type { %class.SkCanvas**, i32, i32 }
%"class.cc::ScopedSubnormalFloatDisabler" = type { i32 }
%"class.viz::(anonymous namespace)::AnimatedImagesProvider" = type { %"class.cc::ImageProvider", %"class.base::flat_map.281"* }
%"class.cc::ImageProvider" = type { i32 (...)** }
%class.GrDirectContext = type opaque
%"struct.viz::copy_output::RenderPassGeometry" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Vector2d" }
%"class.SkBitmap::Allocator" = type { %class.SkRefCnt.base, [4 x i8] }
%"class.viz::CopyOutputSkBitmapResult" = type { %"class.viz::CopyOutputResult" }
%"class.viz::CopyOutputResult" = type { i32 (...)**, i8, %"class.gfx::Rect", i8, %class.SkBitmap }
%"class.base::flat_map.404" = type { %"class.base::internal::flat_tree.405" }
%"class.base::internal::flat_tree.405" = type { %"class.std::__1::vector.406" }
%"class.std::__1::vector.406" = type { %"class.std::__1::__vector_base.407" }
%"class.std::__1::__vector_base.407" = type { %"struct.std::__1::pair.408"*, %"struct.std::__1::pair.408"*, %"class.std::__1::__compressed_pair.409" }
%"struct.std::__1::pair.408" = type <{ %"class.util::IdType", %"struct.viz::DirectRenderer::RenderPassRequirements", [4 x i8] }>
%"struct.viz::DirectRenderer::RenderPassRequirements" = type <{ %"class.gfx::Size", i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.410" }
%"struct.std::__1::__compressed_pair_elem.410" = type { %"struct.std::__1::pair.408"* }
%"class.std::__1::vector.414" = type { %"class.std::__1::__vector_base.415" }
%"class.std::__1::__vector_base.415" = type { %"class.util::IdType"*, %"class.util::IdType"*, %"class.std::__1::__compressed_pair.416" }
%"class.std::__1::__compressed_pair.416" = type { %"struct.std::__1::__compressed_pair_elem.417" }
%"struct.std::__1::__compressed_pair_elem.417" = type { %"class.util::IdType"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.gfx::GpuFenceHandle" = type { %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.std::__1::vector.426" = type opaque
%"class.std::__1::vector.427" = type opaque
%"class.viz::DelegatedInkPointRendererBase" = type { %"class.gfx::mojom::DelegatedInkPointRenderer", %"class.std::__1::unique_ptr.261", %"class.absl::optional.428", %"class.std::__1::unordered_map.433", %"class.mojo::Receiver" }
%"class.gfx::mojom::DelegatedInkPointRenderer" = type { i32 (...)** }
%"class.absl::optional.428" = type { %"class.absl::optional_internal::optional_data.429" }
%"class.absl::optional_internal::optional_data.429" = type { %"class.absl::optional_internal::optional_data_base.430" }
%"class.absl::optional_internal::optional_data_base.430" = type { %"class.absl::optional_internal::optional_data_dtor_base.431" }
%"class.absl::optional_internal::optional_data_dtor_base.431" = type { i8, %union.anon.432 }
%union.anon.432 = type { i32 }
%"class.std::__1::unordered_map.433" = type { %"class.std::__1::__hash_table.434" }
%"class.std::__1::__hash_table.434" = type <{ %"class.std::__1::unique_ptr.435", %"class.std::__1::__compressed_pair.445", %"class.std::__1::__compressed_pair.450", %"class.std::__1::__compressed_pair.453", [4 x i8] }>
%"class.std::__1::unique_ptr.435" = type { %"class.std::__1::__compressed_pair.436" }
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem.437", %"struct.std::__1::__compressed_pair_elem.439" }
%"struct.std::__1::__compressed_pair_elem.437" = type { %"struct.std::__1::__hash_node_base.438"** }
%"struct.std::__1::__hash_node_base.438" = type { %"struct.std::__1::__hash_node_base.438"* }
%"struct.std::__1::__compressed_pair_elem.439" = type { %"class.std::__1::__bucket_list_deallocator.440" }
%"class.std::__1::__bucket_list_deallocator.440" = type { %"class.std::__1::__compressed_pair.441" }
%"class.std::__1::__compressed_pair.441" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"struct.std::__1::__hash_node_base.438" }
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.gfx::mojom::DelegatedInkPointRendererStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.457, %"class.std::__1::unique_ptr.568", %"class.base::WeakPtrFactory.618" }
%class.scoped_refptr.457 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.3, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.534", %"class.absl::optional.539", %"class.absl::optional.496", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.559", i8, [7 x i8], %class.scoped_refptr.3, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.458" }>
%"class.base::RefCountedThreadSafe.458" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.459" }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.460" }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.461 }
%union.anon.461 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.466", %"class.std::__1::unique_ptr.472", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.466" = type { %"class.std::__1::__compressed_pair.467" }
%"class.std::__1::__compressed_pair.467" = type { %"struct.std::__1::__compressed_pair_elem.468" }
%"struct.std::__1::__compressed_pair_elem.468" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.472" = type { %"class.std::__1::__compressed_pair.473" }
%"class.std::__1::__compressed_pair.473" = type { %"struct.std::__1::__compressed_pair_elem.474" }
%"struct.std::__1::__compressed_pair_elem.474" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.478 }
%class.scoped_refptr.478 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.479", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.479" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.198" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback.480", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.3, %"class.std::__1::unique_ptr.481", %"class.absl::optional.490", %"struct.std::__1::atomic.277", i8, i8, i8, i8, i32, i32, %"class.absl::optional.496", %"class.std::__1::unique_ptr.501", i8, i64, %class.scoped_refptr.530, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.533" }
%"class.base::OnceCallback.480" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.481" = type { %"class.std::__1::__compressed_pair.482" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.3, i8, %"class.mojo::ScopedHandleBase.484", %class.scoped_refptr.485, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.486" }
%"class.mojo::ScopedHandleBase.484" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.485 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.486" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.490" = type { %"class.absl::optional_internal::optional_data.491" }
%"class.absl::optional_internal::optional_data.491" = type { %"class.absl::optional_internal::optional_data_base.492" }
%"class.absl::optional_internal::optional_data_base.492" = type { %"class.absl::optional_internal::optional_data_dtor_base.493" }
%"class.absl::optional_internal::optional_data_dtor_base.493" = type { i8, %union.anon.494 }
%union.anon.494 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.495", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.495" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.501" = type { %"class.std::__1::__compressed_pair.502" }
%"class.std::__1::__compressed_pair.502" = type { %"struct.std::__1::__compressed_pair_elem.503" }
%"struct.std::__1::__compressed_pair_elem.503" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.504", i8, i64, %class.scoped_refptr.505, %class.scoped_refptr.526 }
%"class.base::RepeatingCallback.504" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.505 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.515", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.506 }
%class.scoped_refptr.506 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.507", %"class.std::__1::__compressed_pair.512" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.512" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::map.515" = type { %"class.std::__1::__tree.516" }
%"class.std::__1::__tree.516" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.517", %"class.std::__1::__compressed_pair.521" }
%"class.std::__1::__compressed_pair.517" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"class.std::__1::__compressed_pair.521" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%class.scoped_refptr.526 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.530 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.531 }
%class.scoped_refptr.531 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.619", [4 x i8], %"class.base::RepeatingCallback.571", %class.scoped_refptr.3, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.620", [4 x i8] }>
%"class.base::RefCountedThreadSafe.619" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.571" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.std::__1::atomic.620" = type { %"struct.std::__1::__atomic_base.621" }
%"struct.std::__1::__atomic_base.621" = type { %"struct.std::__1::__atomic_base.622" }
%"struct.std::__1::__atomic_base.622" = type { %"struct.std::__1::__cxx_atomic_impl.623" }
%"struct.std::__1::__cxx_atomic_impl.623" = type { %"struct.std::__1::__cxx_atomic_base_impl.624" }
%"struct.std::__1::__cxx_atomic_base_impl.624" = type { i32 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.532 }
%class.scoped_refptr.532 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.533" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.absl::optional.534" = type { %"class.absl::optional_internal::optional_data.535" }
%"class.absl::optional_internal::optional_data.535" = type { %"class.absl::optional_internal::optional_data_base.536" }
%"class.absl::optional_internal::optional_data_base.536" = type { %"class.absl::optional_internal::optional_data_dtor_base.537" }
%"class.absl::optional_internal::optional_data_dtor_base.537" = type { i8, %union.anon.538 }
%union.anon.538 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.539" = type { %"class.absl::optional_internal::optional_data.540" }
%"class.absl::optional_internal::optional_data.540" = type { %"class.absl::optional_internal::optional_data_base.541" }
%"class.absl::optional_internal::optional_data_base.541" = type { %"class.absl::optional_internal::optional_data_dtor_base.542" }
%"class.absl::optional_internal::optional_data_dtor_base.542" = type { i8, [7 x i8], %union.anon.543 }
%union.anon.543 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.496" = type { %"class.absl::optional_internal::optional_data.497" }
%"class.absl::optional_internal::optional_data.497" = type { %"class.absl::optional_internal::optional_data_base.498" }
%"class.absl::optional_internal::optional_data_base.498" = type { %"class.absl::optional_internal::optional_data_dtor_base.499" }
%"class.absl::optional_internal::optional_data_dtor_base.499" = type { i8, %union.anon.500 }
%union.anon.500 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.544 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.544 = type { %"class.std::__1::map.547" }
%"class.std::__1::map.547" = type { %"class.std::__1::__tree.548" }
%"class.std::__1::__tree.548" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.549", %"class.std::__1::__compressed_pair.553" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"class.std::__1::__compressed_pair.553" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.558"*, i64 }
%"class.std::__1::unique_ptr.558" = type opaque
%"class.std::__1::map.559" = type { %"class.std::__1::__tree.560" }
%"class.std::__1::__tree.560" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.561", %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.568" = type { %"class.std::__1::__compressed_pair.569" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.571", %"class.base::OnceCallback.572", %"class.absl::optional.573", %"class.absl::optional.578", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.585", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.593", %"class.std::__1::map.604", i64, %"class.base::OnceCallback.480", %"class.base::OnceCallback.613", i8, %class.scoped_refptr.3, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.614" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.572" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.573" = type { %"class.absl::optional_internal::optional_data.574" }
%"class.absl::optional_internal::optional_data.574" = type { %"class.absl::optional_internal::optional_data_base.575" }
%"class.absl::optional_internal::optional_data_base.575" = type { %"class.absl::optional_internal::optional_data_dtor_base.576" }
%"class.absl::optional_internal::optional_data_dtor_base.576" = type { i8, %union.anon.577 }
%union.anon.577 = type { %"class.base::TimeDelta" }
%"class.absl::optional.578" = type { %"class.absl::optional_internal::optional_data.579" }
%"class.absl::optional_internal::optional_data.579" = type { %"class.absl::optional_internal::optional_data_base.580" }
%"class.absl::optional_internal::optional_data_base.580" = type { %"class.absl::optional_internal::optional_data_dtor_base.581" }
%"class.absl::optional_internal::optional_data_dtor_base.581" = type { i8, %union.anon.582 }
%union.anon.582 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.480" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.3, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.583" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory.583" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.584 }
%class.scoped_refptr.584 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.585" = type { %"class.std::__1::__compressed_pair.586" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.587" }
%"struct.std::__1::__compressed_pair_elem.587" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.588", %class.scoped_refptr.589 }
%"class.base::RepeatingCallback.588" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.589 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.458", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.593" = type { %"class.std::__1::__tree.594" }
%"class.std::__1::__tree.594" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.595", %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.595" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::map.604" = type { %"class.std::__1::__tree.605" }
%"class.std::__1::__tree.605" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.606", %"class.std::__1::__compressed_pair.610" }
%"class.std::__1::__compressed_pair.606" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.base::OnceCallback.613" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback.480" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.614" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtrFactory.618" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.gfx::mojom::DelegatedInkPointRendererStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.gfx::mojom::DelegatedInkPointRenderer"* }
%"class.viz::DelegatedInkPointRendererSkia" = type { %"class.viz::DelegatedInkPointRendererBase", %class.SkPath, %"class.gfx::RectF", %"class.gfx::RectF" }
%"class.cc::ImageProvider::ScopedResult" = type { %"class.cc::DecodedDrawImage", %class.sk_sp.336, %"class.base::OnceCallback.480" }
%"class.cc::DecodedDrawImage" = type <{ %class.sk_sp.649, %"struct.gpu::Mailbox", %"class.absl::optional.650", %class.sk_sp.226, %struct.SkSize, %struct.SkSize, i32, i8, i8, [2 x i8] }>
%class.sk_sp.649 = type { %class.SkImage* }
%"class.absl::optional.650" = type { %"class.absl::optional_internal::optional_data.651" }
%"class.absl::optional_internal::optional_data.651" = type { %"class.absl::optional_internal::optional_data_base.652" }
%"class.absl::optional_internal::optional_data_base.652" = type { %"class.absl::optional_internal::optional_data_dtor_base.653" }
%"class.absl::optional_internal::optional_data_dtor_base.653" = type { i8, %union.anon.654 }
%union.anon.654 = type { i32 }
%"struct.std::__1::__temp_value" = type { %"struct.std::__1::aligned_storage<64, 8>::type", %"class.std::__1::allocator.207"* }
%"struct.std::__1::aligned_storage<64, 8>::type" = type { [64 x i8] }
%"class.std::__1::allocator.207" = type { i8 }
%"struct.std::__1::__split_buffer.674" = type { %"struct.std::__1::pair.195"*, %"struct.std::__1::pair.195"*, %"struct.std::__1::pair.195"*, %"class.std::__1::__compressed_pair.675" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.205", %"struct.std::__1::__compressed_pair_elem.676" }
%"struct.std::__1::__compressed_pair_elem.676" = type { %"class.std::__1::allocator.207"* }

$_ZN2cc13ImageProviderD2Ev = comdat any

$_ZN4base8internal9flat_treeIN4util6IdTypeIN3viz20AggregatedRenderPassEmLm0ELm1EEENS0_8GetFirstENSt3__14lessIvEENS8_6vectorINS8_4pairIS6_8SkBitmapEENS8_9allocatorISE_EEEEE5eraseIS6_EEmRKT_ = comdat any

$_ZN3viz14DirectRenderer18SwapBuffersSkippedEv = comdat any

$_ZN3viz14DirectRenderer19SwapBuffersCompleteEN3gfx14GpuFenceHandleE = comdat any

$_ZN3viz14DirectRenderer16BuffersPresentedEv = comdat any

$_ZN3viz14DirectRenderer31DidReceiveTextureInUseResponsesERKNSt3__16vectorIN3gpu20TextureInUseResponseENS1_9allocatorIS4_EEEE = comdat any

$_ZN3viz14DirectRenderer26DidReceiveReleasedOverlaysERKNSt3__16vectorIN3gpu7MailboxENS1_9allocatorIS4_EEEE = comdat any

$_ZN3viz14DirectRenderer23SetDelegatedInkMetadataENSt3__110unique_ptrIN3gfx20DelegatedInkMetadataENS1_14default_deleteIS4_EEEE = comdat any

$_ZN3viz14DirectRenderer21FlushOverdrawFeedbackERKN3gfx4RectE = comdat any

$_ZN3viz14DirectRenderer21FinishDrawingQuadListEv = comdat any

$_ZN3viz14DirectRenderer39SetDelegatedInkPointRendererSkiaForTestENSt3__110unique_ptrINS_29DelegatedInkPointRendererSkiaENS1_14default_deleteIS3_EEEE = comdat any

$_ZNSt3__16vectorINS_4pairIN4util6IdTypeIN3viz20AggregatedRenderPassEmLm0ELm1EEE8SkBitmapEENS_9allocatorIS8_EEE7emplaceIJS8_EEENS_11__wrap_iterIPS8_EENSD_IPKS8_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferINS_4pairIN4util6IdTypeIN3viz20AggregatedRenderPassEmLm0ELm1EEE8SkBitmapEERNS_9allocatorIS8_EEE12emplace_backIJS8_EEEvDpOT_ = comdat any

@_ZTVN3viz16SoftwareRendererE = hidden unnamed_addr constant { [37 x i8*] } { [37 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.viz::SoftwareRenderer"*)* @_ZN3viz16SoftwareRendererD2Ev to i8*), i8* bitcast (void (%"class.viz::SoftwareRenderer"*)* @_ZN3viz16SoftwareRendererD0Ev to i8*), i8* bitcast (void (%"class.viz::SoftwareRenderer"*, %"struct.viz::DirectRenderer::SwapFrameData"*)* @_ZN3viz16SoftwareRenderer11SwapBuffersENS_14DirectRenderer13SwapFrameDataE to i8*), i8* bitcast (void (%"class.viz::DirectRenderer"*)* @_ZN3viz14DirectRenderer18SwapBuffersSkippedEv to i8*), i8* bitcast (void (%"class.viz::DirectRenderer"*, %"struct.gfx::GpuFenceHandle"*)* @_ZN3viz14DirectRenderer19SwapBuffersCompleteEN3gfx14GpuFenceHandleE to i8*), i8* bitcast (void (%"class.viz::DirectRenderer"*)* @_ZN3viz14DirectRenderer16BuffersPresentedEv to i8*), i8* bitcast (void (%"class.viz::DirectRenderer"*, %"class.std::__1::vector.426"*)* @_ZN3viz14DirectRenderer31DidReceiveTextureInUseResponsesERKNSt3__16vectorIN3gpu20TextureInUseResponseENS1_9allocatorIS4_EEEE to i8*), i8* bitcast (void (%"class.viz::DirectRenderer"*, %"class.std::__1::vector.427"*)* @_ZN3viz14DirectRenderer26DidReceiveReleasedOverlaysERKNSt3__16vectorIN3gpu7MailboxENS1_9allocatorIS4_EEEE to i8*), i8* bitcast (%"class.viz::DelegatedInkPointRendererBase"* (%"class.viz::DirectRenderer"*, i1)* @_ZN3viz14DirectRenderer28GetDelegatedInkPointRendererEb to i8*), i8* bitcast (void (%"class.viz::DirectRenderer"*, %"class.gfx::DelegatedInkMetadata"*)* @_ZN3viz14DirectRenderer23SetDelegatedInkMetadataENSt3__110unique_ptrIN3gfx20DelegatedInkMetadataENS1_14default_deleteIS4_EEEE to i8*), i8* bitcast (i1 (%"class.viz::DirectRenderer"*)* @_ZN3viz14DirectRenderer27CompositeTimeTracingEnabledEv to i8*), i8* bitcast (void (%"class.viz::DirectRenderer"*, i64)* @_ZN3viz14DirectRenderer22AddCompositeTimeTracesEN4base9TimeTicksE to i8*), i8* bitcast (i1 (%"class.viz::SoftwareRenderer"*)* @_ZN3viz16SoftwareRenderer14CanPartialSwapEv to i8*), i8* bitcast (void (%"class.viz::SoftwareRenderer"*, %"class.std::__1::vector.106"*, %"class.base::flat_map.404"*)* @_ZN3viz16SoftwareRenderer24UpdateRenderPassTexturesERKNSt3__16vectorINS1_10unique_ptrINS_20AggregatedRenderPassENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEERKN4base8flat_mapIN4util6IdTypeIS4_mLm0ELm1EEENS_14DirectRenderer22RenderPassRequirementsENS1_4lessIvEENS2_INS1_4pairISH_SJ_EENS8_ISN_EEEEEE to i8*), i8* bitcast (void (%"class.viz::SoftwareRenderer"*, %"class.util::IdType"*, %"struct.viz::DirectRenderer::RenderPassRequirements"*)* @_ZN3viz16SoftwareRenderer34AllocateRenderPassResourceIfNeededERKN4util6IdTypeINS_20AggregatedRenderPassEmLm0ELm1EEERKNS_14DirectRenderer22RenderPassRequirementsE to i8*), i8* bitcast (i1 (%"class.viz::SoftwareRenderer"*, %"class.util::IdType"*)* @_ZNK3viz16SoftwareRenderer29IsRenderPassResourceAllocatedERKN4util6IdTypeINS_20AggregatedRenderPassEmLm0ELm1EEE to i8*), i8* bitcast (i64 (%"class.viz::SoftwareRenderer"*, %"class.util::IdType"*)* @_ZN3viz16SoftwareRenderer29GetRenderPassBackingPixelSizeERKN4util6IdTypeINS_20AggregatedRenderPassEmLm0ELm1EEE to i8*), i8* bitcast (void (%"class.viz::SoftwareRenderer"*)* @_ZN3viz16SoftwareRenderer30BindFramebufferToOutputSurfaceEv to i8*), i8* bitcast (void (%"class.viz::SoftwareRenderer"*, i64)* @_ZN3viz16SoftwareRenderer24BindFramebufferToTextureEN4util6IdTypeINS_20AggregatedRenderPassEmLm0ELm1EEE to i8*), i8* bitcast (void (%"class.viz::SoftwareRenderer"*, %"class.gfx::Rect"*)* @_ZN3viz16SoftwareRenderer18SetScissorTestRectERKN3gfx4RectE to i8*), i8* bitcast (void (%"class.viz::SoftwareRenderer"*, i32, %"class.gfx::Rect"*)* @_ZN3viz16SoftwareRenderer21PrepareSurfaceForPassENS_14DirectRenderer25SurfaceInitializationModeERKN3gfx4RectE to i8*), i8* bitcast (void (%"class.viz::SoftwareRenderer"*, %"class.viz::DrawQuad"*, %"class.gfx::QuadF"*)* @_ZN3viz16SoftwareRenderer10DoDrawQuadEPKNS_8DrawQuadEPKN3gfx5QuadFE to i8*), i8* bitcast (void (%"class.viz::SoftwareRenderer"*)* @_ZN3viz16SoftwareRenderer17BeginDrawingFrameEv to i8*), i8* bitcast (void (%"class.viz::DirectRenderer"*, %"class.gfx::Rect"*)* @_ZN3viz14DirectRenderer21FlushOverdrawFeedbackERKN3gfx4RectE to i8*), i8* bitcast (void (%"class.viz::SoftwareRenderer"*)* @_ZN3viz16SoftwareRenderer18FinishDrawingFrameEv to i8*), i8* bitcast (%"class.viz::DrawQuad"* (%"class.viz::DirectRenderer"*, %"class.viz::AggregatedRenderPass"*)* @_ZN3viz14DirectRenderer22CanPassBeDrawnDirectlyEPKNS_20AggregatedRenderPassE to i8*), i8* bitcast (void (%"class.viz::DirectRenderer"*)* @_ZN3viz14DirectRenderer21FinishDrawingQuadListEv to i8*), i8* bitcast (i1 (%"class.viz::SoftwareRenderer"*)* @_ZNK3viz16SoftwareRenderer18FlippedFramebufferEv to i8*), i8* bitcast (void (%"class.viz::SoftwareRenderer"*)* @_ZN3viz16SoftwareRenderer24EnsureScissorTestEnabledEv to i8*), i8* bitcast (void (%"class.viz::SoftwareRenderer"*)* @_ZN3viz16SoftwareRenderer25EnsureScissorTestDisabledEv to i8*), i8* bitcast (void (%"class.viz::SoftwareRenderer"*)* @_ZN3viz16SoftwareRenderer19DidChangeVisibilityEv to i8*), i8* bitcast (void (%"class.viz::SoftwareRenderer"*, %"struct.viz::copy_output::RenderPassGeometry"*, %"class.viz::CopyOutputRequest"*)* @_ZN3viz16SoftwareRenderer19CopyDrawnRenderPassERKNS_11copy_output18RenderPassGeometryENSt3__110unique_ptrINS_17CopyOutputRequestENS5_14default_deleteIS7_EEEE to i8*), i8* bitcast (void (%"class.viz::SoftwareRenderer"*)* @_ZN3viz16SoftwareRenderer14GenerateMipmapEv to i8*), i8* bitcast (void (%"class.viz::DirectRenderer"*, %"class.viz::DelegatedInkPointRendererSkia"*)* @_ZN3viz14DirectRenderer39SetDelegatedInkPointRendererSkiaForTestENSt3__110unique_ptrINS_29DelegatedInkPointRendererSkiaENS1_14default_deleteIS3_EEEE to i8*), i8* bitcast (void (%"class.viz::DirectRenderer"*)* @_ZN3viz14DirectRenderer21DrawDelegatedInkTrailEv to i8*)] }, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [36 x i8] c"SoftwareRenderer::BeginDrawingFrame\00", align 1
@.str.1 = private unnamed_addr constant [37 x i8] c"SoftwareRenderer::FinishDrawingFrame\00", align 1
@.str.2 = private unnamed_addr constant [30 x i8] c"SoftwareRenderer::SwapBuffers\00", align 1
@.str.3 = private unnamed_addr constant [29 x i8] c"SoftwareRenderer::DoDrawQuad\00", align 1
@.str.4 = private unnamed_addr constant [34 x i8] c"SoftwareRenderer::DrawPictureQuad\00", align 1
@__const._ZN3viz16SoftwareRenderer18DrawRenderPassQuadEPKNS_28AggregatedRenderPassDrawQuadE.sampling = private unnamed_addr constant { i8, [3 x i8], %struct.SkCubicResampler, i32, i32 } { i8 -86, [3 x i8] c"\AA\AA\AA", %struct.SkCubicResampler { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766, i32 -1431655766 }, align 4
@__const._ZNK3viz16SoftwareRenderer23GetBackdropFilterShaderEPKNS_28AggregatedRenderPassDrawQuadE10SkTileMode.backdrop_filter_bounds_input = private unnamed_addr constant { { { { i8, [3 x i8], %union.anon.134 } } } } { { { { i8, [3 x i8], %union.anon.134 } } } { { { i8, [3 x i8], %union.anon.134 } } { { i8, [3 x i8], %union.anon.134 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.134 { %"class.gfx::RRectF" { %class.SkRRect { %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, [4 x %struct.SkPoint] [%struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }], i32 -1431655766 } } } } } } }, align 4
@__const._ZNK3viz16SoftwareRenderer23GetBackdropFilterShaderEPKNS_28AggregatedRenderPassDrawQuadE10SkTileMode.contents_device_transform_inverse = private unnamed_addr constant %"class.gfx::Transform" { %class.SkMatrix44 <{ [4 x [4 x float]] [[4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], i8 -86, [3 x i8] c"\AA\AA\AA" }> }, align 4
@__const._ZNK3viz16SoftwareRenderer23GetBackdropFilterShaderEPKNS_28AggregatedRenderPassDrawQuadE10SkTileMode.canvas = private unnamed_addr constant { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.209, [384 x i64], %class.sk_sp.210, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.211", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.217" } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %class.SkDeque { i8* inttoptr (i64 -6148914691236517206 to i8*), i8* inttoptr (i64 -6148914691236517206 to i8*), %"struct.SkDeque::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDeque::Block"*), %"struct.SkDeque::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDeque::Block"*), i64 -6148914691236517206, i8* inttoptr (i64 -6148914691236517206 to i8*), i32 -1431655766, i32 -1431655766 }, %"class.SkCanvas::MCRec"* inttoptr (i64 -6148914691236517206 to %"class.SkCanvas::MCRec"*), %class.sk_sp.209 { %class.SkMarkerStack* inttoptr (i64 -6148914691236517206 to %class.SkMarkerStack*) }, [384 x i64] [i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206], %class.sk_sp.210 { %class.SkBaseDevice* inttoptr (i64 -6148914691236517206 to %class.SkBaseDevice*) }, %class.SkSurfaceProps { i32 -1431655766, i32 -1431655766 }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::unique_ptr.211" { %"class.std::__1::__compressed_pair.212" { %"struct.std::__1::__compressed_pair_elem.213" { %class.SkRasterHandleAllocator* inttoptr (i64 -6148914691236517206 to %class.SkRasterHandleAllocator*) } } }, %class.SkSurface_Base* inttoptr (i64 -6148914691236517206 to %class.SkSurface_Base*), %struct.SkIRect { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.std::__1::unique_ptr.217" { %"class.std::__1::__compressed_pair.218" { %"struct.std::__1::__compressed_pair_elem.219" { %class.SkGlyphRunBuilder* inttoptr (i64 -6148914691236517206 to %class.SkGlyphRunBuilder*) } } } }, align 8
@__const._ZNK3viz16SoftwareRenderer23GetBackdropFilterShaderEPKNS_28AggregatedRenderPassDrawQuadE10SkTileMode.paint = private unnamed_addr constant %class.SkPaint <{ %class.sk_sp.223 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.224 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.sk_sp.225 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.226 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.117 { %class.SkImageFilter* inttoptr (i64 -6148914691236517206 to %class.SkImageFilter*) }, %struct.SkRGBA4f { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %union.anon.227 { %struct.anon { i32 -1431655766 } }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@constinit.5 = private unnamed_addr constant [4 x [4 x float]] [[4 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00]], align 4
@_ZTVN3viz12_GLOBAL__N_122AnimatedImagesProviderE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::ImageProvider"*)* @_ZN2cc13ImageProviderD2Ev to i8*), i8* bitcast (void (%"class.viz::(anonymous namespace)::AnimatedImagesProvider"*)* @_ZN3viz12_GLOBAL__N_122AnimatedImagesProviderD0Ev to i8*), i8* bitcast (void (%"class.cc::ImageProvider::ScopedResult"*, %"class.viz::(anonymous namespace)::AnimatedImagesProvider"*, %"class.cc::DrawImage"*)* @_ZN3viz12_GLOBAL__N_122AnimatedImagesProvider16GetRasterContentERKN2cc9DrawImageE to i8*)] }, align 8
@_ZN2cc10PaintImage18kDefaultFrameIndexE = external local_unnamed_addr constant i64, align 8
@_ZN2cc10PaintImage25kDefaultGeneratorClientIdE = external local_unnamed_addr constant i32, align 4

@_ZN3viz16SoftwareRendererC1EPKNS_16RendererSettingsEPKNS_21DebugRendererSettingsEPNS_13OutputSurfaceEPNS_31DisplayResourceProviderSoftwareEPNS_25OverlayProcessorInterfaceE = hidden unnamed_addr alias void (%"class.viz::SoftwareRenderer"*, %"class.viz::RendererSettings"*, %"struct.viz::DebugRendererSettings"*, %"class.viz::OutputSurface"*, %"class.viz::DisplayResourceProviderSoftware"*, %"class.viz::OverlayProcessorInterface"*), void (%"class.viz::SoftwareRenderer"*, %"class.viz::RendererSettings"*, %"struct.viz::DebugRendererSettings"*, %"class.viz::OutputSurface"*, %"class.viz::DisplayResourceProviderSoftware"*, %"class.viz::OverlayProcessorInterface"*)* @_ZN3viz16SoftwareRendererC2EPKNS_16RendererSettingsEPKNS_21DebugRendererSettingsEPNS_13OutputSurfaceEPNS_31DisplayResourceProviderSoftwareEPNS_25OverlayProcessorInterfaceE
@_ZN3viz16SoftwareRendererD1Ev = hidden unnamed_addr alias void (%"class.viz::SoftwareRenderer"*), void (%"class.viz::SoftwareRenderer"*)* @_ZN3viz16SoftwareRendererD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16SoftwareRendererC2EPKNS_16RendererSettingsEPKNS_21DebugRendererSettingsEPNS_13OutputSurfaceEPNS_31DisplayResourceProviderSoftwareEPNS_25OverlayProcessorInterfaceE(%"class.viz::SoftwareRenderer"*, %"class.viz::RendererSettings"*, %"struct.viz::DebugRendererSettings"*, %"class.viz::OutputSurface"*, %"class.viz::DisplayResourceProviderSoftware"*, %"class.viz::OverlayProcessorInterface"*) unnamed_addr #0 align 2 {
  %7 = bitcast %"class.viz::SoftwareRenderer"* %0 to %"class.viz::DirectRenderer"*
  %8 = bitcast %"class.viz::DisplayResourceProviderSoftware"* %4 to %"class.viz::DisplayResourceProvider"*
  tail call void @_ZN3viz14DirectRendererC2EPKNS_16RendererSettingsEPKNS_21DebugRendererSettingsEPNS_13OutputSurfaceEPNS_23DisplayResourceProviderEPNS_25OverlayProcessorInterfaceE(%"class.viz::DirectRenderer"* %7, %"class.viz::RendererSettings"* %1, %"struct.viz::DebugRendererSettings"* %2, %"class.viz::OutputSurface"* %3, %"class.viz::DisplayResourceProvider"* %8, %"class.viz::OverlayProcessorInterface"* %5) #15
  %9 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [37 x i8*] }, { [37 x i8*] }* @_ZTVN3viz16SoftwareRendererE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 4
  %12 = bitcast %"class.gfx::Rect"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 0, i64 16, i1 false) #15
  %13 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 5
  %14 = getelementptr inbounds %"class.viz::OutputSurface", %"class.viz::OutputSurface"* %3, i64 0, i32 3, i32 0, i32 0, i32 0
  %15 = bitcast %"class.viz::SoftwareOutputDevice"** %14 to i64*
  %16 = bitcast %"class.base::flat_map.191"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 26, i1 false)
  %17 = load i64, i64* %15, align 8
  %18 = bitcast %"class.viz::SoftwareOutputDevice"** %13 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 6
  %20 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 8
  %21 = bitcast %class.SkCanvas** %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false)
  tail call void @_ZN7SkPaintC1Ev(%class.SkPaint* %20) #15
  %22 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 9
  %23 = bitcast %"class.std::__1::unique_ptr.228"* %22 to i64*
  store i64 0, i64* %23, align 8
  ret void
}

declare void @_ZN3viz14DirectRendererC2EPKNS_16RendererSettingsEPKNS_21DebugRendererSettingsEPNS_13OutputSurfaceEPNS_23DisplayResourceProviderEPNS_25OverlayProcessorInterfaceE(%"class.viz::DirectRenderer"*, %"class.viz::RendererSettings"*, %"struct.viz::DebugRendererSettings"*, %"class.viz::OutputSurface"*, %"class.viz::DisplayResourceProvider"*, %"class.viz::OverlayProcessorInterface"*) unnamed_addr #1

declare void @_ZN7SkPaintC1Ev(%class.SkPaint*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16SoftwareRendererD2Ev(%"class.viz::SoftwareRenderer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [37 x i8*] }, { [37 x i8*] }* @_ZTVN3viz16SoftwareRendererE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %4 = load %class.SkCanvas*, %class.SkCanvas** %3, align 8
  store %class.SkCanvas* null, %class.SkCanvas** %3, align 8
  %5 = icmp eq %class.SkCanvas* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.SkCanvas* %4 to void (%class.SkCanvas*)***
  %8 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %8, i64 1
  %10 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %9, align 8
  tail call void %10(%class.SkCanvas* nonnull %4) #15
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 8
  tail call void @_ZN7SkPaintD1Ev(%class.SkPaint* %12) #15
  %13 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.base::internal::flat_tree.192", %"class.base::internal::flat_tree.192"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"struct.std::__1::pair.195"*, %"struct.std::__1::pair.195"** %14, align 8
  %16 = icmp eq %"struct.std::__1::pair.195"* %15, null
  br i1 %16, label %32, label %17

17:                                               ; preds = %11
  %18 = bitcast %"struct.std::__1::pair.195"* %15 to i8*
  %19 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %20 = load %"struct.std::__1::pair.195"*, %"struct.std::__1::pair.195"** %19, align 8
  %21 = icmp eq %"struct.std::__1::pair.195"* %20, %15
  br i1 %21, label %30, label %22

22:                                               ; preds = %17, %22
  %23 = phi %"struct.std::__1::pair.195"* [ %24, %22 ], [ %20, %17 ]
  %24 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %23, i64 -1
  %25 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %23, i64 -1, i32 1
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %25) #15
  %26 = icmp eq %"struct.std::__1::pair.195"* %24, %15
  br i1 %26, label %27, label %22

27:                                               ; preds = %22
  %28 = bitcast %"class.base::internal::flat_tree.192"* %13 to i8**
  %29 = load i8*, i8** %28, align 8
  br label %30

30:                                               ; preds = %27, %17
  %31 = phi i8* [ %29, %27 ], [ %18, %17 ]
  store %"struct.std::__1::pair.195"* %15, %"struct.std::__1::pair.195"** %19, align 8
  tail call void @_ZdlPv(i8* %31) #16
  br label %32

32:                                               ; preds = %11, %30
  %33 = bitcast %"class.viz::SoftwareRenderer"* %0 to %"class.viz::DirectRenderer"*
  tail call void @_ZN3viz14DirectRendererD2Ev(%"class.viz::DirectRenderer"* %33) #15
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3viz14DirectRendererD2Ev(%"class.viz::DirectRenderer"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16SoftwareRendererD0Ev(%"class.viz::SoftwareRenderer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [37 x i8*] }, { [37 x i8*] }* @_ZTVN3viz16SoftwareRendererE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %4 = load %class.SkCanvas*, %class.SkCanvas** %3, align 8
  store %class.SkCanvas* null, %class.SkCanvas** %3, align 8
  %5 = icmp eq %class.SkCanvas* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.SkCanvas* %4 to void (%class.SkCanvas*)***
  %8 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %8, i64 1
  %10 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %9, align 8
  tail call void %10(%class.SkCanvas* nonnull %4) #15
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 8
  tail call void @_ZN7SkPaintD1Ev(%class.SkPaint* %12) #15
  %13 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.base::internal::flat_tree.192", %"class.base::internal::flat_tree.192"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"struct.std::__1::pair.195"*, %"struct.std::__1::pair.195"** %14, align 8
  %16 = icmp eq %"struct.std::__1::pair.195"* %15, null
  br i1 %16, label %32, label %17

17:                                               ; preds = %11
  %18 = bitcast %"struct.std::__1::pair.195"* %15 to i8*
  %19 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %20 = load %"struct.std::__1::pair.195"*, %"struct.std::__1::pair.195"** %19, align 8
  %21 = icmp eq %"struct.std::__1::pair.195"* %20, %15
  br i1 %21, label %30, label %22

22:                                               ; preds = %17, %22
  %23 = phi %"struct.std::__1::pair.195"* [ %24, %22 ], [ %20, %17 ]
  %24 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %23, i64 -1
  %25 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %23, i64 -1, i32 1
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %25) #15
  %26 = icmp eq %"struct.std::__1::pair.195"* %24, %15
  br i1 %26, label %27, label %22

27:                                               ; preds = %22
  %28 = bitcast %"class.base::internal::flat_tree.192"* %13 to i8**
  %29 = load i8*, i8** %28, align 8
  br label %30

30:                                               ; preds = %27, %17
  %31 = phi i8* [ %29, %27 ], [ %18, %17 ]
  store %"struct.std::__1::pair.195"* %15, %"struct.std::__1::pair.195"** %19, align 8
  tail call void @_ZdlPv(i8* %31) #16
  br label %32

32:                                               ; preds = %11, %30
  %33 = bitcast %"class.viz::SoftwareRenderer"* %0 to %"class.viz::DirectRenderer"*
  tail call void @_ZN3viz14DirectRendererD2Ev(%"class.viz::DirectRenderer"* %33) #15
  %34 = bitcast %"class.viz::SoftwareRenderer"* %0 to i8*
  tail call void @_ZdlPv(i8* %34) #16
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN3viz16SoftwareRenderer14CanPartialSwapEv(%"class.viz::SoftwareRenderer"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16SoftwareRenderer17BeginDrawingFrameEv(%"class.viz::SoftwareRenderer"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), align 16
  %4 = and i8 %3, 25
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %15, label %6, !prof !2

6:                                                ; preds = %1
  %7 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #15
  %8 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #15
  %9 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %10 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #15
  store i64 %10, i64* %9, align 8
  %11 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %7, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 0) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #15
  %12 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), align 16
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %6
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i64 %11) #15
  br label %15

15:                                               ; preds = %1, %6, %14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16SoftwareRenderer18FinishDrawingFrameEv(%"class.viz::SoftwareRenderer"* nocapture) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), align 16
  %4 = and i8 %3, 25
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %12, label %6, !prof !2

6:                                                ; preds = %1
  %7 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #15
  %8 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #15
  %9 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %10 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #15
  store i64 %10, i64* %9, align 8
  %11 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %7, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 0) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #15
  br label %12

12:                                               ; preds = %1, %6
  %13 = phi i64 [ -6148914691236517206, %1 ], [ %11, %6 ]
  %14 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), %6 ]
  %15 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), %6 ]
  %16 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %17 = load %class.SkCanvas*, %class.SkCanvas** %16, align 8
  store %class.SkCanvas* null, %class.SkCanvas** %16, align 8
  %18 = icmp eq %class.SkCanvas* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %12
  %20 = bitcast %class.SkCanvas* %17 to void (%class.SkCanvas*)***
  %21 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %20, align 8
  %22 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %21, i64 1
  %23 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %22, align 8
  call void %23(%class.SkCanvas* nonnull %17) #15
  br label %24

24:                                               ; preds = %12, %19
  %25 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 7
  store %class.SkCanvas* null, %class.SkCanvas** %25, align 8
  %26 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 6
  %27 = load %class.SkCanvas*, %class.SkCanvas** %26, align 8
  %28 = icmp eq %class.SkCanvas* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 5
  %31 = load %"class.viz::SoftwareOutputDevice"*, %"class.viz::SoftwareOutputDevice"** %30, align 8
  %32 = bitcast %"class.viz::SoftwareOutputDevice"* %31 to void (%"class.viz::SoftwareOutputDevice"*)***
  %33 = load void (%"class.viz::SoftwareOutputDevice"*)**, void (%"class.viz::SoftwareOutputDevice"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.viz::SoftwareOutputDevice"*)*, void (%"class.viz::SoftwareOutputDevice"*)** %33, i64 4
  %35 = load void (%"class.viz::SoftwareOutputDevice"*)*, void (%"class.viz::SoftwareOutputDevice"*)** %34, align 8
  call void %35(%"class.viz::SoftwareOutputDevice"* %31) #15
  br label %36

36:                                               ; preds = %24, %29
  store %class.SkCanvas* null, %class.SkCanvas** %26, align 8
  %37 = icmp eq i8* %15, null
  br i1 %37, label %42, label %38

38:                                               ; preds = %36
  %39 = load i8, i8* %15, align 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %42, label %41

41:                                               ; preds = %38
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %15, i8* %14, i64 %13) #15
  br label %42

42:                                               ; preds = %36, %38, %41
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16SoftwareRenderer11SwapBuffersENS_14DirectRenderer13SwapFrameDataE(%"class.viz::SoftwareRenderer"* nocapture readonly, %"struct.viz::DirectRenderer::SwapFrameData"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = alloca %"class.viz::OutputSurfaceFrame", align 8
  %5 = alloca %"class.viz::OutputSurfaceFrame", align 8
  %6 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), align 16
  %7 = and i8 %6, 25
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %15, label %9, !prof !2

9:                                                ; preds = %2
  %10 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #15
  %11 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #15
  %12 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %13 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #15
  store i64 %13, i64* %12, align 8
  %14 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %10, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 0) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #15
  br label %15

15:                                               ; preds = %2, %9
  %16 = phi i64 [ -6148914691236517206, %2 ], [ %14, %9 ]
  %17 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %2 ], [ getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i64 0, i64 0), %9 ]
  %18 = phi i8* [ null, %2 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), %9 ]
  %19 = bitcast %"class.viz::OutputSurfaceFrame"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %19) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 96, i1 false)
  call void @_ZN3viz18OutputSurfaceFrameC1Ev(%"class.viz::OutputSurfaceFrame"* nonnull %4) #15
  %20 = getelementptr inbounds %"class.viz::OutputSurfaceFrame", %"class.viz::OutputSurfaceFrame"* %4, i64 0, i32 3
  %21 = getelementptr inbounds %"class.std::__1::vector.244", %"class.std::__1::vector.244"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.ui::LatencyInfo"*, %"class.ui::LatencyInfo"** %21, align 8
  %23 = icmp eq %"class.ui::LatencyInfo"* %22, null
  br i1 %23, label %39, label %24

24:                                               ; preds = %15
  %25 = bitcast %"class.ui::LatencyInfo"* %22 to i8*
  %26 = getelementptr inbounds %"class.viz::OutputSurfaceFrame", %"class.viz::OutputSurfaceFrame"* %4, i64 0, i32 3, i32 0, i32 1
  %27 = load %"class.ui::LatencyInfo"*, %"class.ui::LatencyInfo"** %26, align 8
  %28 = icmp eq %"class.ui::LatencyInfo"* %27, %22
  br i1 %28, label %36, label %29

29:                                               ; preds = %24, %29
  %30 = phi %"class.ui::LatencyInfo"* [ %31, %29 ], [ %27, %24 ]
  %31 = getelementptr inbounds %"class.ui::LatencyInfo", %"class.ui::LatencyInfo"* %30, i64 -1
  call void @_ZN2ui11LatencyInfoD1Ev(%"class.ui::LatencyInfo"* %31) #15
  %32 = icmp eq %"class.ui::LatencyInfo"* %31, %22
  br i1 %32, label %33, label %29

33:                                               ; preds = %29
  %34 = bitcast %"class.std::__1::vector.244"* %20 to i8**
  %35 = load i8*, i8** %34, align 8
  br label %36

36:                                               ; preds = %33, %24
  %37 = phi i8* [ %35, %33 ], [ %25, %24 ]
  store %"class.ui::LatencyInfo"* %22, %"class.ui::LatencyInfo"** %26, align 8
  call void @_ZdlPv(i8* %37) #16
  %38 = bitcast %"class.std::__1::vector.244"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #15
  br label %39

39:                                               ; preds = %15, %36
  %40 = bitcast %"struct.viz::DirectRenderer::SwapFrameData"* %1 to <2 x i64>*
  %41 = load <2 x i64>, <2 x i64>* %40, align 8
  %42 = bitcast %"class.std::__1::vector.244"* %20 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %42, align 8
  %43 = getelementptr inbounds %"struct.viz::DirectRenderer::SwapFrameData", %"struct.viz::DirectRenderer::SwapFrameData"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %44 = bitcast %"class.ui::LatencyInfo"** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"class.viz::OutputSurfaceFrame", %"class.viz::OutputSurfaceFrame"* %4, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %47 = bitcast %"class.ui::LatencyInfo"** %46 to i64*
  store i64 %45, i64* %47, align 8
  %48 = bitcast %"struct.viz::DirectRenderer::SwapFrameData"* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 24, i1 false) #15
  %49 = getelementptr inbounds %"struct.viz::DirectRenderer::SwapFrameData", %"struct.viz::DirectRenderer::SwapFrameData"* %1, i64 0, i32 1
  %50 = load i8, i8* %49, align 8, !range !3
  %51 = getelementptr inbounds %"class.viz::OutputSurfaceFrame", %"class.viz::OutputSurfaceFrame"* %4, i64 0, i32 4
  store i8 %50, i8* %51, align 8
  %52 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 0, i32 3
  %53 = load %"class.viz::OutputSurface"*, %"class.viz::OutputSurface"** %52, align 8
  call void @_ZN3viz18OutputSurfaceFrameC1EOS0_(%"class.viz::OutputSurfaceFrame"* nonnull %5, %"class.viz::OutputSurfaceFrame"* nonnull dereferenceable(96) %4) #15
  %54 = bitcast %"class.viz::OutputSurface"* %53 to void (%"class.viz::OutputSurface"*, %"class.viz::OutputSurfaceFrame"*)***
  %55 = load void (%"class.viz::OutputSurface"*, %"class.viz::OutputSurfaceFrame"*)**, void (%"class.viz::OutputSurface"*, %"class.viz::OutputSurfaceFrame"*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.viz::OutputSurface"*, %"class.viz::OutputSurfaceFrame"*)*, void (%"class.viz::OutputSurface"*, %"class.viz::OutputSurfaceFrame"*)** %55, i64 17
  %57 = load void (%"class.viz::OutputSurface"*, %"class.viz::OutputSurfaceFrame"*)*, void (%"class.viz::OutputSurface"*, %"class.viz::OutputSurfaceFrame"*)** %56, align 8
  call void %57(%"class.viz::OutputSurface"* %53, %"class.viz::OutputSurfaceFrame"* nonnull %5) #15
  call void @_ZN3viz18OutputSurfaceFrameD1Ev(%"class.viz::OutputSurfaceFrame"* nonnull %5) #15
  call void @_ZN3viz18OutputSurfaceFrameD1Ev(%"class.viz::OutputSurfaceFrame"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %19) #15
  %58 = icmp eq i8* %18, null
  br i1 %58, label %63, label %59

59:                                               ; preds = %39
  %60 = load i8, i8* %18, align 1
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %63, label %62

62:                                               ; preds = %59
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %18, i8* %17, i64 %16) #15
  br label %63

63:                                               ; preds = %39, %59, %62
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

declare void @_ZN3viz18OutputSurfaceFrameC1Ev(%"class.viz::OutputSurfaceFrame"*) unnamed_addr #1

declare void @_ZN3viz18OutputSurfaceFrameC1EOS0_(%"class.viz::OutputSurfaceFrame"*, %"class.viz::OutputSurfaceFrame"* dereferenceable(96)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3viz18OutputSurfaceFrameD1Ev(%"class.viz::OutputSurfaceFrame"*) unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK3viz16SoftwareRenderer18FlippedFramebufferEv(%"class.viz::SoftwareRenderer"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i1 false
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3viz16SoftwareRenderer24EnsureScissorTestEnabledEv(%"class.viz::SoftwareRenderer"* nocapture) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 3
  store i8 1, i8* %2, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3viz16SoftwareRenderer25EnsureScissorTestDisabledEv(%"class.viz::SoftwareRenderer"* nocapture) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 3
  store i8 0, i8* %2, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16SoftwareRenderer30BindFramebufferToOutputSurfaceEv(%"class.viz::SoftwareRenderer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %3 = load %class.SkCanvas*, %class.SkCanvas** %2, align 8
  store %class.SkCanvas* null, %class.SkCanvas** %2, align 8
  %4 = icmp eq %class.SkCanvas* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %class.SkCanvas* %3 to void (%class.SkCanvas*)***
  %7 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %6, align 8
  %8 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %7, i64 1
  %9 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %8, align 8
  tail call void %9(%class.SkCanvas* nonnull %3) #15
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 5
  %12 = load %"class.viz::SoftwareOutputDevice"*, %"class.viz::SoftwareOutputDevice"** %11, align 8
  %13 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 0, i32 26, i32 3
  %14 = bitcast %"class.viz::SoftwareOutputDevice"* %12 to %class.SkCanvas* (%"class.viz::SoftwareOutputDevice"*, %"class.gfx::Rect"*)***
  %15 = load %class.SkCanvas* (%"class.viz::SoftwareOutputDevice"*, %"class.gfx::Rect"*)**, %class.SkCanvas* (%"class.viz::SoftwareOutputDevice"*, %"class.gfx::Rect"*)*** %14, align 8
  %16 = getelementptr inbounds %class.SkCanvas* (%"class.viz::SoftwareOutputDevice"*, %"class.gfx::Rect"*)*, %class.SkCanvas* (%"class.viz::SoftwareOutputDevice"*, %"class.gfx::Rect"*)** %15, i64 3
  %17 = load %class.SkCanvas* (%"class.viz::SoftwareOutputDevice"*, %"class.gfx::Rect"*)*, %class.SkCanvas* (%"class.viz::SoftwareOutputDevice"*, %"class.gfx::Rect"*)** %16, align 8
  %18 = tail call %class.SkCanvas* %17(%"class.viz::SoftwareOutputDevice"* %12, %"class.gfx::Rect"* dereferenceable(16) %13) #15
  %19 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 6
  store %class.SkCanvas* %18, %class.SkCanvas** %19, align 8
  %20 = icmp eq %class.SkCanvas* %18, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %10
  %22 = ptrtoint %class.SkCanvas* %18 to i64
  br label %31

23:                                               ; preds = %10
  %24 = load %"class.viz::SoftwareOutputDevice"*, %"class.viz::SoftwareOutputDevice"** %11, align 8
  %25 = bitcast %"class.viz::SoftwareOutputDevice"* %24 to void (%"class.viz::SoftwareOutputDevice"*)***
  %26 = load void (%"class.viz::SoftwareOutputDevice"*)**, void (%"class.viz::SoftwareOutputDevice"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.viz::SoftwareOutputDevice"*)*, void (%"class.viz::SoftwareOutputDevice"*)** %26, i64 4
  %28 = load void (%"class.viz::SoftwareOutputDevice"*)*, void (%"class.viz::SoftwareOutputDevice"*)** %27, align 8
  tail call void %28(%"class.viz::SoftwareOutputDevice"* %24) #15
  %29 = bitcast %class.SkCanvas** %19 to i64*
  %30 = load i64, i64* %29, align 8
  br label %31

31:                                               ; preds = %21, %23
  %32 = phi i64 [ %22, %21 ], [ %30, %23 ]
  %33 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 7
  %34 = bitcast %class.SkCanvas** %33 to i64*
  store i64 %32, i64* %34, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16SoftwareRenderer24BindFramebufferToTextureEN4util6IdTypeINS_20AggregatedRenderPassEmLm0ELm1EEE(%"class.viz::SoftwareRenderer"* nocapture, i64) unnamed_addr #0 align 2 {
  %3 = alloca %class.SkSurfaceProps, align 4
  %4 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::pair.195"*, %"struct.std::__1::pair.195"** %4, align 8
  %6 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast %"struct.std::__1::pair.195"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = ptrtoint %"struct.std::__1::pair.195"* %5 to i64
  %10 = sub i64 %8, %9
  %11 = icmp eq i64 %10, 0
  %12 = inttoptr i64 %8 to %"struct.std::__1::pair.195"*
  br i1 %11, label %31, label %13

13:                                               ; preds = %2
  %14 = ashr exact i64 %10, 6
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi %"struct.std::__1::pair.195"* [ %5, %13 ], [ %27, %15 ]
  %17 = phi i64 [ %14, %13 ], [ %26, %15 ]
  %18 = lshr i64 %17, 1
  %19 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %16, i64 %18
  %20 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp ult i64 %21, %1
  %23 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %19, i64 1
  %24 = xor i64 %18, -1
  %25 = add i64 %17, %24
  %26 = select i1 %22, i64 %25, i64 %18
  %27 = select i1 %22, %"struct.std::__1::pair.195"* %23, %"struct.std::__1::pair.195"* %16
  %28 = icmp eq i64 %26, 0
  br i1 %28, label %29, label %15

29:                                               ; preds = %15
  %30 = ptrtoint %"struct.std::__1::pair.195"* %27 to i64
  br label %31

31:                                               ; preds = %29, %2
  %32 = phi i64 [ %30, %29 ], [ %9, %2 ]
  %33 = phi %"struct.std::__1::pair.195"* [ %27, %29 ], [ %5, %2 ]
  %34 = icmp eq %"struct.std::__1::pair.195"* %33, %12
  br i1 %34, label %42, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %33, i64 0, i32 0, i32 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = icmp ugt i64 %37, %1
  br i1 %38, label %42, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %33, i64 1
  %41 = ptrtoint %"struct.std::__1::pair.195"* %40 to i64
  br label %42

42:                                               ; preds = %31, %35, %39
  %43 = phi i64 [ %41, %39 ], [ %32, %31 ], [ %32, %35 ]
  %44 = inttoptr i64 %43 to %"struct.std::__1::pair.195"*
  %45 = icmp eq %"struct.std::__1::pair.195"* %33, %44
  %46 = select i1 %45, %"struct.std::__1::pair.195"* %12, %"struct.std::__1::pair.195"* %33
  %47 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %46, i64 0, i32 1
  %48 = bitcast %class.SkSurfaceProps* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #15
  call void @_ZN4skia20LegacyDisplayGlobals17GetSkSurfacePropsEv(%class.SkSurfaceProps* nonnull sret %3) #15
  %49 = call i8* @_Znwm(i64 3232) #16
  %50 = bitcast i8* %49 to %class.SkCanvas*
  call void @_ZN8SkCanvasC1ERK8SkBitmapRK14SkSurfaceProps(%class.SkCanvas* nonnull %50, %class.SkBitmap* dereferenceable(56) %47, %class.SkSurfaceProps* nonnull dereferenceable(8) %3) #15
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 9
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr.228", %"class.std::__1::unique_ptr.228"* %52, i64 0, i32 0, i32 0, i32 0
  %54 = load %class.SkCanvas*, %class.SkCanvas** %53, align 8
  %55 = bitcast %"class.std::__1::unique_ptr.228"* %52 to i64*
  store i64 %51, i64* %55, align 8
  %56 = icmp eq %class.SkCanvas* %54, null
  br i1 %56, label %63, label %57

57:                                               ; preds = %42
  %58 = bitcast %class.SkCanvas* %54 to void (%class.SkCanvas*)***
  %59 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %58, align 8
  %60 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %59, i64 1
  %61 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %60, align 8
  call void %61(%class.SkCanvas* nonnull %54) #15
  %62 = load i64, i64* %55, align 8
  br label %63

63:                                               ; preds = %57, %42
  %64 = phi i64 [ %62, %57 ], [ %51, %42 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #15
  %65 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 7
  %66 = bitcast %class.SkCanvas** %65 to i64*
  store i64 %64, i64* %66, align 8
  ret void
}

declare void @_ZN4skia20LegacyDisplayGlobals17GetSkSurfacePropsEv(%class.SkSurfaceProps* sret) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16SoftwareRenderer18SetScissorTestRectERKN3gfx4RectE(%"class.viz::SoftwareRenderer"* nocapture, %"class.gfx::Rect"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 3
  store i8 1, i8* %3, align 1
  %4 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 4
  %5 = bitcast %"class.gfx::Rect"* %4 to i8*
  %6 = bitcast %"class.gfx::Rect"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16SoftwareRenderer11SetClipRectERKN3gfx4RectE(%"class.viz::SoftwareRenderer"* nocapture readonly, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkMatrix, align 4
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 7
  %6 = load %class.SkCanvas*, %class.SkCanvas** %5, align 8
  %7 = icmp eq %class.SkCanvas* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %2
  %9 = bitcast { <2 x float>, <2 x float> }* %4 to %struct.SkRect*
  %10 = bitcast %class.SkMatrix* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %10, i8 -1, i64 36, i1 false)
  %11 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 1
  store i32 -1431655766, i32* %11, align 4
  call void @_ZNK8SkCanvas14getTotalMatrixEv(%class.SkMatrix* nonnull sret %3, %class.SkCanvas* nonnull %6) #15
  %12 = load %class.SkCanvas*, %class.SkCanvas** %5, align 8
  call void @_ZN8SkCanvas11resetMatrixEv(%class.SkCanvas* %12) #15
  %13 = load %class.SkCanvas*, %class.SkCanvas** %5, align 8
  %14 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #15
  %15 = call { <2 x float>, <2 x float> } @_ZN3gfx12RectToSkRectERKNS_4RectE(%"class.gfx::Rect"* dereferenceable(16) %1) #15
  %16 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  %17 = extractvalue { <2 x float>, <2 x float> } %15, 0
  store <2 x float> %17, <2 x float>* %16, align 8
  %18 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  %19 = extractvalue { <2 x float>, <2 x float> } %15, 1
  store <2 x float> %19, <2 x float>* %18, align 8
  call void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas* %13, %struct.SkRect* nonnull dereferenceable(16) %9, i32 1, i1 zeroext false) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #15
  %20 = load %class.SkCanvas*, %class.SkCanvas** %5, align 8
  call void @_ZN8SkCanvas9setMatrixERK8SkMatrix(%class.SkCanvas* %20, %class.SkMatrix* nonnull dereferenceable(40) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #15
  br label %21

21:                                               ; preds = %2, %8
  ret void
}

declare void @_ZNK8SkCanvas14getTotalMatrixEv(%class.SkMatrix* sret, %class.SkCanvas*) local_unnamed_addr #1

declare void @_ZN8SkCanvas11resetMatrixEv(%class.SkCanvas*) local_unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZN3gfx12RectToSkRectERKNS_4RectE(%"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN8SkCanvas9setMatrixERK8SkMatrix(%class.SkCanvas*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16SoftwareRenderer12SetClipRRectERKN3gfx6RRectFE(%"class.viz::SoftwareRenderer"*, %"class.gfx::RRectF"* nocapture readonly dereferenceable(52)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.gfx::Transform", align 4
  %4 = alloca %class.SkRRect, align 4
  %5 = alloca %class.SkRRect, align 4
  %6 = alloca %class.SkMatrix, align 4
  %7 = alloca %class.SkMatrix, align 4
  %8 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 7
  %9 = load %class.SkCanvas*, %class.SkCanvas** %8, align 8
  %10 = icmp eq %class.SkCanvas* %9, null
  br i1 %10, label %29, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.gfx::Transform"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %12) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %12, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZNK3viz16SoftwareRenderer23GetBackdropFilterShaderEPKNS_28AggregatedRenderPassDrawQuadE10SkTileMode.contents_device_transform_inverse to i8*), i64 68, i1 false)
  %13 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %3, i64 0, i32 0
  %14 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 0, i32 26, i32 8, i32 0
  %15 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 0, i32 26, i32 7, i32 0
  call void @_ZN10SkMatrix449setConcatERKS_S1_(%class.SkMatrix44* nonnull %13, %class.SkMatrix44* dereferenceable(68) %14, %class.SkMatrix44* dereferenceable(68) %15) #15
  %16 = bitcast %class.SkRRect* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %16) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %16, i8 0, i64 52, i1 false) #15
  %17 = bitcast %class.SkRRect* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %17) #15
  %18 = bitcast %"class.gfx::RRectF"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %17, i8* align 4 %18, i64 52, i1 false) #15
  %19 = bitcast %class.SkMatrix* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %19) #15
  call void @_ZNK10SkMatrix44cv8SkMatrixEv(%class.SkMatrix* nonnull sret %6, %class.SkMatrix44* nonnull %13) #15
  %20 = call zeroext i1 @_ZNK7SkRRect9transformERK8SkMatrixPS_(%class.SkRRect* nonnull %5, %class.SkMatrix* nonnull dereferenceable(40) %6, %class.SkRRect* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %19) #15
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %17) #15
  br i1 %20, label %21, label %28

21:                                               ; preds = %11
  %22 = bitcast %class.SkMatrix* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %22) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %22, i8 -1, i64 36, i1 false)
  %23 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 1
  store i32 -1431655766, i32* %23, align 4
  %24 = load %class.SkCanvas*, %class.SkCanvas** %8, align 8
  call void @_ZNK8SkCanvas14getTotalMatrixEv(%class.SkMatrix* nonnull sret %7, %class.SkCanvas* %24) #15
  %25 = load %class.SkCanvas*, %class.SkCanvas** %8, align 8
  call void @_ZN8SkCanvas11resetMatrixEv(%class.SkCanvas* %25) #15
  %26 = load %class.SkCanvas*, %class.SkCanvas** %8, align 8
  call void @_ZN8SkCanvas9clipRRectERK7SkRRect8SkClipOpb(%class.SkCanvas* %26, %class.SkRRect* nonnull dereferenceable(52) %4, i32 1, i1 zeroext true) #15
  %27 = load %class.SkCanvas*, %class.SkCanvas** %8, align 8
  call void @_ZN8SkCanvas9setMatrixERK8SkMatrix(%class.SkCanvas* %27, %class.SkMatrix* nonnull dereferenceable(40) %7) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %22) #15
  br label %28

28:                                               ; preds = %21, %11
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %16) #15
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %12) #15
  br label %29

29:                                               ; preds = %2, %28
  ret void
}

declare zeroext i1 @_ZNK7SkRRect9transformERK8SkMatrixPS_(%class.SkRRect*, %class.SkMatrix* dereferenceable(40), %class.SkRRect*) local_unnamed_addr #1

declare void @_ZNK10SkMatrix44cv8SkMatrixEv(%class.SkMatrix* sret, %class.SkMatrix44*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16SoftwareRenderer11ClearCanvasEj(%"class.viz::SoftwareRenderer"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = alloca %class.SkPaint, align 8
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = bitcast { <2 x float>, <2 x float> }* %5 to %struct.SkRect*
  %7 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 7
  %8 = load %class.SkCanvas*, %class.SkCanvas** %7, align 8
  %9 = icmp eq %class.SkCanvas* %8, null
  br i1 %9, label %36, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 3
  %12 = load i8, i8* %11, align 1, !range !3
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %28, label %14

14:                                               ; preds = %10
  %15 = bitcast %class.SkPaint* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %15) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* align 8 bitcast (%class.SkPaint* @__const._ZNK3viz16SoftwareRenderer23GetBackdropFilterShaderEPKNS_28AggregatedRenderPassDrawQuadE10SkTileMode.paint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %4) #15
  call void @_ZN7SkPaint8setColorEj(%class.SkPaint* nonnull %4, i32 %1) #15
  %16 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %4, i64 0, i32 8, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, -261121
  %19 = or i32 %18, 1024
  store i32 %19, i32* %16, align 8
  %20 = load %class.SkCanvas*, %class.SkCanvas** %7, align 8
  %21 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #15
  %22 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 4
  %23 = call { <2 x float>, <2 x float> } @_ZN3gfx12RectToSkRectERKNS_4RectE(%"class.gfx::Rect"* dereferenceable(16) %22) #15
  %24 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  %25 = extractvalue { <2 x float>, <2 x float> } %23, 0
  store <2 x float> %25, <2 x float>* %24, align 8
  %26 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  %27 = extractvalue { <2 x float>, <2 x float> } %23, 1
  store <2 x float> %27, <2 x float>* %26, align 8
  call void @_ZN8SkCanvas8drawRectERK6SkRectRK7SkPaint(%class.SkCanvas* %20, %struct.SkRect* nonnull dereferenceable(16) %6, %class.SkPaint* nonnull dereferenceable(72) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #15
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %15) #15
  br label %36

28:                                               ; preds = %10
  %29 = bitcast { <2 x float>, <2 x float> }* %3 to %struct.SkRGBA4f*
  %30 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #15
  %31 = tail call { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32 %1) #15
  %32 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  %33 = extractvalue { <2 x float>, <2 x float> } %31, 0
  store <2 x float> %33, <2 x float>* %32, align 8
  %34 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  %35 = extractvalue { <2 x float>, <2 x float> } %31, 1
  store <2 x float> %35, <2 x float>* %34, align 8
  call void @_ZN8SkCanvas9drawColorERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas* nonnull %8, %struct.SkRGBA4f* nonnull dereferenceable(16) %29, i32 1) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #15
  br label %36

36:                                               ; preds = %2, %28, %14
  ret void
}

declare void @_ZN7SkPaint8setColorEj(%class.SkPaint*, i32) local_unnamed_addr #1

declare void @_ZN8SkCanvas8drawRectERK6SkRectRK7SkPaint(%class.SkCanvas*, %struct.SkRect* dereferenceable(16), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16SoftwareRenderer16ClearFramebufferEv(%"class.viz::SoftwareRenderer"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 0, i32 26, i32 2
  %3 = bitcast %"class.viz::AggregatedRenderPass"** %2 to %"class.viz::RenderPassInternal"**
  %4 = load %"class.viz::RenderPassInternal"*, %"class.viz::RenderPassInternal"** %3, align 8
  %5 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %4, i64 0, i32 6
  %6 = load i8, i8* %5, align 8, !range !3
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %1
  tail call void @_ZN3viz16SoftwareRenderer11ClearCanvasEj(%"class.viz::SoftwareRenderer"* %0, i32 0)
  br label %9

9:                                                ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16SoftwareRenderer21PrepareSurfaceForPassENS_14DirectRenderer25SurfaceInitializationModeERKN3gfx4RectE(%"class.viz::SoftwareRenderer"*, i32, %"class.gfx::Rect"* dereferenceable(16)) unnamed_addr #0 align 2 {
  switch i32 %1, label %33 [
    i32 0, label %4
    i32 2, label %9
    i32 1, label %21
  ]

4:                                                ; preds = %3
  %5 = bitcast %"class.viz::SoftwareRenderer"* %0 to void (%"class.viz::SoftwareRenderer"*)***
  %6 = load void (%"class.viz::SoftwareRenderer"*)**, void (%"class.viz::SoftwareRenderer"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.viz::SoftwareRenderer"*)*, void (%"class.viz::SoftwareRenderer"*)** %6, i64 29
  %8 = load void (%"class.viz::SoftwareRenderer"*)*, void (%"class.viz::SoftwareRenderer"*)** %7, align 8
  tail call void %8(%"class.viz::SoftwareRenderer"* %0) #15
  br label %33

9:                                                ; preds = %3
  %10 = bitcast %"class.viz::SoftwareRenderer"* %0 to void (%"class.viz::SoftwareRenderer"*)***
  %11 = load void (%"class.viz::SoftwareRenderer"*)**, void (%"class.viz::SoftwareRenderer"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.viz::SoftwareRenderer"*)*, void (%"class.viz::SoftwareRenderer"*)** %11, i64 29
  %13 = load void (%"class.viz::SoftwareRenderer"*)*, void (%"class.viz::SoftwareRenderer"*)** %12, align 8
  tail call void %13(%"class.viz::SoftwareRenderer"* %0) #15
  %14 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 0, i32 26, i32 2
  %15 = bitcast %"class.viz::AggregatedRenderPass"** %14 to %"class.viz::RenderPassInternal"**
  %16 = load %"class.viz::RenderPassInternal"*, %"class.viz::RenderPassInternal"** %15, align 8
  %17 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %16, i64 0, i32 6
  %18 = load i8, i8* %17, align 8, !range !3
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %33, label %20

20:                                               ; preds = %9
  tail call void @_ZN3viz16SoftwareRenderer11ClearCanvasEj(%"class.viz::SoftwareRenderer"* %0, i32 0) #15
  br label %33

21:                                               ; preds = %3
  %22 = bitcast %"class.viz::SoftwareRenderer"* %0 to void (%"class.viz::SoftwareRenderer"*, %"class.gfx::Rect"*)***
  %23 = load void (%"class.viz::SoftwareRenderer"*, %"class.gfx::Rect"*)**, void (%"class.viz::SoftwareRenderer"*, %"class.gfx::Rect"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.viz::SoftwareRenderer"*, %"class.gfx::Rect"*)*, void (%"class.viz::SoftwareRenderer"*, %"class.gfx::Rect"*)** %23, i64 19
  %25 = load void (%"class.viz::SoftwareRenderer"*, %"class.gfx::Rect"*)*, void (%"class.viz::SoftwareRenderer"*, %"class.gfx::Rect"*)** %24, align 8
  tail call void %25(%"class.viz::SoftwareRenderer"* %0, %"class.gfx::Rect"* dereferenceable(16) %2) #15
  %26 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 0, i32 26, i32 2
  %27 = bitcast %"class.viz::AggregatedRenderPass"** %26 to %"class.viz::RenderPassInternal"**
  %28 = load %"class.viz::RenderPassInternal"*, %"class.viz::RenderPassInternal"** %27, align 8
  %29 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %28, i64 0, i32 6
  %30 = load i8, i8* %29, align 8, !range !3
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %33, label %32

32:                                               ; preds = %21
  tail call void @_ZN3viz16SoftwareRenderer11ClearCanvasEj(%"class.viz::SoftwareRenderer"* %0, i32 0) #15
  br label %33

33:                                               ; preds = %32, %21, %20, %9, %4, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3viz16SoftwareRenderer18IsSoftwareResourceEN4util6IdTypeINS_20ResourceIdTypeMarkerEjLj0ELj1EEE(%"class.viz::SoftwareRenderer"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 0, i32 4
  %4 = load %"class.viz::DisplayResourceProvider"*, %"class.viz::DisplayResourceProvider"** %3, align 8
  %5 = tail call zeroext i1 @_ZN3viz23DisplayResourceProvider24IsResourceSoftwareBackedEN4util6IdTypeINS_20ResourceIdTypeMarkerEjLj0ELj1EEE(%"class.viz::DisplayResourceProvider"* %4, i32 %1) #15
  ret i1 %5
}

declare zeroext i1 @_ZN3viz23DisplayResourceProvider24IsResourceSoftwareBackedEN4util6IdTypeINS_20ResourceIdTypeMarkerEjLj0ELj1EEE(%"class.viz::DisplayResourceProvider"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16SoftwareRenderer10DoDrawQuadEPKNS_8DrawQuadEPKN3gfx5QuadFE(%"class.viz::SoftwareRenderer"*, %"class.viz::DrawQuad"*, %"class.gfx::QuadF"* readonly) unnamed_addr #0 align 2 {
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = alloca %"class.base::TimeTicks", align 8
  %9 = alloca %"class.gfx::Transform", align 4
  %10 = alloca %"class.gfx::RectF", align 4
  %11 = alloca %"class.gfx::Transform", align 4
  %12 = alloca %"class.gfx::Transform", align 4
  %13 = alloca %class.SkMatrix, align 16
  %14 = alloca %"class.gfx::QuadF", align 4
  %15 = alloca %class.SkPath, align 8
  %16 = alloca %"class.gfx::Vector2dF", align 4
  %17 = alloca %"class.gfx::Vector2dF", align 4
  %18 = alloca [4 x %struct.SkPoint], align 16
  %19 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 7
  %20 = load %class.SkCanvas*, %class.SkCanvas** %19, align 8
  %21 = icmp eq %class.SkCanvas* %20, null
  br i1 %21, label %298, label %22

22:                                               ; preds = %3
  %23 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), align 16
  %24 = and i8 %23, 25
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %32, label %26, !prof !2

26:                                               ; preds = %22
  %27 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #15
  %28 = bitcast %"class.base::TimeTicks"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #15
  %29 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %8, i64 0, i32 0, i32 0
  %30 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #15
  store i64 %30, i64* %29, align 8
  %31 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %27, %"class.base::TimeTicks"* nonnull dereferenceable(8) %8, %"class.base::trace_event::TraceArguments"* null, i32 0) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #15
  br label %32

32:                                               ; preds = %22, %26
  %33 = phi i8* [ null, %22 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), %26 ]
  %34 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %22 ], [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), %26 ]
  %35 = phi i64 [ -6148914691236517206, %22 ], [ %31, %26 ]
  %36 = bitcast %"class.viz::SoftwareRenderer"* %0 to %"class.viz::DirectRenderer"*
  %37 = call zeroext i1 @_ZNK3viz14DirectRenderer24ShouldApplyRoundedCornerEPKNS_8DrawQuadE(%"class.viz::DirectRenderer"* %36, %"class.viz::DrawQuad"* %1) #15
  %38 = icmp ne %"class.gfx::QuadF"* %2, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 3
  %41 = load i8, i8* %40, align 1, !range !3
  %42 = icmp ne i8 %41, 0
  %43 = or i1 %37, %42
  br label %44

44:                                               ; preds = %39, %32
  %45 = phi i1 [ true, %32 ], [ %43, %39 ]
  %46 = load %class.SkCanvas*, %class.SkCanvas** %19, align 8
  %47 = icmp eq %class.SkCanvas* %46, null
  br i1 %47, label %52, label %48

48:                                               ; preds = %44
  %49 = call i32 @_ZNK8SkCanvas12getSaveCountEv(%class.SkCanvas* nonnull %46) #15
  br i1 %45, label %50, label %52

50:                                               ; preds = %48
  %51 = call i32 @_ZN8SkCanvas4saveEv(%class.SkCanvas* nonnull %46) #15
  br label %52

52:                                               ; preds = %44, %48, %50
  %53 = phi i32 [ 0, %44 ], [ %49, %50 ], [ %49, %48 ]
  %54 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 3
  %55 = load i8, i8* %54, align 1, !range !3
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %59, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 4
  call void @_ZN3viz16SoftwareRenderer11SetClipRectERKN3gfx4RectE(%"class.viz::SoftwareRenderer"* %0, %"class.gfx::Rect"* dereferenceable(16) %58)
  br label %59

59:                                               ; preds = %52, %57
  br i1 %37, label %60, label %64

60:                                               ; preds = %59
  %61 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %1, i64 0, i32 6
  %62 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %61, align 8
  %63 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %62, i64 0, i32 3, i32 0
  call void @_ZN3viz16SoftwareRenderer12SetClipRRectERKN3gfx6RRectFE(%"class.viz::SoftwareRenderer"* %0, %"class.gfx::RRectF"* dereferenceable(52) %63)
  br label %64

64:                                               ; preds = %60, %59
  %65 = bitcast %"class.gfx::Transform"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %65) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %65, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZNK3viz16SoftwareRenderer23GetBackdropFilterShaderEPKNS_28AggregatedRenderPassDrawQuadE10SkTileMode.contents_device_transform_inverse to i8*), i64 68, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %65, i8* align 4 bitcast ([4 x [4 x float]]* @constinit.5 to i8*), i64 64, i1 false) #15
  %66 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %9, i64 0, i32 0, i32 1
  store i8 0, i8* %66, align 4
  %67 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %1, i64 0, i32 6
  %68 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %67, align 8
  %69 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %68, i64 0, i32 0
  %70 = bitcast %"class.gfx::RectF"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %70) #15
  %71 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %1, i64 0, i32 2, i32 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = sitofp i32 %72 to float
  %74 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %1, i64 0, i32 2, i32 0, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = sitofp i32 %75 to float
  %77 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %1, i64 0, i32 2, i32 1, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %1, i64 0, i32 2, i32 1, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %10, i64 0, i32 0, i32 0
  store float %73, float* %81, align 4
  %82 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %10, i64 0, i32 0, i32 1
  store float %76, float* %82, align 4
  %83 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %10, i64 0, i32 1, i32 0
  %84 = icmp sgt i32 %78, 0
  %85 = select i1 %84, i32 %78, i32 0
  %86 = sitofp i32 %85 to float
  store float %86, float* %83, align 4
  %87 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %10, i64 0, i32 1, i32 1
  %88 = icmp sgt i32 %80, 0
  %89 = select i1 %88, i32 %80, i32 0
  %90 = sitofp i32 %89 to float
  store float %90, float* %87, align 4
  call void @_ZN3viz14DirectRenderer17QuadRectTransformEPN3gfx9TransformERKS2_RKNS1_5RectFE(%"class.gfx::Transform"* nonnull %9, %"class.gfx::Transform"* dereferenceable(68) %69, %"class.gfx::RectF"* nonnull dereferenceable(16) %10) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %70) #15
  %91 = bitcast %"class.gfx::Transform"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %91) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %91, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZNK3viz16SoftwareRenderer23GetBackdropFilterShaderEPKNS_28AggregatedRenderPassDrawQuadE10SkTileMode.contents_device_transform_inverse to i8*), i64 68, i1 false)
  %92 = bitcast %"class.gfx::Transform"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %92) #15
  %93 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %12, i64 0, i32 0
  %94 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 0, i32 26, i32 8, i32 0
  %95 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 0, i32 26, i32 7, i32 0
  call void @_ZN10SkMatrix449setConcatERKS_S1_(%class.SkMatrix44* nonnull %93, %class.SkMatrix44* dereferenceable(68) %94, %class.SkMatrix44* dereferenceable(68) %95) #15
  %96 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %11, i64 0, i32 0
  %97 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %9, i64 0, i32 0
  call void @_ZN10SkMatrix449setConcatERKS_S1_(%class.SkMatrix44* nonnull %96, %class.SkMatrix44* nonnull dereferenceable(68) %93, %class.SkMatrix44* nonnull dereferenceable(68) %97) #15
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %92) #15
  call void @_ZN3gfx9Transform11FlattenTo2dEv(%"class.gfx::Transform"* nonnull %11) #15
  %98 = bitcast %class.SkMatrix* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %98) #15
  %99 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %13, i64 0, i32 1
  %100 = bitcast %class.SkMatrix* %13 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %100, align 16
  %101 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %13, i64 0, i32 0, i64 4
  %102 = bitcast float* %101 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %102, align 16
  %103 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %13, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %103, align 16
  store i32 16, i32* %99, align 4
  call void @_ZN3gfx28TransformToFlattenedSkMatrixERKNS_9TransformEP8SkMatrix(%"class.gfx::Transform"* nonnull dereferenceable(68) %11, %class.SkMatrix* nonnull %13) #15
  %104 = load %class.SkCanvas*, %class.SkCanvas** %19, align 8
  call void @_ZN8SkCanvas9setMatrixERK8SkMatrix(%class.SkCanvas* %104, %class.SkMatrix* nonnull dereferenceable(40) %13) #15
  %105 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 8
  call void @_ZN7SkPaint5resetEv(%class.SkPaint* %105) #15
  %106 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 0, i32 1
  %107 = load %"class.viz::RendererSettings"*, %"class.viz::RendererSettings"** %106, align 8
  %108 = getelementptr inbounds %"class.viz::RendererSettings", %"class.viz::RendererSettings"* %107, i64 0, i32 2
  %109 = load i8, i8* %108, align 2, !range !3
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %111, label %113

111:                                              ; preds = %64
  %112 = call zeroext i1 @_ZN3viz26IsScaleAndIntegerTranslateERK8SkMatrix(%class.SkMatrix* nonnull dereferenceable(40) %13) #15
  br i1 %112, label %154, label %113

113:                                              ; preds = %64, %111
  %114 = load i32, i32* %74, align 4
  %115 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %67, align 8
  %116 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %115, i64 0, i32 1, i32 0, i32 1
  %117 = load i32, i32* %116, align 4
  %118 = icmp eq i32 %114, %117
  br i1 %118, label %119, label %134

119:                                              ; preds = %113
  %120 = load i32, i32* %71, align 4
  %121 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %115, i64 0, i32 1, i32 0, i32 0
  %122 = load i32, i32* %121, align 4
  %123 = icmp eq i32 %120, %122
  br i1 %123, label %124, label %134

124:                                              ; preds = %119
  %125 = load i32, i32* %79, align 4
  %126 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %115, i64 0, i32 1, i32 1, i32 1
  %127 = load i32, i32* %126, align 4
  %128 = icmp eq i32 %125, %127
  br i1 %128, label %129, label %134

129:                                              ; preds = %124
  %130 = load i32, i32* %77, align 4
  %131 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %115, i64 0, i32 1, i32 1, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = icmp eq i32 %130, %132
  br label %134

134:                                              ; preds = %129, %124, %119, %113
  %135 = phi i1 [ false, %124 ], [ false, %119 ], [ false, %113 ], [ %133, %129 ]
  %136 = load %"class.viz::RendererSettings"*, %"class.viz::RendererSettings"** %106, align 8
  %137 = getelementptr inbounds %"class.viz::RendererSettings", %"class.viz::RendererSettings"* %136, i64 0, i32 1
  %138 = load i8, i8* %137, align 1, !range !3
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %149, label %140

140:                                              ; preds = %134
  %141 = getelementptr inbounds %"class.viz::RendererSettings", %"class.viz::RendererSettings"* %136, i64 0, i32 2
  %142 = load i8, i8* %141, align 2, !range !3
  %143 = icmp ne i8 %142, 0
  %144 = or i1 %135, %143
  br i1 %144, label %145, label %149

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 8, i32 8, i32 0, i32 0
  %147 = load i32, i32* %146, align 8
  %148 = or i32 %147, 1
  store i32 %148, i32* %146, align 8
  br label %149

149:                                              ; preds = %140, %134, %145
  %150 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 8, i32 8, i32 0, i32 0
  %151 = load i32, i32* %150, align 8
  %152 = and i32 %151, -769
  %153 = or i32 %152, 256
  store i32 %153, i32* %150, align 8
  br label %154

154:                                              ; preds = %149, %111
  %155 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %1, i64 0, i32 4
  %156 = load i8, i8* %155, align 4, !range !3
  %157 = icmp eq i8 %156, 0
  br i1 %157, label %158, label %176

158:                                              ; preds = %154
  %159 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %67, align 8
  %160 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %159, i64 0, i32 7
  %161 = load float, float* %160, align 8
  %162 = fcmp olt float %161, 1.000000e+00
  br i1 %162, label %176, label %163

163:                                              ; preds = %158
  %164 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %159, i64 0, i32 8
  %165 = load i32, i32* %164, align 4
  %166 = icmp eq i32 %165, 3
  br i1 %166, label %167, label %176

167:                                              ; preds = %163
  %168 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %159, i64 0, i32 3, i32 0
  %169 = call i32 @_ZNK3gfx6RRectF7GetTypeEv(%"class.gfx::RRectF"* %168) #15
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %176

171:                                              ; preds = %167
  %172 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %67, align 8
  %173 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %172, i64 0, i32 8
  %174 = load i32, i32* %173, align 4
  %175 = icmp eq i32 %174, 3
  br i1 %175, label %190, label %176

176:                                              ; preds = %167, %154, %158, %163, %171
  %177 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %67, align 8
  %178 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %177, i64 0, i32 7
  %179 = load float, float* %178, align 8
  %180 = fmul float %179, 2.550000e+02
  %181 = fptoui float %180 to i32
  %182 = uitofp i32 %181 to float
  %183 = fmul float %182, 0x3F70101020000000
  call void @_ZN7SkPaint9setAlphafEf(%class.SkPaint* %105, float %183) #15
  %184 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %67, align 8
  %185 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %184, i64 0, i32 8
  %186 = load i32, i32* %185, align 4
  %187 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 8, i32 8, i32 0, i32 0
  %188 = shl i32 %186, 10
  %189 = and i32 %188, 261120
  br label %192

190:                                              ; preds = %171
  %191 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 8, i32 8, i32 0, i32 0
  br label %192

192:                                              ; preds = %190, %176
  %193 = phi i32* [ %191, %190 ], [ %187, %176 ]
  %194 = phi i32 [ 1024, %190 ], [ %189, %176 ]
  %195 = load i32, i32* %193, align 8
  %196 = and i32 %195, -261121
  %197 = or i32 %196, %194
  store i32 %197, i32* %193, align 8
  br i1 %38, label %198, label %228

198:                                              ; preds = %192
  %199 = bitcast %"class.gfx::QuadF"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %199) #15
  %200 = bitcast %"class.gfx::QuadF"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %199, i8* nonnull align 4 %200, i64 32, i1 false)
  %201 = bitcast %class.SkPath* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %201) #15
  %202 = bitcast %class.SkPath* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %202, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %15) #15
  %203 = bitcast %"class.gfx::Vector2dF"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %203) #15
  %204 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %1, i64 0, i32 3, i32 0, i32 0
  %205 = load i32, i32* %204, align 4
  %206 = sitofp i32 %205 to float
  %207 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %1, i64 0, i32 3, i32 0, i32 1
  %208 = load i32, i32* %207, align 4
  %209 = sitofp i32 %208 to float
  %210 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %16, i64 0, i32 0
  store float %206, float* %210, align 4
  %211 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %16, i64 0, i32 1
  store float %209, float* %211, align 4
  call void @_ZN3gfx5QuadFmIERKNS_9Vector2dFE(%"class.gfx::QuadF"* nonnull %14, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %16) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %203) #15
  %212 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %1, i64 0, i32 3, i32 1, i32 0
  %213 = load i32, i32* %212, align 4
  %214 = sitofp i32 %213 to float
  %215 = fdiv float 1.000000e+00, %214
  %216 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %1, i64 0, i32 3, i32 1, i32 1
  %217 = load i32, i32* %216, align 4
  %218 = sitofp i32 %217 to float
  %219 = fdiv float 1.000000e+00, %218
  call void @_ZN3gfx5QuadF5ScaleEff(%"class.gfx::QuadF"* nonnull %14, float %215, float %219) #15
  %220 = bitcast %"class.gfx::Vector2dF"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %220) #15
  %221 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %17, i64 0, i32 0
  store float 5.000000e-01, float* %221, align 4
  %222 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %17, i64 0, i32 1
  store float 5.000000e-01, float* %222, align 4
  call void @_ZN3gfx5QuadFmIERKNS_9Vector2dFE(%"class.gfx::QuadF"* nonnull %14, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %17) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %220) #15
  %223 = bitcast [4 x %struct.SkPoint]* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %223) #15
  %224 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %18, i64 0, i64 0
  %225 = bitcast [4 x %struct.SkPoint]* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %225, i8 -1, i64 32, i1 false)
  call void @_ZN3gfx15QuadFToSkPointsERKNS_5QuadFEP7SkPoint(%"class.gfx::QuadF"* nonnull dereferenceable(32) %14, %struct.SkPoint* nonnull %224) #15
  %226 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7addPolyEPK7SkPointib(%class.SkPath* nonnull %15, %struct.SkPoint* nonnull %224, i32 4, i1 zeroext true) #15
  %227 = load %class.SkCanvas*, %class.SkCanvas** %19, align 8
  call void @_ZN8SkCanvas8clipPathERK6SkPath8SkClipOpb(%class.SkCanvas* %227, %class.SkPath* nonnull dereferenceable(16) %15, i32 1, i1 zeroext false) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %223) #15
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %15) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %201) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %199) #15
  br label %228

228:                                              ; preds = %198, %192
  %229 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %1, i64 0, i32 1
  %230 = load i32, i32* %229, align 8
  switch i32 %230, label %289 [
    i32 4, label %231
    i32 1, label %233
    i32 2, label %235
    i32 11, label %266
    i32 5, label %237
    i32 8, label %239
    i32 9, label %241
    i32 6, label %243
    i32 0, label %243
    i32 10, label %243
  ]

231:                                              ; preds = %228
  %232 = call %"class.viz::AggregatedRenderPassDrawQuad"* @_ZN3viz28AggregatedRenderPassDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"* %1) #15
  call void @_ZN3viz16SoftwareRenderer18DrawRenderPassQuadEPKNS_28AggregatedRenderPassDrawQuadE(%"class.viz::SoftwareRenderer"* %0, %"class.viz::AggregatedRenderPassDrawQuad"* %232)
  br label %289

233:                                              ; preds = %228
  %234 = call %"class.viz::DebugBorderDrawQuad"* @_ZN3viz19DebugBorderDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"* %1) #15
  call void @_ZN3viz16SoftwareRenderer19DrawDebugBorderQuadEPKNS_19DebugBorderDrawQuadE(%"class.viz::SoftwareRenderer"* %0, %"class.viz::DebugBorderDrawQuad"* %234)
  br label %289

235:                                              ; preds = %228
  %236 = call %"class.viz::PictureDrawQuad"* @_ZN3viz15PictureDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"* %1) #15
  call void @_ZN3viz16SoftwareRenderer15DrawPictureQuadEPKNS_15PictureDrawQuadE(%"class.viz::SoftwareRenderer"* %0, %"class.viz::PictureDrawQuad"* %236)
  br label %289

237:                                              ; preds = %228
  %238 = call %"class.viz::SolidColorDrawQuad"* @_ZN3viz18SolidColorDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"* %1) #15
  call void @_ZN3viz16SoftwareRenderer18DrawSolidColorQuadEPKNS_18SolidColorDrawQuadE(%"class.viz::SoftwareRenderer"* %0, %"class.viz::SolidColorDrawQuad"* %238)
  br label %289

239:                                              ; preds = %228
  %240 = call %"class.viz::TextureDrawQuad"* @_ZN3viz15TextureDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"* %1) #15
  call void @_ZN3viz16SoftwareRenderer15DrawTextureQuadEPKNS_15TextureDrawQuadE(%"class.viz::SoftwareRenderer"* %0, %"class.viz::TextureDrawQuad"* %240)
  br label %289

241:                                              ; preds = %228
  %242 = call %"class.viz::TileDrawQuad"* @_ZN3viz12TileDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"* %1) #15
  call void @_ZN3viz16SoftwareRenderer12DrawTileQuadEPKNS_12TileDrawQuadE(%"class.viz::SoftwareRenderer"* %0, %"class.viz::TileDrawQuad"* %242)
  br label %289

243:                                              ; preds = %228, %228, %228
  %244 = bitcast { <2 x float>, <2 x float> }* %4 to %struct.SkRect*
  %245 = bitcast { <2 x float>, <2 x float> }* %5 to %"class.gfx::RectF"*
  call void @_ZN7SkPaint8setColorEj(%class.SkPaint* %105, i32 -1) #15
  %246 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %67, align 8
  %247 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %246, i64 0, i32 7
  %248 = load float, float* %247, align 8
  %249 = fmul float %248, 2.550000e+02
  %250 = fptoui float %249 to i32
  %251 = uitofp i32 %250 to float
  %252 = fmul float %251, 0x3F70101020000000
  call void @_ZN7SkPaint9setAlphafEf(%class.SkPaint* %105, float %252) #15
  %253 = load %class.SkCanvas*, %class.SkCanvas** %19, align 8
  %254 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %254) #15
  %255 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %255) #15
  %256 = call { <2 x float>, <2 x float> } @_ZN3viz14DirectRenderer14QuadVertexRectEv() #15
  %257 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  %258 = extractvalue { <2 x float>, <2 x float> } %256, 0
  store <2 x float> %258, <2 x float>* %257, align 8
  %259 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  %260 = extractvalue { <2 x float>, <2 x float> } %256, 1
  store <2 x float> %260, <2 x float>* %259, align 8
  %261 = call { <2 x float>, <2 x float> } @_ZN3gfx13RectFToSkRectERKNS_5RectFE(%"class.gfx::RectF"* nonnull dereferenceable(16) %245) #15
  %262 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  %263 = extractvalue { <2 x float>, <2 x float> } %261, 0
  store <2 x float> %263, <2 x float>* %262, align 8
  %264 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  %265 = extractvalue { <2 x float>, <2 x float> } %261, 1
  store <2 x float> %265, <2 x float>* %264, align 8
  call void @_ZN8SkCanvas8drawRectERK6SkRectRK7SkPaint(%class.SkCanvas* %253, %struct.SkRect* nonnull dereferenceable(16) %244, %class.SkPaint* dereferenceable(72) %105) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %255) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %254) #15
  br label %289

266:                                              ; preds = %228
  %267 = bitcast { <2 x float>, <2 x float> }* %6 to %struct.SkRect*
  %268 = bitcast { <2 x float>, <2 x float> }* %7 to %"class.gfx::RectF"*
  call void @_ZN7SkPaint8setColorEj(%class.SkPaint* %105, i32 -1) #15
  %269 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %67, align 8
  %270 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %269, i64 0, i32 7
  %271 = load float, float* %270, align 8
  %272 = fmul float %271, 2.550000e+02
  %273 = fptoui float %272 to i32
  %274 = uitofp i32 %273 to float
  %275 = fmul float %274, 0x3F70101020000000
  call void @_ZN7SkPaint9setAlphafEf(%class.SkPaint* %105, float %275) #15
  %276 = load %class.SkCanvas*, %class.SkCanvas** %19, align 8
  %277 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %277) #15
  %278 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %278) #15
  %279 = call { <2 x float>, <2 x float> } @_ZN3viz14DirectRenderer14QuadVertexRectEv() #15
  %280 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  %281 = extractvalue { <2 x float>, <2 x float> } %279, 0
  store <2 x float> %281, <2 x float>* %280, align 8
  %282 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  %283 = extractvalue { <2 x float>, <2 x float> } %279, 1
  store <2 x float> %283, <2 x float>* %282, align 8
  %284 = call { <2 x float>, <2 x float> } @_ZN3gfx13RectFToSkRectERKNS_5RectFE(%"class.gfx::RectF"* nonnull dereferenceable(16) %268) #15
  %285 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  %286 = extractvalue { <2 x float>, <2 x float> } %284, 0
  store <2 x float> %286, <2 x float>* %285, align 8
  %287 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  %288 = extractvalue { <2 x float>, <2 x float> } %284, 1
  store <2 x float> %288, <2 x float>* %287, align 8
  call void @_ZN8SkCanvas8drawRectERK6SkRectRK7SkPaint(%class.SkCanvas* %276, %struct.SkRect* nonnull dereferenceable(16) %267, %class.SkPaint* dereferenceable(72) %105) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %278) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %277) #15
  br label %289

289:                                              ; preds = %228, %266, %243, %241, %239, %237, %235, %233, %231
  %290 = load %class.SkCanvas*, %class.SkCanvas** %19, align 8
  call void @_ZN8SkCanvas11resetMatrixEv(%class.SkCanvas* %290) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %98) #15
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %91) #15
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %65) #15
  br i1 %47, label %292, label %291

291:                                              ; preds = %289
  call void @_ZN8SkCanvas14restoreToCountEi(%class.SkCanvas* nonnull %46, i32 %53) #15
  br label %292

292:                                              ; preds = %289, %291
  %293 = icmp eq i8* %33, null
  br i1 %293, label %298, label %294

294:                                              ; preds = %292
  %295 = load i8, i8* %33, align 1
  %296 = icmp eq i8 %295, 0
  br i1 %296, label %298, label %297

297:                                              ; preds = %294
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %33, i8* %34, i64 %35) #15
  br label %298

298:                                              ; preds = %297, %294, %292, %3
  ret void
}

declare zeroext i1 @_ZNK3viz14DirectRenderer24ShouldApplyRoundedCornerEPKNS_8DrawQuadE(%"class.viz::DirectRenderer"*, %"class.viz::DrawQuad"*) local_unnamed_addr #1

declare void @_ZN3viz14DirectRenderer17QuadRectTransformEPN3gfx9TransformERKS2_RKNS1_5RectFE(%"class.gfx::Transform"*, %"class.gfx::Transform"* dereferenceable(68), %"class.gfx::RectF"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN3gfx9Transform11FlattenTo2dEv(%"class.gfx::Transform"*) local_unnamed_addr #1

declare void @_ZN3gfx28TransformToFlattenedSkMatrixERKNS_9TransformEP8SkMatrix(%"class.gfx::Transform"* dereferenceable(68), %class.SkMatrix*) local_unnamed_addr #1

declare void @_ZN7SkPaint5resetEv(%class.SkPaint*) local_unnamed_addr #1

declare zeroext i1 @_ZN3viz26IsScaleAndIntegerTranslateERK8SkMatrix(%class.SkMatrix* dereferenceable(40)) local_unnamed_addr #1

declare void @_ZN6SkPathC1Ev(%class.SkPath*) unnamed_addr #1

declare void @_ZN3gfx5QuadFmIERKNS_9Vector2dFE(%"class.gfx::QuadF"*, %"class.gfx::Vector2dF"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN3gfx5QuadF5ScaleEff(%"class.gfx::QuadF"*, float, float) local_unnamed_addr #1

declare void @_ZN3gfx15QuadFToSkPointsERKNS_5QuadFEP7SkPoint(%"class.gfx::QuadF"* dereferenceable(32), %struct.SkPoint*) local_unnamed_addr #1

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath7addPolyEPK7SkPointib(%class.SkPath*, %struct.SkPoint*, i32, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16SoftwareRenderer18DrawRenderPassQuadEPKNS_28AggregatedRenderPassDrawQuadE(%"class.viz::SoftwareRenderer"*, %"class.viz::AggregatedRenderPassDrawQuad"*) local_unnamed_addr #0 align 2 {
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = bitcast { <2 x float>, <2 x float> }* %3 to %struct.SkRect*
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = bitcast { <2 x float>, <2 x float> }* %6 to %struct.SkRect*
  %8 = alloca { <2 x float>, <2 x float> }, align 8
  %9 = alloca { <2 x float>, <2 x float> }, align 8
  %10 = alloca %"class.gfx::RectF", align 4
  %11 = alloca %"class.gfx::RectF", align 4
  %12 = alloca { <2 x float>, <2 x float> }, align 8
  %13 = bitcast { <2 x float>, <2 x float> }* %12 to %struct.SkRect*
  %14 = alloca %class.sk_sp.116, align 8
  %15 = alloca %"class.gfx::SizeF", align 4
  %16 = alloca %"class.gfx::Vector2dF", align 4
  %17 = alloca %struct.SkIRect, align 4
  %18 = alloca %class.sk_sp.335, align 8
  %19 = alloca { <2 x float>, <2 x float> }, align 8
  %20 = bitcast { <2 x float>, <2 x float> }* %19 to %"class.gfx::RectF"*
  %21 = alloca { <2 x float>, <2 x float> }, align 8
  %22 = bitcast { <2 x float>, <2 x float> }* %21 to %struct.SkRect*
  %23 = alloca { <2 x float>, <2 x float> }, align 8
  %24 = bitcast { <2 x float>, <2 x float> }* %23 to %"class.gfx::RectF"*
  %25 = alloca { <2 x float>, <2 x float> }, align 8
  %26 = bitcast { <2 x float>, <2 x float> }* %25 to %"class.gfx::RectF"*
  %27 = alloca %"class.gfx::RectF", align 4
  %28 = alloca %class.SkMatrix, align 16
  %29 = alloca %struct.SkSamplingOptions, align 4
  %30 = alloca %class.sk_sp.224, align 8
  %31 = alloca %class.sk_sp.224, align 8
  %32 = alloca %"class.viz::DisplayResourceProviderSoftware::ScopedReadLockSkImage", align 8
  %33 = alloca { <2 x float>, <2 x float> }, align 8
  %34 = bitcast { <2 x float>, <2 x float> }* %33 to %struct.SkRect*
  %35 = alloca { <2 x float>, <2 x float> }, align 8
  %36 = bitcast { <2 x float>, <2 x float> }* %35 to %"class.gfx::RectF"*
  %37 = alloca %class.SkMatrix, align 16
  %38 = alloca %class.sk_sp.225, align 8
  %39 = alloca %class.sk_sp.224, align 8
  %40 = alloca %class.sk_sp.224, align 8
  %41 = alloca %class.SkPaint, align 8
  %42 = alloca %class.sk_sp.224, align 8
  %43 = alloca %class.sk_sp.225, align 8
  %44 = alloca %class.sk_sp.224, align 8
  %45 = getelementptr inbounds %"class.viz::AggregatedRenderPassDrawQuad", %"class.viz::AggregatedRenderPassDrawQuad"* %1, i64 0, i32 1
  %46 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %47 = load %"struct.std::__1::pair.195"*, %"struct.std::__1::pair.195"** %46, align 8
  %48 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %49 = bitcast %"struct.std::__1::pair.195"** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = ptrtoint %"struct.std::__1::pair.195"* %47 to i64
  %52 = sub i64 %50, %51
  %53 = icmp eq i64 %52, 0
  %54 = inttoptr i64 %50 to %"struct.std::__1::pair.195"*
  br i1 %53, label %75, label %55

55:                                               ; preds = %2
  %56 = ashr exact i64 %52, 6
  %57 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %45, i64 0, i32 0, i32 0
  %58 = load i64, i64* %57, align 8
  br label %59

59:                                               ; preds = %59, %55
  %60 = phi %"struct.std::__1::pair.195"* [ %47, %55 ], [ %71, %59 ]
  %61 = phi i64 [ %56, %55 ], [ %70, %59 ]
  %62 = lshr i64 %61, 1
  %63 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %60, i64 %62
  %64 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %63, i64 0, i32 0, i32 0, i32 0
  %65 = load i64, i64* %64, align 8
  %66 = icmp ult i64 %65, %58
  %67 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %63, i64 1
  %68 = xor i64 %62, -1
  %69 = add i64 %61, %68
  %70 = select i1 %66, i64 %69, i64 %62
  %71 = select i1 %66, %"struct.std::__1::pair.195"* %67, %"struct.std::__1::pair.195"* %60
  %72 = icmp eq i64 %70, 0
  br i1 %72, label %73, label %59

73:                                               ; preds = %59
  %74 = ptrtoint %"struct.std::__1::pair.195"* %71 to i64
  br label %75

75:                                               ; preds = %73, %2
  %76 = phi i64 [ %74, %73 ], [ %51, %2 ]
  %77 = phi %"struct.std::__1::pair.195"* [ %71, %73 ], [ %47, %2 ]
  %78 = icmp eq %"struct.std::__1::pair.195"* %77, %54
  br i1 %78, label %88, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %45, i64 0, i32 0, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %77, i64 0, i32 0, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = icmp ult i64 %81, %83
  br i1 %84, label %88, label %85

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %77, i64 1
  %87 = ptrtoint %"struct.std::__1::pair.195"* %86 to i64
  br label %88

88:                                               ; preds = %75, %79, %85
  %89 = phi i64 [ %87, %85 ], [ %76, %75 ], [ %76, %79 ]
  %90 = inttoptr i64 %89 to %"struct.std::__1::pair.195"*
  %91 = icmp eq %"struct.std::__1::pair.195"* %77, %90
  %92 = select i1 %91, %"struct.std::__1::pair.195"* %54, %"struct.std::__1::pair.195"* %77
  %93 = icmp eq %"struct.std::__1::pair.195"* %92, %54
  br i1 %93, label %539, label %94

94:                                               ; preds = %88
  %95 = bitcast { <2 x float>, <2 x float> }* %8 to %"class.gfx::RectF"*
  %96 = bitcast { <2 x float>, <2 x float> }* %9 to %"class.gfx::RectF"*
  %97 = bitcast { <2 x float>, <2 x float> }* %5 to %"class.gfx::RectF"*
  %98 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %92, i64 0, i32 1
  %99 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %99) #15
  %100 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  %101 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %101, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %100) #15
  %102 = tail call { <2 x float>, <2 x float> } @_ZN3viz14DirectRenderer14QuadVertexRectEv() #15
  %103 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  %104 = extractvalue { <2 x float>, <2 x float> } %102, 0
  store <2 x float> %104, <2 x float>* %103, align 8
  %105 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  %106 = extractvalue { <2 x float>, <2 x float> } %102, 1
  store <2 x float> %106, <2 x float>* %105, align 8
  %107 = call { <2 x float>, <2 x float> } @_ZN3gfx13RectFToSkRectERKNS_5RectFE(%"class.gfx::RectF"* nonnull dereferenceable(16) %97) #15
  %108 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  %109 = extractvalue { <2 x float>, <2 x float> } %107, 0
  store <2 x float> %109, <2 x float>* %108, align 8
  %110 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  %111 = extractvalue { <2 x float>, <2 x float> } %107, 1
  store <2 x float> %111, <2 x float>* %110, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %100) #15
  %112 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %112) #15
  %113 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1, i64 0
  %114 = bitcast { <2 x float>, <2 x float> }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %114) #15
  %115 = bitcast { <2 x float>, <2 x float> }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %115) #15
  %116 = call { <2 x float>, <2 x float> } @_ZN3viz14DirectRenderer14QuadVertexRectEv() #15
  %117 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 0
  %118 = extractvalue { <2 x float>, <2 x float> } %116, 0
  store <2 x float> %118, <2 x float>* %117, align 8
  %119 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 1
  %120 = extractvalue { <2 x float>, <2 x float> } %116, 1
  store <2 x float> %120, <2 x float>* %119, align 8
  %121 = bitcast %"class.gfx::RectF"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %121) #15
  %122 = getelementptr inbounds %"class.viz::AggregatedRenderPassDrawQuad", %"class.viz::AggregatedRenderPassDrawQuad"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %123 = load i32, i32* %122, align 4
  %124 = sitofp i32 %123 to float
  %125 = getelementptr inbounds %"class.viz::AggregatedRenderPassDrawQuad", %"class.viz::AggregatedRenderPassDrawQuad"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %126 = load i32, i32* %125, align 4
  %127 = sitofp i32 %126 to float
  %128 = getelementptr inbounds %"class.viz::AggregatedRenderPassDrawQuad", %"class.viz::AggregatedRenderPassDrawQuad"* %1, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0
  %129 = load i32, i32* %128, align 4
  %130 = getelementptr inbounds %"class.viz::AggregatedRenderPassDrawQuad", %"class.viz::AggregatedRenderPassDrawQuad"* %1, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1
  %131 = load i32, i32* %130, align 4
  %132 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %10, i64 0, i32 0, i32 0
  store float %124, float* %132, align 4
  %133 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %10, i64 0, i32 0, i32 1
  store float %127, float* %133, align 4
  %134 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %10, i64 0, i32 1, i32 0
  %135 = icmp sgt i32 %129, 0
  %136 = select i1 %135, i32 %129, i32 0
  %137 = sitofp i32 %136 to float
  store float %137, float* %134, align 4
  %138 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %10, i64 0, i32 1, i32 1
  %139 = icmp sgt i32 %131, 0
  %140 = select i1 %139, i32 %131, i32 0
  %141 = sitofp i32 %140 to float
  store float %141, float* %138, align 4
  %142 = bitcast %"class.gfx::RectF"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %142) #15
  %143 = getelementptr inbounds %"class.viz::AggregatedRenderPassDrawQuad", %"class.viz::AggregatedRenderPassDrawQuad"* %1, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %144 = load i32, i32* %143, align 4
  %145 = sitofp i32 %144 to float
  %146 = getelementptr inbounds %"class.viz::AggregatedRenderPassDrawQuad", %"class.viz::AggregatedRenderPassDrawQuad"* %1, i64 0, i32 0, i32 0, i32 3, i32 0, i32 1
  %147 = load i32, i32* %146, align 4
  %148 = sitofp i32 %147 to float
  %149 = getelementptr inbounds %"class.viz::AggregatedRenderPassDrawQuad", %"class.viz::AggregatedRenderPassDrawQuad"* %1, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0
  %150 = load i32, i32* %149, align 4
  %151 = getelementptr inbounds %"class.viz::AggregatedRenderPassDrawQuad", %"class.viz::AggregatedRenderPassDrawQuad"* %1, i64 0, i32 0, i32 0, i32 3, i32 1, i32 1
  %152 = load i32, i32* %151, align 4
  %153 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %11, i64 0, i32 0, i32 0
  store float %145, float* %153, align 4
  %154 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %11, i64 0, i32 0, i32 1
  store float %148, float* %154, align 4
  %155 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %11, i64 0, i32 1, i32 0
  %156 = icmp sgt i32 %150, 0
  %157 = select i1 %156, i32 %150, i32 0
  %158 = sitofp i32 %157 to float
  store float %158, float* %155, align 4
  %159 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %11, i64 0, i32 1, i32 1
  %160 = icmp sgt i32 %152, 0
  %161 = select i1 %160, i32 %152, i32 0
  %162 = sitofp i32 %161 to float
  store float %162, float* %159, align 4
  %163 = call { <2 x float>, <2 x float> } @_ZN2cc8MathUtil21ScaleRectProportionalERKN3gfx5RectFES4_S4_(%"class.gfx::RectF"* nonnull dereferenceable(16) %96, %"class.gfx::RectF"* nonnull dereferenceable(16) %10, %"class.gfx::RectF"* nonnull dereferenceable(16) %11) #15
  %164 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 0
  %165 = extractvalue { <2 x float>, <2 x float> } %163, 0
  store <2 x float> %165, <2 x float>* %164, align 8
  %166 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 1
  %167 = extractvalue { <2 x float>, <2 x float> } %163, 1
  store <2 x float> %167, <2 x float>* %166, align 8
  %168 = call { <2 x float>, <2 x float> } @_ZN3gfx13RectFToSkRectERKNS_5RectFE(%"class.gfx::RectF"* nonnull dereferenceable(16) %95) #15
  %169 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  %170 = extractvalue { <2 x float>, <2 x float> } %168, 0
  store <2 x float> %170, <2 x float>* %169, align 8
  %171 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  %172 = extractvalue { <2 x float>, <2 x float> } %168, 1
  store <2 x float> %172, <2 x float>* %171, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %142) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %121) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %115) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %114) #15
  %173 = bitcast { <2 x float>, <2 x float> }* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %173) #15
  %174 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %12, i64 0, i32 1, i64 0
  %175 = getelementptr inbounds %"class.viz::AggregatedRenderPassDrawQuad", %"class.viz::AggregatedRenderPassDrawQuad"* %1, i64 0, i32 0, i32 5
  %176 = bitcast { <2 x float>, <2 x float> }* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %176, i8 -1, i64 16, i1 false)
  %177 = call { <2 x float>, <2 x float> } @_ZN3gfx13RectFToSkRectERKNS_5RectFE(%"class.gfx::RectF"* dereferenceable(16) %175) #15
  %178 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %12, i64 0, i32 0
  %179 = extractvalue { <2 x float>, <2 x float> } %177, 0
  store <2 x float> %179, <2 x float>* %178, align 8
  %180 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %12, i64 0, i32 1
  %181 = extractvalue { <2 x float>, <2 x float> } %177, 1
  store <2 x float> %181, <2 x float>* %180, align 8
  %182 = bitcast %"class.viz::SoftwareRenderer"* %0 to %"class.viz::DirectRenderer"*
  %183 = getelementptr inbounds %"class.viz::AggregatedRenderPassDrawQuad", %"class.viz::AggregatedRenderPassDrawQuad"* %1, i64 0, i32 1, i32 0, i32 0
  %184 = load i64, i64* %183, align 8
  %185 = call %"class.cc::FilterOperations"* @_ZNK3viz14DirectRenderer14FiltersForPassEN4util6IdTypeINS_20AggregatedRenderPassEmLm0ELm1EEE(%"class.viz::DirectRenderer"* %182, i64 %184) #15
  %186 = icmp eq %"class.cc::FilterOperations"* %185, null
  br i1 %186, label %330, label %187

187:                                              ; preds = %94
  %188 = bitcast %class.sk_sp.116* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %188) #15
  %189 = getelementptr inbounds %class.sk_sp.116, %class.sk_sp.116* %14, i64 0, i32 0
  store %"class.cc::PaintFilter"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintFilter"*), %"class.cc::PaintFilter"** %189, align 8
  %190 = bitcast %"class.gfx::SizeF"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %190) #15
  %191 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %92, i64 0, i32 1, i32 1, i32 2, i32 1, i32 0
  %192 = load i32, i32* %191, align 4
  %193 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %92, i64 0, i32 1, i32 1, i32 2, i32 1, i32 1
  %194 = load i32, i32* %193, align 4
  %195 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %15, i64 0, i32 0
  %196 = icmp sgt i32 %192, 0
  %197 = select i1 %196, i32 %192, i32 0
  %198 = sitofp i32 %197 to float
  store float %198, float* %195, align 4
  %199 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %15, i64 0, i32 1
  %200 = icmp sgt i32 %194, 0
  %201 = select i1 %200, i32 %194, i32 0
  %202 = sitofp i32 %201 to float
  store float %202, float* %199, align 4
  %203 = bitcast %"class.gfx::Vector2dF"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %203) #15
  %204 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %16, i64 0, i32 0
  store float 0.000000e+00, float* %204, align 4
  %205 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %16, i64 0, i32 1
  store float 0.000000e+00, float* %205, align 4
  call void @_ZN2cc20RenderSurfaceFilters16BuildImageFilterERKNS_16FilterOperationsERKN3gfx5SizeFERKNS4_9Vector2dFE(%class.sk_sp.116* nonnull sret %14, %"class.cc::FilterOperations"* nonnull dereferenceable(24) %185, %"class.gfx::SizeF"* nonnull dereferenceable(8) %15, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %16) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %203) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %190) #15
  %206 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %189, align 8
  %207 = icmp eq %"class.cc::PaintFilter"* %206, null
  br i1 %207, label %208, label %209

208:                                              ; preds = %187
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %188) #15
  br label %330

209:                                              ; preds = %187
  %210 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %206, i64 0, i32 1, i32 0
  %211 = load %class.SkImageFilter*, %class.SkImageFilter** %210, align 8
  %212 = icmp eq %class.SkImageFilter* %211, null
  br i1 %212, label %313, label %213

213:                                              ; preds = %209
  %214 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %211, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = atomicrmw add i32* %214, i32 1 monotonic
  %216 = bitcast %struct.SkIRect* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %216) #15
  %217 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %17, i64 0, i32 0
  %218 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %17, i64 0, i32 1
  %219 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %17, i64 0, i32 2
  %220 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %17, i64 0, i32 3
  %221 = bitcast %class.sk_sp.335* %18 to i8*
  %222 = bitcast %struct.SkIRect* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %222, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %221) #15
  call void @_ZNK3viz16SoftwareRenderer16ApplyImageFilterEP13SkImageFilterPKNS_28AggregatedRenderPassDrawQuadERK8SkBitmapbP7SkIRect(%class.sk_sp.335* nonnull sret %18, %"class.viz::SoftwareRenderer"* undef, %class.SkImageFilter* nonnull %211, %"class.viz::AggregatedRenderPassDrawQuad"* %1, %class.SkBitmap* dereferenceable(56) %98, i1 zeroext true, %struct.SkIRect* nonnull %17)
  %223 = bitcast %class.sk_sp.335* %18 to i64*
  %224 = load i64, i64* %223, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %221) #15
  %225 = load i32, i32* %219, align 4
  %226 = sext i32 %225 to i64
  %227 = load i32, i32* %217, align 4
  %228 = sext i32 %227 to i64
  %229 = sub nsw i64 %226, %228
  %230 = load i32, i32* %220, align 4
  %231 = sext i32 %230 to i64
  %232 = load i32, i32* %218, align 4
  %233 = sext i32 %232 to i64
  %234 = sub nsw i64 %231, %233
  %235 = icmp slt i64 %229, 1
  %236 = icmp slt i64 %234, 1
  %237 = or i1 %235, %236
  br i1 %237, label %303, label %238

238:                                              ; preds = %213
  %239 = or i64 %234, %229
  %240 = add nsw i64 %239, 2147483648
  %241 = icmp ugt i64 %240, 4294967295
  br i1 %241, label %303, label %242

242:                                              ; preds = %238
  %243 = icmp eq i64 %224, 0
  br i1 %243, label %303, label %244

244:                                              ; preds = %242
  %245 = bitcast { <2 x float>, <2 x float> }* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %245) #15
  %246 = bitcast { <2 x float>, <2 x float> }* %21 to i8*
  %247 = bitcast { <2 x float>, <2 x float> }* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %247, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %246) #15
  %248 = sitofp i32 %227 to float
  %249 = insertelement <2 x float> undef, float %248, i32 0
  %250 = sitofp i32 %232 to float
  %251 = insertelement <2 x float> %249, float %250, i32 1
  %252 = sitofp i32 %225 to float
  %253 = insertelement <2 x float> undef, float %252, i32 0
  %254 = sitofp i32 %230 to float
  %255 = insertelement <2 x float> %253, float %254, i32 1
  %256 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %21, i64 0, i32 0
  store <2 x float> %251, <2 x float>* %256, align 8
  %257 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %21, i64 0, i32 1
  store <2 x float> %255, <2 x float>* %257, align 8
  %258 = call { <2 x float>, <2 x float> } @_ZN3gfx13SkRectToRectFERK6SkRect(%struct.SkRect* nonnull dereferenceable(16) %22) #15
  %259 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %19, i64 0, i32 0
  %260 = extractvalue { <2 x float>, <2 x float> } %258, 0
  store <2 x float> %260, <2 x float>* %259, align 8
  %261 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %19, i64 0, i32 1
  %262 = extractvalue { <2 x float>, <2 x float> } %258, 1
  store <2 x float> %262, <2 x float>* %261, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %246) #15
  %263 = bitcast { <2 x float>, <2 x float> }* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %263) #15
  %264 = bitcast { <2 x float>, <2 x float> }* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %264) #15
  %265 = call { <2 x float>, <2 x float> } @_ZN3viz14DirectRenderer14QuadVertexRectEv() #15
  %266 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %25, i64 0, i32 0
  %267 = extractvalue { <2 x float>, <2 x float> } %265, 0
  store <2 x float> %267, <2 x float>* %266, align 8
  %268 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %25, i64 0, i32 1
  %269 = extractvalue { <2 x float>, <2 x float> } %265, 1
  store <2 x float> %269, <2 x float>* %268, align 8
  %270 = bitcast %"class.gfx::RectF"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %270) #15
  %271 = load i32, i32* %122, align 4
  %272 = sitofp i32 %271 to float
  %273 = load i32, i32* %125, align 4
  %274 = sitofp i32 %273 to float
  %275 = load i32, i32* %128, align 4
  %276 = load i32, i32* %130, align 4
  %277 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %27, i64 0, i32 0, i32 0
  store float %272, float* %277, align 4
  %278 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %27, i64 0, i32 0, i32 1
  store float %274, float* %278, align 4
  %279 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %27, i64 0, i32 1, i32 0
  %280 = icmp sgt i32 %275, 0
  %281 = select i1 %280, i32 %275, i32 0
  %282 = sitofp i32 %281 to float
  store float %282, float* %279, align 4
  %283 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %27, i64 0, i32 1, i32 1
  %284 = icmp sgt i32 %276, 0
  %285 = select i1 %284, i32 %276, i32 0
  %286 = sitofp i32 %285 to float
  store float %286, float* %283, align 4
  %287 = call { <2 x float>, <2 x float> } @_ZN2cc8MathUtil21ScaleRectProportionalERKN3gfx5RectFES4_S4_(%"class.gfx::RectF"* nonnull dereferenceable(16) %26, %"class.gfx::RectF"* nonnull dereferenceable(16) %27, %"class.gfx::RectF"* nonnull dereferenceable(16) %20) #15
  %288 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %23, i64 0, i32 0
  %289 = extractvalue { <2 x float>, <2 x float> } %287, 0
  store <2 x float> %289, <2 x float>* %288, align 8
  %290 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %23, i64 0, i32 1
  %291 = extractvalue { <2 x float>, <2 x float> } %287, 1
  store <2 x float> %291, <2 x float>* %290, align 8
  %292 = call { <2 x float>, <2 x float> } @_ZN3gfx13RectFToSkRectERKNS_5RectFE(%"class.gfx::RectF"* nonnull dereferenceable(16) %24) #15
  %293 = extractvalue { <2 x float>, <2 x float> } %292, 0
  %294 = extractvalue { <2 x float>, <2 x float> } %292, 1
  store <2 x float> %293, <2 x float>* %169, align 8
  %295 = bitcast float* %113 to <2 x float>*
  store <2 x float> %294, <2 x float>* %295, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %99, i8* nonnull align 8 %112, i64 16, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %270) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %264) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %263) #15
  %296 = sub i32 %225, %227
  %297 = sitofp i32 %296 to float
  %298 = sub i32 %230, %232
  %299 = sitofp i32 %298 to float
  %300 = insertelement <2 x float> undef, float %297, i32 0
  %301 = insertelement <2 x float> %300, float %299, i32 1
  store <2 x float> zeroinitializer, <2 x float>* %178, align 8
  %302 = bitcast float* %174 to <2 x float>*
  store <2 x float> %301, <2 x float>* %302, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %245) #15
  br label %303

303:                                              ; preds = %238, %213, %244, %242
  %304 = phi i32 [ 0, %242 ], [ 0, %244 ], [ 1, %213 ], [ 1, %238 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %216) #15
  %305 = atomicrmw add i32* %214, i32 -1 acq_rel
  %306 = icmp eq i32 %305, 1
  br i1 %306, label %307, label %313

307:                                              ; preds = %303
  %308 = bitcast %class.SkImageFilter* %211 to %class.SkRefCntBase*
  %309 = bitcast %class.SkImageFilter* %211 to void (%class.SkRefCntBase*)***
  %310 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %309, align 8
  %311 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %310, i64 2
  %312 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %311, align 8
  call void %312(%class.SkRefCntBase* nonnull %308) #15
  br label %313

313:                                              ; preds = %209, %303, %307
  %314 = phi i32 [ 0, %209 ], [ %304, %307 ], [ %304, %303 ]
  %315 = phi i64 [ 0, %209 ], [ %224, %307 ], [ %224, %303 ]
  %316 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %189, align 8
  %317 = icmp eq %"class.cc::PaintFilter"* %316, null
  br i1 %317, label %328, label %318

318:                                              ; preds = %313
  %319 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %316, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %320 = atomicrmw add i32* %319, i32 -1 acq_rel
  %321 = icmp eq i32 %320, 1
  br i1 %321, label %322, label %328

322:                                              ; preds = %318
  %323 = bitcast %"class.cc::PaintFilter"* %316 to %class.SkRefCntBase*
  %324 = bitcast %"class.cc::PaintFilter"* %316 to void (%class.SkRefCntBase*)***
  %325 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %324, align 8
  %326 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %325, i64 2
  %327 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %326, align 8
  call void %327(%class.SkRefCntBase* nonnull %323) #15
  br label %328

328:                                              ; preds = %313, %318, %322
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %188) #15
  %329 = icmp eq i32 %314, 0
  br i1 %329, label %330, label %524

330:                                              ; preds = %208, %94, %328
  %331 = phi i64 [ 0, %94 ], [ %315, %328 ], [ 0, %208 ]
  %332 = bitcast %class.SkMatrix* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %332) #15
  %333 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %28, i64 0, i32 1
  %334 = bitcast %class.SkMatrix* %28 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %334, align 16, !alias.scope !4
  %335 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %28, i64 0, i32 0, i64 4
  %336 = bitcast float* %335 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %336, align 16, !alias.scope !4
  %337 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %28, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %337, align 16, !alias.scope !4
  store i32 16, i32* %333, align 4, !alias.scope !4
  %338 = call zeroext i1 @_ZN8SkMatrix13setRectToRectERK6SkRectS2_NS_10ScaleToFitE(%class.SkMatrix* nonnull %28, %struct.SkRect* nonnull dereferenceable(16) %13, %struct.SkRect* nonnull dereferenceable(16) %4, i32 0) #15
  %339 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %29, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %339) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %339, i8* align 4 getelementptr inbounds ({ i8, [3 x i8], %struct.SkCubicResampler, i32, i32 }, { i8, [3 x i8], %struct.SkCubicResampler, i32, i32 }* @__const._ZN3viz16SoftwareRenderer18DrawRenderPassQuadEPKNS_28AggregatedRenderPassDrawQuadE.sampling, i64 0, i32 0), i64 20, i1 false)
  %340 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 8
  %341 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 8, i32 8, i32 0, i32 0
  %342 = load i32, i32* %341, align 8
  %343 = lshr i32 %342, 8
  %344 = and i32 %343, 3
  call void @_ZN2cc10PaintFlags32FilterQualityToSkSamplingOptionsE15SkFilterQuality(%struct.SkSamplingOptions* nonnull sret %29, i32 %344) #15
  %345 = icmp eq i64 %331, 0
  br i1 %345, label %346, label %348

346:                                              ; preds = %330
  %347 = bitcast %class.sk_sp.224* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %347) #15
  call void @_ZNK8SkBitmap10makeShaderE10SkTileModeS0_RK17SkSamplingOptionsPK8SkMatrix(%class.sk_sp.224* nonnull sret %30, %class.SkBitmap* %98, i32 0, i32 0, %struct.SkSamplingOptions* nonnull dereferenceable(20) %29, %class.SkMatrix* nonnull %28) #15
  br label %351

348:                                              ; preds = %330
  %349 = inttoptr i64 %331 to %class.SkImage*
  %350 = bitcast %class.sk_sp.224* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %350) #15
  call void @_ZNK7SkImage10makeShaderE10SkTileModeS0_RK17SkSamplingOptionsPK8SkMatrix(%class.sk_sp.224* nonnull sret %31, %class.SkImage* nonnull %349, i32 0, i32 0, %struct.SkSamplingOptions* nonnull dereferenceable(20) %29, %class.SkMatrix* nonnull %28) #15
  br label %351

351:                                              ; preds = %348, %346
  %352 = phi %class.sk_sp.224* [ %31, %348 ], [ %30, %346 ]
  %353 = phi i8* [ %350, %348 ], [ %347, %346 ]
  %354 = bitcast %class.sk_sp.224* %352 to i64*
  %355 = load i64, i64* %354, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %353) #15
  %356 = getelementptr inbounds %"class.viz::AggregatedRenderPassDrawQuad", %"class.viz::AggregatedRenderPassDrawQuad"* %1, i64 0, i32 0, i32 0, i32 7, i32 1, i64 0, i32 0, i32 0
  %357 = load i32, i32* %356, align 4
  %358 = icmp eq i32 %357, 0
  br i1 %358, label %439, label %359

359:                                              ; preds = %351
  %360 = bitcast %"class.viz::DisplayResourceProviderSoftware::ScopedReadLockSkImage"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %360) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %360, i8 -86, i64 24, i1 false)
  %361 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 0, i32 4
  %362 = bitcast %"class.viz::DisplayResourceProvider"** %361 to %"class.viz::DisplayResourceProviderSoftware"**
  %363 = load %"class.viz::DisplayResourceProviderSoftware"*, %"class.viz::DisplayResourceProviderSoftware"** %362, align 8
  call void @_ZN3viz31DisplayResourceProviderSoftware21ScopedReadLockSkImageC1EPS0_N4util6IdTypeINS_20ResourceIdTypeMarkerEjLj0ELj1EEE11SkAlphaType15GrSurfaceOrigin(%"class.viz::DisplayResourceProviderSoftware::ScopedReadLockSkImage"* nonnull %32, %"class.viz::DisplayResourceProviderSoftware"* %363, i32 %357, i32 2, i32 0) #15
  %364 = getelementptr inbounds %"class.viz::DisplayResourceProviderSoftware::ScopedReadLockSkImage", %"class.viz::DisplayResourceProviderSoftware::ScopedReadLockSkImage"* %32, i64 0, i32 2, i32 0
  %365 = load %class.SkImage*, %class.SkImage** %364, align 8
  %366 = icmp eq %class.SkImage* %365, null
  br i1 %366, label %510, label %367

367:                                              ; preds = %359
  %368 = bitcast { <2 x float>, <2 x float> }* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %368) #15
  %369 = bitcast { <2 x float>, <2 x float> }* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %369) #15
  %370 = getelementptr inbounds %"class.viz::AggregatedRenderPassDrawQuad", %"class.viz::AggregatedRenderPassDrawQuad"* %1, i64 0, i32 0, i32 2, i32 0
  %371 = load i32, i32* %370, align 4
  %372 = sitofp i32 %371 to float
  %373 = getelementptr inbounds %"class.viz::AggregatedRenderPassDrawQuad", %"class.viz::AggregatedRenderPassDrawQuad"* %1, i64 0, i32 0, i32 2, i32 1
  %374 = load i32, i32* %373, align 4
  %375 = sitofp i32 %374 to float
  %376 = getelementptr inbounds %"class.viz::AggregatedRenderPassDrawQuad", %"class.viz::AggregatedRenderPassDrawQuad"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %377 = load float, float* %376, align 4
  %378 = fmul float %377, %372
  %379 = getelementptr inbounds %"class.viz::AggregatedRenderPassDrawQuad", %"class.viz::AggregatedRenderPassDrawQuad"* %1, i64 0, i32 0, i32 1, i32 0, i32 1
  %380 = load float, float* %379, align 4
  %381 = fmul float %380, %375
  %382 = getelementptr inbounds %"class.viz::AggregatedRenderPassDrawQuad", %"class.viz::AggregatedRenderPassDrawQuad"* %1, i64 0, i32 0, i32 1, i32 1, i32 0
  %383 = load float, float* %382, align 4
  %384 = fmul float %383, %372
  %385 = getelementptr inbounds %"class.viz::AggregatedRenderPassDrawQuad", %"class.viz::AggregatedRenderPassDrawQuad"* %1, i64 0, i32 0, i32 1, i32 1, i32 1
  %386 = load float, float* %385, align 4
  %387 = fmul float %386, %375
  %388 = insertelement <2 x float> undef, float %378, i32 0
  %389 = insertelement <2 x float> %388, float %381, i32 1
  %390 = fcmp ogt float %384, 0x3EB0000000000000
  %391 = select i1 %390, float %384, float 0.000000e+00
  %392 = insertelement <2 x float> undef, float %391, i32 0
  %393 = fcmp ogt float %387, 0x3EB0000000000000
  %394 = select i1 %393, float %387, float 0.000000e+00
  %395 = insertelement <2 x float> %392, float %394, i32 1
  %396 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %35, i64 0, i32 0
  store <2 x float> %389, <2 x float>* %396, align 8
  %397 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %35, i64 0, i32 1
  store <2 x float> %395, <2 x float>* %397, align 8
  %398 = call { <2 x float>, <2 x float> } @_ZN3gfx13RectFToSkRectERKNS_5RectFE(%"class.gfx::RectF"* nonnull dereferenceable(16) %36) #15
  %399 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %33, i64 0, i32 0
  %400 = extractvalue { <2 x float>, <2 x float> } %398, 0
  store <2 x float> %400, <2 x float>* %399, align 8
  %401 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %33, i64 0, i32 1
  %402 = extractvalue { <2 x float>, <2 x float> } %398, 1
  store <2 x float> %402, <2 x float>* %401, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %369) #15
  %403 = bitcast %class.SkMatrix* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %403) #15
  %404 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %37, i64 0, i32 1
  %405 = bitcast %class.SkMatrix* %37 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %405, align 16, !alias.scope !9
  %406 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %37, i64 0, i32 0, i64 4
  %407 = bitcast float* %406 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %407, align 16, !alias.scope !9
  %408 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %37, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %408, align 16, !alias.scope !9
  store i32 16, i32* %404, align 4, !alias.scope !9
  %409 = call zeroext i1 @_ZN8SkMatrix13setRectToRectERK6SkRectS2_NS_10ScaleToFitE(%class.SkMatrix* nonnull %37, %struct.SkRect* nonnull dereferenceable(16) %34, %struct.SkRect* nonnull dereferenceable(16) %4, i32 0) #15
  %410 = load %class.SkImage*, %class.SkImage** %364, align 8
  call void @_ZNK7SkImage10makeShaderE10SkTileModeS0_RK17SkSamplingOptionsPK8SkMatrix(%class.sk_sp.224* nonnull sret %39, %class.SkImage* %410, i32 0, i32 0, %struct.SkSamplingOptions* nonnull dereferenceable(20) %29, %class.SkMatrix* nonnull %37) #15
  call void @_ZN18SkShaderMaskFilter4MakeE5sk_spI8SkShaderE(%class.sk_sp.225* nonnull sret %38, %class.sk_sp.224* nonnull %39) #15
  call void @_ZN7SkPaint13setMaskFilterE5sk_spI12SkMaskFilterE(%class.SkPaint* %340, %class.sk_sp.225* nonnull %38) #15
  %411 = getelementptr inbounds %class.sk_sp.225, %class.sk_sp.225* %38, i64 0, i32 0
  %412 = load %class.SkMaskFilter*, %class.SkMaskFilter** %411, align 8
  %413 = icmp eq %class.SkMaskFilter* %412, null
  br i1 %413, label %424, label %414

414:                                              ; preds = %367
  %415 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %412, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %416 = atomicrmw add i32* %415, i32 -1 acq_rel
  %417 = icmp eq i32 %416, 1
  br i1 %417, label %418, label %424

418:                                              ; preds = %414
  %419 = bitcast %class.SkMaskFilter* %412 to %class.SkRefCntBase*
  %420 = bitcast %class.SkMaskFilter* %412 to void (%class.SkRefCntBase*)***
  %421 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %420, align 8
  %422 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %421, i64 2
  %423 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %422, align 8
  call void %423(%class.SkRefCntBase* nonnull %419) #15
  br label %424

424:                                              ; preds = %367, %414, %418
  %425 = getelementptr inbounds %class.sk_sp.224, %class.sk_sp.224* %39, i64 0, i32 0
  %426 = load %class.SkShader*, %class.SkShader** %425, align 8
  %427 = icmp eq %class.SkShader* %426, null
  br i1 %427, label %438, label %428

428:                                              ; preds = %424
  %429 = getelementptr inbounds %class.SkShader, %class.SkShader* %426, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %430 = atomicrmw add i32* %429, i32 -1 acq_rel
  %431 = icmp eq i32 %430, 1
  br i1 %431, label %432, label %438

432:                                              ; preds = %428
  %433 = bitcast %class.SkShader* %426 to %class.SkRefCntBase*
  %434 = bitcast %class.SkShader* %426 to void (%class.SkRefCntBase*)***
  %435 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %434, align 8
  %436 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %435, i64 2
  %437 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %436, align 8
  call void %437(%class.SkRefCntBase* nonnull %433) #15
  br label %438

438:                                              ; preds = %424, %428, %432
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %403) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %368) #15
  call void @_ZN3viz31DisplayResourceProviderSoftware21ScopedReadLockSkImageD1Ev(%"class.viz::DisplayResourceProviderSoftware::ScopedReadLockSkImage"* nonnull %32) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %360) #15
  br label %439

439:                                              ; preds = %351, %438
  %440 = bitcast %class.sk_sp.224* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %440) #15
  %441 = getelementptr inbounds %class.sk_sp.224, %class.sk_sp.224* %40, i64 0, i32 0
  store %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*), %class.SkShader** %441, align 8
  call void @_ZNK3viz16SoftwareRenderer23GetBackdropFilterShaderEPKNS_28AggregatedRenderPassDrawQuadE10SkTileMode(%class.sk_sp.224* nonnull sret %40, %"class.viz::SoftwareRenderer"* %0, %"class.viz::AggregatedRenderPassDrawQuad"* %1, i32 0)
  %442 = load %class.SkShader*, %class.SkShader** %441, align 8
  %443 = icmp eq %class.SkShader* %442, null
  br i1 %443, label %479, label %444

444:                                              ; preds = %439
  %445 = bitcast %class.SkPaint* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %445) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %445, i8* align 8 bitcast (%class.SkPaint* @__const._ZNK3viz16SoftwareRenderer23GetBackdropFilterShaderEPKNS_28AggregatedRenderPassDrawQuadE10SkTileMode.paint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %41) #15
  %446 = bitcast %class.sk_sp.224* %40 to i64*
  %447 = load i64, i64* %446, align 8
  store %class.SkShader* null, %class.SkShader** %441, align 8
  %448 = bitcast %class.sk_sp.224* %42 to i64*
  store i64 %447, i64* %448, align 8
  call void @_ZN7SkPaint9setShaderE5sk_spI8SkShaderE(%class.SkPaint* nonnull %41, %class.sk_sp.224* nonnull %42) #15
  %449 = getelementptr inbounds %class.sk_sp.224, %class.sk_sp.224* %42, i64 0, i32 0
  %450 = load %class.SkShader*, %class.SkShader** %449, align 8
  %451 = icmp eq %class.SkShader* %450, null
  br i1 %451, label %462, label %452

452:                                              ; preds = %444
  %453 = getelementptr inbounds %class.SkShader, %class.SkShader* %450, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %454 = atomicrmw add i32* %453, i32 -1 acq_rel
  %455 = icmp eq i32 %454, 1
  br i1 %455, label %456, label %462

456:                                              ; preds = %452
  %457 = bitcast %class.SkShader* %450 to %class.SkRefCntBase*
  %458 = bitcast %class.SkShader* %450 to void (%class.SkRefCntBase*)***
  %459 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %458, align 8
  %460 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %459, i64 2
  %461 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %460, align 8
  call void %461(%class.SkRefCntBase* nonnull %457) #15
  br label %462

462:                                              ; preds = %444, %452, %456
  call void @_ZNK7SkPaint13refMaskFilterEv(%class.sk_sp.225* nonnull sret %43, %class.SkPaint* %340) #15
  call void @_ZN7SkPaint13setMaskFilterE5sk_spI12SkMaskFilterE(%class.SkPaint* nonnull %41, %class.sk_sp.225* nonnull %43) #15
  %463 = getelementptr inbounds %class.sk_sp.225, %class.sk_sp.225* %43, i64 0, i32 0
  %464 = load %class.SkMaskFilter*, %class.SkMaskFilter** %463, align 8
  %465 = icmp eq %class.SkMaskFilter* %464, null
  br i1 %465, label %476, label %466

466:                                              ; preds = %462
  %467 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %464, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %468 = atomicrmw add i32* %467, i32 -1 acq_rel
  %469 = icmp eq i32 %468, 1
  br i1 %469, label %470, label %476

470:                                              ; preds = %466
  %471 = bitcast %class.SkMaskFilter* %464 to %class.SkRefCntBase*
  %472 = bitcast %class.SkMaskFilter* %464 to void (%class.SkRefCntBase*)***
  %473 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %472, align 8
  %474 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %473, i64 2
  %475 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %474, align 8
  call void %475(%class.SkRefCntBase* nonnull %471) #15
  br label %476

476:                                              ; preds = %462, %466, %470
  %477 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 7
  %478 = load %class.SkCanvas*, %class.SkCanvas** %477, align 8
  call void @_ZN8SkCanvas8drawRectERK6SkRectRK7SkPaint(%class.SkCanvas* %478, %struct.SkRect* nonnull dereferenceable(16) %7, %class.SkPaint* nonnull dereferenceable(72) %41) #15
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %41) #15
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %445) #15
  br label %479

479:                                              ; preds = %439, %476
  %480 = bitcast %class.sk_sp.224* %44 to i64*
  store i64 %355, i64* %480, align 8
  call void @_ZN7SkPaint9setShaderE5sk_spI8SkShaderE(%class.SkPaint* %340, %class.sk_sp.224* nonnull %44) #15
  %481 = getelementptr inbounds %class.sk_sp.224, %class.sk_sp.224* %44, i64 0, i32 0
  %482 = load %class.SkShader*, %class.SkShader** %481, align 8
  %483 = icmp eq %class.SkShader* %482, null
  br i1 %483, label %494, label %484

484:                                              ; preds = %479
  %485 = getelementptr inbounds %class.SkShader, %class.SkShader* %482, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %486 = atomicrmw add i32* %485, i32 -1 acq_rel
  %487 = icmp eq i32 %486, 1
  br i1 %487, label %488, label %494

488:                                              ; preds = %484
  %489 = bitcast %class.SkShader* %482 to %class.SkRefCntBase*
  %490 = bitcast %class.SkShader* %482 to void (%class.SkRefCntBase*)***
  %491 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %490, align 8
  %492 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %491, i64 2
  %493 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %492, align 8
  call void %493(%class.SkRefCntBase* nonnull %489) #15
  br label %494

494:                                              ; preds = %479, %484, %488
  %495 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 7
  %496 = load %class.SkCanvas*, %class.SkCanvas** %495, align 8
  call void @_ZN8SkCanvas8drawRectERK6SkRectRK7SkPaint(%class.SkCanvas* %496, %struct.SkRect* nonnull dereferenceable(16) %7, %class.SkPaint* dereferenceable(72) %340) #15
  %497 = load %class.SkShader*, %class.SkShader** %441, align 8
  %498 = icmp eq %class.SkShader* %497, null
  br i1 %498, label %509, label %499

499:                                              ; preds = %494
  %500 = getelementptr inbounds %class.SkShader, %class.SkShader* %497, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %501 = atomicrmw add i32* %500, i32 -1 acq_rel
  %502 = icmp eq i32 %501, 1
  br i1 %502, label %503, label %509

503:                                              ; preds = %499
  %504 = bitcast %class.SkShader* %497 to %class.SkRefCntBase*
  %505 = bitcast %class.SkShader* %497 to void (%class.SkRefCntBase*)***
  %506 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %505, align 8
  %507 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %506, i64 2
  %508 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %507, align 8
  call void %508(%class.SkRefCntBase* nonnull %504) #15
  br label %509

509:                                              ; preds = %503, %499, %494
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %440) #15
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %339) #15
  br label %523

510:                                              ; preds = %359
  call void @_ZN3viz31DisplayResourceProviderSoftware21ScopedReadLockSkImageD1Ev(%"class.viz::DisplayResourceProviderSoftware::ScopedReadLockSkImage"* nonnull %32) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %360) #15
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %339) #15
  %511 = icmp eq i64 %355, 0
  br i1 %511, label %523, label %512

512:                                              ; preds = %510
  %513 = inttoptr i64 %355 to %class.SkShader*
  %514 = getelementptr inbounds %class.SkShader, %class.SkShader* %513, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %515 = atomicrmw add i32* %514, i32 -1 acq_rel
  %516 = icmp eq i32 %515, 1
  br i1 %516, label %517, label %523

517:                                              ; preds = %512
  %518 = inttoptr i64 %355 to %class.SkRefCntBase*
  %519 = inttoptr i64 %355 to void (%class.SkRefCntBase*)***
  %520 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %519, align 8
  %521 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %520, i64 2
  %522 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %521, align 8
  call void %522(%class.SkRefCntBase* nonnull %518) #15
  br label %523

523:                                              ; preds = %509, %510, %512, %517
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %332) #15
  br label %524

524:                                              ; preds = %328, %523
  %525 = phi i64 [ %331, %523 ], [ %315, %328 ]
  %526 = icmp eq i64 %525, 0
  br i1 %526, label %538, label %527

527:                                              ; preds = %524
  %528 = inttoptr i64 %525 to %class.SkImage*
  %529 = getelementptr inbounds %class.SkImage, %class.SkImage* %528, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %530 = atomicrmw add i32* %529, i32 -1 acq_rel
  %531 = icmp eq i32 %530, 1
  br i1 %531, label %532, label %538

532:                                              ; preds = %527
  %533 = inttoptr i64 %525 to %class.SkRefCntBase*
  %534 = inttoptr i64 %525 to void (%class.SkRefCntBase*)***
  %535 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %534, align 8
  %536 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %535, i64 2
  %537 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %536, align 8
  call void %537(%class.SkRefCntBase* nonnull %533) #15
  br label %538

538:                                              ; preds = %524, %527, %532
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %173) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %112) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %99) #15
  br label %539

539:                                              ; preds = %88, %538
  ret void
}

declare %"class.viz::AggregatedRenderPassDrawQuad"* @_ZN3viz28AggregatedRenderPassDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16SoftwareRenderer19DrawDebugBorderQuadEPKNS_19DebugBorderDrawQuadE(%"class.viz::SoftwareRenderer"*, %"class.viz::DebugBorderDrawQuad"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca [4 x %struct.SkPoint], align 16
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = bitcast { <2 x float>, <2 x float> }* %4 to %struct.SkRect*
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = bitcast { <2 x float>, <2 x float> }* %6 to %"class.gfx::RectF"*
  %8 = alloca [4 x %struct.SkPoint], align 16
  %9 = alloca %class.SkMatrix, align 4
  %10 = bitcast [4 x %struct.SkPoint]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #15
  %11 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %3, i64 0, i64 0
  %12 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  %13 = bitcast [4 x %struct.SkPoint]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 -1, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #15
  %14 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #15
  %15 = tail call { <2 x float>, <2 x float> } @_ZN3viz14DirectRenderer14QuadVertexRectEv() #15
  %16 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  %17 = extractvalue { <2 x float>, <2 x float> } %15, 0
  store <2 x float> %17, <2 x float>* %16, align 8
  %18 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  %19 = extractvalue { <2 x float>, <2 x float> } %15, 1
  store <2 x float> %19, <2 x float>* %18, align 8
  %20 = call { <2 x float>, <2 x float> } @_ZN3gfx13RectFToSkRectERKNS_5RectFE(%"class.gfx::RectF"* nonnull dereferenceable(16) %7) #15
  %21 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  %22 = extractvalue { <2 x float>, <2 x float> } %20, 0
  store <2 x float> %22, <2 x float>* %21, align 8
  %23 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  %24 = extractvalue { <2 x float>, <2 x float> } %20, 1
  store <2 x float> %24, <2 x float>* %23, align 8
  call void @_ZNK6SkRect6toQuadEP7SkPoint(%struct.SkRect* nonnull %5, %struct.SkPoint* nonnull %11) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #15
  %25 = bitcast [4 x %struct.SkPoint]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #15
  %26 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %8, i64 0, i64 0
  %27 = bitcast %class.SkMatrix* %9 to i8*
  %28 = bitcast [4 x %struct.SkPoint]* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -1, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %27) #15
  %29 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 7
  %30 = load %class.SkCanvas*, %class.SkCanvas** %29, align 8
  call void @_ZNK8SkCanvas14getTotalMatrixEv(%class.SkMatrix* nonnull sret %9, %class.SkCanvas* %30) #15
  call void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix* nonnull %9, %struct.SkPoint* nonnull %26, %struct.SkPoint* nonnull %11, i32 4) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %27) #15
  %31 = load %class.SkCanvas*, %class.SkCanvas** %29, align 8
  call void @_ZN8SkCanvas11resetMatrixEv(%class.SkCanvas* %31) #15
  %32 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 8
  %33 = getelementptr inbounds %"class.viz::DebugBorderDrawQuad", %"class.viz::DebugBorderDrawQuad"* %1, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  call void @_ZN7SkPaint8setColorEj(%class.SkPaint* %32, i32 %34) #15
  %35 = getelementptr inbounds %"class.viz::DebugBorderDrawQuad", %"class.viz::DebugBorderDrawQuad"* %1, i64 0, i32 0, i32 6
  %36 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %35, align 8
  %37 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %36, i64 0, i32 7
  %38 = load float, float* %37, align 8
  %39 = load i32, i32* %33, align 4
  %40 = lshr i32 %39, 24
  %41 = uitofp i32 %40 to float
  %42 = fmul float %38, %41
  %43 = fptoui float %42 to i32
  %44 = uitofp i32 %43 to float
  %45 = fmul float %44, 0x3F70101020000000
  call void @_ZN7SkPaint9setAlphafEf(%class.SkPaint* %32, float %45) #15
  call void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint* %32, i8 zeroext 1) #15
  %46 = getelementptr inbounds %"class.viz::DebugBorderDrawQuad", %"class.viz::DebugBorderDrawQuad"* %1, i64 0, i32 2
  %47 = load i32, i32* %46, align 8
  %48 = sitofp i32 %47 to float
  call void @_ZN7SkPaint14setStrokeWidthEf(%class.SkPaint* %32, float %48) #15
  %49 = load %class.SkCanvas*, %class.SkCanvas** %29, align 8
  call void @_ZN8SkCanvas10drawPointsENS_9PointModeEmPK7SkPointRK7SkPaint(%class.SkCanvas* %49, i32 2, i64 4, %struct.SkPoint* nonnull %26, %class.SkPaint* dereferenceable(72) %32) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #15
  ret void
}

declare %"class.viz::DebugBorderDrawQuad"* @_ZN3viz19DebugBorderDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16SoftwareRenderer15DrawPictureQuadEPKNS_15PictureDrawQuadE(%"class.viz::SoftwareRenderer"* nocapture readonly, %"class.viz::PictureDrawQuad"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = alloca %class.SkMatrix, align 16
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = bitcast { <2 x float>, <2 x float> }* %5 to %struct.SkRect*
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = bitcast { <2 x float>, <2 x float> }* %7 to %struct.SkRect*
  %9 = alloca { <2 x float>, <2 x float> }, align 8
  %10 = bitcast { <2 x float>, <2 x float> }* %9 to %"class.gfx::RectF"*
  %11 = alloca %"class.absl::optional.380", align 8
  %12 = alloca %"class.cc::ScopedSubnormalFloatDisabler", align 4
  %13 = alloca %"class.viz::(anonymous namespace)::AnimatedImagesProvider", align 8
  %14 = alloca { <2 x float>, <2 x float> }, align 8
  %15 = bitcast { <2 x float>, <2 x float> }* %14 to %struct.SkRect*
  %16 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 7
  %17 = load %class.SkCanvas*, %class.SkCanvas** %16, align 8
  %18 = bitcast %class.SkMatrix* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #15
  %19 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #15
  %20 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %1, i64 0, i32 0, i32 1
  %21 = tail call { <2 x float>, <2 x float> } @_ZN3gfx13RectFToSkRectERKNS_5RectFE(%"class.gfx::RectF"* dereferenceable(16) %20) #15
  %22 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  %23 = extractvalue { <2 x float>, <2 x float> } %21, 0
  store <2 x float> %23, <2 x float>* %22, align 8
  %24 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  %25 = extractvalue { <2 x float>, <2 x float> } %21, 1
  store <2 x float> %25, <2 x float>* %24, align 8
  %26 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #15
  %27 = bitcast { <2 x float>, <2 x float> }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #15
  %28 = tail call { <2 x float>, <2 x float> } @_ZN3viz14DirectRenderer14QuadVertexRectEv() #15
  %29 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 0
  %30 = extractvalue { <2 x float>, <2 x float> } %28, 0
  store <2 x float> %30, <2 x float>* %29, align 8
  %31 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 1
  %32 = extractvalue { <2 x float>, <2 x float> } %28, 1
  store <2 x float> %32, <2 x float>* %31, align 8
  %33 = call { <2 x float>, <2 x float> } @_ZN3gfx13RectFToSkRectERKNS_5RectFE(%"class.gfx::RectF"* nonnull dereferenceable(16) %10) #15
  %34 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  %35 = extractvalue { <2 x float>, <2 x float> } %33, 0
  store <2 x float> %35, <2 x float>* %34, align 8
  %36 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  %37 = extractvalue { <2 x float>, <2 x float> } %33, 1
  store <2 x float> %37, <2 x float>* %36, align 8
  %38 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 1
  %39 = bitcast %class.SkMatrix* %4 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %39, align 16, !alias.scope !14
  %40 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 4
  %41 = bitcast float* %40 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %41, align 16, !alias.scope !14
  %42 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %42, align 16, !alias.scope !14
  store i32 16, i32* %38, align 4, !alias.scope !14
  %43 = call zeroext i1 @_ZN8SkMatrix13setRectToRectERK6SkRectS2_NS_10ScaleToFitE(%class.SkMatrix* nonnull %4, %struct.SkRect* nonnull dereferenceable(16) %6, %struct.SkRect* nonnull dereferenceable(16) %8, i32 0) #15
  call void @_ZN8SkCanvas6concatERK8SkMatrix(%class.SkCanvas* %17, %class.SkMatrix* nonnull dereferenceable(40) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #15
  %44 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %1, i64 0, i32 0, i32 0, i32 6
  %45 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %44, align 8
  %46 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %45, i64 0, i32 7
  %47 = load float, float* %46, align 8
  %48 = fmul float %47, 2.550000e+02
  %49 = fadd float %48, 5.000000e-01
  %50 = call float @llvm.floor.f32(float %49)
  %51 = fcmp olt float %50, 0x41DFFFFFE0000000
  %52 = select i1 %51, float %50, float 0x41DFFFFFE0000000
  %53 = fcmp ogt float %52, 0xC1DFFFFFE0000000
  %54 = select i1 %53, float %52, float 0xC1DFFFFFE0000000
  %55 = fptosi float %54 to i32
  %56 = icmp sgt i32 %55, 254
  %57 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 2
  %58 = load i8, i8* %57, align 8, !range !3
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %2
  %61 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %1, i64 0, i32 0, i32 4
  %62 = load i8, i8* %61, align 1, !range !3
  br label %63

63:                                               ; preds = %2, %60
  %64 = phi i8 [ 1, %2 ], [ %62, %60 ]
  %65 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), align 16
  %66 = and i8 %65, 25
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %74, label %68, !prof !2

68:                                               ; preds = %63
  %69 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #15
  %70 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #15
  %71 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %72 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #15
  store i64 %72, i64* %71, align 8
  %73 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %69, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 0) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #15
  br label %74

74:                                               ; preds = %63, %68
  %75 = phi i64 [ -6148914691236517206, %63 ], [ %73, %68 ]
  %76 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %63 ], [ getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4, i64 0, i64 0), %68 ]
  %77 = phi i8* [ null, %63 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), %68 ]
  %78 = bitcast %class.SkCanvas** %16 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %"class.absl::optional.380", %"class.absl::optional.380"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 3264, i8* nonnull %80) #15
  %81 = bitcast %"class.absl::optional.380"* %11 to i64*
  store i64 -6148914691236517206, i64* %81, align 8
  store i8 0, i8* %80, align 8
  %82 = getelementptr inbounds %"class.absl::optional.380", %"class.absl::optional.380"* %11, i64 0, i32 0, i32 0, i32 0, i32 2
  %83 = bitcast %union.anon.384* %82 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %83, i8 0, i64 3256, i1 false) #15
  %84 = icmp eq i8 %64, 0
  %85 = and i1 %56, %84
  br i1 %85, label %94, label %86

86:                                               ; preds = %74
  %87 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %44, align 8
  %88 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %87, i64 0, i32 7
  %89 = getelementptr inbounds %"class.absl::optional.380", %"class.absl::optional.380"* %11, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %90 = inttoptr i64 %79 to %class.SkCanvas*
  %91 = load float, float* %88, align 4
  %92 = icmp ne i8 %64, 0
  call void @_ZN4skia19OpacityFilterCanvasC1EP8SkCanvasfb(%"class.skia::OpacityFilterCanvas"* %89, %class.SkCanvas* %90, float %91, i1 zeroext %92) #15
  store i8 1, i8* %80, align 8
  %93 = ptrtoint %"class.skia::OpacityFilterCanvas"* %89 to i64
  br label %94

94:                                               ; preds = %74, %86
  %95 = phi i64 [ %79, %74 ], [ %93, %86 ]
  %96 = bitcast %"class.cc::ScopedSubnormalFloatDisabler"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %96) #15
  %97 = getelementptr inbounds %"class.cc::ScopedSubnormalFloatDisabler", %"class.cc::ScopedSubnormalFloatDisabler"* %12, i64 0, i32 0
  store i32 -1431655766, i32* %97, align 4
  call void @_ZN2cc28ScopedSubnormalFloatDisablerC1Ev(%"class.cc::ScopedSubnormalFloatDisabler"* nonnull %12) #15
  %98 = bitcast %"class.viz::(anonymous namespace)::AnimatedImagesProvider"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %98) #15
  %99 = getelementptr inbounds %"class.viz::(anonymous namespace)::AnimatedImagesProvider", %"class.viz::(anonymous namespace)::AnimatedImagesProvider"* %13, i64 0, i32 0, i32 0
  %100 = getelementptr inbounds %"class.viz::(anonymous namespace)::AnimatedImagesProvider", %"class.viz::(anonymous namespace)::AnimatedImagesProvider"* %13, i64 0, i32 1
  %101 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %1, i64 0, i32 5
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3viz12_GLOBAL__N_122AnimatedImagesProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %99, align 8
  store %"class.base::flat_map.281"* %101, %"class.base::flat_map.281"** %100, align 8
  %102 = inttoptr i64 %95 to %class.SkCanvas*
  %103 = call i32 @_ZN8SkCanvas4saveEv(%class.SkCanvas* %102) #15
  %104 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %1, i64 0, i32 2
  %105 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %104, i64 0, i32 0, i32 0
  %106 = load i32, i32* %105, align 4
  %107 = sub nsw i32 0, %106
  %108 = sitofp i32 %107 to float
  %109 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %1, i64 0, i32 2, i32 0, i32 1
  %110 = load i32, i32* %109, align 4
  %111 = sub nsw i32 0, %110
  %112 = sitofp i32 %111 to float
  call void @_ZN8SkCanvas9translateEff(%class.SkCanvas* %102, float %108, float %112) #15
  %113 = bitcast { <2 x float>, <2 x float> }* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %113) #15
  %114 = call { <2 x float>, <2 x float> } @_ZN3gfx12RectToSkRectERKNS_4RectE(%"class.gfx::Rect"* dereferenceable(16) %104) #15
  %115 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %14, i64 0, i32 0
  %116 = extractvalue { <2 x float>, <2 x float> } %114, 0
  store <2 x float> %116, <2 x float>* %115, align 8
  %117 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %14, i64 0, i32 1
  %118 = extractvalue { <2 x float>, <2 x float> } %114, 1
  store <2 x float> %118, <2 x float>* %117, align 8
  call void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas* %102, %struct.SkRect* nonnull dereferenceable(16) %15, i32 1, i1 zeroext false) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %113) #15
  %119 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %1, i64 0, i32 3
  %120 = load float, float* %119, align 8
  call void @_ZN8SkCanvas5scaleEff(%class.SkCanvas* %102, float %120, float %120) #15
  %121 = getelementptr inbounds %"class.viz::PictureDrawQuad", %"class.viz::PictureDrawQuad"* %1, i64 0, i32 6, i32 0
  %122 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %121, align 8
  %123 = getelementptr inbounds %"class.viz::(anonymous namespace)::AnimatedImagesProvider", %"class.viz::(anonymous namespace)::AnimatedImagesProvider"* %13, i64 0, i32 0
  call void @_ZNK2cc15DisplayItemList6RasterEP8SkCanvasPNS_13ImageProviderE(%"class.cc::DisplayItemList"* %122, %class.SkCanvas* %102, %"class.cc::ImageProvider"* nonnull %123) #15
  call void @_ZN8SkCanvas7restoreEv(%class.SkCanvas* %102) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %98) #15
  call void @_ZN2cc28ScopedSubnormalFloatDisablerD1Ev(%"class.cc::ScopedSubnormalFloatDisabler"* nonnull %12) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %96) #15
  %124 = load i8, i8* %80, align 8, !range !3
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %128, label %126

126:                                              ; preds = %94
  %127 = getelementptr inbounds %"class.absl::optional.380", %"class.absl::optional.380"* %11, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  call void @_ZN12SkNWayCanvasD2Ev(%class.SkNWayCanvas* %127) #15
  store i8 0, i8* %80, align 8
  br label %128

128:                                              ; preds = %94, %126
  call void @llvm.lifetime.end.p0i8(i64 3264, i8* nonnull %80) #15
  %129 = icmp eq i8* %77, null
  br i1 %129, label %134, label %130

130:                                              ; preds = %128
  %131 = load i8, i8* %77, align 1
  %132 = icmp eq i8 %131, 0
  br i1 %132, label %134, label %133

133:                                              ; preds = %130
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %77, i8* %76, i64 %75) #15
  br label %134

134:                                              ; preds = %128, %130, %133
  ret void
}

declare %"class.viz::PictureDrawQuad"* @_ZN3viz15PictureDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16SoftwareRenderer18DrawSolidColorQuadEPKNS_18SolidColorDrawQuadE(%"class.viz::SoftwareRenderer"*, %"class.viz::SolidColorDrawQuad"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = bitcast { <2 x float>, <2 x float> }* %3 to %"class.gfx::RectF"*
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = bitcast { <2 x float>, <2 x float> }* %5 to %"class.gfx::RectF"*
  %7 = alloca %"class.gfx::RectF", align 4
  %8 = alloca %"class.gfx::RectF", align 4
  %9 = alloca { <2 x float>, <2 x float> }, align 8
  %10 = bitcast { <2 x float>, <2 x float> }* %9 to %struct.SkRect*
  %11 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #15
  %12 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #15
  %13 = tail call { <2 x float>, <2 x float> } @_ZN3viz14DirectRenderer14QuadVertexRectEv() #15
  %14 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  %15 = extractvalue { <2 x float>, <2 x float> } %13, 0
  store <2 x float> %15, <2 x float>* %14, align 8
  %16 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  %17 = extractvalue { <2 x float>, <2 x float> } %13, 1
  store <2 x float> %17, <2 x float>* %16, align 8
  %18 = bitcast %"class.gfx::RectF"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #15
  %19 = getelementptr inbounds %"class.viz::SolidColorDrawQuad", %"class.viz::SolidColorDrawQuad"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = sitofp i32 %20 to float
  %22 = getelementptr inbounds %"class.viz::SolidColorDrawQuad", %"class.viz::SolidColorDrawQuad"* %1, i64 0, i32 0, i32 2, i32 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = sitofp i32 %23 to float
  %25 = getelementptr inbounds %"class.viz::SolidColorDrawQuad", %"class.viz::SolidColorDrawQuad"* %1, i64 0, i32 0, i32 2, i32 1, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.viz::SolidColorDrawQuad", %"class.viz::SolidColorDrawQuad"* %1, i64 0, i32 0, i32 2, i32 1, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %7, i64 0, i32 0, i32 0
  store float %21, float* %29, align 4
  %30 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %7, i64 0, i32 0, i32 1
  store float %24, float* %30, align 4
  %31 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %7, i64 0, i32 1, i32 0
  %32 = icmp sgt i32 %26, 0
  %33 = select i1 %32, i32 %26, i32 0
  %34 = sitofp i32 %33 to float
  store float %34, float* %31, align 4
  %35 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %7, i64 0, i32 1, i32 1
  %36 = icmp sgt i32 %28, 0
  %37 = select i1 %36, i32 %28, i32 0
  %38 = sitofp i32 %37 to float
  store float %38, float* %35, align 4
  %39 = bitcast %"class.gfx::RectF"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #15
  %40 = getelementptr inbounds %"class.viz::SolidColorDrawQuad", %"class.viz::SolidColorDrawQuad"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = sitofp i32 %41 to float
  %43 = getelementptr inbounds %"class.viz::SolidColorDrawQuad", %"class.viz::SolidColorDrawQuad"* %1, i64 0, i32 0, i32 3, i32 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = sitofp i32 %44 to float
  %46 = getelementptr inbounds %"class.viz::SolidColorDrawQuad", %"class.viz::SolidColorDrawQuad"* %1, i64 0, i32 0, i32 3, i32 1, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %"class.viz::SolidColorDrawQuad", %"class.viz::SolidColorDrawQuad"* %1, i64 0, i32 0, i32 3, i32 1, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %8, i64 0, i32 0, i32 0
  store float %42, float* %50, align 4
  %51 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %8, i64 0, i32 0, i32 1
  store float %45, float* %51, align 4
  %52 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %8, i64 0, i32 1, i32 0
  %53 = icmp sgt i32 %47, 0
  %54 = select i1 %53, i32 %47, i32 0
  %55 = sitofp i32 %54 to float
  store float %55, float* %52, align 4
  %56 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %8, i64 0, i32 1, i32 1
  %57 = icmp sgt i32 %49, 0
  %58 = select i1 %57, i32 %49, i32 0
  %59 = sitofp i32 %58 to float
  store float %59, float* %56, align 4
  %60 = call { <2 x float>, <2 x float> } @_ZN2cc8MathUtil21ScaleRectProportionalERKN3gfx5RectFES4_S4_(%"class.gfx::RectF"* nonnull dereferenceable(16) %6, %"class.gfx::RectF"* nonnull dereferenceable(16) %7, %"class.gfx::RectF"* nonnull dereferenceable(16) %8) #15
  %61 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  %62 = extractvalue { <2 x float>, <2 x float> } %60, 0
  store <2 x float> %62, <2 x float>* %61, align 8
  %63 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  %64 = extractvalue { <2 x float>, <2 x float> } %60, 1
  store <2 x float> %64, <2 x float>* %63, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #15
  %65 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 8
  %66 = getelementptr inbounds %"class.viz::SolidColorDrawQuad", %"class.viz::SolidColorDrawQuad"* %1, i64 0, i32 1
  %67 = load i32, i32* %66, align 4
  call void @_ZN7SkPaint8setColorEj(%class.SkPaint* %65, i32 %67) #15
  %68 = getelementptr inbounds %"class.viz::SolidColorDrawQuad", %"class.viz::SolidColorDrawQuad"* %1, i64 0, i32 0, i32 6
  %69 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %68, align 8
  %70 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %69, i64 0, i32 7
  %71 = load float, float* %70, align 8
  %72 = load i32, i32* %66, align 4
  %73 = lshr i32 %72, 24
  %74 = uitofp i32 %73 to float
  %75 = fmul float %71, %74
  %76 = fptoui float %75 to i32
  %77 = uitofp i32 %76 to float
  %78 = fmul float %77, 0x3F70101020000000
  call void @_ZN7SkPaint9setAlphafEf(%class.SkPaint* %65, float %78) #15
  %79 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 7
  %80 = load %class.SkCanvas*, %class.SkCanvas** %79, align 8
  %81 = bitcast { <2 x float>, <2 x float> }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #15
  %82 = call { <2 x float>, <2 x float> } @_ZN3gfx13RectFToSkRectERKNS_5RectFE(%"class.gfx::RectF"* nonnull dereferenceable(16) %4) #15
  %83 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 0
  %84 = extractvalue { <2 x float>, <2 x float> } %82, 0
  store <2 x float> %84, <2 x float>* %83, align 8
  %85 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 1
  %86 = extractvalue { <2 x float>, <2 x float> } %82, 1
  store <2 x float> %86, <2 x float>* %85, align 8
  call void @_ZN8SkCanvas8drawRectERK6SkRectRK7SkPaint(%class.SkCanvas* %80, %struct.SkRect* nonnull dereferenceable(16) %10, %class.SkPaint* dereferenceable(72) %65) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #15
  ret void
}

declare %"class.viz::SolidColorDrawQuad"* @_ZN3viz18SolidColorDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16SoftwareRenderer15DrawTextureQuadEPKNS_15TextureDrawQuadE(%"class.viz::SoftwareRenderer"*, %"class.viz::TextureDrawQuad"*) local_unnamed_addr #0 align 2 {
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = alloca %"class.viz::DisplayResourceProviderSoftware::ScopedReadLockSkImage", align 8
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = bitcast { <2 x float>, <2 x float> }* %6 to %"class.gfx::RectF"*
  %8 = alloca { <2 x float>, <2 x float> }, align 8
  %9 = bitcast { <2 x float>, <2 x float> }* %8 to %"class.gfx::RectF"*
  %10 = alloca %"class.gfx::RectF", align 4
  %11 = alloca %"class.gfx::RectF", align 4
  %12 = alloca { <2 x float>, <2 x float> }, align 8
  %13 = bitcast { <2 x float>, <2 x float> }* %12 to %struct.SkRect*
  %14 = alloca { <2 x float>, <2 x float> }, align 8
  %15 = bitcast { <2 x float>, <2 x float> }* %14 to %"class.gfx::RectF"*
  %16 = alloca { <2 x float>, <2 x float> }, align 8
  %17 = bitcast { <2 x float>, <2 x float> }* %16 to %"class.gfx::RectF"*
  %18 = alloca %"class.gfx::RectF", align 4
  %19 = alloca %"class.gfx::RectF", align 4
  %20 = alloca { <2 x float>, <2 x float> }, align 8
  %21 = bitcast { <2 x float>, <2 x float> }* %20 to %struct.SkRect*
  %22 = alloca %class.SkPaint, align 8
  %23 = alloca %struct.SkSamplingOptions, align 4
  %24 = getelementptr inbounds %"class.viz::TextureDrawQuad", %"class.viz::TextureDrawQuad"* %1, i64 0, i32 0, i32 7, i32 1, i64 0, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 0, i32 4
  %27 = load %"class.viz::DisplayResourceProvider"*, %"class.viz::DisplayResourceProvider"** %26, align 8
  %28 = tail call zeroext i1 @_ZN3viz23DisplayResourceProvider24IsResourceSoftwareBackedEN4util6IdTypeINS_20ResourceIdTypeMarkerEjLj0ELj1EEE(%"class.viz::DisplayResourceProvider"* %27, i32 %25) #15
  br i1 %28, label %55, label %29

29:                                               ; preds = %2
  %30 = bitcast { <2 x float>, <2 x float> }* %3 to %struct.SkRect*
  %31 = bitcast { <2 x float>, <2 x float> }* %4 to %"class.gfx::RectF"*
  %32 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 8
  tail call void @_ZN7SkPaint8setColorEj(%class.SkPaint* %32, i32 -1) #15
  %33 = getelementptr inbounds %"class.viz::TextureDrawQuad", %"class.viz::TextureDrawQuad"* %1, i64 0, i32 0, i32 6
  %34 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %33, align 8
  %35 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %34, i64 0, i32 7
  %36 = load float, float* %35, align 8
  %37 = fmul float %36, 2.550000e+02
  %38 = fptoui float %37 to i32
  %39 = uitofp i32 %38 to float
  %40 = fmul float %39, 0x3F70101020000000
  tail call void @_ZN7SkPaint9setAlphafEf(%class.SkPaint* %32, float %40) #15
  %41 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 7
  %42 = load %class.SkCanvas*, %class.SkCanvas** %41, align 8
  %43 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #15
  %44 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #15
  %45 = tail call { <2 x float>, <2 x float> } @_ZN3viz14DirectRenderer14QuadVertexRectEv() #15
  %46 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  %47 = extractvalue { <2 x float>, <2 x float> } %45, 0
  store <2 x float> %47, <2 x float>* %46, align 8
  %48 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  %49 = extractvalue { <2 x float>, <2 x float> } %45, 1
  store <2 x float> %49, <2 x float>* %48, align 8
  %50 = call { <2 x float>, <2 x float> } @_ZN3gfx13RectFToSkRectERKNS_5RectFE(%"class.gfx::RectF"* nonnull dereferenceable(16) %31) #15
  %51 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  %52 = extractvalue { <2 x float>, <2 x float> } %50, 0
  store <2 x float> %52, <2 x float>* %51, align 8
  %53 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  %54 = extractvalue { <2 x float>, <2 x float> } %50, 1
  store <2 x float> %54, <2 x float>* %53, align 8
  call void @_ZN8SkCanvas8drawRectERK6SkRectRK7SkPaint(%class.SkCanvas* %42, %struct.SkRect* nonnull dereferenceable(16) %30, %class.SkPaint* dereferenceable(72) %32) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #15
  br label %258

55:                                               ; preds = %2
  %56 = bitcast %"class.viz::DisplayResourceProviderSoftware::ScopedReadLockSkImage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 24, i1 false)
  %57 = bitcast %"class.viz::DisplayResourceProvider"** %26 to %"class.viz::DisplayResourceProviderSoftware"**
  %58 = load %"class.viz::DisplayResourceProviderSoftware"*, %"class.viz::DisplayResourceProviderSoftware"** %57, align 8
  %59 = load i32, i32* %24, align 4
  call void @_ZN3viz31DisplayResourceProviderSoftware21ScopedReadLockSkImageC1EPS0_N4util6IdTypeINS_20ResourceIdTypeMarkerEjLj0ELj1EEE11SkAlphaType15GrSurfaceOrigin(%"class.viz::DisplayResourceProviderSoftware::ScopedReadLockSkImage"* nonnull %5, %"class.viz::DisplayResourceProviderSoftware"* %58, i32 %59, i32 2, i32 0) #15
  %60 = getelementptr inbounds %"class.viz::DisplayResourceProviderSoftware::ScopedReadLockSkImage", %"class.viz::DisplayResourceProviderSoftware::ScopedReadLockSkImage"* %5, i64 0, i32 2, i32 0
  %61 = load %class.SkImage*, %class.SkImage** %60, align 8
  %62 = icmp eq %class.SkImage* %61, null
  br i1 %62, label %257, label %63

63:                                               ; preds = %55
  %64 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %64) #15
  %65 = getelementptr inbounds %"class.viz::TextureDrawQuad", %"class.viz::TextureDrawQuad"* %1, i64 0, i32 1
  %66 = getelementptr inbounds %"class.viz::TextureDrawQuad", %"class.viz::TextureDrawQuad"* %1, i64 0, i32 2
  %67 = call { <2 x float>, <2 x float> } @_ZN3gfx12BoundingRectERKNS_6PointFES2_(%"class.gfx::PointF"* dereferenceable(8) %65, %"class.gfx::PointF"* dereferenceable(8) %66) #15
  %68 = extractvalue { <2 x float>, <2 x float> } %67, 0
  %69 = extractvalue { <2 x float>, <2 x float> } %67, 1
  %70 = getelementptr inbounds %class.SkImage, %class.SkImage* %61, i64 0, i32 2, i32 1, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = sitofp i32 %71 to float
  %73 = getelementptr inbounds %class.SkImage, %class.SkImage* %61, i64 0, i32 2, i32 1, i32 1
  %74 = load i32, i32* %73, align 4
  %75 = sitofp i32 %74 to float
  %76 = extractelement <2 x float> %68, i32 0
  %77 = fmul float %76, %72
  %78 = extractelement <2 x float> %68, i32 1
  %79 = fmul float %78, %75
  %80 = extractelement <2 x float> %69, i32 0
  %81 = fmul float %80, %72
  %82 = extractelement <2 x float> %69, i32 1
  %83 = fmul float %82, %75
  %84 = insertelement <2 x float> undef, float %77, i32 0
  %85 = insertelement <2 x float> %84, float %79, i32 1
  %86 = fcmp ogt float %81, 0x3EB0000000000000
  %87 = select i1 %86, float %81, float 0.000000e+00
  %88 = insertelement <2 x float> undef, float %87, i32 0
  %89 = fcmp ogt float %83, 0x3EB0000000000000
  %90 = select i1 %89, float %83, float 0.000000e+00
  %91 = insertelement <2 x float> %88, float %90, i32 1
  %92 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  store <2 x float> %85, <2 x float>* %92, align 8
  %93 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  store <2 x float> %91, <2 x float>* %93, align 8
  %94 = bitcast { <2 x float>, <2 x float> }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %94) #15
  %95 = bitcast %"class.gfx::RectF"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %95) #15
  %96 = getelementptr inbounds %"class.viz::TextureDrawQuad", %"class.viz::TextureDrawQuad"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = sitofp i32 %97 to float
  %99 = getelementptr inbounds %"class.viz::TextureDrawQuad", %"class.viz::TextureDrawQuad"* %1, i64 0, i32 0, i32 2, i32 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = sitofp i32 %100 to float
  %102 = getelementptr inbounds %"class.viz::TextureDrawQuad", %"class.viz::TextureDrawQuad"* %1, i64 0, i32 0, i32 2, i32 1, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = getelementptr inbounds %"class.viz::TextureDrawQuad", %"class.viz::TextureDrawQuad"* %1, i64 0, i32 0, i32 2, i32 1, i32 1
  %105 = load i32, i32* %104, align 4
  %106 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %10, i64 0, i32 0, i32 0
  store float %98, float* %106, align 4
  %107 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %10, i64 0, i32 0, i32 1
  store float %101, float* %107, align 4
  %108 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %10, i64 0, i32 1, i32 0
  %109 = icmp sgt i32 %103, 0
  %110 = select i1 %109, i32 %103, i32 0
  %111 = sitofp i32 %110 to float
  store float %111, float* %108, align 4
  %112 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %10, i64 0, i32 1, i32 1
  %113 = icmp sgt i32 %105, 0
  %114 = select i1 %113, i32 %105, i32 0
  %115 = sitofp i32 %114 to float
  store float %115, float* %112, align 4
  %116 = bitcast %"class.gfx::RectF"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %116) #15
  %117 = getelementptr inbounds %"class.viz::TextureDrawQuad", %"class.viz::TextureDrawQuad"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %118 = load i32, i32* %117, align 4
  %119 = sitofp i32 %118 to float
  %120 = getelementptr inbounds %"class.viz::TextureDrawQuad", %"class.viz::TextureDrawQuad"* %1, i64 0, i32 0, i32 3, i32 0, i32 1
  %121 = load i32, i32* %120, align 4
  %122 = sitofp i32 %121 to float
  %123 = getelementptr inbounds %"class.viz::TextureDrawQuad", %"class.viz::TextureDrawQuad"* %1, i64 0, i32 0, i32 3, i32 1, i32 0
  %124 = load i32, i32* %123, align 4
  %125 = getelementptr inbounds %"class.viz::TextureDrawQuad", %"class.viz::TextureDrawQuad"* %1, i64 0, i32 0, i32 3, i32 1, i32 1
  %126 = load i32, i32* %125, align 4
  %127 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %11, i64 0, i32 0, i32 0
  store float %119, float* %127, align 4
  %128 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %11, i64 0, i32 0, i32 1
  store float %122, float* %128, align 4
  %129 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %11, i64 0, i32 1, i32 0
  %130 = icmp sgt i32 %124, 0
  %131 = select i1 %130, i32 %124, i32 0
  %132 = sitofp i32 %131 to float
  store float %132, float* %129, align 4
  %133 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %11, i64 0, i32 1, i32 1
  %134 = icmp sgt i32 %126, 0
  %135 = select i1 %134, i32 %126, i32 0
  %136 = sitofp i32 %135 to float
  store float %136, float* %133, align 4
  %137 = call { <2 x float>, <2 x float> } @_ZN2cc8MathUtil21ScaleRectProportionalERKN3gfx5RectFES4_S4_(%"class.gfx::RectF"* nonnull dereferenceable(16) %7, %"class.gfx::RectF"* nonnull dereferenceable(16) %10, %"class.gfx::RectF"* nonnull dereferenceable(16) %11) #15
  %138 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 0
  %139 = extractvalue { <2 x float>, <2 x float> } %137, 0
  store <2 x float> %139, <2 x float>* %138, align 8
  %140 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 1
  %141 = extractvalue { <2 x float>, <2 x float> } %137, 1
  store <2 x float> %141, <2 x float>* %140, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %116) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %95) #15
  %142 = bitcast { <2 x float>, <2 x float> }* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %142) #15
  %143 = call { <2 x float>, <2 x float> } @_ZN3gfx13RectFToSkRectERKNS_5RectFE(%"class.gfx::RectF"* nonnull dereferenceable(16) %9) #15
  %144 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %12, i64 0, i32 0
  %145 = extractvalue { <2 x float>, <2 x float> } %143, 0
  store <2 x float> %145, <2 x float>* %144, align 8
  %146 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %12, i64 0, i32 1
  %147 = extractvalue { <2 x float>, <2 x float> } %143, 1
  store <2 x float> %147, <2 x float>* %146, align 8
  %148 = bitcast { <2 x float>, <2 x float> }* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %148) #15
  %149 = bitcast { <2 x float>, <2 x float> }* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %149) #15
  %150 = call { <2 x float>, <2 x float> } @_ZN3viz14DirectRenderer14QuadVertexRectEv() #15
  %151 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %16, i64 0, i32 0
  %152 = extractvalue { <2 x float>, <2 x float> } %150, 0
  store <2 x float> %152, <2 x float>* %151, align 8
  %153 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %16, i64 0, i32 1
  %154 = extractvalue { <2 x float>, <2 x float> } %150, 1
  store <2 x float> %154, <2 x float>* %153, align 8
  %155 = bitcast %"class.gfx::RectF"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %155) #15
  %156 = load i32, i32* %96, align 4
  %157 = sitofp i32 %156 to float
  %158 = load i32, i32* %99, align 4
  %159 = sitofp i32 %158 to float
  %160 = load i32, i32* %102, align 4
  %161 = load i32, i32* %104, align 4
  %162 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %18, i64 0, i32 0, i32 0
  store float %157, float* %162, align 4
  %163 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %18, i64 0, i32 0, i32 1
  store float %159, float* %163, align 4
  %164 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %18, i64 0, i32 1, i32 0
  %165 = icmp sgt i32 %160, 0
  %166 = select i1 %165, i32 %160, i32 0
  %167 = sitofp i32 %166 to float
  store float %167, float* %164, align 4
  %168 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %18, i64 0, i32 1, i32 1
  %169 = icmp sgt i32 %161, 0
  %170 = select i1 %169, i32 %161, i32 0
  %171 = sitofp i32 %170 to float
  store float %171, float* %168, align 4
  %172 = bitcast %"class.gfx::RectF"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %172) #15
  %173 = load i32, i32* %117, align 4
  %174 = sitofp i32 %173 to float
  %175 = load i32, i32* %120, align 4
  %176 = sitofp i32 %175 to float
  %177 = load i32, i32* %123, align 4
  %178 = load i32, i32* %125, align 4
  %179 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %19, i64 0, i32 0, i32 0
  store float %174, float* %179, align 4
  %180 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %19, i64 0, i32 0, i32 1
  store float %176, float* %180, align 4
  %181 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %19, i64 0, i32 1, i32 0
  %182 = icmp sgt i32 %177, 0
  %183 = select i1 %182, i32 %177, i32 0
  %184 = sitofp i32 %183 to float
  store float %184, float* %181, align 4
  %185 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %19, i64 0, i32 1, i32 1
  %186 = icmp sgt i32 %178, 0
  %187 = select i1 %186, i32 %178, i32 0
  %188 = sitofp i32 %187 to float
  store float %188, float* %185, align 4
  %189 = call { <2 x float>, <2 x float> } @_ZN2cc8MathUtil21ScaleRectProportionalERKN3gfx5RectFES4_S4_(%"class.gfx::RectF"* nonnull dereferenceable(16) %17, %"class.gfx::RectF"* nonnull dereferenceable(16) %18, %"class.gfx::RectF"* nonnull dereferenceable(16) %19) #15
  %190 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %14, i64 0, i32 0
  %191 = extractvalue { <2 x float>, <2 x float> } %189, 0
  store <2 x float> %191, <2 x float>* %190, align 8
  %192 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %14, i64 0, i32 1
  %193 = extractvalue { <2 x float>, <2 x float> } %189, 1
  store <2 x float> %193, <2 x float>* %192, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %172) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %155) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %149) #15
  %194 = bitcast { <2 x float>, <2 x float> }* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %194) #15
  %195 = call { <2 x float>, <2 x float> } @_ZN3gfx13RectFToSkRectERKNS_5RectFE(%"class.gfx::RectF"* nonnull dereferenceable(16) %15) #15
  %196 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %20, i64 0, i32 0
  %197 = extractvalue { <2 x float>, <2 x float> } %195, 0
  store <2 x float> %197, <2 x float>* %196, align 8
  %198 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %20, i64 0, i32 1
  %199 = extractvalue { <2 x float>, <2 x float> } %195, 1
  store <2 x float> %199, <2 x float>* %198, align 8
  %200 = getelementptr inbounds %"class.viz::TextureDrawQuad", %"class.viz::TextureDrawQuad"* %1, i64 0, i32 5
  %201 = load i8, i8* %200, align 8
  %202 = and i8 %201, 1
  %203 = icmp eq i8 %202, 0
  br i1 %203, label %207, label %204

204:                                              ; preds = %63
  %205 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 7
  %206 = load %class.SkCanvas*, %class.SkCanvas** %205, align 8
  call void @_ZN8SkCanvas5scaleEff(%class.SkCanvas* %206, float 1.000000e+00, float -1.000000e+00) #15
  br label %207

207:                                              ; preds = %63, %204
  %208 = getelementptr inbounds %"class.viz::TextureDrawQuad", %"class.viz::TextureDrawQuad"* %1, i64 0, i32 3
  %209 = load i32, i32* %208, align 4
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %238, label %211

211:                                              ; preds = %207
  %212 = call i32 @_ZNK7SkImage9alphaTypeEv(%class.SkImage* nonnull %61) #15
  %213 = icmp eq i32 %212, 1
  br i1 %213, label %238, label %214

214:                                              ; preds = %211
  %215 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 8, i32 5, i32 3
  %216 = load float, float* %215, align 4
  %217 = fmul float %216, 2.550000e+02
  %218 = fadd float %217, 5.000000e-01
  %219 = call float @llvm.floor.f32(float %218) #15
  %220 = fcmp olt float %219, 0x41DFFFFFE0000000
  %221 = select i1 %220, float %219, float 0x41DFFFFFE0000000
  %222 = fcmp ogt float %221, 0xC1DFFFFFE0000000
  %223 = select i1 %222, float %221, float 0xC1DFFFFFE0000000
  %224 = fptosi float %223 to i32
  %225 = trunc i32 %224 to i8
  %226 = icmp ne i8 %225, -1
  br i1 %226, label %227, label %233

227:                                              ; preds = %214
  %228 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 7
  %229 = load %class.SkCanvas*, %class.SkCanvas** %228, align 8
  %230 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 8
  %231 = and i32 %224, 255
  %232 = call i32 @_ZN8SkCanvas14saveLayerAlphaEPK6SkRectj(%class.SkCanvas* %229, %struct.SkRect* nonnull %21, i32 %231) #15
  call void @_ZN7SkPaint9setAlphafEf(%class.SkPaint* %230, float 1.000000e+00) #15
  br label %233

233:                                              ; preds = %227, %214
  %234 = bitcast %class.SkPaint* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %234) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %234, i8* align 8 bitcast (%class.SkPaint* @__const._ZNK3viz16SoftwareRenderer23GetBackdropFilterShaderEPKNS_28AggregatedRenderPassDrawQuadE10SkTileMode.paint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %22) #15
  %235 = load i32, i32* %208, align 4
  call void @_ZN7SkPaint8setColorEj(%class.SkPaint* nonnull %22, i32 %235) #15
  %236 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 7
  %237 = load %class.SkCanvas*, %class.SkCanvas** %236, align 8
  call void @_ZN8SkCanvas8drawRectERK6SkRectRK7SkPaint(%class.SkCanvas* %237, %struct.SkRect* nonnull dereferenceable(16) %21, %class.SkPaint* nonnull dereferenceable(72) %22) #15
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %22) #15
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %234) #15
  br label %238

238:                                              ; preds = %211, %207, %233
  %239 = phi i1 [ %226, %233 ], [ false, %211 ], [ false, %207 ]
  %240 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %23, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %240) #15
  %241 = bitcast %struct.SkSamplingOptions* %23 to i32*
  store i32 -1431655766, i32* %241, align 4
  %242 = load i8, i8* %200, align 8
  %243 = lshr i8 %242, 1
  %244 = and i8 %243, 1
  %245 = xor i8 %244, 1
  %246 = zext i8 %245 to i32
  store i8 0, i8* %240, align 4
  %247 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %23, i64 0, i32 1, i32 0
  store float 0.000000e+00, float* %247, align 4
  %248 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %23, i64 0, i32 1, i32 1
  store float 0.000000e+00, float* %248, align 4
  %249 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %23, i64 0, i32 2
  store i32 %246, i32* %249, align 4
  %250 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %23, i64 0, i32 3
  store i32 0, i32* %250, align 4
  %251 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 7
  %252 = load %class.SkCanvas*, %class.SkCanvas** %251, align 8
  %253 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 8
  call void @_ZN8SkCanvas13drawImageRectEPK7SkImageRK6SkRectS5_RK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintE(%class.SkCanvas* %252, %class.SkImage* nonnull %61, %struct.SkRect* nonnull dereferenceable(16) %13, %struct.SkRect* nonnull dereferenceable(16) %21, %struct.SkSamplingOptions* nonnull dereferenceable(20) %23, %class.SkPaint* %253, i32 0) #15
  br i1 %239, label %254, label %256

254:                                              ; preds = %238
  %255 = load %class.SkCanvas*, %class.SkCanvas** %251, align 8
  call void @_ZN8SkCanvas7restoreEv(%class.SkCanvas* %255) #15
  br label %256

256:                                              ; preds = %254, %238
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %240) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %194) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %148) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %142) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %94) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %64) #15
  br label %257

257:                                              ; preds = %55, %256
  call void @_ZN3viz31DisplayResourceProviderSoftware21ScopedReadLockSkImageD1Ev(%"class.viz::DisplayResourceProviderSoftware::ScopedReadLockSkImage"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #15
  br label %258

258:                                              ; preds = %257, %29
  ret void
}

declare %"class.viz::TextureDrawQuad"* @_ZN3viz15TextureDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16SoftwareRenderer12DrawTileQuadEPKNS_12TileDrawQuadE(%"class.viz::SoftwareRenderer"*, %"class.viz::TileDrawQuad"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.viz::DisplayResourceProviderSoftware::ScopedReadLockSkImage", align 8
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = alloca %"class.gfx::RectF", align 4
  %6 = alloca %"class.gfx::RectF", align 4
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = alloca { <2 x float>, <2 x float> }, align 8
  %9 = alloca %"class.gfx::RectF", align 4
  %10 = alloca %"class.gfx::RectF", align 4
  %11 = alloca { <2 x float>, <2 x float> }, align 8
  %12 = alloca %struct.SkSamplingOptions, align 4
  %13 = alloca { <2 x float>, <2 x float> }, align 8
  %14 = bitcast %"class.viz::DisplayResourceProviderSoftware::ScopedReadLockSkImage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 24, i1 false)
  %15 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 0, i32 4
  %16 = bitcast %"class.viz::DisplayResourceProvider"** %15 to %"class.viz::DisplayResourceProviderSoftware"**
  %17 = load %"class.viz::DisplayResourceProviderSoftware"*, %"class.viz::DisplayResourceProviderSoftware"** %16, align 8
  %18 = getelementptr inbounds %"class.viz::TileDrawQuad", %"class.viz::TileDrawQuad"* %1, i64 0, i32 0, i32 0, i32 7, i32 1, i64 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  call void @_ZN3viz31DisplayResourceProviderSoftware21ScopedReadLockSkImageC1EPS0_N4util6IdTypeINS_20ResourceIdTypeMarkerEjLj0ELj1EEE11SkAlphaType15GrSurfaceOrigin(%"class.viz::DisplayResourceProviderSoftware::ScopedReadLockSkImage"* nonnull %3, %"class.viz::DisplayResourceProviderSoftware"* %17, i32 %19, i32 2, i32 0) #15
  %20 = getelementptr inbounds %"class.viz::DisplayResourceProviderSoftware::ScopedReadLockSkImage", %"class.viz::DisplayResourceProviderSoftware::ScopedReadLockSkImage"* %3, i64 0, i32 2, i32 0
  %21 = load %class.SkImage*, %class.SkImage** %20, align 8
  %22 = icmp eq %class.SkImage* %21, null
  br i1 %22, label %150, label %23

23:                                               ; preds = %2
  %24 = bitcast { <2 x float>, <2 x float> }* %11 to %struct.SkRect*
  %25 = bitcast { <2 x float>, <2 x float> }* %7 to %"class.gfx::RectF"*
  %26 = bitcast { <2 x float>, <2 x float> }* %4 to %"class.gfx::RectF"*
  %27 = bitcast { <2 x float>, <2 x float> }* %13 to %struct.SkRect*
  %28 = bitcast { <2 x float>, <2 x float> }* %8 to %"class.gfx::RectF"*
  %29 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #15
  %30 = getelementptr inbounds %"class.viz::TileDrawQuad", %"class.viz::TileDrawQuad"* %1, i64 0, i32 0, i32 1
  %31 = bitcast %"class.gfx::RectF"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #15
  %32 = getelementptr inbounds %"class.viz::TileDrawQuad", %"class.viz::TileDrawQuad"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = sitofp i32 %33 to float
  %35 = getelementptr inbounds %"class.viz::TileDrawQuad", %"class.viz::TileDrawQuad"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = sitofp i32 %36 to float
  %38 = getelementptr inbounds %"class.viz::TileDrawQuad", %"class.viz::TileDrawQuad"* %1, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.viz::TileDrawQuad", %"class.viz::TileDrawQuad"* %1, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %5, i64 0, i32 0, i32 0
  store float %34, float* %42, align 4
  %43 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %5, i64 0, i32 0, i32 1
  store float %37, float* %43, align 4
  %44 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %5, i64 0, i32 1, i32 0
  %45 = icmp sgt i32 %39, 0
  %46 = select i1 %45, i32 %39, i32 0
  %47 = sitofp i32 %46 to float
  store float %47, float* %44, align 4
  %48 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %5, i64 0, i32 1, i32 1
  %49 = icmp sgt i32 %41, 0
  %50 = select i1 %49, i32 %41, i32 0
  %51 = sitofp i32 %50 to float
  store float %51, float* %48, align 4
  %52 = bitcast %"class.gfx::RectF"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #15
  %53 = getelementptr inbounds %"class.viz::TileDrawQuad", %"class.viz::TileDrawQuad"* %1, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = sitofp i32 %54 to float
  %56 = getelementptr inbounds %"class.viz::TileDrawQuad", %"class.viz::TileDrawQuad"* %1, i64 0, i32 0, i32 0, i32 3, i32 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = sitofp i32 %57 to float
  %59 = getelementptr inbounds %"class.viz::TileDrawQuad", %"class.viz::TileDrawQuad"* %1, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %"class.viz::TileDrawQuad", %"class.viz::TileDrawQuad"* %1, i64 0, i32 0, i32 0, i32 3, i32 1, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %6, i64 0, i32 0, i32 0
  store float %55, float* %63, align 4
  %64 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %6, i64 0, i32 0, i32 1
  store float %58, float* %64, align 4
  %65 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %6, i64 0, i32 1, i32 0
  %66 = icmp sgt i32 %60, 0
  %67 = select i1 %66, i32 %60, i32 0
  %68 = sitofp i32 %67 to float
  store float %68, float* %65, align 4
  %69 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %6, i64 0, i32 1, i32 1
  %70 = icmp sgt i32 %62, 0
  %71 = select i1 %70, i32 %62, i32 0
  %72 = sitofp i32 %71 to float
  store float %72, float* %69, align 4
  %73 = call { <2 x float>, <2 x float> } @_ZN2cc8MathUtil21ScaleRectProportionalERKN3gfx5RectFES4_S4_(%"class.gfx::RectF"* dereferenceable(16) %30, %"class.gfx::RectF"* nonnull dereferenceable(16) %5, %"class.gfx::RectF"* nonnull dereferenceable(16) %6) #15
  %74 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  %75 = extractvalue { <2 x float>, <2 x float> } %73, 0
  store <2 x float> %75, <2 x float>* %74, align 8
  %76 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  %77 = extractvalue { <2 x float>, <2 x float> } %73, 1
  store <2 x float> %77, <2 x float>* %76, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #15
  %78 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %78) #15
  %79 = bitcast { <2 x float>, <2 x float> }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %79) #15
  %80 = call { <2 x float>, <2 x float> } @_ZN3viz14DirectRenderer14QuadVertexRectEv() #15
  %81 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 0
  %82 = extractvalue { <2 x float>, <2 x float> } %80, 0
  store <2 x float> %82, <2 x float>* %81, align 8
  %83 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 1
  %84 = extractvalue { <2 x float>, <2 x float> } %80, 1
  store <2 x float> %84, <2 x float>* %83, align 8
  %85 = bitcast %"class.gfx::RectF"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %85) #15
  %86 = load i32, i32* %32, align 4
  %87 = sitofp i32 %86 to float
  %88 = load i32, i32* %35, align 4
  %89 = sitofp i32 %88 to float
  %90 = load i32, i32* %38, align 4
  %91 = load i32, i32* %40, align 4
  %92 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %9, i64 0, i32 0, i32 0
  store float %87, float* %92, align 4
  %93 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %9, i64 0, i32 0, i32 1
  store float %89, float* %93, align 4
  %94 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %9, i64 0, i32 1, i32 0
  %95 = icmp sgt i32 %90, 0
  %96 = select i1 %95, i32 %90, i32 0
  %97 = sitofp i32 %96 to float
  store float %97, float* %94, align 4
  %98 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %9, i64 0, i32 1, i32 1
  %99 = icmp sgt i32 %91, 0
  %100 = select i1 %99, i32 %91, i32 0
  %101 = sitofp i32 %100 to float
  store float %101, float* %98, align 4
  %102 = bitcast %"class.gfx::RectF"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %102) #15
  %103 = load i32, i32* %53, align 4
  %104 = sitofp i32 %103 to float
  %105 = load i32, i32* %56, align 4
  %106 = sitofp i32 %105 to float
  %107 = load i32, i32* %59, align 4
  %108 = load i32, i32* %61, align 4
  %109 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %10, i64 0, i32 0, i32 0
  store float %104, float* %109, align 4
  %110 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %10, i64 0, i32 0, i32 1
  store float %106, float* %110, align 4
  %111 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %10, i64 0, i32 1, i32 0
  %112 = icmp sgt i32 %107, 0
  %113 = select i1 %112, i32 %107, i32 0
  %114 = sitofp i32 %113 to float
  store float %114, float* %111, align 4
  %115 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %10, i64 0, i32 1, i32 1
  %116 = icmp sgt i32 %108, 0
  %117 = select i1 %116, i32 %108, i32 0
  %118 = sitofp i32 %117 to float
  store float %118, float* %115, align 4
  %119 = call { <2 x float>, <2 x float> } @_ZN2cc8MathUtil21ScaleRectProportionalERKN3gfx5RectFES4_S4_(%"class.gfx::RectF"* nonnull dereferenceable(16) %28, %"class.gfx::RectF"* nonnull dereferenceable(16) %9, %"class.gfx::RectF"* nonnull dereferenceable(16) %10) #15
  %120 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  %121 = extractvalue { <2 x float>, <2 x float> } %119, 0
  store <2 x float> %121, <2 x float>* %120, align 8
  %122 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  %123 = extractvalue { <2 x float>, <2 x float> } %119, 1
  store <2 x float> %123, <2 x float>* %122, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %102) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %85) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %79) #15
  %124 = bitcast { <2 x float>, <2 x float> }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %124) #15
  %125 = call { <2 x float>, <2 x float> } @_ZN3gfx13RectFToSkRectERKNS_5RectFE(%"class.gfx::RectF"* nonnull dereferenceable(16) %26) #15
  %126 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 0
  %127 = extractvalue { <2 x float>, <2 x float> } %125, 0
  store <2 x float> %127, <2 x float>* %126, align 8
  %128 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 1
  %129 = extractvalue { <2 x float>, <2 x float> } %125, 1
  store <2 x float> %129, <2 x float>* %128, align 8
  %130 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %130) #15
  %131 = bitcast %struct.SkSamplingOptions* %12 to i32*
  store i32 -1431655766, i32* %131, align 4
  %132 = getelementptr inbounds %"class.viz::TileDrawQuad", %"class.viz::TileDrawQuad"* %1, i64 0, i32 0, i32 4
  %133 = load i8, i8* %132, align 1, !range !3
  %134 = xor i8 %133, 1
  %135 = zext i8 %134 to i32
  store i8 0, i8* %130, align 4
  %136 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %12, i64 0, i32 1, i32 0
  store float 0.000000e+00, float* %136, align 4
  %137 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %12, i64 0, i32 1, i32 1
  store float 0.000000e+00, float* %137, align 4
  %138 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %12, i64 0, i32 2
  store i32 %135, i32* %138, align 4
  %139 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %12, i64 0, i32 3
  store i32 0, i32* %139, align 4
  %140 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 7
  %141 = load %class.SkCanvas*, %class.SkCanvas** %140, align 8
  %142 = load %class.SkImage*, %class.SkImage** %20, align 8
  %143 = bitcast { <2 x float>, <2 x float> }* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %143) #15
  %144 = call { <2 x float>, <2 x float> } @_ZN3gfx13RectFToSkRectERKNS_5RectFE(%"class.gfx::RectF"* nonnull dereferenceable(16) %25) #15
  %145 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %13, i64 0, i32 0
  %146 = extractvalue { <2 x float>, <2 x float> } %144, 0
  store <2 x float> %146, <2 x float>* %145, align 8
  %147 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %13, i64 0, i32 1
  %148 = extractvalue { <2 x float>, <2 x float> } %144, 1
  store <2 x float> %148, <2 x float>* %147, align 8
  %149 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 8
  call void @_ZN8SkCanvas13drawImageRectEPK7SkImageRK6SkRectS5_RK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintE(%class.SkCanvas* %141, %class.SkImage* %142, %struct.SkRect* nonnull dereferenceable(16) %24, %struct.SkRect* nonnull dereferenceable(16) %27, %struct.SkSamplingOptions* nonnull dereferenceable(20) %12, %class.SkPaint* %149, i32 0) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %143) #15
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %130) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %124) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %78) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #15
  br label %150

150:                                              ; preds = %2, %23
  call void @_ZN3viz31DisplayResourceProviderSoftware21ScopedReadLockSkImageD1Ev(%"class.viz::DisplayResourceProviderSoftware::ScopedReadLockSkImage"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #15
  ret void
}

declare %"class.viz::TileDrawQuad"* @_ZN3viz12TileDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16SoftwareRenderer19DrawUnsupportedQuadEPKNS_8DrawQuadE(%"class.viz::SoftwareRenderer"*, %"class.viz::DrawQuad"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = bitcast { <2 x float>, <2 x float> }* %3 to %struct.SkRect*
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = bitcast { <2 x float>, <2 x float> }* %5 to %"class.gfx::RectF"*
  %7 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 8
  tail call void @_ZN7SkPaint8setColorEj(%class.SkPaint* %7, i32 -1) #15
  %8 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %1, i64 0, i32 6
  %9 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %8, align 8
  %10 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %9, i64 0, i32 7
  %11 = load float, float* %10, align 8
  %12 = fmul float %11, 2.550000e+02
  %13 = fptoui float %12 to i32
  %14 = uitofp i32 %13 to float
  %15 = fmul float %14, 0x3F70101020000000
  tail call void @_ZN7SkPaint9setAlphafEf(%class.SkPaint* %7, float %15) #15
  %16 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 7
  %17 = load %class.SkCanvas*, %class.SkCanvas** %16, align 8
  %18 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #15
  %19 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #15
  %20 = tail call { <2 x float>, <2 x float> } @_ZN3viz14DirectRenderer14QuadVertexRectEv() #15
  %21 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  %22 = extractvalue { <2 x float>, <2 x float> } %20, 0
  store <2 x float> %22, <2 x float>* %21, align 8
  %23 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  %24 = extractvalue { <2 x float>, <2 x float> } %20, 1
  store <2 x float> %24, <2 x float>* %23, align 8
  %25 = call { <2 x float>, <2 x float> } @_ZN3gfx13RectFToSkRectERKNS_5RectFE(%"class.gfx::RectF"* nonnull dereferenceable(16) %6) #15
  %26 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  %27 = extractvalue { <2 x float>, <2 x float> } %25, 0
  store <2 x float> %27, <2 x float>* %26, align 8
  %28 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  %29 = extractvalue { <2 x float>, <2 x float> } %25, 1
  store <2 x float> %29, <2 x float>* %28, align 8
  call void @_ZN8SkCanvas8drawRectERK6SkRectRK7SkPaint(%class.SkCanvas* %17, %struct.SkRect* nonnull dereferenceable(16) %4, %class.SkPaint* dereferenceable(72) %7) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #15
  ret void
}

declare { <2 x float>, <2 x float> } @_ZN3gfx13RectFToSkRectERKNS_5RectFE(%"class.gfx::RectF"* dereferenceable(16)) local_unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZN3viz14DirectRenderer14QuadVertexRectEv() local_unnamed_addr #1

declare void @_ZNK6SkRect6toQuadEP7SkPoint(%struct.SkRect*, %struct.SkPoint*) local_unnamed_addr #1

declare void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix*, %struct.SkPoint*, %struct.SkPoint*, i32) local_unnamed_addr #1

declare void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint*, i8 zeroext) local_unnamed_addr #1

declare void @_ZN7SkPaint14setStrokeWidthEf(%class.SkPaint*, float) local_unnamed_addr #1

declare void @_ZN8SkCanvas10drawPointsENS_9PointModeEmPK7SkPointRK7SkPaint(%class.SkCanvas*, i32, i64, %struct.SkPoint*, %class.SkPaint* dereferenceable(72)) local_unnamed_addr #1

declare void @_ZN8SkCanvas6concatERK8SkMatrix(%class.SkCanvas*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #7

declare void @_ZN2cc28ScopedSubnormalFloatDisablerC1Ev(%"class.cc::ScopedSubnormalFloatDisabler"*) unnamed_addr #1

declare i32 @_ZN8SkCanvas4saveEv(%class.SkCanvas*) local_unnamed_addr #1

declare void @_ZN8SkCanvas9translateEff(%class.SkCanvas*, float, float) local_unnamed_addr #1

declare void @_ZN8SkCanvas5scaleEff(%class.SkCanvas*, float, float) local_unnamed_addr #1

declare void @_ZNK2cc15DisplayItemList6RasterEP8SkCanvasPNS_13ImageProviderE(%"class.cc::DisplayItemList"*, %class.SkCanvas*, %"class.cc::ImageProvider"*) local_unnamed_addr #1

declare void @_ZN8SkCanvas7restoreEv(%class.SkCanvas*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2cc13ImageProviderD2Ev(%"class.cc::ImageProvider"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2cc28ScopedSubnormalFloatDisablerD1Ev(%"class.cc::ScopedSubnormalFloatDisabler"*) unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZN2cc8MathUtil21ScaleRectProportionalERKN3gfx5RectFES4_S4_(%"class.gfx::RectF"* dereferenceable(16), %"class.gfx::RectF"* dereferenceable(16), %"class.gfx::RectF"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN3viz31DisplayResourceProviderSoftware21ScopedReadLockSkImageC1EPS0_N4util6IdTypeINS_20ResourceIdTypeMarkerEjLj0ELj1EEE11SkAlphaType15GrSurfaceOrigin(%"class.viz::DisplayResourceProviderSoftware::ScopedReadLockSkImage"*, %"class.viz::DisplayResourceProviderSoftware"*, i32, i32, i32) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZN3gfx12BoundingRectERKNS_6PointFES2_(%"class.gfx::PointF"* dereferenceable(8), %"class.gfx::PointF"* dereferenceable(8)) local_unnamed_addr #1

declare i32 @_ZN8SkCanvas14saveLayerAlphaEPK6SkRectj(%class.SkCanvas*, %struct.SkRect*, i32) local_unnamed_addr #1

declare void @_ZN8SkCanvas13drawImageRectEPK7SkImageRK6SkRectS5_RK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintE(%class.SkCanvas*, %class.SkImage*, %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3viz31DisplayResourceProviderSoftware21ScopedReadLockSkImageD1Ev(%"class.viz::DisplayResourceProviderSoftware::ScopedReadLockSkImage"*) unnamed_addr #2

declare %"class.cc::FilterOperations"* @_ZNK3viz14DirectRenderer14FiltersForPassEN4util6IdTypeINS_20AggregatedRenderPassEmLm0ELm1EEE(%"class.viz::DirectRenderer"*, i64) local_unnamed_addr #1

declare void @_ZN2cc20RenderSurfaceFilters16BuildImageFilterERKNS_16FilterOperationsERKN3gfx5SizeFERKNS4_9Vector2dFE(%class.sk_sp.116* sret, %"class.cc::FilterOperations"* dereferenceable(24), %"class.gfx::SizeF"* dereferenceable(8), %"class.gfx::Vector2dF"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3viz16SoftwareRenderer16ApplyImageFilterEP13SkImageFilterPKNS_28AggregatedRenderPassDrawQuadERK8SkBitmapbP7SkIRect(%class.sk_sp.335* noalias sret, %"class.viz::SoftwareRenderer"* nocapture readnone, %class.SkImageFilter*, %"class.viz::AggregatedRenderPassDrawQuad"*, %class.SkBitmap* dereferenceable(56), i1 zeroext, %struct.SkIRect* nocapture) local_unnamed_addr #0 align 2 {
  %8 = alloca %class.SkMatrix, align 16
  %9 = alloca { i64, i64 }, align 8
  %10 = alloca %struct.SkImageInfo, align 16
  %11 = alloca %class.sk_sp, align 8
  %12 = alloca %class.SkPaint, align 8
  %13 = alloca %"class.cc::ScopedSubnormalFloatDisabler", align 4
  %14 = alloca %class.sk_sp.117, align 8
  %15 = alloca %class.sk_sp.335, align 8
  %16 = alloca %struct.SkSamplingOptions, align 4
  %17 = icmp eq %class.SkImageFilter* %2, null
  br i1 %17, label %18, label %20

18:                                               ; preds = %7
  %19 = getelementptr inbounds %class.sk_sp.335, %class.sk_sp.335* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %19, align 8
  br label %148

20:                                               ; preds = %7
  %21 = bitcast { i64, i64 }* %9 to %struct.SkIRect*
  %22 = bitcast %class.SkMatrix* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %22) #15
  %23 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 1
  %24 = bitcast %class.SkMatrix* %8 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %24, align 16
  %25 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 4
  %26 = bitcast float* %25 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %26, align 16
  %27 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %27, align 16
  store i32 16, i32* %23, align 4
  %28 = getelementptr inbounds %"class.viz::AggregatedRenderPassDrawQuad", %"class.viz::AggregatedRenderPassDrawQuad"* %3, i64 0, i32 0, i32 4, i32 0
  %29 = load float, float* %28, align 4
  %30 = getelementptr inbounds %"class.viz::AggregatedRenderPassDrawQuad", %"class.viz::AggregatedRenderPassDrawQuad"* %3, i64 0, i32 0, i32 4, i32 1
  %31 = load float, float* %30, align 4
  %32 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix* nonnull %8, float %29, float %31) #15
  %33 = getelementptr inbounds %"class.viz::AggregatedRenderPassDrawQuad", %"class.viz::AggregatedRenderPassDrawQuad"* %3, i64 0, i32 0, i32 3, i32 0
  %34 = load float, float* %33, align 4
  %35 = getelementptr inbounds %"class.viz::AggregatedRenderPassDrawQuad", %"class.viz::AggregatedRenderPassDrawQuad"* %3, i64 0, i32 0, i32 3, i32 1
  %36 = load float, float* %35, align 4
  %37 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9postScaleEff(%class.SkMatrix* nonnull %8, float %34, float %36) #15
  %38 = bitcast { i64, i64 }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #15
  %39 = getelementptr inbounds %"class.viz::AggregatedRenderPassDrawQuad", %"class.viz::AggregatedRenderPassDrawQuad"* %3, i64 0, i32 0, i32 0, i32 2
  %40 = call { i64, i64 } @_ZN3gfx13RectToSkIRectERKNS_4RectE(%"class.gfx::Rect"* dereferenceable(16) %39) #15
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 0
  %42 = extractvalue { i64, i64 } %40, 0
  store i64 %42, i64* %41, align 8
  %43 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 1
  %44 = extractvalue { i64, i64 } %40, 1
  store i64 %44, i64* %43, align 8
  %45 = call { i64, i64 } @_ZNK13SkImageFilter12filterBoundsERK7SkIRectRK8SkMatrixNS_12MapDirectionEPS1_(%class.SkImageFilter* nonnull %2, %struct.SkIRect* nonnull dereferenceable(16) %21, %class.SkMatrix* nonnull dereferenceable(40) %8, i32 0, %struct.SkIRect* null) #15
  %46 = extractvalue { i64, i64 } %45, 0
  %47 = extractvalue { i64, i64 } %45, 1
  %48 = bitcast %struct.SkIRect* %6 to i64*
  store i64 %46, i64* %48, align 4
  %49 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 2
  %50 = bitcast i32* %49 to i64*
  store i64 %47, i64* %50, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #15
  br i1 %5, label %54, label %51

51:                                               ; preds = %20
  %52 = bitcast %"class.gfx::Rect"* %39 to i64*
  %53 = load i64, i64* %52, align 4
  br label %54

54:                                               ; preds = %20, %51
  %55 = phi i64 [ %53, %51 ], [ %46, %20 ]
  %56 = lshr i64 %55, 32
  %57 = trunc i64 %56 to i32
  %58 = trunc i64 %55 to i32
  %59 = bitcast %struct.SkImageInfo* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #15
  %60 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %10, i64 0, i32 0, i32 0, i32 0
  %61 = sub i64 %47, %46
  %62 = and i64 %46, -4294967296
  %63 = sub i64 %47, %62
  %64 = and i64 %63, -4294967296
  %65 = and i64 %61, 4294967295
  %66 = or i64 %64, %65
  %67 = bitcast %struct.SkImageInfo* %10 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8589934598>, <2 x i64>* %67, align 16, !alias.scope !19
  %68 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %10, i64 0, i32 1
  %69 = bitcast %struct.SkISize* %68 to i64*
  store i64 %66, i64* %69, align 16, !alias.scope !19
  %70 = bitcast %class.sk_sp* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #15
  %71 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %11, i64 0, i32 0
  store %class.SkSurface* inttoptr (i64 -6148914691236517206 to %class.SkSurface*), %class.SkSurface** %71, align 8
  call void @_ZN9SkSurface10MakeRasterERK11SkImageInfomPK14SkSurfaceProps(%class.sk_sp* nonnull sret %11, %struct.SkImageInfo* nonnull dereferenceable(24) %10, i64 0, %class.SkSurfaceProps* null) #15
  %72 = load %class.SkSurface*, %class.SkSurface** %71, align 8
  %73 = icmp eq %class.SkSurface* %72, null
  br i1 %73, label %74, label %76

74:                                               ; preds = %54
  %75 = getelementptr inbounds %class.sk_sp.335, %class.sk_sp.335* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %75, align 8
  br label %138

76:                                               ; preds = %54
  %77 = bitcast %class.SkPaint* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %77) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %77, i8* align 8 bitcast (%class.SkPaint* @__const._ZNK3viz16SoftwareRenderer23GetBackdropFilterShaderEPKNS_28AggregatedRenderPassDrawQuadE10SkTileMode.paint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %12) #15
  %78 = bitcast %"class.cc::ScopedSubnormalFloatDisabler"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %78) #15
  %79 = getelementptr inbounds %"class.cc::ScopedSubnormalFloatDisabler", %"class.cc::ScopedSubnormalFloatDisabler"* %13, i64 0, i32 0
  store i32 -1431655766, i32* %79, align 4
  call void @_ZN2cc28ScopedSubnormalFloatDisablerC1Ev(%"class.cc::ScopedSubnormalFloatDisabler"* nonnull %13) #15
  call void @_ZNK13SkImageFilter19makeWithLocalMatrixERK8SkMatrix(%class.sk_sp.117* nonnull sret %14, %class.SkImageFilter* nonnull %2, %class.SkMatrix* nonnull dereferenceable(40) %8) #15
  call void @_ZN7SkPaint14setImageFilterE5sk_spI13SkImageFilterE(%class.SkPaint* nonnull %12, %class.sk_sp.117* nonnull %14) #15
  %80 = getelementptr inbounds %class.sk_sp.117, %class.sk_sp.117* %14, i64 0, i32 0
  %81 = load %class.SkImageFilter*, %class.SkImageFilter** %80, align 8
  %82 = icmp eq %class.SkImageFilter* %81, null
  br i1 %82, label %93, label %83

83:                                               ; preds = %76
  %84 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %81, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = atomicrmw add i32* %84, i32 -1 acq_rel
  %86 = icmp eq i32 %85, 1
  br i1 %86, label %87, label %93

87:                                               ; preds = %83
  %88 = bitcast %class.SkImageFilter* %81 to %class.SkRefCntBase*
  %89 = bitcast %class.SkImageFilter* %81 to void (%class.SkRefCntBase*)***
  %90 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %89, align 8
  %91 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %90, i64 2
  %92 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %91, align 8
  call void %92(%class.SkRefCntBase* nonnull %88) #15
  br label %93

93:                                               ; preds = %76, %83, %87
  %94 = load %class.SkSurface*, %class.SkSurface** %71, align 8
  %95 = call %class.SkCanvas* @_ZN9SkSurface9getCanvasEv(%class.SkSurface* %94) #15
  %96 = sub nsw i32 0, %58
  %97 = sitofp i32 %96 to float
  %98 = sub nsw i32 0, %57
  %99 = sitofp i32 %98 to float
  call void @_ZN8SkCanvas9translateEff(%class.SkCanvas* %95, float %97, float %99) #15
  %100 = load %class.SkSurface*, %class.SkSurface** %71, align 8
  %101 = call %class.SkCanvas* @_ZN9SkSurface9getCanvasEv(%class.SkSurface* %100) #15
  %102 = bitcast %class.sk_sp.335* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #15
  call void @_ZNK8SkBitmap7asImageEv(%class.sk_sp.335* nonnull sret %15, %class.SkBitmap* %4) #15
  %103 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %39, i64 0, i32 0, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = sitofp i32 %104 to float
  %106 = getelementptr inbounds %"class.viz::AggregatedRenderPassDrawQuad", %"class.viz::AggregatedRenderPassDrawQuad"* %3, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %107 = load i32, i32* %106, align 4
  %108 = sitofp i32 %107 to float
  %109 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %16, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %109) #15
  %110 = getelementptr inbounds %class.sk_sp.335, %class.sk_sp.335* %15, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %109, i8 0, i64 20, i1 false)
  %111 = load %class.SkImage*, %class.SkImage** %110, align 8
  call void @_ZN8SkCanvas9drawImageEPK7SkImageffRK17SkSamplingOptionsPK7SkPaint(%class.SkCanvas* %101, %class.SkImage* %111, float %105, float %108, %struct.SkSamplingOptions* nonnull dereferenceable(20) %16, %class.SkPaint* nonnull %12) #15
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %109) #15
  %112 = load %class.SkImage*, %class.SkImage** %110, align 8
  %113 = icmp eq %class.SkImage* %112, null
  br i1 %113, label %124, label %114

114:                                              ; preds = %93
  %115 = getelementptr inbounds %class.SkImage, %class.SkImage* %112, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = atomicrmw add i32* %115, i32 -1 acq_rel
  %117 = icmp eq i32 %116, 1
  br i1 %117, label %118, label %124

118:                                              ; preds = %114
  %119 = bitcast %class.SkImage* %112 to %class.SkRefCntBase*
  %120 = bitcast %class.SkImage* %112 to void (%class.SkRefCntBase*)***
  %121 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %120, align 8
  %122 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %121, i64 2
  %123 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %122, align 8
  call void %123(%class.SkRefCntBase* nonnull %119) #15
  br label %124

124:                                              ; preds = %118, %114, %93
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #15
  %125 = load %class.SkSurface*, %class.SkSurface** %71, align 8
  call void @_ZN9SkSurface17makeImageSnapshotEv(%class.sk_sp.335* sret %0, %class.SkSurface* %125) #15
  call void @_ZN2cc28ScopedSubnormalFloatDisablerD1Ev(%"class.cc::ScopedSubnormalFloatDisabler"* nonnull %13) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %78) #15
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %12) #15
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %77) #15
  %126 = load %class.SkSurface*, %class.SkSurface** %71, align 8
  %127 = icmp eq %class.SkSurface* %126, null
  br i1 %127, label %138, label %128

128:                                              ; preds = %124
  %129 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %126, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = atomicrmw add i32* %129, i32 -1 acq_rel
  %131 = icmp eq i32 %130, 1
  br i1 %131, label %132, label %138

132:                                              ; preds = %128
  %133 = bitcast %class.SkSurface* %126 to %class.SkRefCntBase*
  %134 = bitcast %class.SkSurface* %126 to void (%class.SkRefCntBase*)***
  %135 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %134, align 8
  %136 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %135, i64 2
  %137 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %136, align 8
  call void %137(%class.SkRefCntBase* nonnull %133) #15
  br label %138

138:                                              ; preds = %74, %124, %128, %132
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #15
  %139 = load %class.SkColorSpace*, %class.SkColorSpace** %60, align 16
  %140 = icmp eq %class.SkColorSpace* %139, null
  br i1 %140, label %147, label %141

141:                                              ; preds = %138
  %142 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %139, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = atomicrmw add i32* %142, i32 -1 acq_rel
  %144 = icmp eq i32 %143, 1
  br i1 %144, label %145, label %147

145:                                              ; preds = %141
  %146 = bitcast %class.SkColorSpace* %139 to i8*
  call void @_ZdlPv(i8* %146) #16
  br label %147

147:                                              ; preds = %138, %141, %145
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %22) #15
  br label %148

148:                                              ; preds = %147, %18
  ret void
}

declare { <2 x float>, <2 x float> } @_ZN3gfx13SkRectToRectFERK6SkRect(%struct.SkRect* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN2cc10PaintFlags32FilterQualityToSkSamplingOptionsE15SkFilterQuality(%struct.SkSamplingOptions* sret, i32) local_unnamed_addr #1

declare void @_ZN7SkPaint13setMaskFilterE5sk_spI12SkMaskFilterE(%class.SkPaint*, %class.sk_sp.225*) local_unnamed_addr #1

declare void @_ZN18SkShaderMaskFilter4MakeE5sk_spI8SkShaderE(%class.sk_sp.225* sret, %class.sk_sp.224*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3viz16SoftwareRenderer23GetBackdropFilterShaderEPKNS_28AggregatedRenderPassDrawQuadE10SkTileMode(%class.sk_sp.224* noalias sret, %"class.viz::SoftwareRenderer"*, %"class.viz::AggregatedRenderPassDrawQuad"*, i32) local_unnamed_addr #8 align 2 {
  %5 = alloca i64, align 8
  %6 = alloca %"class.absl::optional.130", align 8
  %7 = alloca %"class.gfx::Transform", align 4
  %8 = alloca %"class.gfx::RectF", align 4
  %9 = alloca %"class.gfx::Transform", align 4
  %10 = alloca %"class.gfx::Transform", align 4
  %11 = alloca %"class.absl::optional.130", align 4
  %12 = alloca %"class.gfx::Transform", align 4
  %13 = alloca %"class.gfx::Rect", align 4
  %14 = alloca { i64, i64 }, align 8
  %15 = bitcast { i64, i64 }* %14 to %"class.gfx::Rect"*
  %16 = alloca %"class.gfx::Transform", align 4
  %17 = alloca %"class.gfx::Transform", align 4
  %18 = alloca %class.SkMatrix, align 4
  %19 = alloca %class.SkBitmap, align 8
  %20 = alloca { i64, i64 }, align 8
  %21 = bitcast { i64, i64 }* %20 to %"class.gfx::Rect"*
  %22 = alloca { <2 x float>, <2 x float> }, align 8
  %23 = bitcast { <2 x float>, <2 x float> }* %22 to %"class.gfx::RectF"*
  %24 = alloca { <2 x float>, <2 x float> }, align 8
  %25 = bitcast { <2 x float>, <2 x float> }* %24 to %"class.gfx::RectF"*
  %26 = alloca %"class.gfx::Rect", align 4
  %27 = alloca %class.sk_sp.335, align 8
  %28 = alloca %class.sk_sp.335, align 8
  %29 = alloca { i64, i64 }, align 8
  %30 = bitcast { i64, i64 }* %29 to %struct.SkIRect*
  %31 = alloca <2 x float>, align 8
  %32 = bitcast <2 x float>* %31 to %"class.gfx::Vector2dF"*
  %33 = alloca i64, align 8
  %34 = bitcast i64* %33 to %"class.gfx::Vector2d"*
  %35 = alloca %class.sk_sp.116, align 8
  %36 = alloca %"class.gfx::SizeF", align 4
  %37 = alloca %struct.SkIRect, align 4
  %38 = alloca %class.sk_sp.335, align 8
  %39 = alloca %struct.SkImageInfo, align 16
  %40 = alloca %class.SkBitmap, align 8
  %41 = alloca %class.SkCanvas, align 8
  %42 = alloca %class.SkSurfaceProps, align 4
  %43 = alloca %class.SkMatrix, align 4
  %44 = alloca %class.SkRRect, align 4
  %45 = alloca %class.SkPaint, align 8
  %46 = alloca %class.sk_sp.117, align 8
  %47 = alloca { <2 x float>, <2 x float> }, align 8
  %48 = bitcast { <2 x float>, <2 x float> }* %47 to %struct.SkRect*
  %49 = alloca { <2 x float>, <2 x float> }, align 8
  %50 = bitcast { <2 x float>, <2 x float> }* %49 to %struct.SkRect*
  %51 = alloca %struct.SkSamplingOptions, align 4
  %52 = alloca %class.sk_sp.335, align 8
  %53 = alloca %struct.SkSamplingOptions, align 4
  %54 = bitcast %"class.viz::SoftwareRenderer"* %1 to %"class.viz::DirectRenderer"*
  %55 = getelementptr inbounds %"class.viz::AggregatedRenderPassDrawQuad", %"class.viz::AggregatedRenderPassDrawQuad"* %2, i64 0, i32 1, i32 0, i32 0
  %56 = load i64, i64* %55, align 8
  %57 = tail call %"class.cc::FilterOperations"* @_ZNK3viz14DirectRenderer22BackdropFiltersForPassEN4util6IdTypeINS_20AggregatedRenderPassEmLm0ELm1EEE(%"class.viz::DirectRenderer"* %54, i64 %56) #15
  %58 = icmp eq %"class.cc::FilterOperations"* %57, null
  br i1 %58, label %65, label %59

59:                                               ; preds = %4
  %60 = getelementptr inbounds %"class.viz::AggregatedRenderPassDrawQuad", %"class.viz::AggregatedRenderPassDrawQuad"* %2, i64 0, i32 0, i32 0, i32 6
  %61 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %60, align 8
  %62 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %61, i64 0, i32 7
  %63 = load float, float* %62, align 8
  %64 = fcmp une float %63, 0.000000e+00
  br i1 %64, label %67, label %65

65:                                               ; preds = %4, %59
  %66 = getelementptr inbounds %class.sk_sp.224, %class.sk_sp.224* %0, i64 0, i32 0
  store %class.SkShader* null, %class.SkShader** %66, align 8
  br label %511

67:                                               ; preds = %59
  %68 = getelementptr inbounds %"class.absl::optional.130", %"class.absl::optional.130"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %68) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %68, i8* align 4 getelementptr inbounds ({ { { { i8, [3 x i8], %union.anon.134 } } } }, { { { { i8, [3 x i8], %union.anon.134 } } } }* @__const._ZNK3viz16SoftwareRenderer23GetBackdropFilterShaderEPKNS_28AggregatedRenderPassDrawQuadE10SkTileMode.backdrop_filter_bounds_input, i64 0, i32 0, i32 0, i32 0, i32 0), i64 56, i1 false)
  %69 = load i64, i64* %55, align 8
  call void @_ZNK3viz14DirectRenderer27BackdropFilterBoundsForPassEN4util6IdTypeINS_20AggregatedRenderPassEmLm0ELm1EEE(%"class.absl::optional.130"* nonnull sret %6, %"class.viz::DirectRenderer"* %54, i64 %69) #15
  %70 = load i8, i8* %68, align 8, !range !3
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %78, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.absl::optional.130", %"class.absl::optional.130"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %74 = getelementptr inbounds %"class.viz::AggregatedRenderPassDrawQuad", %"class.viz::AggregatedRenderPassDrawQuad"* %2, i64 0, i32 0, i32 3, i32 0
  %75 = load float, float* %74, align 4
  %76 = getelementptr inbounds %"class.viz::AggregatedRenderPassDrawQuad", %"class.viz::AggregatedRenderPassDrawQuad"* %2, i64 0, i32 0, i32 3, i32 1
  %77 = load float, float* %76, align 4
  call void @_ZN3gfx6RRectF5ScaleEff(%"class.gfx::RRectF"* %73, float %75, float %77) #15
  br label %78

78:                                               ; preds = %67, %72
  %79 = bitcast %"class.gfx::Transform"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %79) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %79, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZNK3viz16SoftwareRenderer23GetBackdropFilterShaderEPKNS_28AggregatedRenderPassDrawQuadE10SkTileMode.contents_device_transform_inverse to i8*), i64 68, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %79, i8* align 4 bitcast ([4 x [4 x float]]* @constinit.5 to i8*), i64 64, i1 false) #15
  %80 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %7, i64 0, i32 0, i32 1
  store i8 0, i8* %80, align 4
  %81 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %60, align 8
  %82 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %81, i64 0, i32 0
  %83 = bitcast %"class.gfx::RectF"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #15
  %84 = getelementptr inbounds %"class.viz::AggregatedRenderPassDrawQuad", %"class.viz::AggregatedRenderPassDrawQuad"* %2, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = sitofp i32 %85 to float
  %87 = getelementptr inbounds %"class.viz::AggregatedRenderPassDrawQuad", %"class.viz::AggregatedRenderPassDrawQuad"* %2, i64 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %88 = load i32, i32* %87, align 4
  %89 = sitofp i32 %88 to float
  %90 = getelementptr inbounds %"class.viz::AggregatedRenderPassDrawQuad", %"class.viz::AggregatedRenderPassDrawQuad"* %2, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = getelementptr inbounds %"class.viz::AggregatedRenderPassDrawQuad", %"class.viz::AggregatedRenderPassDrawQuad"* %2, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1
  %93 = load i32, i32* %92, align 4
  %94 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %8, i64 0, i32 0, i32 0
  store float %86, float* %94, align 4
  %95 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %8, i64 0, i32 0, i32 1
  store float %89, float* %95, align 4
  %96 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %8, i64 0, i32 1, i32 0
  %97 = icmp sgt i32 %91, 0
  %98 = select i1 %97, i32 %91, i32 0
  %99 = sitofp i32 %98 to float
  store float %99, float* %96, align 4
  %100 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %8, i64 0, i32 1, i32 1
  %101 = icmp sgt i32 %93, 0
  %102 = select i1 %101, i32 %93, i32 0
  %103 = sitofp i32 %102 to float
  store float %103, float* %100, align 4
  call void @_ZN3viz14DirectRenderer17QuadRectTransformEPN3gfx9TransformERKS2_RKNS1_5RectFE(%"class.gfx::Transform"* nonnull %7, %"class.gfx::Transform"* dereferenceable(68) %82, %"class.gfx::RectF"* nonnull dereferenceable(16) %8) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #15
  %104 = bitcast %"class.gfx::Transform"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %104) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %104, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZNK3viz16SoftwareRenderer23GetBackdropFilterShaderEPKNS_28AggregatedRenderPassDrawQuadE10SkTileMode.contents_device_transform_inverse to i8*), i64 68, i1 false)
  %105 = bitcast %"class.gfx::Transform"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %105) #15
  %106 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %1, i64 0, i32 0, i32 26, i32 8, i32 0
  %108 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %1, i64 0, i32 0, i32 26, i32 7, i32 0
  call void @_ZN10SkMatrix449setConcatERKS_S1_(%class.SkMatrix44* nonnull %106, %class.SkMatrix44* dereferenceable(68) %107, %class.SkMatrix44* dereferenceable(68) %108) #15
  %109 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %9, i64 0, i32 0
  %110 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %7, i64 0, i32 0
  call void @_ZN10SkMatrix449setConcatERKS_S1_(%class.SkMatrix44* nonnull %109, %class.SkMatrix44* nonnull dereferenceable(68) %106, %class.SkMatrix44* nonnull dereferenceable(68) %110) #15
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %105) #15
  call void @_ZN3gfx9Transform11FlattenTo2dEv(%"class.gfx::Transform"* nonnull %9) #15
  %111 = getelementptr inbounds %"class.absl::optional.130", %"class.absl::optional.130"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %111) #15
  %112 = bitcast %"class.absl::optional.130"* %11 to i32*
  store i32 -1431655766, i32* %112, align 4
  store i8 0, i8* %111, align 4
  %113 = getelementptr inbounds %"class.absl::optional.130", %"class.absl::optional.130"* %11, i64 0, i32 0, i32 0, i32 0, i32 1
  %114 = bitcast %union.anon.134* %113 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %114, i8 0, i64 52, i1 false) #15
  %115 = bitcast %"class.gfx::Transform"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %115) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %115, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZNK3viz16SoftwareRenderer23GetBackdropFilterShaderEPKNS_28AggregatedRenderPassDrawQuadE10SkTileMode.contents_device_transform_inverse to i8*), i64 68, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %115, i8* align 4 bitcast ([4 x [4 x float]]* @constinit.5 to i8*), i64 64, i1 false) #15
  %116 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %12, i64 0, i32 0, i32 1
  store i8 0, i8* %116, align 4
  %117 = bitcast %"class.gfx::Rect"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %117) #15
  %118 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %13, i64 0, i32 0, i32 0
  %119 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %13, i64 0, i32 0, i32 1
  %120 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %13, i64 0, i32 1, i32 0
  %121 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %13, i64 0, i32 1, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %117, i8 0, i64 16, i1 false) #15
  %122 = bitcast { i64, i64 }* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %122) #15
  %123 = bitcast { i64, i64 }* %14 to i32*
  %124 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %15, i64 0, i32 0, i32 1
  %125 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i64 0, i32 1
  %126 = bitcast i64* %125 to i32*
  %127 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %15, i64 0, i32 1, i32 1
  %128 = bitcast %"class.gfx::Transform"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %128, i8* nonnull align 4 %104, i64 68, i1 false) #15
  %129 = call { i64, i64 } @_ZNK3viz16SoftwareRenderer39GetBackdropBoundingBoxForRenderPassQuadEPKNS_28AggregatedRenderPassDrawQuadEPKN2cc16FilterOperationsEN4absl8optionalIN3gfx6RRectFEEENSA_9TransformEPSD_PSC_PNSA_4RectE(%"class.viz::SoftwareRenderer"* %1, %"class.viz::AggregatedRenderPassDrawQuad"* %2, %"class.cc::FilterOperations"* undef, %"class.absl::optional.130"* nonnull byval(%"class.absl::optional.130") align 8 %6, %"class.gfx::Transform"* nonnull %16, %"class.gfx::Transform"* nonnull %12, %"class.absl::optional.130"* nonnull %11, %"class.gfx::Rect"* nonnull %13)
  %130 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i64 0, i32 0
  %131 = extractvalue { i64, i64 } %129, 0
  store i64 %131, i64* %130, align 8
  %132 = extractvalue { i64, i64 } %129, 1
  store i64 %132, i64* %125, align 8
  %133 = bitcast %"class.gfx::Transform"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %133) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %133, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZNK3viz16SoftwareRenderer23GetBackdropFilterShaderEPKNS_28AggregatedRenderPassDrawQuadE10SkTileMode.contents_device_transform_inverse to i8*), i64 68, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %133, i8* align 4 bitcast ([4 x [4 x float]]* @constinit.5 to i8*), i64 64, i1 false) #15
  %134 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %17, i64 0, i32 0, i32 1
  store i8 0, i8* %134, align 4
  %135 = call zeroext i1 @_ZNK3gfx9Transform10GetInverseEPS0_(%"class.gfx::Transform"* nonnull %9, %"class.gfx::Transform"* nonnull %17) #15
  %136 = trunc i64 %131 to i32
  %137 = lshr i64 %131, 32
  %138 = trunc i64 %137 to i32
  br i1 %135, label %141, label %139

139:                                              ; preds = %78
  %140 = getelementptr inbounds %class.sk_sp.224, %class.sk_sp.224* %0, i64 0, i32 0
  store %class.SkShader* null, %class.SkShader** %140, align 8
  br label %510

141:                                              ; preds = %78
  %142 = lshr i64 %132, 32
  %143 = trunc i64 %142 to i32
  %144 = trunc i64 %132 to i32
  %145 = bitcast %class.SkMatrix* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %145) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %145, i8 -1, i64 36, i1 false)
  %146 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %18, i64 0, i32 1
  store i32 -1431655766, i32* %146, align 4
  %147 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %17, i64 0, i32 0
  call void @_ZNK10SkMatrix44cv8SkMatrixEv(%class.SkMatrix* nonnull sret %18, %class.SkMatrix44* nonnull %147) #15
  %148 = sitofp i32 %136 to float
  %149 = sitofp i32 %138 to float
  %150 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12preTranslateEff(%class.SkMatrix* nonnull %18, float %148, float %149) #15
  %151 = bitcast %class.SkBitmap* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %151) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %151, i8 -86, i64 56, i1 false)
  call void @_ZNK3viz16SoftwareRenderer17GetBackdropBitmapERKN3gfx4RectE(%class.SkBitmap* nonnull sret %19, %"class.viz::SoftwareRenderer"* %1, %"class.gfx::Rect"* nonnull dereferenceable(16) %15)
  %152 = load i8, i8* %111, align 4, !range !3
  %153 = icmp eq i8 %152, 0
  br i1 %153, label %263, label %154

154:                                              ; preds = %141
  %155 = bitcast { i64, i64 }* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %155) #15
  %156 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i64 0, i32 1
  %157 = bitcast i64* %156 to i32*
  %158 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %21, i64 0, i32 1, i32 1
  %159 = bitcast { <2 x float>, <2 x float> }* %22 to i8*
  %160 = bitcast { i64, i64 }* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %160, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %159) #15
  %161 = bitcast { <2 x float>, <2 x float> }* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %161) #15
  %162 = getelementptr inbounds %"class.absl::optional.130", %"class.absl::optional.130"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %163 = call { <2 x float>, <2 x float> } @_ZN3gfx13SkRectToRectFERK6SkRect(%struct.SkRect* dereferenceable(16) %162) #15
  %164 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %24, i64 0, i32 0
  %165 = extractvalue { <2 x float>, <2 x float> } %163, 0
  store <2 x float> %165, <2 x float>* %164, align 8
  %166 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %24, i64 0, i32 1
  %167 = extractvalue { <2 x float>, <2 x float> } %163, 1
  store <2 x float> %167, <2 x float>* %166, align 8
  %168 = call { <2 x float>, <2 x float> } @_ZN2cc8MathUtil14MapClippedRectERKN3gfx9TransformERKNS1_5RectFE(%"class.gfx::Transform"* nonnull dereferenceable(68) %12, %"class.gfx::RectF"* nonnull dereferenceable(16) %25) #15
  %169 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %22, i64 0, i32 0
  %170 = extractvalue { <2 x float>, <2 x float> } %168, 0
  store <2 x float> %170, <2 x float>* %169, align 8
  %171 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %22, i64 0, i32 1
  %172 = extractvalue { <2 x float>, <2 x float> } %168, 1
  store <2 x float> %172, <2 x float>* %171, align 8
  %173 = call { i64, i64 } @_ZN3gfx15ToEnclosingRectERKNS_5RectFE(%"class.gfx::RectF"* nonnull dereferenceable(16) %23) #15
  %174 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i64 0, i32 0
  %175 = extractvalue { i64, i64 } %173, 0
  store i64 %175, i64* %174, align 8
  %176 = extractvalue { i64, i64 } %173, 1
  store i64 %176, i64* %156, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %161) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %159) #15
  %177 = bitcast %"class.gfx::Rect"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %177) #15
  %178 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %19, i64 0, i32 1, i32 2, i32 1, i32 0
  %179 = load i32, i32* %178, align 8
  %180 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %19, i64 0, i32 1, i32 2, i32 1, i32 1
  %181 = load i32, i32* %180, align 4
  %182 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %26, i64 0, i32 0, i32 0
  store i32 0, i32* %182, align 4
  %183 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %26, i64 0, i32 0, i32 1
  store i32 0, i32* %183, align 4
  %184 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %26, i64 0, i32 1, i32 0
  %185 = icmp sgt i32 %179, 0
  %186 = select i1 %185, i32 %179, i32 0
  store i32 %186, i32* %184, align 4
  %187 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %26, i64 0, i32 1, i32 1
  %188 = icmp sgt i32 %181, 0
  %189 = select i1 %188, i32 %181, i32 0
  store i32 %189, i32* %187, align 4
  call void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"* nonnull %21, %"class.gfx::Rect"* nonnull dereferenceable(16) %26) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %177) #15
  %190 = load i32, i32* %157, align 8
  %191 = icmp eq i32 %190, 0
  %192 = load i32, i32* %158, align 4
  %193 = icmp eq i32 %192, 0
  %194 = or i1 %191, %193
  br i1 %194, label %195, label %197

195:                                              ; preds = %154
  %196 = getelementptr inbounds %class.sk_sp.224, %class.sk_sp.224* %0, i64 0, i32 0
  store %class.SkShader* null, %class.SkShader** %196, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %155) #15
  br label %509

197:                                              ; preds = %154
  %198 = bitcast %class.sk_sp.335* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %198) #15
  %199 = getelementptr inbounds %class.sk_sp.335, %class.sk_sp.335* %27, i64 0, i32 0
  store %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*), %class.SkImage** %199, align 8
  call void @_ZN7SkImage14MakeFromBitmapERK8SkBitmap(%class.sk_sp.335* nonnull sret %27, %class.SkBitmap* nonnull dereferenceable(56) %19) #15
  %200 = bitcast %class.sk_sp.335* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %200) #15
  %201 = load %class.SkImage*, %class.SkImage** %199, align 8
  %202 = bitcast { i64, i64 }* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %202) #15
  %203 = call { i64, i64 } @_ZN3gfx13RectToSkIRectERKNS_4RectE(%"class.gfx::Rect"* nonnull dereferenceable(16) %21) #15
  %204 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i64 0, i32 0
  %205 = extractvalue { i64, i64 } %203, 0
  store i64 %205, i64* %204, align 8
  %206 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i64 0, i32 1
  %207 = extractvalue { i64, i64 } %203, 1
  store i64 %207, i64* %206, align 8
  call void @_ZNK7SkImage10makeSubsetERK7SkIRectP15GrDirectContext(%class.sk_sp.335* nonnull sret %28, %class.SkImage* %201, %struct.SkIRect* nonnull dereferenceable(16) %30, %class.GrDirectContext* null) #15
  %208 = getelementptr inbounds %class.sk_sp.335, %class.sk_sp.335* %28, i64 0, i32 0
  %209 = bitcast %class.sk_sp.335* %28 to i64*
  %210 = load i64, i64* %209, align 8
  store %class.SkImage* null, %class.SkImage** %208, align 8
  %211 = load %class.SkImage*, %class.SkImage** %199, align 8
  %212 = bitcast %class.sk_sp.335* %27 to i64*
  store i64 %210, i64* %212, align 8
  %213 = icmp eq %class.SkImage* %211, null
  br i1 %213, label %237, label %214

214:                                              ; preds = %197
  %215 = getelementptr inbounds %class.SkImage, %class.SkImage* %211, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %216 = atomicrmw add i32* %215, i32 -1 acq_rel
  %217 = icmp eq i32 %216, 1
  br i1 %217, label %218, label %224

218:                                              ; preds = %214
  %219 = bitcast %class.SkImage* %211 to %class.SkRefCntBase*
  %220 = bitcast %class.SkImage* %211 to void (%class.SkRefCntBase*)***
  %221 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %220, align 8
  %222 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %221, i64 2
  %223 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %222, align 8
  call void %223(%class.SkRefCntBase* nonnull %219) #15
  br label %224

224:                                              ; preds = %214, %218
  %225 = load %class.SkImage*, %class.SkImage** %208, align 8
  %226 = icmp eq %class.SkImage* %225, null
  br i1 %226, label %237, label %227

227:                                              ; preds = %224
  %228 = getelementptr inbounds %class.SkImage, %class.SkImage* %225, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %229 = atomicrmw add i32* %228, i32 -1 acq_rel
  %230 = icmp eq i32 %229, 1
  br i1 %230, label %231, label %237

231:                                              ; preds = %227
  %232 = bitcast %class.SkImage* %225 to %class.SkRefCntBase*
  %233 = bitcast %class.SkImage* %225 to void (%class.SkRefCntBase*)***
  %234 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %233, align 8
  %235 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %234, i64 2
  %236 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %235, align 8
  call void %236(%class.SkRefCntBase* nonnull %232) #15
  br label %237

237:                                              ; preds = %197, %224, %227, %231
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %202) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %200) #15
  %238 = load %class.SkImage*, %class.SkImage** %199, align 8
  %239 = call zeroext i1 @_ZNK7SkImage14asLegacyBitmapEP8SkBitmapNS_16LegacyBitmapModeE(%class.SkImage* %238, %class.SkBitmap* nonnull %19, i32 0) #15
  %240 = load i64, i64* %174, align 8
  %241 = trunc i64 %240 to i32
  %242 = lshr i64 %240, 32
  %243 = trunc i64 %242 to i32
  %244 = load %class.SkImage*, %class.SkImage** %199, align 8
  %245 = icmp eq %class.SkImage* %244, null
  br i1 %245, label %256, label %246

246:                                              ; preds = %237
  %247 = getelementptr inbounds %class.SkImage, %class.SkImage* %244, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %248 = atomicrmw add i32* %247, i32 -1 acq_rel
  %249 = icmp eq i32 %248, 1
  br i1 %249, label %250, label %256

250:                                              ; preds = %246
  %251 = bitcast %class.SkImage* %244 to %class.SkRefCntBase*
  %252 = bitcast %class.SkImage* %244 to void (%class.SkRefCntBase*)***
  %253 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %252, align 8
  %254 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %253, i64 2
  %255 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %254, align 8
  call void %255(%class.SkRefCntBase* nonnull %251) #15
  br label %256

256:                                              ; preds = %237, %246, %250
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %198) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %155) #15
  %257 = sitofp i32 %241 to float
  %258 = sitofp i32 %243 to float
  %259 = load i32, i32* %123, align 8
  %260 = load i32, i32* %126, align 8
  %261 = load i32, i32* %124, align 4
  %262 = load i32, i32* %127, align 4
  br label %263

263:                                              ; preds = %141, %256
  %264 = phi i32 [ %262, %256 ], [ %143, %141 ]
  %265 = phi i32 [ %261, %256 ], [ %138, %141 ]
  %266 = phi i32 [ %260, %256 ], [ %144, %141 ]
  %267 = phi i32 [ %259, %256 ], [ %136, %141 ]
  %268 = phi float [ %257, %256 ], [ 0.000000e+00, %141 ]
  %269 = phi float [ %258, %256 ], [ 0.000000e+00, %141 ]
  %270 = bitcast <2 x float>* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %270) #15
  %271 = getelementptr inbounds <2 x float>, <2 x float>* %31, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %271, align 8
  %272 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %32, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %272, align 4
  %273 = load i32, i32* %118, align 4
  %274 = load i32, i32* %120, align 4
  %275 = add nsw i32 %274, %273
  %276 = load i32, i32* %119, align 4
  %277 = add nsw i32 %266, %267
  %278 = icmp sgt i32 %277, -1
  %279 = select i1 %278, i32 -2147483648, i32 2147483647
  %280 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %275, i32 %277) #15
  %281 = extractvalue { i32, i1 } %280, 1
  %282 = extractvalue { i32, i1 } %280, 0
  %283 = select i1 %281, i32 %279, i32 %282, !prof !24
  %284 = icmp sgt i32 %265, -1
  %285 = select i1 %284, i32 -2147483648, i32 2147483647
  %286 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %276, i32 %265) #15
  %287 = extractvalue { i32, i1 } %286, 1
  %288 = extractvalue { i32, i1 } %286, 0
  %289 = select i1 %287, i32 %285, i32 %288, !prof !24
  %290 = zext i32 %289 to i64
  %291 = shl nuw i64 %290, 32
  %292 = zext i32 %283 to i64
  %293 = or i64 %291, %292
  %294 = bitcast i64* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %294) #15
  %295 = add nsw i32 %264, %265
  %296 = load i32, i32* %121, align 4
  %297 = add nsw i32 %296, %276
  %298 = icmp sgt i32 %273, -1
  %299 = select i1 %298, i32 -2147483648, i32 2147483647
  %300 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %267, i32 %273) #15
  %301 = extractvalue { i32, i1 } %300, 1
  %302 = extractvalue { i32, i1 } %300, 0
  %303 = select i1 %301, i32 %299, i32 %302, !prof !24
  %304 = icmp sgt i32 %297, -1
  %305 = select i1 %304, i32 -2147483648, i32 2147483647
  %306 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %295, i32 %297) #15
  %307 = extractvalue { i32, i1 } %306, 1
  %308 = extractvalue { i32, i1 } %306, 0
  %309 = select i1 %307, i32 %305, i32 %308, !prof !24
  %310 = zext i32 %309 to i64
  %311 = shl nuw i64 %310, 32
  %312 = zext i32 %303 to i64
  %313 = or i64 %311, %312
  store i64 %313, i64* %33, align 8
  %314 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %314)
  %315 = bitcast i64* %5 to %"class.gfx::Vector2d"*
  store i64 %293, i64* %5, align 8
  call void @_ZN3gfx8Vector2d3AddERKS0_(%"class.gfx::Vector2d"* nonnull %315, %"class.gfx::Vector2d"* nonnull dereferenceable(8) %34) #15
  %316 = load i64, i64* %5, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %314)
  %317 = trunc i64 %316 to i32
  %318 = lshr i64 %316, 32
  %319 = trunc i64 %318 to i32
  %320 = sitofp i32 %317 to float
  %321 = sitofp i32 %319 to float
  %322 = insertelement <2 x float> undef, float %320, i32 0
  %323 = insertelement <2 x float> %322, float %321, i32 1
  store <2 x float> %323, <2 x float>* %31, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %294) #15
  %324 = bitcast %class.sk_sp.116* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %324) #15
  %325 = getelementptr inbounds %class.sk_sp.116, %class.sk_sp.116* %35, i64 0, i32 0
  store %"class.cc::PaintFilter"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintFilter"*), %"class.cc::PaintFilter"** %325, align 8
  %326 = bitcast %"class.gfx::SizeF"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %326) #15
  %327 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %19, i64 0, i32 1, i32 2, i32 1, i32 0
  %328 = load i32, i32* %327, align 8
  %329 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %19, i64 0, i32 1, i32 2, i32 1, i32 1
  %330 = load i32, i32* %329, align 4
  %331 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %36, i64 0, i32 0
  %332 = icmp sgt i32 %328, 0
  %333 = select i1 %332, i32 %328, i32 0
  %334 = sitofp i32 %333 to float
  store float %334, float* %331, align 4
  %335 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %36, i64 0, i32 1
  %336 = icmp sgt i32 %330, 0
  %337 = select i1 %336, i32 %330, i32 0
  %338 = sitofp i32 %337 to float
  store float %338, float* %335, align 4
  call void @_ZN2cc20RenderSurfaceFilters16BuildImageFilterERKNS_16FilterOperationsERKN3gfx5SizeFERKNS4_9Vector2dFE(%class.sk_sp.116* nonnull sret %35, %"class.cc::FilterOperations"* nonnull dereferenceable(24) %57, %"class.gfx::SizeF"* nonnull dereferenceable(8) %36, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %32) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %326) #15
  %339 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %325, align 8
  %340 = icmp eq %"class.cc::PaintFilter"* %339, null
  br i1 %340, label %341, label %343

341:                                              ; preds = %263
  %342 = getelementptr inbounds %class.sk_sp.224, %class.sk_sp.224* %0, i64 0, i32 0
  store %class.SkShader* null, %class.SkShader** %342, align 8
  br label %508

343:                                              ; preds = %263
  %344 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %339, i64 0, i32 1, i32 0
  %345 = load %class.SkImageFilter*, %class.SkImageFilter** %344, align 8
  %346 = icmp eq %class.SkImageFilter* %345, null
  br i1 %346, label %350, label %347

347:                                              ; preds = %343
  %348 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %345, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %349 = atomicrmw add i32* %348, i32 1 monotonic
  br label %350

350:                                              ; preds = %343, %347
  %351 = bitcast %struct.SkIRect* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %351) #15
  %352 = bitcast %class.sk_sp.335* %38 to i8*
  %353 = bitcast %struct.SkIRect* %37 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %353, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %352) #15
  %354 = getelementptr inbounds %class.sk_sp.335, %class.sk_sp.335* %38, i64 0, i32 0
  store %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*), %class.SkImage** %354, align 8
  call void @_ZNK3viz16SoftwareRenderer16ApplyImageFilterEP13SkImageFilterPKNS_28AggregatedRenderPassDrawQuadERK8SkBitmapbP7SkIRect(%class.sk_sp.335* nonnull sret %38, %"class.viz::SoftwareRenderer"* undef, %class.SkImageFilter* %345, %"class.viz::AggregatedRenderPassDrawQuad"* %2, %class.SkBitmap* nonnull dereferenceable(56) %19, i1 zeroext false, %struct.SkIRect* nonnull %37)
  %355 = load %class.SkImage*, %class.SkImage** %354, align 8
  %356 = icmp eq %class.SkImage* %355, null
  br i1 %356, label %357, label %359

357:                                              ; preds = %350
  %358 = getelementptr inbounds %class.sk_sp.224, %class.sk_sp.224* %0, i64 0, i32 0
  store %class.SkShader* null, %class.SkShader** %358, align 8
  br label %484

359:                                              ; preds = %350
  %360 = bitcast %struct.SkImageInfo* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %360) #15
  %361 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %39, i64 0, i32 0, i32 0, i32 0
  %362 = zext i32 %264 to i64
  %363 = shl nuw i64 %362, 32
  %364 = zext i32 %266 to i64
  %365 = or i64 %363, %364
  %366 = bitcast %struct.SkImageInfo* %39 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8589934598>, <2 x i64>* %366, align 16, !alias.scope !25
  %367 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %39, i64 0, i32 1
  %368 = bitcast %struct.SkISize* %367 to i64*
  store i64 %365, i64* %368, align 16, !alias.scope !25
  %369 = bitcast %class.SkBitmap* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %369) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %369, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %40) #15
  %370 = sext i32 %266 to i64
  %371 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %39, i64 0, i32 0
  %372 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* nonnull %371) #15
  %373 = sext i32 %372 to i64
  %374 = mul nsw i64 %373, %370
  %375 = icmp ult i64 %374, 2147483648
  %376 = select i1 %375, i64 %374, i64 0
  %377 = call zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap* nonnull %40, %struct.SkImageInfo* nonnull dereferenceable(24) %39, i64 %376) #15
  br i1 %377, label %388, label %378

378:                                              ; preds = %359
  %379 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %39, i64 0, i32 1, i32 0
  %380 = load i32, i32* %379, align 16
  %381 = sext i32 %380 to i64
  %382 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* nonnull %371) #15
  %383 = sext i32 %382 to i64
  %384 = mul nsw i64 %383, %381
  %385 = icmp ult i64 %384, 2147483648
  %386 = select i1 %385, i64 %384, i64 0
  %387 = call i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo* nonnull %39, i64 %386) #15
  call void @_ZN4base27TerminateBecauseOutOfMemoryEm(i64 %387) #15
  br label %388

388:                                              ; preds = %378, %359
  %389 = bitcast %class.SkCanvas* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 3232, i8* nonnull %389) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %389, i8* align 8 bitcast ({ i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.209, [384 x i64], %class.sk_sp.210, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.211", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.217" }* @__const._ZNK3viz16SoftwareRenderer23GetBackdropFilterShaderEPKNS_28AggregatedRenderPassDrawQuadE10SkTileMode.canvas to i8*), i64 3232, i1 false)
  %390 = bitcast %class.SkSurfaceProps* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %390) #15
  call void @_ZN4skia20LegacyDisplayGlobals17GetSkSurfacePropsEv(%class.SkSurfaceProps* nonnull sret %42) #15
  call void @_ZN8SkCanvasC1ERK8SkBitmapRK14SkSurfaceProps(%class.SkCanvas* nonnull %41, %class.SkBitmap* nonnull dereferenceable(56) %40, %class.SkSurfaceProps* nonnull dereferenceable(8) %42) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %390) #15
  %391 = load i8, i8* %111, align 4, !range !3
  %392 = icmp eq i8 %391, 0
  br i1 %392, label %403, label %393

393:                                              ; preds = %388
  %394 = bitcast %class.SkMatrix* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %394) #15
  %395 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %12, i64 0, i32 0
  call void @_ZNK10SkMatrix44cv8SkMatrixEv(%class.SkMatrix* nonnull sret %43, %class.SkMatrix44* nonnull %395) #15
  call void @_ZN8SkCanvas9setMatrixERK8SkMatrix(%class.SkCanvas* nonnull %41, %class.SkMatrix* nonnull dereferenceable(40) %43) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %394) #15
  %396 = bitcast %class.SkRRect* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %396) #15
  %397 = load i8, i8* %111, align 4, !range !3
  %398 = icmp eq i8 %397, 0
  br i1 %398, label %399, label %400, !prof !24

399:                                              ; preds = %393
  call void @llvm.trap() #15
  unreachable

400:                                              ; preds = %393
  %401 = getelementptr inbounds %"class.absl::optional.130", %"class.absl::optional.130"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %402 = bitcast %"class.gfx::RRectF"* %401 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %396, i8* align 4 %402, i64 52, i1 false) #15
  call void @_ZN8SkCanvas9clipRRectERK7SkRRect8SkClipOpb(%class.SkCanvas* nonnull %41, %class.SkRRect* nonnull dereferenceable(52) %44, i32 1, i1 zeroext true) #15
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %396) #15
  call void @_ZN8SkCanvas11resetMatrixEv(%class.SkCanvas* nonnull %41) #15
  br label %403

403:                                              ; preds = %388, %400
  %404 = bitcast %class.SkPaint* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %404) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %404, i8* align 8 bitcast (%class.SkPaint* @__const._ZNK3viz16SoftwareRenderer23GetBackdropFilterShaderEPKNS_28AggregatedRenderPassDrawQuadE10SkTileMode.paint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %45) #15
  %405 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %60, align 8
  %406 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %405, i64 0, i32 7
  %407 = load float, float* %406, align 8
  %408 = fcmp olt float %407, 1.000000e+00
  br i1 %408, label %409, label %423

409:                                              ; preds = %403
  call void @_ZN3viz10SkiaHelper18BuildOpacityFilterEf(%class.sk_sp.117* nonnull sret %46, float %407) #15
  call void @_ZN7SkPaint14setImageFilterE5sk_spI13SkImageFilterE(%class.SkPaint* nonnull %45, %class.sk_sp.117* nonnull %46) #15
  %410 = getelementptr inbounds %class.sk_sp.117, %class.sk_sp.117* %46, i64 0, i32 0
  %411 = load %class.SkImageFilter*, %class.SkImageFilter** %410, align 8
  %412 = icmp eq %class.SkImageFilter* %411, null
  br i1 %412, label %423, label %413

413:                                              ; preds = %409
  %414 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %411, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %415 = atomicrmw add i32* %414, i32 -1 acq_rel
  %416 = icmp eq i32 %415, 1
  br i1 %416, label %417, label %423

417:                                              ; preds = %413
  %418 = bitcast %class.SkImageFilter* %411 to %class.SkRefCntBase*
  %419 = bitcast %class.SkImageFilter* %411 to void (%class.SkRefCntBase*)***
  %420 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %419, align 8
  %421 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %420, i64 2
  %422 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %421, align 8
  call void %422(%class.SkRefCntBase* nonnull %418) #15
  br label %423

423:                                              ; preds = %417, %413, %409, %403
  %424 = bitcast { <2 x float>, <2 x float> }* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %424) #15
  %425 = load i32, i32* %327, align 8
  %426 = sitofp i32 %425 to float
  %427 = load i32, i32* %329, align 4
  %428 = sitofp i32 %427 to float
  %429 = insertelement <2 x float> undef, float %426, i32 0
  %430 = insertelement <2 x float> %429, float %428, i32 1
  %431 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %47, i64 0, i32 0
  store <2 x float> zeroinitializer, <2 x float>* %431, align 8
  %432 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %47, i64 0, i32 1
  store <2 x float> %430, <2 x float>* %432, align 8
  %433 = bitcast { <2 x float>, <2 x float> }* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %433) #15
  %434 = fadd float %268, 0.000000e+00
  %435 = fadd float %269, 0.000000e+00
  %436 = fadd float %268, %426
  %437 = fadd float %269, %428
  %438 = insertelement <2 x float> undef, float %434, i32 0
  %439 = insertelement <2 x float> %438, float %435, i32 1
  %440 = insertelement <2 x float> undef, float %436, i32 0
  %441 = insertelement <2 x float> %440, float %437, i32 1
  %442 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %49, i64 0, i32 0
  store <2 x float> %439, <2 x float>* %442, align 8
  %443 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %49, i64 0, i32 1
  store <2 x float> %441, <2 x float>* %443, align 8
  %444 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %51, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %444) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %444, i8 0, i64 20, i1 false)
  %445 = load %class.SkImage*, %class.SkImage** %354, align 8
  call void @_ZN8SkCanvas13drawImageRectEPK7SkImageRK6SkRectS5_RK17SkSamplingOptionsPK7SkPaintNS_17SrcRectConstraintE(%class.SkCanvas* nonnull %41, %class.SkImage* %445, %struct.SkRect* nonnull dereferenceable(16) %48, %struct.SkRect* nonnull dereferenceable(16) %50, %struct.SkSamplingOptions* nonnull dereferenceable(20) %51, %class.SkPaint* nonnull %45, i32 0) #15
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %444) #15
  %446 = bitcast %class.sk_sp.335* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %446) #15
  call void @_ZN7SkImage14MakeFromBitmapERK8SkBitmap(%class.sk_sp.335* nonnull sret %52, %class.SkBitmap* nonnull dereferenceable(56) %40) #15
  %447 = getelementptr inbounds %class.sk_sp.335, %class.sk_sp.335* %52, i64 0, i32 0
  %448 = load %class.SkImage*, %class.SkImage** %447, align 8
  %449 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %53, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %449) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %449, i8 0, i64 20, i1 false)
  call void @_ZNK7SkImage10makeShaderE10SkTileModeS0_RK17SkSamplingOptionsPK8SkMatrix(%class.sk_sp.224* sret %0, %class.SkImage* %448, i32 %3, i32 %3, %struct.SkSamplingOptions* nonnull dereferenceable(20) %53, %class.SkMatrix* nonnull %18) #15
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %449) #15
  %450 = load %class.SkImage*, %class.SkImage** %447, align 8
  %451 = icmp eq %class.SkImage* %450, null
  br i1 %451, label %462, label %452

452:                                              ; preds = %423
  %453 = getelementptr inbounds %class.SkImage, %class.SkImage* %450, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %454 = atomicrmw add i32* %453, i32 -1 acq_rel
  %455 = icmp eq i32 %454, 1
  br i1 %455, label %456, label %462

456:                                              ; preds = %452
  %457 = bitcast %class.SkImage* %450 to %class.SkRefCntBase*
  %458 = bitcast %class.SkImage* %450 to void (%class.SkRefCntBase*)***
  %459 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %458, align 8
  %460 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %459, i64 2
  %461 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %460, align 8
  call void %461(%class.SkRefCntBase* nonnull %457) #15
  br label %462

462:                                              ; preds = %423, %452, %456
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %446) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %433) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %424) #15
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %45) #15
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %404) #15
  call void @_ZN8SkCanvasD1Ev(%class.SkCanvas* nonnull %41) #15
  call void @llvm.lifetime.end.p0i8(i64 3232, i8* nonnull %389) #15
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %40) #15
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %369) #15
  %463 = load %class.SkColorSpace*, %class.SkColorSpace** %361, align 16
  %464 = icmp eq %class.SkColorSpace* %463, null
  br i1 %464, label %471, label %465

465:                                              ; preds = %462
  %466 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %463, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %467 = atomicrmw add i32* %466, i32 -1 acq_rel
  %468 = icmp eq i32 %467, 1
  br i1 %468, label %469, label %471

469:                                              ; preds = %465
  %470 = bitcast %class.SkColorSpace* %463 to i8*
  call void @_ZdlPv(i8* %470) #16
  br label %471

471:                                              ; preds = %469, %465, %462
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %360) #15
  %472 = load %class.SkImage*, %class.SkImage** %354, align 8
  %473 = icmp eq %class.SkImage* %472, null
  br i1 %473, label %484, label %474

474:                                              ; preds = %471
  %475 = getelementptr inbounds %class.SkImage, %class.SkImage* %472, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %476 = atomicrmw add i32* %475, i32 -1 acq_rel
  %477 = icmp eq i32 %476, 1
  br i1 %477, label %478, label %484

478:                                              ; preds = %474
  %479 = bitcast %class.SkImage* %472 to %class.SkRefCntBase*
  %480 = bitcast %class.SkImage* %472 to void (%class.SkRefCntBase*)***
  %481 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %480, align 8
  %482 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %481, i64 2
  %483 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %482, align 8
  call void %483(%class.SkRefCntBase* nonnull %479) #15
  br label %484

484:                                              ; preds = %357, %471, %474, %478
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %352) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %351) #15
  br i1 %346, label %495, label %485

485:                                              ; preds = %484
  %486 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %345, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %487 = atomicrmw add i32* %486, i32 -1 acq_rel
  %488 = icmp eq i32 %487, 1
  br i1 %488, label %489, label %495

489:                                              ; preds = %485
  %490 = bitcast %class.SkImageFilter* %345 to %class.SkRefCntBase*
  %491 = bitcast %class.SkImageFilter* %345 to void (%class.SkRefCntBase*)***
  %492 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %491, align 8
  %493 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %492, i64 2
  %494 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %493, align 8
  call void %494(%class.SkRefCntBase* nonnull %490) #15
  br label %495

495:                                              ; preds = %489, %485, %484
  %496 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %325, align 8
  %497 = icmp eq %"class.cc::PaintFilter"* %496, null
  br i1 %497, label %508, label %498

498:                                              ; preds = %495
  %499 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %496, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %500 = atomicrmw add i32* %499, i32 -1 acq_rel
  %501 = icmp eq i32 %500, 1
  br i1 %501, label %502, label %508

502:                                              ; preds = %498
  %503 = bitcast %"class.cc::PaintFilter"* %496 to %class.SkRefCntBase*
  %504 = bitcast %"class.cc::PaintFilter"* %496 to void (%class.SkRefCntBase*)***
  %505 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %504, align 8
  %506 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %505, i64 2
  %507 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %506, align 8
  call void %507(%class.SkRefCntBase* nonnull %503) #15
  br label %508

508:                                              ; preds = %341, %495, %498, %502
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %324) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %270) #15
  br label %509

509:                                              ; preds = %195, %508
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %19) #15
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %151) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %145) #15
  br label %510

510:                                              ; preds = %509, %139
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %133) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %122) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %117) #15
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %115) #15
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %111) #15
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %104) #15
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %79) #15
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %68) #15
  br label %511

511:                                              ; preds = %510, %65
  ret void
}

declare void @_ZN7SkPaint9setShaderE5sk_spI8SkShaderE(%class.SkPaint*, %class.sk_sp.224*) local_unnamed_addr #1

declare void @_ZNK7SkPaint13refMaskFilterEv(%class.sk_sp.225* sret, %class.SkPaint*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16SoftwareRenderer19CopyDrawnRenderPassERKNS_11copy_output18RenderPassGeometryENSt3__110unique_ptrINS_17CopyOutputRequestENS5_14default_deleteIS7_EEEE(%"class.viz::SoftwareRenderer"*, %"struct.viz::copy_output::RenderPassGeometry"* dereferenceable(56), %"class.viz::CopyOutputRequest"*) unnamed_addr #8 align 2 {
  %4 = alloca %class.SkBitmap, align 8
  %5 = alloca %class.sk_sp.197, align 8
  %6 = alloca %"class.gfx::ColorSpace", align 4
  %7 = alloca %class.SkBitmap, align 8
  %8 = alloca %class.SkPixmap, align 8
  %9 = alloca %class.SkBitmap, align 8
  %10 = alloca %struct.SkIRect, align 4
  %11 = alloca %struct.SkImageInfo, align 8
  %12 = bitcast %class.sk_sp.197* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #15
  %13 = getelementptr inbounds %class.sk_sp.197, %class.sk_sp.197* %5, i64 0, i32 0
  store %class.SkColorSpace* inttoptr (i64 -6148914691236517206 to %class.SkColorSpace*), %class.SkColorSpace** %13, align 8
  %14 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %14) #15
  %15 = bitcast %"class.viz::SoftwareRenderer"* %0 to %"class.viz::DirectRenderer"*
  call void @_ZNK3viz14DirectRenderer27CurrentRenderPassColorSpaceEv(%"class.gfx::ColorSpace"* nonnull sret %6, %"class.viz::DirectRenderer"* %15) #15
  call void @_ZNK3gfx10ColorSpace14ToSkColorSpaceEv(%class.sk_sp.197* nonnull sret %5, %"class.gfx::ColorSpace"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %14) #15
  %16 = bitcast %class.SkBitmap* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %16) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %7) #15
  %17 = getelementptr inbounds %"class.viz::CopyOutputRequest", %"class.viz::CopyOutputRequest"* %2, i64 0, i32 3, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = sitofp i32 %18 to float
  %20 = getelementptr inbounds %"class.viz::CopyOutputRequest", %"class.viz::CopyOutputRequest"* %2, i64 0, i32 3, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = sitofp i32 %21 to float
  %23 = getelementptr inbounds %"class.viz::CopyOutputRequest", %"class.viz::CopyOutputRequest"* %2, i64 0, i32 4, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = sitofp i32 %24 to float
  %26 = getelementptr inbounds %"class.viz::CopyOutputRequest", %"class.viz::CopyOutputRequest"* %2, i64 0, i32 4, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = sitofp i32 %27 to float
  %29 = fcmp une float %19, %25
  %30 = fcmp une float %22, %28
  %31 = or i1 %29, %30
  br i1 %31, label %32, label %154

32:                                               ; preds = %3
  %33 = bitcast %class.SkPixmap* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %33) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 0, i64 40, i1 false) #15
  %34 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 7
  %35 = load %class.SkCanvas*, %class.SkCanvas** %34, align 8
  %36 = call zeroext i1 @_ZN8SkCanvas10peekPixelsEP8SkPixmap(%class.SkCanvas* %35, %class.SkPixmap* nonnull %8) #15
  br i1 %36, label %37, label %143

37:                                               ; preds = %32
  %38 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %8, i64 0, i32 2
  %39 = getelementptr inbounds %"struct.viz::copy_output::RenderPassGeometry", %"struct.viz::copy_output::RenderPassGeometry"* %1, i64 0, i32 2, i32 1, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"struct.viz::copy_output::RenderPassGeometry", %"struct.viz::copy_output::RenderPassGeometry"* %1, i64 0, i32 2, i32 1, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = shl nuw i64 %43, 32
  %45 = zext i32 %40 to i64
  %46 = or i64 %44, %45
  %47 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %38, i64 0, i32 0, i32 0, i32 0
  %48 = load %class.SkColorSpace*, %class.SkColorSpace** %47, align 8, !noalias !30
  %49 = icmp eq %class.SkColorSpace* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %37
  %51 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = atomicrmw add i32* %51, i32 1 monotonic, !noalias !30
  br label %53

53:                                               ; preds = %37, %50
  %54 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %8, i64 0, i32 2, i32 0, i32 1
  %55 = bitcast i32* %54 to i64*
  %56 = load i64, i64* %55, align 8, !noalias !30
  %57 = bitcast %class.sk_sp.197* %5 to i64*
  %58 = load i64, i64* %57, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %13, align 8
  %59 = getelementptr inbounds %"struct.viz::copy_output::RenderPassGeometry", %"struct.viz::copy_output::RenderPassGeometry"* %1, i64 0, i32 2, i32 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %"struct.viz::copy_output::RenderPassGeometry", %"struct.viz::copy_output::RenderPassGeometry"* %1, i64 0, i32 2, i32 0, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %8, i64 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %8, i64 0, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = call i64 @_ZNK11SkImageInfo13computeOffsetEiim(%struct.SkImageInfo* %38, i32 %60, i32 %62, i64 %66) #15
  %68 = getelementptr inbounds i8, i8* %64, i64 %67
  %69 = load i64, i64* %65, align 8
  %70 = inttoptr i64 %58 to %class.SkColorSpace*
  %71 = icmp eq i64 %58, 0
  br i1 %71, label %75, label %72

72:                                               ; preds = %53
  %73 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = atomicrmw add i32* %73, i32 1 monotonic
  br label %75

75:                                               ; preds = %53, %72
  store i8* %68, i8** %63, align 8
  store i64 %69, i64* %65, align 8
  %76 = load %class.SkColorSpace*, %class.SkColorSpace** %47, align 8
  %77 = bitcast %struct.SkImageInfo* %38 to i64*
  store i64 %58, i64* %77, align 8
  %78 = icmp eq %class.SkColorSpace* %76, null
  br i1 %78, label %85, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = atomicrmw add i32* %80, i32 -1 acq_rel
  %82 = icmp eq i32 %81, 1
  br i1 %82, label %83, label %85

83:                                               ; preds = %79
  %84 = bitcast %class.SkColorSpace* %76 to i8*
  call void @_ZdlPv(i8* %84) #16
  br label %85

85:                                               ; preds = %83, %79, %75
  store i64 %56, i64* %55, align 8
  %86 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %8, i64 0, i32 2, i32 1
  %87 = bitcast %struct.SkISize* %86 to i64*
  store i64 %46, i64* %87, align 8
  br i1 %71, label %94, label %88

88:                                               ; preds = %85
  %89 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = atomicrmw add i32* %89, i32 -1 acq_rel
  %91 = icmp eq i32 %90, 1
  br i1 %91, label %92, label %94

92:                                               ; preds = %88
  %93 = inttoptr i64 %58 to i8*
  call void @_ZdlPv(i8* %93) #16
  br label %94

94:                                               ; preds = %92, %88, %85
  br i1 %49, label %101, label %95

95:                                               ; preds = %94
  %96 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = atomicrmw add i32* %96, i32 -1 acq_rel
  %98 = icmp eq i32 %97, 1
  br i1 %98, label %99, label %101

99:                                               ; preds = %95
  %100 = bitcast %class.SkColorSpace* %48 to i8*
  call void @_ZdlPv(i8* %100) #16
  br label %101

101:                                              ; preds = %94, %95, %99
  %102 = load i32, i32* %23, align 4
  %103 = load i32, i32* %17, align 4
  %104 = icmp slt i32 %102, %103
  br i1 %104, label %105, label %110

105:                                              ; preds = %101
  %106 = load i32, i32* %26, align 4
  %107 = load i32, i32* %20, align 4
  %108 = icmp slt i32 %106, %107
  %109 = select i1 %108, i32 1, i32 2
  br label %110

110:                                              ; preds = %105, %101
  %111 = phi i32 [ 2, %101 ], [ %109, %105 ]
  %112 = bitcast %class.SkBitmap* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %112) #15
  %113 = getelementptr inbounds %"struct.viz::copy_output::RenderPassGeometry", %"struct.viz::copy_output::RenderPassGeometry"* %1, i64 0, i32 0, i32 1, i32 0
  %114 = load i32, i32* %113, align 4
  %115 = getelementptr inbounds %"struct.viz::copy_output::RenderPassGeometry", %"struct.viz::copy_output::RenderPassGeometry"* %1, i64 0, i32 0, i32 1, i32 1
  %116 = load i32, i32* %115, align 4
  %117 = bitcast %struct.SkIRect* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %117) #15
  %118 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %10, i64 0, i32 0
  %119 = getelementptr inbounds %"struct.viz::copy_output::RenderPassGeometry", %"struct.viz::copy_output::RenderPassGeometry"* %1, i64 0, i32 1, i32 0, i32 0
  %120 = load i32, i32* %119, align 4
  store i32 %120, i32* %118, align 4
  %121 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %10, i64 0, i32 1
  %122 = getelementptr inbounds %"struct.viz::copy_output::RenderPassGeometry", %"struct.viz::copy_output::RenderPassGeometry"* %1, i64 0, i32 1, i32 0, i32 1
  %123 = load i32, i32* %122, align 4
  store i32 %123, i32* %121, align 4
  %124 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %10, i64 0, i32 2
  %125 = getelementptr inbounds %"struct.viz::copy_output::RenderPassGeometry", %"struct.viz::copy_output::RenderPassGeometry"* %1, i64 0, i32 1, i32 1, i32 0
  %126 = load i32, i32* %125, align 4
  %127 = add nsw i32 %126, %120
  store i32 %127, i32* %124, align 4
  %128 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %10, i64 0, i32 3
  %129 = getelementptr inbounds %"struct.viz::copy_output::RenderPassGeometry", %"struct.viz::copy_output::RenderPassGeometry"* %1, i64 0, i32 1, i32 1, i32 1
  %130 = load i32, i32* %129, align 4
  %131 = add nsw i32 %130, %123
  store i32 %131, i32* %128, align 4
  call void @_ZN4skia15ImageOperations6ResizeERK8SkPixmapNS0_12ResizeMethodEiiRK7SkIRectPN8SkBitmap9AllocatorE(%class.SkBitmap* nonnull sret %9, %class.SkPixmap* nonnull dereferenceable(40) %8, i32 %111, i32 %114, i32 %116, %struct.SkIRect* nonnull dereferenceable(16) %10, %"class.SkBitmap::Allocator"* null) #15
  %132 = call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSEOS_(%class.SkBitmap* nonnull %7, %class.SkBitmap* nonnull dereferenceable(56) %9) #15
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %9) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %117) #15
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %112) #15
  %133 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %8, i64 0, i32 2, i32 0, i32 0, i32 0
  %134 = load %class.SkColorSpace*, %class.SkColorSpace** %133, align 8
  %135 = icmp eq %class.SkColorSpace* %134, null
  br i1 %135, label %142, label %136

136:                                              ; preds = %110
  %137 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %134, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = atomicrmw add i32* %137, i32 -1 acq_rel
  %139 = icmp eq i32 %138, 1
  br i1 %139, label %140, label %142

140:                                              ; preds = %136
  %141 = bitcast %class.SkColorSpace* %134 to i8*
  call void @_ZdlPv(i8* %141) #16
  br label %142

142:                                              ; preds = %110, %136, %140
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %33) #15
  br label %197

143:                                              ; preds = %32
  %144 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %8, i64 0, i32 2, i32 0, i32 0, i32 0
  %145 = load %class.SkColorSpace*, %class.SkColorSpace** %144, align 8
  %146 = icmp eq %class.SkColorSpace* %145, null
  br i1 %146, label %153, label %147

147:                                              ; preds = %143
  %148 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %145, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = atomicrmw add i32* %148, i32 -1 acq_rel
  %150 = icmp eq i32 %149, 1
  br i1 %150, label %151, label %153

151:                                              ; preds = %147
  %152 = bitcast %class.SkColorSpace* %145 to i8*
  call void @_ZdlPv(i8* %152) #16
  br label %153

153:                                              ; preds = %143, %147, %151
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %33) #15
  br label %217

154:                                              ; preds = %3
  %155 = bitcast %struct.SkImageInfo* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %155) #15
  %156 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %11, i64 0, i32 0, i32 0, i32 0
  %157 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %11, i64 0, i32 0, i32 1
  %158 = getelementptr inbounds %"struct.viz::copy_output::RenderPassGeometry", %"struct.viz::copy_output::RenderPassGeometry"* %1, i64 0, i32 1, i32 1, i32 0
  %159 = load i32, i32* %158, align 4
  %160 = getelementptr inbounds %"struct.viz::copy_output::RenderPassGeometry", %"struct.viz::copy_output::RenderPassGeometry"* %1, i64 0, i32 1, i32 1, i32 1
  %161 = load i32, i32* %160, align 4
  %162 = bitcast %class.sk_sp.197* %5 to i64*
  %163 = load i64, i64* %162, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %13, align 8
  %164 = zext i32 %161 to i64
  %165 = shl nuw i64 %164, 32
  %166 = zext i32 %159 to i64
  %167 = or i64 %165, %166
  %168 = bitcast %struct.SkImageInfo* %11 to i64*
  store i64 %163, i64* %168, align 8, !alias.scope !35
  %169 = bitcast i32* %157 to i64*
  store i64 8589934598, i64* %169, align 8, !alias.scope !35
  %170 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %11, i64 0, i32 1
  %171 = bitcast %struct.SkISize* %170 to i64*
  store i64 %167, i64* %171, align 8, !alias.scope !35
  %172 = sext i32 %159 to i64
  %173 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %11, i64 0, i32 0
  %174 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* nonnull %173) #15
  %175 = sext i32 %174 to i64
  %176 = mul nsw i64 %175, %172
  %177 = icmp ult i64 %176, 2147483648
  %178 = select i1 %177, i64 %176, i64 0
  %179 = call zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap* nonnull %7, %struct.SkImageInfo* nonnull dereferenceable(24) %11, i64 %178) #15
  br i1 %179, label %180, label %207

180:                                              ; preds = %154
  %181 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 7
  %182 = load %class.SkCanvas*, %class.SkCanvas** %181, align 8
  %183 = getelementptr inbounds %"struct.viz::copy_output::RenderPassGeometry", %"struct.viz::copy_output::RenderPassGeometry"* %1, i64 0, i32 3, i32 0
  %184 = load i32, i32* %183, align 4
  %185 = getelementptr inbounds %"struct.viz::copy_output::RenderPassGeometry", %"struct.viz::copy_output::RenderPassGeometry"* %1, i64 0, i32 3, i32 1
  %186 = load i32, i32* %185, align 4
  %187 = call zeroext i1 @_ZN8SkCanvas10readPixelsERK8SkBitmapii(%class.SkCanvas* %182, %class.SkBitmap* nonnull dereferenceable(56) %7, i32 %184, i32 %186) #15
  %188 = load %class.SkColorSpace*, %class.SkColorSpace** %156, align 8
  %189 = icmp eq %class.SkColorSpace* %188, null
  br i1 %189, label %196, label %190

190:                                              ; preds = %180
  %191 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %188, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %192 = atomicrmw add i32* %191, i32 -1 acq_rel
  %193 = icmp eq i32 %192, 1
  br i1 %193, label %194, label %196

194:                                              ; preds = %190
  %195 = bitcast %class.SkColorSpace* %188 to i8*
  call void @_ZdlPv(i8* %195) #16
  br label %196

196:                                              ; preds = %180, %190, %194
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %155) #15
  br i1 %187, label %197, label %217

197:                                              ; preds = %142, %196
  %198 = getelementptr inbounds %"class.viz::CopyOutputRequest", %"class.viz::CopyOutputRequest"* %2, i64 0, i32 0
  %199 = load i8, i8* %198, align 8
  %200 = icmp eq i8 %199, 1
  %201 = select i1 %200, i8 0, i8 %199
  %202 = getelementptr inbounds %"struct.viz::copy_output::RenderPassGeometry", %"struct.viz::copy_output::RenderPassGeometry"* %1, i64 0, i32 1
  %203 = bitcast %class.SkBitmap* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %203)
  %204 = call i8* @_Znwm(i64 88) #16
  %205 = bitcast i8* %204 to %"class.viz::CopyOutputSkBitmapResult"*
  call void @_ZN8SkBitmapC1EOS_(%class.SkBitmap* nonnull %4, %class.SkBitmap* nonnull dereferenceable(56) %7) #15
  call void @_ZN3viz24CopyOutputSkBitmapResultC1ENS_16CopyOutputResult6FormatERKN3gfx4RectE8SkBitmap(%"class.viz::CopyOutputSkBitmapResult"* nonnull %205, i8 zeroext %201, %"class.gfx::Rect"* dereferenceable(16) %202, %class.SkBitmap* nonnull %4) #15
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %203)
  %206 = bitcast i8* %204 to %"class.viz::CopyOutputResult"*
  call void @_ZN3viz17CopyOutputRequest10SendResultENSt3__110unique_ptrINS_16CopyOutputResultENS1_14default_deleteIS3_EEEE(%"class.viz::CopyOutputRequest"* %2, %"class.viz::CopyOutputResult"* nonnull %206) #15
  br label %217

207:                                              ; preds = %154
  %208 = load %class.SkColorSpace*, %class.SkColorSpace** %156, align 8
  %209 = icmp eq %class.SkColorSpace* %208, null
  br i1 %209, label %216, label %210

210:                                              ; preds = %207
  %211 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %208, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = atomicrmw add i32* %211, i32 -1 acq_rel
  %213 = icmp eq i32 %212, 1
  br i1 %213, label %214, label %216

214:                                              ; preds = %210
  %215 = bitcast %class.SkColorSpace* %208 to i8*
  call void @_ZdlPv(i8* %215) #16
  br label %216

216:                                              ; preds = %207, %210, %214
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %155) #15
  br label %217

217:                                              ; preds = %216, %153, %196, %197
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %16) #15
  %218 = load %class.SkColorSpace*, %class.SkColorSpace** %13, align 8
  %219 = icmp eq %class.SkColorSpace* %218, null
  br i1 %219, label %226, label %220

220:                                              ; preds = %217
  %221 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %218, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %222 = atomicrmw add i32* %221, i32 -1 acq_rel
  %223 = icmp eq i32 %222, 1
  br i1 %223, label %224, label %226

224:                                              ; preds = %220
  %225 = bitcast %class.SkColorSpace* %218 to i8*
  call void @_ZdlPv(i8* %225) #16
  br label %226

226:                                              ; preds = %217, %220, %224
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #15
  %227 = icmp eq %"class.viz::CopyOutputRequest"* %2, null
  br i1 %227, label %230, label %228

228:                                              ; preds = %226
  call void @_ZN3viz17CopyOutputRequestD1Ev(%"class.viz::CopyOutputRequest"* nonnull %2) #15
  %229 = getelementptr inbounds %"class.viz::CopyOutputRequest", %"class.viz::CopyOutputRequest"* %2, i64 0, i32 0
  call void @_ZdlPv(i8* %229) #16
  br label %230

230:                                              ; preds = %226, %228
  ret void
}

declare void @_ZNK3viz14DirectRenderer27CurrentRenderPassColorSpaceEv(%"class.gfx::ColorSpace"* sret, %"class.viz::DirectRenderer"*) local_unnamed_addr #1

declare void @_ZNK3gfx10ColorSpace14ToSkColorSpaceEv(%class.sk_sp.197* sret, %"class.gfx::ColorSpace"*) local_unnamed_addr #1

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #1

declare zeroext i1 @_ZN8SkCanvas10peekPixelsEP8SkPixmap(%class.SkCanvas*, %class.SkPixmap*) local_unnamed_addr #1

declare void @_ZN4skia15ImageOperations6ResizeERK8SkPixmapNS0_12ResizeMethodEiiRK7SkIRectPN8SkBitmap9AllocatorE(%class.SkBitmap* sret, %class.SkPixmap* dereferenceable(40), i32, i32, i32, %struct.SkIRect* dereferenceable(16), %"class.SkBitmap::Allocator"*) local_unnamed_addr #1

declare dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSEOS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #2

declare zeroext i1 @_ZN8SkCanvas10readPixelsERK8SkBitmapii(%class.SkCanvas*, %class.SkBitmap* dereferenceable(56), i32, i32) local_unnamed_addr #1

declare void @_ZN3viz17CopyOutputRequest10SendResultENSt3__110unique_ptrINS_16CopyOutputResultENS1_14default_deleteIS3_EEEE(%"class.viz::CopyOutputRequest"*, %"class.viz::CopyOutputResult"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16SoftwareRenderer19DidChangeVisibilityEv(%"class.viz::SoftwareRenderer"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 0, i32 15
  %3 = load i8, i8* %2, align 8, !range !3
  %4 = icmp eq i8 %3, 0
  %5 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 0, i32 3
  %6 = load %"class.viz::OutputSurface"*, %"class.viz::OutputSurface"** %5, align 8
  %7 = bitcast %"class.viz::OutputSurface"* %6 to void (%"class.viz::OutputSurface"*)***
  %8 = load void (%"class.viz::OutputSurface"*)**, void (%"class.viz::OutputSurface"*)*** %7, align 8
  br i1 %4, label %12, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds void (%"class.viz::OutputSurface"*)*, void (%"class.viz::OutputSurface"*)** %8, i64 5
  %11 = load void (%"class.viz::OutputSurface"*)*, void (%"class.viz::OutputSurface"*)** %10, align 8
  tail call void %11(%"class.viz::OutputSurface"* %6) #15
  br label %15

12:                                               ; preds = %1
  %13 = getelementptr inbounds void (%"class.viz::OutputSurface"*)*, void (%"class.viz::OutputSurface"*)** %8, i64 6
  %14 = load void (%"class.viz::OutputSurface"*)*, void (%"class.viz::OutputSurface"*)** %13, align 8
  tail call void %14(%"class.viz::OutputSurface"* %6) #15
  br label %15

15:                                               ; preds = %12, %9
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3viz16SoftwareRenderer14GenerateMipmapEv(%"class.viz::SoftwareRenderer"* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3viz16SoftwareRenderer26ShouldApplyBackdropFiltersEPKN2cc16FilterOperationsEPKNS_28AggregatedRenderPassDrawQuadE(%"class.viz::SoftwareRenderer"* nocapture readnone, %"class.cc::FilterOperations"* readnone, %"class.viz::AggregatedRenderPassDrawQuad"* nocapture readonly) local_unnamed_addr #9 align 2 {
  %4 = icmp eq %"class.cc::FilterOperations"* %1, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.viz::AggregatedRenderPassDrawQuad", %"class.viz::AggregatedRenderPassDrawQuad"* %2, i64 0, i32 0, i32 0, i32 6
  %7 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %6, align 8
  %8 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %7, i64 0, i32 7
  %9 = load float, float* %8, align 8
  %10 = fcmp une float %9, 0.000000e+00
  br label %11

11:                                               ; preds = %5, %3
  %12 = phi i1 [ false, %3 ], [ %10, %5 ]
  ret i1 %12
}

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9postScaleEff(%class.SkMatrix*, float, float) local_unnamed_addr #1

declare { i64, i64 } @_ZNK13SkImageFilter12filterBoundsERK7SkIRectRK8SkMatrixNS_12MapDirectionEPS1_(%class.SkImageFilter*, %struct.SkIRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect*) local_unnamed_addr #1

declare { i64, i64 } @_ZN3gfx13RectToSkIRectERKNS_4RectE(%"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN7SkPaint14setImageFilterE5sk_spI13SkImageFilterE(%class.SkPaint*, %class.sk_sp.117*) local_unnamed_addr #1

declare void @_ZNK13SkImageFilter19makeWithLocalMatrixERK8SkMatrix(%class.sk_sp.117* sret, %class.SkImageFilter*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #1

declare %class.SkCanvas* @_ZN9SkSurface9getCanvasEv(%class.SkSurface*) local_unnamed_addr #1

declare void @_ZNK8SkBitmap7asImageEv(%class.sk_sp.335* sret, %class.SkBitmap*) local_unnamed_addr #1

declare void @_ZN9SkSurface17makeImageSnapshotEv(%class.sk_sp.335* sret, %class.SkSurface*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3viz16SoftwareRenderer17GetBackdropBitmapERKN3gfx4RectE(%class.SkBitmap* noalias sret, %"class.viz::SoftwareRenderer"* nocapture readonly, %"class.gfx::Rect"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %struct.SkImageInfo, align 16
  %5 = bitcast %struct.SkImageInfo* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #15
  %6 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = zext i32 %10 to i64
  %12 = shl nuw i64 %11, 32
  %13 = zext i32 %8 to i64
  %14 = or i64 %12, %13
  %15 = bitcast %struct.SkImageInfo* %4 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8589934598>, <2 x i64>* %15, align 16, !alias.scope !40
  %16 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 1
  %17 = bitcast %struct.SkISize* %16 to i64*
  store i64 %14, i64* %17, align 16, !alias.scope !40
  %18 = bitcast %class.SkBitmap* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 -86, i64 56, i1 false)
  tail call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %0) #15
  %19 = sext i32 %8 to i64
  %20 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 0
  %21 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* nonnull %20) #15
  %22 = sext i32 %21 to i64
  %23 = mul nsw i64 %22, %19
  %24 = icmp ult i64 %23, 2147483648
  %25 = select i1 %24, i64 %23, i64 0
  %26 = call zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap* %0, %struct.SkImageInfo* nonnull dereferenceable(24) %4, i64 %25) #15
  br i1 %26, label %37, label %27

27:                                               ; preds = %3
  %28 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 1, i32 0
  %29 = load i32, i32* %28, align 16
  %30 = sext i32 %29 to i64
  %31 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* nonnull %20) #15
  %32 = sext i32 %31 to i64
  %33 = mul nsw i64 %32, %30
  %34 = icmp ult i64 %33, 2147483648
  %35 = select i1 %34, i64 %33, i64 0
  %36 = call i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo* nonnull %4, i64 %35) #15
  call void @_ZN4base27TerminateBecauseOutOfMemoryEm(i64 %36) #15
  br label %37

37:                                               ; preds = %27, %3
  %38 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %1, i64 0, i32 7
  %39 = load %class.SkCanvas*, %class.SkCanvas** %38, align 8
  %40 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = call zeroext i1 @_ZN8SkCanvas10readPixelsERK8SkBitmapii(%class.SkCanvas* %39, %class.SkBitmap* dereferenceable(56) %0, i32 %41, i32 %43) #15
  br i1 %44, label %46, label %45

45:                                               ; preds = %37
  call void @_ZN8SkBitmap5resetEv(%class.SkBitmap* %0) #15
  br label %46

46:                                               ; preds = %37, %45
  %47 = load %class.SkColorSpace*, %class.SkColorSpace** %6, align 16
  %48 = icmp eq %class.SkColorSpace* %47, null
  br i1 %48, label %55, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw add i32* %50, i32 -1 acq_rel
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = bitcast %class.SkColorSpace* %47 to i8*
  call void @_ZdlPv(i8* %54) #16
  br label %55

55:                                               ; preds = %46, %49, %53
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #15
  ret void
}

declare void @_ZN4base27TerminateBecauseOutOfMemoryEm(i64) local_unnamed_addr #1

declare void @_ZN8SkBitmap5resetEv(%class.SkBitmap*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK3viz16SoftwareRenderer39GetBackdropBoundingBoxForRenderPassQuadEPKNS_28AggregatedRenderPassDrawQuadEPKN2cc16FilterOperationsEN4absl8optionalIN3gfx6RRectFEEENSA_9TransformEPSD_PSC_PNSA_4RectE(%"class.viz::SoftwareRenderer"*, %"class.viz::AggregatedRenderPassDrawQuad"*, %"class.cc::FilterOperations"* nocapture readnone, %"class.absl::optional.130"* byval(%"class.absl::optional.130") align 8, %"class.gfx::Transform"*, %"class.gfx::Transform"*, %"class.absl::optional.130"*, %"class.gfx::Rect"* nocapture) local_unnamed_addr #0 align 2 {
  %9 = alloca { i64, i64 }, align 8
  %10 = bitcast { i64, i64 }* %9 to %"class.gfx::Rect"*
  %11 = alloca { <2 x float>, <2 x float> }, align 8
  %12 = bitcast { <2 x float>, <2 x float> }* %11 to %"class.gfx::RectF"*
  %13 = alloca { <2 x float>, <2 x float> }, align 8
  %14 = bitcast { <2 x float>, <2 x float> }* %13 to %"class.gfx::RectF"*
  %15 = alloca { i64, i64 }, align 8
  %16 = bitcast { i64, i64 }* %15 to %"class.gfx::Rect"*
  %17 = getelementptr inbounds %"class.absl::optional.130", %"class.absl::optional.130"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8, i8* %17, align 4, !range !3
  %19 = icmp eq i8 %18, 0
  %20 = getelementptr inbounds %"class.absl::optional.130", %"class.absl::optional.130"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %21 = bitcast %union.anon.134* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %21, i8 0, i64 52, i1 false)
  br i1 %19, label %22, label %23

22:                                               ; preds = %8
  store i8 1, i8* %17, align 4
  br label %23

23:                                               ; preds = %8, %22
  %24 = getelementptr inbounds %"class.absl::optional.130", %"class.absl::optional.130"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8, i8* %24, align 8, !range !3
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.absl::optional.130", %"class.absl::optional.130"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %29 = getelementptr inbounds %"class.viz::AggregatedRenderPassDrawQuad", %"class.viz::AggregatedRenderPassDrawQuad"* %1, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.absl::optional.130", %"class.absl::optional.130"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %31 = call zeroext i1 @_ZN3viz15GetScaledRRectFERKN3gfx4RectERKNS0_6RRectFEPS4_(%"class.gfx::Rect"* dereferenceable(16) %29, %"class.gfx::RRectF"* dereferenceable(52) %28, %"class.gfx::RRectF"* %30) #15
  br i1 %31, label %33, label %32

32:                                               ; preds = %23, %27
  store i8 0, i8* %17, align 4
  br label %33

33:                                               ; preds = %32, %27
  %34 = bitcast { i64, i64 }* %9 to i32*
  %35 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %10, i64 0, i32 0, i32 1
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 1
  %37 = bitcast { <2 x float>, <2 x float> }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #15
  %38 = bitcast { <2 x float>, <2 x float> }* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #15
  %39 = call { <2 x float>, <2 x float> } @_ZN3viz14DirectRenderer14QuadVertexRectEv() #15
  %40 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %13, i64 0, i32 0
  %41 = extractvalue { <2 x float>, <2 x float> } %39, 0
  store <2 x float> %41, <2 x float>* %40, align 8
  %42 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %13, i64 0, i32 1
  %43 = extractvalue { <2 x float>, <2 x float> } %39, 1
  store <2 x float> %43, <2 x float>* %42, align 8
  %44 = call { <2 x float>, <2 x float> } @_ZN2cc8MathUtil14MapClippedRectERKN3gfx9TransformERKNS1_5RectFE(%"class.gfx::Transform"* dereferenceable(68) %4, %"class.gfx::RectF"* nonnull dereferenceable(16) %14) #15
  %45 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 0
  %46 = extractvalue { <2 x float>, <2 x float> } %44, 0
  store <2 x float> %46, <2 x float>* %45, align 8
  %47 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 1
  %48 = extractvalue { <2 x float>, <2 x float> } %44, 1
  store <2 x float> %48, <2 x float>* %47, align 8
  %49 = call { i64, i64 } @_ZN3gfx15ToEnclosingRectERKNS_5RectFE(%"class.gfx::RectF"* nonnull dereferenceable(16) %12) #15
  %50 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 0
  %51 = extractvalue { i64, i64 } %49, 0
  store i64 %51, i64* %50, align 8
  %52 = extractvalue { i64, i64 } %49, 1
  store i64 %52, i64* %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #15
  %53 = bitcast %"class.gfx::Rect"* %7 to i8*
  %54 = bitcast { i64, i64 }* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %53, i8* nonnull align 8 %54, i64 16, i1 false)
  %55 = bitcast { i64, i64 }* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %55) #15
  %56 = bitcast %"class.viz::SoftwareRenderer"* %0 to %"class.viz::DirectRenderer"*
  %57 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 0, i32 26, i32 2
  %58 = bitcast %"class.viz::AggregatedRenderPass"** %57 to %"class.viz::RenderPassInternal"**
  %59 = load %"class.viz::RenderPassInternal"*, %"class.viz::RenderPassInternal"** %58, align 8
  %60 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %59, i64 0, i32 0
  %61 = call { i64, i64 } @_ZNK3viz14DirectRenderer25MoveFromDrawToWindowSpaceERKN3gfx4RectE(%"class.viz::DirectRenderer"* %56, %"class.gfx::Rect"* dereferenceable(16) %60) #15
  %62 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i64 0, i32 0
  %63 = extractvalue { i64, i64 } %61, 0
  store i64 %63, i64* %62, align 8
  %64 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i64 0, i32 1
  %65 = extractvalue { i64, i64 } %61, 1
  store i64 %65, i64* %64, align 8
  call void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"* nonnull %10, %"class.gfx::Rect"* nonnull dereferenceable(16) %16) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %55) #15
  %66 = bitcast %"class.gfx::Transform"* %5 to i8*
  %67 = bitcast %"class.gfx::Transform"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %66, i8* align 4 %67, i64 68, i1 false)
  %68 = load i32, i32* %34, align 8
  %69 = sub nsw i32 0, %68
  %70 = sitofp i32 %69 to float
  %71 = load i32, i32* %35, align 4
  %72 = sub nsw i32 0, %71
  %73 = sitofp i32 %72 to float
  call void @_ZN3gfx9Transform13PostTranslateEff(%"class.gfx::Transform"* %5, float %70, float %73) #15
  %74 = load i64, i64* %50, align 8
  %75 = insertvalue { i64, i64 } undef, i64 %74, 0
  %76 = load i64, i64* %36, align 8
  %77 = insertvalue { i64, i64 } %75, i64 %76, 1
  ret { i64, i64 } %77
}

declare zeroext i1 @_ZN3viz15GetScaledRRectFERKN3gfx4RectERKNS0_6RRectFEPS4_(%"class.gfx::Rect"* dereferenceable(16), %"class.gfx::RRectF"* dereferenceable(52), %"class.gfx::RRectF"*) local_unnamed_addr #1

declare { i64, i64 } @_ZN3gfx15ToEnclosingRectERKNS_5RectFE(%"class.gfx::RectF"* dereferenceable(16)) local_unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZN2cc8MathUtil14MapClippedRectERKN3gfx9TransformERKNS1_5RectFE(%"class.gfx::Transform"* dereferenceable(68), %"class.gfx::RectF"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

declare { i64, i64 } @_ZNK3viz14DirectRenderer25MoveFromDrawToWindowSpaceERKN3gfx4RectE(%"class.viz::DirectRenderer"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN3gfx9Transform13PostTranslateEff(%"class.gfx::Transform"*, float, float) local_unnamed_addr #1

declare %"class.cc::FilterOperations"* @_ZNK3viz14DirectRenderer22BackdropFiltersForPassEN4util6IdTypeINS_20AggregatedRenderPassEmLm0ELm1EEE(%"class.viz::DirectRenderer"*, i64) local_unnamed_addr #1

declare void @_ZNK3viz14DirectRenderer27BackdropFilterBoundsForPassEN4util6IdTypeINS_20AggregatedRenderPassEmLm0ELm1EEE(%"class.absl::optional.130"* sret, %"class.viz::DirectRenderer"*, i64) local_unnamed_addr #1

declare void @_ZN3gfx6RRectF5ScaleEff(%"class.gfx::RRectF"*, float, float) local_unnamed_addr #1

declare zeroext i1 @_ZNK3gfx9Transform10GetInverseEPS0_(%"class.gfx::Transform"*, %"class.gfx::Transform"*) local_unnamed_addr #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12preTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #1

declare void @_ZN7SkImage14MakeFromBitmapERK8SkBitmap(%class.sk_sp.335* sret, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #1

declare void @_ZNK7SkImage10makeSubsetERK7SkIRectP15GrDirectContext(%class.sk_sp.335* sret, %class.SkImage*, %struct.SkIRect* dereferenceable(16), %class.GrDirectContext*) local_unnamed_addr #1

declare zeroext i1 @_ZNK7SkImage14asLegacyBitmapEP8SkBitmapNS_16LegacyBitmapModeE(%class.SkImage*, %class.SkBitmap*, i32) local_unnamed_addr #1

declare void @_ZN8SkCanvasC1ERK8SkBitmapRK14SkSurfaceProps(%class.SkCanvas*, %class.SkBitmap* dereferenceable(56), %class.SkSurfaceProps* dereferenceable(8)) unnamed_addr #1

declare void @_ZN8SkCanvas9clipRRectERK7SkRRect8SkClipOpb(%class.SkCanvas*, %class.SkRRect* dereferenceable(52), i32, i1 zeroext) local_unnamed_addr #1

declare void @_ZN3viz10SkiaHelper18BuildOpacityFilterEf(%class.sk_sp.117* sret, float) local_unnamed_addr #1

declare void @_ZNK7SkImage10makeShaderE10SkTileModeS0_RK17SkSamplingOptionsPK8SkMatrix(%class.sk_sp.224* sret, %class.SkImage*, i32, i32, %struct.SkSamplingOptions* dereferenceable(20), %class.SkMatrix*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN8SkCanvasD1Ev(%class.SkCanvas*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16SoftwareRenderer24UpdateRenderPassTexturesERKNSt3__16vectorINS1_10unique_ptrINS_20AggregatedRenderPassENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEERKN4base8flat_mapIN4util6IdTypeIS4_mLm0ELm1EEENS_14DirectRenderer22RenderPassRequirementsENS1_4lessIvEENS2_INS1_4pairISH_SJ_EENS8_ISN_EEEEEE(%"class.viz::SoftwareRenderer"*, %"class.std::__1::vector.106"* nocapture readnone dereferenceable(24), %"class.base::flat_map.404"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector.414", align 8
  %5 = bitcast %"class.std::__1::vector.414"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.std::__1::vector.414", %"class.std::__1::vector.414"* %4, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.std::__1::vector.414", %"class.std::__1::vector.414"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #15
  %8 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 1, i32 0
  %9 = getelementptr inbounds %"class.base::internal::flat_tree.192", %"class.base::internal::flat_tree.192"* %8, i64 0, i32 0, i32 0, i32 0
  %10 = load %"struct.std::__1::pair.195"*, %"struct.std::__1::pair.195"** %9, align 8
  %11 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %12 = load %"struct.std::__1::pair.195"*, %"struct.std::__1::pair.195"** %11, align 8
  %13 = icmp eq %"struct.std::__1::pair.195"* %10, %12
  br i1 %13, label %217, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.base::flat_map.404", %"class.base::flat_map.404"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.base::flat_map.404", %"class.base::flat_map.404"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %17 = bitcast %"struct.std::__1::pair.408"** %16 to i64*
  %18 = bitcast %"class.util::IdType"** %6 to i64*
  %19 = bitcast %"class.std::__1::vector.414"* %4 to i64*
  %20 = bitcast %"class.util::IdType"** %7 to i64*
  br label %23

21:                                               ; preds = %203
  %22 = icmp eq %"class.util::IdType"* %204, %205
  br i1 %22, label %211, label %218

23:                                               ; preds = %14, %203
  %24 = phi %"class.util::IdType"* [ null, %14 ], [ %204, %203 ]
  %25 = phi %"class.util::IdType"* [ null, %14 ], [ %205, %203 ]
  %26 = phi %"class.util::IdType"* [ null, %14 ], [ %206, %203 ]
  %27 = phi i64 [ 0, %14 ], [ %207, %203 ]
  %28 = phi %"class.util::IdType"* [ null, %14 ], [ %208, %203 ]
  %29 = phi %"struct.std::__1::pair.195"* [ %10, %14 ], [ %209, %203 ]
  %30 = load %"struct.std::__1::pair.408"*, %"struct.std::__1::pair.408"** %15, align 8
  %31 = load i64, i64* %17, align 8
  %32 = ptrtoint %"struct.std::__1::pair.408"* %30 to i64
  %33 = sub i64 %31, %32
  %34 = icmp eq i64 %33, 0
  %35 = inttoptr i64 %31 to %"struct.std::__1::pair.408"*
  br i1 %34, label %56, label %36

36:                                               ; preds = %23
  %37 = sdiv exact i64 %33, 24
  %38 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %29, i64 0, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  br label %40

40:                                               ; preds = %40, %36
  %41 = phi %"struct.std::__1::pair.408"* [ %30, %36 ], [ %52, %40 ]
  %42 = phi i64 [ %37, %36 ], [ %51, %40 ]
  %43 = lshr i64 %42, 1
  %44 = getelementptr inbounds %"struct.std::__1::pair.408", %"struct.std::__1::pair.408"* %41, i64 %43
  %45 = getelementptr inbounds %"struct.std::__1::pair.408", %"struct.std::__1::pair.408"* %44, i64 0, i32 0, i32 0, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = icmp ult i64 %46, %39
  %48 = getelementptr inbounds %"struct.std::__1::pair.408", %"struct.std::__1::pair.408"* %44, i64 1
  %49 = xor i64 %43, -1
  %50 = add i64 %42, %49
  %51 = select i1 %47, i64 %50, i64 %43
  %52 = select i1 %47, %"struct.std::__1::pair.408"* %48, %"struct.std::__1::pair.408"* %41
  %53 = icmp eq i64 %51, 0
  br i1 %53, label %54, label %40

54:                                               ; preds = %40
  %55 = ptrtoint %"struct.std::__1::pair.408"* %52 to i64
  br label %56

56:                                               ; preds = %54, %23
  %57 = phi i64 [ %55, %54 ], [ %32, %23 ]
  %58 = phi %"struct.std::__1::pair.408"* [ %52, %54 ], [ %30, %23 ]
  %59 = icmp eq %"struct.std::__1::pair.408"* %58, %35
  br i1 %59, label %69, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %29, i64 0, i32 0, i32 0, i32 0
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds %"struct.std::__1::pair.408", %"struct.std::__1::pair.408"* %58, i64 0, i32 0, i32 0, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = icmp ult i64 %62, %64
  br i1 %65, label %69, label %66

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"struct.std::__1::pair.408", %"struct.std::__1::pair.408"* %58, i64 1
  %68 = ptrtoint %"struct.std::__1::pair.408"* %67 to i64
  br label %69

69:                                               ; preds = %56, %60, %66
  %70 = phi i64 [ %68, %66 ], [ %57, %56 ], [ %57, %60 ]
  %71 = inttoptr i64 %70 to %"struct.std::__1::pair.408"*
  %72 = icmp eq %"struct.std::__1::pair.408"* %58, %71
  %73 = select i1 %72, %"struct.std::__1::pair.408"* %35, %"struct.std::__1::pair.408"* %58
  %74 = icmp eq %"struct.std::__1::pair.408"* %73, %35
  br i1 %74, label %75, label %132

75:                                               ; preds = %69
  %76 = load %"class.util::IdType"*, %"class.util::IdType"** %7, align 8
  %77 = icmp eq %"class.util::IdType"* %26, %76
  br i1 %77, label %84, label %78

78:                                               ; preds = %75
  %79 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %29, i64 0, i32 0, i32 0, i32 0
  %80 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %26, i64 0, i32 0, i32 0
  %81 = load i64, i64* %79, align 8
  store i64 %81, i64* %80, align 8
  %82 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %26, i64 1
  %83 = ptrtoint %"class.util::IdType"* %82 to i64
  store i64 %83, i64* %18, align 8
  br label %203

84:                                               ; preds = %75
  %85 = ptrtoint %"class.util::IdType"* %76 to i64
  %86 = load i64, i64* %19, align 8
  %87 = sub i64 %85, %86
  %88 = ashr exact i64 %87, 3
  %89 = add nsw i64 %88, 1
  %90 = icmp ugt i64 %89, 2305843009213693951
  br i1 %90, label %91, label %93

91:                                               ; preds = %84
  %92 = bitcast %"class.std::__1::vector.414"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %92) #17
  unreachable

93:                                               ; preds = %84
  %94 = icmp ult i64 %88, 1152921504606846975
  br i1 %94, label %95, label %103

95:                                               ; preds = %93
  %96 = ashr exact i64 %87, 2
  %97 = icmp ult i64 %96, %89
  %98 = select i1 %97, i64 %89, i64 %96
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %108, label %100

100:                                              ; preds = %95
  %101 = icmp ugt i64 %98, 2305843009213693951
  br i1 %101, label %102, label %103

102:                                              ; preds = %100
  tail call void @abort() #17
  unreachable

103:                                              ; preds = %100, %93
  %104 = phi i64 [ %98, %100 ], [ 2305843009213693951, %93 ]
  %105 = shl i64 %104, 3
  %106 = tail call i8* @_Znwm(i64 %105) #16
  %107 = bitcast i8* %106 to %"class.util::IdType"*
  br label %108

108:                                              ; preds = %103, %95
  %109 = phi i64 [ %104, %103 ], [ 0, %95 ]
  %110 = phi %"class.util::IdType"* [ %107, %103 ], [ null, %95 ]
  %111 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %110, i64 %88
  %112 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %110, i64 %109
  %113 = ptrtoint %"class.util::IdType"* %112 to i64
  %114 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %29, i64 0, i32 0, i32 0, i32 0
  %115 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %111, i64 0, i32 0, i32 0
  %116 = load i64, i64* %114, align 8
  store i64 %116, i64* %115, align 8
  %117 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %111, i64 1
  %118 = ptrtoint %"class.util::IdType"* %117 to i64
  %119 = sub i64 %27, %86
  %120 = ashr exact i64 %119, 3
  %121 = sub nsw i64 0, %120
  %122 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %111, i64 %121
  %123 = ptrtoint %"class.util::IdType"* %122 to i64
  %124 = icmp sgt i64 %119, 0
  br i1 %124, label %125, label %128

125:                                              ; preds = %108
  %126 = bitcast %"class.util::IdType"* %122 to i8*
  %127 = inttoptr i64 %86 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %126, i8* align 8 %127, i64 %119, i1 false) #15
  br label %128

128:                                              ; preds = %125, %108
  store i64 %123, i64* %19, align 8
  store i64 %118, i64* %18, align 8
  store i64 %113, i64* %20, align 8
  %129 = icmp eq i64 %86, 0
  br i1 %129, label %203, label %130

130:                                              ; preds = %128
  %131 = inttoptr i64 %86 to i8*
  tail call void @_ZdlPv(i8* %131) #16
  br label %203

132:                                              ; preds = %69
  %133 = getelementptr inbounds %"struct.std::__1::pair.408", %"struct.std::__1::pair.408"* %73, i64 0, i32 1, i32 0
  %134 = bitcast %"class.gfx::Size"* %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = trunc i64 %135 to i32
  %137 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %29, i64 0, i32 1, i32 1, i32 2, i32 1, i32 0
  %138 = load i32, i32* %137, align 4
  %139 = icmp slt i32 %138, %136
  br i1 %139, label %146, label %140

140:                                              ; preds = %132
  %141 = lshr i64 %135, 32
  %142 = trunc i64 %141 to i32
  %143 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %29, i64 0, i32 1, i32 1, i32 2, i32 1, i32 1
  %144 = load i32, i32* %143, align 4
  %145 = icmp slt i32 %144, %142
  br i1 %145, label %146, label %203

146:                                              ; preds = %140, %132
  %147 = load %"class.util::IdType"*, %"class.util::IdType"** %7, align 8
  %148 = icmp eq %"class.util::IdType"* %28, %147
  br i1 %148, label %155, label %149

149:                                              ; preds = %146
  %150 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %29, i64 0, i32 0, i32 0, i32 0
  %151 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %28, i64 0, i32 0, i32 0
  %152 = load i64, i64* %150, align 8
  store i64 %152, i64* %151, align 8
  %153 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %28, i64 1
  %154 = ptrtoint %"class.util::IdType"* %153 to i64
  store i64 %154, i64* %18, align 8
  br label %203

155:                                              ; preds = %146
  %156 = ptrtoint %"class.util::IdType"* %147 to i64
  %157 = load i64, i64* %19, align 8
  %158 = sub i64 %156, %157
  %159 = ashr exact i64 %158, 3
  %160 = add nsw i64 %159, 1
  %161 = icmp ugt i64 %160, 2305843009213693951
  br i1 %161, label %162, label %164

162:                                              ; preds = %155
  %163 = bitcast %"class.std::__1::vector.414"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %163) #17
  unreachable

164:                                              ; preds = %155
  %165 = icmp ult i64 %159, 1152921504606846975
  br i1 %165, label %166, label %174

166:                                              ; preds = %164
  %167 = ashr exact i64 %158, 2
  %168 = icmp ult i64 %167, %160
  %169 = select i1 %168, i64 %160, i64 %167
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %179, label %171

171:                                              ; preds = %166
  %172 = icmp ugt i64 %169, 2305843009213693951
  br i1 %172, label %173, label %174

173:                                              ; preds = %171
  tail call void @abort() #17
  unreachable

174:                                              ; preds = %171, %164
  %175 = phi i64 [ %169, %171 ], [ 2305843009213693951, %164 ]
  %176 = shl i64 %175, 3
  %177 = tail call i8* @_Znwm(i64 %176) #16
  %178 = bitcast i8* %177 to %"class.util::IdType"*
  br label %179

179:                                              ; preds = %174, %166
  %180 = phi i64 [ %175, %174 ], [ 0, %166 ]
  %181 = phi %"class.util::IdType"* [ %178, %174 ], [ null, %166 ]
  %182 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %181, i64 %159
  %183 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %181, i64 %180
  %184 = ptrtoint %"class.util::IdType"* %183 to i64
  %185 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %29, i64 0, i32 0, i32 0, i32 0
  %186 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %182, i64 0, i32 0, i32 0
  %187 = load i64, i64* %185, align 8
  store i64 %187, i64* %186, align 8
  %188 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %182, i64 1
  %189 = ptrtoint %"class.util::IdType"* %188 to i64
  %190 = sub i64 %27, %157
  %191 = ashr exact i64 %190, 3
  %192 = sub nsw i64 0, %191
  %193 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %182, i64 %192
  %194 = ptrtoint %"class.util::IdType"* %193 to i64
  %195 = icmp sgt i64 %190, 0
  br i1 %195, label %196, label %199

196:                                              ; preds = %179
  %197 = bitcast %"class.util::IdType"* %193 to i8*
  %198 = inttoptr i64 %157 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %197, i8* align 8 %198, i64 %190, i1 false) #15
  br label %199

199:                                              ; preds = %196, %179
  store i64 %194, i64* %19, align 8
  store i64 %189, i64* %18, align 8
  store i64 %184, i64* %20, align 8
  %200 = icmp eq i64 %157, 0
  br i1 %200, label %203, label %201

201:                                              ; preds = %199
  %202 = inttoptr i64 %157 to i8*
  tail call void @_ZdlPv(i8* %202) #16
  br label %203

203:                                              ; preds = %140, %149, %199, %201, %130, %128, %78
  %204 = phi %"class.util::IdType"* [ %24, %140 ], [ %24, %149 ], [ %193, %199 ], [ %193, %201 ], [ %122, %130 ], [ %122, %128 ], [ %24, %78 ]
  %205 = phi %"class.util::IdType"* [ %25, %140 ], [ %153, %149 ], [ %188, %199 ], [ %188, %201 ], [ %117, %130 ], [ %117, %128 ], [ %82, %78 ]
  %206 = phi %"class.util::IdType"* [ %26, %140 ], [ %153, %149 ], [ %188, %199 ], [ %188, %201 ], [ %117, %130 ], [ %117, %128 ], [ %82, %78 ]
  %207 = phi i64 [ %27, %140 ], [ %154, %149 ], [ %189, %199 ], [ %189, %201 ], [ %118, %130 ], [ %118, %128 ], [ %83, %78 ]
  %208 = phi %"class.util::IdType"* [ %28, %140 ], [ %153, %149 ], [ %188, %199 ], [ %188, %201 ], [ %117, %130 ], [ %117, %128 ], [ %82, %78 ]
  %209 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %29, i64 1
  %210 = icmp eq %"struct.std::__1::pair.195"* %209, %12
  br i1 %210, label %21, label %23

211:                                              ; preds = %218, %21
  %212 = icmp eq %"class.util::IdType"* %204, null
  br i1 %212, label %217, label %213

213:                                              ; preds = %211
  %214 = ptrtoint %"class.util::IdType"* %204 to i64
  %215 = bitcast %"class.util::IdType"** %6 to i64*
  store i64 %214, i64* %215, align 8
  %216 = bitcast %"class.util::IdType"* %204 to i8*
  tail call void @_ZdlPv(i8* %216) #16
  br label %217

217:                                              ; preds = %3, %211, %213
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #15
  ret void

218:                                              ; preds = %21, %218
  %219 = phi %"class.util::IdType"* [ %221, %218 ], [ %204, %21 ]
  %220 = tail call i64 @_ZN4base8internal9flat_treeIN4util6IdTypeIN3viz20AggregatedRenderPassEmLm0ELm1EEENS0_8GetFirstENSt3__14lessIvEENS8_6vectorINS8_4pairIS6_8SkBitmapEENS8_9allocatorISE_EEEEE5eraseIS6_EEmRKT_(%"class.base::internal::flat_tree.192"* %8, %"class.util::IdType"* dereferenceable(8) %219)
  %221 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %219, i64 1
  %222 = icmp eq %"class.util::IdType"* %221, %205
  br i1 %222, label %211, label %218
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4base8internal9flat_treeIN4util6IdTypeIN3viz20AggregatedRenderPassEmLm0ELm1EEENS0_8GetFirstENSt3__14lessIvEENS8_6vectorINS8_4pairIS6_8SkBitmapEENS8_9allocatorISE_EEEEE5eraseIS6_EEmRKT_(%"class.base::internal::flat_tree.192"*, %"class.util::IdType"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::flat_tree.192", %"class.base::internal::flat_tree.192"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair.195"*, %"struct.std::__1::pair.195"** %3, align 8
  %5 = getelementptr inbounds %"class.base::internal::flat_tree.192", %"class.base::internal::flat_tree.192"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast %"struct.std::__1::pair.195"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint %"struct.std::__1::pair.195"* %4 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 0
  %11 = inttoptr i64 %7 to %"struct.std::__1::pair.195"*
  br i1 %10, label %32, label %12

12:                                               ; preds = %2
  %13 = ashr exact i64 %9, 6
  %14 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %1, i64 0, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  br label %16

16:                                               ; preds = %16, %12
  %17 = phi %"struct.std::__1::pair.195"* [ %4, %12 ], [ %28, %16 ]
  %18 = phi i64 [ %13, %12 ], [ %27, %16 ]
  %19 = lshr i64 %18, 1
  %20 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %17, i64 %19
  %21 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, %15
  %24 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %20, i64 1
  %25 = xor i64 %19, -1
  %26 = add i64 %18, %25
  %27 = select i1 %23, i64 %26, i64 %19
  %28 = select i1 %23, %"struct.std::__1::pair.195"* %24, %"struct.std::__1::pair.195"* %17
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %30, label %16

30:                                               ; preds = %16
  %31 = ptrtoint %"struct.std::__1::pair.195"* %28 to i64
  br label %32

32:                                               ; preds = %30, %2
  %33 = phi i64 [ %31, %30 ], [ %8, %2 ]
  %34 = phi %"struct.std::__1::pair.195"* [ %28, %30 ], [ %4, %2 ]
  %35 = icmp eq %"struct.std::__1::pair.195"* %34, %11
  br i1 %35, label %45, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %1, i64 0, i32 0, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %34, i64 0, i32 0, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = icmp ult i64 %38, %40
  br i1 %41, label %45, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %34, i64 1
  %44 = ptrtoint %"struct.std::__1::pair.195"* %43 to i64
  br label %45

45:                                               ; preds = %32, %36, %42
  %46 = phi i64 [ %44, %42 ], [ %33, %32 ], [ %33, %36 ]
  %47 = inttoptr i64 %46 to %"struct.std::__1::pair.195"*
  %48 = ptrtoint %"struct.std::__1::pair.195"* %34 to i64
  %49 = sub i64 %46, %48
  %50 = ashr exact i64 %49, 6
  %51 = icmp eq %"struct.std::__1::pair.195"* %34, %47
  br i1 %51, label %78, label %52

52:                                               ; preds = %45
  %53 = icmp eq %"struct.std::__1::pair.195"* %11, %47
  br i1 %53, label %68, label %54

54:                                               ; preds = %52, %54
  %55 = phi %"struct.std::__1::pair.195"* [ %64, %54 ], [ %34, %52 ]
  %56 = phi %"struct.std::__1::pair.195"* [ %63, %54 ], [ %47, %52 ]
  %57 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %56, i64 0, i32 0, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %55, i64 0, i32 0, i32 0, i32 0
  %59 = load i64, i64* %57, align 8
  store i64 %59, i64* %58, align 8
  %60 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %56, i64 0, i32 1
  %61 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %55, i64 0, i32 1
  %62 = tail call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSEOS_(%class.SkBitmap* %61, %class.SkBitmap* dereferenceable(56) %60) #15
  %63 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %56, i64 1
  %64 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %55, i64 1
  %65 = icmp eq %"struct.std::__1::pair.195"* %63, %11
  br i1 %65, label %66, label %54

66:                                               ; preds = %54
  %67 = load %"struct.std::__1::pair.195"*, %"struct.std::__1::pair.195"** %5, align 8
  br label %68

68:                                               ; preds = %66, %52
  %69 = phi %"struct.std::__1::pair.195"* [ %11, %52 ], [ %67, %66 ]
  %70 = phi %"struct.std::__1::pair.195"* [ %34, %52 ], [ %64, %66 ]
  %71 = icmp eq %"struct.std::__1::pair.195"* %69, %70
  br i1 %71, label %77, label %72

72:                                               ; preds = %68, %72
  %73 = phi %"struct.std::__1::pair.195"* [ %74, %72 ], [ %69, %68 ]
  %74 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %73, i64 -1
  %75 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %73, i64 -1, i32 1
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %75) #15
  %76 = icmp eq %"struct.std::__1::pair.195"* %74, %70
  br i1 %76, label %77, label %72

77:                                               ; preds = %72, %68
  store %"struct.std::__1::pair.195"* %70, %"struct.std::__1::pair.195"** %5, align 8
  br label %78

78:                                               ; preds = %45, %77
  ret i64 %50
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16SoftwareRenderer34AllocateRenderPassResourceIfNeededERKN4util6IdTypeINS_20AggregatedRenderPassEmLm0ELm1EEERKNS_14DirectRenderer22RenderPassRequirementsE(%"class.viz::SoftwareRenderer"*, %"class.util::IdType"* nocapture readonly dereferenceable(8), %"struct.viz::DirectRenderer::RenderPassRequirements"* nocapture readonly dereferenceable(12)) unnamed_addr #0 align 2 {
  %4 = alloca %"struct.std::__1::pair.195", align 8
  %5 = alloca %struct.SkImageInfo, align 16
  %6 = alloca %class.SkBitmap, align 8
  %7 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::internal::flat_tree.192", %"class.base::internal::flat_tree.192"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"struct.std::__1::pair.195"*, %"struct.std::__1::pair.195"** %8, align 8
  %10 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast %"struct.std::__1::pair.195"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = ptrtoint %"struct.std::__1::pair.195"* %9 to i64
  %14 = sub i64 %12, %13
  %15 = icmp eq i64 %14, 0
  %16 = inttoptr i64 %12 to %"struct.std::__1::pair.195"*
  br i1 %15, label %37, label %17

17:                                               ; preds = %3
  %18 = ashr exact i64 %14, 6
  %19 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %1, i64 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  br label %21

21:                                               ; preds = %21, %17
  %22 = phi %"struct.std::__1::pair.195"* [ %9, %17 ], [ %33, %21 ]
  %23 = phi i64 [ %18, %17 ], [ %32, %21 ]
  %24 = lshr i64 %23, 1
  %25 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %22, i64 %24
  %26 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = icmp ult i64 %27, %20
  %29 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %25, i64 1
  %30 = xor i64 %24, -1
  %31 = add i64 %23, %30
  %32 = select i1 %28, i64 %31, i64 %24
  %33 = select i1 %28, %"struct.std::__1::pair.195"* %29, %"struct.std::__1::pair.195"* %22
  %34 = icmp eq i64 %32, 0
  br i1 %34, label %35, label %21

35:                                               ; preds = %21
  %36 = ptrtoint %"struct.std::__1::pair.195"* %33 to i64
  br label %37

37:                                               ; preds = %35, %3
  %38 = phi i64 [ %36, %35 ], [ %13, %3 ]
  %39 = phi %"struct.std::__1::pair.195"* [ %33, %35 ], [ %9, %3 ]
  %40 = icmp eq %"struct.std::__1::pair.195"* %39, %16
  br i1 %40, label %50, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %1, i64 0, i32 0, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %39, i64 0, i32 0, i32 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = icmp ult i64 %43, %45
  br i1 %46, label %50, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %39, i64 1
  %49 = ptrtoint %"struct.std::__1::pair.195"* %48 to i64
  br label %50

50:                                               ; preds = %37, %41, %47
  %51 = phi i64 [ %49, %47 ], [ %38, %37 ], [ %38, %41 ]
  %52 = inttoptr i64 %51 to %"struct.std::__1::pair.195"*
  %53 = icmp eq %"struct.std::__1::pair.195"* %39, %52
  %54 = select i1 %53, %"struct.std::__1::pair.195"* %16, %"struct.std::__1::pair.195"* %39
  %55 = icmp eq %"struct.std::__1::pair.195"* %54, %16
  br i1 %55, label %56, label %139

56:                                               ; preds = %50
  %57 = bitcast %struct.SkImageInfo* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #15
  %58 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 0, i32 0, i32 0
  %59 = getelementptr inbounds %"struct.viz::DirectRenderer::RenderPassRequirements", %"struct.viz::DirectRenderer::RenderPassRequirements"* %2, i64 0, i32 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %"struct.viz::DirectRenderer::RenderPassRequirements", %"struct.viz::DirectRenderer::RenderPassRequirements"* %2, i64 0, i32 0, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = zext i32 %62 to i64
  %64 = shl nuw i64 %63, 32
  %65 = zext i32 %60 to i64
  %66 = or i64 %64, %65
  %67 = bitcast %struct.SkImageInfo* %5 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8589934598>, <2 x i64>* %67, align 16, !alias.scope !45
  %68 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 1
  %69 = bitcast %struct.SkISize* %68 to i64*
  store i64 %66, i64* %69, align 16, !alias.scope !45
  %70 = bitcast %class.SkBitmap* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %70) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %70, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %6) #15
  %71 = sext i32 %60 to i64
  %72 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 0
  %73 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* nonnull %72) #15
  %74 = sext i32 %73 to i64
  %75 = mul nsw i64 %74, %71
  %76 = icmp ult i64 %75, 2147483648
  %77 = select i1 %76, i64 %75, i64 0
  %78 = call zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap* nonnull %6, %struct.SkImageInfo* nonnull dereferenceable(24) %5, i64 %77) #15
  br i1 %78, label %89, label %79

79:                                               ; preds = %56
  %80 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 1, i32 0
  %81 = load i32, i32* %80, align 16
  %82 = sext i32 %81 to i64
  %83 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* nonnull %72) #15
  %84 = sext i32 %83 to i64
  %85 = mul nsw i64 %84, %82
  %86 = icmp ult i64 %85, 2147483648
  %87 = select i1 %86, i64 %85, i64 0
  %88 = call i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo* nonnull %5, i64 %87) #15
  call void @_ZN4base27TerminateBecauseOutOfMemoryEm(i64 %88) #15
  br label %89

89:                                               ; preds = %79, %56
  %90 = bitcast %"struct.std::__1::pair.195"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %90) #15
  %91 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %1, i64 0, i32 0, i32 0
  %92 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %4, i64 0, i32 0, i32 0, i32 0
  %93 = load i64, i64* %91, align 8
  store i64 %93, i64* %92, align 8
  %94 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %4, i64 0, i32 1
  call void @_ZN8SkBitmapC1EOS_(%class.SkBitmap* %94, %class.SkBitmap* nonnull dereferenceable(56) %6) #15
  %95 = load %"struct.std::__1::pair.195"*, %"struct.std::__1::pair.195"** %8, align 8
  %96 = load i64, i64* %11, align 8
  %97 = ptrtoint %"struct.std::__1::pair.195"* %95 to i64
  %98 = sub i64 %96, %97
  %99 = icmp eq i64 %98, 0
  %100 = inttoptr i64 %96 to %"struct.std::__1::pair.195"*
  br i1 %99, label %118, label %101

101:                                              ; preds = %89
  %102 = ashr exact i64 %98, 6
  %103 = load i64, i64* %92, align 8
  br label %104

104:                                              ; preds = %104, %101
  %105 = phi %"struct.std::__1::pair.195"* [ %95, %101 ], [ %116, %104 ]
  %106 = phi i64 [ %102, %101 ], [ %115, %104 ]
  %107 = lshr i64 %106, 1
  %108 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %105, i64 %107
  %109 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %108, i64 0, i32 0, i32 0, i32 0
  %110 = load i64, i64* %109, align 8
  %111 = icmp ult i64 %110, %103
  %112 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %108, i64 1
  %113 = xor i64 %107, -1
  %114 = add i64 %106, %113
  %115 = select i1 %111, i64 %114, i64 %107
  %116 = select i1 %111, %"struct.std::__1::pair.195"* %112, %"struct.std::__1::pair.195"* %105
  %117 = icmp eq i64 %115, 0
  br i1 %117, label %118, label %104

118:                                              ; preds = %104, %89
  %119 = phi %"struct.std::__1::pair.195"* [ %95, %89 ], [ %116, %104 ]
  %120 = icmp eq %"struct.std::__1::pair.195"* %119, %100
  br i1 %120, label %126, label %121

121:                                              ; preds = %118
  %122 = load i64, i64* %92, align 8
  %123 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %119, i64 0, i32 0, i32 0, i32 0
  %124 = load i64, i64* %123, align 8
  %125 = icmp ult i64 %122, %124
  br i1 %125, label %126, label %129

126:                                              ; preds = %121, %118
  %127 = getelementptr inbounds %"class.base::internal::flat_tree.192", %"class.base::internal::flat_tree.192"* %7, i64 0, i32 0
  %128 = call %"struct.std::__1::pair.195"* @_ZNSt3__16vectorINS_4pairIN4util6IdTypeIN3viz20AggregatedRenderPassEmLm0ELm1EEE8SkBitmapEENS_9allocatorIS8_EEE7emplaceIJS8_EEENS_11__wrap_iterIPS8_EENSD_IPKS8_EEDpOT_(%"class.std::__1::vector.193"* %127, %"struct.std::__1::pair.195"* %119, %"struct.std::__1::pair.195"* nonnull dereferenceable(64) %4) #15
  br label %129

129:                                              ; preds = %121, %126
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %94) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %90) #15
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %70) #15
  %130 = load %class.SkColorSpace*, %class.SkColorSpace** %58, align 16
  %131 = icmp eq %class.SkColorSpace* %130, null
  br i1 %131, label %138, label %132

132:                                              ; preds = %129
  %133 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %130, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = atomicrmw add i32* %133, i32 -1 acq_rel
  %135 = icmp eq i32 %134, 1
  br i1 %135, label %136, label %138

136:                                              ; preds = %132
  %137 = bitcast %class.SkColorSpace* %130 to i8*
  call void @_ZdlPv(i8* %137) #16
  br label %138

138:                                              ; preds = %129, %132, %136
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #15
  br label %139

139:                                              ; preds = %50, %138
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3viz16SoftwareRenderer29IsRenderPassResourceAllocatedERKN4util6IdTypeINS_20AggregatedRenderPassEmLm0ELm1EEE(%"class.viz::SoftwareRenderer"* nocapture readonly, %"class.util::IdType"* nocapture readonly dereferenceable(8)) unnamed_addr #10 align 2 {
  %3 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair.195"*, %"struct.std::__1::pair.195"** %3, align 8
  %5 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %"struct.std::__1::pair.195"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint %"struct.std::__1::pair.195"* %4 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 0
  %11 = inttoptr i64 %7 to %"struct.std::__1::pair.195"*
  br i1 %10, label %32, label %12

12:                                               ; preds = %2
  %13 = ashr exact i64 %9, 6
  %14 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %1, i64 0, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  br label %16

16:                                               ; preds = %16, %12
  %17 = phi %"struct.std::__1::pair.195"* [ %4, %12 ], [ %28, %16 ]
  %18 = phi i64 [ %13, %12 ], [ %27, %16 ]
  %19 = lshr i64 %18, 1
  %20 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %17, i64 %19
  %21 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, %15
  %24 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %20, i64 1
  %25 = xor i64 %19, -1
  %26 = add i64 %18, %25
  %27 = select i1 %23, i64 %26, i64 %19
  %28 = select i1 %23, %"struct.std::__1::pair.195"* %24, %"struct.std::__1::pair.195"* %17
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %30, label %16

30:                                               ; preds = %16
  %31 = ptrtoint %"struct.std::__1::pair.195"* %28 to i64
  br label %32

32:                                               ; preds = %30, %2
  %33 = phi i64 [ %31, %30 ], [ %8, %2 ]
  %34 = phi %"struct.std::__1::pair.195"* [ %28, %30 ], [ %4, %2 ]
  %35 = icmp eq %"struct.std::__1::pair.195"* %34, %11
  br i1 %35, label %45, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %1, i64 0, i32 0, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %34, i64 0, i32 0, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = icmp ult i64 %38, %40
  br i1 %41, label %45, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %34, i64 1
  %44 = ptrtoint %"struct.std::__1::pair.195"* %43 to i64
  br label %45

45:                                               ; preds = %32, %36, %42
  %46 = phi i64 [ %44, %42 ], [ %33, %32 ], [ %33, %36 ]
  %47 = inttoptr i64 %46 to %"struct.std::__1::pair.195"*
  %48 = icmp eq %"struct.std::__1::pair.195"* %34, %47
  %49 = select i1 %48, %"struct.std::__1::pair.195"* %11, %"struct.std::__1::pair.195"* %34
  %50 = icmp ne %"struct.std::__1::pair.195"* %49, %11
  ret i1 %50
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZN3viz16SoftwareRenderer29GetRenderPassBackingPixelSizeERKN4util6IdTypeINS_20AggregatedRenderPassEmLm0ELm1EEE(%"class.viz::SoftwareRenderer"* nocapture readonly, %"class.util::IdType"* nocapture readonly dereferenceable(8)) unnamed_addr #10 align 2 {
  %3 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair.195"*, %"struct.std::__1::pair.195"** %3, align 8
  %5 = getelementptr inbounds %"class.viz::SoftwareRenderer", %"class.viz::SoftwareRenderer"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %"struct.std::__1::pair.195"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint %"struct.std::__1::pair.195"* %4 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 0
  %11 = inttoptr i64 %7 to %"struct.std::__1::pair.195"*
  br i1 %10, label %32, label %12

12:                                               ; preds = %2
  %13 = ashr exact i64 %9, 6
  %14 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %1, i64 0, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  br label %16

16:                                               ; preds = %16, %12
  %17 = phi %"struct.std::__1::pair.195"* [ %4, %12 ], [ %28, %16 ]
  %18 = phi i64 [ %13, %12 ], [ %27, %16 ]
  %19 = lshr i64 %18, 1
  %20 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %17, i64 %19
  %21 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, %15
  %24 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %20, i64 1
  %25 = xor i64 %19, -1
  %26 = add i64 %18, %25
  %27 = select i1 %23, i64 %26, i64 %19
  %28 = select i1 %23, %"struct.std::__1::pair.195"* %24, %"struct.std::__1::pair.195"* %17
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %30, label %16

30:                                               ; preds = %16
  %31 = ptrtoint %"struct.std::__1::pair.195"* %28 to i64
  br label %32

32:                                               ; preds = %30, %2
  %33 = phi i64 [ %31, %30 ], [ %8, %2 ]
  %34 = phi %"struct.std::__1::pair.195"* [ %28, %30 ], [ %4, %2 ]
  %35 = icmp eq %"struct.std::__1::pair.195"* %34, %11
  br i1 %35, label %45, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %1, i64 0, i32 0, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %34, i64 0, i32 0, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = icmp ult i64 %38, %40
  br i1 %41, label %45, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %34, i64 1
  %44 = ptrtoint %"struct.std::__1::pair.195"* %43 to i64
  br label %45

45:                                               ; preds = %32, %36, %42
  %46 = phi i64 [ %44, %42 ], [ %33, %32 ], [ %33, %36 ]
  %47 = inttoptr i64 %46 to %"struct.std::__1::pair.195"*
  %48 = icmp eq %"struct.std::__1::pair.195"* %34, %47
  %49 = select i1 %48, %"struct.std::__1::pair.195"* %11, %"struct.std::__1::pair.195"* %34
  %50 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %49, i64 0, i32 1, i32 1, i32 2, i32 1, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %49, i64 0, i32 1, i32 1, i32 2, i32 1, i32 1
  %53 = load i32, i32* %52, align 4
  %54 = icmp sgt i32 %51, 0
  %55 = select i1 %54, i32 %51, i32 0
  %56 = icmp sgt i32 %53, 0
  %57 = select i1 %56, i32 %53, i32 0
  %58 = zext i32 %57 to i64
  %59 = shl nuw nsw i64 %58, 32
  %60 = zext i32 %55 to i64
  %61 = or i64 %59, %60
  ret i64 %61
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz14DirectRenderer18SwapBuffersSkippedEv(%"class.viz::DirectRenderer"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz14DirectRenderer19SwapBuffersCompleteEN3gfx14GpuFenceHandleE(%"class.viz::DirectRenderer"*, %"struct.gfx::GpuFenceHandle"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz14DirectRenderer16BuffersPresentedEv(%"class.viz::DirectRenderer"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz14DirectRenderer31DidReceiveTextureInUseResponsesERKNSt3__16vectorIN3gpu20TextureInUseResponseENS1_9allocatorIS4_EEEE(%"class.viz::DirectRenderer"*, %"class.std::__1::vector.426"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz14DirectRenderer26DidReceiveReleasedOverlaysERKNSt3__16vectorIN3gpu7MailboxENS1_9allocatorIS4_EEEE(%"class.viz::DirectRenderer"*, %"class.std::__1::vector.427"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare %"class.viz::DelegatedInkPointRendererBase"* @_ZN3viz14DirectRenderer28GetDelegatedInkPointRendererEb(%"class.viz::DirectRenderer"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz14DirectRenderer23SetDelegatedInkMetadataENSt3__110unique_ptrIN3gfx20DelegatedInkMetadataENS1_14default_deleteIS4_EEEE(%"class.viz::DirectRenderer"*, %"class.gfx::DelegatedInkMetadata"*) unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.gfx::DelegatedInkMetadata"* %1, null
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.gfx::DelegatedInkMetadata"* %1 to i8*
  tail call void @_ZdlPv(i8* %5) #16
  br label %6

6:                                                ; preds = %2, %4
  ret void
}

declare zeroext i1 @_ZN3viz14DirectRenderer27CompositeTimeTracingEnabledEv(%"class.viz::DirectRenderer"*) unnamed_addr #1

declare void @_ZN3viz14DirectRenderer22AddCompositeTimeTracesEN4base9TimeTicksE(%"class.viz::DirectRenderer"*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz14DirectRenderer21FlushOverdrawFeedbackERKN3gfx4RectE(%"class.viz::DirectRenderer"*, %"class.gfx::Rect"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret void
}

declare %"class.viz::DrawQuad"* @_ZN3viz14DirectRenderer22CanPassBeDrawnDirectlyEPKNS_20AggregatedRenderPassE(%"class.viz::DirectRenderer"*, %"class.viz::AggregatedRenderPass"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz14DirectRenderer21FinishDrawingQuadListEv(%"class.viz::DirectRenderer"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz14DirectRenderer39SetDelegatedInkPointRendererSkiaForTestENSt3__110unique_ptrINS_29DelegatedInkPointRendererSkiaENS1_14default_deleteIS3_EEEE(%"class.viz::DirectRenderer"*, %"class.viz::DelegatedInkPointRendererSkia"*) unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.viz::DelegatedInkPointRendererSkia"* %1, null
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.viz::DelegatedInkPointRendererSkia"* %1 to void (%"class.viz::DelegatedInkPointRendererSkia"*)***
  %6 = load void (%"class.viz::DelegatedInkPointRendererSkia"*)**, void (%"class.viz::DelegatedInkPointRendererSkia"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.viz::DelegatedInkPointRendererSkia"*)*, void (%"class.viz::DelegatedInkPointRendererSkia"*)** %6, i64 1
  %8 = load void (%"class.viz::DelegatedInkPointRendererSkia"*)*, void (%"class.viz::DelegatedInkPointRendererSkia"*)** %7, align 8
  tail call void %8(%"class.viz::DelegatedInkPointRendererSkia"* nonnull %1) #15
  br label %9

9:                                                ; preds = %2, %4
  ret void
}

declare void @_ZN3viz14DirectRenderer21DrawDelegatedInkTrailEv(%"class.viz::DirectRenderer"*) unnamed_addr #1

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas*, %struct.SkRect* dereferenceable(16), i32, i1 zeroext) local_unnamed_addr #1

declare void @_ZN10SkMatrix449setConcatERKS_S1_(%class.SkMatrix44*, %class.SkMatrix44* dereferenceable(68), %class.SkMatrix44* dereferenceable(68)) local_unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32) local_unnamed_addr #1

declare void @_ZN8SkCanvas9drawColorERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas*, %struct.SkRGBA4f* dereferenceable(16), i32) local_unnamed_addr #1

declare i32 @_ZNK8SkCanvas12getSaveCountEv(%class.SkCanvas*) local_unnamed_addr #1

declare i32 @_ZNK3gfx6RRectF7GetTypeEv(%"class.gfx::RRectF"*) local_unnamed_addr #1

declare void @_ZN7SkPaint9setAlphafEf(%class.SkPaint*, float) local_unnamed_addr #1

declare void @_ZN8SkCanvas8clipPathERK6SkPath8SkClipOpb(%class.SkCanvas*, %class.SkPath* dereferenceable(16), i32, i1 zeroext) local_unnamed_addr #1

declare void @_ZN8SkCanvas14restoreToCountEi(%class.SkCanvas*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN8SkMatrix13setRectToRectERK6SkRectS2_NS_10ScaleToFitE(%class.SkMatrix*, %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3viz12_GLOBAL__N_122AnimatedImagesProviderD0Ev(%"class.viz::(anonymous namespace)::AnimatedImagesProvider"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.viz::(anonymous namespace)::AnimatedImagesProvider"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3viz12_GLOBAL__N_122AnimatedImagesProvider16GetRasterContentERKN2cc9DrawImageE(%"class.cc::ImageProvider::ScopedResult"* noalias sret, %"class.viz::(anonymous namespace)::AnimatedImagesProvider"* nocapture readonly, %"class.cc::DrawImage"* dereferenceable(240)) unnamed_addr #8 align 2 {
  %4 = alloca %"class.cc::DecodedDrawImage", align 8
  %5 = alloca %class.sk_sp.649, align 8
  %6 = alloca %class.sk_sp.335, align 8
  %7 = alloca %class.sk_sp.226, align 8
  %8 = alloca <2 x float>, align 8
  %9 = bitcast <2 x float>* %8 to %struct.SkSize*
  %10 = alloca <2 x float>, align 8
  %11 = bitcast <2 x float>* %10 to %struct.SkSize*
  %12 = getelementptr inbounds %"class.cc::DrawImage", %"class.cc::DrawImage"* %2, i64 0, i32 0
  %13 = getelementptr inbounds %"class.viz::(anonymous namespace)::AnimatedImagesProvider", %"class.viz::(anonymous namespace)::AnimatedImagesProvider"* %1, i64 0, i32 1
  %14 = bitcast %"class.base::flat_map.281"** %13 to %"class.base::internal::flat_tree.282"**
  %15 = load %"class.base::internal::flat_tree.282"*, %"class.base::internal::flat_tree.282"** %14, align 8
  %16 = getelementptr inbounds %"class.cc::DrawImage", %"class.cc::DrawImage"* %2, i64 0, i32 0, i32 6
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %"class.base::internal::flat_tree.282", %"class.base::internal::flat_tree.282"* %15, i64 0, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::pair.285"*, %"struct.std::__1::pair.285"** %18, align 8
  %20 = getelementptr inbounds %"class.base::internal::flat_tree.282", %"class.base::internal::flat_tree.282"* %15, i64 0, i32 0, i32 0, i32 1
  %21 = bitcast %"struct.std::__1::pair.285"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = ptrtoint %"struct.std::__1::pair.285"* %19 to i64
  %24 = sub i64 %22, %23
  %25 = icmp eq i64 %24, 0
  %26 = inttoptr i64 %22 to %"struct.std::__1::pair.285"*
  br i1 %25, label %45, label %27

27:                                               ; preds = %3
  %28 = ashr exact i64 %24, 4
  br label %29

29:                                               ; preds = %29, %27
  %30 = phi %"struct.std::__1::pair.285"* [ %19, %27 ], [ %41, %29 ]
  %31 = phi i64 [ %28, %27 ], [ %40, %29 ]
  %32 = lshr i64 %31, 1
  %33 = getelementptr inbounds %"struct.std::__1::pair.285", %"struct.std::__1::pair.285"* %30, i64 %32
  %34 = getelementptr inbounds %"struct.std::__1::pair.285", %"struct.std::__1::pair.285"* %33, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = icmp slt i32 %35, %17
  %37 = getelementptr inbounds %"struct.std::__1::pair.285", %"struct.std::__1::pair.285"* %33, i64 1
  %38 = xor i64 %32, -1
  %39 = add i64 %31, %38
  %40 = select i1 %36, i64 %39, i64 %32
  %41 = select i1 %36, %"struct.std::__1::pair.285"* %37, %"struct.std::__1::pair.285"* %30
  %42 = icmp eq i64 %40, 0
  br i1 %42, label %43, label %29

43:                                               ; preds = %29
  %44 = ptrtoint %"struct.std::__1::pair.285"* %41 to i64
  br label %45

45:                                               ; preds = %43, %3
  %46 = phi i64 [ %44, %43 ], [ %23, %3 ]
  %47 = phi %"struct.std::__1::pair.285"* [ %41, %43 ], [ %19, %3 ]
  %48 = icmp eq %"struct.std::__1::pair.285"* %47, %26
  br i1 %48, label %56, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"struct.std::__1::pair.285", %"struct.std::__1::pair.285"* %47, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = icmp slt i32 %17, %51
  br i1 %52, label %56, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"struct.std::__1::pair.285", %"struct.std::__1::pair.285"* %47, i64 1
  %55 = ptrtoint %"struct.std::__1::pair.285"* %54 to i64
  br label %56

56:                                               ; preds = %45, %49, %53
  %57 = phi i64 [ %55, %53 ], [ %46, %45 ], [ %46, %49 ]
  %58 = inttoptr i64 %57 to %"struct.std::__1::pair.285"*
  %59 = icmp eq %"struct.std::__1::pair.285"* %47, %58
  %60 = select i1 %59, %"struct.std::__1::pair.285"* %26, %"struct.std::__1::pair.285"* %47
  %61 = icmp eq %"struct.std::__1::pair.285"* %60, %26
  %62 = getelementptr inbounds %"struct.std::__1::pair.285", %"struct.std::__1::pair.285"* %60, i64 0, i32 1
  %63 = select i1 %61, i64* @_ZN2cc10PaintImage18kDefaultFrameIndexE, i64* %62
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %class.sk_sp.335* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #15
  %66 = load i32, i32* @_ZN2cc10PaintImage25kDefaultGeneratorClientIdE, align 4
  call void @_ZNK2cc10PaintImage18GetSkImageForFrameEmi(%class.sk_sp.335* nonnull sret %6, %"class.cc::PaintImage"* %12, i64 %64, i32 %66) #15
  %67 = getelementptr inbounds %class.sk_sp.335, %class.sk_sp.335* %6, i64 0, i32 0
  %68 = bitcast %class.sk_sp.335* %6 to i64*
  %69 = load i64, i64* %68, align 8
  store %class.SkImage* null, %class.SkImage** %67, align 8
  %70 = bitcast %class.sk_sp.649* %5 to i64*
  store i64 %69, i64* %70, align 8
  %71 = getelementptr inbounds %class.sk_sp.226, %class.sk_sp.226* %7, i64 0, i32 0
  store %class.SkColorFilter* null, %class.SkColorFilter** %71, align 8
  %72 = bitcast <2 x float>* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #15
  store <2 x float> zeroinitializer, <2 x float>* %8, align 8
  %73 = bitcast <2 x float>* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #15
  store <2 x float> <float 1.000000e+00, float 1.000000e+00>, <2 x float>* %10, align 8
  %74 = getelementptr inbounds %"class.cc::DrawImage", %"class.cc::DrawImage"* %2, i64 0, i32 4
  %75 = load i32, i32* %74, align 4
  call void @_ZN2cc16DecodedDrawImageC1E5sk_spIK7SkImageES1_I13SkColorFilterERK6SkSizeS9_15SkFilterQualityb(%"class.cc::DecodedDrawImage"* nonnull %4, %class.sk_sp.649* nonnull %5, %class.sk_sp.226* nonnull %7, %struct.SkSize* nonnull dereferenceable(8) %9, %struct.SkSize* nonnull dereferenceable(8) %11, i32 %75, i1 zeroext true) #15
  call void @_ZN2cc13ImageProvider12ScopedResultC1ENS_16DecodedDrawImageE(%"class.cc::ImageProvider::ScopedResult"* %0, %"class.cc::DecodedDrawImage"* nonnull %4) #15
  call void @_ZN2cc16DecodedDrawImageD1Ev(%"class.cc::DecodedDrawImage"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #15
  %76 = load %class.SkColorFilter*, %class.SkColorFilter** %71, align 8
  %77 = icmp eq %class.SkColorFilter* %76, null
  br i1 %77, label %88, label %78

78:                                               ; preds = %56
  %79 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %76, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = atomicrmw add i32* %79, i32 -1 acq_rel
  %81 = icmp eq i32 %80, 1
  br i1 %81, label %82, label %88

82:                                               ; preds = %78
  %83 = bitcast %class.SkColorFilter* %76 to %class.SkRefCntBase*
  %84 = bitcast %class.SkColorFilter* %76 to void (%class.SkRefCntBase*)***
  %85 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %84, align 8
  %86 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %85, i64 2
  %87 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %86, align 8
  call void %87(%class.SkRefCntBase* nonnull %83) #15
  br label %88

88:                                               ; preds = %56, %78, %82
  %89 = getelementptr inbounds %class.sk_sp.649, %class.sk_sp.649* %5, i64 0, i32 0
  %90 = load %class.SkImage*, %class.SkImage** %89, align 8
  %91 = icmp eq %class.SkImage* %90, null
  br i1 %91, label %102, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %class.SkImage, %class.SkImage* %90, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = atomicrmw add i32* %93, i32 -1 acq_rel
  %95 = icmp eq i32 %94, 1
  br i1 %95, label %96, label %102

96:                                               ; preds = %92
  %97 = bitcast %class.SkImage* %90 to %class.SkRefCntBase*
  %98 = bitcast %class.SkImage* %90 to void (%class.SkRefCntBase*)***
  %99 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %98, align 8
  %100 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %99, i64 2
  %101 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %100, align 8
  call void %101(%class.SkRefCntBase* nonnull %97) #15
  br label %102

102:                                              ; preds = %88, %92, %96
  %103 = load %class.SkImage*, %class.SkImage** %67, align 8
  %104 = icmp eq %class.SkImage* %103, null
  br i1 %104, label %115, label %105

105:                                              ; preds = %102
  %106 = getelementptr inbounds %class.SkImage, %class.SkImage* %103, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = atomicrmw add i32* %106, i32 -1 acq_rel
  %108 = icmp eq i32 %107, 1
  br i1 %108, label %109, label %115

109:                                              ; preds = %105
  %110 = bitcast %class.SkImage* %103 to %class.SkRefCntBase*
  %111 = bitcast %class.SkImage* %103 to void (%class.SkRefCntBase*)***
  %112 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %111, align 8
  %113 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %112, i64 2
  %114 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %113, align 8
  call void %114(%class.SkRefCntBase* nonnull %110) #15
  br label %115

115:                                              ; preds = %102, %105, %109
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #15
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #11

declare void @_ZNK2cc10PaintImage18GetSkImageForFrameEmi(%class.sk_sp.335* sret, %"class.cc::PaintImage"*, i64, i32) local_unnamed_addr #1

declare void @_ZN2cc16DecodedDrawImageC1E5sk_spIK7SkImageES1_I13SkColorFilterERK6SkSizeS9_15SkFilterQualityb(%"class.cc::DecodedDrawImage"*, %class.sk_sp.649*, %class.sk_sp.226*, %struct.SkSize* dereferenceable(8), %struct.SkSize* dereferenceable(8), i32, i1 zeroext) unnamed_addr #1

declare void @_ZN2cc13ImageProvider12ScopedResultC1ENS_16DecodedDrawImageE(%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::DecodedDrawImage"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2cc16DecodedDrawImageD1Ev(%"class.cc::DecodedDrawImage"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN12SkNWayCanvasD2Ev(%class.SkNWayCanvas*) unnamed_addr #2

declare i32 @_ZNK7SkImage9alphaTypeEv(%class.SkImage*) local_unnamed_addr #1

declare void @_ZNK8SkBitmap10makeShaderE10SkTileModeS0_RK17SkSamplingOptionsPK8SkMatrix(%class.sk_sp.224* sret, %class.SkBitmap*, i32, i32, %struct.SkSamplingOptions* dereferenceable(20), %class.SkMatrix*) local_unnamed_addr #1

declare i64 @_ZNK11SkImageInfo13computeOffsetEiim(%struct.SkImageInfo*, i32, i32, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i64) local_unnamed_addr #1

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #1

declare void @_ZN9SkSurface10MakeRasterERK11SkImageInfomPK14SkSurfaceProps(%class.sk_sp* sret, %struct.SkImageInfo* dereferenceable(24), i64, %class.SkSurfaceProps*) local_unnamed_addr #1

declare void @_ZN8SkCanvas9drawImageEPK7SkImageffRK17SkSamplingOptionsPK7SkPaint(%class.SkCanvas*, %class.SkImage*, float, float, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*) local_unnamed_addr #1

declare i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo*, i64) local_unnamed_addr #1

declare void @_ZN3gfx8Vector2d3AddERKS0_(%"class.gfx::Vector2d"*, %"class.gfx::Vector2d"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #7

; Function Attrs: nounwind
declare void @_ZN2ui11LatencyInfoD1Ev(%"class.ui::LatencyInfo"*) unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

declare void @_ZN4skia19OpacityFilterCanvasC1EP8SkCanvasfb(%"class.skia::OpacityFilterCanvas"*, %class.SkCanvas*, float, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3viz17CopyOutputRequestD1Ev(%"class.viz::CopyOutputRequest"*) unnamed_addr #2

declare void @_ZN8SkBitmapC1EOS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #1

declare void @_ZN3viz24CopyOutputSkBitmapResultC1ENS_16CopyOutputResult6FormatERKN3gfx4RectE8SkBitmap(%"class.viz::CopyOutputSkBitmapResult"*, i8 zeroext, %"class.gfx::Rect"* dereferenceable(16), %class.SkBitmap*) unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #13

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.195"* @_ZNSt3__16vectorINS_4pairIN4util6IdTypeIN3viz20AggregatedRenderPassEmLm0ELm1EEE8SkBitmapEENS_9allocatorIS8_EEE7emplaceIJS8_EEENS_11__wrap_iterIPS8_EENSD_IPKS8_EEDpOT_(%"class.std::__1::vector.193"*, %"struct.std::__1::pair.195"*, %"struct.std::__1::pair.195"* dereferenceable(64)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::__temp_value", align 8
  %5 = alloca %"struct.std::__1::__split_buffer.674", align 8
  %6 = ptrtoint %"struct.std::__1::pair.195"* %1 to i64
  %7 = getelementptr inbounds %"class.std::__1::vector.193", %"class.std::__1::vector.193"* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.193", %"class.std::__1::vector.193"* %0, i64 0, i32 0, i32 1
  %9 = load %"struct.std::__1::pair.195"*, %"struct.std::__1::pair.195"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.193", %"class.std::__1::vector.193"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = load %"struct.std::__1::pair.195"*, %"struct.std::__1::pair.195"** %10, align 8
  %12 = icmp ult %"struct.std::__1::pair.195"* %9, %11
  %13 = ptrtoint %"struct.std::__1::pair.195"* %11 to i64
  br i1 %12, label %14, label %79

14:                                               ; preds = %3
  %15 = icmp eq %"struct.std::__1::pair.195"* %9, %1
  br i1 %15, label %16, label %25

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %2, i64 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %1, i64 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %17, align 8
  store i64 %19, i64* %18, align 8
  %20 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %1, i64 0, i32 1
  %21 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %2, i64 0, i32 1
  tail call void @_ZN8SkBitmapC1EOS_(%class.SkBitmap* %20, %class.SkBitmap* dereferenceable(56) %21) #15
  %22 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %1, i64 1
  %23 = ptrtoint %"struct.std::__1::pair.195"* %22 to i64
  %24 = bitcast %"struct.std::__1::pair.195"** %8 to i64*
  store i64 %23, i64* %24, align 8
  br label %203

25:                                               ; preds = %14
  %26 = getelementptr inbounds %"struct.std::__1::__temp_value", %"struct.std::__1::__temp_value"* %4, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %26) #15
  %27 = getelementptr inbounds %"struct.std::__1::__temp_value", %"struct.std::__1::__temp_value"* %4, i64 0, i32 0, i32 0, i64 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 56, i1 false)
  %28 = getelementptr inbounds %"class.std::__1::vector.193", %"class.std::__1::vector.193"* %0, i64 0, i32 0, i32 2
  %29 = getelementptr inbounds %"struct.std::__1::__temp_value", %"struct.std::__1::__temp_value"* %4, i64 0, i32 1
  %30 = bitcast %"class.std::__1::allocator.207"** %29 to %"class.std::__1::__compressed_pair.204"**
  store %"class.std::__1::__compressed_pair.204"* %28, %"class.std::__1::__compressed_pair.204"** %30, align 8
  %31 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %2, i64 0, i32 0, i32 0, i32 0
  %32 = bitcast %"struct.std::__1::__temp_value"* %4 to i64*
  %33 = load i64, i64* %31, align 8
  store i64 %33, i64* %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__temp_value", %"struct.std::__1::__temp_value"* %4, i64 0, i32 0, i32 0, i64 8
  %35 = bitcast i8* %34 to %class.SkBitmap*
  %36 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %2, i64 0, i32 1
  call void @_ZN8SkBitmapC1EOS_(%class.SkBitmap* %35, %class.SkBitmap* dereferenceable(56) %36) #15
  %37 = load %"struct.std::__1::pair.195"*, %"struct.std::__1::pair.195"** %8, align 8
  %38 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %1, i64 1
  %39 = ptrtoint %"struct.std::__1::pair.195"* %37 to i64
  %40 = ptrtoint %"struct.std::__1::pair.195"* %38 to i64
  %41 = sub i64 %39, %40
  %42 = ashr exact i64 %41, 6
  %43 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %1, i64 %42
  %44 = bitcast %"struct.std::__1::pair.195"** %8 to i64*
  %45 = icmp ult %"struct.std::__1::pair.195"* %43, %37
  br i1 %45, label %63, label %48

46:                                               ; preds = %63
  %47 = ptrtoint %"struct.std::__1::pair.195"* %72 to i64
  br label %48

48:                                               ; preds = %46, %25
  %49 = phi i64 [ %47, %46 ], [ %39, %25 ]
  store i64 %49, i64* %44, align 8
  %50 = icmp eq i64 %41, 0
  br i1 %50, label %74, label %51

51:                                               ; preds = %48, %51
  %52 = phi %"struct.std::__1::pair.195"* [ %55, %51 ], [ %37, %48 ]
  %53 = phi %"struct.std::__1::pair.195"* [ %54, %51 ], [ %43, %48 ]
  %54 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %53, i64 -1
  %55 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %52, i64 -1
  %56 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %54, i64 0, i32 0, i32 0, i32 0
  %57 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %55, i64 0, i32 0, i32 0, i32 0
  %58 = load i64, i64* %56, align 8
  store i64 %58, i64* %57, align 8
  %59 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %53, i64 -1, i32 1
  %60 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %52, i64 -1, i32 1
  %61 = call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSEOS_(%class.SkBitmap* %60, %class.SkBitmap* dereferenceable(56) %59) #15
  %62 = icmp eq %"struct.std::__1::pair.195"* %54, %1
  br i1 %62, label %74, label %51

63:                                               ; preds = %25, %63
  %64 = phi %"struct.std::__1::pair.195"* [ %72, %63 ], [ %37, %25 ]
  %65 = phi %"struct.std::__1::pair.195"* [ %71, %63 ], [ %43, %25 ]
  %66 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %65, i64 0, i32 0, i32 0, i32 0
  %67 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %64, i64 0, i32 0, i32 0, i32 0
  %68 = load i64, i64* %66, align 8
  store i64 %68, i64* %67, align 8
  %69 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %64, i64 0, i32 1
  %70 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %65, i64 0, i32 1
  call void @_ZN8SkBitmapC1EOS_(%class.SkBitmap* %69, %class.SkBitmap* dereferenceable(56) %70) #15
  %71 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %65, i64 1
  %72 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %64, i64 1
  %73 = icmp ult %"struct.std::__1::pair.195"* %71, %37
  br i1 %73, label %63, label %46

74:                                               ; preds = %51, %48
  %75 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %1, i64 0, i32 0, i32 0, i32 0
  %76 = load i64, i64* %32, align 8
  store i64 %76, i64* %75, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %1, i64 0, i32 1
  %78 = call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSEOS_(%class.SkBitmap* %77, %class.SkBitmap* dereferenceable(56) %35) #15
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %35) #15
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %26) #15
  br label %203

79:                                               ; preds = %3
  %80 = ptrtoint %"struct.std::__1::pair.195"* %9 to i64
  %81 = getelementptr inbounds %"class.std::__1::vector.193", %"class.std::__1::vector.193"* %0, i64 0, i32 0, i32 2
  %82 = bitcast %"struct.std::__1::__split_buffer.674"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %82) #15
  %83 = getelementptr inbounds %"struct.std::__1::__split_buffer.674", %"struct.std::__1::__split_buffer.674"* %5, i64 0, i32 0
  %84 = getelementptr inbounds %"struct.std::__1::__split_buffer.674", %"struct.std::__1::__split_buffer.674"* %5, i64 0, i32 1
  %85 = getelementptr inbounds %"struct.std::__1::__split_buffer.674", %"struct.std::__1::__split_buffer.674"* %5, i64 0, i32 2
  %86 = getelementptr inbounds %"struct.std::__1::__split_buffer.674", %"struct.std::__1::__split_buffer.674"* %5, i64 0, i32 3, i32 0, i32 0
  %87 = getelementptr inbounds %"struct.std::__1::__split_buffer.674", %"struct.std::__1::__split_buffer.674"* %5, i64 0, i32 3, i32 1, i32 0
  %88 = bitcast %"struct.std::__1::pair.195"** %8 to i64*
  %89 = bitcast %"class.std::__1::vector.193"* %0 to i64*
  %90 = bitcast %"struct.std::__1::__split_buffer.674"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 -86, i64 40, i1 false)
  %91 = load i64, i64* %89, align 8
  %92 = sub i64 %80, %91
  %93 = ashr exact i64 %92, 6
  %94 = add nsw i64 %93, 1
  %95 = icmp ugt i64 %94, 288230376151711743
  br i1 %95, label %96, label %98

96:                                               ; preds = %79
  %97 = bitcast %"class.std::__1::vector.193"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %97) #17
  unreachable

98:                                               ; preds = %79
  %99 = bitcast %"struct.std::__1::pair.195"** %10 to i64*
  %100 = sub i64 %13, %91
  %101 = ashr exact i64 %100, 6
  %102 = icmp ult i64 %101, 144115188075855871
  br i1 %102, label %107, label %103

103:                                              ; preds = %98
  %104 = sub i64 %6, %91
  %105 = ashr exact i64 %104, 6
  store %"struct.std::__1::pair.195"* null, %"struct.std::__1::pair.195"** %86, align 8
  %106 = bitcast %"class.std::__1::allocator.207"** %87 to %"class.std::__1::__compressed_pair.204"**
  store %"class.std::__1::__compressed_pair.204"* %81, %"class.std::__1::__compressed_pair.204"** %106, align 8
  br label %118

107:                                              ; preds = %98
  %108 = ashr exact i64 %100, 5
  %109 = icmp ult i64 %108, %94
  %110 = select i1 %109, i64 %94, i64 %108
  %111 = sub i64 %6, %91
  %112 = ashr exact i64 %111, 6
  store %"struct.std::__1::pair.195"* null, %"struct.std::__1::pair.195"** %86, align 8
  %113 = bitcast %"class.std::__1::allocator.207"** %87 to %"class.std::__1::__compressed_pair.204"**
  store %"class.std::__1::__compressed_pair.204"* %81, %"class.std::__1::__compressed_pair.204"** %113, align 8
  %114 = icmp eq i64 %110, 0
  br i1 %114, label %124, label %115

115:                                              ; preds = %107
  %116 = icmp ugt i64 %110, 288230376151711743
  br i1 %116, label %117, label %118

117:                                              ; preds = %115
  tail call void @abort() #17
  unreachable

118:                                              ; preds = %103, %115
  %119 = phi i64 [ 288230376151711743, %103 ], [ %110, %115 ]
  %120 = phi i64 [ %105, %103 ], [ %112, %115 ]
  %121 = shl i64 %119, 6
  %122 = tail call i8* @_Znwm(i64 %121) #16
  %123 = bitcast i8* %122 to %"struct.std::__1::pair.195"*
  br label %124

124:                                              ; preds = %107, %118
  %125 = phi i64 [ %120, %118 ], [ %112, %107 ]
  %126 = phi i64 [ %119, %118 ], [ 0, %107 ]
  %127 = phi %"struct.std::__1::pair.195"* [ %123, %118 ], [ null, %107 ]
  store %"struct.std::__1::pair.195"* %127, %"struct.std::__1::pair.195"** %83, align 8
  %128 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %127, i64 %125
  store %"struct.std::__1::pair.195"* %128, %"struct.std::__1::pair.195"** %85, align 8
  store %"struct.std::__1::pair.195"* %128, %"struct.std::__1::pair.195"** %84, align 8
  %129 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %127, i64 %126
  store %"struct.std::__1::pair.195"* %129, %"struct.std::__1::pair.195"** %86, align 8
  call void @_ZNSt3__114__split_bufferINS_4pairIN4util6IdTypeIN3viz20AggregatedRenderPassEmLm0ELm1EEE8SkBitmapEERNS_9allocatorIS8_EEE12emplace_backIJS8_EEEvDpOT_(%"struct.std::__1::__split_buffer.674"* nonnull %5, %"struct.std::__1::pair.195"* dereferenceable(64) %2)
  %130 = load %"struct.std::__1::pair.195"*, %"struct.std::__1::pair.195"** %84, align 8
  %131 = load %"struct.std::__1::pair.195"*, %"struct.std::__1::pair.195"** %7, align 8
  %132 = icmp eq %"struct.std::__1::pair.195"* %131, %1
  br i1 %132, label %145, label %133

133:                                              ; preds = %124, %133
  %134 = phi %"struct.std::__1::pair.195"* [ %143, %133 ], [ %130, %124 ]
  %135 = phi %"struct.std::__1::pair.195"* [ %136, %133 ], [ %1, %124 ]
  %136 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %135, i64 -1
  %137 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %136, i64 0, i32 0, i32 0, i32 0
  %138 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %134, i64 -1, i32 0, i32 0, i32 0
  %139 = load i64, i64* %137, align 8
  store i64 %139, i64* %138, align 8
  %140 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %134, i64 -1, i32 1
  %141 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %135, i64 -1, i32 1
  call void @_ZN8SkBitmapC1EOS_(%class.SkBitmap* %140, %class.SkBitmap* dereferenceable(56) %141) #15
  %142 = load %"struct.std::__1::pair.195"*, %"struct.std::__1::pair.195"** %84, align 8
  %143 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %142, i64 -1
  store %"struct.std::__1::pair.195"* %143, %"struct.std::__1::pair.195"** %84, align 8
  %144 = icmp eq %"struct.std::__1::pair.195"* %136, %131
  br i1 %144, label %145, label %133

145:                                              ; preds = %133, %124
  %146 = phi %"struct.std::__1::pair.195"* [ %130, %124 ], [ %143, %133 ]
  %147 = load %"struct.std::__1::pair.195"*, %"struct.std::__1::pair.195"** %8, align 8
  %148 = icmp eq %"struct.std::__1::pair.195"* %147, %1
  br i1 %148, label %149, label %155

149:                                              ; preds = %145
  %150 = ptrtoint %"struct.std::__1::pair.195"* %147 to i64
  %151 = ptrtoint %"struct.std::__1::pair.195"* %146 to i64
  %152 = bitcast %"struct.std::__1::pair.195"** %84 to i64*
  %153 = bitcast %"struct.std::__1::pair.195"** %85 to i64*
  %154 = load i64, i64* %153, align 8
  br label %175

155:                                              ; preds = %145
  %156 = load %"struct.std::__1::pair.195"*, %"struct.std::__1::pair.195"** %85, align 8
  br label %157

157:                                              ; preds = %157, %155
  %158 = phi %"struct.std::__1::pair.195"* [ %167, %157 ], [ %156, %155 ]
  %159 = phi %"struct.std::__1::pair.195"* [ %165, %157 ], [ %1, %155 ]
  %160 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %159, i64 0, i32 0, i32 0, i32 0
  %161 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %158, i64 0, i32 0, i32 0, i32 0
  %162 = load i64, i64* %160, align 8
  store i64 %162, i64* %161, align 8
  %163 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %158, i64 0, i32 1
  %164 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %159, i64 0, i32 1
  call void @_ZN8SkBitmapC1EOS_(%class.SkBitmap* %163, %class.SkBitmap* dereferenceable(56) %164) #15
  %165 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %159, i64 1
  %166 = load %"struct.std::__1::pair.195"*, %"struct.std::__1::pair.195"** %85, align 8
  %167 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %166, i64 1
  store %"struct.std::__1::pair.195"* %167, %"struct.std::__1::pair.195"** %85, align 8
  %168 = icmp eq %"struct.std::__1::pair.195"* %165, %147
  br i1 %168, label %169, label %157

169:                                              ; preds = %157
  %170 = ptrtoint %"struct.std::__1::pair.195"* %167 to i64
  %171 = bitcast %"struct.std::__1::pair.195"** %84 to i64*
  %172 = load i64, i64* %171, align 8
  %173 = load i64, i64* %88, align 8
  %174 = bitcast %"struct.std::__1::pair.195"** %85 to i64*
  br label %175

175:                                              ; preds = %149, %169
  %176 = phi i64* [ %153, %149 ], [ %174, %169 ]
  %177 = phi i64 [ %154, %149 ], [ %170, %169 ]
  %178 = phi i64 [ %150, %149 ], [ %173, %169 ]
  %179 = phi i64* [ %152, %149 ], [ %171, %169 ]
  %180 = phi i64 [ %151, %149 ], [ %172, %169 ]
  %181 = load i64, i64* %89, align 8
  store i64 %180, i64* %89, align 8
  store i64 %181, i64* %179, align 8
  store i64 %177, i64* %88, align 8
  store i64 %178, i64* %176, align 8
  %182 = load i64, i64* %99, align 8
  %183 = bitcast %"struct.std::__1::pair.195"** %86 to i64*
  %184 = load i64, i64* %183, align 8
  store i64 %184, i64* %99, align 8
  store i64 %182, i64* %183, align 8
  %185 = bitcast %"struct.std::__1::__split_buffer.674"* %5 to i64*
  store i64 %181, i64* %185, align 8
  %186 = inttoptr i64 %181 to %"struct.std::__1::pair.195"*
  %187 = inttoptr i64 %178 to %"struct.std::__1::pair.195"*
  %188 = icmp eq %"struct.std::__1::pair.195"* %187, %186
  br i1 %188, label %197, label %189

189:                                              ; preds = %175, %189
  %190 = phi %"struct.std::__1::pair.195"* [ %193, %189 ], [ %187, %175 ]
  %191 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %190, i64 -1
  store %"struct.std::__1::pair.195"* %191, %"struct.std::__1::pair.195"** %85, align 8
  %192 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %190, i64 -1, i32 1
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %192) #15
  %193 = load %"struct.std::__1::pair.195"*, %"struct.std::__1::pair.195"** %85, align 8
  %194 = icmp eq %"struct.std::__1::pair.195"* %193, %186
  br i1 %194, label %195, label %189

195:                                              ; preds = %189
  %196 = load %"struct.std::__1::pair.195"*, %"struct.std::__1::pair.195"** %83, align 8
  br label %197

197:                                              ; preds = %195, %175
  %198 = phi %"struct.std::__1::pair.195"* [ %196, %195 ], [ %186, %175 ]
  %199 = icmp eq %"struct.std::__1::pair.195"* %198, null
  br i1 %199, label %202, label %200

200:                                              ; preds = %197
  %201 = bitcast %"struct.std::__1::pair.195"* %198 to i8*
  call void @_ZdlPv(i8* %201) #16
  br label %202

202:                                              ; preds = %197, %200
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %82) #15
  br label %203

203:                                              ; preds = %16, %74, %202
  %204 = phi %"struct.std::__1::pair.195"* [ %1, %16 ], [ %1, %74 ], [ %130, %202 ]
  ret %"struct.std::__1::pair.195"* %204
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_4pairIN4util6IdTypeIN3viz20AggregatedRenderPassEmLm0ELm1EEE8SkBitmapEERNS_9allocatorIS8_EEE12emplace_backIJS8_EEEvDpOT_(%"struct.std::__1::__split_buffer.674"*, %"struct.std::__1::pair.195"* dereferenceable(64)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.674", %"struct.std::__1::__split_buffer.674"* %0, i64 0, i32 2
  %4 = load %"struct.std::__1::pair.195"*, %"struct.std::__1::pair.195"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.674", %"struct.std::__1::__split_buffer.674"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.std::__1::pair.195"*, %"struct.std::__1::pair.195"** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair.195"* %4, %6
  %8 = ptrtoint %"struct.std::__1::pair.195"* %6 to i64
  br i1 %7, label %9, label %100

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.674", %"struct.std::__1::__split_buffer.674"* %0, i64 0, i32 1
  %11 = load %"struct.std::__1::pair.195"*, %"struct.std::__1::pair.195"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.674", %"struct.std::__1::__split_buffer.674"* %0, i64 0, i32 0
  %13 = load %"struct.std::__1::pair.195"*, %"struct.std::__1::pair.195"** %12, align 8
  %14 = icmp ugt %"struct.std::__1::pair.195"* %11, %13
  %15 = ptrtoint %"struct.std::__1::pair.195"* %13 to i64
  br i1 %14, label %16, label %42

16:                                               ; preds = %9
  %17 = ptrtoint %"struct.std::__1::pair.195"* %11 to i64
  %18 = sub i64 %17, %15
  %19 = ashr exact i64 %18, 6
  %20 = add nsw i64 %19, 1
  %21 = sdiv i64 %20, -2
  %22 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %11, i64 %21
  %23 = icmp eq %"struct.std::__1::pair.195"* %11, %4
  br i1 %23, label %38, label %24

24:                                               ; preds = %16, %24
  %25 = phi %"struct.std::__1::pair.195"* [ %34, %24 ], [ %22, %16 ]
  %26 = phi %"struct.std::__1::pair.195"* [ %33, %24 ], [ %11, %16 ]
  %27 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %25, i64 0, i32 0, i32 0, i32 0
  %29 = load i64, i64* %27, align 8
  store i64 %29, i64* %28, align 8
  %30 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %26, i64 0, i32 1
  %31 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %25, i64 0, i32 1
  %32 = tail call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSEOS_(%class.SkBitmap* %31, %class.SkBitmap* dereferenceable(56) %30) #15
  %33 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %26, i64 1
  %34 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %25, i64 1
  %35 = icmp eq %"struct.std::__1::pair.195"* %33, %4
  br i1 %35, label %36, label %24

36:                                               ; preds = %24
  %37 = load %"struct.std::__1::pair.195"*, %"struct.std::__1::pair.195"** %10, align 8
  br label %38

38:                                               ; preds = %36, %16
  %39 = phi %"struct.std::__1::pair.195"* [ %4, %16 ], [ %37, %36 ]
  %40 = phi %"struct.std::__1::pair.195"* [ %22, %16 ], [ %34, %36 ]
  store %"struct.std::__1::pair.195"* %40, %"struct.std::__1::pair.195"** %3, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %39, i64 %21
  store %"struct.std::__1::pair.195"* %41, %"struct.std::__1::pair.195"** %10, align 8
  br label %100

42:                                               ; preds = %9
  %43 = bitcast %"struct.std::__1::pair.195"** %5 to i64*
  %44 = bitcast %"struct.std::__1::__split_buffer.674"* %0 to i64*
  %45 = sub i64 %8, %15
  %46 = ashr exact i64 %45, 5
  %47 = icmp eq i64 %45, 0
  %48 = select i1 %47, i64 1, i64 %46
  %49 = icmp ugt i64 %48, 288230376151711743
  br i1 %49, label %50, label %51

50:                                               ; preds = %42
  tail call void @abort() #17
  unreachable

51:                                               ; preds = %42
  %52 = lshr i64 %48, 2
  %53 = shl i64 %48, 6
  %54 = tail call i8* @_Znwm(i64 %53) #16
  %55 = bitcast i8* %54 to %"struct.std::__1::pair.195"*
  %56 = ptrtoint i8* %54 to i64
  %57 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %55, i64 %52
  %58 = ptrtoint %"struct.std::__1::pair.195"* %57 to i64
  %59 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %55, i64 %48
  %60 = ptrtoint %"struct.std::__1::pair.195"* %59 to i64
  %61 = ptrtoint %"struct.std::__1::pair.195"* %11 to i64
  %62 = ptrtoint %"struct.std::__1::pair.195"* %4 to i64
  %63 = sub i64 %62, %61
  %64 = ashr exact i64 %63, 6
  %65 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %57, i64 %64
  %66 = icmp eq i64 %63, 0
  br i1 %66, label %83, label %67

67:                                               ; preds = %51, %67
  %68 = phi %"struct.std::__1::pair.195"* [ %75, %67 ], [ %57, %51 ]
  %69 = phi %"struct.std::__1::pair.195"* [ %76, %67 ], [ %11, %51 ]
  %70 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %69, i64 0, i32 0, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %68, i64 0, i32 0, i32 0, i32 0
  %72 = load i64, i64* %70, align 8
  store i64 %72, i64* %71, align 8
  %73 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %68, i64 0, i32 1
  %74 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %69, i64 0, i32 1
  tail call void @_ZN8SkBitmapC1EOS_(%class.SkBitmap* %73, %class.SkBitmap* dereferenceable(56) %74) #15
  %75 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %68, i64 1
  %76 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %69, i64 1
  %77 = icmp eq %"struct.std::__1::pair.195"* %65, %75
  br i1 %77, label %78, label %67

78:                                               ; preds = %67
  %79 = ptrtoint %"struct.std::__1::pair.195"* %65 to i64
  %80 = load %"struct.std::__1::pair.195"*, %"struct.std::__1::pair.195"** %12, align 8
  %81 = load %"struct.std::__1::pair.195"*, %"struct.std::__1::pair.195"** %10, align 8
  %82 = load %"struct.std::__1::pair.195"*, %"struct.std::__1::pair.195"** %3, align 8
  br label %83

83:                                               ; preds = %51, %78
  %84 = phi %"struct.std::__1::pair.195"* [ %82, %78 ], [ %4, %51 ]
  %85 = phi %"struct.std::__1::pair.195"* [ %81, %78 ], [ %11, %51 ]
  %86 = phi %"struct.std::__1::pair.195"* [ %80, %78 ], [ %13, %51 ]
  %87 = phi i64 [ %79, %78 ], [ %58, %51 ]
  store i64 %56, i64* %44, align 8
  %88 = bitcast %"struct.std::__1::pair.195"** %10 to i64*
  store i64 %58, i64* %88, align 8
  %89 = bitcast %"struct.std::__1::pair.195"** %3 to i64*
  store i64 %87, i64* %89, align 8
  store i64 %60, i64* %43, align 8
  %90 = icmp eq %"struct.std::__1::pair.195"* %84, %85
  br i1 %90, label %96, label %91

91:                                               ; preds = %83, %91
  %92 = phi %"struct.std::__1::pair.195"* [ %93, %91 ], [ %84, %83 ]
  %93 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %92, i64 -1
  %94 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %92, i64 -1, i32 1
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %94) #15
  %95 = icmp eq %"struct.std::__1::pair.195"* %93, %85
  br i1 %95, label %96, label %91

96:                                               ; preds = %91, %83
  %97 = icmp eq %"struct.std::__1::pair.195"* %86, null
  br i1 %97, label %100, label %98

98:                                               ; preds = %96
  %99 = bitcast %"struct.std::__1::pair.195"* %86 to i8*
  tail call void @_ZdlPv(i8* %99) #16
  br label %100

100:                                              ; preds = %98, %96, %38, %2
  %101 = load %"struct.std::__1::pair.195"*, %"struct.std::__1::pair.195"** %3, align 8
  %102 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %1, i64 0, i32 0, i32 0, i32 0
  %103 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %101, i64 0, i32 0, i32 0, i32 0
  %104 = load i64, i64* %102, align 8
  store i64 %104, i64* %103, align 8
  %105 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %101, i64 0, i32 1
  %106 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %1, i64 0, i32 1
  tail call void @_ZN8SkBitmapC1EOS_(%class.SkBitmap* %105, %class.SkBitmap* dereferenceable(56) %106) #15
  %107 = load %"struct.std::__1::pair.195"*, %"struct.std::__1::pair.195"** %3, align 8
  %108 = getelementptr inbounds %"struct.std::__1::pair.195", %"struct.std::__1::pair.195"* %107, i64 1
  store %"struct.std::__1::pair.195"* %108, %"struct.std::__1::pair.195"** %3, align 8
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { cold noreturn nounwind }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind }
attributes #16 = { builtin nounwind }
attributes #17 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
!4 = !{!5, !7}
!5 = distinct !{!5, !6, !"_ZN8SkMatrix14MakeRectToRectERK6SkRectS2_NS_10ScaleToFitE: argument 0"}
!6 = distinct !{!6, !"_ZN8SkMatrix14MakeRectToRectERK6SkRectS2_NS_10ScaleToFitE"}
!7 = distinct !{!7, !8, !"_ZN8SkMatrix10RectToRectERK6SkRectS2_NS_10ScaleToFitE: argument 0"}
!8 = distinct !{!8, !"_ZN8SkMatrix10RectToRectERK6SkRectS2_NS_10ScaleToFitE"}
!9 = !{!10, !12}
!10 = distinct !{!10, !11, !"_ZN8SkMatrix14MakeRectToRectERK6SkRectS2_NS_10ScaleToFitE: argument 0"}
!11 = distinct !{!11, !"_ZN8SkMatrix14MakeRectToRectERK6SkRectS2_NS_10ScaleToFitE"}
!12 = distinct !{!12, !13, !"_ZN8SkMatrix10RectToRectERK6SkRectS2_NS_10ScaleToFitE: argument 0"}
!13 = distinct !{!13, !"_ZN8SkMatrix10RectToRectERK6SkRectS2_NS_10ScaleToFitE"}
!14 = !{!15, !17}
!15 = distinct !{!15, !16, !"_ZN8SkMatrix14MakeRectToRectERK6SkRectS2_NS_10ScaleToFitE: argument 0"}
!16 = distinct !{!16, !"_ZN8SkMatrix14MakeRectToRectERK6SkRectS2_NS_10ScaleToFitE"}
!17 = distinct !{!17, !18, !"_ZN8SkMatrix10RectToRectERK6SkRectS2_NS_10ScaleToFitE: argument 0"}
!18 = distinct !{!18, !"_ZN8SkMatrix10RectToRectERK6SkRectS2_NS_10ScaleToFitE"}
!19 = !{!20, !22}
!20 = distinct !{!20, !21, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!21 = distinct !{!21, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!22 = distinct !{!22, !23, !"_ZN11SkImageInfo13MakeN32PremulEii5sk_spI12SkColorSpaceE: argument 0"}
!23 = distinct !{!23, !"_ZN11SkImageInfo13MakeN32PremulEii5sk_spI12SkColorSpaceE"}
!24 = !{!"branch_weights", i32 1, i32 2000}
!25 = !{!26, !28}
!26 = distinct !{!26, !27, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!27 = distinct !{!27, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!28 = distinct !{!28, !29, !"_ZN11SkImageInfo13MakeN32PremulEii5sk_spI12SkColorSpaceE: argument 0"}
!29 = distinct !{!29, !"_ZN11SkImageInfo13MakeN32PremulEii5sk_spI12SkColorSpaceE"}
!30 = !{!31, !33}
!31 = distinct !{!31, !32, !"_ZN11SkImageInfo4MakeE7SkISizeRK11SkColorInfo: argument 0"}
!32 = distinct !{!32, !"_ZN11SkImageInfo4MakeE7SkISizeRK11SkColorInfo"}
!33 = distinct !{!33, !34, !"_ZNK11SkImageInfo6makeWHEii: argument 0"}
!34 = distinct !{!34, !"_ZNK11SkImageInfo6makeWHEii"}
!35 = !{!36, !38}
!36 = distinct !{!36, !37, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!37 = distinct !{!37, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!38 = distinct !{!38, !39, !"_ZN11SkImageInfo13MakeN32PremulEii5sk_spI12SkColorSpaceE: argument 0"}
!39 = distinct !{!39, !"_ZN11SkImageInfo13MakeN32PremulEii5sk_spI12SkColorSpaceE"}
!40 = !{!41, !43}
!41 = distinct !{!41, !42, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!42 = distinct !{!42, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!43 = distinct !{!43, !44, !"_ZN11SkImageInfo13MakeN32PremulEii5sk_spI12SkColorSpaceE: argument 0"}
!44 = distinct !{!44, !"_ZN11SkImageInfo13MakeN32PremulEii5sk_spI12SkColorSpaceE"}
!45 = !{!46, !48}
!46 = distinct !{!46, !47, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!47 = distinct !{!47, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!48 = distinct !{!48, !49, !"_ZN11SkImageInfo7MakeN32Eii11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!49 = distinct !{!49, !"_ZN11SkImageInfo7MakeN32Eii11SkAlphaType5sk_spI12SkColorSpaceE"}
