; ModuleID = 'gen/services/network/public/mojom/host_resolver.mojom-test-utils.cc'
source_filename = "gen/services/network/public/mojom/host_resolver.mojom-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.network::mojom::ResolveHostHandleAsyncWaiter" = type { %"class.network::mojom::ResolveHostHandle"* }
%"class.network::mojom::ResolveHostHandle" = type { i32 (...)** }
%"class.network::mojom::ResolveHostClientAsyncWaiter" = type { %"class.network::mojom::ResolveHostClient"* }
%"class.network::mojom::ResolveHostClient" = type { i32 (...)** }
%"class.network::mojom::MdnsListenClientAsyncWaiter" = type { %"class.network::mojom::MdnsListenClient"* }
%"class.network::mojom::MdnsListenClient" = type { i32 (...)** }
%"class.network::mojom::HostResolverAsyncWaiter" = type { %"class.network::mojom::HostResolver"* }
%"class.network::mojom::HostResolver" = type { i32 (...)** }
%"class.network::mojom::DnsConfigChangeManagerClientAsyncWaiter" = type { %"class.network::mojom::DnsConfigChangeManagerClient"* }
%"class.network::mojom::DnsConfigChangeManagerClient" = type { i32 (...)** }
%"class.network::mojom::DnsConfigChangeManagerAsyncWaiter" = type { %"class.network::mojom::DnsConfigChangeManager"* }
%"class.network::mojom::DnsConfigChangeManager" = type { i32 (...)** }
%"class.network::mojom::ResolveHostHandleInterceptorForTesting" = type { %"class.network::mojom::ResolveHostHandle" }
%"class.network::mojom::ResolveHostClientInterceptorForTesting" = type { %"class.network::mojom::ResolveHostClient" }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.net::AddressList" }
%"class.net::AddressList" = type { %"class.std::__1::vector", %"class.std::__1::vector.1" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"*, %"class.std::__1::__compressed_pair" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.net::IPEndPoint"* }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.5 }
%union.anon.5 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.net::HostPortPair"*, %"class.net::HostPortPair"*, %"class.std::__1::__compressed_pair.16" }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.net::HostPortPair"* }
%"class.network::mojom::MdnsListenClientInterceptorForTesting" = type { %"class.network::mojom::MdnsListenClient" }
%"class.network::mojom::HostResolverInterceptorForTesting" = type { %"class.network::mojom::HostResolver" }
%"class.net::NetworkIsolationKey" = type { i8, %"class.absl::optional.21", %"class.absl::optional.21" }
%"class.absl::optional.21" = type { %"class.absl::optional_internal::optional_data.22" }
%"class.absl::optional_internal::optional_data.22" = type { %"class.absl::optional_internal::optional_data_base.23" }
%"class.absl::optional_internal::optional_data_base.23" = type { %"class.absl::optional_internal::optional_data_dtor_base.24" }
%"class.absl::optional_internal::optional_data_dtor_base.24" = type { i8, %union.anon.25 }
%union.anon.25 = type { %"class.net::SchemefulSite" }
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.26" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.26" = type { %"class.absl::optional_internal::optional_data.27" }
%"class.absl::optional_internal::optional_data.27" = type { %"class.absl::optional_internal::optional_data_base.28" }
%"class.absl::optional_internal::optional_data_base.28" = type { %"class.absl::optional_internal::optional_data_dtor_base.29" }
%"class.absl::optional_internal::optional_data_dtor_base.29" = type { i8, %union.anon.30 }
%union.anon.30 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.network::mojom::ResolveHostParameters"* }
%"class.network::mojom::ResolveHostParameters" = type { i32, i32, i32, i32, %"class.mojo::PendingReceiver", i8, i8, i8, i32 }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.37, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.39", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.34" }
%"struct.std::__1::__atomic_base.34" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.35 }
%class.scoped_refptr.35 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.36", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.36" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.37 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.38" }>
%"class.base::RefCountedThreadSafe.38" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.39" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__atomic_base.41" }
%"struct.std::__1::__atomic_base.41" = type { %"struct.std::__1::__cxx_atomic_impl.42" }
%"struct.std::__1::__cxx_atomic_impl.42" = type { %"struct.std::__1::__cxx_atomic_base_impl.43" }
%"struct.std::__1::__cxx_atomic_base_impl.43" = type { i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::PendingRemote.44" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::RunLoop" = type { %"class.base::RunLoop::Delegate"*, i32, i8, i8, i8, i8, i8, %class.scoped_refptr.59, %"class.base::WeakPtrFactory" }
%"class.base::RunLoop::Delegate" = type <{ i32 (...)**, %"class.std::__1::stack", %"class.base::ObserverList", i8, [7 x i8] }>
%"class.std::__1::stack" = type { %"class.std::__1::vector.45" }
%"class.std::__1::vector.45" = type { %"class.std::__1::__vector_base.46" }
%"class.std::__1::__vector_base.46" = type { %"class.base::RunLoop"**, %"class.base::RunLoop"**, %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.base::RunLoop"** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.52", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.52" = type { %"class.std::__1::__vector_base.53" }
%"class.std::__1::__vector_base.53" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.54" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.scoped_refptr.59 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.60 }
%class.scoped_refptr.60 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.61", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.61" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.62" }
%"struct.std::__1::atomic.62" = type { %"struct.std::__1::__atomic_base.63" }
%"struct.std::__1::__atomic_base.63" = type { %"struct.std::__1::__atomic_base.64" }
%"struct.std::__1::__atomic_base.64" = type { %"struct.std::__1::__cxx_atomic_impl.65" }
%"struct.std::__1::__cxx_atomic_impl.65" = type { %"struct.std::__1::__cxx_atomic_base_impl.66" }
%"struct.std::__1::__cxx_atomic_base_impl.66" = type { i8 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.network::mojom::DnsConfigChangeManagerClientInterceptorForTesting" = type { %"class.network::mojom::DnsConfigChangeManagerClient" }
%"class.network::mojom::DnsConfigChangeManagerInterceptorForTesting" = type { %"class.network::mojom::DnsConfigChangeManager" }
%"class.mojo::PendingRemote.67" = type { %"struct.mojo::internal::PendingRemoteState" }

$_ZN7network5mojom17ResolveHostHandleD2Ev = comdat any

$_ZN7network5mojom38ResolveHostHandleInterceptorForTestingD0Ev = comdat any

$_ZN7network5mojom17ResolveHostClientD2Ev = comdat any

$_ZN7network5mojom38ResolveHostClientInterceptorForTestingD0Ev = comdat any

$_ZN7network5mojom16MdnsListenClientD2Ev = comdat any

$_ZN7network5mojom37MdnsListenClientInterceptorForTestingD0Ev = comdat any

$_ZN7network5mojom12HostResolverD2Ev = comdat any

$_ZN7network5mojom33HostResolverInterceptorForTestingD0Ev = comdat any

$_ZN7network5mojom28DnsConfigChangeManagerClientD2Ev = comdat any

$_ZN7network5mojom49DnsConfigChangeManagerClientInterceptorForTestingD0Ev = comdat any

$_ZN7network5mojom22DnsConfigChangeManagerD2Ev = comdat any

$_ZN7network5mojom43DnsConfigChangeManagerInterceptorForTestingD0Ev = comdat any

@.str = private unnamed_addr constant [11 x i8] c"MdnsListen\00", align 1
@.str.1 = private unnamed_addr constant [68 x i8] c"gen/services/network/public/mojom/host_resolver.mojom-test-utils.cc\00", align 1
@_ZTVN7network5mojom38ResolveHostHandleInterceptorForTestingE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.network::mojom::ResolveHostHandle"*)* @_ZN7network5mojom17ResolveHostHandleD2Ev to i8*), i8* bitcast (void (%"class.network::mojom::ResolveHostHandleInterceptorForTesting"*)* @_ZN7network5mojom38ResolveHostHandleInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.network::mojom::ResolveHostHandleInterceptorForTesting"*, i32)* @_ZN7network5mojom38ResolveHostHandleInterceptorForTesting6CancelEi to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN7network5mojom38ResolveHostClientInterceptorForTestingE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.network::mojom::ResolveHostClient"*)* @_ZN7network5mojom17ResolveHostClientD2Ev to i8*), i8* bitcast (void (%"class.network::mojom::ResolveHostClientInterceptorForTesting"*)* @_ZN7network5mojom38ResolveHostClientInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.network::mojom::ResolveHostClientInterceptorForTesting"*, i32, %"struct.net::ResolveErrorInfo"*, %"class.absl::optional"*)* @_ZN7network5mojom38ResolveHostClientInterceptorForTesting10OnCompleteEiRKN3net16ResolveErrorInfoERKN4absl8optionalINS2_11AddressListEEE to i8*), i8* bitcast (void (%"class.network::mojom::ResolveHostClientInterceptorForTesting"*, %"class.std::__1::vector.1"*)* @_ZN7network5mojom38ResolveHostClientInterceptorForTesting13OnTextResultsERKNSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEE to i8*), i8* bitcast (void (%"class.network::mojom::ResolveHostClientInterceptorForTesting"*, %"class.std::__1::vector.14"*)* @_ZN7network5mojom38ResolveHostClientInterceptorForTesting17OnHostnameResultsERKNSt3__16vectorIN3net12HostPortPairENS2_9allocatorIS5_EEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN7network5mojom37MdnsListenClientInterceptorForTestingE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.network::mojom::MdnsListenClient"*)* @_ZN7network5mojom16MdnsListenClientD2Ev to i8*), i8* bitcast (void (%"class.network::mojom::MdnsListenClientInterceptorForTesting"*)* @_ZN7network5mojom37MdnsListenClientInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.network::mojom::MdnsListenClientInterceptorForTesting"*, i32, i32, %"class.net::IPEndPoint"*)* @_ZN7network5mojom37MdnsListenClientInterceptorForTesting15OnAddressResultEN3net12HostResolver12MdnsListener8Delegate10UpdateTypeENS2_12DnsQueryTypeERKNS2_10IPEndPointE to i8*), i8* bitcast (void (%"class.network::mojom::MdnsListenClientInterceptorForTesting"*, i32, i32, %"class.std::__1::vector.1"*)* @_ZN7network5mojom37MdnsListenClientInterceptorForTesting12OnTextResultEN3net12HostResolver12MdnsListener8Delegate10UpdateTypeENS2_12DnsQueryTypeERKNSt3__16vectorINS8_12basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEENSD_ISF_EEEE to i8*), i8* bitcast (void (%"class.network::mojom::MdnsListenClientInterceptorForTesting"*, i32, i32, %"class.net::HostPortPair"*)* @_ZN7network5mojom37MdnsListenClientInterceptorForTesting16OnHostnameResultEN3net12HostResolver12MdnsListener8Delegate10UpdateTypeENS2_12DnsQueryTypeERKNS2_12HostPortPairE to i8*), i8* bitcast (void (%"class.network::mojom::MdnsListenClientInterceptorForTesting"*, i32, i32)* @_ZN7network5mojom37MdnsListenClientInterceptorForTesting17OnUnhandledResultEN3net12HostResolver12MdnsListener8Delegate10UpdateTypeENS2_12DnsQueryTypeE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN7network5mojom33HostResolverInterceptorForTestingE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.network::mojom::HostResolver"*)* @_ZN7network5mojom12HostResolverD2Ev to i8*), i8* bitcast (void (%"class.network::mojom::HostResolverInterceptorForTesting"*)* @_ZN7network5mojom33HostResolverInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.network::mojom::HostResolverInterceptorForTesting"*, %"class.net::HostPortPair"*, %"class.net::NetworkIsolationKey"*, %"class.mojo::StructPtr"*, %"class.mojo::PendingRemote"*)* @_ZN7network5mojom33HostResolverInterceptorForTesting11ResolveHostERKN3net12HostPortPairERKNS2_19NetworkIsolationKeyEN4mojo9StructPtrINS0_21ResolveHostParametersEEENS9_13PendingRemoteINS0_17ResolveHostClientEEE to i8*), i8* bitcast (void (%"class.network::mojom::HostResolverInterceptorForTesting"*, %"class.net::HostPortPair"*, i32, %"class.mojo::PendingRemote.44"*, %"class.base::OnceCallback"*)* @_ZN7network5mojom33HostResolverInterceptorForTesting10MdnsListenERKN3net12HostPortPairENS2_12DnsQueryTypeEN4mojo13PendingRemoteINS0_16MdnsListenClientEEEN4base12OnceCallbackIFviEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN7network5mojom49DnsConfigChangeManagerClientInterceptorForTestingE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.network::mojom::DnsConfigChangeManagerClient"*)* @_ZN7network5mojom28DnsConfigChangeManagerClientD2Ev to i8*), i8* bitcast (void (%"class.network::mojom::DnsConfigChangeManagerClientInterceptorForTesting"*)* @_ZN7network5mojom49DnsConfigChangeManagerClientInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.network::mojom::DnsConfigChangeManagerClientInterceptorForTesting"*)* @_ZN7network5mojom49DnsConfigChangeManagerClientInterceptorForTesting18OnDnsConfigChangedEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN7network5mojom43DnsConfigChangeManagerInterceptorForTestingE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.network::mojom::DnsConfigChangeManager"*)* @_ZN7network5mojom22DnsConfigChangeManagerD2Ev to i8*), i8* bitcast (void (%"class.network::mojom::DnsConfigChangeManagerInterceptorForTesting"*)* @_ZN7network5mojom43DnsConfigChangeManagerInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.network::mojom::DnsConfigChangeManagerInterceptorForTesting"*, %"class.mojo::PendingRemote.67"*)* @_ZN7network5mojom43DnsConfigChangeManagerInterceptorForTesting20RequestNotificationsEN4mojo13PendingRemoteINS0_28DnsConfigChangeManagerClientEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN7network5mojom28ResolveHostHandleAsyncWaiterC1EPNS0_17ResolveHostHandleE = hidden unnamed_addr alias void (%"class.network::mojom::ResolveHostHandleAsyncWaiter"*, %"class.network::mojom::ResolveHostHandle"*), void (%"class.network::mojom::ResolveHostHandleAsyncWaiter"*, %"class.network::mojom::ResolveHostHandle"*)* @_ZN7network5mojom28ResolveHostHandleAsyncWaiterC2EPNS0_17ResolveHostHandleE
@_ZN7network5mojom28ResolveHostHandleAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.network::mojom::ResolveHostHandleAsyncWaiter"*), void (%"class.network::mojom::ResolveHostHandleAsyncWaiter"*)* @_ZN7network5mojom28ResolveHostHandleAsyncWaiterD2Ev
@_ZN7network5mojom28ResolveHostClientAsyncWaiterC1EPNS0_17ResolveHostClientE = hidden unnamed_addr alias void (%"class.network::mojom::ResolveHostClientAsyncWaiter"*, %"class.network::mojom::ResolveHostClient"*), void (%"class.network::mojom::ResolveHostClientAsyncWaiter"*, %"class.network::mojom::ResolveHostClient"*)* @_ZN7network5mojom28ResolveHostClientAsyncWaiterC2EPNS0_17ResolveHostClientE
@_ZN7network5mojom28ResolveHostClientAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.network::mojom::ResolveHostClientAsyncWaiter"*), void (%"class.network::mojom::ResolveHostClientAsyncWaiter"*)* @_ZN7network5mojom28ResolveHostClientAsyncWaiterD2Ev
@_ZN7network5mojom27MdnsListenClientAsyncWaiterC1EPNS0_16MdnsListenClientE = hidden unnamed_addr alias void (%"class.network::mojom::MdnsListenClientAsyncWaiter"*, %"class.network::mojom::MdnsListenClient"*), void (%"class.network::mojom::MdnsListenClientAsyncWaiter"*, %"class.network::mojom::MdnsListenClient"*)* @_ZN7network5mojom27MdnsListenClientAsyncWaiterC2EPNS0_16MdnsListenClientE
@_ZN7network5mojom27MdnsListenClientAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.network::mojom::MdnsListenClientAsyncWaiter"*), void (%"class.network::mojom::MdnsListenClientAsyncWaiter"*)* @_ZN7network5mojom27MdnsListenClientAsyncWaiterD2Ev
@_ZN7network5mojom23HostResolverAsyncWaiterC1EPNS0_12HostResolverE = hidden unnamed_addr alias void (%"class.network::mojom::HostResolverAsyncWaiter"*, %"class.network::mojom::HostResolver"*), void (%"class.network::mojom::HostResolverAsyncWaiter"*, %"class.network::mojom::HostResolver"*)* @_ZN7network5mojom23HostResolverAsyncWaiterC2EPNS0_12HostResolverE
@_ZN7network5mojom23HostResolverAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.network::mojom::HostResolverAsyncWaiter"*), void (%"class.network::mojom::HostResolverAsyncWaiter"*)* @_ZN7network5mojom23HostResolverAsyncWaiterD2Ev
@_ZN7network5mojom39DnsConfigChangeManagerClientAsyncWaiterC1EPNS0_28DnsConfigChangeManagerClientE = hidden unnamed_addr alias void (%"class.network::mojom::DnsConfigChangeManagerClientAsyncWaiter"*, %"class.network::mojom::DnsConfigChangeManagerClient"*), void (%"class.network::mojom::DnsConfigChangeManagerClientAsyncWaiter"*, %"class.network::mojom::DnsConfigChangeManagerClient"*)* @_ZN7network5mojom39DnsConfigChangeManagerClientAsyncWaiterC2EPNS0_28DnsConfigChangeManagerClientE
@_ZN7network5mojom39DnsConfigChangeManagerClientAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.network::mojom::DnsConfigChangeManagerClientAsyncWaiter"*), void (%"class.network::mojom::DnsConfigChangeManagerClientAsyncWaiter"*)* @_ZN7network5mojom39DnsConfigChangeManagerClientAsyncWaiterD2Ev
@_ZN7network5mojom33DnsConfigChangeManagerAsyncWaiterC1EPNS0_22DnsConfigChangeManagerE = hidden unnamed_addr alias void (%"class.network::mojom::DnsConfigChangeManagerAsyncWaiter"*, %"class.network::mojom::DnsConfigChangeManager"*), void (%"class.network::mojom::DnsConfigChangeManagerAsyncWaiter"*, %"class.network::mojom::DnsConfigChangeManager"*)* @_ZN7network5mojom33DnsConfigChangeManagerAsyncWaiterC2EPNS0_22DnsConfigChangeManagerE
@_ZN7network5mojom33DnsConfigChangeManagerAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.network::mojom::DnsConfigChangeManagerAsyncWaiter"*), void (%"class.network::mojom::DnsConfigChangeManagerAsyncWaiter"*)* @_ZN7network5mojom33DnsConfigChangeManagerAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom38ResolveHostHandleInterceptorForTesting6CancelEi(%"class.network::mojom::ResolveHostHandleInterceptorForTesting"*, i32) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.network::mojom::ResolveHostHandleInterceptorForTesting"* %0 to %"class.network::mojom::ResolveHostHandle"* (%"class.network::mojom::ResolveHostHandleInterceptorForTesting"*)***
  %4 = load %"class.network::mojom::ResolveHostHandle"* (%"class.network::mojom::ResolveHostHandleInterceptorForTesting"*)**, %"class.network::mojom::ResolveHostHandle"* (%"class.network::mojom::ResolveHostHandleInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.network::mojom::ResolveHostHandle"* (%"class.network::mojom::ResolveHostHandleInterceptorForTesting"*)*, %"class.network::mojom::ResolveHostHandle"* (%"class.network::mojom::ResolveHostHandleInterceptorForTesting"*)** %4, i64 3
  %6 = load %"class.network::mojom::ResolveHostHandle"* (%"class.network::mojom::ResolveHostHandleInterceptorForTesting"*)*, %"class.network::mojom::ResolveHostHandle"* (%"class.network::mojom::ResolveHostHandleInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.network::mojom::ResolveHostHandle"* %6(%"class.network::mojom::ResolveHostHandleInterceptorForTesting"* %0) #10
  %8 = bitcast %"class.network::mojom::ResolveHostHandle"* %7 to void (%"class.network::mojom::ResolveHostHandle"*, i32)***
  %9 = load void (%"class.network::mojom::ResolveHostHandle"*, i32)**, void (%"class.network::mojom::ResolveHostHandle"*, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.network::mojom::ResolveHostHandle"*, i32)*, void (%"class.network::mojom::ResolveHostHandle"*, i32)** %9, i64 2
  %11 = load void (%"class.network::mojom::ResolveHostHandle"*, i32)*, void (%"class.network::mojom::ResolveHostHandle"*, i32)** %10, align 8
  tail call void %11(%"class.network::mojom::ResolveHostHandle"* %7, i32 %1) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7network5mojom28ResolveHostHandleAsyncWaiterC2EPNS0_17ResolveHostHandleE(%"class.network::mojom::ResolveHostHandleAsyncWaiter"* nocapture, %"class.network::mojom::ResolveHostHandle"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.network::mojom::ResolveHostHandleAsyncWaiter", %"class.network::mojom::ResolveHostHandleAsyncWaiter"* %0, i64 0, i32 0
  store %"class.network::mojom::ResolveHostHandle"* %1, %"class.network::mojom::ResolveHostHandle"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7network5mojom28ResolveHostHandleAsyncWaiterD2Ev(%"class.network::mojom::ResolveHostHandleAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom38ResolveHostClientInterceptorForTesting10OnCompleteEiRKN3net16ResolveErrorInfoERKN4absl8optionalINS2_11AddressListEEE(%"class.network::mojom::ResolveHostClientInterceptorForTesting"*, i32, %"struct.net::ResolveErrorInfo"* dereferenceable(8), %"class.absl::optional"* dereferenceable(56)) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.network::mojom::ResolveHostClientInterceptorForTesting"* %0 to %"class.network::mojom::ResolveHostClient"* (%"class.network::mojom::ResolveHostClientInterceptorForTesting"*)***
  %6 = load %"class.network::mojom::ResolveHostClient"* (%"class.network::mojom::ResolveHostClientInterceptorForTesting"*)**, %"class.network::mojom::ResolveHostClient"* (%"class.network::mojom::ResolveHostClientInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.network::mojom::ResolveHostClient"* (%"class.network::mojom::ResolveHostClientInterceptorForTesting"*)*, %"class.network::mojom::ResolveHostClient"* (%"class.network::mojom::ResolveHostClientInterceptorForTesting"*)** %6, i64 5
  %8 = load %"class.network::mojom::ResolveHostClient"* (%"class.network::mojom::ResolveHostClientInterceptorForTesting"*)*, %"class.network::mojom::ResolveHostClient"* (%"class.network::mojom::ResolveHostClientInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.network::mojom::ResolveHostClient"* %8(%"class.network::mojom::ResolveHostClientInterceptorForTesting"* %0) #10
  %10 = bitcast %"class.network::mojom::ResolveHostClient"* %9 to void (%"class.network::mojom::ResolveHostClient"*, i32, %"struct.net::ResolveErrorInfo"*, %"class.absl::optional"*)***
  %11 = load void (%"class.network::mojom::ResolveHostClient"*, i32, %"struct.net::ResolveErrorInfo"*, %"class.absl::optional"*)**, void (%"class.network::mojom::ResolveHostClient"*, i32, %"struct.net::ResolveErrorInfo"*, %"class.absl::optional"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.network::mojom::ResolveHostClient"*, i32, %"struct.net::ResolveErrorInfo"*, %"class.absl::optional"*)*, void (%"class.network::mojom::ResolveHostClient"*, i32, %"struct.net::ResolveErrorInfo"*, %"class.absl::optional"*)** %11, i64 2
  %13 = load void (%"class.network::mojom::ResolveHostClient"*, i32, %"struct.net::ResolveErrorInfo"*, %"class.absl::optional"*)*, void (%"class.network::mojom::ResolveHostClient"*, i32, %"struct.net::ResolveErrorInfo"*, %"class.absl::optional"*)** %12, align 8
  tail call void %13(%"class.network::mojom::ResolveHostClient"* %9, i32 %1, %"struct.net::ResolveErrorInfo"* dereferenceable(8) %2, %"class.absl::optional"* dereferenceable(56) %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom38ResolveHostClientInterceptorForTesting13OnTextResultsERKNSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEE(%"class.network::mojom::ResolveHostClientInterceptorForTesting"*, %"class.std::__1::vector.1"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.network::mojom::ResolveHostClientInterceptorForTesting"* %0 to %"class.network::mojom::ResolveHostClient"* (%"class.network::mojom::ResolveHostClientInterceptorForTesting"*)***
  %4 = load %"class.network::mojom::ResolveHostClient"* (%"class.network::mojom::ResolveHostClientInterceptorForTesting"*)**, %"class.network::mojom::ResolveHostClient"* (%"class.network::mojom::ResolveHostClientInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.network::mojom::ResolveHostClient"* (%"class.network::mojom::ResolveHostClientInterceptorForTesting"*)*, %"class.network::mojom::ResolveHostClient"* (%"class.network::mojom::ResolveHostClientInterceptorForTesting"*)** %4, i64 5
  %6 = load %"class.network::mojom::ResolveHostClient"* (%"class.network::mojom::ResolveHostClientInterceptorForTesting"*)*, %"class.network::mojom::ResolveHostClient"* (%"class.network::mojom::ResolveHostClientInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.network::mojom::ResolveHostClient"* %6(%"class.network::mojom::ResolveHostClientInterceptorForTesting"* %0) #10
  %8 = bitcast %"class.network::mojom::ResolveHostClient"* %7 to void (%"class.network::mojom::ResolveHostClient"*, %"class.std::__1::vector.1"*)***
  %9 = load void (%"class.network::mojom::ResolveHostClient"*, %"class.std::__1::vector.1"*)**, void (%"class.network::mojom::ResolveHostClient"*, %"class.std::__1::vector.1"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.network::mojom::ResolveHostClient"*, %"class.std::__1::vector.1"*)*, void (%"class.network::mojom::ResolveHostClient"*, %"class.std::__1::vector.1"*)** %9, i64 3
  %11 = load void (%"class.network::mojom::ResolveHostClient"*, %"class.std::__1::vector.1"*)*, void (%"class.network::mojom::ResolveHostClient"*, %"class.std::__1::vector.1"*)** %10, align 8
  tail call void %11(%"class.network::mojom::ResolveHostClient"* %7, %"class.std::__1::vector.1"* dereferenceable(24) %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom38ResolveHostClientInterceptorForTesting17OnHostnameResultsERKNSt3__16vectorIN3net12HostPortPairENS2_9allocatorIS5_EEEE(%"class.network::mojom::ResolveHostClientInterceptorForTesting"*, %"class.std::__1::vector.14"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.network::mojom::ResolveHostClientInterceptorForTesting"* %0 to %"class.network::mojom::ResolveHostClient"* (%"class.network::mojom::ResolveHostClientInterceptorForTesting"*)***
  %4 = load %"class.network::mojom::ResolveHostClient"* (%"class.network::mojom::ResolveHostClientInterceptorForTesting"*)**, %"class.network::mojom::ResolveHostClient"* (%"class.network::mojom::ResolveHostClientInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.network::mojom::ResolveHostClient"* (%"class.network::mojom::ResolveHostClientInterceptorForTesting"*)*, %"class.network::mojom::ResolveHostClient"* (%"class.network::mojom::ResolveHostClientInterceptorForTesting"*)** %4, i64 5
  %6 = load %"class.network::mojom::ResolveHostClient"* (%"class.network::mojom::ResolveHostClientInterceptorForTesting"*)*, %"class.network::mojom::ResolveHostClient"* (%"class.network::mojom::ResolveHostClientInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.network::mojom::ResolveHostClient"* %6(%"class.network::mojom::ResolveHostClientInterceptorForTesting"* %0) #10
  %8 = bitcast %"class.network::mojom::ResolveHostClient"* %7 to void (%"class.network::mojom::ResolveHostClient"*, %"class.std::__1::vector.14"*)***
  %9 = load void (%"class.network::mojom::ResolveHostClient"*, %"class.std::__1::vector.14"*)**, void (%"class.network::mojom::ResolveHostClient"*, %"class.std::__1::vector.14"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.network::mojom::ResolveHostClient"*, %"class.std::__1::vector.14"*)*, void (%"class.network::mojom::ResolveHostClient"*, %"class.std::__1::vector.14"*)** %9, i64 4
  %11 = load void (%"class.network::mojom::ResolveHostClient"*, %"class.std::__1::vector.14"*)*, void (%"class.network::mojom::ResolveHostClient"*, %"class.std::__1::vector.14"*)** %10, align 8
  tail call void %11(%"class.network::mojom::ResolveHostClient"* %7, %"class.std::__1::vector.14"* dereferenceable(24) %1) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7network5mojom28ResolveHostClientAsyncWaiterC2EPNS0_17ResolveHostClientE(%"class.network::mojom::ResolveHostClientAsyncWaiter"* nocapture, %"class.network::mojom::ResolveHostClient"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.network::mojom::ResolveHostClientAsyncWaiter", %"class.network::mojom::ResolveHostClientAsyncWaiter"* %0, i64 0, i32 0
  store %"class.network::mojom::ResolveHostClient"* %1, %"class.network::mojom::ResolveHostClient"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7network5mojom28ResolveHostClientAsyncWaiterD2Ev(%"class.network::mojom::ResolveHostClientAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom37MdnsListenClientInterceptorForTesting15OnAddressResultEN3net12HostResolver12MdnsListener8Delegate10UpdateTypeENS2_12DnsQueryTypeERKNS2_10IPEndPointE(%"class.network::mojom::MdnsListenClientInterceptorForTesting"*, i32, i32, %"class.net::IPEndPoint"* dereferenceable(20)) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.network::mojom::MdnsListenClientInterceptorForTesting"* %0 to %"class.network::mojom::MdnsListenClient"* (%"class.network::mojom::MdnsListenClientInterceptorForTesting"*)***
  %6 = load %"class.network::mojom::MdnsListenClient"* (%"class.network::mojom::MdnsListenClientInterceptorForTesting"*)**, %"class.network::mojom::MdnsListenClient"* (%"class.network::mojom::MdnsListenClientInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.network::mojom::MdnsListenClient"* (%"class.network::mojom::MdnsListenClientInterceptorForTesting"*)*, %"class.network::mojom::MdnsListenClient"* (%"class.network::mojom::MdnsListenClientInterceptorForTesting"*)** %6, i64 6
  %8 = load %"class.network::mojom::MdnsListenClient"* (%"class.network::mojom::MdnsListenClientInterceptorForTesting"*)*, %"class.network::mojom::MdnsListenClient"* (%"class.network::mojom::MdnsListenClientInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.network::mojom::MdnsListenClient"* %8(%"class.network::mojom::MdnsListenClientInterceptorForTesting"* %0) #10
  %10 = bitcast %"class.network::mojom::MdnsListenClient"* %9 to void (%"class.network::mojom::MdnsListenClient"*, i32, i32, %"class.net::IPEndPoint"*)***
  %11 = load void (%"class.network::mojom::MdnsListenClient"*, i32, i32, %"class.net::IPEndPoint"*)**, void (%"class.network::mojom::MdnsListenClient"*, i32, i32, %"class.net::IPEndPoint"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.network::mojom::MdnsListenClient"*, i32, i32, %"class.net::IPEndPoint"*)*, void (%"class.network::mojom::MdnsListenClient"*, i32, i32, %"class.net::IPEndPoint"*)** %11, i64 2
  %13 = load void (%"class.network::mojom::MdnsListenClient"*, i32, i32, %"class.net::IPEndPoint"*)*, void (%"class.network::mojom::MdnsListenClient"*, i32, i32, %"class.net::IPEndPoint"*)** %12, align 8
  tail call void %13(%"class.network::mojom::MdnsListenClient"* %9, i32 %1, i32 %2, %"class.net::IPEndPoint"* dereferenceable(20) %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom37MdnsListenClientInterceptorForTesting12OnTextResultEN3net12HostResolver12MdnsListener8Delegate10UpdateTypeENS2_12DnsQueryTypeERKNSt3__16vectorINS8_12basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEENSD_ISF_EEEE(%"class.network::mojom::MdnsListenClientInterceptorForTesting"*, i32, i32, %"class.std::__1::vector.1"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.network::mojom::MdnsListenClientInterceptorForTesting"* %0 to %"class.network::mojom::MdnsListenClient"* (%"class.network::mojom::MdnsListenClientInterceptorForTesting"*)***
  %6 = load %"class.network::mojom::MdnsListenClient"* (%"class.network::mojom::MdnsListenClientInterceptorForTesting"*)**, %"class.network::mojom::MdnsListenClient"* (%"class.network::mojom::MdnsListenClientInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.network::mojom::MdnsListenClient"* (%"class.network::mojom::MdnsListenClientInterceptorForTesting"*)*, %"class.network::mojom::MdnsListenClient"* (%"class.network::mojom::MdnsListenClientInterceptorForTesting"*)** %6, i64 6
  %8 = load %"class.network::mojom::MdnsListenClient"* (%"class.network::mojom::MdnsListenClientInterceptorForTesting"*)*, %"class.network::mojom::MdnsListenClient"* (%"class.network::mojom::MdnsListenClientInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.network::mojom::MdnsListenClient"* %8(%"class.network::mojom::MdnsListenClientInterceptorForTesting"* %0) #10
  %10 = bitcast %"class.network::mojom::MdnsListenClient"* %9 to void (%"class.network::mojom::MdnsListenClient"*, i32, i32, %"class.std::__1::vector.1"*)***
  %11 = load void (%"class.network::mojom::MdnsListenClient"*, i32, i32, %"class.std::__1::vector.1"*)**, void (%"class.network::mojom::MdnsListenClient"*, i32, i32, %"class.std::__1::vector.1"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.network::mojom::MdnsListenClient"*, i32, i32, %"class.std::__1::vector.1"*)*, void (%"class.network::mojom::MdnsListenClient"*, i32, i32, %"class.std::__1::vector.1"*)** %11, i64 3
  %13 = load void (%"class.network::mojom::MdnsListenClient"*, i32, i32, %"class.std::__1::vector.1"*)*, void (%"class.network::mojom::MdnsListenClient"*, i32, i32, %"class.std::__1::vector.1"*)** %12, align 8
  tail call void %13(%"class.network::mojom::MdnsListenClient"* %9, i32 %1, i32 %2, %"class.std::__1::vector.1"* dereferenceable(24) %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom37MdnsListenClientInterceptorForTesting16OnHostnameResultEN3net12HostResolver12MdnsListener8Delegate10UpdateTypeENS2_12DnsQueryTypeERKNS2_12HostPortPairE(%"class.network::mojom::MdnsListenClientInterceptorForTesting"*, i32, i32, %"class.net::HostPortPair"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.network::mojom::MdnsListenClientInterceptorForTesting"* %0 to %"class.network::mojom::MdnsListenClient"* (%"class.network::mojom::MdnsListenClientInterceptorForTesting"*)***
  %6 = load %"class.network::mojom::MdnsListenClient"* (%"class.network::mojom::MdnsListenClientInterceptorForTesting"*)**, %"class.network::mojom::MdnsListenClient"* (%"class.network::mojom::MdnsListenClientInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.network::mojom::MdnsListenClient"* (%"class.network::mojom::MdnsListenClientInterceptorForTesting"*)*, %"class.network::mojom::MdnsListenClient"* (%"class.network::mojom::MdnsListenClientInterceptorForTesting"*)** %6, i64 6
  %8 = load %"class.network::mojom::MdnsListenClient"* (%"class.network::mojom::MdnsListenClientInterceptorForTesting"*)*, %"class.network::mojom::MdnsListenClient"* (%"class.network::mojom::MdnsListenClientInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.network::mojom::MdnsListenClient"* %8(%"class.network::mojom::MdnsListenClientInterceptorForTesting"* %0) #10
  %10 = bitcast %"class.network::mojom::MdnsListenClient"* %9 to void (%"class.network::mojom::MdnsListenClient"*, i32, i32, %"class.net::HostPortPair"*)***
  %11 = load void (%"class.network::mojom::MdnsListenClient"*, i32, i32, %"class.net::HostPortPair"*)**, void (%"class.network::mojom::MdnsListenClient"*, i32, i32, %"class.net::HostPortPair"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.network::mojom::MdnsListenClient"*, i32, i32, %"class.net::HostPortPair"*)*, void (%"class.network::mojom::MdnsListenClient"*, i32, i32, %"class.net::HostPortPair"*)** %11, i64 4
  %13 = load void (%"class.network::mojom::MdnsListenClient"*, i32, i32, %"class.net::HostPortPair"*)*, void (%"class.network::mojom::MdnsListenClient"*, i32, i32, %"class.net::HostPortPair"*)** %12, align 8
  tail call void %13(%"class.network::mojom::MdnsListenClient"* %9, i32 %1, i32 %2, %"class.net::HostPortPair"* dereferenceable(32) %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom37MdnsListenClientInterceptorForTesting17OnUnhandledResultEN3net12HostResolver12MdnsListener8Delegate10UpdateTypeENS2_12DnsQueryTypeE(%"class.network::mojom::MdnsListenClientInterceptorForTesting"*, i32, i32) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.network::mojom::MdnsListenClientInterceptorForTesting"* %0 to %"class.network::mojom::MdnsListenClient"* (%"class.network::mojom::MdnsListenClientInterceptorForTesting"*)***
  %5 = load %"class.network::mojom::MdnsListenClient"* (%"class.network::mojom::MdnsListenClientInterceptorForTesting"*)**, %"class.network::mojom::MdnsListenClient"* (%"class.network::mojom::MdnsListenClientInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.network::mojom::MdnsListenClient"* (%"class.network::mojom::MdnsListenClientInterceptorForTesting"*)*, %"class.network::mojom::MdnsListenClient"* (%"class.network::mojom::MdnsListenClientInterceptorForTesting"*)** %5, i64 6
  %7 = load %"class.network::mojom::MdnsListenClient"* (%"class.network::mojom::MdnsListenClientInterceptorForTesting"*)*, %"class.network::mojom::MdnsListenClient"* (%"class.network::mojom::MdnsListenClientInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.network::mojom::MdnsListenClient"* %7(%"class.network::mojom::MdnsListenClientInterceptorForTesting"* %0) #10
  %9 = bitcast %"class.network::mojom::MdnsListenClient"* %8 to void (%"class.network::mojom::MdnsListenClient"*, i32, i32)***
  %10 = load void (%"class.network::mojom::MdnsListenClient"*, i32, i32)**, void (%"class.network::mojom::MdnsListenClient"*, i32, i32)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.network::mojom::MdnsListenClient"*, i32, i32)*, void (%"class.network::mojom::MdnsListenClient"*, i32, i32)** %10, i64 5
  %12 = load void (%"class.network::mojom::MdnsListenClient"*, i32, i32)*, void (%"class.network::mojom::MdnsListenClient"*, i32, i32)** %11, align 8
  tail call void %12(%"class.network::mojom::MdnsListenClient"* %8, i32 %1, i32 %2) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7network5mojom27MdnsListenClientAsyncWaiterC2EPNS0_16MdnsListenClientE(%"class.network::mojom::MdnsListenClientAsyncWaiter"* nocapture, %"class.network::mojom::MdnsListenClient"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.network::mojom::MdnsListenClientAsyncWaiter", %"class.network::mojom::MdnsListenClientAsyncWaiter"* %0, i64 0, i32 0
  store %"class.network::mojom::MdnsListenClient"* %1, %"class.network::mojom::MdnsListenClient"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7network5mojom27MdnsListenClientAsyncWaiterD2Ev(%"class.network::mojom::MdnsListenClientAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom33HostResolverInterceptorForTesting11ResolveHostERKN3net12HostPortPairERKNS2_19NetworkIsolationKeyEN4mojo9StructPtrINS0_21ResolveHostParametersEEENS9_13PendingRemoteINS0_17ResolveHostClientEEE(%"class.network::mojom::HostResolverInterceptorForTesting"*, %"class.net::HostPortPair"* dereferenceable(32), %"class.net::NetworkIsolationKey"* dereferenceable(184), %"class.mojo::StructPtr"* nocapture, %"class.mojo::PendingRemote"*) unnamed_addr #0 align 2 {
  %6 = alloca %"class.mojo::StructPtr", align 8
  %7 = alloca %"class.mojo::PendingRemote", align 4
  %8 = bitcast %"class.network::mojom::HostResolverInterceptorForTesting"* %0 to %"class.network::mojom::HostResolver"* (%"class.network::mojom::HostResolverInterceptorForTesting"*)***
  %9 = load %"class.network::mojom::HostResolver"* (%"class.network::mojom::HostResolverInterceptorForTesting"*)**, %"class.network::mojom::HostResolver"* (%"class.network::mojom::HostResolverInterceptorForTesting"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.network::mojom::HostResolver"* (%"class.network::mojom::HostResolverInterceptorForTesting"*)*, %"class.network::mojom::HostResolver"* (%"class.network::mojom::HostResolverInterceptorForTesting"*)** %9, i64 4
  %11 = load %"class.network::mojom::HostResolver"* (%"class.network::mojom::HostResolverInterceptorForTesting"*)*, %"class.network::mojom::HostResolver"* (%"class.network::mojom::HostResolverInterceptorForTesting"*)** %10, align 8
  %12 = tail call %"class.network::mojom::HostResolver"* %11(%"class.network::mojom::HostResolverInterceptorForTesting"* %0) #10
  %13 = bitcast %"class.mojo::StructPtr"* %6 to i64*
  %14 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.mojo::StructPtr"* %3 to i64*
  %16 = load i64, i64* %15, align 8
  store i64 %16, i64* %13, align 8
  store i64 0, i64* %15, align 8
  %17 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %7, i64 0, i32 0
  %18 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %4, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %17, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %18) #10
  %19 = bitcast %"class.network::mojom::HostResolver"* %12 to void (%"class.network::mojom::HostResolver"*, %"class.net::HostPortPair"*, %"class.net::NetworkIsolationKey"*, %"class.mojo::StructPtr"*, %"class.mojo::PendingRemote"*)***
  %20 = load void (%"class.network::mojom::HostResolver"*, %"class.net::HostPortPair"*, %"class.net::NetworkIsolationKey"*, %"class.mojo::StructPtr"*, %"class.mojo::PendingRemote"*)**, void (%"class.network::mojom::HostResolver"*, %"class.net::HostPortPair"*, %"class.net::NetworkIsolationKey"*, %"class.mojo::StructPtr"*, %"class.mojo::PendingRemote"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.network::mojom::HostResolver"*, %"class.net::HostPortPair"*, %"class.net::NetworkIsolationKey"*, %"class.mojo::StructPtr"*, %"class.mojo::PendingRemote"*)*, void (%"class.network::mojom::HostResolver"*, %"class.net::HostPortPair"*, %"class.net::NetworkIsolationKey"*, %"class.mojo::StructPtr"*, %"class.mojo::PendingRemote"*)** %20, i64 2
  %22 = load void (%"class.network::mojom::HostResolver"*, %"class.net::HostPortPair"*, %"class.net::NetworkIsolationKey"*, %"class.mojo::StructPtr"*, %"class.mojo::PendingRemote"*)*, void (%"class.network::mojom::HostResolver"*, %"class.net::HostPortPair"*, %"class.net::NetworkIsolationKey"*, %"class.mojo::StructPtr"*, %"class.mojo::PendingRemote"*)** %21, align 8
  call void %22(%"class.network::mojom::HostResolver"* %12, %"class.net::HostPortPair"* dereferenceable(32) %1, %"class.net::NetworkIsolationKey"* dereferenceable(184) %2, %"class.mojo::StructPtr"* nonnull %6, %"class.mojo::PendingRemote"* nonnull %7) #10
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %17) #10
  %23 = load %"class.network::mojom::ResolveHostParameters"*, %"class.network::mojom::ResolveHostParameters"** %14, align 8
  store %"class.network::mojom::ResolveHostParameters"* null, %"class.network::mojom::ResolveHostParameters"** %14, align 8
  %24 = icmp eq %"class.network::mojom::ResolveHostParameters"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %5
  call void @_ZN7network5mojom21ResolveHostParametersD1Ev(%"class.network::mojom::ResolveHostParameters"* nonnull %23) #10
  %26 = bitcast %"class.network::mojom::ResolveHostParameters"* %23 to i8*
  call void @_ZdlPv(i8* %26) #11
  br label %27

27:                                               ; preds = %5, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom33HostResolverInterceptorForTesting10MdnsListenERKN3net12HostPortPairENS2_12DnsQueryTypeEN4mojo13PendingRemoteINS0_16MdnsListenClientEEEN4base12OnceCallbackIFviEEE(%"class.network::mojom::HostResolverInterceptorForTesting"*, %"class.net::HostPortPair"* dereferenceable(32), i32, %"class.mojo::PendingRemote.44"*, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %6 = alloca %"class.mojo::PendingRemote.44", align 4
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = bitcast %"class.network::mojom::HostResolverInterceptorForTesting"* %0 to %"class.network::mojom::HostResolver"* (%"class.network::mojom::HostResolverInterceptorForTesting"*)***
  %9 = load %"class.network::mojom::HostResolver"* (%"class.network::mojom::HostResolverInterceptorForTesting"*)**, %"class.network::mojom::HostResolver"* (%"class.network::mojom::HostResolverInterceptorForTesting"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.network::mojom::HostResolver"* (%"class.network::mojom::HostResolverInterceptorForTesting"*)*, %"class.network::mojom::HostResolver"* (%"class.network::mojom::HostResolverInterceptorForTesting"*)** %9, i64 4
  %11 = load %"class.network::mojom::HostResolver"* (%"class.network::mojom::HostResolverInterceptorForTesting"*)*, %"class.network::mojom::HostResolver"* (%"class.network::mojom::HostResolverInterceptorForTesting"*)** %10, align 8
  %12 = tail call %"class.network::mojom::HostResolver"* %11(%"class.network::mojom::HostResolverInterceptorForTesting"* %0) #10
  %13 = getelementptr inbounds %"class.mojo::PendingRemote.44", %"class.mojo::PendingRemote.44"* %6, i64 0, i32 0
  %14 = getelementptr inbounds %"class.mojo::PendingRemote.44", %"class.mojo::PendingRemote.44"* %3, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %13, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %14) #10
  %15 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.base::OnceCallback"* %4 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %17, i64* %18, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %15, align 8
  %19 = bitcast %"class.network::mojom::HostResolver"* %12 to void (%"class.network::mojom::HostResolver"*, %"class.net::HostPortPair"*, i32, %"class.mojo::PendingRemote.44"*, %"class.base::OnceCallback"*)***
  %20 = load void (%"class.network::mojom::HostResolver"*, %"class.net::HostPortPair"*, i32, %"class.mojo::PendingRemote.44"*, %"class.base::OnceCallback"*)**, void (%"class.network::mojom::HostResolver"*, %"class.net::HostPortPair"*, i32, %"class.mojo::PendingRemote.44"*, %"class.base::OnceCallback"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.network::mojom::HostResolver"*, %"class.net::HostPortPair"*, i32, %"class.mojo::PendingRemote.44"*, %"class.base::OnceCallback"*)*, void (%"class.network::mojom::HostResolver"*, %"class.net::HostPortPair"*, i32, %"class.mojo::PendingRemote.44"*, %"class.base::OnceCallback"*)** %20, i64 3
  %22 = load void (%"class.network::mojom::HostResolver"*, %"class.net::HostPortPair"*, i32, %"class.mojo::PendingRemote.44"*, %"class.base::OnceCallback"*)*, void (%"class.network::mojom::HostResolver"*, %"class.net::HostPortPair"*, i32, %"class.mojo::PendingRemote.44"*, %"class.base::OnceCallback"*)** %21, align 8
  call void %22(%"class.network::mojom::HostResolver"* %12, %"class.net::HostPortPair"* dereferenceable(32) %1, i32 %2, %"class.mojo::PendingRemote.44"* nonnull %6, %"class.base::OnceCallback"* nonnull %7) #10
  %23 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #10
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %13) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7network5mojom23HostResolverAsyncWaiterC2EPNS0_12HostResolverE(%"class.network::mojom::HostResolverAsyncWaiter"* nocapture, %"class.network::mojom::HostResolver"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.network::mojom::HostResolverAsyncWaiter", %"class.network::mojom::HostResolverAsyncWaiter"* %0, i64 0, i32 0
  store %"class.network::mojom::HostResolver"* %1, %"class.network::mojom::HostResolver"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7network5mojom23HostResolverAsyncWaiterD2Ev(%"class.network::mojom::HostResolverAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom23HostResolverAsyncWaiter10MdnsListenERKN3net12HostPortPairENS2_12DnsQueryTypeEN4mojo13PendingRemoteINS0_16MdnsListenClientEEEPi(%"class.network::mojom::HostResolverAsyncWaiter"* nocapture readonly, %"class.net::HostPortPair"* dereferenceable(32), i32, %"class.mojo::PendingRemote.44"*, i32*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::RunLoop", align 8
  %7 = alloca %"class.mojo::PendingRemote.44", align 4
  %8 = alloca %"class.base::OnceCallback", align 8
  %9 = alloca %"class.base::Location", align 8
  %10 = ptrtoint i32* %4 to i64
  %11 = bitcast %"class.base::RunLoop"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %11) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %6, i32 0) #10
  %12 = getelementptr inbounds %"class.network::mojom::HostResolverAsyncWaiter", %"class.network::mojom::HostResolverAsyncWaiter"* %0, i64 0, i32 0
  %13 = load %"class.network::mojom::HostResolver"*, %"class.network::mojom::HostResolver"** %12, align 8
  %14 = getelementptr inbounds %"class.mojo::PendingRemote.44", %"class.mojo::PendingRemote.44"* %7, i64 0, i32 0
  %15 = getelementptr inbounds %"class.mojo::PendingRemote.44", %"class.mojo::PendingRemote.44"* %3, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %14, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %15) #10
  %16 = ptrtoint %"class.base::RunLoop"* %6 to i64
  %17 = call i8* @_Znwm(i64 56) #11, !noalias !2
  %18 = bitcast i8* %17 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %18, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN7network5mojom23HostResolverAsyncWaiter10MdnsListenERKN3net12HostPortPairENS6_12DnsQueryTypeEN4mojo13PendingRemoteINS4_16MdnsListenClientEEEPiE3$_0JPNS_7RunLoopESF_EEEFviEE7RunOnceEPNS0_13BindStateBaseEi" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN7network5mojom23HostResolverAsyncWaiter10MdnsListenERKN3net12HostPortPairENS5_12DnsQueryTypeEN4mojo13PendingRemoteINS3_16MdnsListenClientEEEPiE3$_0JPNS_7RunLoopESE_EE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !2
  %19 = getelementptr inbounds i8, i8* %17, i64 40
  %20 = bitcast i8* %19 to i64*
  store i64 %16, i64* %20, align 8, !noalias !2
  %21 = getelementptr inbounds i8, i8* %17, i64 48
  %22 = bitcast i8* %21 to i64*
  store i64 %10, i64* %22, align 8, !noalias !2
  %23 = bitcast %"class.base::OnceCallback"* %8 to i8**
  store i8* %17, i8** %23, align 8, !alias.scope !2
  %24 = bitcast %"class.network::mojom::HostResolver"* %13 to void (%"class.network::mojom::HostResolver"*, %"class.net::HostPortPair"*, i32, %"class.mojo::PendingRemote.44"*, %"class.base::OnceCallback"*)***
  %25 = load void (%"class.network::mojom::HostResolver"*, %"class.net::HostPortPair"*, i32, %"class.mojo::PendingRemote.44"*, %"class.base::OnceCallback"*)**, void (%"class.network::mojom::HostResolver"*, %"class.net::HostPortPair"*, i32, %"class.mojo::PendingRemote.44"*, %"class.base::OnceCallback"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.network::mojom::HostResolver"*, %"class.net::HostPortPair"*, i32, %"class.mojo::PendingRemote.44"*, %"class.base::OnceCallback"*)*, void (%"class.network::mojom::HostResolver"*, %"class.net::HostPortPair"*, i32, %"class.mojo::PendingRemote.44"*, %"class.base::OnceCallback"*)** %25, i64 3
  %27 = load void (%"class.network::mojom::HostResolver"*, %"class.net::HostPortPair"*, i32, %"class.mojo::PendingRemote.44"*, %"class.base::OnceCallback"*)*, void (%"class.network::mojom::HostResolver"*, %"class.net::HostPortPair"*, i32, %"class.mojo::PendingRemote.44"*, %"class.base::OnceCallback"*)** %26, align 8
  call void %27(%"class.network::mojom::HostResolver"* %13, %"class.net::HostPortPair"* dereferenceable(32) %1, i32 %2, %"class.mojo::PendingRemote.44"* nonnull %7, %"class.base::OnceCallback"* nonnull %8) #10
  %28 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %28) #10
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %14) #10
  %29 = bitcast %"class.base::Location"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %9, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.1, i64 0, i64 0), i32 108) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %6, %"class.base::Location"* nonnull dereferenceable(32) %9) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"*, i32) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"*, %"class.base::Location"* dereferenceable(32)) local_unnamed_addr #5

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom49DnsConfigChangeManagerClientInterceptorForTesting18OnDnsConfigChangedEv(%"class.network::mojom::DnsConfigChangeManagerClientInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.network::mojom::DnsConfigChangeManagerClientInterceptorForTesting"* %0 to %"class.network::mojom::DnsConfigChangeManagerClient"* (%"class.network::mojom::DnsConfigChangeManagerClientInterceptorForTesting"*)***
  %3 = load %"class.network::mojom::DnsConfigChangeManagerClient"* (%"class.network::mojom::DnsConfigChangeManagerClientInterceptorForTesting"*)**, %"class.network::mojom::DnsConfigChangeManagerClient"* (%"class.network::mojom::DnsConfigChangeManagerClientInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.network::mojom::DnsConfigChangeManagerClient"* (%"class.network::mojom::DnsConfigChangeManagerClientInterceptorForTesting"*)*, %"class.network::mojom::DnsConfigChangeManagerClient"* (%"class.network::mojom::DnsConfigChangeManagerClientInterceptorForTesting"*)** %3, i64 3
  %5 = load %"class.network::mojom::DnsConfigChangeManagerClient"* (%"class.network::mojom::DnsConfigChangeManagerClientInterceptorForTesting"*)*, %"class.network::mojom::DnsConfigChangeManagerClient"* (%"class.network::mojom::DnsConfigChangeManagerClientInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.network::mojom::DnsConfigChangeManagerClient"* %5(%"class.network::mojom::DnsConfigChangeManagerClientInterceptorForTesting"* %0) #10
  %7 = bitcast %"class.network::mojom::DnsConfigChangeManagerClient"* %6 to void (%"class.network::mojom::DnsConfigChangeManagerClient"*)***
  %8 = load void (%"class.network::mojom::DnsConfigChangeManagerClient"*)**, void (%"class.network::mojom::DnsConfigChangeManagerClient"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.network::mojom::DnsConfigChangeManagerClient"*)*, void (%"class.network::mojom::DnsConfigChangeManagerClient"*)** %8, i64 2
  %10 = load void (%"class.network::mojom::DnsConfigChangeManagerClient"*)*, void (%"class.network::mojom::DnsConfigChangeManagerClient"*)** %9, align 8
  tail call void %10(%"class.network::mojom::DnsConfigChangeManagerClient"* %6) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7network5mojom39DnsConfigChangeManagerClientAsyncWaiterC2EPNS0_28DnsConfigChangeManagerClientE(%"class.network::mojom::DnsConfigChangeManagerClientAsyncWaiter"* nocapture, %"class.network::mojom::DnsConfigChangeManagerClient"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.network::mojom::DnsConfigChangeManagerClientAsyncWaiter", %"class.network::mojom::DnsConfigChangeManagerClientAsyncWaiter"* %0, i64 0, i32 0
  store %"class.network::mojom::DnsConfigChangeManagerClient"* %1, %"class.network::mojom::DnsConfigChangeManagerClient"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7network5mojom39DnsConfigChangeManagerClientAsyncWaiterD2Ev(%"class.network::mojom::DnsConfigChangeManagerClientAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom43DnsConfigChangeManagerInterceptorForTesting20RequestNotificationsEN4mojo13PendingRemoteINS0_28DnsConfigChangeManagerClientEEE(%"class.network::mojom::DnsConfigChangeManagerInterceptorForTesting"*, %"class.mojo::PendingRemote.67"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::PendingRemote.67", align 4
  %4 = bitcast %"class.network::mojom::DnsConfigChangeManagerInterceptorForTesting"* %0 to %"class.network::mojom::DnsConfigChangeManager"* (%"class.network::mojom::DnsConfigChangeManagerInterceptorForTesting"*)***
  %5 = load %"class.network::mojom::DnsConfigChangeManager"* (%"class.network::mojom::DnsConfigChangeManagerInterceptorForTesting"*)**, %"class.network::mojom::DnsConfigChangeManager"* (%"class.network::mojom::DnsConfigChangeManagerInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.network::mojom::DnsConfigChangeManager"* (%"class.network::mojom::DnsConfigChangeManagerInterceptorForTesting"*)*, %"class.network::mojom::DnsConfigChangeManager"* (%"class.network::mojom::DnsConfigChangeManagerInterceptorForTesting"*)** %5, i64 3
  %7 = load %"class.network::mojom::DnsConfigChangeManager"* (%"class.network::mojom::DnsConfigChangeManagerInterceptorForTesting"*)*, %"class.network::mojom::DnsConfigChangeManager"* (%"class.network::mojom::DnsConfigChangeManagerInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.network::mojom::DnsConfigChangeManager"* %7(%"class.network::mojom::DnsConfigChangeManagerInterceptorForTesting"* %0) #10
  %9 = getelementptr inbounds %"class.mojo::PendingRemote.67", %"class.mojo::PendingRemote.67"* %3, i64 0, i32 0
  %10 = getelementptr inbounds %"class.mojo::PendingRemote.67", %"class.mojo::PendingRemote.67"* %1, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %9, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %10) #10
  %11 = bitcast %"class.network::mojom::DnsConfigChangeManager"* %8 to void (%"class.network::mojom::DnsConfigChangeManager"*, %"class.mojo::PendingRemote.67"*)***
  %12 = load void (%"class.network::mojom::DnsConfigChangeManager"*, %"class.mojo::PendingRemote.67"*)**, void (%"class.network::mojom::DnsConfigChangeManager"*, %"class.mojo::PendingRemote.67"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.network::mojom::DnsConfigChangeManager"*, %"class.mojo::PendingRemote.67"*)*, void (%"class.network::mojom::DnsConfigChangeManager"*, %"class.mojo::PendingRemote.67"*)** %12, i64 2
  %14 = load void (%"class.network::mojom::DnsConfigChangeManager"*, %"class.mojo::PendingRemote.67"*)*, void (%"class.network::mojom::DnsConfigChangeManager"*, %"class.mojo::PendingRemote.67"*)** %13, align 8
  call void %14(%"class.network::mojom::DnsConfigChangeManager"* %8, %"class.mojo::PendingRemote.67"* nonnull %3) #10
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %9) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7network5mojom33DnsConfigChangeManagerAsyncWaiterC2EPNS0_22DnsConfigChangeManagerE(%"class.network::mojom::DnsConfigChangeManagerAsyncWaiter"* nocapture, %"class.network::mojom::DnsConfigChangeManager"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.network::mojom::DnsConfigChangeManagerAsyncWaiter", %"class.network::mojom::DnsConfigChangeManagerAsyncWaiter"* %0, i64 0, i32 0
  store %"class.network::mojom::DnsConfigChangeManager"* %1, %"class.network::mojom::DnsConfigChangeManager"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7network5mojom33DnsConfigChangeManagerAsyncWaiterD2Ev(%"class.network::mojom::DnsConfigChangeManagerAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7network5mojom17ResolveHostHandleD2Ev(%"class.network::mojom::ResolveHostHandle"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7network5mojom38ResolveHostHandleInterceptorForTestingD0Ev(%"class.network::mojom::ResolveHostHandleInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7network5mojom17ResolveHostClientD2Ev(%"class.network::mojom::ResolveHostClient"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7network5mojom38ResolveHostClientInterceptorForTestingD0Ev(%"class.network::mojom::ResolveHostClientInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7network5mojom16MdnsListenClientD2Ev(%"class.network::mojom::MdnsListenClient"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7network5mojom37MdnsListenClientInterceptorForTestingD0Ev(%"class.network::mojom::MdnsListenClientInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7network5mojom12HostResolverD2Ev(%"class.network::mojom::HostResolver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7network5mojom33HostResolverInterceptorForTestingD0Ev(%"class.network::mojom::HostResolverInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7network5mojom28DnsConfigChangeManagerClientD2Ev(%"class.network::mojom::DnsConfigChangeManagerClient"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7network5mojom49DnsConfigChangeManagerClientInterceptorForTestingD0Ev(%"class.network::mojom::DnsConfigChangeManagerClientInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7network5mojom22DnsConfigChangeManagerD2Ev(%"class.network::mojom::DnsConfigChangeManager"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7network5mojom43DnsConfigChangeManagerInterceptorForTestingD0Ev(%"class.network::mojom::DnsConfigChangeManagerInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"*, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7network5mojom21ResolveHostParametersD1Ev(%"class.network::mojom::ResolveHostParameters"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN7network5mojom23HostResolverAsyncWaiter10MdnsListenERKN3net12HostPortPairENS6_12DnsQueryTypeEN4mojo13PendingRemoteINS4_16MdnsListenClientEEEPiE3$_0JPNS_7RunLoopESF_EEEFviEE7RunOnceEPNS0_13BindStateBaseEi"(%"class.base::internal::BindStateBase"* nocapture readonly, i32) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to i32**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load i32*, i32** %6, align 8
  store i32 %1, i32* %8, align 4
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #10
  ret void
}

declare void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN7network5mojom23HostResolverAsyncWaiter10MdnsListenERKN3net12HostPortPairENS5_12DnsQueryTypeEN4mojo13PendingRemoteINS3_16MdnsListenClientEEEPiE3$_0JPNS_7RunLoopESE_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN7network5mojom23HostResolverAsyncWaiter10MdnsListenERKN3net12HostPortPairENS6_12DnsQueryTypeEN4mojo13PendingRemoteINS4_16MdnsListenClientEEEPiE3$_0JPNS_7RunLoopERSF_EEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN7network5mojom23HostResolverAsyncWaiter10MdnsListenERKN3net12HostPortPairENS6_12DnsQueryTypeEN4mojo13PendingRemoteINS4_16MdnsListenClientEEEPiE3$_0JPNS_7RunLoopERSF_EEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIZN7network5mojom23HostResolverAsyncWaiter10MdnsListenERKN3net12HostPortPairENS4_12DnsQueryTypeEN4mojo13PendingRemoteINS2_16MdnsListenClientEEEPiE3$_0JPNS_7RunLoopERSD_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIZN7network5mojom23HostResolverAsyncWaiter10MdnsListenERKN3net12HostPortPairENS4_12DnsQueryTypeEN4mojo13PendingRemoteINS2_16MdnsListenClientEEEPiE3$_0JPNS_7RunLoopERSD_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_"}
