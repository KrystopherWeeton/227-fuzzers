; ModuleID = '../../third_party/blink/renderer/core/svg/graphics/svg_image_for_container.cc'
source_filename = "../../third_party/blink/renderer/core/svg/graphics/svg_image_for_container.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::FloatSize" = type { float, float }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.213" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr.207 }
%class.scoped_refptr.207 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.208" }
%"struct.std::__1::atomic.208" = type { %"struct.std::__1::__atomic_base.209" }
%"struct.std::__1::__atomic_base.209" = type { %"struct.std::__1::__atomic_base.210" }
%"struct.std::__1::__atomic_base.210" = type { %"struct.std::__1::__cxx_atomic_impl.211" }
%"struct.std::__1::__cxx_atomic_impl.211" = type { %"struct.std::__1::__cxx_atomic_base_impl.212" }
%"struct.std::__1::__cxx_atomic_base_impl.212" = type { i32 }
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.blink::KURL"* }
%"class.blink::SVGImageForContainer" = type { %"class.blink::Image", %"class.blink::SVGImage"*, %"class.blink::FloatSize", float, %"class.blink::KURL" }
%"class.blink::Image" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i8, %class.scoped_refptr, %"class.blink::WeakPersistent", i32, i8, %"class.std::__1::unique_ptr.183" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted", i64, %"class.WTF::Vector", %"class.WTF::Vector.1" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.WTF::Vector.1" = type { %"class.WTF::VectorBuffer.2" }
%"class.WTF::VectorBuffer.2" = type { %"class.WTF::VectorBufferBase.3" }
%"class.WTF::VectorBufferBase.3" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.std::__1::unique_ptr" = type opaque
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ImageObserver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ImageObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.6", i32, [4 x i8], %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.138", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.154", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.172", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.179", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.17", %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.95", %"class.std::__1::unique_ptr.118", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.38" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.38" = type { %"struct.std::__1::__atomic_base.39" }
%"struct.std::__1::__atomic_base.39" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__cxx_atomic_impl.41" }
%"struct.std::__1::__cxx_atomic_impl.41" = type { %"struct.std::__1::__cxx_atomic_base_impl.42" }
%"struct.std::__1::__cxx_atomic_base_impl.42" = type { i64 }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::Worklist.49"* }
%"class.blink::Worklist.49" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.38" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::Worklist.56"* }
%"class.blink::Worklist.56" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.38" }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.blink::Worklist.63"* }
%"class.blink::Worklist.63" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.38" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::Worklist.70"* }
%"class.blink::Worklist.70" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.38" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::Worklist.77"* }
%"class.blink::Worklist.77" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.38" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::Worklist.84"* }
%"class.blink::Worklist.84" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.38" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::Worklist.91"* }
%"class.blink::Worklist.91" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.38" }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.98", %"class.std::__1::__compressed_pair.105", %"class.std::__1::__compressed_pair.110", %"class.std::__1::__compressed_pair.112", [4 x i8] }>
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100", %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { i64 }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { float }
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.121", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.130" }
%"class.WTF::Vector.130" = type { %"class.WTF::VectorBuffer.131" }
%"class.WTF::VectorBuffer.131" = type { %"class.WTF::VectorBufferBase.132" }
%"class.WTF::VectorBufferBase.132" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.146" }
%"class.WTF::VectorBuffer.146" = type { %"class.WTF::VectorBufferBase.147" }
%"class.WTF::VectorBufferBase.147" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.160" }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.49"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.56"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.63"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.70"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.77"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.219" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.178 }
%class.scoped_refptr.178 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.179" = type { %"struct.std::__1::__atomic_base.180" }
%"struct.std::__1::__atomic_base.180" = type { %"struct.std::__1::__cxx_atomic_impl.181" }
%"struct.std::__1::__cxx_atomic_impl.181" = type { %"struct.std::__1::__cxx_atomic_base_impl.182" }
%"struct.std::__1::__cxx_atomic_base_impl.182" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.blink::DarkModeImageCache"* }
%"class.blink::DarkModeImageCache" = type opaque
%"class.blink::SVGImage" = type { %"class.blink::Image", %"class.blink::Persistent", %"class.blink::Persistent.191", %"class.std::__1::unique_ptr.193", %"class.std::__1::unique_ptr.199", %"class.blink::LayoutSize", i8, i32, %"class.blink::Persistent.205" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.189" }
%"class.blink::PersistentBase.189" = type { %"class.blink::SVGImageChromeClient"*, %"class.blink::PersistentNodePtr.190" }
%"class.blink::SVGImageChromeClient" = type opaque
%"class.blink::PersistentNodePtr.190" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.191" = type { %"class.blink::PersistentBase.192" }
%"class.blink::PersistentBase.192" = type { %"class.blink::Page"*, %"class.blink::PersistentNodePtr.190" }
%"class.blink::Page" = type opaque
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type opaque
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.blink::scheduler::WebAgentGroupScheduler"* }
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Persistent.205" = type { %"class.blink::PersistentBase.206" }
%"class.blink::PersistentBase.206" = type { %"class.blink::SVGImage::SVGImageLocalFrameClient"*, %"class.blink::PersistentNodePtr.190" }
%"class.blink::SVGImage::SVGImageLocalFrameClient" = type opaque
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%"class.cc::PaintFlags" = type <{ %class.sk_sp, %class.sk_sp.224, %class.sk_sp.268, %class.sk_sp.269, %class.sk_sp.270, %class.sk_sp.271, i32, float, float, i32, %union.anon.272, [4 x i8] }>
%class.sk_sp = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp.224 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.232, i32, %"class.absl::optional.248", %"class.std::__1::vector.253", %"class.std::__1::vector.260", %class.sk_sp.267, %class.sk_sp.225, i32, [4 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%"class.cc::PaintImage" = type { %class.sk_sp.225, %class.sk_sp.232, %"class.gfx::Rect", i32, %class.sk_sp.237, %class.sk_sp.245, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.225, %class.scoped_refptr.246 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.sk_sp.237 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.238" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.226, i32, i32 }
%class.sk_sp.226 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.227" }
%"struct.std::__1::atomic.227" = type { %"struct.std::__1::__atomic_base.228" }
%"struct.std::__1::__atomic_base.228" = type { %"struct.std::__1::__atomic_base.229" }
%"struct.std::__1::__atomic_base.229" = type { %"struct.std::__1::__cxx_atomic_impl.230" }
%"struct.std::__1::__cxx_atomic_impl.230" = type { %"struct.std::__1::__cxx_atomic_base_impl.231" }
%"struct.std::__1::__cxx_atomic_base_impl.231" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector.238" = type { %"class.std::__1::__vector_base.239" }
%"class.std::__1::__vector_base.239" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.240" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.245 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type { %class.SkRefCnt.base, [4 x i8] }
%class.scoped_refptr.246 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.247", [4 x i8] }>
%"class.base::RefCountedThreadSafe.247" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.sk_sp.232 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.233", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { i8* }
%"class.absl::optional.248" = type { %"class.absl::optional_internal::optional_data.249" }
%"class.absl::optional_internal::optional_data.249" = type { %"class.absl::optional_internal::optional_data_base.250" }
%"class.absl::optional_internal::optional_data_base.250" = type { %"class.absl::optional_internal::optional_data_dtor_base.251" }
%"class.absl::optional_internal::optional_data_dtor_base.251" = type { i8, %union.anon.252 }
%union.anon.252 = type { %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.253" = type { %"class.std::__1::__vector_base.254" }
%"class.std::__1::__vector_base.254" = type { i32*, i32*, %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { i32* }
%"class.std::__1::vector.260" = type { %"class.std::__1::__vector_base.261" }
%"class.std::__1::__vector_base.261" = type { float*, float*, %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { float* }
%class.sk_sp.267 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.179", [7 x i8] }>
%class.sk_sp.225 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.sk_sp.268 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.269 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.270 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.271 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type opaque
%union.anon.272 = type { i32 }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%struct.SkCubicResampler = type { float, float }
%"class.blink::SVGImage::DrawInfo" = type { %"class.blink::FloatSize", %"class.blink::LayoutSize", float, %"class.blink::KURL"* }
%"class.blink::GraphicsContext" = type opaque
%"class.cc::PaintImageBuilder" = type { %"class.cc::PaintImage" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::WebGraphicsContext3DProvider" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.273 }
%class.scoped_refptr.273 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.274", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.274" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.227" }

$_ZN5blink20SVGImageForContainerD2Ev = comdat any

$_ZN5blink20SVGImageForContainerD0Ev = comdat any

$_ZNK5blink5Image10IsSVGImageEv = comdat any

$_ZNK5blink5Image13IsBitmapImageEv = comdat any

$_ZNK5blink5Image19IsStaticBitmapImageEv = comdat any

$_ZNK5blink5Image18IsPlaceholderImageEv = comdat any

$_ZN5blink20SVGImageForContainer27CurrentFrameKnownToBeOpaqueEv = comdat any

$_ZN5blink5Image22CurrentFrameIsCompleteEv = comdat any

$_ZN5blink5Image25CurrentFrameIsLazyDecodedEv = comdat any

$_ZN5blink5Image10FrameCountEv = comdat any

$_ZNK5blink5Image15IsTextureBackedEv = comdat any

$_ZNK5blink5Image35CurrentFrameHasSingleSecurityOriginEv = comdat any

$_ZNK5blink20SVGImageForContainer16HasIntrinsicSizeEv = comdat any

$_ZNK5blink5Image20DensityCorrectedSizeEv = comdat any

$_ZNK5blink5Image20PreferredDisplaySizeEv = comdat any

$_ZNK5blink5Image10GetHotSpotERNS_8IntPointE = comdat any

$_ZN5blink5Image11DataChangedEb = comdat any

$_ZN5blink20SVGImageForContainer18DestroyDecodedDataEv = comdat any

$_ZN5blink5Image4DataEv = comdat any

$_ZN5blink5Image14StartAnimationEv = comdat any

$_ZN5blink5Image14ResetAnimationEv = comdat any

$_ZN5blink5Image13MaybeAnimatedEv = comdat any

$_ZN5blink5Image18SetAnimationPolicyENS_5mojom20ImageAnimationPolicyE = comdat any

$_ZN5blink5Image15AnimationPolicyEv = comdat any

$_ZN5blink5Image26AdvanceAnimationForTestingEv = comdat any

$_ZNK5blink5Image21HasDefaultOrientationEv = comdat any

$_ZNK5blink5Image23CurrentFrameOrientationEv = comdat any

$_ZNK5blink5Image32CurrentFrameDensityCorrectedSizeEv = comdat any

$_ZNK5blink5Image15ContextProviderEv = comdat any

$_ZNK5blink5Image22ContextProviderWrapperEv = comdat any

$_ZN5blink5Image15IsSizeAvailableEv = comdat any

@__const._ZN5blink20SVGImageForContainer25PaintImageForCurrentFrameEv.draw_info = private unnamed_addr constant { %"class.blink::FloatSize", %"class.blink::LayoutSize", float, [4 x i8], %"class.blink::KURL"* } { %"class.blink::FloatSize" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.blink::LayoutSize" { %"class.blink::LayoutUnit" { i32 -1431655766 }, %"class.blink::LayoutUnit" { i32 -1431655766 } }, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA", %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) }, align 8
@_ZTVN5blink20SVGImageForContainerE = hidden unnamed_addr constant { [42 x i8*] } { [42 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::SVGImageForContainer"*)* @_ZN5blink20SVGImageForContainerD2Ev to i8*), i8* bitcast (void (%"class.blink::SVGImageForContainer"*)* @_ZN5blink20SVGImageForContainerD0Ev to i8*), i8* bitcast (i1 (%"class.blink::Image"*)* @_ZNK5blink5Image10IsSVGImageEv to i8*), i8* bitcast (i1 (%"class.blink::Image"*)* @_ZNK5blink5Image13IsBitmapImageEv to i8*), i8* bitcast (i1 (%"class.blink::Image"*)* @_ZNK5blink5Image19IsStaticBitmapImageEv to i8*), i8* bitcast (i1 (%"class.blink::Image"*)* @_ZNK5blink5Image18IsPlaceholderImageEv to i8*), i8* bitcast (i1 (%"class.blink::SVGImageForContainer"*)* @_ZN5blink20SVGImageForContainer27CurrentFrameKnownToBeOpaqueEv to i8*), i8* bitcast (i1 (%"class.blink::Image"*)* @_ZN5blink5Image22CurrentFrameIsCompleteEv to i8*), i8* bitcast (i1 (%"class.blink::Image"*)* @_ZN5blink5Image25CurrentFrameIsLazyDecodedEv to i8*), i8* bitcast (i64 (%"class.blink::Image"*)* @_ZN5blink5Image10FrameCountEv to i8*), i8* bitcast (i1 (%"class.blink::Image"*)* @_ZNK5blink5Image15IsTextureBackedEv to i8*), i8* bitcast (i1 (%"class.blink::Image"*)* @_ZNK5blink5Image35CurrentFrameHasSingleSecurityOriginEv to i8*), i8* bitcast (i1 (%"class.blink::SVGImageForContainer"*)* @_ZNK5blink20SVGImageForContainer16HasIntrinsicSizeEv to i8*), i8* bitcast (i64 (%"class.blink::SVGImageForContainer"*)* @_ZNK5blink20SVGImageForContainer4SizeEv to i8*), i8* bitcast (i64 (%"class.blink::Image"*)* @_ZNK5blink5Image20DensityCorrectedSizeEv to i8*), i8* bitcast (i64 (%"class.blink::Image"*)* @_ZNK5blink5Image20PreferredDisplaySizeEv to i8*), i8* bitcast (<2 x float> (%"class.blink::SVGImageForContainer"*, i32)* @_ZNK5blink20SVGImageForContainer11SizeAsFloatENS_27RespectImageOrientationEnumE to i8*), i8* bitcast (i1 (%"class.blink::Image"*, %"class.blink::IntPoint"*)* @_ZNK5blink5Image10GetHotSpotERNS_8IntPointE to i8*), i8* bitcast (i32 (%"class.blink::Image"*, %"class.WTF::SharedBuffer"*, i1)* @_ZN5blink5Image7SetDataE13scoped_refptrIN3WTF12SharedBufferEEb to i8*), i8* bitcast (i32 (%"class.blink::Image"*, i1)* @_ZN5blink5Image11DataChangedEb to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Image"*)* @_ZNK5blink5Image17FilenameExtensionEv to i8*), i8* bitcast (void (%"class.blink::SVGImageForContainer"*)* @_ZN5blink20SVGImageForContainer18DestroyDecodedDataEv to i8*), i8* bitcast (%"class.WTF::SharedBuffer"* (%"class.blink::Image"*)* @_ZN5blink5Image4DataEv to i8*), i8* bitcast (void (%"class.blink::Image"*)* @_ZN5blink5Image14StartAnimationEv to i8*), i8* bitcast (void (%"class.blink::Image"*)* @_ZN5blink5Image14ResetAnimationEv to i8*), i8* bitcast (i1 (%"class.blink::Image"*)* @_ZN5blink5Image13MaybeAnimatedEv to i8*), i8* bitcast (void (%"class.blink::Image"*, i32)* @_ZN5blink5Image18SetAnimationPolicyENS_5mojom20ImageAnimationPolicyE to i8*), i8* bitcast (i32 (%"class.blink::Image"*)* @_ZN5blink5Image15AnimationPolicyEv to i8*), i8* bitcast (void (%"class.blink::Image"*)* @_ZN5blink5Image26AdvanceAnimationForTestingEv to i8*), i8* bitcast (void ()* @_ZN5blink5Image20ImageForDefaultFrameEv to i8*), i8* bitcast (void (%"class.cc::PaintImage"*, %"class.blink::SVGImageForContainer"*)* @_ZN5blink20SVGImageForContainer25PaintImageForCurrentFrameEv to i8*), i8* bitcast (i1 (%"class.blink::Image"*)* @_ZNK5blink5Image21HasDefaultOrientationEv to i8*), i8* bitcast (i8 (%"class.blink::Image"*)* @_ZNK5blink5Image23CurrentFrameOrientationEv to i8*), i8* bitcast (i64 (%"class.blink::Image"*)* @_ZNK5blink5Image32CurrentFrameDensityCorrectedSizeEv to i8*), i8* bitcast (void (%"class.blink::SVGImageForContainer"*, %"class.cc::PaintCanvas"*, %"class.cc::PaintFlags"*, %"class.blink::FloatRect"*, %"class.blink::FloatRect"*, %struct.SkSamplingOptions*, i32, i32, i32)* @_ZN5blink20SVGImageForContainer4DrawEPN2cc11PaintCanvasERKNS1_10PaintFlagsERKNS_9FloatRectES9_RK17SkSamplingOptionsNS_27RespectImageOrientationEnumENS_5Image17ImageClampingModeENSE_17ImageDecodingModeE to i8*), i8* bitcast (i1 (%"class.blink::SVGImageForContainer"*, %"class.cc::PaintFlags"*, %class.SkMatrix*)* @_ZN5blink20SVGImageForContainer11ApplyShaderERN2cc10PaintFlagsERK8SkMatrix to i8*), i8* bitcast (%"class.blink::WebGraphicsContext3DProvider"* (%"class.blink::Image"*)* @_ZNK5blink5Image15ContextProviderEv to i8*), i8* bitcast (void (%"class.base::WeakPtr"*, %"class.blink::Image"*)* @_ZNK5blink5Image22ContextProviderWrapperEv to i8*), i8* bitcast (void (%"class.blink::SVGImageForContainer"*, %"class.blink::GraphicsContext"*, %"class.blink::FloatRect"*, %"class.blink::FloatSize"*, %"class.blink::FloatPoint"*, i32, %"class.blink::FloatRect"*, %"class.blink::FloatSize"*, i32)* @_ZN5blink20SVGImageForContainer11DrawPatternERNS_15GraphicsContextERKNS_9FloatRectERKNS_9FloatSizeERKNS_10FloatPointE11SkBlendModeS5_S8_NS_27RespectImageOrientationEnumE to i8*), i8* bitcast (i1 (%"class.blink::Image"*)* @_ZN5blink5Image15IsSizeAvailableEv to i8*)] }, align 8

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink20SVGImageForContainer4SizeEv(%"class.blink::SVGImageForContainer"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGImageForContainer", %"class.blink::SVGImageForContainer"* %0, i64 0, i32 3
  %3 = load float, float* %2, align 8
  %4 = getelementptr inbounds %"class.blink::SVGImageForContainer", %"class.blink::SVGImageForContainer"* %0, i64 0, i32 2, i32 0
  %5 = load float, float* %4, align 4
  %6 = fmul float %3, %5
  %7 = getelementptr inbounds %"class.blink::SVGImageForContainer", %"class.blink::SVGImageForContainer"* %0, i64 0, i32 2, i32 1
  %8 = load float, float* %7, align 4
  %9 = fmul float %3, %8
  %10 = tail call float @llvm.round.f32(float %6) #8
  %11 = fpext float %10 to double
  %12 = fcmp ult double %11, 0x41DFFFFFFFC00000
  br i1 %12, label %13, label %18

13:                                               ; preds = %1
  %14 = fcmp ugt float %10, 0xC1E0000000000000
  br i1 %14, label %15, label %18

15:                                               ; preds = %13
  %16 = fptosi float %10 to i32
  %17 = zext i32 %16 to i64
  br label %18

18:                                               ; preds = %15, %13, %1
  %19 = phi i64 [ %17, %15 ], [ 2147483647, %1 ], [ 2147483648, %13 ]
  %20 = tail call float @llvm.round.f32(float %9) #8
  %21 = fpext float %20 to double
  %22 = fcmp ult double %21, 0x41DFFFFFFFC00000
  br i1 %22, label %23, label %29

23:                                               ; preds = %18
  %24 = fcmp ugt float %20, 0xC1E0000000000000
  br i1 %24, label %25, label %29

25:                                               ; preds = %23
  %26 = fptosi float %20 to i32
  %27 = zext i32 %26 to i64
  %28 = shl nuw i64 %27, 32
  br label %29

29:                                               ; preds = %18, %23, %25
  %30 = phi i64 [ %28, %25 ], [ 9223372032559808512, %18 ], [ -9223372036854775808, %23 ]
  %31 = or i64 %30, %19
  ret i64 %31
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden <2 x float> @_ZNK5blink20SVGImageForContainer11SizeAsFloatENS_27RespectImageOrientationEnumE(%"class.blink::SVGImageForContainer"* nocapture readonly, i32) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGImageForContainer", %"class.blink::SVGImageForContainer"* %0, i64 0, i32 3
  %4 = load float, float* %3, align 8
  %5 = getelementptr inbounds %"class.blink::SVGImageForContainer", %"class.blink::SVGImageForContainer"* %0, i64 0, i32 2, i32 0
  %6 = bitcast float* %5 to <2 x float>*
  %7 = load <2 x float>, <2 x float>* %6, align 4
  %8 = insertelement <2 x float> undef, float %4, i32 0
  %9 = shufflevector <2 x float> %8, <2 x float> undef, <2 x i32> zeroinitializer
  %10 = fmul <2 x float> %9, %7
  ret <2 x float> %10
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20SVGImageForContainer4DrawEPN2cc11PaintCanvasERKNS1_10PaintFlagsERKNS_9FloatRectES9_RK17SkSamplingOptionsNS_27RespectImageOrientationEnumENS_5Image17ImageClampingModeENSE_17ImageDecodingModeE(%"class.blink::SVGImageForContainer"*, %"class.cc::PaintCanvas"*, %"class.cc::PaintFlags"* dereferenceable(72), %"class.blink::FloatRect"* dereferenceable(16), %"class.blink::FloatRect"* dereferenceable(16), %struct.SkSamplingOptions* nocapture readnone dereferenceable(20), i32, i32, i32) unnamed_addr #3 align 2 {
  %10 = alloca %"class.blink::SVGImage::DrawInfo", align 8
  %11 = bitcast %"class.blink::SVGImage::DrawInfo"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 bitcast ({ %"class.blink::FloatSize", %"class.blink::LayoutSize", float, [4 x i8], %"class.blink::KURL"* }* @__const._ZN5blink20SVGImageForContainer25PaintImageForCurrentFrameEv.draw_info to i8*), i64 32, i1 false)
  %12 = getelementptr inbounds %"class.blink::SVGImageForContainer", %"class.blink::SVGImageForContainer"* %0, i64 0, i32 2
  %13 = getelementptr inbounds %"class.blink::SVGImageForContainer", %"class.blink::SVGImageForContainer"* %0, i64 0, i32 3
  %14 = load float, float* %13, align 8
  %15 = getelementptr inbounds %"class.blink::SVGImageForContainer", %"class.blink::SVGImageForContainer"* %0, i64 0, i32 4
  call void @_ZN5blink8SVGImage8DrawInfoC1ERKNS_9FloatSizeEfRKNS_4KURLE(%"class.blink::SVGImage::DrawInfo"* nonnull %10, %"class.blink::FloatSize"* dereferenceable(8) %12, float %14, %"class.blink::KURL"* dereferenceable(112) %15) #8
  %16 = getelementptr inbounds %"class.blink::SVGImageForContainer", %"class.blink::SVGImageForContainer"* %0, i64 0, i32 1
  %17 = load %"class.blink::SVGImage"*, %"class.blink::SVGImage"** %16, align 8
  call void @_ZN5blink8SVGImage16DrawForContainerERKNS0_8DrawInfoEPN2cc11PaintCanvasERKNS4_10PaintFlagsERKNS_9FloatRectESC_(%"class.blink::SVGImage"* %17, %"class.blink::SVGImage::DrawInfo"* nonnull dereferenceable(32) %10, %"class.cc::PaintCanvas"* %1, %"class.cc::PaintFlags"* dereferenceable(72) %2, %"class.blink::FloatRect"* dereferenceable(16) %3, %"class.blink::FloatRect"* dereferenceable(16) %4) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN5blink8SVGImage8DrawInfoC1ERKNS_9FloatSizeEfRKNS_4KURLE(%"class.blink::SVGImage::DrawInfo"*, %"class.blink::FloatSize"* dereferenceable(8), float, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #4

declare void @_ZN5blink8SVGImage16DrawForContainerERKNS0_8DrawInfoEPN2cc11PaintCanvasERKNS4_10PaintFlagsERKNS_9FloatRectESC_(%"class.blink::SVGImage"*, %"class.blink::SVGImage::DrawInfo"* dereferenceable(32), %"class.cc::PaintCanvas"*, %"class.cc::PaintFlags"* dereferenceable(72), %"class.blink::FloatRect"* dereferenceable(16), %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20SVGImageForContainer11DrawPatternERNS_15GraphicsContextERKNS_9FloatRectERKNS_9FloatSizeERKNS_10FloatPointE11SkBlendModeS5_S8_NS_27RespectImageOrientationEnumE(%"class.blink::SVGImageForContainer"*, %"class.blink::GraphicsContext"*, %"class.blink::FloatRect"* dereferenceable(16), %"class.blink::FloatSize"* dereferenceable(8), %"class.blink::FloatPoint"* dereferenceable(8), i32, %"class.blink::FloatRect"* dereferenceable(16), %"class.blink::FloatSize"* dereferenceable(8), i32) unnamed_addr #3 align 2 {
  %10 = alloca %"class.blink::SVGImage::DrawInfo", align 8
  %11 = bitcast %"class.blink::SVGImage::DrawInfo"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 bitcast ({ %"class.blink::FloatSize", %"class.blink::LayoutSize", float, [4 x i8], %"class.blink::KURL"* }* @__const._ZN5blink20SVGImageForContainer25PaintImageForCurrentFrameEv.draw_info to i8*), i64 32, i1 false)
  %12 = getelementptr inbounds %"class.blink::SVGImageForContainer", %"class.blink::SVGImageForContainer"* %0, i64 0, i32 2
  %13 = getelementptr inbounds %"class.blink::SVGImageForContainer", %"class.blink::SVGImageForContainer"* %0, i64 0, i32 3
  %14 = load float, float* %13, align 8
  %15 = getelementptr inbounds %"class.blink::SVGImageForContainer", %"class.blink::SVGImageForContainer"* %0, i64 0, i32 4
  call void @_ZN5blink8SVGImage8DrawInfoC1ERKNS_9FloatSizeEfRKNS_4KURLE(%"class.blink::SVGImage::DrawInfo"* nonnull %10, %"class.blink::FloatSize"* dereferenceable(8) %12, float %14, %"class.blink::KURL"* dereferenceable(112) %15) #8
  %16 = getelementptr inbounds %"class.blink::SVGImageForContainer", %"class.blink::SVGImageForContainer"* %0, i64 0, i32 1
  %17 = load %"class.blink::SVGImage"*, %"class.blink::SVGImage"** %16, align 8
  call void @_ZN5blink8SVGImage23DrawPatternForContainerERKNS0_8DrawInfoERNS_15GraphicsContextERKNS_9FloatRectERKNS_9FloatSizeERKNS_10FloatPointE11SkBlendModeS8_SB_(%"class.blink::SVGImage"* %17, %"class.blink::SVGImage::DrawInfo"* nonnull dereferenceable(32) %10, %"class.blink::GraphicsContext"* %1, %"class.blink::FloatRect"* dereferenceable(16) %2, %"class.blink::FloatSize"* dereferenceable(8) %3, %"class.blink::FloatPoint"* dereferenceable(8) %4, i32 %5, %"class.blink::FloatRect"* dereferenceable(16) %6, %"class.blink::FloatSize"* dereferenceable(8) %7) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #8
  ret void
}

declare void @_ZN5blink8SVGImage23DrawPatternForContainerERKNS0_8DrawInfoERNS_15GraphicsContextERKNS_9FloatRectERKNS_9FloatSizeERKNS_10FloatPointE11SkBlendModeS8_SB_(%"class.blink::SVGImage"*, %"class.blink::SVGImage::DrawInfo"* dereferenceable(32), %"class.blink::GraphicsContext"*, %"class.blink::FloatRect"* dereferenceable(16), %"class.blink::FloatSize"* dereferenceable(8), %"class.blink::FloatPoint"* dereferenceable(8), i32, %"class.blink::FloatRect"* dereferenceable(16), %"class.blink::FloatSize"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink20SVGImageForContainer11ApplyShaderERN2cc10PaintFlagsERK8SkMatrix(%"class.blink::SVGImageForContainer"*, %"class.cc::PaintFlags"* dereferenceable(72), %class.SkMatrix* dereferenceable(40)) unnamed_addr #3 align 2 {
  %4 = alloca %"class.blink::SVGImage::DrawInfo", align 8
  %5 = bitcast %"class.blink::SVGImage::DrawInfo"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 bitcast ({ %"class.blink::FloatSize", %"class.blink::LayoutSize", float, [4 x i8], %"class.blink::KURL"* }* @__const._ZN5blink20SVGImageForContainer25PaintImageForCurrentFrameEv.draw_info to i8*), i64 32, i1 false)
  %6 = getelementptr inbounds %"class.blink::SVGImageForContainer", %"class.blink::SVGImageForContainer"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.blink::SVGImageForContainer", %"class.blink::SVGImageForContainer"* %0, i64 0, i32 3
  %8 = load float, float* %7, align 8
  %9 = getelementptr inbounds %"class.blink::SVGImageForContainer", %"class.blink::SVGImageForContainer"* %0, i64 0, i32 4
  call void @_ZN5blink8SVGImage8DrawInfoC1ERKNS_9FloatSizeEfRKNS_4KURLE(%"class.blink::SVGImage::DrawInfo"* nonnull %4, %"class.blink::FloatSize"* dereferenceable(8) %6, float %8, %"class.blink::KURL"* dereferenceable(112) %9) #8
  %10 = getelementptr inbounds %"class.blink::SVGImageForContainer", %"class.blink::SVGImageForContainer"* %0, i64 0, i32 1
  %11 = load %"class.blink::SVGImage"*, %"class.blink::SVGImage"** %10, align 8
  %12 = call zeroext i1 @_ZN5blink8SVGImage23ApplyShaderForContainerERKNS0_8DrawInfoERN2cc10PaintFlagsERK8SkMatrix(%"class.blink::SVGImage"* %11, %"class.blink::SVGImage::DrawInfo"* nonnull dereferenceable(32) %4, %"class.cc::PaintFlags"* dereferenceable(72) %1, %class.SkMatrix* dereferenceable(40) %2) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #8
  ret i1 %12
}

declare zeroext i1 @_ZN5blink8SVGImage23ApplyShaderForContainerERKNS0_8DrawInfoERN2cc10PaintFlagsERK8SkMatrix(%"class.blink::SVGImage"*, %"class.blink::SVGImage::DrawInfo"* dereferenceable(32), %"class.cc::PaintFlags"* dereferenceable(72), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20SVGImageForContainer25PaintImageForCurrentFrameEv(%"class.cc::PaintImage"* noalias sret, %"class.blink::SVGImageForContainer"*) unnamed_addr #3 align 2 {
  %3 = alloca %"class.blink::SVGImage::DrawInfo", align 8
  %4 = alloca %"class.cc::PaintImageBuilder", align 8
  %5 = bitcast %"class.blink::SVGImage::DrawInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 bitcast ({ %"class.blink::FloatSize", %"class.blink::LayoutSize", float, [4 x i8], %"class.blink::KURL"* }* @__const._ZN5blink20SVGImageForContainer25PaintImageForCurrentFrameEv.draw_info to i8*), i64 32, i1 false)
  %6 = getelementptr inbounds %"class.blink::SVGImageForContainer", %"class.blink::SVGImageForContainer"* %1, i64 0, i32 2
  %7 = getelementptr inbounds %"class.blink::SVGImageForContainer", %"class.blink::SVGImageForContainer"* %1, i64 0, i32 3
  %8 = load float, float* %7, align 8
  %9 = getelementptr inbounds %"class.blink::SVGImageForContainer", %"class.blink::SVGImageForContainer"* %1, i64 0, i32 4
  call void @_ZN5blink8SVGImage8DrawInfoC1ERKNS_9FloatSizeEfRKNS_4KURLE(%"class.blink::SVGImage::DrawInfo"* nonnull %3, %"class.blink::FloatSize"* dereferenceable(8) %6, float %8, %"class.blink::KURL"* dereferenceable(112) %9) #8
  %10 = bitcast %"class.cc::PaintImageBuilder"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %10) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 104, i1 false)
  %11 = getelementptr inbounds %"class.blink::SVGImageForContainer", %"class.blink::SVGImageForContainer"* %1, i64 0, i32 0
  call void @_ZN5blink5Image23CreatePaintImageBuilderEv(%"class.cc::PaintImageBuilder"* nonnull sret %4, %"class.blink::Image"* %11) #8
  %12 = getelementptr inbounds %"class.blink::SVGImageForContainer", %"class.blink::SVGImageForContainer"* %1, i64 0, i32 1
  %13 = load %"class.blink::SVGImage"*, %"class.blink::SVGImage"** %12, align 8
  call void @_ZN5blink8SVGImage46PopulatePaintRecordForCurrentFrameForContainerERKNS0_8DrawInfoERN2cc17PaintImageBuilderE(%"class.blink::SVGImage"* %13, %"class.blink::SVGImage::DrawInfo"* nonnull dereferenceable(32) %3, %"class.cc::PaintImageBuilder"* nonnull dereferenceable(104) %4) #8
  call void @_ZN2cc17PaintImageBuilder14TakePaintImageEv(%"class.cc::PaintImage"* sret %0, %"class.cc::PaintImageBuilder"* nonnull %4) #8
  call void @_ZN2cc17PaintImageBuilderD1Ev(%"class.cc::PaintImageBuilder"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink5Image23CreatePaintImageBuilderEv(%"class.cc::PaintImageBuilder"* sret, %"class.blink::Image"*) local_unnamed_addr #4

declare void @_ZN5blink8SVGImage46PopulatePaintRecordForCurrentFrameForContainerERKNS0_8DrawInfoERN2cc17PaintImageBuilderE(%"class.blink::SVGImage"*, %"class.blink::SVGImage::DrawInfo"* dereferenceable(32), %"class.cc::PaintImageBuilder"* dereferenceable(104)) local_unnamed_addr #4

declare void @_ZN2cc17PaintImageBuilder14TakePaintImageEv(%"class.cc::PaintImage"* sret, %"class.cc::PaintImageBuilder"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2cc17PaintImageBuilderD1Ev(%"class.cc::PaintImageBuilder"*) unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20SVGImageForContainerD2Ev(%"class.blink::SVGImageForContainer"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGImageForContainer", %"class.blink::SVGImageForContainer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [42 x i8*] }, { [42 x i8*] }* @_ZTVN5blink20SVGImageForContainerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::SVGImageForContainer", %"class.blink::SVGImageForContainer"* %0, i64 0, i32 4
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %3) #8
  %4 = getelementptr inbounds %"class.blink::SVGImageForContainer", %"class.blink::SVGImageForContainer"* %0, i64 0, i32 0
  tail call void @_ZN5blink5ImageD2Ev(%"class.blink::Image"* %4) #8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20SVGImageForContainerD0Ev(%"class.blink::SVGImageForContainer"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGImageForContainer", %"class.blink::SVGImageForContainer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [42 x i8*] }, { [42 x i8*] }* @_ZTVN5blink20SVGImageForContainerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::SVGImageForContainer", %"class.blink::SVGImageForContainer"* %0, i64 0, i32 4
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %3) #8
  %4 = getelementptr inbounds %"class.blink::SVGImageForContainer", %"class.blink::SVGImageForContainer"* %0, i64 0, i32 0
  tail call void @_ZN5blink5ImageD2Ev(%"class.blink::Image"* %4) #8
  %5 = bitcast %"class.blink::SVGImageForContainer"* %0 to i8*
  tail call void @free(i8* %5) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink5Image10IsSVGImageEv(%"class.blink::Image"*) unnamed_addr #3 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink5Image13IsBitmapImageEv(%"class.blink::Image"*) unnamed_addr #3 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink5Image19IsStaticBitmapImageEv(%"class.blink::Image"*) unnamed_addr #3 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink5Image18IsPlaceholderImageEv(%"class.blink::Image"*) unnamed_addr #3 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink20SVGImageForContainer27CurrentFrameKnownToBeOpaqueEv(%"class.blink::SVGImageForContainer"*) unnamed_addr #3 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink5Image22CurrentFrameIsCompleteEv(%"class.blink::Image"*) unnamed_addr #3 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink5Image25CurrentFrameIsLazyDecodedEv(%"class.blink::Image"*) unnamed_addr #3 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink5Image10FrameCountEv(%"class.blink::Image"*) unnamed_addr #3 comdat align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink5Image15IsTextureBackedEv(%"class.blink::Image"*) unnamed_addr #3 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink5Image35CurrentFrameHasSingleSecurityOriginEv(%"class.blink::Image"*) unnamed_addr #3 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20SVGImageForContainer16HasIntrinsicSizeEv(%"class.blink::SVGImageForContainer"*) unnamed_addr #3 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink5Image20DensityCorrectedSizeEv(%"class.blink::Image"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.blink::Image"* %0 to i64 (%"class.blink::Image"*)***
  %3 = load i64 (%"class.blink::Image"*)**, i64 (%"class.blink::Image"*)*** %2, align 8
  %4 = getelementptr inbounds i64 (%"class.blink::Image"*)*, i64 (%"class.blink::Image"*)** %3, i64 13
  %5 = load i64 (%"class.blink::Image"*)*, i64 (%"class.blink::Image"*)** %4, align 8
  %6 = tail call i64 %5(%"class.blink::Image"* %0) #8
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink5Image20PreferredDisplaySizeEv(%"class.blink::Image"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.blink::Image"* %0 to i64 (%"class.blink::Image"*)***
  %3 = load i64 (%"class.blink::Image"*)**, i64 (%"class.blink::Image"*)*** %2, align 8
  %4 = getelementptr inbounds i64 (%"class.blink::Image"*)*, i64 (%"class.blink::Image"*)** %3, i64 13
  %5 = load i64 (%"class.blink::Image"*)*, i64 (%"class.blink::Image"*)** %4, align 8
  %6 = tail call i64 %5(%"class.blink::Image"* %0) #8
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink5Image10GetHotSpotERNS_8IntPointE(%"class.blink::Image"*, %"class.blink::IntPoint"* dereferenceable(8)) unnamed_addr #3 comdat align 2 {
  ret i1 false
}

declare i32 @_ZN5blink5Image7SetDataE13scoped_refptrIN3WTF12SharedBufferEEb(%"class.blink::Image"*, %"class.WTF::SharedBuffer"*, i1 zeroext) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink5Image11DataChangedEb(%"class.blink::Image"*, i1 zeroext) unnamed_addr #3 comdat align 2 {
  ret i32 0
}

declare %"class.WTF::StringImpl"* @_ZNK5blink5Image17FilenameExtensionEv(%"class.blink::Image"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20SVGImageForContainer18DestroyDecodedDataEv(%"class.blink::SVGImageForContainer"*) unnamed_addr #3 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::SharedBuffer"* @_ZN5blink5Image4DataEv(%"class.blink::Image"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::Image", %"class.blink::Image"* %0, i64 0, i32 3, i32 0
  %3 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %2, align 8
  %4 = icmp eq %"class.WTF::SharedBuffer"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %6) #8
  br label %7

7:                                                ; preds = %1, %5
  ret %"class.WTF::SharedBuffer"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5Image14StartAnimationEv(%"class.blink::Image"*) unnamed_addr #3 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5Image14ResetAnimationEv(%"class.blink::Image"*) unnamed_addr #3 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink5Image13MaybeAnimatedEv(%"class.blink::Image"*) unnamed_addr #3 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5Image18SetAnimationPolicyENS_5mojom20ImageAnimationPolicyE(%"class.blink::Image"*, i32) unnamed_addr #3 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink5Image15AnimationPolicyEv(%"class.blink::Image"*) unnamed_addr #3 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5Image26AdvanceAnimationForTestingEv(%"class.blink::Image"*) unnamed_addr #3 comdat align 2 {
  ret void
}

declare void @_ZN5blink5Image20ImageForDefaultFrameEv() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink5Image21HasDefaultOrientationEv(%"class.blink::Image"*) unnamed_addr #3 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8 @_ZNK5blink5Image23CurrentFrameOrientationEv(%"class.blink::Image"*) unnamed_addr #3 comdat align 2 {
  ret i8 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink5Image32CurrentFrameDensityCorrectedSizeEv(%"class.blink::Image"*) unnamed_addr #3 comdat align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::WebGraphicsContext3DProvider"* @_ZNK5blink5Image15ContextProviderEv(%"class.blink::Image"*) unnamed_addr #3 comdat align 2 {
  ret %"class.blink::WebGraphicsContext3DProvider"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink5Image22ContextProviderWrapperEv(%"class.base::WeakPtr"* noalias sret, %"class.blink::Image"*) unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %0, i64 0, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink5Image15IsSizeAvailableEv(%"class.blink::Image"*) unnamed_addr #3 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.round.f32(float) #7

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN5blink5ImageD2Ev(%"class.blink::Image"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #4

declare void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #4

attributes #0 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
