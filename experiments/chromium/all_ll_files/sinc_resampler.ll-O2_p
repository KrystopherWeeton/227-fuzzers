; ModuleID = '../../media/base/sinc_resampler.cc'
source_filename = "../../media/base/sinc_resampler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.media::SincResampler" = type { double, double, i8, %"class.base::RepeatingCallback", i32, i32, i32, i32, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", float (float*, float*, float*, double)*, float*, float*, float*, float*, float* }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { float* }
%"class.base::CPU" = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.cc::ScopedSubnormalFloatDisabler" = type { i32 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.8", i64, i64 }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.17" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { i64 }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN20trace_event_internal13AddTraceEventIRdEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_ = comdat any

$_ZZN7logging15CheckOpValueStrIN5media13SincResamplerUt_EEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_ = comdat any

$_ZZN7logging15CheckOpValueStrIPfEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@.str = private unnamed_addr constant [20 x i8] c"request_frames_ > 0\00", align 1
@.str.1 = private unnamed_addr constant [35 x i8] c"../../media/base/sinc_resampler.cc\00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"block_size_ > kKernelSize\00", align 1
@.str.3 = private unnamed_addr constant [45 x i8] c"block_size must be greater than kKernelSize!\00", align 1
@.str.4 = private unnamed_addr constant [27 x i8] c"r1_ == input_buffer_.get()\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"r2_ - r1_ == r4_ - r3_\00", align 1
@.str.6 = private unnamed_addr constant [10 x i8] c"r2_ < r3_\00", align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.7 = private unnamed_addr constant [24 x i8] c"SincResampler::Resample\00", align 1
@.str.8 = private unnamed_addr constant [21 x i8] c"io sample rate ratio\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN5media13SincResamplerC1EdiN4base17RepeatingCallbackIFviPfEEE = hidden unnamed_addr alias void (%"class.media::SincResampler"*, double, i32, %"class.base::RepeatingCallback"*), void (%"class.media::SincResampler"*, double, i32, %"class.base::RepeatingCallback"*)* @_ZN5media13SincResamplerC2EdiN4base17RepeatingCallbackIFviPfEEE
@_ZN5media13SincResamplerD1Ev = hidden unnamed_addr alias void (%"class.media::SincResampler"*), void (%"class.media::SincResampler"*)* @_ZN5media13SincResamplerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media13SincResampler29InitializeCPUSpecificFeaturesEv(%"class.media::SincResampler"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::CPU", align 8
  %3 = bitcast %"class.base::CPU"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %3) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -86, i64 96, i1 false)
  call void @_ZN4base3CPUC1Ev(%"class.base::CPU"* nonnull %2) #14
  %4 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %2, i64 0, i32 18
  %5 = load i8, i8* %4, align 2, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 12
  store float (float*, float*, float*, double)* @_ZN5media13SincResampler13Convolve_AVX2EPKfS2_S2_d, float (float*, float*, float*, double)** %8, align 8
  br label %16

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %2, i64 0, i32 11
  %11 = load i8, i8* %10, align 1, !range !2
  %12 = icmp eq i8 %11, 0
  %13 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 12
  br i1 %12, label %15, label %14

14:                                               ; preds = %9
  store float (float*, float*, float*, double)* @_ZN5media13SincResampler12Convolve_SSEEPKfS2_S2_d, float (float*, float*, float*, double)** %13, align 8
  br label %16

15:                                               ; preds = %9
  store float (float*, float*, float*, double)* @_ZN5media13SincResampler10Convolve_CEPKfS2_S2_d, float (float*, float*, float*, double)** %13, align 8
  br label %16

16:                                               ; preds = %14, %15, %7
  %17 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %2, i64 0, i32 25
  %18 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %24) #15
  br label %25

25:                                               ; preds = %22, %16
  %26 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %2, i64 0, i32 24
  %27 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %33) #15
  br label %34

34:                                               ; preds = %25, %31
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %3) #14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN4base3CPUC1Ev(%"class.base::CPU"*) unnamed_addr #2

; Function Attrs: nounwind readonly ssp uwtable
define hidden float @_ZN5media13SincResampler13Convolve_AVX2EPKfS2_S2_d(float*, float* nocapture readonly, float* nocapture readonly, double) #3 align 2 {
  %5 = ptrtoint float* %0 to i64
  %6 = and i64 %5, 31
  %7 = icmp eq i64 %6, 0
  %8 = bitcast float* %0 to <8 x float>*
  br i1 %7, label %50, label %9

9:                                                ; preds = %4
  %10 = load <8 x float>, <8 x float>* %8, align 1
  %11 = bitcast float* %1 to <8 x float>*
  %12 = load <8 x float>, <8 x float>* %11, align 32
  %13 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %10, <8 x float> %12, <8 x float> zeroinitializer) #14
  %14 = bitcast float* %2 to <8 x float>*
  %15 = load <8 x float>, <8 x float>* %14, align 32
  %16 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %10, <8 x float> %15, <8 x float> zeroinitializer) #14
  %17 = getelementptr inbounds float, float* %0, i64 8
  %18 = bitcast float* %17 to <8 x float>*
  %19 = load <8 x float>, <8 x float>* %18, align 1
  %20 = getelementptr inbounds float, float* %1, i64 8
  %21 = bitcast float* %20 to <8 x float>*
  %22 = load <8 x float>, <8 x float>* %21, align 32
  %23 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %19, <8 x float> %22, <8 x float> %13) #14
  %24 = getelementptr inbounds float, float* %2, i64 8
  %25 = bitcast float* %24 to <8 x float>*
  %26 = load <8 x float>, <8 x float>* %25, align 32
  %27 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %19, <8 x float> %26, <8 x float> %16) #14
  %28 = getelementptr inbounds float, float* %0, i64 16
  %29 = bitcast float* %28 to <8 x float>*
  %30 = load <8 x float>, <8 x float>* %29, align 1
  %31 = getelementptr inbounds float, float* %1, i64 16
  %32 = bitcast float* %31 to <8 x float>*
  %33 = load <8 x float>, <8 x float>* %32, align 32
  %34 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %30, <8 x float> %33, <8 x float> %23) #14
  %35 = getelementptr inbounds float, float* %2, i64 16
  %36 = bitcast float* %35 to <8 x float>*
  %37 = load <8 x float>, <8 x float>* %36, align 32
  %38 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %30, <8 x float> %37, <8 x float> %27) #14
  %39 = getelementptr inbounds float, float* %0, i64 24
  %40 = bitcast float* %39 to <8 x float>*
  %41 = load <8 x float>, <8 x float>* %40, align 1
  %42 = getelementptr inbounds float, float* %1, i64 24
  %43 = bitcast float* %42 to <8 x float>*
  %44 = load <8 x float>, <8 x float>* %43, align 32
  %45 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %41, <8 x float> %44, <8 x float> %34) #14
  %46 = getelementptr inbounds float, float* %2, i64 24
  %47 = bitcast float* %46 to <8 x float>*
  %48 = load <8 x float>, <8 x float>* %47, align 32
  %49 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %41, <8 x float> %48, <8 x float> %38) #14
  br label %91

50:                                               ; preds = %4
  %51 = load <8 x float>, <8 x float>* %8, align 32
  %52 = bitcast float* %1 to <8 x float>*
  %53 = load <8 x float>, <8 x float>* %52, align 32
  %54 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %51, <8 x float> %53, <8 x float> zeroinitializer) #14
  %55 = bitcast float* %2 to <8 x float>*
  %56 = load <8 x float>, <8 x float>* %55, align 32
  %57 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %51, <8 x float> %56, <8 x float> zeroinitializer) #14
  %58 = getelementptr inbounds float, float* %0, i64 8
  %59 = bitcast float* %58 to <8 x float>*
  %60 = load <8 x float>, <8 x float>* %59, align 32
  %61 = getelementptr inbounds float, float* %1, i64 8
  %62 = bitcast float* %61 to <8 x float>*
  %63 = load <8 x float>, <8 x float>* %62, align 32
  %64 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %60, <8 x float> %63, <8 x float> %54) #14
  %65 = getelementptr inbounds float, float* %2, i64 8
  %66 = bitcast float* %65 to <8 x float>*
  %67 = load <8 x float>, <8 x float>* %66, align 32
  %68 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %60, <8 x float> %67, <8 x float> %57) #14
  %69 = getelementptr inbounds float, float* %0, i64 16
  %70 = bitcast float* %69 to <8 x float>*
  %71 = load <8 x float>, <8 x float>* %70, align 32
  %72 = getelementptr inbounds float, float* %1, i64 16
  %73 = bitcast float* %72 to <8 x float>*
  %74 = load <8 x float>, <8 x float>* %73, align 32
  %75 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %71, <8 x float> %74, <8 x float> %64) #14
  %76 = getelementptr inbounds float, float* %2, i64 16
  %77 = bitcast float* %76 to <8 x float>*
  %78 = load <8 x float>, <8 x float>* %77, align 32
  %79 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %71, <8 x float> %78, <8 x float> %68) #14
  %80 = getelementptr inbounds float, float* %0, i64 24
  %81 = bitcast float* %80 to <8 x float>*
  %82 = load <8 x float>, <8 x float>* %81, align 32
  %83 = getelementptr inbounds float, float* %1, i64 24
  %84 = bitcast float* %83 to <8 x float>*
  %85 = load <8 x float>, <8 x float>* %84, align 32
  %86 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %82, <8 x float> %85, <8 x float> %75) #14
  %87 = getelementptr inbounds float, float* %2, i64 24
  %88 = bitcast float* %87 to <8 x float>*
  %89 = load <8 x float>, <8 x float>* %88, align 32
  %90 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %82, <8 x float> %89, <8 x float> %79) #14
  br label %91

91:                                               ; preds = %9, %50
  %92 = phi <8 x float> [ %90, %50 ], [ %49, %9 ]
  %93 = phi <8 x float> [ %86, %50 ], [ %45, %9 ]
  %94 = shufflevector <8 x float> %93, <8 x float> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %95 = shufflevector <8 x float> %93, <8 x float> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %96 = fadd <4 x float> %94, %95
  %97 = shufflevector <8 x float> %92, <8 x float> undef, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %98 = shufflevector <8 x float> %92, <8 x float> undef, <4 x i32> <i32 4, i32 5, i32 6, i32 7>
  %99 = fadd <4 x float> %97, %98
  %100 = fsub double 1.000000e+00, %3
  %101 = fptrunc double %100 to float
  %102 = insertelement <4 x float> undef, float %101, i32 0
  %103 = shufflevector <4 x float> %102, <4 x float> undef, <4 x i32> zeroinitializer
  %104 = fmul <4 x float> %103, %96
  %105 = fptrunc double %3 to float
  %106 = insertelement <4 x float> undef, float %105, i32 0
  %107 = shufflevector <4 x float> %106, <4 x float> undef, <4 x i32> zeroinitializer
  %108 = fmul <4 x float> %107, %99
  %109 = fadd <4 x float> %108, %104
  %110 = shufflevector <4 x float> %109, <4 x float> undef, <4 x i32> <i32 2, i32 3, i32 2, i32 3>
  %111 = fadd <4 x float> %109, %110
  %112 = extractelement <4 x float> %111, i32 1
  %113 = extractelement <4 x float> %111, i32 0
  %114 = fadd float %113, %112
  ret float %114
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden float @_ZN5media13SincResampler12Convolve_SSEEPKfS2_S2_d(float*, float* nocapture readonly, float* nocapture readonly, double) #4 align 2 {
  %5 = ptrtoint float* %0 to i64
  %6 = and i64 %5, 15
  %7 = icmp eq i64 %6, 0
  %8 = bitcast float* %0 to <4 x float>*
  br i1 %7, label %97, label %9

9:                                                ; preds = %4
  %10 = load <4 x float>, <4 x float>* %8, align 1
  %11 = bitcast float* %1 to <4 x float>*
  %12 = load <4 x float>, <4 x float>* %11, align 16
  %13 = fmul <4 x float> %10, %12
  %14 = fadd <4 x float> %13, zeroinitializer
  %15 = bitcast float* %2 to <4 x float>*
  %16 = load <4 x float>, <4 x float>* %15, align 16
  %17 = fmul <4 x float> %10, %16
  %18 = fadd <4 x float> %17, zeroinitializer
  %19 = getelementptr inbounds float, float* %0, i64 4
  %20 = bitcast float* %19 to <4 x float>*
  %21 = load <4 x float>, <4 x float>* %20, align 1
  %22 = getelementptr inbounds float, float* %1, i64 4
  %23 = bitcast float* %22 to <4 x float>*
  %24 = load <4 x float>, <4 x float>* %23, align 16
  %25 = fmul <4 x float> %21, %24
  %26 = fadd <4 x float> %14, %25
  %27 = getelementptr inbounds float, float* %2, i64 4
  %28 = bitcast float* %27 to <4 x float>*
  %29 = load <4 x float>, <4 x float>* %28, align 16
  %30 = fmul <4 x float> %21, %29
  %31 = fadd <4 x float> %18, %30
  %32 = getelementptr inbounds float, float* %0, i64 8
  %33 = bitcast float* %32 to <4 x float>*
  %34 = load <4 x float>, <4 x float>* %33, align 1
  %35 = getelementptr inbounds float, float* %1, i64 8
  %36 = bitcast float* %35 to <4 x float>*
  %37 = load <4 x float>, <4 x float>* %36, align 16
  %38 = fmul <4 x float> %34, %37
  %39 = fadd <4 x float> %26, %38
  %40 = getelementptr inbounds float, float* %2, i64 8
  %41 = bitcast float* %40 to <4 x float>*
  %42 = load <4 x float>, <4 x float>* %41, align 16
  %43 = fmul <4 x float> %34, %42
  %44 = fadd <4 x float> %31, %43
  %45 = getelementptr inbounds float, float* %0, i64 12
  %46 = bitcast float* %45 to <4 x float>*
  %47 = load <4 x float>, <4 x float>* %46, align 1
  %48 = getelementptr inbounds float, float* %1, i64 12
  %49 = bitcast float* %48 to <4 x float>*
  %50 = load <4 x float>, <4 x float>* %49, align 16
  %51 = fmul <4 x float> %47, %50
  %52 = fadd <4 x float> %39, %51
  %53 = getelementptr inbounds float, float* %2, i64 12
  %54 = bitcast float* %53 to <4 x float>*
  %55 = load <4 x float>, <4 x float>* %54, align 16
  %56 = fmul <4 x float> %47, %55
  %57 = fadd <4 x float> %44, %56
  %58 = getelementptr inbounds float, float* %0, i64 16
  %59 = bitcast float* %58 to <4 x float>*
  %60 = load <4 x float>, <4 x float>* %59, align 1
  %61 = getelementptr inbounds float, float* %1, i64 16
  %62 = bitcast float* %61 to <4 x float>*
  %63 = load <4 x float>, <4 x float>* %62, align 16
  %64 = fmul <4 x float> %60, %63
  %65 = fadd <4 x float> %52, %64
  %66 = getelementptr inbounds float, float* %2, i64 16
  %67 = bitcast float* %66 to <4 x float>*
  %68 = load <4 x float>, <4 x float>* %67, align 16
  %69 = fmul <4 x float> %60, %68
  %70 = fadd <4 x float> %57, %69
  %71 = getelementptr inbounds float, float* %0, i64 20
  %72 = bitcast float* %71 to <4 x float>*
  %73 = load <4 x float>, <4 x float>* %72, align 1
  %74 = getelementptr inbounds float, float* %1, i64 20
  %75 = bitcast float* %74 to <4 x float>*
  %76 = load <4 x float>, <4 x float>* %75, align 16
  %77 = fmul <4 x float> %73, %76
  %78 = fadd <4 x float> %65, %77
  %79 = getelementptr inbounds float, float* %2, i64 20
  %80 = bitcast float* %79 to <4 x float>*
  %81 = load <4 x float>, <4 x float>* %80, align 16
  %82 = fmul <4 x float> %73, %81
  %83 = fadd <4 x float> %70, %82
  %84 = getelementptr inbounds float, float* %0, i64 24
  %85 = bitcast float* %84 to <4 x float>*
  %86 = load <4 x float>, <4 x float>* %85, align 1
  %87 = getelementptr inbounds float, float* %1, i64 24
  %88 = bitcast float* %87 to <4 x float>*
  %89 = load <4 x float>, <4 x float>* %88, align 16
  %90 = fmul <4 x float> %86, %89
  %91 = fadd <4 x float> %78, %90
  %92 = getelementptr inbounds float, float* %2, i64 24
  %93 = bitcast float* %92 to <4 x float>*
  %94 = load <4 x float>, <4 x float>* %93, align 16
  %95 = fmul <4 x float> %86, %94
  %96 = fadd <4 x float> %83, %95
  br label %185

97:                                               ; preds = %4
  %98 = load <4 x float>, <4 x float>* %8, align 16
  %99 = bitcast float* %1 to <4 x float>*
  %100 = load <4 x float>, <4 x float>* %99, align 16
  %101 = fmul <4 x float> %98, %100
  %102 = fadd <4 x float> %101, zeroinitializer
  %103 = bitcast float* %2 to <4 x float>*
  %104 = load <4 x float>, <4 x float>* %103, align 16
  %105 = fmul <4 x float> %98, %104
  %106 = fadd <4 x float> %105, zeroinitializer
  %107 = getelementptr inbounds float, float* %0, i64 4
  %108 = bitcast float* %107 to <4 x float>*
  %109 = load <4 x float>, <4 x float>* %108, align 16
  %110 = getelementptr inbounds float, float* %1, i64 4
  %111 = bitcast float* %110 to <4 x float>*
  %112 = load <4 x float>, <4 x float>* %111, align 16
  %113 = fmul <4 x float> %109, %112
  %114 = fadd <4 x float> %102, %113
  %115 = getelementptr inbounds float, float* %2, i64 4
  %116 = bitcast float* %115 to <4 x float>*
  %117 = load <4 x float>, <4 x float>* %116, align 16
  %118 = fmul <4 x float> %109, %117
  %119 = fadd <4 x float> %106, %118
  %120 = getelementptr inbounds float, float* %0, i64 8
  %121 = bitcast float* %120 to <4 x float>*
  %122 = load <4 x float>, <4 x float>* %121, align 16
  %123 = getelementptr inbounds float, float* %1, i64 8
  %124 = bitcast float* %123 to <4 x float>*
  %125 = load <4 x float>, <4 x float>* %124, align 16
  %126 = fmul <4 x float> %122, %125
  %127 = fadd <4 x float> %114, %126
  %128 = getelementptr inbounds float, float* %2, i64 8
  %129 = bitcast float* %128 to <4 x float>*
  %130 = load <4 x float>, <4 x float>* %129, align 16
  %131 = fmul <4 x float> %122, %130
  %132 = fadd <4 x float> %119, %131
  %133 = getelementptr inbounds float, float* %0, i64 12
  %134 = bitcast float* %133 to <4 x float>*
  %135 = load <4 x float>, <4 x float>* %134, align 16
  %136 = getelementptr inbounds float, float* %1, i64 12
  %137 = bitcast float* %136 to <4 x float>*
  %138 = load <4 x float>, <4 x float>* %137, align 16
  %139 = fmul <4 x float> %135, %138
  %140 = fadd <4 x float> %127, %139
  %141 = getelementptr inbounds float, float* %2, i64 12
  %142 = bitcast float* %141 to <4 x float>*
  %143 = load <4 x float>, <4 x float>* %142, align 16
  %144 = fmul <4 x float> %135, %143
  %145 = fadd <4 x float> %132, %144
  %146 = getelementptr inbounds float, float* %0, i64 16
  %147 = bitcast float* %146 to <4 x float>*
  %148 = load <4 x float>, <4 x float>* %147, align 16
  %149 = getelementptr inbounds float, float* %1, i64 16
  %150 = bitcast float* %149 to <4 x float>*
  %151 = load <4 x float>, <4 x float>* %150, align 16
  %152 = fmul <4 x float> %148, %151
  %153 = fadd <4 x float> %140, %152
  %154 = getelementptr inbounds float, float* %2, i64 16
  %155 = bitcast float* %154 to <4 x float>*
  %156 = load <4 x float>, <4 x float>* %155, align 16
  %157 = fmul <4 x float> %148, %156
  %158 = fadd <4 x float> %145, %157
  %159 = getelementptr inbounds float, float* %0, i64 20
  %160 = bitcast float* %159 to <4 x float>*
  %161 = load <4 x float>, <4 x float>* %160, align 16
  %162 = getelementptr inbounds float, float* %1, i64 20
  %163 = bitcast float* %162 to <4 x float>*
  %164 = load <4 x float>, <4 x float>* %163, align 16
  %165 = fmul <4 x float> %161, %164
  %166 = fadd <4 x float> %153, %165
  %167 = getelementptr inbounds float, float* %2, i64 20
  %168 = bitcast float* %167 to <4 x float>*
  %169 = load <4 x float>, <4 x float>* %168, align 16
  %170 = fmul <4 x float> %161, %169
  %171 = fadd <4 x float> %158, %170
  %172 = getelementptr inbounds float, float* %0, i64 24
  %173 = bitcast float* %172 to <4 x float>*
  %174 = load <4 x float>, <4 x float>* %173, align 16
  %175 = getelementptr inbounds float, float* %1, i64 24
  %176 = bitcast float* %175 to <4 x float>*
  %177 = load <4 x float>, <4 x float>* %176, align 16
  %178 = fmul <4 x float> %174, %177
  %179 = fadd <4 x float> %166, %178
  %180 = getelementptr inbounds float, float* %2, i64 24
  %181 = bitcast float* %180 to <4 x float>*
  %182 = load <4 x float>, <4 x float>* %181, align 16
  %183 = fmul <4 x float> %174, %182
  %184 = fadd <4 x float> %171, %183
  br label %185

185:                                              ; preds = %9, %97
  %186 = phi <4 x float> [ %91, %9 ], [ %179, %97 ]
  %187 = phi <4 x float> [ %96, %9 ], [ %184, %97 ]
  %188 = getelementptr inbounds float, float* %0, i64 28
  %189 = bitcast float* %188 to <4 x float>*
  %190 = load <4 x float>, <4 x float>* %189, align 1
  %191 = getelementptr inbounds float, float* %1, i64 28
  %192 = bitcast float* %191 to <4 x float>*
  %193 = load <4 x float>, <4 x float>* %192, align 16
  %194 = fmul <4 x float> %190, %193
  %195 = fadd <4 x float> %186, %194
  %196 = getelementptr inbounds float, float* %2, i64 28
  %197 = bitcast float* %196 to <4 x float>*
  %198 = load <4 x float>, <4 x float>* %197, align 16
  %199 = fmul <4 x float> %190, %198
  %200 = fadd <4 x float> %187, %199
  %201 = fsub double 1.000000e+00, %3
  %202 = fptrunc double %201 to float
  %203 = insertelement <4 x float> undef, float %202, i32 0
  %204 = shufflevector <4 x float> %203, <4 x float> undef, <4 x i32> zeroinitializer
  %205 = fmul <4 x float> %204, %195
  %206 = fptrunc double %3 to float
  %207 = insertelement <4 x float> undef, float %206, i32 0
  %208 = shufflevector <4 x float> %207, <4 x float> undef, <4 x i32> zeroinitializer
  %209 = fmul <4 x float> %208, %200
  %210 = fadd <4 x float> %205, %209
  %211 = shufflevector <4 x float> %210, <4 x float> undef, <4 x i32> <i32 2, i32 3, i32 2, i32 3>
  %212 = fadd <4 x float> %210, %211
  %213 = extractelement <4 x float> %212, i32 1
  %214 = extractelement <4 x float> %212, i32 0
  %215 = fadd float %214, %213
  ret float %215
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZN5media13SincResampler10Convolve_CEPKfS2_S2_d(float* nocapture readonly, float* nocapture readonly, float* nocapture readonly, double) #5 align 2 {
  br label %5

5:                                                ; preds = %5, %4
  %6 = phi i32 [ 32, %4 ], [ %23, %5 ]
  %7 = phi float* [ %0, %4 ], [ %27, %5 ]
  %8 = phi float* [ %2, %4 ], [ %28, %5 ]
  %9 = phi float* [ %1, %4 ], [ %25, %5 ]
  %10 = phi <2 x float> [ zeroinitializer, %4 ], [ %35, %5 ]
  %11 = load float, float* %7, align 4
  %12 = getelementptr inbounds float, float* %9, i64 1
  %13 = load float, float* %9, align 4
  %14 = getelementptr inbounds float, float* %7, i64 1
  %15 = getelementptr inbounds float, float* %8, i64 1
  %16 = load float, float* %8, align 4
  %17 = insertelement <2 x float> undef, float %11, i32 0
  %18 = shufflevector <2 x float> %17, <2 x float> undef, <2 x i32> zeroinitializer
  %19 = insertelement <2 x float> undef, float %13, i32 0
  %20 = insertelement <2 x float> %19, float %16, i32 1
  %21 = fmul <2 x float> %18, %20
  %22 = fadd <2 x float> %10, %21
  %23 = add nsw i32 %6, -2
  %24 = load float, float* %14, align 4
  %25 = getelementptr inbounds float, float* %9, i64 2
  %26 = load float, float* %12, align 4
  %27 = getelementptr inbounds float, float* %7, i64 2
  %28 = getelementptr inbounds float, float* %8, i64 2
  %29 = load float, float* %15, align 4
  %30 = insertelement <2 x float> undef, float %24, i32 0
  %31 = shufflevector <2 x float> %30, <2 x float> undef, <2 x i32> zeroinitializer
  %32 = insertelement <2 x float> undef, float %26, i32 0
  %33 = insertelement <2 x float> %32, float %29, i32 1
  %34 = fmul <2 x float> %31, %33
  %35 = fadd <2 x float> %22, %34
  %36 = icmp eq i32 %23, 0
  br i1 %36, label %37, label %5

37:                                               ; preds = %5
  %38 = fsub double 1.000000e+00, %3
  %39 = fpext <2 x float> %35 to <2 x double>
  %40 = insertelement <2 x double> undef, double %38, i32 0
  %41 = insertelement <2 x double> %40, double %3, i32 1
  %42 = fmul <2 x double> %41, %39
  %43 = extractelement <2 x double> %42, i32 0
  %44 = extractelement <2 x double> %42, i32 1
  %45 = fadd double %43, %44
  %46 = fptrunc double %45 to float
  ret float %46
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media13SincResamplerC2EdiN4base17RepeatingCallbackIFviPfEEE(%"class.media::SincResampler"*, double, i32, %"class.base::RepeatingCallback"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.base::CPU", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca i32, align 4
  %12 = alloca %"class.logging::CheckError", align 8
  %13 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 0
  store double %1, double* %13, align 8
  %14 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 3, i32 0
  %15 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %3, i64 0, i32 0
  tail call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %14, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %15) #14
  %16 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 4
  store i32 %2, i32* %16, align 8
  %17 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 7
  %18 = add nsw i32 %2, 32
  store i32 %18, i32* %17, align 4
  %19 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 8
  %20 = tail call i8* @_ZN4base12AlignedAllocEmm(i64 4224, i64 32) #14
  %21 = ptrtoint i8* %20 to i64
  %22 = bitcast %"class.std::__1::unique_ptr"* %19 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 9
  %24 = tail call i8* @_ZN4base12AlignedAllocEmm(i64 4224, i64 32) #14
  %25 = ptrtoint i8* %24 to i64
  %26 = bitcast %"class.std::__1::unique_ptr"* %23 to i64*
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 10
  %28 = tail call i8* @_ZN4base12AlignedAllocEmm(i64 4224, i64 32) #14
  %29 = ptrtoint i8* %28 to i64
  %30 = bitcast %"class.std::__1::unique_ptr"* %27 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 11
  %32 = load i32, i32* %17, align 4
  %33 = sext i32 %32 to i64
  %34 = shl nsw i64 %33, 2
  %35 = tail call i8* @_ZN4base12AlignedAllocEmm(i64 %34, i64 32) #14
  %36 = ptrtoint i8* %35 to i64
  %37 = bitcast %"class.std::__1::unique_ptr"* %31 to i64*
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 14
  %39 = bitcast float** %38 to i8**
  store i8* %35, i8** %39, align 8
  %40 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 15
  %41 = getelementptr inbounds i8, i8* %35, i64 64
  %42 = bitcast float** %40 to i8**
  store i8* %41, i8** %42, align 8
  %43 = bitcast %"class.base::CPU"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %43) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 96, i1 false) #14
  call void @_ZN4base3CPUC1Ev(%"class.base::CPU"* nonnull %6) #14
  %44 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %6, i64 0, i32 18
  %45 = load i8, i8* %44, align 2, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %49, label %47

47:                                               ; preds = %4
  %48 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 12
  store float (float*, float*, float*, double)* @_ZN5media13SincResampler13Convolve_AVX2EPKfS2_S2_d, float (float*, float*, float*, double)** %48, align 8
  br label %56

49:                                               ; preds = %4
  %50 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %6, i64 0, i32 11
  %51 = load i8, i8* %50, align 1, !range !2
  %52 = icmp eq i8 %51, 0
  %53 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 12
  br i1 %52, label %55, label %54

54:                                               ; preds = %49
  store float (float*, float*, float*, double)* @_ZN5media13SincResampler12Convolve_SSEEPKfS2_S2_d, float (float*, float*, float*, double)** %53, align 8
  br label %56

55:                                               ; preds = %49
  store float (float*, float*, float*, double)* @_ZN5media13SincResampler10Convolve_CEPKfS2_S2_d, float (float*, float*, float*, double)** %53, align 8
  br label %56

56:                                               ; preds = %55, %54, %47
  %57 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %6, i64 0, i32 25
  %58 = bitcast %"class.std::__1::basic_string"* %57 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  call void @_ZdlPv(i8* %64) #15
  br label %65

65:                                               ; preds = %62, %56
  %66 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %6, i64 0, i32 24
  %67 = bitcast %"class.std::__1::basic_string"* %66 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  call void @_ZdlPv(i8* %73) #15
  br label %74

74:                                               ; preds = %65, %71
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %43) #14
  %75 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #14
  %76 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %76, align 8
  %77 = load i32, i32* %16, align 8
  %78 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78)
  %79 = icmp sgt i32 %77, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %74
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78)
  store i8* null, i8** %76, align 8
  br label %90

81:                                               ; preds = %74
  %82 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %77) #14
  %83 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* %82, i8* %83) #14
  %84 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %85 = load i8*, i8** %84, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78)
  store i8* %85, i8** %76, align 8
  %86 = icmp eq i8* %85, null
  br i1 %86, label %90, label %87

87:                                               ; preds = %81
  %88 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), i32 160, %"class.logging::CheckOpResult"* nonnull %8) #14
  %89 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #14
  br label %90

90:                                               ; preds = %80, %81, %87
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #14
  %91 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 1
  store double 0.000000e+00, double* %91, align 8
  %92 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 2
  store i8 0, i8* %92, align 8
  %93 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %94 = bitcast float** %93 to i8**
  %95 = load i8*, i8** %94, align 8
  %96 = load i32, i32* %17, align 4
  %97 = sext i32 %96 to i64
  %98 = shl nsw i64 %97, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %95, i8 0, i64 %98, i1 false) #14
  call void @_ZN5media13SincResampler13UpdateRegionsEb(%"class.media::SincResampler"* %0, i1 zeroext false) #14
  %99 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #14
  %100 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %100, align 8
  %101 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 5
  %102 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %102) #14
  store i32 32, i32* %11, align 4
  %103 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103)
  %104 = load i32, i32* %101, align 4
  %105 = icmp sgt i32 %104, 32
  br i1 %105, label %106, label %107

106:                                              ; preds = %90
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103)
  store i8* null, i8** %100, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %102) #14
  br label %117

107:                                              ; preds = %90
  %108 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %104) #14
  %109 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %102, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIN5media13SincResamplerUt_EEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0), i8* %108, i8* %109) #14
  %110 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %111 = load i8*, i8** %110, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103)
  store i8* %111, i8** %100, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %102) #14
  %112 = icmp eq i8* %111, null
  br i1 %112, label %117, label %113

113:                                              ; preds = %107
  %114 = bitcast %"class.logging::CheckError"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %114) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %12, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), i32 162, %"class.logging::CheckOpResult"* nonnull %10) #14
  %115 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %12) #14
  %116 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %115, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3, i64 0, i64 0), i64 44) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %12) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %114) #14
  br label %117

117:                                              ; preds = %106, %107, %113
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #14
  %118 = bitcast %"class.std::__1::unique_ptr"* %19 to i8**
  %119 = load i8*, i8** %118, align 8
  call void @llvm.memset.p0i8.i64(i8* align 4 %119, i8 0, i64 4224, i1 false)
  %120 = bitcast %"class.std::__1::unique_ptr"* %23 to i8**
  %121 = load i8*, i8** %120, align 8
  call void @llvm.memset.p0i8.i64(i8* align 4 %121, i8 0, i64 4224, i1 false)
  %122 = bitcast %"class.std::__1::unique_ptr"* %27 to i8**
  %123 = load i8*, i8** %122, align 8
  call void @llvm.memset.p0i8.i64(i8* align 4 %123, i8 0, i64 4224, i1 false)
  %124 = load double, double* %13, align 8
  %125 = fcmp ogt double %124, 1.000000e+00
  br i1 %125, label %126, label %129

126:                                              ; preds = %117
  %127 = fdiv double 1.000000e+00, %124
  %128 = fmul double %127, 9.000000e-01
  br label %129

129:                                              ; preds = %126, %117
  %130 = phi double [ %128, %126 ], [ 9.000000e-01, %117 ]
  %131 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %132 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %133 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  br label %134

134:                                              ; preds = %140, %129
  %135 = phi i64 [ 0, %129 ], [ %141, %140 ]
  %136 = trunc i64 %135 to i32
  %137 = sitofp i32 %136 to float
  %138 = fmul float %137, 3.125000e-02
  %139 = shl i64 %135, 5
  br label %143

140:                                              ; preds = %175
  %141 = add nuw nsw i64 %135, 1
  %142 = icmp eq i64 %141, 33
  br i1 %142, label %183, label %134

143:                                              ; preds = %175, %134
  %144 = phi i64 [ 0, %134 ], [ %181, %175 ]
  %145 = add nuw nsw i64 %144, %139
  %146 = trunc i64 %144 to i32
  %147 = add i32 %146, -16
  %148 = sitofp i32 %147 to float
  %149 = fsub float %148, %138
  %150 = fmul float %149, 0x400921FB60000000
  %151 = load float*, float** %131, align 8
  %152 = getelementptr inbounds float, float* %151, i64 %145
  store float %150, float* %152, align 4
  %153 = sitofp i32 %146 to float
  %154 = fsub float %153, %138
  %155 = fmul float %154, 3.125000e-02
  %156 = fpext float %155 to double
  %157 = fmul double %156, 0x401921FB54442D18
  %158 = call double @cos(double %157) #14
  %159 = fmul double %158, 5.000000e-01
  %160 = fsub double 4.200000e-01, %159
  %161 = fmul double %156, 0x402921FB54442D18
  %162 = call double @cos(double %161) #14
  %163 = fmul double %162, 8.000000e-02
  %164 = fadd double %160, %163
  %165 = fptrunc double %164 to float
  %166 = load float*, float** %132, align 8
  %167 = getelementptr inbounds float, float* %166, i64 %145
  store float %165, float* %167, align 4
  %168 = fpext float %165 to double
  %169 = fcmp une float %150, 0.000000e+00
  br i1 %169, label %170, label %175

170:                                              ; preds = %143
  %171 = fpext float %150 to double
  %172 = fmul double %130, %171
  %173 = call double @sin(double %172) #14
  %174 = fdiv double %173, %171
  br label %175

175:                                              ; preds = %170, %143
  %176 = phi double [ %174, %170 ], [ %130, %143 ]
  %177 = fmul double %176, %168
  %178 = fptrunc double %177 to float
  %179 = load float*, float** %133, align 8
  %180 = getelementptr inbounds float, float* %179, i64 %145
  store float %178, float* %180, align 4
  %181 = add nuw nsw i64 %144, 1
  %182 = icmp eq i64 %181, 32
  br i1 %182, label %140, label %143

183:                                              ; preds = %140
  ret void
}

declare i8* @_ZN4base12AlignedAllocEmm(i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media13SincResampler5FlushEv(%"class.media::SincResampler"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 1
  store double 0.000000e+00, double* %2, align 8
  %3 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 2
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %5 = bitcast float** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 7
  %8 = load i32, i32* %7, align 4
  %9 = sext i32 %8 to i64
  %10 = shl nsw i64 %9, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 %10, i1 false)
  tail call void @_ZN5media13SincResampler13UpdateRegionsEb(%"class.media::SincResampler"* %0, i1 zeroext false)
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN5media13SincResampler16InitializeKernelEv(%"class.media::SincResampler"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 0
  %3 = load double, double* %2, align 8
  %4 = fcmp ogt double %3, 1.000000e+00
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = fdiv double 1.000000e+00, %3
  %7 = fmul double %6, 9.000000e-01
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi double [ %7, %5 ], [ 9.000000e-01, %1 ]
  %10 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  br label %14

13:                                               ; preds = %20
  ret void

14:                                               ; preds = %20, %8
  %15 = phi i64 [ 0, %8 ], [ %21, %20 ]
  %16 = trunc i64 %15 to i32
  %17 = sitofp i32 %16 to float
  %18 = fmul float %17, 3.125000e-02
  %19 = shl i64 %15, 5
  br label %23

20:                                               ; preds = %56
  %21 = add nuw nsw i64 %15, 1
  %22 = icmp eq i64 %21, 33
  br i1 %22, label %13, label %14

23:                                               ; preds = %56, %14
  %24 = phi i64 [ 0, %14 ], [ %62, %56 ]
  %25 = add nuw nsw i64 %24, %19
  %26 = trunc i64 %24 to i32
  %27 = add i32 %26, -16
  %28 = sitofp i32 %27 to float
  %29 = fsub float %28, %18
  %30 = fmul float %29, 0x400921FB60000000
  %31 = load float*, float** %10, align 8
  %32 = getelementptr inbounds float, float* %31, i64 %25
  store float %30, float* %32, align 4
  %33 = trunc i64 %24 to i32
  %34 = sitofp i32 %33 to float
  %35 = fsub float %34, %18
  %36 = fmul float %35, 3.125000e-02
  %37 = fpext float %36 to double
  %38 = fmul double %37, 0x401921FB54442D18
  %39 = tail call double @cos(double %38) #14
  %40 = fmul double %39, 5.000000e-01
  %41 = fsub double 4.200000e-01, %40
  %42 = fmul double %37, 0x402921FB54442D18
  %43 = tail call double @cos(double %42) #14
  %44 = fmul double %43, 8.000000e-02
  %45 = fadd double %41, %44
  %46 = fptrunc double %45 to float
  %47 = load float*, float** %11, align 8
  %48 = getelementptr inbounds float, float* %47, i64 %25
  store float %46, float* %48, align 4
  %49 = fpext float %46 to double
  %50 = fcmp une float %30, 0.000000e+00
  br i1 %50, label %51, label %56

51:                                               ; preds = %23
  %52 = fpext float %30 to double
  %53 = fmul double %9, %52
  %54 = tail call double @sin(double %53) #14
  %55 = fdiv double %54, %52
  br label %56

56:                                               ; preds = %23, %51
  %57 = phi double [ %55, %51 ], [ %9, %23 ]
  %58 = fmul double %57, %49
  %59 = fptrunc double %58 to float
  %60 = load float*, float** %12, align 8
  %61 = getelementptr inbounds float, float* %60, i64 %25
  store float %59, float* %61, align 4
  %62 = add nuw nsw i64 %24, 1
  %63 = icmp eq i64 %62, 32
  br i1 %63, label %20, label %23
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media13SincResamplerD2Ev(%"class.media::SincResampler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %3 = load float*, float** %2, align 8
  store float* null, float** %2, align 8
  %4 = icmp eq float* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = bitcast float* %3 to i8*
  tail call void @free(i8* %6) #14
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %9 = load float*, float** %8, align 8
  store float* null, float** %8, align 8
  %10 = icmp eq float* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = bitcast float* %9 to i8*
  tail call void @free(i8* %12) #14
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %15 = load float*, float** %14, align 8
  store float* null, float** %14, align 8
  %16 = icmp eq float* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %13
  %18 = bitcast float* %15 to i8*
  tail call void @free(i8* %18) #14
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %21 = load float*, float** %20, align 8
  store float* null, float** %20, align 8
  %22 = icmp eq float* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = bitcast float* %21 to i8*
  tail call void @free(i8* %24) #14
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 3, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %26) #14
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media13SincResampler13UpdateRegionsEb(%"class.media::SincResampler"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca float*, align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca %"class.logging::CheckOpResult", align 8
  %12 = alloca %"class.logging::CheckError", align 8
  %13 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %14 = load float*, float** %13, align 8
  %15 = select i1 %1, i64 32, i64 16
  %16 = getelementptr inbounds float, float* %14, i64 %15
  %17 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 13
  store float* %16, float** %17, align 8
  %18 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 4
  %19 = load i32, i32* %18, align 8
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds float, float* %16, i64 %20
  %22 = getelementptr inbounds float, float* %21, i64 -32
  %23 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 16
  store float* %22, float** %23, align 8
  %24 = getelementptr inbounds float, float* %21, i64 -16
  %25 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 17
  store float* %24, float** %25, align 8
  %26 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 15
  %27 = bitcast float** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = ptrtoint float* %24 to i64
  %30 = sub i64 %29, %28
  %31 = lshr exact i64 %30, 2
  %32 = trunc i64 %31 to i32
  %33 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 5
  store i32 %32, i32* %33, align 4
  %34 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 0
  %35 = load double, double* %34, align 8
  %36 = sitofp i32 %32 to double
  %37 = fdiv double %36, %35
  %38 = fptosi double %37 to i32
  %39 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 6
  store i32 %38, i32* %39, align 8
  %40 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #14
  %41 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %41, align 8
  %42 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 14
  %43 = bitcast float** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #14
  store float* %14, float** %7, align 8
  %44 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44)
  %45 = load float*, float** %42, align 8
  %46 = icmp eq float* %45, %14
  br i1 %46, label %47, label %48

47:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  store i8* null, i8** %41, align 8
  br label %58

48:                                               ; preds = %2
  %49 = bitcast float** %42 to i8*
  %50 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %49, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPfEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_) #14
  %51 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %43, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPfEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0), i8* %50, i8* %51) #14
  %52 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %53 = load i8*, i8** %52, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  store i8* %53, i8** %41, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #14
  %54 = icmp eq i8* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %48
  %56 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), i32 187, %"class.logging::CheckOpResult"* nonnull %6) #14
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #14
  br label %58

58:                                               ; preds = %55, %47
  %59 = phi i8* [ %43, %47 ], [ %56, %55 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #14
  br label %60

60:                                               ; preds = %58, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #14
  %61 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #14
  %62 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %62, align 8
  %63 = load i64, i64* %27, align 8
  %64 = bitcast float** %42 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %63, %65
  %67 = ashr exact i64 %66, 2
  %68 = bitcast float** %25 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast float** %23 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = sub i64 %69, %71
  %73 = ashr exact i64 %72, 2
  %74 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74)
  %75 = icmp eq i64 %67, %73
  br i1 %75, label %76, label %77

76:                                               ; preds = %60
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74)
  store i8* null, i8** %62, align 8
  br label %86

77:                                               ; preds = %60
  %78 = call i8* @_ZN7logging15CheckOpValueStrEl(i64 %67) #14
  %79 = call i8* @_ZN7logging15CheckOpValueStrEl(i64 %73) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* %78, i8* %79) #14
  %80 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %81 = load i8*, i8** %80, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74)
  store i8* %81, i8** %62, align 8
  %82 = icmp eq i8* %81, null
  br i1 %82, label %86, label %83

83:                                               ; preds = %77
  %84 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), i32 189, %"class.logging::CheckOpResult"* nonnull %9) #14
  %85 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #14
  br label %86

86:                                               ; preds = %76, %77, %83
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #14
  %87 = bitcast %"class.logging::CheckOpResult"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #14
  %88 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %11, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %88, align 8
  %89 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89)
  %90 = load float*, float** %26, align 8
  %91 = load float*, float** %23, align 8
  %92 = icmp ult float* %90, %91
  br i1 %92, label %93, label %94

93:                                               ; preds = %86
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89)
  store i8* null, i8** %88, align 8
  br label %105

94:                                               ; preds = %86
  %95 = bitcast float** %26 to i8*
  %96 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %95, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPfEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_) #14
  %97 = bitcast float** %23 to i8*
  %98 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %97, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPfEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i64 0, i64 0), i8* %96, i8* %98) #14
  %99 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %100 = load i8*, i8** %99, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89)
  store i8* %100, i8** %88, align 8
  %101 = icmp eq i8* %100, null
  br i1 %101, label %105, label %102

102:                                              ; preds = %94
  %103 = bitcast %"class.logging::CheckError"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %12, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), i32 191, %"class.logging::CheckOpResult"* nonnull %11) #14
  %104 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %12) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %12) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103) #14
  br label %105

105:                                              ; preds = %93, %94, %102
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #14
  ret void
}

; Function Attrs: nofree nounwind
declare double @cos(double) local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare double @sin(double) local_unnamed_addr #8

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN5media13SincResampler8SetRatioEd(%"class.media::SincResampler"* nocapture, double) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 0
  %4 = load double, double* %3, align 8
  %5 = fsub double %4, %1
  %6 = tail call double @llvm.fabs.f64(double %5)
  %7 = fcmp olt double %6, 0x3CB0000000000000
  br i1 %7, label %54, label %8

8:                                                ; preds = %2
  store double %1, double* %3, align 8
  %9 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 5
  %10 = load i32, i32* %9, align 4
  %11 = sitofp i32 %10 to double
  %12 = fdiv double %11, %1
  %13 = fptosi double %12 to i32
  %14 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 6
  store i32 %13, i32* %14, align 8
  %15 = fcmp ogt double %1, 1.000000e+00
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = fdiv double 1.000000e+00, %1
  %18 = fmul double %17, 9.000000e-01
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi double [ %18, %16 ], [ 9.000000e-01, %8 ]
  %21 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  br label %24

24:                                               ; preds = %27, %19
  %25 = phi i64 [ 0, %19 ], [ %28, %27 ]
  %26 = shl i64 %25, 5
  br label %30

27:                                               ; preds = %46
  %28 = add nuw nsw i64 %25, 1
  %29 = icmp eq i64 %28, 33
  br i1 %29, label %54, label %24

30:                                               ; preds = %46, %24
  %31 = phi i64 [ 0, %24 ], [ %52, %46 ]
  %32 = add nuw nsw i64 %31, %26
  %33 = load float*, float** %21, align 8
  %34 = getelementptr inbounds float, float* %33, i64 %32
  %35 = load float, float* %34, align 4
  %36 = load float*, float** %22, align 8
  %37 = getelementptr inbounds float, float* %36, i64 %32
  %38 = load float, float* %37, align 4
  %39 = fpext float %35 to double
  %40 = fcmp une float %38, 0.000000e+00
  br i1 %40, label %41, label %46

41:                                               ; preds = %30
  %42 = fpext float %38 to double
  %43 = fmul double %20, %42
  %44 = tail call double @sin(double %43) #14
  %45 = fdiv double %44, %42
  br label %46

46:                                               ; preds = %30, %41
  %47 = phi double [ %45, %41 ], [ %20, %30 ]
  %48 = fmul double %47, %39
  %49 = fptrunc double %48 to float
  %50 = load float*, float** %23, align 8
  %51 = getelementptr inbounds float, float* %50, i64 %32
  store float %49, float* %51, align 4
  %52 = add nuw nsw i64 %31, 1
  %53 = icmp eq i64 %52, 32
  br i1 %53, label %27, label %30

54:                                               ; preds = %27, %2
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #9

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media13SincResampler8ResampleEiPf(%"class.media::SincResampler"*, i32, float* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.cc::ScopedSubnormalFloatDisabler", align 4
  %5 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 145, i32 0), align 16
  %6 = and i8 %5, 25
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %11, label %8, !prof !3

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 0
  %10 = tail call i64 @_ZN20trace_event_internal13AddTraceEventIRdEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 145, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8, i64 0, i64 0), double* dereferenceable(8) %9)
  br label %11

11:                                               ; preds = %3, %8
  %12 = phi i64 [ -6148914691236517206, %3 ], [ %10, %8 ]
  %13 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %3 ], [ getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7, i64 0, i64 0), %8 ]
  %14 = phi i8* [ null, %3 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 145, i32 0), %8 ]
  %15 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 2
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  %18 = icmp ne i32 %1, 0
  %19 = and i1 %18, %17
  br i1 %19, label %20, label %30

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 4
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 13
  %24 = load float*, float** %23, align 8
  %25 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %26 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %25, align 8
  %27 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %26, i64 0, i32 1
  %28 = bitcast void ()** %27 to void (%"class.base::internal::BindStateBase"*, i32, float*)**
  %29 = load void (%"class.base::internal::BindStateBase"*, i32, float*)*, void (%"class.base::internal::BindStateBase"*, i32, float*)** %28, align 8
  tail call void %29(%"class.base::internal::BindStateBase"* %26, i32 %22, float* %24) #14
  store i8 1, i8* %15, align 8
  br label %32

30:                                               ; preds = %11
  %31 = icmp eq i32 %1, 0
  br i1 %31, label %103, label %32

32:                                               ; preds = %20, %30
  %33 = bitcast %"class.cc::ScopedSubnormalFloatDisabler"* %4 to i8*
  %34 = getelementptr inbounds %"class.cc::ScopedSubnormalFloatDisabler", %"class.cc::ScopedSubnormalFloatDisabler"* %4, i64 0, i32 0
  %35 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 1
  %36 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 5
  %37 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 14
  %39 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 12
  %40 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 0
  %41 = bitcast float** %38 to i8**
  %42 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 16
  %43 = bitcast float** %42 to i8**
  %44 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 13
  %45 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 15
  %46 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 4
  %47 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  br label %48

48:                                               ; preds = %95, %32
  %49 = phi float* [ %2, %32 ], [ %55, %95 ]
  %50 = phi i32 [ %1, %32 ], [ %54, %95 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #14
  store i32 -1431655766, i32* %34, align 4
  call void @_ZN2cc28ScopedSubnormalFloatDisablerC1Ev(%"class.cc::ScopedSubnormalFloatDisabler"* nonnull %4) #14
  %51 = load double, double* %35, align 8
  br label %52

52:                                               ; preds = %59, %48
  %53 = phi double [ %51, %48 ], [ %80, %59 ]
  %54 = phi i32 [ %50, %48 ], [ %81, %59 ]
  %55 = phi float* [ %49, %48 ], [ %77, %59 ]
  %56 = load i32, i32* %36, align 4
  %57 = sitofp i32 %56 to double
  %58 = fcmp olt double %53, %57
  br i1 %58, label %59, label %83

59:                                               ; preds = %52
  %60 = fptosi double %53 to i32
  %61 = sitofp i32 %60 to double
  %62 = fsub double %53, %61
  %63 = fmul double %62, 3.200000e+01
  %64 = fptosi double %63 to i32
  %65 = load float*, float** %37, align 8
  %66 = shl nsw i32 %64, 5
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds float, float* %65, i64 %67
  %69 = getelementptr inbounds float, float* %68, i64 32
  %70 = load float*, float** %38, align 8
  %71 = sext i32 %60 to i64
  %72 = getelementptr inbounds float, float* %70, i64 %71
  %73 = sitofp i32 %64 to double
  %74 = fsub double %63, %73
  %75 = load float (float*, float*, float*, double)*, float (float*, float*, float*, double)** %39, align 8
  %76 = call float %75(float* %72, float* %68, float* %69, double %74) #14
  %77 = getelementptr inbounds float, float* %55, i64 1
  store float %76, float* %55, align 4
  %78 = load double, double* %40, align 8
  %79 = load double, double* %35, align 8
  %80 = fadd double %78, %79
  store double %80, double* %35, align 8
  %81 = add nsw i32 %54, -1
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %102, label %52

83:                                               ; preds = %52
  call void @_ZN2cc28ScopedSubnormalFloatDisablerD1Ev(%"class.cc::ScopedSubnormalFloatDisabler"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #14
  %84 = load i32, i32* %36, align 4
  %85 = sitofp i32 %84 to double
  %86 = load double, double* %35, align 8
  %87 = fsub double %86, %85
  store double %87, double* %35, align 8
  %88 = load i8*, i8** %41, align 8
  %89 = load i8*, i8** %43, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %88, i8* align 4 %89, i64 128, i1 false)
  %90 = load float*, float** %44, align 8
  %91 = load float*, float** %45, align 8
  %92 = icmp eq float* %90, %91
  br i1 %92, label %93, label %95

93:                                               ; preds = %83
  call void @_ZN5media13SincResampler13UpdateRegionsEb(%"class.media::SincResampler"* %0, i1 zeroext true)
  %94 = load float*, float** %44, align 8
  br label %95

95:                                               ; preds = %93, %83
  %96 = phi float* [ %94, %93 ], [ %90, %83 ]
  %97 = load i32, i32* %46, align 8
  %98 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %47, align 8
  %99 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %98, i64 0, i32 1
  %100 = bitcast void ()** %99 to void (%"class.base::internal::BindStateBase"*, i32, float*)**
  %101 = load void (%"class.base::internal::BindStateBase"*, i32, float*)*, void (%"class.base::internal::BindStateBase"*, i32, float*)** %100, align 8
  call void %101(%"class.base::internal::BindStateBase"* %98, i32 %97, float* %96) #14
  br label %48

102:                                              ; preds = %59
  call void @_ZN2cc28ScopedSubnormalFloatDisablerD1Ev(%"class.cc::ScopedSubnormalFloatDisabler"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #14
  br label %103

103:                                              ; preds = %102, %30
  %104 = icmp eq i8* %14, null
  br i1 %104, label %109, label %105

105:                                              ; preds = %103
  %106 = load i8, i8* %14, align 1
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %109, label %108

108:                                              ; preds = %105
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %14, i8* %13, i64 %12) #14
  br label %109

109:                                              ; preds = %103, %105, %108
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIRdEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, double* dereferenceable(8)) local_unnamed_addr #10 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #14
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #14
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #14
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #14
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 4, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = bitcast double* %8 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0, i32 0
  store i64 %20, i64* %21, align 8
  %22 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #14
  %23 = load i8, i8* %16, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %59, label %25

25:                                               ; preds = %9, %54
  %26 = phi i64 [ %55, %54 ], [ 0, %9 ]
  %27 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 8
  br i1 %29, label %30, label %41

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %32 = bitcast %"union.base::trace_event::TraceValue"* %31 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %33 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %32, align 8
  %34 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %33, null
  br i1 %34, label %54, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %33 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %37 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %37, i64 1
  %39 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %38, align 8
  call void %39(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %33) #14
  %40 = load i8, i8* %27, align 1
  br label %41

41:                                               ; preds = %35, %25
  %42 = phi i8 [ %28, %25 ], [ %40, %35 ]
  %43 = icmp eq i8 %42, 9
  br i1 %43, label %44, label %54

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %46 = bitcast %"union.base::trace_event::TraceValue"* %45 to %"class.protozero::HeapBuffered"**
  %47 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %46, align 8
  %48 = icmp eq %"class.protozero::HeapBuffered"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %50) #14
  %51 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %51) #14
  %52 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %52) #14
  %53 = bitcast %"class.protozero::HeapBuffered"* %47 to i8*
  call void @_ZdlPv(i8* %53) #15
  br label %54

54:                                               ; preds = %49, %44, %41, %30
  %55 = add nuw nsw i64 %26, 1
  %56 = load i8, i8* %16, align 8
  %57 = zext i8 %56 to i64
  %58 = icmp ult i64 %55, %57
  br i1 %58, label %25, label %59

59:                                               ; preds = %54, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #14
  ret i64 %22
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN2cc28ScopedSubnormalFloatDisablerC1Ev(%"class.cc::ScopedSubnormalFloatDisabler"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc28ScopedSubnormalFloatDisablerD1Ev(%"class.cc::ScopedSubnormalFloatDisabler"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media13SincResampler16PrimeWithSilenceEv(%"class.media::SincResampler"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5media13SincResampler13UpdateRegionsEb(%"class.media::SincResampler"* %0, i1 zeroext true)
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK5media13SincResampler26GetMaxInputFramesRequestedEi(%"class.media::SincResampler"* nocapture readonly, i32) local_unnamed_addr #11 align 2 {
  %3 = sitofp i32 %1 to float
  %4 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 6
  %5 = load i32, i32* %4, align 8
  %6 = sitofp i32 %5 to float
  %7 = fdiv float %3, %6
  %8 = tail call float @llvm.ceil.f32(float %7) #14
  %9 = fptosi float %8 to i32
  %10 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 4
  %11 = load i32, i32* %10, align 8
  %12 = mul nsw i32 %11, %9
  ret i32 %12
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden double @_ZNK5media13SincResampler14BufferedFramesEv(%"class.media::SincResampler"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = sitofp i32 %7 to double
  %9 = getelementptr inbounds %"class.media::SincResampler", %"class.media::SincResampler"* %0, i64 0, i32 1
  %10 = load double, double* %9, align 8
  %11 = fsub double %8, %10
  br label %12

12:                                               ; preds = %1, %5
  %13 = phi double [ %11, %5 ], [ 0.000000e+00, %1 ]
  ret double %13
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #12

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEi(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIN5media13SincResamplerUt_EEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #10 comdat align 2 {
  %3 = bitcast i8* %1 to i32*
  %4 = load i32, i32* %3, align 4
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %0, i32 %4) #14
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPfEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #10 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #14
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #2

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #9

; Function Attrs: nounwind readnone speculatable
declare <8 x float> @llvm.fma.v8f32(<8 x float>, <8 x float>, <8 x float>) #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #14
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #14
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #14
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #14
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #14
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #14
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #14
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #14
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #14
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #14
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #15
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #14
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #14
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #15
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #14
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #14
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #13

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #6

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #2

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #2

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="256" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+avx,+avx2,+cx8,+fma,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
