; ModuleID = '../../components/policy/core/common/policy_proto_decoders.cc'
source_filename = "../../components/policy/core/common/policy_proto_decoders.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.policy::BooleanPolicyAccess" = type { i8*, i8, { i64, i64 }, { i64, i64 } }
%"struct.policy::IntegerPolicyAccess" = type { i8*, i8, { i64, i64 }, { i64, i64 } }
%"struct.policy::StringPolicyAccess" = type { i8*, i8, { i64, i64 }, { i64, i64 }, i32 }
%"struct.policy::StringListPolicyAccess" = type { i8*, i8, { i64, i64 }, { i64, i64 } }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.enterprise_management::StringListDefaultTypeInternal" = type opaque
%"class.enterprise_management::CloudPolicySettings" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::IntegerPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::IntegerPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::IntegerPolicyProto"*, %"class.enterprise_management::IntegerPolicyProto"*, %"class.enterprise_management::IntegerPolicyProto"*, %"class.enterprise_management::IntegerPolicyProto"*, %"class.enterprise_management::IntegerPolicyProto"*, %"class.enterprise_management::IntegerPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::IntegerPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::IntegerPolicyProto"*, %"class.enterprise_management::IntegerPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::IntegerPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::IntegerPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::IntegerPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::IntegerPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::IntegerPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::IntegerPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::IntegerPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::IntegerPolicyProto"*, %"class.enterprise_management::IntegerPolicyProto"*, %"class.enterprise_management::IntegerPolicyProto"*, %"class.enterprise_management::IntegerPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::IntegerPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::IntegerPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::IntegerPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::IntegerPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::IntegerPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::IntegerPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::IntegerPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::IntegerPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::IntegerPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::IntegerPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::IntegerPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::IntegerPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::IntegerPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::IntegerPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::IntegerPolicyProto"*, %"class.enterprise_management::IntegerPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::IntegerPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::IntegerPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::IntegerPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::IntegerPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::IntegerPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::IntegerPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::StringListPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"*, %"class.enterprise_management::StringPolicyProto"*, %"class.enterprise_management::BooleanPolicyProto"* }
%"class.google::protobuf::MessageLite" = type { i32 (...)**, %"class.google::protobuf::internal::InternalMetadata" }
%"class.google::protobuf::internal::InternalMetadata" = type { i8* }
%"class.google::protobuf::internal::HasBits" = type { [11 x i32] }
%"class.google::protobuf::internal::CachedSize" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.enterprise_management::IntegerPolicyProto" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits.1", %"class.google::protobuf::internal::CachedSize", %"class.enterprise_management::PolicyOptions"*, i64 }
%"class.google::protobuf::internal::HasBits.1" = type { [1 x i32] }
%"class.enterprise_management::PolicyOptions" = type <{ %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits.1", %"class.google::protobuf::internal::CachedSize", i32, [4 x i8] }>
%"class.enterprise_management::StringListPolicyProto" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits.1", %"class.google::protobuf::internal::CachedSize", %"class.enterprise_management::PolicyOptions"*, %"class.enterprise_management::StringList"* }
%"class.enterprise_management::StringList" = type <{ %"class.google::protobuf::MessageLite", %"class.google::protobuf::RepeatedPtrField", %"class.google::protobuf::internal::CachedSize", [4 x i8] }>
%"class.google::protobuf::RepeatedPtrField" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.google::protobuf::internal::RepeatedPtrFieldBase" = type { %"class.google::protobuf::Arena"*, i32, i32, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* }
%"class.google::protobuf::Arena" = type { %"class.google::protobuf::internal::ArenaImpl", void (%"class.std::type_info"*, i64, i8*)*, void (%"class.google::protobuf::Arena"*, i8*, i64)*, void (%"class.google::protobuf::Arena"*, i8*, i64)*, i8* }
%"class.google::protobuf::internal::ArenaImpl" = type { %"struct.std::__1::atomic.3", %"struct.std::__1::atomic.3", %"struct.std::__1::atomic.7", %"class.google::protobuf::internal::ArenaImpl::Block"*, i64, %"struct.google::protobuf::internal::ArenaImpl::Options" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { %"class.google::protobuf::internal::ArenaImpl::SerialArena"* }
%"class.google::protobuf::internal::ArenaImpl::SerialArena" = type { %"class.google::protobuf::internal::ArenaImpl"*, i8*, %"class.google::protobuf::internal::ArenaImpl::Block"*, %"struct.google::protobuf::internal::ArenaImpl::CleanupChunk"*, %"class.google::protobuf::internal::ArenaImpl::SerialArena"*, i8*, i8*, %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"*, %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"* }
%"struct.google::protobuf::internal::ArenaImpl::CleanupChunk" = type { i64, %"struct.google::protobuf::internal::ArenaImpl::CleanupChunk"*, [1 x %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"] }
%"struct.google::protobuf::internal::ArenaImpl::CleanupNode" = type { i8*, void (i8*)* }
%"struct.std::__1::atomic.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl.10" }
%"struct.std::__1::__cxx_atomic_impl.10" = type { %"struct.std::__1::__cxx_atomic_base_impl.11" }
%"struct.std::__1::__cxx_atomic_base_impl.11" = type { i64 }
%"class.google::protobuf::internal::ArenaImpl::Block" = type { %"class.google::protobuf::internal::ArenaImpl::Block"*, i64, i64 }
%"struct.google::protobuf::internal::ArenaImpl::Options" = type { i64, i64, i8*, i64, i8* (i64)*, void (i8*, i64)* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep" = type { i32, [268435454 x i8*] }
%"class.enterprise_management::StringPolicyProto" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits.1", %"class.google::protobuf::internal::CachedSize", %"struct.google::protobuf::internal::ArenaStringPtr", %"class.enterprise_management::PolicyOptions"* }
%"struct.google::protobuf::internal::ArenaStringPtr" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.enterprise_management::BooleanPolicyProto" = type <{ %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits.1", %"class.google::protobuf::internal::CachedSize", %"class.enterprise_management::PolicyOptions"*, i8, [7 x i8] }>
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.25" }
%"struct.std::__1::atomic.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__cxx_atomic_impl.28" }
%"struct.std::__1::__cxx_atomic_impl.28" = type { %"struct.std::__1::__cxx_atomic_base_impl.29" }
%"struct.std::__1::__cxx_atomic_base_impl.29" = type { i8 }
%"class.policy::PolicyMap" = type { %"class.std::__1::map", i8, %"class.base::internal::flat_tree", %"class.base::internal::flat_tree" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.12", %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { i64 }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.std::__1::basic_string"* }
%"struct.base::JSONReader::ValueWithError" = type { %"class.absl::optional", %"class.std::__1::basic_string", i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.34 }
%union.anon.34 = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.35" }
%"union.absl::variant_internal::DestructibleUnionImpl.35" = type { %"union.absl::variant_internal::DestructibleUnionImpl.36" }
%"union.absl::variant_internal::DestructibleUnionImpl.36" = type { %"union.absl::variant_internal::DestructibleUnionImpl.37" }
%"union.absl::variant_internal::DestructibleUnionImpl.37" = type { %"union.absl::variant_internal::DestructibleUnionImpl.38" }
%"union.absl::variant_internal::DestructibleUnionImpl.38" = type { %"class.std::__1::basic_string" }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::vector.65" = type { %"class.std::__1::__vector_base.66" }
%"class.std::__1::__vector_base.66" = type { %"class.std::__1::basic_string.67"*, %"class.std::__1::basic_string.67"*, %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::basic_string.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.70 }
%union.anon.70 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.std::__1::basic_string.67"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.71 }
%struct.anon.71 = type { %"struct.std::__1::__padding.72", i8 }
%"struct.std::__1::__padding.72" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.policy::ExternalDataFetcher" = type { %"class.base::WeakPtr.32", %"class.std::__1::basic_string" }
%"class.base::WeakPtr.32" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNSt3__111make_uniqueIN6policy19ExternalDataFetcherEJRN4base7WeakPtrINS1_24CloudExternalDataManagerEEERKPKcEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@_ZN6policy20kBooleanPolicyAccessE = external local_unnamed_addr global [0 x %"struct.policy::BooleanPolicyAccess"], align 8
@_ZN6policy20kIntegerPolicyAccessE = external local_unnamed_addr global [0 x %"struct.policy::IntegerPolicyAccess"], align 8
@_ZN6policy19kStringPolicyAccessE = external global [0 x %"struct.policy::StringPolicyAccess"], align 8
@_ZN6policy23kStringListPolicyAccessE = external local_unnamed_addr global [0 x %"struct.policy::StringListPolicyAccess"], align 8
@.str = private unnamed_addr constant [61 x i8] c"../../components/policy/core/common/policy_proto_decoders.cc\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"Integer value \00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c" out of numeric limits\00", align 1
@.str.3 = private unnamed_addr constant [36 x i8] c"Number out of range - invalid int32\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.5 = private unnamed_addr constant [15 x i8] c"Invalid JSON: \00", align 1
@_ZN21enterprise_management29_StringList_default_instance_E = external local_unnamed_addr global %"class.enterprise_management::StringListDefaultTypeInternal", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy17DecodeProtoFieldsERKN21enterprise_management19CloudPolicySettingsEN4base7WeakPtrINS_24CloudExternalDataManagerEEENS_12PolicySourceENS_11PolicyScopeEPNS_9PolicyMapENS_22PolicyPerProfileFilterE(%"class.enterprise_management::CloudPolicySettings"* dereferenceable(2856), %"class.base::WeakPtr"*, i32, i32, %"class.policy::PolicyMap"*, i32) local_unnamed_addr #0 {
  %7 = alloca %"struct.base::JSONReader::ValueWithError", align 8
  %8 = alloca %"class.logging::LogMessage", align 8
  %9 = alloca %"class.logging::LogMessage", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.absl::optional", align 8
  %13 = alloca %"class.base::Value", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.absl::optional", align 8
  %17 = alloca %"class.base::Value", align 8
  %18 = alloca %"class.std::__1::basic_string", align 8
  %19 = alloca %"class.std::__1::vector.65", align 8
  %20 = alloca [1 x %"class.std::__1::basic_string.67"], align 8
  %21 = alloca %"class.std::__1::basic_string", align 8
  %22 = alloca %"class.base::Value", align 8
  %23 = alloca %"class.std::__1::basic_string", align 8
  %24 = alloca %"class.absl::optional", align 8
  %25 = alloca %"class.std::__1::basic_string", align 8
  %26 = alloca %"class.std::__1::vector.65", align 8
  %27 = alloca [1 x %"class.std::__1::basic_string.67"], align 8
  %28 = alloca %"class.std::__1::basic_string", align 8
  %29 = alloca %"class.absl::optional", align 8
  %30 = alloca %"class.base::Value", align 8
  %31 = load i8*, i8** getelementptr inbounds ([0 x %"struct.policy::BooleanPolicyAccess"], [0 x %"struct.policy::BooleanPolicyAccess"]* @_ZN6policy20kBooleanPolicyAccessE, i64 0, i64 0, i32 0), align 8
  %32 = icmp eq i8* %31, null
  br i1 %32, label %44, label %33

33:                                               ; preds = %6
  %34 = bitcast %"class.enterprise_management::CloudPolicySettings"* %0 to i8*
  %35 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = bitcast %"class.base::Value"* %13 to i8*
  %42 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br label %94

44:                                               ; preds = %197, %6
  %45 = load i8*, i8** getelementptr inbounds ([0 x %"struct.policy::IntegerPolicyAccess"], [0 x %"struct.policy::IntegerPolicyAccess"]* @_ZN6policy20kIntegerPolicyAccessE, i64 0, i64 0, i32 0), align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %201, label %47

47:                                               ; preds = %44
  %48 = bitcast %"class.enterprise_management::CloudPolicySettings"* %0 to i8*
  %49 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %56 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = bitcast %"class.base::Value"* %17 to i8*
  %59 = bitcast %"class.logging::LogMessage"* %9 to i8*
  %60 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %9, i64 0, i32 2
  %61 = bitcast %"class.std::__1::basic_ostringstream"* %60 to %"class.std::__1::basic_ostream"*
  %62 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %63 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %68 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %74 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = bitcast %"class.std::__1::vector.65"* %19 to i8*
  %77 = bitcast [1 x %"class.std::__1::basic_string.67"]* %20 to i8*
  %78 = getelementptr inbounds [1 x %"class.std::__1::basic_string.67"], [1 x %"class.std::__1::basic_string.67"]* %20, i64 0, i64 0
  %79 = getelementptr inbounds %"class.std::__1::vector.65", %"class.std::__1::vector.65"* %19, i64 0, i32 0, i32 1
  %80 = bitcast %"class.std::__1::basic_string.67"** %79 to i8**
  %81 = bitcast %"class.std::__1::vector.65"* %19 to i8**
  %82 = getelementptr inbounds %"class.std::__1::vector.65", %"class.std::__1::vector.65"* %19, i64 0, i32 0, i32 2, i32 0, i32 0
  %83 = bitcast %"class.std::__1::basic_string.67"** %82 to i8**
  %84 = bitcast %"class.std::__1::basic_string.67"** %79 to i64*
  %85 = getelementptr inbounds %"class.std::__1::vector.65", %"class.std::__1::vector.65"* %19, i64 0, i32 0, i32 0
  %86 = bitcast [1 x %"class.std::__1::basic_string.67"]* %20 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %86, i64 0, i32 1, i32 1
  %88 = bitcast [1 x %"class.std::__1::basic_string.67"]* %20 to i8*
  %89 = getelementptr inbounds [1 x %"class.std::__1::basic_string.67"], [1 x %"class.std::__1::basic_string.67"]* %20, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = getelementptr inbounds [1 x %"class.std::__1::basic_string.67"], [1 x %"class.std::__1::basic_string.67"]* %20, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %91 = bitcast [1 x %"class.std::__1::basic_string.67"]* %20 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %91, i64 0, i32 1, i32 1
  %93 = bitcast [1 x %"class.std::__1::basic_string.67"]* %20 to i8**
  br label %256

94:                                               ; preds = %33, %197
  %95 = phi i8** [ getelementptr inbounds ([0 x %"struct.policy::BooleanPolicyAccess"], [0 x %"struct.policy::BooleanPolicyAccess"]* @_ZN6policy20kBooleanPolicyAccessE, i64 0, i64 0, i32 0), %33 ], [ %198, %197 ]
  %96 = getelementptr inbounds i8*, i8** %95, i64 1
  %97 = bitcast i8** %96 to i8*
  %98 = load i8, i8* %97, align 8, !range !2
  %99 = icmp ne i8 %98, 0
  switch i32 %5, label %101 [
    i32 0, label %102
    i32 1, label %100
    i32 2, label %103
  ]

100:                                              ; preds = %94
  br i1 %99, label %197, label %103

101:                                              ; preds = %94
  unreachable

102:                                              ; preds = %94
  br i1 %99, label %103, label %197

103:                                              ; preds = %100, %94, %102
  %104 = getelementptr inbounds i8*, i8** %95, i64 2
  %105 = bitcast i8** %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = getelementptr inbounds i8*, i8** %95, i64 3
  %108 = bitcast i8** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = getelementptr inbounds i8, i8* %34, i64 %109
  %111 = bitcast i8* %110 to %"class.enterprise_management::CloudPolicySettings"*
  %112 = and i64 %106, 1
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %121, label %114

114:                                              ; preds = %103
  %115 = bitcast i8* %110 to i8**
  %116 = load i8*, i8** %115, align 8
  %117 = add i64 %106, -1
  %118 = getelementptr i8, i8* %116, i64 %117
  %119 = bitcast i8* %118 to i1 (%"class.enterprise_management::CloudPolicySettings"*)**
  %120 = load i1 (%"class.enterprise_management::CloudPolicySettings"*)*, i1 (%"class.enterprise_management::CloudPolicySettings"*)** %119, align 8
  br label %123

121:                                              ; preds = %103
  %122 = inttoptr i64 %106 to i1 (%"class.enterprise_management::CloudPolicySettings"*)*
  br label %123

123:                                              ; preds = %121, %114
  %124 = phi i1 (%"class.enterprise_management::CloudPolicySettings"*)* [ %120, %114 ], [ %122, %121 ]
  %125 = call zeroext i1 %124(%"class.enterprise_management::CloudPolicySettings"* %111) #10
  br i1 %125, label %126, label %197

126:                                              ; preds = %123
  %127 = getelementptr inbounds i8*, i8** %95, i64 4
  %128 = bitcast i8** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = getelementptr inbounds i8*, i8** %95, i64 5
  %131 = bitcast i8** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = getelementptr inbounds i8, i8* %34, i64 %132
  %134 = bitcast i8* %133 to %"class.enterprise_management::CloudPolicySettings"*
  %135 = and i64 %129, 1
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %144, label %137

137:                                              ; preds = %126
  %138 = bitcast i8* %133 to i8**
  %139 = load i8*, i8** %138, align 8
  %140 = add i64 %129, -1
  %141 = getelementptr i8, i8* %139, i64 %140
  %142 = bitcast i8* %141 to %"class.enterprise_management::BooleanPolicyProto"* (%"class.enterprise_management::CloudPolicySettings"*)**
  %143 = load %"class.enterprise_management::BooleanPolicyProto"* (%"class.enterprise_management::CloudPolicySettings"*)*, %"class.enterprise_management::BooleanPolicyProto"* (%"class.enterprise_management::CloudPolicySettings"*)** %142, align 8
  br label %146

144:                                              ; preds = %126
  %145 = inttoptr i64 %129 to %"class.enterprise_management::BooleanPolicyProto"* (%"class.enterprise_management::CloudPolicySettings"*)*
  br label %146

146:                                              ; preds = %144, %137
  %147 = phi %"class.enterprise_management::BooleanPolicyProto"* (%"class.enterprise_management::CloudPolicySettings"*)* [ %143, %137 ], [ %145, %144 ]
  %148 = call dereferenceable(40) %"class.enterprise_management::BooleanPolicyProto"* %147(%"class.enterprise_management::CloudPolicySettings"* %134) #10
  %149 = getelementptr inbounds %"class.enterprise_management::BooleanPolicyProto", %"class.enterprise_management::BooleanPolicyProto"* %148, i64 0, i32 1, i32 0, i64 0
  %150 = load i32, i32* %149, align 4
  %151 = and i32 %150, 2
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %197, label %153

153:                                              ; preds = %146
  %154 = and i32 %150, 1
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %163, label %156

156:                                              ; preds = %153
  %157 = getelementptr inbounds %"class.enterprise_management::BooleanPolicyProto", %"class.enterprise_management::BooleanPolicyProto"* %148, i64 0, i32 3
  %158 = load %"class.enterprise_management::PolicyOptions"*, %"class.enterprise_management::PolicyOptions"** %157, align 8, !nonnull !3
  %159 = getelementptr inbounds %"class.enterprise_management::PolicyOptions", %"class.enterprise_management::PolicyOptions"* %158, i64 0, i32 3
  %160 = load i32, i32* %159, align 8
  switch i32 %160, label %162 [
    i32 0, label %163
    i32 1, label %161
    i32 2, label %197
  ]

161:                                              ; preds = %156
  br label %163

162:                                              ; preds = %156
  unreachable

163:                                              ; preds = %156, %161, %153
  %164 = phi i32 [ 1, %153 ], [ 0, %161 ], [ 1, %156 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #10
  %165 = load i8*, i8** %95, align 8
  %166 = call i64 @strlen(i8* %165) #10
  %167 = icmp ugt i64 %166, -17
  br i1 %167, label %168, label %170

168:                                              ; preds = %163
  %169 = bitcast %"class.std::__1::basic_string"* %11 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %169) #11
  unreachable

170:                                              ; preds = %163
  %171 = icmp ult i64 %166, 23
  br i1 %171, label %177, label %172

172:                                              ; preds = %170
  %173 = add nuw i64 %166, 16
  %174 = and i64 %173, -16
  %175 = call i8* @_Znwm(i64 %174) #12
  store i8* %175, i8** %36, align 8
  %176 = or i64 %174, -9223372036854775808
  store i64 %176, i64* %37, align 8
  store i64 %166, i64* %38, align 8
  br label %180

177:                                              ; preds = %170
  %178 = trunc i64 %166 to i8
  store i8 %178, i8* %40, align 1
  %179 = icmp eq i64 %166, 0
  br i1 %179, label %182, label %180

180:                                              ; preds = %177, %172
  %181 = phi i8* [ %175, %172 ], [ %35, %177 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %181, i8* align 1 %165, i64 %166, i1 false) #10
  br label %182

182:                                              ; preds = %177, %180
  %183 = phi i8* [ %35, %177 ], [ %181, %180 ]
  %184 = getelementptr inbounds i8, i8* %183, i64 %166
  store i8 0, i8* %184, align 1
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %41) #10
  %185 = getelementptr inbounds %"class.enterprise_management::BooleanPolicyProto", %"class.enterprise_management::BooleanPolicyProto"* %148, i64 0, i32 4
  %186 = load i8, i8* %185, align 8, !range !2, !noalias !4
  %187 = icmp ne i8 %186, 0
  call void @_ZN4base5ValueC1Eb(%"class.base::Value"* nonnull %13, i1 zeroext %187) #10
  store i8 1, i8* %42, align 8
  call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* %43, %"class.base::Value"* nonnull dereferenceable(32) %13) #10
  call void @_ZN6policy9PolicyMap3SetERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_11PolicyLevelENS_11PolicyScopeENS_12PolicySourceEN4absl8optionalIN4base5ValueEEENS1_10unique_ptrINS_19ExternalDataFetcherENS1_14default_deleteISJ_EEEE(%"class.policy::PolicyMap"* %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %11, i32 %164, i32 %3, i32 %2, %"class.absl::optional"* nonnull %12, i64 0) #10
  %188 = load i8, i8* %42, align 8, !range !2
  %189 = icmp eq i8 %188, 0
  br i1 %189, label %191, label %190

190:                                              ; preds = %182
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %43) #10
  store i8 0, i8* %42, align 8
  br label %191

191:                                              ; preds = %182, %190
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %41) #10
  %192 = load i8, i8* %40, align 1
  %193 = icmp slt i8 %192, 0
  br i1 %193, label %194, label %196

194:                                              ; preds = %191
  %195 = load i8*, i8** %36, align 8
  call void @_ZdlPv(i8* %195) #12
  br label %196

196:                                              ; preds = %191, %194
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #10
  br label %197

197:                                              ; preds = %100, %156, %146, %196, %102, %123
  %198 = getelementptr inbounds i8*, i8** %95, i64 6
  %199 = load i8*, i8** %198, align 8
  %200 = icmp eq i8* %199, null
  br i1 %200, label %44, label %94

201:                                              ; preds = %630, %44
  %202 = load i8*, i8** getelementptr inbounds ([0 x %"struct.policy::StringPolicyAccess"], [0 x %"struct.policy::StringPolicyAccess"]* @_ZN6policy19kStringPolicyAccessE, i64 0, i64 0, i32 0), align 8
  %203 = icmp eq i8* %202, null
  br i1 %203, label %634, label %204

204:                                              ; preds = %201
  %205 = bitcast %"class.enterprise_management::CloudPolicySettings"* %0 to i8*
  %206 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  %207 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %209 = bitcast %"class.base::Value"* %22 to i8*
  %210 = getelementptr inbounds %"struct.base::JSONReader::ValueWithError", %"struct.base::JSONReader::ValueWithError"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %212 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %211, i64 0, i32 1, i32 0
  %213 = getelementptr inbounds %"struct.base::JSONReader::ValueWithError", %"struct.base::JSONReader::ValueWithError"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %214 = bitcast %"class.logging::LogMessage"* %8 to i8*
  %215 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %8, i64 0, i32 2
  %216 = bitcast %"class.std::__1::basic_ostringstream"* %215 to %"class.std::__1::basic_ostream"*
  %217 = getelementptr inbounds %"struct.base::JSONReader::ValueWithError", %"struct.base::JSONReader::ValueWithError"* %7, i64 0, i32 1
  %218 = bitcast %"class.std::__1::basic_string"* %217 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %219 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %218, i64 0, i32 1, i32 0
  %220 = bitcast %"class.std::__1::basic_string"* %217 to i8*
  %221 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %217, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %222 = getelementptr inbounds %"struct.base::JSONReader::ValueWithError", %"struct.base::JSONReader::ValueWithError"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %223 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  %224 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %226 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %227 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %228 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %227, i64 0, i32 1, i32 0
  %229 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  %230 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %24, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %231 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %232 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %233 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %234 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %235 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %236 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %235, i64 0, i32 1, i32 0
  %237 = bitcast %"class.std::__1::vector.65"* %26 to i8*
  %238 = bitcast [1 x %"class.std::__1::basic_string.67"]* %27 to i8*
  %239 = getelementptr inbounds [1 x %"class.std::__1::basic_string.67"], [1 x %"class.std::__1::basic_string.67"]* %27, i64 0, i64 0
  %240 = getelementptr inbounds %"class.std::__1::vector.65", %"class.std::__1::vector.65"* %26, i64 0, i32 0, i32 1
  %241 = bitcast %"class.std::__1::basic_string.67"** %240 to i8**
  %242 = bitcast %"class.std::__1::vector.65"* %26 to i8**
  %243 = getelementptr inbounds %"class.std::__1::vector.65", %"class.std::__1::vector.65"* %26, i64 0, i32 0, i32 2, i32 0, i32 0
  %244 = bitcast %"class.std::__1::basic_string.67"** %243 to i8**
  %245 = bitcast %"class.std::__1::basic_string.67"** %240 to i64*
  %246 = getelementptr inbounds %"class.std::__1::vector.65", %"class.std::__1::vector.65"* %26, i64 0, i32 0, i32 0
  %247 = bitcast %"class.base::Value"* %22 to i8*
  %248 = bitcast [1 x %"class.std::__1::basic_string.67"]* %27 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %249 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %248, i64 0, i32 1, i32 1
  %250 = bitcast [1 x %"class.std::__1::basic_string.67"]* %27 to i8*
  %251 = getelementptr inbounds [1 x %"class.std::__1::basic_string.67"], [1 x %"class.std::__1::basic_string.67"]* %27, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %252 = getelementptr inbounds [1 x %"class.std::__1::basic_string.67"], [1 x %"class.std::__1::basic_string.67"]* %27, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %253 = bitcast [1 x %"class.std::__1::basic_string.67"]* %27 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %254 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %253, i64 0, i32 1, i32 1
  %255 = bitcast [1 x %"class.std::__1::basic_string.67"]* %27 to i8**
  br label %648

256:                                              ; preds = %47, %630
  %257 = phi i8** [ getelementptr inbounds ([0 x %"struct.policy::IntegerPolicyAccess"], [0 x %"struct.policy::IntegerPolicyAccess"]* @_ZN6policy20kIntegerPolicyAccessE, i64 0, i64 0, i32 0), %47 ], [ %631, %630 ]
  %258 = getelementptr inbounds i8*, i8** %257, i64 1
  %259 = bitcast i8** %258 to i8*
  %260 = load i8, i8* %259, align 8, !range !2
  %261 = icmp ne i8 %260, 0
  switch i32 %5, label %263 [
    i32 0, label %264
    i32 1, label %262
    i32 2, label %265
  ]

262:                                              ; preds = %256
  br i1 %261, label %630, label %265

263:                                              ; preds = %256
  unreachable

264:                                              ; preds = %256
  br i1 %261, label %265, label %630

265:                                              ; preds = %262, %256, %264
  %266 = getelementptr inbounds i8*, i8** %257, i64 2
  %267 = bitcast i8** %266 to i64*
  %268 = load i64, i64* %267, align 8
  %269 = getelementptr inbounds i8*, i8** %257, i64 3
  %270 = bitcast i8** %269 to i64*
  %271 = load i64, i64* %270, align 8
  %272 = getelementptr inbounds i8, i8* %48, i64 %271
  %273 = bitcast i8* %272 to %"class.enterprise_management::CloudPolicySettings"*
  %274 = and i64 %268, 1
  %275 = icmp eq i64 %274, 0
  br i1 %275, label %283, label %276

276:                                              ; preds = %265
  %277 = bitcast i8* %272 to i8**
  %278 = load i8*, i8** %277, align 8
  %279 = add i64 %268, -1
  %280 = getelementptr i8, i8* %278, i64 %279
  %281 = bitcast i8* %280 to i1 (%"class.enterprise_management::CloudPolicySettings"*)**
  %282 = load i1 (%"class.enterprise_management::CloudPolicySettings"*)*, i1 (%"class.enterprise_management::CloudPolicySettings"*)** %281, align 8
  br label %285

283:                                              ; preds = %265
  %284 = inttoptr i64 %268 to i1 (%"class.enterprise_management::CloudPolicySettings"*)*
  br label %285

285:                                              ; preds = %283, %276
  %286 = phi i1 (%"class.enterprise_management::CloudPolicySettings"*)* [ %282, %276 ], [ %284, %283 ]
  %287 = call zeroext i1 %286(%"class.enterprise_management::CloudPolicySettings"* %273) #10
  br i1 %287, label %288, label %630

288:                                              ; preds = %285
  %289 = getelementptr inbounds i8*, i8** %257, i64 4
  %290 = bitcast i8** %289 to i64*
  %291 = load i64, i64* %290, align 8
  %292 = getelementptr inbounds i8*, i8** %257, i64 5
  %293 = bitcast i8** %292 to i64*
  %294 = load i64, i64* %293, align 8
  %295 = getelementptr inbounds i8, i8* %48, i64 %294
  %296 = bitcast i8* %295 to %"class.enterprise_management::CloudPolicySettings"*
  %297 = and i64 %291, 1
  %298 = icmp eq i64 %297, 0
  br i1 %298, label %306, label %299

299:                                              ; preds = %288
  %300 = bitcast i8* %295 to i8**
  %301 = load i8*, i8** %300, align 8
  %302 = add i64 %291, -1
  %303 = getelementptr i8, i8* %301, i64 %302
  %304 = bitcast i8* %303 to %"class.enterprise_management::IntegerPolicyProto"* (%"class.enterprise_management::CloudPolicySettings"*)**
  %305 = load %"class.enterprise_management::IntegerPolicyProto"* (%"class.enterprise_management::CloudPolicySettings"*)*, %"class.enterprise_management::IntegerPolicyProto"* (%"class.enterprise_management::CloudPolicySettings"*)** %304, align 8
  br label %308

306:                                              ; preds = %288
  %307 = inttoptr i64 %291 to %"class.enterprise_management::IntegerPolicyProto"* (%"class.enterprise_management::CloudPolicySettings"*)*
  br label %308

308:                                              ; preds = %306, %299
  %309 = phi %"class.enterprise_management::IntegerPolicyProto"* (%"class.enterprise_management::CloudPolicySettings"*)* [ %305, %299 ], [ %307, %306 ]
  %310 = call dereferenceable(40) %"class.enterprise_management::IntegerPolicyProto"* %309(%"class.enterprise_management::CloudPolicySettings"* %296) #10
  %311 = getelementptr inbounds %"class.enterprise_management::IntegerPolicyProto", %"class.enterprise_management::IntegerPolicyProto"* %310, i64 0, i32 1, i32 0, i64 0
  %312 = load i32, i32* %311, align 4
  %313 = and i32 %312, 2
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %630, label %315

315:                                              ; preds = %308
  %316 = and i32 %312, 1
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %325, label %318

318:                                              ; preds = %315
  %319 = getelementptr inbounds %"class.enterprise_management::IntegerPolicyProto", %"class.enterprise_management::IntegerPolicyProto"* %310, i64 0, i32 3
  %320 = load %"class.enterprise_management::PolicyOptions"*, %"class.enterprise_management::PolicyOptions"** %319, align 8, !nonnull !3
  %321 = getelementptr inbounds %"class.enterprise_management::PolicyOptions", %"class.enterprise_management::PolicyOptions"* %320, i64 0, i32 3
  %322 = load i32, i32* %321, align 8
  switch i32 %322, label %324 [
    i32 0, label %325
    i32 1, label %323
    i32 2, label %630
  ]

323:                                              ; preds = %318
  br label %325

324:                                              ; preds = %318
  unreachable

325:                                              ; preds = %318, %323, %315
  %326 = phi i32 [ 1, %315 ], [ 0, %323 ], [ 1, %318 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 0, i64 24, i1 false) #10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #10
  %327 = load i8*, i8** %257, align 8
  %328 = call i64 @strlen(i8* %327) #10
  %329 = icmp ugt i64 %328, -17
  br i1 %329, label %330, label %332

330:                                              ; preds = %325
  %331 = bitcast %"class.std::__1::basic_string"* %15 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %331) #11
  unreachable

332:                                              ; preds = %325
  %333 = icmp ult i64 %328, 23
  br i1 %333, label %339, label %334

334:                                              ; preds = %332
  %335 = add nuw i64 %328, 16
  %336 = and i64 %335, -16
  %337 = call i8* @_Znwm(i64 %336) #12
  store i8* %337, i8** %53, align 8
  %338 = or i64 %336, -9223372036854775808
  store i64 %338, i64* %54, align 8
  store i64 %328, i64* %55, align 8
  br label %342

339:                                              ; preds = %332
  %340 = trunc i64 %328 to i8
  store i8 %340, i8* %57, align 1
  %341 = icmp eq i64 %328, 0
  br i1 %341, label %344, label %342

342:                                              ; preds = %339, %334
  %343 = phi i8* [ %337, %334 ], [ %52, %339 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %343, i8* align 1 %327, i64 %328, i1 false) #10
  br label %344

344:                                              ; preds = %339, %342
  %345 = phi i8* [ %52, %339 ], [ %343, %342 ]
  %346 = getelementptr inbounds i8, i8* %345, i64 %328
  store i8 0, i8* %346, align 1
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %58) #10
  %347 = getelementptr inbounds %"class.enterprise_management::IntegerPolicyProto", %"class.enterprise_management::IntegerPolicyProto"* %310, i64 0, i32 4
  %348 = load i64, i64* %347, align 8, !noalias !7
  %349 = add i64 %348, 2147483648
  %350 = icmp ugt i64 %349, 4294967295
  br i1 %350, label %351, label %364

351:                                              ; preds = %344
  %352 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 1) #10
  br i1 %352, label %353, label %357

353:                                              ; preds = %351
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %59) #10, !noalias !7
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %9, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str, i64 0, i64 0), i32 63, i32 1) #10
  %354 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %61, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i64 14) #10
  %355 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl(%"class.std::__1::basic_ostream"* %354, i64 %348) #10
  %356 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %355, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i64 22) #10
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %59) #10, !noalias !7
  br label %357

357:                                              ; preds = %353, %351
  %358 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* nonnull %14, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.3, i64 0, i64 0), i64 35) #10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #10, !noalias !7
  call void @_ZN4base14NumberToStringEl(%"class.std::__1::basic_string"* nonnull sret %10, i64 %348) #10
  call void @_ZN4base5ValueC1EONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Value"* nonnull %17, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %10) #10
  %359 = load i8, i8* %64, align 1, !noalias !7
  %360 = icmp slt i8 %359, 0
  br i1 %360, label %361, label %363

361:                                              ; preds = %357
  %362 = load i8*, i8** %65, align 8, !noalias !7
  call void @_ZdlPv(i8* %362) #12
  br label %363

363:                                              ; preds = %361, %357
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62) #10, !noalias !7
  br label %366

364:                                              ; preds = %344
  %365 = trunc i64 %348 to i32
  call void @_ZN4base5ValueC1Ei(%"class.base::Value"* nonnull %17, i32 %365) #10
  br label %366

366:                                              ; preds = %363, %364
  store i8 1, i8* %66, align 8
  call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* %67, %"class.base::Value"* nonnull dereferenceable(32) %17) #10
  call void @_ZN6policy9PolicyMap3SetERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_11PolicyLevelENS_11PolicyScopeENS_12PolicySourceEN4absl8optionalIN4base5ValueEEENS1_10unique_ptrINS_19ExternalDataFetcherENS1_14default_deleteISJ_EEEE(%"class.policy::PolicyMap"* %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %15, i32 %326, i32 %3, i32 %2, %"class.absl::optional"* nonnull %16, i64 0) #10
  %367 = load i8, i8* %66, align 8, !range !2
  %368 = icmp eq i8 %367, 0
  br i1 %368, label %370, label %369

369:                                              ; preds = %366
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %67) #10
  store i8 0, i8* %66, align 8
  br label %370

370:                                              ; preds = %366, %369
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %17) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %58) #10
  %371 = load i8, i8* %57, align 1
  %372 = icmp slt i8 %371, 0
  br i1 %372, label %373, label %375

373:                                              ; preds = %370
  %374 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %374) #12
  br label %375

375:                                              ; preds = %370, %373
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #10
  %376 = load i8, i8* %69, align 1
  %377 = icmp slt i8 %376, 0
  %378 = load i64, i64* %51, align 8
  %379 = zext i8 %376 to i64
  %380 = select i1 %377, i64 %378, i64 %379
  %381 = icmp eq i64 %380, 0
  br i1 %381, label %624, label %382

382:                                              ; preds = %375
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #10
  %383 = load i8*, i8** %257, align 8
  %384 = call i64 @strlen(i8* %383) #10
  %385 = icmp ugt i64 %384, -17
  br i1 %385, label %386, label %388

386:                                              ; preds = %382
  %387 = bitcast %"class.std::__1::basic_string"* %18 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %387) #11
  unreachable

388:                                              ; preds = %382
  %389 = icmp ult i64 %384, 23
  br i1 %389, label %395, label %390

390:                                              ; preds = %388
  %391 = add nuw i64 %384, 16
  %392 = and i64 %391, -16
  %393 = call i8* @_Znwm(i64 %392) #12
  store i8* %393, i8** %71, align 8
  %394 = or i64 %392, -9223372036854775808
  store i64 %394, i64* %72, align 8
  store i64 %384, i64* %73, align 8
  br label %398

395:                                              ; preds = %388
  %396 = trunc i64 %384 to i8
  store i8 %396, i8* %75, align 1
  %397 = icmp eq i64 %384, 0
  br i1 %397, label %400, label %398

398:                                              ; preds = %395, %390
  %399 = phi i8* [ %393, %390 ], [ %70, %395 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %399, i8* align 1 %383, i64 %384, i1 false) #10
  br label %400

400:                                              ; preds = %395, %398
  %401 = phi i8* [ %70, %395 ], [ %399, %398 ]
  %402 = getelementptr inbounds i8, i8* %401, i64 %384
  store i8 0, i8* %402, align 1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %76) #10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #10
  %403 = load i8*, i8** %50, align 8
  %404 = select i1 %377, i8* %403, i8* %49
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.67"* nonnull sret %78, i8* %404, i64 %380) #10
  %405 = call i8* @_Znwm(i64 24) #12
  store i8* %405, i8** %80, align 8
  store i8* %405, i8** %81, align 8
  %406 = getelementptr inbounds i8, i8* %405, i64 24
  store i8* %406, i8** %83, align 8
  %407 = load i8, i8* %87, align 1
  %408 = icmp slt i8 %407, 0
  br i1 %408, label %410, label %409

409:                                              ; preds = %400
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %405, i8* nonnull align 8 %88, i64 24, i1 false) #10
  br label %587

410:                                              ; preds = %400
  %411 = load i16*, i16** %89, align 8
  %412 = bitcast i16* %411 to i8*
  %413 = load i64, i64* %90, align 8
  %414 = icmp ult i64 %413, 11
  br i1 %414, label %415, label %418

415:                                              ; preds = %410
  %416 = trunc i64 %413 to i8
  %417 = getelementptr inbounds i8, i8* %405, i64 23
  store i8 %416, i8* %417, align 1
  br label %436

418:                                              ; preds = %410
  %419 = icmp ugt i64 %413, 9223372036854775791
  br i1 %419, label %420, label %422

420:                                              ; preds = %418
  %421 = bitcast i8* %405 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %421) #11
  unreachable

422:                                              ; preds = %418
  %423 = add nuw nsw i64 %413, 8
  %424 = and i64 %423, -8
  %425 = icmp slt i64 %424, 0
  br i1 %425, label %426, label %427

426:                                              ; preds = %422
  call void @abort() #11
  unreachable

427:                                              ; preds = %422
  %428 = shl i64 %424, 1
  %429 = call i8* @_Znwm(i64 %428) #12
  %430 = bitcast i8* %405 to i8**
  store i8* %429, i8** %430, align 8
  %431 = or i64 %424, -9223372036854775808
  %432 = getelementptr inbounds i8, i8* %405, i64 16
  %433 = bitcast i8* %432 to i64*
  store i64 %431, i64* %433, align 8
  %434 = getelementptr inbounds i8, i8* %405, i64 8
  %435 = bitcast i8* %434 to i64*
  store i64 %413, i64* %435, align 8
  br label %436

436:                                              ; preds = %427, %415
  %437 = phi i8* [ %405, %415 ], [ %429, %427 ]
  %438 = bitcast i8* %437 to i16*
  %439 = add nuw nsw i64 %413, 1
  %440 = add i64 %413, 1
  %441 = icmp ult i64 %440, 16
  br i1 %441, label %534, label %442

442:                                              ; preds = %436
  %443 = getelementptr i8, i8* %437, i64 2
  %444 = shl i64 %413, 1
  %445 = getelementptr i8, i8* %443, i64 %444
  %446 = getelementptr i16, i16* %411, i64 1
  %447 = getelementptr i16, i16* %446, i64 %413
  %448 = bitcast i16* %447 to i8*
  %449 = icmp ult i8* %437, %448
  %450 = icmp ugt i8* %445, %412
  %451 = and i1 %449, %450
  br i1 %451, label %534, label %452

452:                                              ; preds = %442
  %453 = and i64 %440, -16
  %454 = sub i64 %439, %453
  %455 = getelementptr i16, i16* %411, i64 %453
  %456 = getelementptr i16, i16* %438, i64 %453
  %457 = add i64 %453, -16
  %458 = lshr exact i64 %457, 4
  %459 = add nuw nsw i64 %458, 1
  %460 = and i64 %459, 3
  %461 = icmp ult i64 %457, 48
  br i1 %461, label %513, label %462

462:                                              ; preds = %452
  %463 = sub nsw i64 %459, %460
  br label %464

464:                                              ; preds = %464, %462
  %465 = phi i64 [ 0, %462 ], [ %510, %464 ]
  %466 = phi i64 [ %463, %462 ], [ %511, %464 ]
  %467 = getelementptr i16, i16* %411, i64 %465
  %468 = getelementptr i16, i16* %438, i64 %465
  %469 = bitcast i16* %467 to <8 x i16>*
  %470 = load <8 x i16>, <8 x i16>* %469, align 2, !alias.scope !10
  %471 = getelementptr i16, i16* %467, i64 8
  %472 = bitcast i16* %471 to <8 x i16>*
  %473 = load <8 x i16>, <8 x i16>* %472, align 2, !alias.scope !10
  %474 = bitcast i16* %468 to <8 x i16>*
  store <8 x i16> %470, <8 x i16>* %474, align 2, !alias.scope !13, !noalias !10
  %475 = getelementptr i16, i16* %468, i64 8
  %476 = bitcast i16* %475 to <8 x i16>*
  store <8 x i16> %473, <8 x i16>* %476, align 2, !alias.scope !13, !noalias !10
  %477 = or i64 %465, 16
  %478 = getelementptr i16, i16* %411, i64 %477
  %479 = getelementptr i16, i16* %438, i64 %477
  %480 = bitcast i16* %478 to <8 x i16>*
  %481 = load <8 x i16>, <8 x i16>* %480, align 2, !alias.scope !10
  %482 = getelementptr i16, i16* %478, i64 8
  %483 = bitcast i16* %482 to <8 x i16>*
  %484 = load <8 x i16>, <8 x i16>* %483, align 2, !alias.scope !10
  %485 = bitcast i16* %479 to <8 x i16>*
  store <8 x i16> %481, <8 x i16>* %485, align 2, !alias.scope !13, !noalias !10
  %486 = getelementptr i16, i16* %479, i64 8
  %487 = bitcast i16* %486 to <8 x i16>*
  store <8 x i16> %484, <8 x i16>* %487, align 2, !alias.scope !13, !noalias !10
  %488 = or i64 %465, 32
  %489 = getelementptr i16, i16* %411, i64 %488
  %490 = getelementptr i16, i16* %438, i64 %488
  %491 = bitcast i16* %489 to <8 x i16>*
  %492 = load <8 x i16>, <8 x i16>* %491, align 2, !alias.scope !10
  %493 = getelementptr i16, i16* %489, i64 8
  %494 = bitcast i16* %493 to <8 x i16>*
  %495 = load <8 x i16>, <8 x i16>* %494, align 2, !alias.scope !10
  %496 = bitcast i16* %490 to <8 x i16>*
  store <8 x i16> %492, <8 x i16>* %496, align 2, !alias.scope !13, !noalias !10
  %497 = getelementptr i16, i16* %490, i64 8
  %498 = bitcast i16* %497 to <8 x i16>*
  store <8 x i16> %495, <8 x i16>* %498, align 2, !alias.scope !13, !noalias !10
  %499 = or i64 %465, 48
  %500 = getelementptr i16, i16* %411, i64 %499
  %501 = getelementptr i16, i16* %438, i64 %499
  %502 = bitcast i16* %500 to <8 x i16>*
  %503 = load <8 x i16>, <8 x i16>* %502, align 2, !alias.scope !10
  %504 = getelementptr i16, i16* %500, i64 8
  %505 = bitcast i16* %504 to <8 x i16>*
  %506 = load <8 x i16>, <8 x i16>* %505, align 2, !alias.scope !10
  %507 = bitcast i16* %501 to <8 x i16>*
  store <8 x i16> %503, <8 x i16>* %507, align 2, !alias.scope !13, !noalias !10
  %508 = getelementptr i16, i16* %501, i64 8
  %509 = bitcast i16* %508 to <8 x i16>*
  store <8 x i16> %506, <8 x i16>* %509, align 2, !alias.scope !13, !noalias !10
  %510 = add i64 %465, 64
  %511 = add i64 %466, -4
  %512 = icmp eq i64 %511, 0
  br i1 %512, label %513, label %464, !llvm.loop !15

513:                                              ; preds = %464, %452
  %514 = phi i64 [ 0, %452 ], [ %510, %464 ]
  %515 = icmp eq i64 %460, 0
  br i1 %515, label %532, label %516

516:                                              ; preds = %513, %516
  %517 = phi i64 [ %529, %516 ], [ %514, %513 ]
  %518 = phi i64 [ %530, %516 ], [ %460, %513 ]
  %519 = getelementptr i16, i16* %411, i64 %517
  %520 = getelementptr i16, i16* %438, i64 %517
  %521 = bitcast i16* %519 to <8 x i16>*
  %522 = load <8 x i16>, <8 x i16>* %521, align 2, !alias.scope !10
  %523 = getelementptr i16, i16* %519, i64 8
  %524 = bitcast i16* %523 to <8 x i16>*
  %525 = load <8 x i16>, <8 x i16>* %524, align 2, !alias.scope !10
  %526 = bitcast i16* %520 to <8 x i16>*
  store <8 x i16> %522, <8 x i16>* %526, align 2, !alias.scope !13, !noalias !10
  %527 = getelementptr i16, i16* %520, i64 8
  %528 = bitcast i16* %527 to <8 x i16>*
  store <8 x i16> %525, <8 x i16>* %528, align 2, !alias.scope !13, !noalias !10
  %529 = add i64 %517, 16
  %530 = add i64 %518, -1
  %531 = icmp eq i64 %530, 0
  br i1 %531, label %532, label %516, !llvm.loop !17

532:                                              ; preds = %516, %513
  %533 = icmp eq i64 %440, %453
  br i1 %533, label %587, label %534

534:                                              ; preds = %532, %442, %436
  %535 = phi i64 [ %439, %442 ], [ %439, %436 ], [ %454, %532 ]
  %536 = phi i16* [ %411, %442 ], [ %411, %436 ], [ %455, %532 ]
  %537 = phi i16* [ %438, %442 ], [ %438, %436 ], [ %456, %532 ]
  %538 = add i64 %535, -1
  %539 = and i64 %535, 7
  %540 = icmp eq i64 %539, 0
  br i1 %540, label %552, label %541

541:                                              ; preds = %534, %541
  %542 = phi i64 [ %547, %541 ], [ %535, %534 ]
  %543 = phi i16* [ %549, %541 ], [ %536, %534 ]
  %544 = phi i16* [ %548, %541 ], [ %537, %534 ]
  %545 = phi i64 [ %550, %541 ], [ %539, %534 ]
  %546 = load i16, i16* %543, align 2
  store i16 %546, i16* %544, align 2
  %547 = add i64 %542, -1
  %548 = getelementptr inbounds i16, i16* %544, i64 1
  %549 = getelementptr inbounds i16, i16* %543, i64 1
  %550 = add i64 %545, -1
  %551 = icmp eq i64 %550, 0
  br i1 %551, label %552, label %541, !llvm.loop !19

552:                                              ; preds = %541, %534
  %553 = phi i64 [ %535, %534 ], [ %547, %541 ]
  %554 = phi i16* [ %536, %534 ], [ %549, %541 ]
  %555 = phi i16* [ %537, %534 ], [ %548, %541 ]
  %556 = icmp ult i64 %538, 7
  br i1 %556, label %587, label %557

557:                                              ; preds = %552, %557
  %558 = phi i64 [ %583, %557 ], [ %553, %552 ]
  %559 = phi i16* [ %585, %557 ], [ %554, %552 ]
  %560 = phi i16* [ %584, %557 ], [ %555, %552 ]
  %561 = load i16, i16* %559, align 2
  store i16 %561, i16* %560, align 2
  %562 = getelementptr inbounds i16, i16* %560, i64 1
  %563 = getelementptr inbounds i16, i16* %559, i64 1
  %564 = load i16, i16* %563, align 2
  store i16 %564, i16* %562, align 2
  %565 = getelementptr inbounds i16, i16* %560, i64 2
  %566 = getelementptr inbounds i16, i16* %559, i64 2
  %567 = load i16, i16* %566, align 2
  store i16 %567, i16* %565, align 2
  %568 = getelementptr inbounds i16, i16* %560, i64 3
  %569 = getelementptr inbounds i16, i16* %559, i64 3
  %570 = load i16, i16* %569, align 2
  store i16 %570, i16* %568, align 2
  %571 = getelementptr inbounds i16, i16* %560, i64 4
  %572 = getelementptr inbounds i16, i16* %559, i64 4
  %573 = load i16, i16* %572, align 2
  store i16 %573, i16* %571, align 2
  %574 = getelementptr inbounds i16, i16* %560, i64 5
  %575 = getelementptr inbounds i16, i16* %559, i64 5
  %576 = load i16, i16* %575, align 2
  store i16 %576, i16* %574, align 2
  %577 = getelementptr inbounds i16, i16* %560, i64 6
  %578 = getelementptr inbounds i16, i16* %559, i64 6
  %579 = load i16, i16* %578, align 2
  store i16 %579, i16* %577, align 2
  %580 = getelementptr inbounds i16, i16* %560, i64 7
  %581 = getelementptr inbounds i16, i16* %559, i64 7
  %582 = load i16, i16* %581, align 2
  store i16 %582, i16* %580, align 2
  %583 = add i64 %558, -8
  %584 = getelementptr inbounds i16, i16* %560, i64 8
  %585 = getelementptr inbounds i16, i16* %559, i64 8
  %586 = icmp eq i64 %583, 0
  br i1 %586, label %587, label %557, !llvm.loop !20

587:                                              ; preds = %552, %557, %532, %409
  %588 = getelementptr inbounds i8, i8* %405, i64 24
  %589 = ptrtoint i8* %588 to i64
  store i64 %589, i64* %84, align 8
  call void @_ZN6policy9PolicyMap10AddMessageERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS0_11MessageTypeEiONS1_6vectorINS2_IDsNS3_IDsEENS5_IDsEEEENS5_ISE_EEEE(%"class.policy::PolicyMap"* %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %18, i32 2, i32 20348, %"class.std::__1::vector.65"* nonnull dereferenceable(24) %19) #10
  %590 = load %"class.std::__1::basic_string.67"*, %"class.std::__1::basic_string.67"** %85, align 8
  %591 = icmp eq %"class.std::__1::basic_string.67"* %590, null
  br i1 %591, label %612, label %592

592:                                              ; preds = %587
  %593 = bitcast %"class.std::__1::basic_string.67"* %590 to i8*
  %594 = load %"class.std::__1::basic_string.67"*, %"class.std::__1::basic_string.67"** %79, align 8
  %595 = icmp eq %"class.std::__1::basic_string.67"* %594, %590
  br i1 %595, label %610, label %596

596:                                              ; preds = %592, %606
  %597 = phi %"class.std::__1::basic_string.67"* [ %598, %606 ], [ %594, %592 ]
  %598 = getelementptr inbounds %"class.std::__1::basic_string.67", %"class.std::__1::basic_string.67"* %597, i64 -1
  %599 = bitcast %"class.std::__1::basic_string.67"* %598 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %600 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %599, i64 0, i32 1, i32 1
  %601 = load i8, i8* %600, align 1
  %602 = icmp slt i8 %601, 0
  br i1 %602, label %603, label %606

603:                                              ; preds = %596
  %604 = bitcast %"class.std::__1::basic_string.67"* %598 to i8**
  %605 = load i8*, i8** %604, align 8
  call void @_ZdlPv(i8* %605) #12
  br label %606

606:                                              ; preds = %603, %596
  %607 = icmp eq %"class.std::__1::basic_string.67"* %598, %590
  br i1 %607, label %608, label %596

608:                                              ; preds = %606
  %609 = load i8*, i8** %81, align 8
  br label %610

610:                                              ; preds = %608, %592
  %611 = phi i8* [ %609, %608 ], [ %593, %592 ]
  store %"class.std::__1::basic_string.67"* %590, %"class.std::__1::basic_string.67"** %79, align 8
  call void @_ZdlPv(i8* %611) #12
  br label %612

612:                                              ; preds = %587, %610
  %613 = load i8, i8* %92, align 1
  %614 = icmp slt i8 %613, 0
  br i1 %614, label %615, label %617

615:                                              ; preds = %612
  %616 = load i8*, i8** %93, align 8
  call void @_ZdlPv(i8* %616) #12
  br label %617

617:                                              ; preds = %612, %615
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %76) #10
  %618 = load i8, i8* %75, align 1
  %619 = icmp slt i8 %618, 0
  br i1 %619, label %620, label %622

620:                                              ; preds = %617
  %621 = load i8*, i8** %71, align 8
  call void @_ZdlPv(i8* %621) #12
  br label %622

622:                                              ; preds = %617, %620
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #10
  %623 = load i8, i8* %69, align 1
  br label %624

624:                                              ; preds = %622, %375
  %625 = phi i8 [ %623, %622 ], [ %376, %375 ]
  %626 = icmp slt i8 %625, 0
  br i1 %626, label %627, label %629

627:                                              ; preds = %624
  %628 = load i8*, i8** %50, align 8
  call void @_ZdlPv(i8* %628) #12
  br label %629

629:                                              ; preds = %624, %627
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #10
  br label %630

630:                                              ; preds = %262, %318, %308, %629, %264, %285
  %631 = getelementptr inbounds i8*, i8** %257, i64 6
  %632 = load i8*, i8** %631, align 8
  %633 = icmp eq i8* %632, null
  br i1 %633, label %201, label %256

634:                                              ; preds = %1092, %201
  %635 = load i8*, i8** getelementptr inbounds ([0 x %"struct.policy::StringListPolicyAccess"], [0 x %"struct.policy::StringListPolicyAccess"]* @_ZN6policy23kStringListPolicyAccessE, i64 0, i64 0, i32 0), align 8
  %636 = icmp eq i8* %635, null
  br i1 %636, label %1096, label %637

637:                                              ; preds = %634
  %638 = bitcast %"class.enterprise_management::CloudPolicySettings"* %0 to i8*
  %639 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  %640 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %641 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %642 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %643 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %644 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %643, i64 0, i32 1, i32 0
  %645 = bitcast %"class.base::Value"* %30 to i8*
  %646 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %29, i64 0, i32 0, i32 0, i32 0, i32 0
  %647 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %29, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br label %1097

648:                                              ; preds = %204, %1092
  %649 = phi i8** [ getelementptr inbounds ([0 x %"struct.policy::StringPolicyAccess"], [0 x %"struct.policy::StringPolicyAccess"]* @_ZN6policy19kStringPolicyAccessE, i64 0, i64 0, i32 0), %204 ], [ %1093, %1092 ]
  %650 = getelementptr inbounds i8*, i8** %649, i64 1
  %651 = bitcast i8** %650 to i8*
  %652 = load i8, i8* %651, align 8, !range !2
  %653 = icmp ne i8 %652, 0
  switch i32 %5, label %655 [
    i32 0, label %656
    i32 1, label %654
    i32 2, label %657
  ]

654:                                              ; preds = %648
  br i1 %653, label %1092, label %657

655:                                              ; preds = %648
  unreachable

656:                                              ; preds = %648
  br i1 %653, label %657, label %1092

657:                                              ; preds = %654, %648, %656
  %658 = getelementptr inbounds i8*, i8** %649, i64 2
  %659 = bitcast i8** %658 to i64*
  %660 = load i64, i64* %659, align 8
  %661 = getelementptr inbounds i8*, i8** %649, i64 3
  %662 = bitcast i8** %661 to i64*
  %663 = load i64, i64* %662, align 8
  %664 = getelementptr inbounds i8, i8* %205, i64 %663
  %665 = bitcast i8* %664 to %"class.enterprise_management::CloudPolicySettings"*
  %666 = and i64 %660, 1
  %667 = icmp eq i64 %666, 0
  br i1 %667, label %675, label %668

668:                                              ; preds = %657
  %669 = bitcast i8* %664 to i8**
  %670 = load i8*, i8** %669, align 8
  %671 = add i64 %660, -1
  %672 = getelementptr i8, i8* %670, i64 %671
  %673 = bitcast i8* %672 to i1 (%"class.enterprise_management::CloudPolicySettings"*)**
  %674 = load i1 (%"class.enterprise_management::CloudPolicySettings"*)*, i1 (%"class.enterprise_management::CloudPolicySettings"*)** %673, align 8
  br label %677

675:                                              ; preds = %657
  %676 = inttoptr i64 %660 to i1 (%"class.enterprise_management::CloudPolicySettings"*)*
  br label %677

677:                                              ; preds = %675, %668
  %678 = phi i1 (%"class.enterprise_management::CloudPolicySettings"*)* [ %674, %668 ], [ %676, %675 ]
  %679 = call zeroext i1 %678(%"class.enterprise_management::CloudPolicySettings"* %665) #10
  br i1 %679, label %680, label %1092

680:                                              ; preds = %677
  %681 = getelementptr inbounds i8*, i8** %649, i64 4
  %682 = bitcast i8** %681 to i64*
  %683 = load i64, i64* %682, align 8
  %684 = getelementptr inbounds i8*, i8** %649, i64 5
  %685 = bitcast i8** %684 to i64*
  %686 = load i64, i64* %685, align 8
  %687 = getelementptr inbounds i8, i8* %205, i64 %686
  %688 = bitcast i8* %687 to %"class.enterprise_management::CloudPolicySettings"*
  %689 = and i64 %683, 1
  %690 = icmp eq i64 %689, 0
  br i1 %690, label %698, label %691

691:                                              ; preds = %680
  %692 = bitcast i8* %687 to i8**
  %693 = load i8*, i8** %692, align 8
  %694 = add i64 %683, -1
  %695 = getelementptr i8, i8* %693, i64 %694
  %696 = bitcast i8* %695 to %"class.enterprise_management::StringPolicyProto"* (%"class.enterprise_management::CloudPolicySettings"*)**
  %697 = load %"class.enterprise_management::StringPolicyProto"* (%"class.enterprise_management::CloudPolicySettings"*)*, %"class.enterprise_management::StringPolicyProto"* (%"class.enterprise_management::CloudPolicySettings"*)** %696, align 8
  br label %700

698:                                              ; preds = %680
  %699 = inttoptr i64 %683 to %"class.enterprise_management::StringPolicyProto"* (%"class.enterprise_management::CloudPolicySettings"*)*
  br label %700

700:                                              ; preds = %698, %691
  %701 = phi %"class.enterprise_management::StringPolicyProto"* (%"class.enterprise_management::CloudPolicySettings"*)* [ %697, %691 ], [ %699, %698 ]
  %702 = call dereferenceable(40) %"class.enterprise_management::StringPolicyProto"* %701(%"class.enterprise_management::CloudPolicySettings"* %688) #10
  %703 = getelementptr inbounds %"class.enterprise_management::StringPolicyProto", %"class.enterprise_management::StringPolicyProto"* %702, i64 0, i32 1, i32 0, i64 0
  %704 = load i32, i32* %703, align 4
  %705 = and i32 %704, 1
  %706 = icmp eq i32 %705, 0
  br i1 %706, label %1092, label %707

707:                                              ; preds = %700
  %708 = and i32 %704, 2
  %709 = icmp eq i32 %708, 0
  br i1 %709, label %717, label %710

710:                                              ; preds = %707
  %711 = getelementptr inbounds %"class.enterprise_management::StringPolicyProto", %"class.enterprise_management::StringPolicyProto"* %702, i64 0, i32 4
  %712 = load %"class.enterprise_management::PolicyOptions"*, %"class.enterprise_management::PolicyOptions"** %711, align 8, !nonnull !3
  %713 = getelementptr inbounds %"class.enterprise_management::PolicyOptions", %"class.enterprise_management::PolicyOptions"* %712, i64 0, i32 3
  %714 = load i32, i32* %713, align 8
  switch i32 %714, label %716 [
    i32 0, label %717
    i32 1, label %715
    i32 2, label %1092
  ]

715:                                              ; preds = %710
  br label %717

716:                                              ; preds = %710
  unreachable

717:                                              ; preds = %710, %715, %707
  %718 = phi i32 [ 1, %707 ], [ 0, %715 ], [ 1, %710 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %206) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %206, i8 0, i64 24, i1 false) #10
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %209) #10
  %719 = getelementptr inbounds i8*, i8** %649, i64 6
  %720 = bitcast i8** %719 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %247, i8 -86, i64 32, i1 false)
  %721 = load i32, i32* %720, align 8
  %722 = icmp eq i32 %721, 0
  %723 = getelementptr inbounds %"class.enterprise_management::StringPolicyProto", %"class.enterprise_management::StringPolicyProto"* %702, i64 0, i32 3, i32 0
  %724 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %723, align 8
  br i1 %722, label %725, label %738

725:                                              ; preds = %717
  %726 = bitcast %"class.std::__1::basic_string"* %724 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %727 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %726, i64 0, i32 1, i32 0
  %728 = load i8, i8* %727, align 1, !noalias !21
  %729 = icmp slt i8 %728, 0
  %730 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %724, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %731 = load i8*, i8** %730, align 8, !noalias !21
  %732 = bitcast %"class.std::__1::basic_string"* %724 to i8*
  %733 = select i1 %729, i8* %731, i8* %732
  %734 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %724, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %735 = load i64, i64* %734, align 8, !noalias !21
  %736 = zext i8 %728 to i64
  %737 = select i1 %729, i64 %735, i64 %736
  call void @_ZN4base5ValueC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* nonnull %22, i8* %733, i64 %737) #10
  br label %802

738:                                              ; preds = %717
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %210) #10, !noalias !24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %210, i8 -86, i64 72, i1 false) #10, !noalias !24
  %739 = bitcast %"class.std::__1::basic_string"* %724 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %740 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %739, i64 0, i32 1, i32 0
  %741 = load i8, i8* %740, align 1, !noalias !24
  %742 = icmp slt i8 %741, 0
  %743 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %724, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %744 = load i8*, i8** %743, align 8, !noalias !24
  %745 = bitcast %"class.std::__1::basic_string"* %724 to i8*
  %746 = select i1 %742, i8* %744, i8* %745
  %747 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %724, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %748 = load i64, i64* %747, align 8, !noalias !24
  %749 = zext i8 %741 to i64
  %750 = select i1 %742, i64 %748, i64 %749
  call void @_ZN4base10JSONReader27ReadAndReturnValueWithErrorENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"struct.base::JSONReader::ValueWithError"* nonnull sret %7, i8* %746, i64 %750, i32 1) #10, !noalias !24
  %751 = load i8, i8* %210, align 8, !range !2, !noalias !24
  %752 = icmp eq i8 %751, 0
  br i1 %752, label %753, label %791

753:                                              ; preds = %738
  %754 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 1) #10
  br i1 %754, label %755, label %765

755:                                              ; preds = %753
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %214) #10, !noalias !24
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %8, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str, i64 0, i64 0), i32 97, i32 1) #10
  %756 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %216, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0), i64 14) #10
  %757 = load i8, i8* %740, align 1
  %758 = icmp slt i8 %757, 0
  %759 = load i8*, i8** %743, align 8
  %760 = load i64, i64* %747, align 8
  %761 = zext i8 %757 to i64
  %762 = select i1 %758, i8* %759, i8* %745
  %763 = select i1 %758, i64 %760, i64 %761
  %764 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %756, i8* %762, i64 %763) #10
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %214) #10, !noalias !24
  br label %765

765:                                              ; preds = %755, %753
  %766 = load i8, i8* %212, align 1, !noalias !24
  %767 = icmp slt i8 %766, 0
  %768 = load i8, i8* %219, align 1, !noalias !24
  %769 = icmp slt i8 %768, 0
  br i1 %767, label %776, label %770

770:                                              ; preds = %765
  br i1 %769, label %772, label %771

771:                                              ; preds = %770
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %206, i8* align 8 %220, i64 24, i1 false) #10, !noalias !24
  br label %783

772:                                              ; preds = %770
  %773 = load i8*, i8** %221, align 8, !noalias !24
  %774 = load i64, i64* %222, align 8, !noalias !24
  %775 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* nonnull %21, i8* %773, i64 %774) #10
  br label %783

776:                                              ; preds = %765
  %777 = load i8*, i8** %221, align 8, !noalias !24
  %778 = load i64, i64* %222, align 8, !noalias !24
  %779 = zext i8 %768 to i64
  %780 = select i1 %769, i8* %777, i8* %220
  %781 = select i1 %769, i64 %778, i64 %779
  %782 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* nonnull %21, i8* %780, i64 %781) #10
  br label %783

783:                                              ; preds = %776, %772, %771
  %784 = load i8, i8* %740, align 1
  %785 = icmp slt i8 %784, 0
  %786 = load i8*, i8** %743, align 8
  %787 = select i1 %785, i8* %786, i8* %745
  %788 = load i64, i64* %747, align 8
  %789 = zext i8 %784 to i64
  %790 = select i1 %785, i64 %788, i64 %789
  call void @_ZN4base5ValueC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* nonnull %22, i8* %787, i64 %790) #10
  br label %801

791:                                              ; preds = %738
  %792 = load i8, i8* %212, align 1, !noalias !24
  %793 = icmp slt i8 %792, 0
  br i1 %793, label %795, label %794

794:                                              ; preds = %791
  store i8 0, i8* %206, align 8, !noalias !24
  store i8 0, i8* %212, align 1, !noalias !24
  br label %800

795:                                              ; preds = %791
  %796 = load i8*, i8** %207, align 8, !noalias !24
  store i8 0, i8* %796, align 1
  store i64 0, i64* %208, align 8, !noalias !24
  %797 = load i8, i8* %210, align 8, !range !2, !noalias !24
  %798 = icmp eq i8 %797, 0
  br i1 %798, label %799, label %800

799:                                              ; preds = %795
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #11
  unreachable

800:                                              ; preds = %795, %794
  call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* nonnull %22, %"class.base::Value"* dereferenceable(32) %213) #10
  br label %801

801:                                              ; preds = %783, %800
  call void @_ZN4base10JSONReader14ValueWithErrorD1Ev(%"struct.base::JSONReader::ValueWithError"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %210) #10, !noalias !24
  br label %802

802:                                              ; preds = %801, %725
  %803 = load i32, i32* %720, align 8
  %804 = icmp eq i32 %803, 2
  br i1 %804, label %805, label %808

805:                                              ; preds = %802
  %806 = call %"class.policy::ExternalDataFetcher"* @_ZNSt3__111make_uniqueIN6policy19ExternalDataFetcherEJRN4base7WeakPtrINS1_24CloudExternalDataManagerEEERKPKcEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.base::WeakPtr"* dereferenceable(16) %1, i8** dereferenceable(8) %649)
  %807 = ptrtoint %"class.policy::ExternalDataFetcher"* %806 to i64
  br label %808

808:                                              ; preds = %802, %805
  %809 = phi i64 [ %807, %805 ], [ 0, %802 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %223) #10
  %810 = load i8*, i8** %649, align 8
  %811 = call i64 @strlen(i8* %810) #10
  %812 = icmp ugt i64 %811, -17
  br i1 %812, label %813, label %815

813:                                              ; preds = %808
  %814 = bitcast %"class.std::__1::basic_string"* %23 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %814) #11
  unreachable

815:                                              ; preds = %808
  %816 = icmp ult i64 %811, 23
  br i1 %816, label %822, label %817

817:                                              ; preds = %815
  %818 = add nuw i64 %811, 16
  %819 = and i64 %818, -16
  %820 = call i8* @_Znwm(i64 %819) #12
  store i8* %820, i8** %224, align 8
  %821 = or i64 %819, -9223372036854775808
  store i64 %821, i64* %225, align 8
  store i64 %811, i64* %226, align 8
  br label %825

822:                                              ; preds = %815
  %823 = trunc i64 %811 to i8
  store i8 %823, i8* %228, align 1
  %824 = icmp eq i64 %811, 0
  br i1 %824, label %827, label %825

825:                                              ; preds = %822, %817
  %826 = phi i8* [ %820, %817 ], [ %223, %822 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %826, i8* align 1 %810, i64 %811, i1 false) #10
  br label %827

827:                                              ; preds = %822, %825
  %828 = phi i8* [ %223, %822 ], [ %826, %825 ]
  %829 = getelementptr inbounds i8, i8* %828, i64 %811
  store i8 0, i8* %829, align 1
  store i8 1, i8* %229, align 8
  call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* %230, %"class.base::Value"* nonnull dereferenceable(32) %22) #10
  call void @_ZN6policy9PolicyMap3SetERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_11PolicyLevelENS_11PolicyScopeENS_12PolicySourceEN4absl8optionalIN4base5ValueEEENS1_10unique_ptrINS_19ExternalDataFetcherENS1_14default_deleteISJ_EEEE(%"class.policy::PolicyMap"* %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %23, i32 %718, i32 %3, i32 %2, %"class.absl::optional"* nonnull %24, i64 %809) #10
  %830 = load i8, i8* %229, align 8, !range !2
  %831 = icmp eq i8 %830, 0
  br i1 %831, label %833, label %832

832:                                              ; preds = %827
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %230) #10
  store i8 0, i8* %229, align 8
  br label %833

833:                                              ; preds = %827, %832
  %834 = load i8, i8* %228, align 1
  %835 = icmp slt i8 %834, 0
  br i1 %835, label %836, label %838

836:                                              ; preds = %833
  %837 = load i8*, i8** %224, align 8
  call void @_ZdlPv(i8* %837) #12
  br label %838

838:                                              ; preds = %833, %836
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %223) #10
  %839 = load i8, i8* %212, align 1
  %840 = icmp slt i8 %839, 0
  %841 = load i64, i64* %208, align 8
  %842 = zext i8 %839 to i64
  %843 = select i1 %840, i64 %841, i64 %842
  %844 = icmp eq i64 %843, 0
  br i1 %844, label %1086, label %845

845:                                              ; preds = %838
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %231) #10
  %846 = load i8*, i8** %649, align 8
  %847 = call i64 @strlen(i8* %846) #10
  %848 = icmp ugt i64 %847, -17
  br i1 %848, label %849, label %851

849:                                              ; preds = %845
  %850 = bitcast %"class.std::__1::basic_string"* %25 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %850) #11
  unreachable

851:                                              ; preds = %845
  %852 = icmp ult i64 %847, 23
  br i1 %852, label %858, label %853

853:                                              ; preds = %851
  %854 = add nuw i64 %847, 16
  %855 = and i64 %854, -16
  %856 = call i8* @_Znwm(i64 %855) #12
  store i8* %856, i8** %232, align 8
  %857 = or i64 %855, -9223372036854775808
  store i64 %857, i64* %233, align 8
  store i64 %847, i64* %234, align 8
  br label %861

858:                                              ; preds = %851
  %859 = trunc i64 %847 to i8
  store i8 %859, i8* %236, align 1
  %860 = icmp eq i64 %847, 0
  br i1 %860, label %863, label %861

861:                                              ; preds = %858, %853
  %862 = phi i8* [ %856, %853 ], [ %231, %858 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %862, i8* align 1 %846, i64 %847, i1 false) #10
  br label %863

863:                                              ; preds = %858, %861
  %864 = phi i8* [ %231, %858 ], [ %862, %861 ]
  %865 = getelementptr inbounds i8, i8* %864, i64 %847
  store i8 0, i8* %865, align 1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %237) #10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %238) #10
  %866 = load i8*, i8** %207, align 8
  %867 = select i1 %840, i8* %866, i8* %206
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.67"* nonnull sret %239, i8* %867, i64 %843) #10
  %868 = call i8* @_Znwm(i64 24) #12
  store i8* %868, i8** %241, align 8
  store i8* %868, i8** %242, align 8
  %869 = getelementptr inbounds i8, i8* %868, i64 24
  store i8* %869, i8** %244, align 8
  %870 = load i8, i8* %249, align 1
  %871 = icmp slt i8 %870, 0
  br i1 %871, label %873, label %872

872:                                              ; preds = %863
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %868, i8* nonnull align 8 %250, i64 24, i1 false) #10
  br label %1050

873:                                              ; preds = %863
  %874 = load i16*, i16** %251, align 8
  %875 = bitcast i16* %874 to i8*
  %876 = load i64, i64* %252, align 8
  %877 = icmp ult i64 %876, 11
  br i1 %877, label %878, label %881

878:                                              ; preds = %873
  %879 = trunc i64 %876 to i8
  %880 = getelementptr inbounds i8, i8* %868, i64 23
  store i8 %879, i8* %880, align 1
  br label %899

881:                                              ; preds = %873
  %882 = icmp ugt i64 %876, 9223372036854775791
  br i1 %882, label %883, label %885

883:                                              ; preds = %881
  %884 = bitcast i8* %868 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %884) #11
  unreachable

885:                                              ; preds = %881
  %886 = add nuw nsw i64 %876, 8
  %887 = and i64 %886, -8
  %888 = icmp slt i64 %887, 0
  br i1 %888, label %889, label %890

889:                                              ; preds = %885
  call void @abort() #11
  unreachable

890:                                              ; preds = %885
  %891 = shl i64 %887, 1
  %892 = call i8* @_Znwm(i64 %891) #12
  %893 = bitcast i8* %868 to i8**
  store i8* %892, i8** %893, align 8
  %894 = or i64 %887, -9223372036854775808
  %895 = getelementptr inbounds i8, i8* %868, i64 16
  %896 = bitcast i8* %895 to i64*
  store i64 %894, i64* %896, align 8
  %897 = getelementptr inbounds i8, i8* %868, i64 8
  %898 = bitcast i8* %897 to i64*
  store i64 %876, i64* %898, align 8
  br label %899

899:                                              ; preds = %890, %878
  %900 = phi i8* [ %868, %878 ], [ %892, %890 ]
  %901 = bitcast i8* %900 to i16*
  %902 = add nuw nsw i64 %876, 1
  %903 = add i64 %876, 1
  %904 = icmp ult i64 %903, 16
  br i1 %904, label %997, label %905

905:                                              ; preds = %899
  %906 = getelementptr i8, i8* %900, i64 2
  %907 = shl i64 %876, 1
  %908 = getelementptr i8, i8* %906, i64 %907
  %909 = getelementptr i16, i16* %874, i64 1
  %910 = getelementptr i16, i16* %909, i64 %876
  %911 = bitcast i16* %910 to i8*
  %912 = icmp ult i8* %900, %911
  %913 = icmp ugt i8* %908, %875
  %914 = and i1 %912, %913
  br i1 %914, label %997, label %915

915:                                              ; preds = %905
  %916 = and i64 %903, -16
  %917 = sub i64 %902, %916
  %918 = getelementptr i16, i16* %874, i64 %916
  %919 = getelementptr i16, i16* %901, i64 %916
  %920 = add i64 %916, -16
  %921 = lshr exact i64 %920, 4
  %922 = add nuw nsw i64 %921, 1
  %923 = and i64 %922, 3
  %924 = icmp ult i64 %920, 48
  br i1 %924, label %976, label %925

925:                                              ; preds = %915
  %926 = sub nsw i64 %922, %923
  br label %927

927:                                              ; preds = %927, %925
  %928 = phi i64 [ 0, %925 ], [ %973, %927 ]
  %929 = phi i64 [ %926, %925 ], [ %974, %927 ]
  %930 = getelementptr i16, i16* %874, i64 %928
  %931 = getelementptr i16, i16* %901, i64 %928
  %932 = bitcast i16* %930 to <8 x i16>*
  %933 = load <8 x i16>, <8 x i16>* %932, align 2, !alias.scope !27
  %934 = getelementptr i16, i16* %930, i64 8
  %935 = bitcast i16* %934 to <8 x i16>*
  %936 = load <8 x i16>, <8 x i16>* %935, align 2, !alias.scope !27
  %937 = bitcast i16* %931 to <8 x i16>*
  store <8 x i16> %933, <8 x i16>* %937, align 2, !alias.scope !30, !noalias !27
  %938 = getelementptr i16, i16* %931, i64 8
  %939 = bitcast i16* %938 to <8 x i16>*
  store <8 x i16> %936, <8 x i16>* %939, align 2, !alias.scope !30, !noalias !27
  %940 = or i64 %928, 16
  %941 = getelementptr i16, i16* %874, i64 %940
  %942 = getelementptr i16, i16* %901, i64 %940
  %943 = bitcast i16* %941 to <8 x i16>*
  %944 = load <8 x i16>, <8 x i16>* %943, align 2, !alias.scope !27
  %945 = getelementptr i16, i16* %941, i64 8
  %946 = bitcast i16* %945 to <8 x i16>*
  %947 = load <8 x i16>, <8 x i16>* %946, align 2, !alias.scope !27
  %948 = bitcast i16* %942 to <8 x i16>*
  store <8 x i16> %944, <8 x i16>* %948, align 2, !alias.scope !30, !noalias !27
  %949 = getelementptr i16, i16* %942, i64 8
  %950 = bitcast i16* %949 to <8 x i16>*
  store <8 x i16> %947, <8 x i16>* %950, align 2, !alias.scope !30, !noalias !27
  %951 = or i64 %928, 32
  %952 = getelementptr i16, i16* %874, i64 %951
  %953 = getelementptr i16, i16* %901, i64 %951
  %954 = bitcast i16* %952 to <8 x i16>*
  %955 = load <8 x i16>, <8 x i16>* %954, align 2, !alias.scope !27
  %956 = getelementptr i16, i16* %952, i64 8
  %957 = bitcast i16* %956 to <8 x i16>*
  %958 = load <8 x i16>, <8 x i16>* %957, align 2, !alias.scope !27
  %959 = bitcast i16* %953 to <8 x i16>*
  store <8 x i16> %955, <8 x i16>* %959, align 2, !alias.scope !30, !noalias !27
  %960 = getelementptr i16, i16* %953, i64 8
  %961 = bitcast i16* %960 to <8 x i16>*
  store <8 x i16> %958, <8 x i16>* %961, align 2, !alias.scope !30, !noalias !27
  %962 = or i64 %928, 48
  %963 = getelementptr i16, i16* %874, i64 %962
  %964 = getelementptr i16, i16* %901, i64 %962
  %965 = bitcast i16* %963 to <8 x i16>*
  %966 = load <8 x i16>, <8 x i16>* %965, align 2, !alias.scope !27
  %967 = getelementptr i16, i16* %963, i64 8
  %968 = bitcast i16* %967 to <8 x i16>*
  %969 = load <8 x i16>, <8 x i16>* %968, align 2, !alias.scope !27
  %970 = bitcast i16* %964 to <8 x i16>*
  store <8 x i16> %966, <8 x i16>* %970, align 2, !alias.scope !30, !noalias !27
  %971 = getelementptr i16, i16* %964, i64 8
  %972 = bitcast i16* %971 to <8 x i16>*
  store <8 x i16> %969, <8 x i16>* %972, align 2, !alias.scope !30, !noalias !27
  %973 = add i64 %928, 64
  %974 = add i64 %929, -4
  %975 = icmp eq i64 %974, 0
  br i1 %975, label %976, label %927, !llvm.loop !32

976:                                              ; preds = %927, %915
  %977 = phi i64 [ 0, %915 ], [ %973, %927 ]
  %978 = icmp eq i64 %923, 0
  br i1 %978, label %995, label %979

979:                                              ; preds = %976, %979
  %980 = phi i64 [ %992, %979 ], [ %977, %976 ]
  %981 = phi i64 [ %993, %979 ], [ %923, %976 ]
  %982 = getelementptr i16, i16* %874, i64 %980
  %983 = getelementptr i16, i16* %901, i64 %980
  %984 = bitcast i16* %982 to <8 x i16>*
  %985 = load <8 x i16>, <8 x i16>* %984, align 2, !alias.scope !27
  %986 = getelementptr i16, i16* %982, i64 8
  %987 = bitcast i16* %986 to <8 x i16>*
  %988 = load <8 x i16>, <8 x i16>* %987, align 2, !alias.scope !27
  %989 = bitcast i16* %983 to <8 x i16>*
  store <8 x i16> %985, <8 x i16>* %989, align 2, !alias.scope !30, !noalias !27
  %990 = getelementptr i16, i16* %983, i64 8
  %991 = bitcast i16* %990 to <8 x i16>*
  store <8 x i16> %988, <8 x i16>* %991, align 2, !alias.scope !30, !noalias !27
  %992 = add i64 %980, 16
  %993 = add i64 %981, -1
  %994 = icmp eq i64 %993, 0
  br i1 %994, label %995, label %979, !llvm.loop !33

995:                                              ; preds = %979, %976
  %996 = icmp eq i64 %903, %916
  br i1 %996, label %1050, label %997

997:                                              ; preds = %995, %905, %899
  %998 = phi i64 [ %902, %905 ], [ %902, %899 ], [ %917, %995 ]
  %999 = phi i16* [ %874, %905 ], [ %874, %899 ], [ %918, %995 ]
  %1000 = phi i16* [ %901, %905 ], [ %901, %899 ], [ %919, %995 ]
  %1001 = add i64 %998, -1
  %1002 = and i64 %998, 7
  %1003 = icmp eq i64 %1002, 0
  br i1 %1003, label %1015, label %1004

1004:                                             ; preds = %997, %1004
  %1005 = phi i64 [ %1010, %1004 ], [ %998, %997 ]
  %1006 = phi i16* [ %1012, %1004 ], [ %999, %997 ]
  %1007 = phi i16* [ %1011, %1004 ], [ %1000, %997 ]
  %1008 = phi i64 [ %1013, %1004 ], [ %1002, %997 ]
  %1009 = load i16, i16* %1006, align 2
  store i16 %1009, i16* %1007, align 2
  %1010 = add i64 %1005, -1
  %1011 = getelementptr inbounds i16, i16* %1007, i64 1
  %1012 = getelementptr inbounds i16, i16* %1006, i64 1
  %1013 = add i64 %1008, -1
  %1014 = icmp eq i64 %1013, 0
  br i1 %1014, label %1015, label %1004, !llvm.loop !34

1015:                                             ; preds = %1004, %997
  %1016 = phi i64 [ %998, %997 ], [ %1010, %1004 ]
  %1017 = phi i16* [ %999, %997 ], [ %1012, %1004 ]
  %1018 = phi i16* [ %1000, %997 ], [ %1011, %1004 ]
  %1019 = icmp ult i64 %1001, 7
  br i1 %1019, label %1050, label %1020

1020:                                             ; preds = %1015, %1020
  %1021 = phi i64 [ %1046, %1020 ], [ %1016, %1015 ]
  %1022 = phi i16* [ %1048, %1020 ], [ %1017, %1015 ]
  %1023 = phi i16* [ %1047, %1020 ], [ %1018, %1015 ]
  %1024 = load i16, i16* %1022, align 2
  store i16 %1024, i16* %1023, align 2
  %1025 = getelementptr inbounds i16, i16* %1023, i64 1
  %1026 = getelementptr inbounds i16, i16* %1022, i64 1
  %1027 = load i16, i16* %1026, align 2
  store i16 %1027, i16* %1025, align 2
  %1028 = getelementptr inbounds i16, i16* %1023, i64 2
  %1029 = getelementptr inbounds i16, i16* %1022, i64 2
  %1030 = load i16, i16* %1029, align 2
  store i16 %1030, i16* %1028, align 2
  %1031 = getelementptr inbounds i16, i16* %1023, i64 3
  %1032 = getelementptr inbounds i16, i16* %1022, i64 3
  %1033 = load i16, i16* %1032, align 2
  store i16 %1033, i16* %1031, align 2
  %1034 = getelementptr inbounds i16, i16* %1023, i64 4
  %1035 = getelementptr inbounds i16, i16* %1022, i64 4
  %1036 = load i16, i16* %1035, align 2
  store i16 %1036, i16* %1034, align 2
  %1037 = getelementptr inbounds i16, i16* %1023, i64 5
  %1038 = getelementptr inbounds i16, i16* %1022, i64 5
  %1039 = load i16, i16* %1038, align 2
  store i16 %1039, i16* %1037, align 2
  %1040 = getelementptr inbounds i16, i16* %1023, i64 6
  %1041 = getelementptr inbounds i16, i16* %1022, i64 6
  %1042 = load i16, i16* %1041, align 2
  store i16 %1042, i16* %1040, align 2
  %1043 = getelementptr inbounds i16, i16* %1023, i64 7
  %1044 = getelementptr inbounds i16, i16* %1022, i64 7
  %1045 = load i16, i16* %1044, align 2
  store i16 %1045, i16* %1043, align 2
  %1046 = add i64 %1021, -8
  %1047 = getelementptr inbounds i16, i16* %1023, i64 8
  %1048 = getelementptr inbounds i16, i16* %1022, i64 8
  %1049 = icmp eq i64 %1046, 0
  br i1 %1049, label %1050, label %1020, !llvm.loop !35

1050:                                             ; preds = %1015, %1020, %995, %872
  %1051 = getelementptr inbounds i8, i8* %868, i64 24
  %1052 = ptrtoint i8* %1051 to i64
  store i64 %1052, i64* %245, align 8
  call void @_ZN6policy9PolicyMap10AddMessageERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS0_11MessageTypeEiONS1_6vectorINS2_IDsNS3_IDsEENS5_IDsEEEENS5_ISE_EEEE(%"class.policy::PolicyMap"* %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %25, i32 2, i32 20348, %"class.std::__1::vector.65"* nonnull dereferenceable(24) %26) #10
  %1053 = load %"class.std::__1::basic_string.67"*, %"class.std::__1::basic_string.67"** %246, align 8
  %1054 = icmp eq %"class.std::__1::basic_string.67"* %1053, null
  br i1 %1054, label %1075, label %1055

1055:                                             ; preds = %1050
  %1056 = bitcast %"class.std::__1::basic_string.67"* %1053 to i8*
  %1057 = load %"class.std::__1::basic_string.67"*, %"class.std::__1::basic_string.67"** %240, align 8
  %1058 = icmp eq %"class.std::__1::basic_string.67"* %1057, %1053
  br i1 %1058, label %1073, label %1059

1059:                                             ; preds = %1055, %1069
  %1060 = phi %"class.std::__1::basic_string.67"* [ %1061, %1069 ], [ %1057, %1055 ]
  %1061 = getelementptr inbounds %"class.std::__1::basic_string.67", %"class.std::__1::basic_string.67"* %1060, i64 -1
  %1062 = bitcast %"class.std::__1::basic_string.67"* %1061 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %1063 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %1062, i64 0, i32 1, i32 1
  %1064 = load i8, i8* %1063, align 1
  %1065 = icmp slt i8 %1064, 0
  br i1 %1065, label %1066, label %1069

1066:                                             ; preds = %1059
  %1067 = bitcast %"class.std::__1::basic_string.67"* %1061 to i8**
  %1068 = load i8*, i8** %1067, align 8
  call void @_ZdlPv(i8* %1068) #12
  br label %1069

1069:                                             ; preds = %1066, %1059
  %1070 = icmp eq %"class.std::__1::basic_string.67"* %1061, %1053
  br i1 %1070, label %1071, label %1059

1071:                                             ; preds = %1069
  %1072 = load i8*, i8** %242, align 8
  br label %1073

1073:                                             ; preds = %1071, %1055
  %1074 = phi i8* [ %1072, %1071 ], [ %1056, %1055 ]
  store %"class.std::__1::basic_string.67"* %1053, %"class.std::__1::basic_string.67"** %240, align 8
  call void @_ZdlPv(i8* %1074) #12
  br label %1075

1075:                                             ; preds = %1050, %1073
  %1076 = load i8, i8* %254, align 1
  %1077 = icmp slt i8 %1076, 0
  br i1 %1077, label %1078, label %1080

1078:                                             ; preds = %1075
  %1079 = load i8*, i8** %255, align 8
  call void @_ZdlPv(i8* %1079) #12
  br label %1080

1080:                                             ; preds = %1075, %1078
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %238) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %237) #10
  %1081 = load i8, i8* %236, align 1
  %1082 = icmp slt i8 %1081, 0
  br i1 %1082, label %1083, label %1085

1083:                                             ; preds = %1080
  %1084 = load i8*, i8** %232, align 8
  call void @_ZdlPv(i8* %1084) #12
  br label %1085

1085:                                             ; preds = %1080, %1083
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %231) #10
  br label %1086

1086:                                             ; preds = %838, %1085
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %22) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %209) #10
  %1087 = load i8, i8* %212, align 1
  %1088 = icmp slt i8 %1087, 0
  br i1 %1088, label %1089, label %1091

1089:                                             ; preds = %1086
  %1090 = load i8*, i8** %207, align 8
  call void @_ZdlPv(i8* %1090) #12
  br label %1091

1091:                                             ; preds = %1086, %1089
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %206) #10
  br label %1092

1092:                                             ; preds = %654, %710, %700, %1091, %656, %677
  %1093 = getelementptr inbounds i8*, i8** %649, i64 7
  %1094 = load i8*, i8** %1093, align 8
  %1095 = icmp eq i8* %1094, null
  br i1 %1095, label %634, label %648

1096:                                             ; preds = %1232, %634
  ret void

1097:                                             ; preds = %637, %1232
  %1098 = phi i8** [ getelementptr inbounds ([0 x %"struct.policy::StringListPolicyAccess"], [0 x %"struct.policy::StringListPolicyAccess"]* @_ZN6policy23kStringListPolicyAccessE, i64 0, i64 0, i32 0), %637 ], [ %1233, %1232 ]
  %1099 = getelementptr inbounds i8*, i8** %1098, i64 1
  %1100 = bitcast i8** %1099 to i8*
  %1101 = load i8, i8* %1100, align 8, !range !2
  %1102 = icmp ne i8 %1101, 0
  switch i32 %5, label %1104 [
    i32 0, label %1105
    i32 1, label %1103
    i32 2, label %1106
  ]

1103:                                             ; preds = %1097
  br i1 %1102, label %1232, label %1106

1104:                                             ; preds = %1097
  unreachable

1105:                                             ; preds = %1097
  br i1 %1102, label %1106, label %1232

1106:                                             ; preds = %1103, %1097, %1105
  %1107 = getelementptr inbounds i8*, i8** %1098, i64 2
  %1108 = bitcast i8** %1107 to i64*
  %1109 = load i64, i64* %1108, align 8
  %1110 = getelementptr inbounds i8*, i8** %1098, i64 3
  %1111 = bitcast i8** %1110 to i64*
  %1112 = load i64, i64* %1111, align 8
  %1113 = getelementptr inbounds i8, i8* %638, i64 %1112
  %1114 = bitcast i8* %1113 to %"class.enterprise_management::CloudPolicySettings"*
  %1115 = and i64 %1109, 1
  %1116 = icmp eq i64 %1115, 0
  br i1 %1116, label %1124, label %1117

1117:                                             ; preds = %1106
  %1118 = bitcast i8* %1113 to i8**
  %1119 = load i8*, i8** %1118, align 8
  %1120 = add i64 %1109, -1
  %1121 = getelementptr i8, i8* %1119, i64 %1120
  %1122 = bitcast i8* %1121 to i1 (%"class.enterprise_management::CloudPolicySettings"*)**
  %1123 = load i1 (%"class.enterprise_management::CloudPolicySettings"*)*, i1 (%"class.enterprise_management::CloudPolicySettings"*)** %1122, align 8
  br label %1126

1124:                                             ; preds = %1106
  %1125 = inttoptr i64 %1109 to i1 (%"class.enterprise_management::CloudPolicySettings"*)*
  br label %1126

1126:                                             ; preds = %1124, %1117
  %1127 = phi i1 (%"class.enterprise_management::CloudPolicySettings"*)* [ %1123, %1117 ], [ %1125, %1124 ]
  %1128 = call zeroext i1 %1127(%"class.enterprise_management::CloudPolicySettings"* %1114) #10
  br i1 %1128, label %1129, label %1232

1129:                                             ; preds = %1126
  %1130 = getelementptr inbounds i8*, i8** %1098, i64 4
  %1131 = bitcast i8** %1130 to i64*
  %1132 = load i64, i64* %1131, align 8
  %1133 = getelementptr inbounds i8*, i8** %1098, i64 5
  %1134 = bitcast i8** %1133 to i64*
  %1135 = load i64, i64* %1134, align 8
  %1136 = getelementptr inbounds i8, i8* %638, i64 %1135
  %1137 = bitcast i8* %1136 to %"class.enterprise_management::CloudPolicySettings"*
  %1138 = and i64 %1132, 1
  %1139 = icmp eq i64 %1138, 0
  br i1 %1139, label %1147, label %1140

1140:                                             ; preds = %1129
  %1141 = bitcast i8* %1136 to i8**
  %1142 = load i8*, i8** %1141, align 8
  %1143 = add i64 %1132, -1
  %1144 = getelementptr i8, i8* %1142, i64 %1143
  %1145 = bitcast i8* %1144 to %"class.enterprise_management::StringListPolicyProto"* (%"class.enterprise_management::CloudPolicySettings"*)**
  %1146 = load %"class.enterprise_management::StringListPolicyProto"* (%"class.enterprise_management::CloudPolicySettings"*)*, %"class.enterprise_management::StringListPolicyProto"* (%"class.enterprise_management::CloudPolicySettings"*)** %1145, align 8
  br label %1149

1147:                                             ; preds = %1129
  %1148 = inttoptr i64 %1132 to %"class.enterprise_management::StringListPolicyProto"* (%"class.enterprise_management::CloudPolicySettings"*)*
  br label %1149

1149:                                             ; preds = %1147, %1140
  %1150 = phi %"class.enterprise_management::StringListPolicyProto"* (%"class.enterprise_management::CloudPolicySettings"*)* [ %1146, %1140 ], [ %1148, %1147 ]
  %1151 = call dereferenceable(40) %"class.enterprise_management::StringListPolicyProto"* %1150(%"class.enterprise_management::CloudPolicySettings"* %1137) #10
  %1152 = getelementptr inbounds %"class.enterprise_management::StringListPolicyProto", %"class.enterprise_management::StringListPolicyProto"* %1151, i64 0, i32 1, i32 0, i64 0
  %1153 = load i32, i32* %1152, align 4
  %1154 = and i32 %1153, 2
  %1155 = icmp eq i32 %1154, 0
  br i1 %1155, label %1232, label %1156

1156:                                             ; preds = %1149
  %1157 = getelementptr inbounds %"class.enterprise_management::StringListPolicyProto", %"class.enterprise_management::StringListPolicyProto"* %1151, i64 0, i32 4
  %1158 = load %"class.enterprise_management::StringList"*, %"class.enterprise_management::StringList"** %1157, align 8
  %1159 = icmp ne %"class.enterprise_management::StringList"* %1158, null
  call void @llvm.assume(i1 %1159) #10
  %1160 = and i32 %1153, 1
  %1161 = icmp eq i32 %1160, 0
  br i1 %1161, label %1169, label %1162

1162:                                             ; preds = %1156
  %1163 = getelementptr inbounds %"class.enterprise_management::StringListPolicyProto", %"class.enterprise_management::StringListPolicyProto"* %1151, i64 0, i32 3
  %1164 = load %"class.enterprise_management::PolicyOptions"*, %"class.enterprise_management::PolicyOptions"** %1163, align 8, !nonnull !3
  %1165 = getelementptr inbounds %"class.enterprise_management::PolicyOptions", %"class.enterprise_management::PolicyOptions"* %1164, i64 0, i32 3
  %1166 = load i32, i32* %1165, align 8
  switch i32 %1166, label %1168 [
    i32 0, label %1169
    i32 1, label %1167
    i32 2, label %1232
  ]

1167:                                             ; preds = %1162
  br label %1169

1168:                                             ; preds = %1162
  unreachable

1169:                                             ; preds = %1162, %1167, %1156
  %1170 = phi i32 [ 1, %1156 ], [ 0, %1167 ], [ 1, %1162 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %639) #10
  %1171 = load i8*, i8** %1098, align 8
  %1172 = call i64 @strlen(i8* %1171) #10
  %1173 = icmp ugt i64 %1172, -17
  br i1 %1173, label %1174, label %1176

1174:                                             ; preds = %1169
  %1175 = bitcast %"class.std::__1::basic_string"* %28 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %1175) #11
  unreachable

1176:                                             ; preds = %1169
  %1177 = icmp ult i64 %1172, 23
  br i1 %1177, label %1183, label %1178

1178:                                             ; preds = %1176
  %1179 = add nuw i64 %1172, 16
  %1180 = and i64 %1179, -16
  %1181 = call i8* @_Znwm(i64 %1180) #12
  store i8* %1181, i8** %640, align 8
  %1182 = or i64 %1180, -9223372036854775808
  store i64 %1182, i64* %641, align 8
  store i64 %1172, i64* %642, align 8
  br label %1186

1183:                                             ; preds = %1176
  %1184 = trunc i64 %1172 to i8
  store i8 %1184, i8* %644, align 1
  %1185 = icmp eq i64 %1172, 0
  br i1 %1185, label %1188, label %1186

1186:                                             ; preds = %1183, %1178
  %1187 = phi i8* [ %1181, %1178 ], [ %639, %1183 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1187, i8* align 1 %1171, i64 %1172, i1 false) #10
  br label %1188

1188:                                             ; preds = %1183, %1186
  %1189 = phi i8* [ %639, %1183 ], [ %1187, %1186 ]
  %1190 = getelementptr inbounds i8, i8* %1189, i64 %1172
  store i8 0, i8* %1190, align 1
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %645) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %645, i8 -86, i64 32, i1 false) #10, !alias.scope !36
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %30, i8 zeroext 7) #10
  %1191 = load %"class.enterprise_management::StringList"*, %"class.enterprise_management::StringList"** %1157, align 8, !noalias !36
  %1192 = icmp eq %"class.enterprise_management::StringList"* %1191, null
  %1193 = select i1 %1192, %"class.enterprise_management::StringList"* bitcast (%"class.enterprise_management::StringListDefaultTypeInternal"* @_ZN21enterprise_management29_StringList_default_instance_E to %"class.enterprise_management::StringList"*), %"class.enterprise_management::StringList"* %1191
  %1194 = getelementptr inbounds %"class.enterprise_management::StringList", %"class.enterprise_management::StringList"* %1193, i64 0, i32 1, i32 0, i32 3
  %1195 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %1194, align 8
  %1196 = icmp eq %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %1195, null
  %1197 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %1195, i64 0, i32 1, i64 0
  %1198 = select i1 %1196, i8** null, i8** %1197
  %1199 = getelementptr inbounds %"class.enterprise_management::StringList", %"class.enterprise_management::StringList"* %1193, i64 0, i32 1, i32 0, i32 1
  %1200 = load i32, i32* %1199, align 8
  %1201 = sext i32 %1200 to i64
  %1202 = getelementptr inbounds i8*, i8** %1198, i64 %1201
  %1203 = icmp eq i32 %1200, 0
  br i1 %1203, label %1222, label %1204

1204:                                             ; preds = %1188, %1204
  %1205 = phi i8** [ %1220, %1204 ], [ %1198, %1188 ]
  %1206 = bitcast i8** %1205 to %"class.std::__1::basic_string"**
  %1207 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %1206, align 8
  %1208 = bitcast %"class.std::__1::basic_string"* %1207 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1209 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1208, i64 0, i32 1, i32 0
  %1210 = load i8, i8* %1209, align 1
  %1211 = icmp slt i8 %1210, 0
  %1212 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1207, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1213 = load i8*, i8** %1212, align 8
  %1214 = bitcast %"class.std::__1::basic_string"* %1207 to i8*
  %1215 = select i1 %1211, i8* %1213, i8* %1214
  %1216 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1207, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1217 = load i64, i64* %1216, align 8
  %1218 = zext i8 %1210 to i64
  %1219 = select i1 %1211, i64 %1217, i64 %1218
  call void @_ZN4base5Value6AppendENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* nonnull %30, i8* %1215, i64 %1219) #10
  %1220 = getelementptr inbounds i8*, i8** %1205, i64 1
  %1221 = icmp eq i8** %1220, %1202
  br i1 %1221, label %1222, label %1204

1222:                                             ; preds = %1204, %1188
  store i8 1, i8* %646, align 8
  call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* %647, %"class.base::Value"* nonnull dereferenceable(32) %30) #10
  call void @_ZN6policy9PolicyMap3SetERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_11PolicyLevelENS_11PolicyScopeENS_12PolicySourceEN4absl8optionalIN4base5ValueEEENS1_10unique_ptrINS_19ExternalDataFetcherENS1_14default_deleteISJ_EEEE(%"class.policy::PolicyMap"* %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %28, i32 %1170, i32 %3, i32 %2, %"class.absl::optional"* nonnull %29, i64 0) #10
  %1223 = load i8, i8* %646, align 8, !range !2
  %1224 = icmp eq i8 %1223, 0
  br i1 %1224, label %1226, label %1225

1225:                                             ; preds = %1222
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %647) #10
  store i8 0, i8* %646, align 8
  br label %1226

1226:                                             ; preds = %1222, %1225
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %30) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %645) #10
  %1227 = load i8, i8* %644, align 1
  %1228 = icmp slt i8 %1227, 0
  br i1 %1228, label %1229, label %1231

1229:                                             ; preds = %1226
  %1230 = load i8*, i8** %640, align 8
  call void @_ZdlPv(i8* %1230) #12
  br label %1231

1231:                                             ; preds = %1226, %1229
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %639) #10
  br label %1232

1232:                                             ; preds = %1103, %1162, %1149, %1231, %1105, %1126
  %1233 = getelementptr inbounds i8*, i8** %1098, i64 6
  %1234 = load i8*, i8** %1233, align 8
  %1235 = icmp eq i8* %1234, null
  br i1 %1235, label %1096, label %1097
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN6policy9PolicyMap3SetERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_11PolicyLevelENS_11PolicyScopeENS_12PolicySourceEN4absl8optionalIN4base5ValueEEENS1_10unique_ptrINS_19ExternalDataFetcherENS1_14default_deleteISJ_EEEE(%"class.policy::PolicyMap"*, %"class.std::__1::basic_string"* dereferenceable(24), i32, i32, i32, %"class.absl::optional"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN6policy9PolicyMap10AddMessageERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS0_11MessageTypeEiONS1_6vectorINS2_IDsNS3_IDsEENS5_IDsEEEENS5_ISE_EEEE(%"class.policy::PolicyMap"*, %"class.std::__1::basic_string"* dereferenceable(24), i32, i32, %"class.std::__1::vector.65"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.67"* sret, i8*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.policy::ExternalDataFetcher"* @_ZNSt3__111make_uniqueIN6policy19ExternalDataFetcherEJRN4base7WeakPtrINS1_24CloudExternalDataManagerEEERKPKcEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.base::WeakPtr"* dereferenceable(16), i8** dereferenceable(8)) local_unnamed_addr #4 comdat {
  %3 = alloca %"class.base::WeakPtr.32", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = tail call i8* @_Znwm(i64 40) #12
  %6 = bitcast i8* %5 to %"class.policy::ExternalDataFetcher"*
  %7 = getelementptr inbounds %"class.base::WeakPtr.32", %"class.base::WeakPtr.32"* %3, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %0, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* nonnull %7, %"class.base::internal::WeakReference"* dereferenceable(8) %8) #10
  %9 = getelementptr inbounds %"class.base::WeakPtr.32", %"class.base::WeakPtr.32"* %3, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %0, i64 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %9, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #10
  %13 = load i8*, i8** %1, align 8
  %14 = call i64 @strlen(i8* %13) #10
  %15 = icmp ugt i64 %14, -17
  br i1 %15, label %16, label %18

16:                                               ; preds = %2
  %17 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %17) #11
  unreachable

18:                                               ; preds = %2
  %19 = icmp ult i64 %14, 23
  br i1 %19, label %29, label %20

20:                                               ; preds = %18
  %21 = add nuw i64 %14, 16
  %22 = and i64 %21, -16
  %23 = call i8* @_Znwm(i64 %22) #12
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %23, i8** %24, align 8
  %25 = or i64 %22, -9223372036854775808
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %14, i64* %27, align 8
  %28 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %34

29:                                               ; preds = %18
  %30 = trunc i64 %14 to i8
  %31 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  store i8 %30, i8* %32, align 1
  %33 = icmp eq i64 %14, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %29, %20
  %35 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %31, %29 ], [ %28, %20 ]
  %36 = phi i8* [ %12, %29 ], [ %23, %20 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %36, i8* align 1 %13, i64 %14, i1 false) #10
  br label %37

37:                                               ; preds = %29, %34
  %38 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %31, %29 ], [ %35, %34 ]
  %39 = phi i8* [ %12, %29 ], [ %36, %34 ]
  %40 = getelementptr inbounds i8, i8* %39, i64 %14
  store i8 0, i8* %40, align 1
  call void @_ZN6policy19ExternalDataFetcherC1EN4base7WeakPtrINS_19ExternalDataManagerEEERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.policy::ExternalDataFetcher"* nonnull %6, %"class.base::WeakPtr.32"* nonnull %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #10
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  call void @_ZdlPv(i8* %46) #12
  br label %47

47:                                               ; preds = %37, %44
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #10
  %48 = getelementptr inbounds %"class.base::WeakPtr.32", %"class.base::WeakPtr.32"* %3, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %48) #10
  ret %"class.policy::ExternalDataFetcher"* %6
}

declare void @_ZN4base5ValueC1Eb(%"class.base::Value"*, i1 zeroext) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base5ValueC1EOS0_(%"class.base::Value"*, %"class.base::Value"* dereferenceable(32)) unnamed_addr #3

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #2

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #3

declare void @_ZN4base14NumberToStringEl(%"class.std::__1::basic_string"* sret, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base5ValueC1EONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Value"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #3

declare void @_ZN4base5ValueC1Ei(%"class.base::Value"*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #10
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #10
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #10
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret %"class.std::__1::basic_ostream"* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #10
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #12
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #10
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #10
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #10
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare void @_ZN4base5ValueC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"*, i8*, i64) unnamed_addr #2

declare void @_ZN4base10JSONReader27ReadAndReturnValueWithErrorENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"struct.base::JSONReader::ValueWithError"* sret, i8*, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base10JSONReader14ValueWithErrorD1Ev(%"struct.base::JSONReader::ValueWithError"*) unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #5

declare void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"*, i8 zeroext) unnamed_addr #2

declare void @_ZN4base5Value6AppendENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind
declare void @llvm.assume(i1) #10

declare void @_ZN6policy19ExternalDataFetcherC1EN4base7WeakPtrINS_19ExternalDataManagerEEERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.policy::ExternalDataFetcher"*, %"class.base::WeakPtr.32"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #3

declare void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN6policy12_GLOBAL__N_118DecodeBooleanProtoERKN21enterprise_management18BooleanPolicyProtoE: argument 0"}
!6 = distinct !{!6, !"_ZN6policy12_GLOBAL__N_118DecodeBooleanProtoERKN21enterprise_management18BooleanPolicyProtoE"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN6policy12_GLOBAL__N_118DecodeIntegerProtoERKN21enterprise_management18IntegerPolicyProtoEPNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE: argument 0"}
!9 = distinct !{!9, !"_ZN6policy12_GLOBAL__N_118DecodeIntegerProtoERKN21enterprise_management18IntegerPolicyProtoEPNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE"}
!10 = !{!11}
!11 = distinct !{!11, !12}
!12 = distinct !{!12, !"LVerDomain"}
!13 = !{!14}
!14 = distinct !{!14, !12}
!15 = distinct !{!15, !16}
!16 = !{!"llvm.loop.isvectorized", i32 1}
!17 = distinct !{!17, !18}
!18 = !{!"llvm.loop.unroll.disable"}
!19 = distinct !{!19, !18}
!20 = distinct !{!20, !16}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN6policy12_GLOBAL__N_117DecodeStringProtoERKN21enterprise_management17StringPolicyProtoE: argument 0"}
!23 = distinct !{!23, !"_ZN6policy12_GLOBAL__N_117DecodeStringProtoERKN21enterprise_management17StringPolicyProtoE"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN6policy12_GLOBAL__N_115DecodeJsonProtoERKN21enterprise_management17StringPolicyProtoEPNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE: argument 0"}
!26 = distinct !{!26, !"_ZN6policy12_GLOBAL__N_115DecodeJsonProtoERKN21enterprise_management17StringPolicyProtoEPNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE"}
!27 = !{!28}
!28 = distinct !{!28, !29}
!29 = distinct !{!29, !"LVerDomain"}
!30 = !{!31}
!31 = distinct !{!31, !29}
!32 = distinct !{!32, !16}
!33 = distinct !{!33, !18}
!34 = distinct !{!34, !18}
!35 = distinct !{!35, !16}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZN6policy12_GLOBAL__N_121DecodeStringListProtoERKN21enterprise_management21StringListPolicyProtoE: argument 0"}
!38 = distinct !{!38, !"_ZN6policy12_GLOBAL__N_121DecodeStringListProtoERKN21enterprise_management21StringListPolicyProtoE"}
