; ModuleID = '../../third_party/webrtc/net/dcsctp/packet/error_cause/protocol_violation_cause.cc'
source_filename = "../../third_party/webrtc/net/dcsctp/packet/error_cause/protocol_violation_cause.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.dcsctp::ProtocolViolationCause" }
%"class.dcsctp::ProtocolViolationCause" = type { %"class.dcsctp::Parameter", %"class.std::__1::basic_string" }
%"class.dcsctp::Parameter" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.0 }
%union.anon.0 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { i8* }
%"class.rtc::StringBuilder" = type { %"class.std::__1::basic_string" }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN6dcsctp22ProtocolViolationCauseD2Ev = comdat any

$_ZN6dcsctp22ProtocolViolationCauseD0Ev = comdat any

$_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm = comdat any

@_ZN6dcsctp22ProtocolViolationCause5kTypeE = hidden local_unnamed_addr constant i32 13, align 4
@.str = private unnamed_addr constant [44 x i8] c"Protocol Violation, additional_information=\00", align 1
@_ZTVN6dcsctp22ProtocolViolationCauseE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.dcsctp::ProtocolViolationCause"*)* @_ZN6dcsctp22ProtocolViolationCauseD2Ev to i8*), i8* bitcast (void (%"class.dcsctp::ProtocolViolationCause"*)* @_ZN6dcsctp22ProtocolViolationCauseD0Ev to i8*), i8* bitcast (void (%"class.dcsctp::ProtocolViolationCause"*, %"class.std::__1::vector"*)* @_ZNK6dcsctp22ProtocolViolationCause11SerializeToERNSt3__16vectorIhNS1_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.dcsctp::ProtocolViolationCause"*)* @_ZNK6dcsctp22ProtocolViolationCause8ToStringEv to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6dcsctp22ProtocolViolationCause5ParseEN3rtc9ArrayViewIKhLln4711EEE(%"class.absl::optional"* noalias nocapture sret, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.dcsctp::ProtocolViolationCause", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = icmp eq i64 %2, 0
  %7 = select i1 %6, i8* null, i8* %1
  %8 = icmp ult i64 %2, 4
  br i1 %8, label %9, label %10

9:                                                ; preds = %3
  tail call void @_ZN6dcsctp14tlv_trait_impl17ReportInvalidSizeEmm(i64 %2, i64 4) #8, !noalias !2
  br label %39

10:                                               ; preds = %3
  %11 = load i8, i8* %7, align 1, !noalias !2
  %12 = zext i8 %11 to i16
  %13 = shl nuw i16 %12, 8
  %14 = getelementptr inbounds i8, i8* %7, i64 1
  %15 = load i8, i8* %14, align 1, !noalias !2
  %16 = zext i8 %15 to i16
  %17 = or i16 %13, %16
  %18 = icmp eq i16 %17, 13
  br i1 %18, label %21, label %19

19:                                               ; preds = %10
  %20 = zext i16 %17 to i32
  tail call void @_ZN6dcsctp14tlv_trait_impl17ReportInvalidTypeEii(i32 %20, i32 13) #8, !noalias !2
  br label %39

21:                                               ; preds = %10
  %22 = getelementptr inbounds i8, i8* %7, i64 2
  %23 = load i8, i8* %22, align 1, !noalias !2
  %24 = zext i8 %23 to i16
  %25 = shl nuw i16 %24, 8
  %26 = getelementptr inbounds i8, i8* %7, i64 3
  %27 = load i8, i8* %26, align 1, !noalias !2
  %28 = zext i8 %27 to i16
  %29 = or i16 %25, %28
  %30 = zext i16 %29 to i64
  %31 = icmp ugt i64 %30, %2
  %32 = icmp ult i16 %29, 4
  %33 = or i1 %32, %31
  br i1 %33, label %34, label %35

34:                                               ; preds = %21
  tail call void @_ZN6dcsctp14tlv_trait_impl32ReportInvalidVariableLengthFieldEmm(i64 %30, i64 %2) #8, !noalias !2
  br label %39

35:                                               ; preds = %21
  %36 = sub i64 %2, %30
  %37 = icmp ugt i64 %36, 3
  br i1 %37, label %38, label %43

38:                                               ; preds = %35
  tail call void @_ZN6dcsctp14tlv_trait_impl20ReportInvalidPaddingEm(i64 %36) #8, !noalias !2
  br label %39

39:                                               ; preds = %9, %34, %38, %19
  %40 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %40, align 8
  %41 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %42 = bitcast %union.anon* %41 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 32, i1 false) #8
  br label %143

43:                                               ; preds = %35
  %44 = bitcast %"class.dcsctp::ProtocolViolationCause"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %44) #8
  %45 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #8
  %46 = add nsw i64 %30, -4
  %47 = icmp ugt i16 %29, 4
  br i1 %47, label %51, label %48

48:                                               ; preds = %43
  %49 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  store i8 0, i8* %50, align 1
  br label %76

51:                                               ; preds = %43
  %52 = getelementptr inbounds i8, i8* %7, i64 4
  %53 = icmp eq i64 %46, 0
  %54 = select i1 %53, i8* null, i8* %52
  %55 = icmp ugt i64 %46, -17
  br i1 %55, label %56, label %58

56:                                               ; preds = %51
  %57 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %57) #9
  unreachable

58:                                               ; preds = %51
  %59 = icmp ult i64 %46, 23
  br i1 %59, label %69, label %60

60:                                               ; preds = %58
  %61 = add nuw nsw i64 %30, 12
  %62 = and i64 %61, 131056
  %63 = tail call i8* @_Znwm(i64 %62) #10
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %63, i8** %64, align 8
  %65 = or i64 %62, -9223372036854775808
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %46, i64* %67, align 8
  %68 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %73

69:                                               ; preds = %58
  %70 = trunc i64 %46 to i8
  %71 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  store i8 %70, i8* %72, align 1
  br i1 %53, label %76, label %73

73:                                               ; preds = %69, %60
  %74 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %71, %69 ], [ %68, %60 ]
  %75 = phi i8* [ %45, %69 ], [ %63, %60 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %75, i8* align 1 %54, i64 %46, i1 false) #8
  br label %76

76:                                               ; preds = %48, %69, %73
  %77 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %49, %48 ], [ %71, %69 ], [ %74, %73 ]
  %78 = phi i64 [ 0, %48 ], [ 0, %69 ], [ %46, %73 ]
  %79 = phi i8* [ %45, %48 ], [ %45, %69 ], [ %75, %73 ]
  %80 = getelementptr inbounds i8, i8* %79, i64 %78
  store i8 0, i8* %80, align 1
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %89, label %84

84:                                               ; preds = %76
  %85 = zext i8 %82 to i64
  %86 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %87 = getelementptr inbounds %"class.dcsctp::ProtocolViolationCause", %"class.dcsctp::ProtocolViolationCause"* %4, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6dcsctp22ProtocolViolationCauseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %87, align 8
  %88 = getelementptr inbounds %"class.dcsctp::ProtocolViolationCause", %"class.dcsctp::ProtocolViolationCause"* %4, i64 0, i32 1
  br label %103

89:                                               ; preds = %76
  %90 = bitcast %"class.std::__1::basic_string"* %5 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %93 = load i64, i64* %92, align 8
  %94 = icmp sgt i64 %93, -1
  br i1 %94, label %96, label %95, !prof !5

95:                                               ; preds = %89
  tail call void @llvm.trap() #8
  unreachable

96:                                               ; preds = %89
  %97 = inttoptr i64 %91 to i8*
  %98 = getelementptr inbounds %"class.dcsctp::ProtocolViolationCause", %"class.dcsctp::ProtocolViolationCause"* %4, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6dcsctp22ProtocolViolationCauseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %98, align 8
  %99 = getelementptr inbounds %"class.dcsctp::ProtocolViolationCause", %"class.dcsctp::ProtocolViolationCause"* %4, i64 0, i32 1
  %100 = icmp eq i64 %91, 0
  br i1 %100, label %101, label %103

101:                                              ; preds = %96
  %102 = bitcast %"class.std::__1::basic_string"* %99 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 24, i1 false) #8, !alias.scope !6
  br label %132

103:                                              ; preds = %84, %96
  %104 = phi %"class.std::__1::basic_string"* [ %88, %84 ], [ %99, %96 ]
  %105 = phi i32 (...)*** [ %87, %84 ], [ %98, %96 ]
  %106 = phi i8* [ %86, %84 ], [ %97, %96 ]
  %107 = phi i64 [ %85, %84 ], [ %93, %96 ]
  %108 = icmp ult i64 %107, 23
  br i1 %108, label %118, label %109

109:                                              ; preds = %103
  %110 = add nuw i64 %107, 16
  %111 = and i64 %110, -16
  %112 = call i8* @_Znwm(i64 %111) #10
  %113 = getelementptr inbounds %"class.dcsctp::ProtocolViolationCause", %"class.dcsctp::ProtocolViolationCause"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %112, i8** %113, align 8, !alias.scope !6
  %114 = or i64 %111, -9223372036854775808
  %115 = getelementptr inbounds %"class.dcsctp::ProtocolViolationCause", %"class.dcsctp::ProtocolViolationCause"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %114, i64* %115, align 8, !alias.scope !6
  %116 = getelementptr inbounds %"class.dcsctp::ProtocolViolationCause", %"class.dcsctp::ProtocolViolationCause"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %107, i64* %116, align 8, !alias.scope !6
  %117 = bitcast %"class.std::__1::basic_string"* %104 to i8*
  br label %124

118:                                              ; preds = %103
  %119 = trunc i64 %107 to i8
  %120 = bitcast %"class.std::__1::basic_string"* %104 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  store i8 %119, i8* %121, align 1, !alias.scope !6
  %122 = bitcast %"class.std::__1::basic_string"* %104 to i8*
  %123 = icmp eq i64 %107, 0
  br i1 %123, label %127, label %124

124:                                              ; preds = %118, %109
  %125 = phi i8* [ %122, %118 ], [ %117, %109 ]
  %126 = phi i8* [ %122, %118 ], [ %112, %109 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %126, i8* nonnull align 1 %106, i64 %107, i1 false) #8
  br label %127

127:                                              ; preds = %124, %118
  %128 = phi i64 [ %107, %124 ], [ 0, %118 ]
  %129 = phi i8* [ %125, %124 ], [ %122, %118 ]
  %130 = phi i8* [ %126, %124 ], [ %122, %118 ]
  %131 = getelementptr inbounds i8, i8* %130, i64 %128
  store i8 0, i8* %131, align 1
  br label %132

132:                                              ; preds = %127, %101
  %133 = phi i32 (...)*** [ %98, %101 ], [ %105, %127 ]
  %134 = phi i8* [ %102, %101 ], [ %129, %127 ]
  %135 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %135, align 8
  %136 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6dcsctp22ProtocolViolationCauseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %136, align 8
  %137 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %138 = bitcast %"class.std::__1::basic_string"* %137 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %138, i8* align 8 %134, i64 24, i1 false) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %134, i8 0, i64 24, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6dcsctp22ProtocolViolationCauseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %133, align 8
  br i1 %83, label %139, label %142

139:                                              ; preds = %132
  %140 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = load i8*, i8** %140, align 8
  call void @_ZdlPv(i8* %141) #10
  br label %142

142:                                              ; preds = %132, %139
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %44) #8
  br label %143

143:                                              ; preds = %142, %39
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6dcsctp22ProtocolViolationCauseD2Ev(%"class.dcsctp::ProtocolViolationCause"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.dcsctp::ProtocolViolationCause", %"class.dcsctp::ProtocolViolationCause"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6dcsctp22ProtocolViolationCauseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.dcsctp::ProtocolViolationCause", %"class.dcsctp::ProtocolViolationCause"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #10
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6dcsctp22ProtocolViolationCause11SerializeToERNSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.dcsctp::ProtocolViolationCause"*, %"class.std::__1::vector"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.dcsctp::ProtocolViolationCause", %"class.dcsctp::ProtocolViolationCause"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.dcsctp::ProtocolViolationCause", %"class.dcsctp::ProtocolViolationCause"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  br label %13

11:                                               ; preds = %2
  %12 = zext i8 %6 to i64
  br label %13

13:                                               ; preds = %8, %11
  %14 = phi i64 [ %10, %8 ], [ %12, %11 ]
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %16 = bitcast i8** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.std::__1::vector"* %1 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %17, %19
  %21 = add i64 %14, 4
  %22 = add i64 %20, %21
  %23 = icmp ult i64 %20, %22
  %24 = inttoptr i64 %19 to i8*
  br i1 %23, label %25, label %28

25:                                               ; preds = %13
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %1, i64 %21) #8
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  br label %32

28:                                               ; preds = %13
  %29 = icmp ugt i64 %20, %22
  br i1 %29, label %30, label %32

30:                                               ; preds = %28
  %31 = getelementptr inbounds i8, i8* %24, i64 %22
  store i8* %31, i8** %15, align 8
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i8* [ %27, %25 ], [ %24, %28 ], [ %24, %30 ]
  %34 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %35 = getelementptr inbounds i8, i8* %33, i64 %20
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds i8, i8* %35, i64 1
  store i8 13, i8* %36, align 1
  %37 = trunc i64 %21 to i16
  %38 = getelementptr inbounds i8, i8* %35, i64 2
  %39 = lshr i16 %37, 8
  %40 = trunc i16 %39 to i8
  store i8 %40, i8* %38, align 1
  %41 = trunc i64 %21 to i8
  %42 = getelementptr inbounds i8, i8* %35, i64 3
  store i8 %41, i8* %42, align 1
  %43 = load i8*, i8** %34, align 8
  %44 = getelementptr inbounds i8, i8* %43, i64 %20
  %45 = icmp eq i64 %21, 0
  %46 = select i1 %45, i8* null, i8* %44
  %47 = load i8, i8* %5, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %54

49:                                               ; preds = %32
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds %"class.dcsctp::ProtocolViolationCause", %"class.dcsctp::ProtocolViolationCause"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  br label %57

54:                                               ; preds = %32
  %55 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %56 = zext i8 %47 to i64
  br label %57

57:                                               ; preds = %49, %54
  %58 = phi i8* [ %51, %49 ], [ %55, %54 ]
  %59 = phi i64 [ %53, %49 ], [ %56, %54 ]
  %60 = icmp eq i64 %59, 0
  %61 = select i1 %60, i8* null, i8* %58
  %62 = getelementptr inbounds i8, i8* %46, i64 4
  %63 = icmp ult i64 %14, %59
  %64 = select i1 %63, i64 %14, i64 %59
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %62, i8* align 1 %61, i64 %64, i1 false) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6dcsctp22ProtocolViolationCause8ToStringEv(%"class.std::__1::basic_string"* noalias nocapture sret, %"class.dcsctp::ProtocolViolationCause"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.rtc::StringBuilder", align 8
  %4 = bitcast %"class.rtc::StringBuilder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 24, i1 false) #8
  %5 = getelementptr inbounds %"class.rtc::StringBuilder", %"class.rtc::StringBuilder"* %3, i64 0, i32 0
  %6 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %5, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i64 43) #8
  %7 = getelementptr inbounds %"class.dcsctp::ProtocolViolationCause", %"class.dcsctp::ProtocolViolationCause"* %1, i64 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %2
  %13 = zext i8 %10 to i64
  %14 = ptrtoint %"class.std::__1::basic_string"* %7 to i64
  br label %22

15:                                               ; preds = %2
  %16 = bitcast %"class.std::__1::basic_string"* %7 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.dcsctp::ProtocolViolationCause", %"class.dcsctp::ProtocolViolationCause"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = icmp sgt i64 %19, -1
  br i1 %20, label %22, label %21, !prof !5

21:                                               ; preds = %15
  call void @llvm.trap() #8
  unreachable

22:                                               ; preds = %15, %12
  %23 = phi i64 [ %17, %15 ], [ %14, %12 ]
  %24 = phi i64 [ %19, %15 ], [ %13, %12 ]
  %25 = inttoptr i64 %23 to i8*
  %26 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %5, i8* %25, i64 %24) #8
  %27 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* nonnull align 8 %4, i64 24, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6dcsctp22ProtocolViolationCauseD0Ev(%"class.dcsctp::ProtocolViolationCause"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.dcsctp::ProtocolViolationCause", %"class.dcsctp::ProtocolViolationCause"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6dcsctp22ProtocolViolationCauseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.dcsctp::ProtocolViolationCause", %"class.dcsctp::ProtocolViolationCause"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #10
  br label %11

11:                                               ; preds = %1, %8
  %12 = bitcast %"class.dcsctp::ProtocolViolationCause"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN6dcsctp14tlv_trait_impl17ReportInvalidSizeEmm(i64, i64) local_unnamed_addr #4

declare void @_ZN6dcsctp14tlv_trait_impl17ReportInvalidTypeEii(i32, i32) local_unnamed_addr #4

declare void @_ZN6dcsctp14tlv_trait_impl32ReportInvalidVariableLengthFieldEmm(i64, i64) local_unnamed_addr #4

declare void @_ZN6dcsctp14tlv_trait_impl20ReportInvalidPaddingEm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = icmp ult i64 %9, %1
  br i1 %10, label %22, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %8 to i8*
  %13 = icmp eq i64 %1, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds i8, i8* %12, i64 %1
  %16 = sub i64 %1, %8
  %17 = getelementptr i8, i8* %12, i64 %16
  %18 = ptrtoint i8* %17 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %12, i8 0, i64 %18, i1 false) #8
  %19 = ptrtoint i8* %15 to i64
  br label %20

20:                                               ; preds = %11, %14
  %21 = phi i64 [ %19, %14 ], [ %8, %11 ]
  store i64 %21, i64* %7, align 8
  br label %68

22:                                               ; preds = %2
  %23 = bitcast %"class.std::__1::vector"* %0 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %8, %24
  %26 = add i64 %25, %1
  %27 = icmp slt i64 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #9
  unreachable

30:                                               ; preds = %22
  %31 = sub i64 %5, %24
  %32 = icmp ult i64 %31, 4611686018427387903
  br i1 %32, label %33, label %38

33:                                               ; preds = %30
  %34 = shl i64 %31, 1
  %35 = icmp ult i64 %34, %26
  %36 = select i1 %35, i64 %26, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %30, %33
  %39 = phi i64 [ %36, %33 ], [ 9223372036854775807, %30 ]
  %40 = tail call i8* @_Znwm(i64 %39) #10
  br label %41

41:                                               ; preds = %38, %33
  %42 = phi i64 [ %39, %38 ], [ 0, %33 ]
  %43 = phi i8* [ %40, %38 ], [ null, %33 ]
  %44 = getelementptr inbounds i8, i8* %43, i64 %25
  %45 = ptrtoint i8* %44 to i64
  %46 = getelementptr inbounds i8, i8* %43, i64 %42
  %47 = getelementptr inbounds i8, i8* %44, i64 %1
  %48 = sub i64 %1, %45
  %49 = getelementptr i8, i8* %44, i64 %48
  %50 = ptrtoint i8* %49 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %44, i8 0, i64 %50, i1 false) #8
  %51 = ptrtoint i8* %46 to i64
  %52 = ptrtoint i8* %47 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = load i64, i64* %7, align 8
  %56 = ptrtoint i8* %54 to i64
  %57 = sub i64 %55, %56
  %58 = sub i64 0, %57
  %59 = getelementptr inbounds i8, i8* %44, i64 %58
  %60 = ptrtoint i8* %59 to i64
  %61 = icmp sgt i64 %57, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %41
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* align 1 %54, i64 %57, i1 false) #8
  %63 = load i8*, i8** %53, align 8
  br label %64

64:                                               ; preds = %41, %62
  %65 = phi i8* [ %54, %41 ], [ %63, %62 ]
  store i64 %60, i64* %23, align 8
  store i64 %52, i64* %7, align 8
  store i64 %51, i64* %4, align 8
  %66 = icmp eq i8* %65, null
  br i1 %66, label %68, label %67

67:                                               ; preds = %64
  tail call void @_ZdlPv(i8* nonnull %65) #10
  br label %68

68:                                               ; preds = %67, %64, %20
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN6dcsctp8TLVTraitINS_28ProtocolViolationCauseConfigEE8ParseTLVEN3rtc9ArrayViewIKhLln4711EEE: argument 0"}
!4 = distinct !{!4, !"_ZN6dcsctp8TLVTraitINS_28ProtocolViolationCauseConfigEE8ParseTLVEN3rtc9ArrayViewIKhLln4711EEE"}
!5 = !{!"branch_weights", i32 2000, i32 1}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK4absl11string_viewcvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv: argument 0"}
!8 = distinct !{!8, !"_ZNK4absl11string_viewcvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv"}
