; ModuleID = '../../gpu/vulkan/init/vulkan_factory.cc'
source_filename = "../../gpu/vulkan/init/vulkan_factory.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gpu::VulkanImplementation" = type <{ i32 (...)**, i8, i8, [6 x i8] }>
%"class.ui::OzonePlatform" = type <{ i32 (...)**, i8, i8, i8, i8, [4 x i8] }>
%"class.ui::SurfaceFactoryOzone" = type { i32 (...)** }
%"class.gpu::VulkanImplementationX11" = type { %"class.gpu::VulkanImplementation.base", i8, [5 x i8], %"class.gpu::VulkanInstance" }
%"class.gpu::VulkanImplementation.base" = type <{ i32 (...)**, i8, i8 }>
%"class.gpu::VulkanInstance" = type <{ %"class.gpu::VulkanInfo", %struct.VkInstance_T*, i8, [7 x i8] }>
%"class.gpu::VulkanInfo" = type { i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.7", %"class.std::__1::vector.14", %"class.std::__1::vector.21" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %struct.VkExtensionProperties*, %struct.VkExtensionProperties*, %"class.std::__1::__compressed_pair.4" }
%struct.VkExtensionProperties = type { [256 x i8], i32 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %struct.VkExtensionProperties* }
%"class.std::__1::vector.7" = type { %"class.std::__1::__vector_base.8" }
%"class.std::__1::__vector_base.8" = type { i8**, i8**, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { i8** }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %struct.VkLayerProperties*, %struct.VkLayerProperties*, %"class.std::__1::__compressed_pair.16" }
%struct.VkLayerProperties = type { [256 x i8], i32, i32, [256 x i8] }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %struct.VkLayerProperties* }
%"class.std::__1::vector.21" = type { %"class.std::__1::__vector_base.22" }
%"class.std::__1::__vector_base.22" = type { %"class.gpu::VulkanPhysicalDeviceInfo"*, %"class.gpu::VulkanPhysicalDeviceInfo"*, %"class.std::__1::__compressed_pair.30" }
%"class.gpu::VulkanPhysicalDeviceInfo" = type { %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceDriverProperties, %"class.std::__1::vector", %struct.VkPhysicalDeviceFeatures, i8, i8, %"class.std::__1::vector.23" }
%struct.VkPhysicalDevice_T = type opaque
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceDriverProperties = type { i32, i8*, i32, [256 x i8], [256 x i8], %struct.VkConformanceVersion }
%struct.VkConformanceVersion = type { i8, i8, i8, i8 }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties*, %"class.std::__1::__compressed_pair.25" }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%struct.VkExtent3D = type { i32, i32, i32 }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %struct.VkQueueFamilyProperties* }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.gpu::VulkanPhysicalDeviceInfo"* }
%struct.VkInstance_T = type opaque

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gpu::VulkanImplementation"* @_ZN3gpu26CreateVulkanImplementationEbb(i1 zeroext, i1 zeroext) local_unnamed_addr #0 {
  %3 = tail call zeroext i1 @_ZN8features20IsUsingOzonePlatformEv() #3
  br i1 %3, label %4, label %17

4:                                                ; preds = %2
  %5 = tail call %"class.ui::OzonePlatform"* @_ZN2ui13OzonePlatform11GetInstanceEv() #3
  %6 = bitcast %"class.ui::OzonePlatform"* %5 to %"class.ui::SurfaceFactoryOzone"* (%"class.ui::OzonePlatform"*)***
  %7 = load %"class.ui::SurfaceFactoryOzone"* (%"class.ui::OzonePlatform"*)**, %"class.ui::SurfaceFactoryOzone"* (%"class.ui::OzonePlatform"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.ui::SurfaceFactoryOzone"* (%"class.ui::OzonePlatform"*)*, %"class.ui::SurfaceFactoryOzone"* (%"class.ui::OzonePlatform"*)** %7, i64 4
  %9 = load %"class.ui::SurfaceFactoryOzone"* (%"class.ui::OzonePlatform"*)*, %"class.ui::SurfaceFactoryOzone"* (%"class.ui::OzonePlatform"*)** %8, align 8
  %10 = tail call %"class.ui::SurfaceFactoryOzone"* %9(%"class.ui::OzonePlatform"* %5) #3
  %11 = bitcast %"class.ui::SurfaceFactoryOzone"* %10 to %"class.gpu::VulkanImplementation"* (%"class.ui::SurfaceFactoryOzone"*, i1, i1)***
  %12 = load %"class.gpu::VulkanImplementation"* (%"class.ui::SurfaceFactoryOzone"*, i1, i1)**, %"class.gpu::VulkanImplementation"* (%"class.ui::SurfaceFactoryOzone"*, i1, i1)*** %11, align 8
  %13 = getelementptr inbounds %"class.gpu::VulkanImplementation"* (%"class.ui::SurfaceFactoryOzone"*, i1, i1)*, %"class.gpu::VulkanImplementation"* (%"class.ui::SurfaceFactoryOzone"*, i1, i1)** %12, i64 2
  %14 = load %"class.gpu::VulkanImplementation"* (%"class.ui::SurfaceFactoryOzone"*, i1, i1)*, %"class.gpu::VulkanImplementation"* (%"class.ui::SurfaceFactoryOzone"*, i1, i1)** %13, align 8
  %15 = tail call %"class.gpu::VulkanImplementation"* %14(%"class.ui::SurfaceFactoryOzone"* %10, i1 zeroext %0, i1 zeroext %1) #3
  %16 = ptrtoint %"class.gpu::VulkanImplementation"* %15 to i64
  br label %21

17:                                               ; preds = %2
  %18 = tail call i8* @_Znwm(i64 136) #4
  %19 = bitcast i8* %18 to %"class.gpu::VulkanImplementationX11"*
  tail call void @_ZN3gpu23VulkanImplementationX11C1Eb(%"class.gpu::VulkanImplementationX11"* nonnull %19, i1 zeroext %0) #3
  %20 = ptrtoint i8* %18 to i64
  br label %21

21:                                               ; preds = %17, %4
  %22 = phi i64 [ %16, %4 ], [ %20, %17 ]
  %23 = inttoptr i64 %22 to %"class.gpu::VulkanImplementation"*
  ret %"class.gpu::VulkanImplementation"* %23
}

declare zeroext i1 @_ZN8features20IsUsingOzonePlatformEv() local_unnamed_addr #1

declare %"class.ui::OzonePlatform"* @_ZN2ui13OzonePlatform11GetInstanceEv() local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

declare void @_ZN3gpu23VulkanImplementationX11C1Eb(%"class.gpu::VulkanImplementationX11"*, i1 zeroext) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
